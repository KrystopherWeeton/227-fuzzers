; ModuleID = '../../third_party/blink/renderer/core/paint/background_image_geometry.cc'
source_filename = "../../third_party/blink/renderer/core/paint/background_image_geometry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::Color" = type { i32 }
%"class.blink::BackgroundImageGeometry" = type <{ %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"struct.blink::PhysicalSize", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2333 }
%class.scoped_refptr.2333 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2334", %"class.WTF::Vector.630", %"class.WTF::Vector.2336", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2334" = type { %"class.base::RefCounted.2335" }
%"class.base::RefCounted.2335" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2336" = type { %"class.WTF::VectorBuffer.2337" }
%"class.WTF::VectorBuffer.2337" = type { %"class.WTF::VectorBufferBase.2338" }
%"class.WTF::VectorBufferBase.2338" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2339 }
%union.anon.2339 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2319" }
%"class.blink::Member.2319" = type { %"class.blink::MemberBase.2320" }
%"class.blink::MemberBase.2320" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2321" }
%"class.blink::Member.2321" = type { %"class.blink::MemberBase.2322" }
%"class.blink::MemberBase.2322" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1977", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1979", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1984 }
%"class.WTF::RefCounted.1977" = type { %"class.base::RefCounted.1978" }
%"class.base::RefCounted.1978" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1979" = type { %"class.absl::optional_internal::optional_data.1980" }
%"class.absl::optional_internal::optional_data.1980" = type { %"class.absl::optional_internal::optional_data_base.1981" }
%"class.absl::optional_internal::optional_data_base.1981" = type { %"class.absl::optional_internal::optional_data_dtor_base.1982" }
%"class.absl::optional_internal::optional_data_dtor_base.1982" = type { i8, %union.anon.1983 }
%union.anon.1983 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1984 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2347 }
%class.scoped_refptr.2347 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2357" }
%"class.blink::Member.2357" = type { %"class.blink::MemberBase.2358" }
%"class.blink::MemberBase.2358" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2353" }
%"class.blink::MemberBase.2353" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2354" }
%"class.blink::MemberBase.2354" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2355" }
%"class.blink::MemberBase.2355" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2356" }
%"class.blink::MemberBase.2356" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2348", %"class.WTF::Vector.2348" }
%"class.WTF::Vector.2348" = type { %"class.WTF::VectorBuffer.2349" }
%"class.WTF::VectorBuffer.2349" = type { %"class.WTF::VectorBufferBase.2350" }
%"class.WTF::VectorBufferBase.2350" = type { %class.scoped_refptr.2347*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2323" }
%"class.WTF::Vector.2323" = type { %"class.WTF::VectorBuffer.2324" }
%"class.WTF::VectorBuffer.2324" = type { %"class.WTF::VectorBufferBase.2325" }
%"class.WTF::VectorBufferBase.2325" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2328", %"class.absl::optional.2328", %"class.absl::optional.2328" }
%"class.absl::optional.2328" = type { %"class.absl::optional_internal::optional_data.2329" }
%"class.absl::optional_internal::optional_data.2329" = type { %"class.absl::optional_internal::optional_data_base.2330" }
%"class.absl::optional_internal::optional_data_base.2330" = type { %"class.absl::optional_internal::optional_data_dtor_base.2331" }
%"class.absl::optional_internal::optional_data_dtor_base.2331" = type { i8, %union.anon.2332 }
%union.anon.2332 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2343" }
%"class.WTF::VectorBuffer.2343" = type { %"class.WTF::VectorBufferBase.2344", [32 x i8] }
%"class.WTF::VectorBufferBase.2344" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.1985", %"class.blink::Persistent.1991", %"class.std::__1::unique_ptr.2015", %"class.blink::CullRect", %"class.std::__1::unique_ptr.2031" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1985" = type { %"class.std::__1::__compressed_pair.1986" }
%"class.std::__1::__compressed_pair.1986" = type { %"struct.std::__1::__compressed_pair_elem.1987" }
%"struct.std::__1::__compressed_pair_elem.1987" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.1991" = type { %"class.blink::PersistentBase.1992" }
%"class.blink::PersistentBase.1992" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.1997", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.2010" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1965", %"class.blink::Member.1967", %"class.blink::Member.1969", %"class.blink::Member.1971", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.1995", %"class.blink::Member.1757", %"class.blink::Member.1757", i8, [7 x i8] }>
%"class.blink::Member.1995" = type { %"class.blink::MemberBase.1996" }
%"class.blink::MemberBase.1996" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1963", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1973", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1973" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1974", { i64, i64 } }
%"class.blink::WeakMember.1974" = type { %"class.blink::MemberBase.1758" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1963", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1997" = type { %"class.std::__1::__compressed_pair.1998" }
%"class.std::__1::__compressed_pair.1998" = type { %"struct.std::__1::__compressed_pair_elem.1999" }
%"struct.std::__1::__compressed_pair_elem.1999" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.2000", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1819" }
%"class.WTF::HashMap.2000" = type { %"class.WTF::HashTable.2001" }
%"class.WTF::HashTable.2001" = type <{ %"struct.WTF::KeyValuePair.2004"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2004" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.1819" = type { %"class.WTF::VectorBuffer.1820" }
%"class.WTF::VectorBuffer.1820" = type { %"class.WTF::VectorBufferBase.1821" }
%"class.WTF::VectorBufferBase.1821" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2008" }
%"class.blink::Member.2008" = type { %"class.blink::MemberBase.2009" }
%"class.blink::MemberBase.2009" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2008" }
%"class.absl::optional.2010" = type { %"class.absl::optional_internal::optional_data.2011" }
%"class.absl::optional_internal::optional_data.2011" = type { %"class.absl::optional_internal::optional_data_base.2012" }
%"class.absl::optional_internal::optional_data_base.2012" = type { %"class.absl::optional_internal::optional_data_dtor_base.2013" }
%"class.absl::optional_internal::optional_data_dtor_base.2013" = type { i8, %union.anon.2014 }
%union.anon.2014 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.2015" = type { %"class.std::__1::__compressed_pair.2016" }
%"class.std::__1::__compressed_pair.2016" = type { %"struct.std::__1::__compressed_pair_elem.2017" }
%"struct.std::__1::__compressed_pair_elem.2017" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.2018", %"class.WTF::Vector.2018", %"class.WTF::HashMap.2023", %"class.WTF::Vector.2018", i8, [7 x i8] }>
%"class.WTF::HashMap.2023" = type { %"class.WTF::HashTable.2024" }
%"class.WTF::HashTable.2024" = type <{ %"struct.WTF::KeyValuePair.2027"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2027" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.2018" }
%"class.WTF::Vector.2018" = type { %"class.WTF::VectorBuffer.2019" }
%"class.WTF::VectorBuffer.2019" = type { %"class.WTF::VectorBufferBase.2020" }
%"class.WTF::VectorBufferBase.2020" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.2031" = type { %"class.std::__1::__compressed_pair.2032" }
%"class.std::__1::__compressed_pair.2032" = type { %"struct.std::__1::__compressed_pair_elem.2033" }
%"struct.std::__1::__compressed_pair_elem.2033" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.2034", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.2040", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.2046", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.2034" = type { %"class.std::__1::__compressed_pair.2035" }
%"class.std::__1::__compressed_pair.2035" = type { %"struct.std::__1::__compressed_pair_elem.2036" }
%"struct.std::__1::__compressed_pair_elem.2036" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.2040" = type { %"class.std::__1::__compressed_pair.2041" }
%"class.std::__1::__compressed_pair.2041" = type { %"struct.std::__1::__compressed_pair_elem.2042" }
%"struct.std::__1::__compressed_pair_elem.2042" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type <{ %"class.blink::GraphicsLayerClient", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.2053", %"class.std::__1::unique_ptr.2053", %"class.blink::IntSize", %"class.std::__1::unique_ptr.2053", %"class.std::__1::unique_ptr.2053", %"class.std::__1::unique_ptr.2053", %"class.std::__1::unique_ptr.2053", %"class.std::__1::unique_ptr.2053", %"class.std::__1::unique_ptr.2053", %"class.std::__1::unique_ptr.2053", %"class.blink::IntSize", %"class.WTF::Vector.2258", %"class.WTF::Vector.2258", %"struct.blink::PhysicalRect", i8, [7 x i8] }>
%"class.blink::GraphicsLayerClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2053" = type { %"class.std::__1::__compressed_pair.2054" }
%"class.std::__1::__compressed_pair.2054" = type { %"struct.std::__1::__compressed_pair_elem.2055" }
%"struct.std::__1::__compressed_pair_elem.2055" = type { %"class.blink::GraphicsLayer"* }
%"class.blink::GraphicsLayer" = type { %"class.blink::DisplayItemClient.base", %"class.blink::LayerAsJSONClient", %"class.cc::ContentLayerClient", %"class.blink::GraphicsLayerClient"*, %"class.blink::IntSize", %"class.blink::TransformationMatrix", i8, i32, %"class.WTF::Vector.2056", %"class.blink::GraphicsLayer"*, %"class.blink::IntRect", %class.scoped_refptr.2061, %class.scoped_refptr.2062, %class.scoped_refptr.2119, i32, %"class.std::__1::unique_ptr.1797", %"class.blink::IntRect", %"class.std::__1::unique_ptr.2215", %"class.std::__1::unique_ptr.2215", %"class.std::__1::unique_ptr.2221", %"class.base::RepeatingCallback.2254", i32, i64 }
%"class.blink::LayerAsJSONClient" = type { i32 (...)** }
%"class.cc::ContentLayerClient" = type { i32 (...)** }
%"class.WTF::Vector.2056" = type { %"class.WTF::VectorBuffer.2057" }
%"class.WTF::VectorBuffer.2057" = type { %"class.WTF::VectorBufferBase.2058" }
%"class.WTF::VectorBufferBase.2058" = type { %"class.blink::GraphicsLayer"**, i32, i32 }
%class.scoped_refptr.2061 = type { %"class.cc::PictureLayer"* }
%"class.cc::PictureLayer" = type opaque
%class.scoped_refptr.2062 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.2063", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.2080", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.2099" }>
%"class.base::RefCounted.2063" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.2064", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.2064" = type { %"class.std::__1::__vector_base.2065" }
%"class.std::__1::__vector_base.2065" = type { %class.scoped_refptr.2062*, %class.scoped_refptr.2062*, %"class.std::__1::__compressed_pair.2066" }
%"class.std::__1::__compressed_pair.2066" = type { %"struct.std::__1::__compressed_pair_elem.2067" }
%"struct.std::__1::__compressed_pair_elem.2067" = type { %class.scoped_refptr.2062* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2071" }
%"class.base::internal::flat_tree.2071" = type { %"class.std::__1::vector.2072" }
%"class.std::__1::vector.2072" = type { %"class.std::__1::__vector_base.2073" }
%"class.std::__1::__vector_base.2073" = type { %"struct.std::__1::pair.2074"*, %"struct.std::__1::pair.2074"*, %"class.std::__1::__compressed_pair.2075" }
%"struct.std::__1::pair.2074" = type opaque
%"class.std::__1::__compressed_pair.2075" = type { %"struct.std::__1::__compressed_pair_elem.2076" }
%"struct.std::__1::__compressed_pair_elem.2076" = type { %"struct.std::__1::pair.2074"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.2080" = type { %"class.std::__1::__compressed_pair.2081" }
%"class.std::__1::__compressed_pair.2081" = type { %"struct.std::__1::__compressed_pair_elem.2082" }
%"struct.std::__1::__compressed_pair_elem.2082" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.2083", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.2088" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.2083" = type { %"class.absl::optional_internal::optional_data.2084" }
%"class.absl::optional_internal::optional_data.2084" = type { %"class.absl::optional_internal::optional_data_base.2085" }
%"class.absl::optional_internal::optional_data_base.2085" = type { %"class.absl::optional_internal::optional_data_dtor_base.2086" }
%"class.absl::optional_internal::optional_data_dtor_base.2086" = type { i8, %union.anon.2087 }
%union.anon.2087 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.2088" = type { %"class.std::__1::__vector_base.2089" }
%"class.std::__1::__vector_base.2089" = type { %"class.std::__1::unique_ptr.2090"*, %"class.std::__1::unique_ptr.2090"*, %"class.std::__1::__compressed_pair.2091" }
%"class.std::__1::unique_ptr.2090" = type opaque
%"class.std::__1::__compressed_pair.2091" = type { %"struct.std::__1::__compressed_pair_elem.2092" }
%"struct.std::__1::__compressed_pair_elem.2092" = type { %"class.std::__1::unique_ptr.2090"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.2099" = type { %"class.std::__1::__compressed_pair.2100" }
%"class.std::__1::__compressed_pair.2100" = type { %"struct.std::__1::__compressed_pair_elem.2101" }
%"struct.std::__1::__compressed_pair_elem.2101" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.2102", %"class.std::__1::vector.2102", %"class.std::__1::vector.2109" }
%"class.std::__1::vector.2102" = type { %"class.std::__1::__vector_base.2103" }
%"class.std::__1::__vector_base.2103" = type { i8**, i8**, %"class.std::__1::__compressed_pair.2104" }
%"class.std::__1::__compressed_pair.2104" = type { %"struct.std::__1::__compressed_pair_elem.2105" }
%"struct.std::__1::__compressed_pair_elem.2105" = type { i8** }
%"class.std::__1::vector.2109" = type { %"class.std::__1::__vector_base.2110" }
%"class.std::__1::__vector_base.2110" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.2111" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2111" = type { %"struct.std::__1::__compressed_pair_elem.2112" }
%"struct.std::__1::__compressed_pair_elem.2112" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%class.scoped_refptr.2119 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.2120", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.824", %"class.std::__1::vector.2201", %"class.std::__1::vector.2208", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.2120" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.2121", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.2121" = type { %"class.std::__1::__vector_base.2122" }
%"class.std::__1::__vector_base.2122" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.2123" }
%"class.std::__1::__compressed_pair.2123" = type { %"struct.std::__1::__compressed_pair_elem.2124" }
%"struct.std::__1::__compressed_pair_elem.2124" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map.2128", %"class.std::__1::vector.2138", %"class.base::flat_map.2152", i8, i8, [6 x i8], %"class.cc::RTree.2162", %"class.std::__1::vector.2193" }
%"class.base::flat_map.2128" = type { %"class.base::internal::flat_tree.2129" }
%"class.base::internal::flat_tree.2129" = type { %"class.std::__1::vector.2130" }
%"class.std::__1::vector.2130" = type { %"class.std::__1::__vector_base.2131" }
%"class.std::__1::__vector_base.2131" = type { %"struct.std::__1::pair.2132"*, %"struct.std::__1::pair.2132"*, %"class.std::__1::__compressed_pair.2133" }
%"struct.std::__1::pair.2132" = type opaque
%"class.std::__1::__compressed_pair.2133" = type { %"struct.std::__1::__compressed_pair_elem.2134" }
%"struct.std::__1::__compressed_pair_elem.2134" = type { %"struct.std::__1::pair.2132"* }
%"class.std::__1::vector.2138" = type { %"class.std::__1::__vector_base.2139" }
%"class.std::__1::__vector_base.2139" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.2147" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.2140", i32, i32 }
%"class.std::__1::vector.2140" = type { %"class.std::__1::__vector_base.2141" }
%"class.std::__1::__vector_base.2141" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.2142" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.2142" = type { %"struct.std::__1::__compressed_pair_elem.2143" }
%"struct.std::__1::__compressed_pair_elem.2143" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.2147" = type { %"struct.std::__1::__compressed_pair_elem.2148" }
%"struct.std::__1::__compressed_pair_elem.2148" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.2152" = type { %"class.base::internal::flat_tree.2153" }
%"class.base::internal::flat_tree.2153" = type { %"class.std::__1::vector.2154" }
%"class.std::__1::vector.2154" = type { %"class.std::__1::__vector_base.2155" }
%"class.std::__1::__vector_base.2155" = type { %"struct.std::__1::pair.2156"*, %"struct.std::__1::pair.2156"*, %"class.std::__1::__compressed_pair.2157" }
%"struct.std::__1::pair.2156" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2157" = type { %"struct.std::__1::__compressed_pair_elem.2158" }
%"struct.std::__1::__compressed_pair_elem.2158" = type { %"struct.std::__1::pair.2156"* }
%"class.cc::RTree.2162" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.2185", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.2175", %"class.absl::optional.2180", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.2163, %class.sk_sp.2166, %"class.gfx::Rect", i32, %class.sk_sp.2171, %class.sk_sp.2172, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.2163, %class.scoped_refptr.2173 }
%class.sk_sp.2166 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.2171 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.2140" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.2164, i32, i32 }
%class.sk_sp.2164 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.2165, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.2165 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.2172 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2163 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.2173 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2174", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2174" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional.2175" = type { %"class.absl::optional_internal::optional_data.2176" }
%"class.absl::optional_internal::optional_data.2176" = type { %"class.absl::optional_internal::optional_data_base.2177" }
%"class.absl::optional_internal::optional_data_base.2177" = type { %"class.absl::optional_internal::optional_data_dtor_base.2178" }
%"class.absl::optional_internal::optional_data_dtor_base.2178" = type { i8, %union.anon.2179 }
%union.anon.2179 = type { i64 }
%"class.absl::optional.2180" = type { %"class.absl::optional_internal::optional_data.2181" }
%"class.absl::optional_internal::optional_data.2181" = type { %"class.absl::optional_internal::optional_data_base.2182" }
%"class.absl::optional_internal::optional_data_base.2182" = type { %"class.absl::optional_internal::optional_data_dtor_base.2183" }
%"class.absl::optional_internal::optional_data_dtor_base.2183" = type { i8, %union.anon.2184 }
%union.anon.2184 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.2185" = type { %"class.std::__1::__vector_base.2186" }
%"class.std::__1::__vector_base.2186" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.2187" }
%"class.std::__1::__compressed_pair.2187" = type { %"struct.std::__1::__compressed_pair_elem.2188" }
%"struct.std::__1::__compressed_pair_elem.2188" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.2193" = type { %"class.std::__1::__vector_base.2194" }
%"class.std::__1::__vector_base.2194" = type { %"struct.std::__1::pair.2195"*, %"struct.std::__1::pair.2195"*, %"class.std::__1::__compressed_pair.2196" }
%"struct.std::__1::pair.2195" = type opaque
%"class.std::__1::__compressed_pair.2196" = type { %"struct.std::__1::__compressed_pair_elem.2197" }
%"struct.std::__1::__compressed_pair_elem.2197" = type { %"struct.std::__1::pair.2195"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.2167", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2167" = type { %"class.std::__1::__compressed_pair.2168" }
%"class.std::__1::__compressed_pair.2168" = type { %"struct.std::__1::__compressed_pair_elem.2169" }
%"struct.std::__1::__compressed_pair_elem.2169" = type { i8* }
%"class.std::__1::vector.2201" = type { %"class.std::__1::__vector_base.2202" }
%"class.std::__1::__vector_base.2202" = type { i64*, i64*, %"class.std::__1::__compressed_pair.2203" }
%"class.std::__1::__compressed_pair.2203" = type { %"struct.std::__1::__compressed_pair_elem.2204" }
%"struct.std::__1::__compressed_pair_elem.2204" = type { i64* }
%"class.std::__1::vector.2208" = type { %"class.std::__1::__vector_base.2209" }
%"class.std::__1::__vector_base.2209" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.2210" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.2210" = type { %"struct.std::__1::__compressed_pair_elem.2211" }
%"struct.std::__1::__compressed_pair_elem.2211" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1800, %class.scoped_refptr.1800, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1855", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1860", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1800 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1801", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1808" }
%"class.WTF::RefCounted.1801" = type { %"class.base::RefCounted.1802" }
%"class.base::RefCounted.1802" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1803", i32, [4 x i8] }>
%"class.WTF::Vector.1803" = type { %"class.WTF::VectorBuffer.1804" }
%"class.WTF::VectorBuffer.1804" = type { %"class.WTF::VectorBufferBase.1805" }
%"class.WTF::VectorBufferBase.1805" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1808" = type { %"class.WTF::VectorBuffer.1809" }
%"class.WTF::VectorBuffer.1809" = type { %"class.WTF::VectorBufferBase.1810" }
%"class.WTF::VectorBufferBase.1810" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1811", %"class.std::__1::unique_ptr.1827", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1811" = type { %"class.std::__1::__compressed_pair.1812" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1813" }
%"struct.std::__1::__compressed_pair_elem.1813" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1814", %"class.WTF::Vector.1819", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1814" = type { %"class.WTF::VectorBuffer.1815" }
%"class.WTF::VectorBuffer.1815" = type { %"class.WTF::VectorBufferBase.1816" }
%"class.WTF::VectorBufferBase.1816" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1827" = type { %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1830", %"class.absl::optional.1830" }
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, [3 x i8], %union.anon.1834 }
%union.anon.1834 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1808"*, %"class.absl::optional.1840", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1840" = type { %"class.absl::optional_internal::optional_data.1841" }
%"class.absl::optional_internal::optional_data.1841" = type { %"class.absl::optional_internal::optional_data_base.1842" }
%"class.absl::optional_internal::optional_data_base.1842" = type { %"class.absl::optional_internal::optional_data_dtor_base.1843" }
%"class.absl::optional_internal::optional_data_dtor_base.1843" = type { i8, %union.anon.1844 }
%union.anon.1844 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1845", %"class.WTF::Vector.1850" }
%"class.WTF::Vector.1845" = type { %"class.WTF::VectorBuffer.1846" }
%"class.WTF::VectorBuffer.1846" = type { %"class.WTF::VectorBufferBase.1847", [128 x i8] }
%"class.WTF::VectorBufferBase.1847" = type { i32*, i32, i32 }
%"class.WTF::Vector.1850" = type { %"class.WTF::VectorBuffer.1851" }
%"class.WTF::VectorBuffer.1851" = type { %"class.WTF::VectorBufferBase.1852", [128 x i8] }
%"class.WTF::VectorBufferBase.1852" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1855" = type { %"class.WTF::VectorBuffer.1856" }
%"class.WTF::VectorBuffer.1856" = type { %"class.WTF::VectorBufferBase.1857" }
%"class.WTF::VectorBufferBase.1857" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1860" = type { %"class.WTF::HashTable.1861" }
%"class.WTF::HashTable.1861" = type <{ %"struct.WTF::KeyValuePair.1864"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1864" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1865", %"class.WTF::Vector.1870" }
%"class.WTF::HashMap.1865" = type { %"class.WTF::HashTable.1866" }
%"class.WTF::HashTable.1866" = type <{ %"struct.WTF::KeyValuePair.1869"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1869" = type opaque
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1872" }
%"class.WTF::VectorBufferBase.1872" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2215" = type { %"class.std::__1::__compressed_pair.2216" }
%"class.std::__1::__compressed_pair.2216" = type { %"struct.std::__1::__compressed_pair_elem.2217" }
%"struct.std::__1::__compressed_pair_elem.2217" = type { %"struct.blink::GraphicsLayer::LayerState"* }
%"struct.blink::GraphicsLayer::LayerState" = type { %"class.blink::RefCountedPropertyTreeState", %"class.blink::IntPoint" }
%"class.std::__1::unique_ptr.2221" = type { %"class.std::__1::__compressed_pair.2222" }
%"class.std::__1::__compressed_pair.2222" = type { %"struct.std::__1::__compressed_pair_elem.2223" }
%"struct.std::__1::__compressed_pair_elem.2223" = type { %"class.blink::RasterInvalidator"* }
%"class.blink::RasterInvalidator" = type { %"class.gfx::Rect", %"class.WTF::Vector.2224", %class.scoped_refptr.2229, %"class.std::__1::unique_ptr.2230" }
%"class.WTF::Vector.2224" = type { %"class.WTF::VectorBuffer.2225" }
%"class.WTF::VectorBuffer.2225" = type { %"class.WTF::VectorBufferBase.2226" }
%"class.WTF::VectorBufferBase.2226" = type { %"struct.blink::RasterInvalidator::PaintChunkInfo"*, i32, i32 }
%"struct.blink::RasterInvalidator::PaintChunkInfo" = type { i32, %"class.blink::IntRect", %"class.blink::FloatClipRect", %class.SkMatrix }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%class.SkMatrix = type { [9 x float], i32 }
%class.scoped_refptr.2229 = type { %"class.blink::PaintArtifact"* }
%"class.std::__1::unique_ptr.2230" = type { %"class.std::__1::__compressed_pair.2231" }
%"class.std::__1::__compressed_pair.2231" = type { %"struct.std::__1::__compressed_pair_elem.2232" }
%"struct.std::__1::__compressed_pair_elem.2232" = type { %"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo"* }
%"struct.blink::RasterInvalidator::RasterInvalidationTrackingInfo" = type { %"class.WTF::HashMap.2233", %"class.blink::RasterInvalidationTracking" }
%"class.WTF::HashMap.2233" = type { %"class.WTF::HashTable.2234" }
%"class.WTF::HashTable.2234" = type <{ %"struct.WTF::KeyValuePair.2237"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2237" = type opaque
%"class.blink::RasterInvalidationTracking" = type { %"class.WTF::Vector.2238", %class.sk_sp.2166, %"class.blink::IntRect", %"class.blink::Region", %"class.WTF::Vector.2243", %class.sk_sp.2166 }
%"class.WTF::Vector.2238" = type { %"class.WTF::VectorBuffer.2239" }
%"class.WTF::VectorBuffer.2239" = type { %"class.WTF::VectorBufferBase.2240" }
%"class.WTF::VectorBufferBase.2240" = type { %"struct.blink::RasterInvalidationInfo"*, i32, i32 }
%"struct.blink::RasterInvalidationInfo" = type <{ %"class.blink::DisplayItemClient"*, %"class.WTF::String", %"class.blink::IntRect", i8, [7 x i8] }>
%"class.WTF::Vector.2243" = type { %"class.WTF::VectorBuffer.2244" }
%"class.WTF::VectorBuffer.2244" = type { %"class.WTF::VectorBufferBase.2245" }
%"class.WTF::VectorBufferBase.2245" = type { %"struct.blink::RasterUnderInvalidation"*, i32, i32 }
%"struct.blink::RasterUnderInvalidation" = type { i32, i32, i32, i32 }
%"class.base::RepeatingCallback.2254" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.WTF::Vector.2258" = type { %"class.WTF::VectorBuffer.2259" }
%"class.WTF::VectorBuffer.2259" = type { %"class.WTF::VectorBufferBase.2260" }
%"class.WTF::VectorBufferBase.2260" = type { %"struct.blink::GraphicsLayerPaintInfo"*, i32, i32 }
%"struct.blink::GraphicsLayerPaintInfo" = type <{ %"class.blink::PaintLayer"*, %"struct.blink::PhysicalRect", %"class.blink::ClipRect", [4 x i8], %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::IntSize", i8, [7 x i8] }>
%"class.blink::ClipRect" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.blink::Persistent.2046" = type { %"class.blink::PersistentBase.2047" }
%"class.blink::PersistentBase.2047" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1708", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.1928", %"class.std::__1::unique_ptr.1934", %"class.std::__1::unique_ptr.1940", %class.scoped_refptr.1704, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.1946", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1667", %"class.std::__1::unique_ptr.1677" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1623, %"class.WTF::Vector.1624", %"class.std::__1::unique_ptr.1629", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1650, %"class.blink::Persistent.1651" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1623 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1624" = type { %"class.WTF::VectorBuffer.1625" }
%"class.WTF::VectorBuffer.1625" = type { %"class.WTF::VectorBufferBase.1626", [8 x i8] }
%"class.WTF::VectorBufferBase.1626" = type { %class.scoped_refptr.1623*, i32, i32 }
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1632", %"class.absl::optional.1637", %"class.absl::optional.1642" }
%"class.absl::optional.1632" = type { %"class.absl::optional_internal::optional_data.1633" }
%"class.absl::optional_internal::optional_data.1633" = type { %"class.absl::optional_internal::optional_data_base.1634" }
%"class.absl::optional_internal::optional_data_base.1634" = type { %"class.absl::optional_internal::optional_data_dtor_base.1635" }
%"class.absl::optional_internal::optional_data_dtor_base.1635" = type { i8, %union.anon.1636 }
%union.anon.1636 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1637" = type { %"class.absl::optional_internal::optional_data.1638" }
%"class.absl::optional_internal::optional_data.1638" = type { %"class.absl::optional_internal::optional_data_base.1639" }
%"class.absl::optional_internal::optional_data_base.1639" = type { %"class.absl::optional_internal::optional_data_dtor_base.1640" }
%"class.absl::optional_internal::optional_data_dtor_base.1640" = type { i8, [3 x i8], %union.anon.1641 }
%union.anon.1641 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1642" = type { %"class.absl::optional_internal::optional_data.1643" }
%"class.absl::optional_internal::optional_data.1643" = type { %"class.absl::optional_internal::optional_data_base.1644" }
%"class.absl::optional_internal::optional_data_base.1644" = type { %"class.absl::optional_internal::optional_data_dtor_base.1645" }
%"class.absl::optional_internal::optional_data_dtor_base.1645" = type { i8, %union.anon.1646 }
%union.anon.1646 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1650 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1651" = type { %"class.blink::PersistentBase.1652" }
%"class.blink::PersistentBase.1652" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1655", %"struct.blink::PhysicalRect", %"class.blink::Member.1665" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.WTF::HashSet.1658"* }
%"class.WTF::HashSet.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1665" = type { %"class.blink::MemberBase.1666" }
%"class.blink::MemberBase.1666" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1667" = type { %"class.blink::PersistentBase.1668" }
%"class.blink::PersistentBase.1668" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1671", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1680", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1680" = type { %"class.WTF::HashTable.1683", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1683" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1686", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1689, %"class.std::__1::unique_ptr.1690", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1689 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1975", i16, %class.scoped_refptr.1689 }
%"class.WTF::ThreadSafeRefCounted.1975" = type { %"class.base::RefCountedThreadSafe.1976" }
%"class.base::RefCountedThreadSafe.1976" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { %"class.WTF::Vector.1693"* }
%"class.WTF::Vector.1693" = type { %"class.WTF::VectorBuffer.1694" }
%"class.WTF::VectorBuffer.1694" = type { %"class.WTF::VectorBufferBase.1695" }
%"class.WTF::VectorBufferBase.1695" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1704, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1708" = type { %"class.blink::MemberBase.1709" }
%"class.blink::MemberBase.1709" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1712", %"class.blink::Member.1717", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1719", i8, i32, %"class.blink::Color", %"class.absl::optional.1722", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1727", %"class.blink::Member.1729", %"class.blink::Member.1729", %"class.std::__1::unique_ptr.1732", i32, [4 x i8], %"class.WTF::HashSet.1735", %"class.blink::Member.1742", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1744", %"class.blink::HeapHashSet.1751", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1759", i8, %"class.blink::Member.1765", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1777", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1791", i8, %"class.std::__1::unique_ptr.1797", %"class.std::__1::unique_ptr.1878", %"class.WTF::Vector.1884", i32, %class.scoped_refptr.1889, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1890", %"class.blink::Member.1892", %"class.blink::Member.1894", %"class.blink::HeapHashSet.1896", %"class.blink::HeapHashSet.1903", %"class.std::__1::unique_ptr.1910", %"class.std::__1::unique_ptr.1917", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1712" = type { %"class.WTF::HashTable.1713" }
%"class.WTF::HashTable.1713" = type <{ %class.scoped_refptr.1716*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1716 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1717" = type { %"class.blink::MemberBase.1718" }
%"class.blink::MemberBase.1718" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1719" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1720", { i64, i64 } }
%"class.blink::WeakMember.1720" = type { %"class.blink::MemberBase.1721" }
%"class.blink::MemberBase.1721" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1722" = type { %"class.absl::optional_internal::optional_data.1723" }
%"class.absl::optional_internal::optional_data.1723" = type { %"class.absl::optional_internal::optional_data_base.1724" }
%"class.absl::optional_internal::optional_data_base.1724" = type { %"class.absl::optional_internal::optional_data_dtor_base.1725" }
%"class.absl::optional_internal::optional_data_dtor_base.1725" = type { i8, %union.anon.1726 }
%union.anon.1726 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1727" = type { %"class.blink::MemberBase.1728" }
%"class.blink::MemberBase.1728" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.1730" }
%"class.blink::MemberBase.1730" = type { %"class.blink::HeapHashSet.1731"* }
%"class.blink::HeapHashSet.1731" = type opaque
%"class.std::__1::unique_ptr.1732" = type { %"class.std::__1::__compressed_pair.1733" }
%"class.std::__1::__compressed_pair.1733" = type { %"struct.std::__1::__compressed_pair_elem.1734" }
%"struct.std::__1::__compressed_pair_elem.1734" = type { %"class.WTF::HashSet.1735"* }
%"class.WTF::HashSet.1735" = type { %"class.WTF::HashTable.1736" }
%"class.WTF::HashTable.1736" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1744" = type { %"class.WTF::HashSet.1747" }
%"class.WTF::HashSet.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"class.blink::Member.1750"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1750" = type opaque
%"class.blink::HeapHashSet.1751" = type { %"class.WTF::HashSet.1754" }
%"class.WTF::HashSet.1754" = type { %"class.WTF::HashTable.1755" }
%"class.WTF::HashTable.1755" = type <{ %"class.blink::Member.1757"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1759" = type { %"class.std::__1::__compressed_pair.1760" }
%"class.std::__1::__compressed_pair.1760" = type { %"struct.std::__1::__compressed_pair_elem.1761" }
%"struct.std::__1::__compressed_pair_elem.1761" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1769", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1769" = type { %"class.WTF::HashTable.1770" }
%"class.WTF::HashTable.1770" = type <{ %"struct.WTF::KeyValuePair.1772"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1772" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1773", i32, i32 }
%"class.WTF::Vector.1773" = type { %"class.WTF::VectorBuffer.1774" }
%"class.WTF::VectorBuffer.1774" = type { %"class.WTF::VectorBufferBase.1775" }
%"class.WTF::VectorBufferBase.1775" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1777" = type { %"class.WTF::LinkedHashSet.1780" }
%"class.WTF::LinkedHashSet.1780" = type { %"class.WTF::HashMap.1781", %"class.WTF::VectorBackedLinkedList.1785" }
%"class.WTF::HashMap.1781" = type { %"class.WTF::HashTable.1782" }
%"class.WTF::HashTable.1782" = type <{ %"struct.WTF::KeyValuePair.1784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1784" = type opaque
%"class.WTF::VectorBackedLinkedList.1785" = type { %"class.WTF::Vector.1786", i32, i32 }
%"class.WTF::Vector.1786" = type { %"class.WTF::VectorBuffer.1787" }
%"class.WTF::VectorBuffer.1787" = type { %"class.WTF::VectorBufferBase.1788" }
%"class.WTF::VectorBufferBase.1788" = type { %"class.WTF::VectorBackedLinkedListNode.1789"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1789" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1791" = type { %"class.std::__1::__compressed_pair.1792" }
%"class.std::__1::__compressed_pair.1792" = type { %"struct.std::__1::__compressed_pair_elem.1793" }
%"struct.std::__1::__compressed_pair_elem.1793" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1878" = type { %"class.std::__1::__compressed_pair.1879" }
%"class.std::__1::__compressed_pair.1879" = type { %"struct.std::__1::__compressed_pair_elem.1880" }
%"struct.std::__1::__compressed_pair_elem.1880" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886" }
%"class.WTF::VectorBufferBase.1886" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1889 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1890" = type { %"class.blink::MemberBase.1891" }
%"class.blink::MemberBase.1891" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1892" = type { %"class.blink::MemberBase.1893" }
%"class.blink::MemberBase.1893" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1896" = type { %"class.WTF::HashSet.1899" }
%"class.WTF::HashSet.1899" = type { %"class.WTF::HashTable.1900" }
%"class.WTF::HashTable.1900" = type <{ %"class.blink::WeakMember.1902"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1902" = type opaque
%"class.blink::HeapHashSet.1903" = type { %"class.WTF::HashSet.1906" }
%"class.WTF::HashSet.1906" = type { %"class.WTF::HashTable.1907" }
%"class.WTF::HashTable.1907" = type <{ %"class.blink::WeakMember.1909"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1909" = type opaque
%"class.std::__1::unique_ptr.1910" = type { %"class.std::__1::__compressed_pair.1911" }
%"class.std::__1::__compressed_pair.1911" = type { %"struct.std::__1::__compressed_pair_elem.1912" }
%"struct.std::__1::__compressed_pair_elem.1912" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1913" }
%"class.base::time_internal::TimeBase.1913" = type { i64 }
%"class.std::__1::unique_ptr.1917" = type { %"class.std::__1::__compressed_pair.1918" }
%"class.std::__1::__compressed_pair.1918" = type { %"struct.std::__1::__compressed_pair_elem.1919" }
%"struct.std::__1::__compressed_pair_elem.1919" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1920", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1920" = type { %"class.absl::optional_internal::optional_data.1921" }
%"class.absl::optional_internal::optional_data.1921" = type { %"class.absl::optional_internal::optional_data_base.1922" }
%"class.absl::optional_internal::optional_data_base.1922" = type { %"class.absl::optional_internal::optional_data_dtor_base.1923" }
%"class.absl::optional_internal::optional_data_dtor_base.1923" = type { i8, %union.anon.1924 }
%union.anon.1924 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.1928" = type { %"class.std::__1::__compressed_pair.1929" }
%"class.std::__1::__compressed_pair.1929" = type { %"struct.std::__1::__compressed_pair_elem.1930" }
%"struct.std::__1::__compressed_pair_elem.1930" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.1934" = type { %"class.std::__1::__compressed_pair.1935" }
%"class.std::__1::__compressed_pair.1935" = type { %"struct.std::__1::__compressed_pair_elem.1936" }
%"struct.std::__1::__compressed_pair_elem.1936" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.1940" = type { %"class.std::__1::__compressed_pair.1941" }
%"class.std::__1::__compressed_pair.1941" = type { %"struct.std::__1::__compressed_pair_elem.1942" }
%"struct.std::__1::__compressed_pair_elem.1942" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1704 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.1946" = type { %"class.blink::PersistentBase.1947" }
%"class.blink::PersistentBase.1947" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.1950", i64 }
%"class.blink::HeapVector.1950" = type { %"class.WTF::Vector.1953" }
%"class.WTF::Vector.1953" = type { %"class.WTF::VectorBuffer.1954" }
%"class.WTF::VectorBuffer.1954" = type { %"class.WTF::VectorBufferBase.1955", [368 x i8] }
%"class.WTF::VectorBufferBase.1955" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1757", i8, %"class.blink::Member.1956", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1956" = type { %"class.blink::MemberBase.1957" }
%"class.blink::MemberBase.1957" = type { %"class.blink::HeapLinkedHashSet.1958"* }
%"class.blink::HeapLinkedHashSet.1958" = type opaque
%"class.blink::LayoutTableCell" = type { %"class.blink::LayoutBlockFlow", %"class.blink::LayoutNGTableCellInterface", i32, %"class.std::__1::unique_ptr.2263", i32, i32 }
%"class.blink::LayoutNGTableCellInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2263" = type { %"class.std::__1::__compressed_pair.2264" }
%"class.std::__1::__compressed_pair.2264" = type { %"struct.std::__1::__compressed_pair_elem.2265" }
%"struct.std::__1::__compressed_pair_elem.2265" = type { %"class.blink::CollapsedBorderValues"* }
%"class.blink::CollapsedBorderValues" = type { [4 x %"class.blink::CollapsedBorderValue"], %"class.blink::LayoutRect" }
%"class.blink::CollapsedBorderValue" = type { %"class.blink::Color", i32 }
%"class.blink::LayoutNGTableCell" = type <{ %"class.blink::LayoutNGBlockFlowMixin", %"class.blink::LayoutNGTableCellInterface", %"struct.blink::NGBoxStrut", i8, [7 x i8] }>
%"class.blink::LayoutNGBlockFlowMixin" = type { %"class.blink::LayoutNGMixin", %"class.std::__1::unique_ptr.2313" }
%"class.blink::LayoutNGMixin" = type { %"class.blink::LayoutBlockFlow" }
%"class.std::__1::unique_ptr.2313" = type { %"class.std::__1::__compressed_pair.2314" }
%"class.std::__1::__compressed_pair.2314" = type { %"struct.std::__1::__compressed_pair_elem.2315" }
%"struct.std::__1::__compressed_pair_elem.2315" = type { %"struct.blink::NGInlineNodeData"* }
%"struct.blink::NGInlineNodeData" = type opaque
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::LayoutTable::ColAndColGroup" = type <{ %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"*, i8, i8, [6 x i8] }>
%"class.blink::LayoutTableCol" = type { %"class.blink::LayoutTableBoxComponent.base", i32 }
%"class.blink::LayoutTableBoxComponent.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i32, %"class.blink::CullRect" }>
%"class.blink::LayoutTable" = type { %"class.blink::LayoutBlock.base", %"class.blink::LayoutNGTableInterface", %"class.WTF::Vector.2269", %"class.WTF::Vector.2274", %"class.WTF::Vector.2278", %"class.WTF::Vector.2283", %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"*, %"class.blink::LayoutTableSection"*, %"class.std::__1::unique_ptr.2307", i16, i32, i16, i16, i32, i32, i32, i32, i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutNGTableInterface" = type { i32 (...)** }
%"class.WTF::Vector.2269" = type { %"class.WTF::VectorBuffer.2270" }
%"class.WTF::VectorBuffer.2270" = type { %"class.WTF::VectorBufferBase.2271" }
%"class.WTF::VectorBufferBase.2271" = type { %"struct.blink::LayoutTable::ColumnStruct"*, i32, i32 }
%"struct.blink::LayoutTable::ColumnStruct" = type { i32 }
%"class.WTF::Vector.2274" = type { %"class.WTF::VectorBuffer.2275" }
%"class.WTF::VectorBuffer.2275" = type { %"class.WTF::VectorBufferBase.1847" }
%"class.WTF::Vector.2278" = type { %"class.WTF::VectorBuffer.2279" }
%"class.WTF::VectorBuffer.2279" = type { %"class.WTF::VectorBufferBase.2280" }
%"class.WTF::VectorBufferBase.2280" = type { %"class.blink::LayoutTableCaption"**, i32, i32 }
%"class.blink::LayoutTableCaption" = type { %"class.blink::LayoutBlockFlow" }
%"class.WTF::Vector.2283" = type { %"class.WTF::VectorBuffer.2284" }
%"class.WTF::VectorBuffer.2284" = type { %"class.WTF::VectorBufferBase.2285" }
%"class.WTF::VectorBufferBase.2285" = type { %"class.blink::LayoutTableCol"**, i32, i32 }
%"class.blink::LayoutTableSection" = type <{ %"class.blink::LayoutTableBoxComponent.base", [4 x i8], %"class.blink::LayoutNGTableSectionInterface", %"class.WTF::Vector.2288", %"class.WTF::Vector.2274", %"class.WTF::Vector.2274", i8, [3 x i8], i32, i32, i8, [3 x i8], %"class.WTF::HashSet.2303", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::LayoutNGTableSectionInterface" = type { i32 (...)** }
%"class.WTF::Vector.2288" = type { %"class.WTF::VectorBuffer.2289" }
%"class.WTF::VectorBuffer.2289" = type { %"class.WTF::VectorBufferBase.2290" }
%"class.WTF::VectorBufferBase.2290" = type { %"struct.blink::LayoutTableSection::TableGridRow"*, i32, i32 }
%"struct.blink::LayoutTableSection::TableGridRow" = type <{ %"class.WTF::Vector.2291", %"class.blink::LayoutTableRow"*, %"class.blink::LayoutUnit", %"class.blink::Length", [4 x i8] }>
%"class.WTF::Vector.2291" = type { %"class.WTF::VectorBuffer.2292" }
%"class.WTF::VectorBuffer.2292" = type { %"class.WTF::VectorBufferBase.2293" }
%"class.WTF::VectorBufferBase.2293" = type { %"class.blink::TableGridCell"*, i32, i32 }
%"class.blink::TableGridCell" = type <{ %"class.WTF::Vector.2294", i8, [7 x i8] }>
%"class.WTF::Vector.2294" = type { %"class.WTF::VectorBuffer.2295" }
%"class.WTF::VectorBuffer.2295" = type { %"class.WTF::VectorBufferBase.2296", [8 x i8] }
%"class.WTF::VectorBufferBase.2296" = type { %"class.blink::LayoutTableCell"**, i32, i32 }
%"class.blink::LayoutTableRow" = type <{ %"class.blink::LayoutTableBoxComponent.base", [4 x i8], %"class.blink::LayoutNGTableRowInterface", i32, [4 x i8] }>
%"class.blink::LayoutNGTableRowInterface" = type { i32 (...)** }
%"class.WTF::HashSet.2303" = type { %"class.WTF::HashTable.2304" }
%"class.WTF::HashTable.2304" = type <{ %"class.blink::LayoutTableCell"**, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2307" = type { %"class.std::__1::__compressed_pair.2308" }
%"class.std::__1::__compressed_pair.2308" = type { %"struct.std::__1::__compressed_pair_elem.2309" }
%"struct.std::__1::__compressed_pair_elem.2309" = type { %"class.blink::TableLayoutAlgorithm"* }
%"class.blink::TableLayoutAlgorithm" = type opaque
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"struct.blink::BorderEdge" = type { %"class.blink::Color", i8, i8, float }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>

@__const._ZNK5blink23BackgroundImageGeometry26ComputeDestRectAdjustmentsERKNS_9FillLayerERKNS_12PhysicalRectEbRNS_17LayoutRectOutsetsES8_.edges = private unnamed_addr constant [4 x { %"class.blink::Color", i8, i8, [2 x i8], float }] [{ %"class.blink::Color", i8, i8, [2 x i8], float } { %"class.blink::Color" { i32 -1431655766 }, i8 -86, i8 -86, [2 x i8] c"\AA\AA", float 0xFFFFFFFFE0000000 }, { %"class.blink::Color", i8, i8, [2 x i8], float } { %"class.blink::Color" { i32 -1431655766 }, i8 -86, i8 -86, [2 x i8] c"\AA\AA", float 0xFFFFFFFFE0000000 }, { %"class.blink::Color", i8, i8, [2 x i8], float } { %"class.blink::Color" { i32 -1431655766 }, i8 -86, i8 -86, [2 x i8] c"\AA\AA", float 0xFFFFFFFFE0000000 }, { %"class.blink::Color", i8, i8, [2 x i8], float } { %"class.blink::Color" { i32 -1431655766 }, i8 -86, i8 -86, [2 x i8] c"\AA\AA", float 0xFFFFFFFFE0000000 }], align 16

@_ZN5blink23BackgroundImageGeometryC1ERKNS_10LayoutViewERKNS_14PhysicalOffsetE = hidden unnamed_addr alias void (%"class.blink::BackgroundImageGeometry"*, %"class.blink::LayoutView"*, %"struct.blink::PhysicalOffset"*), void (%"class.blink::BackgroundImageGeometry"*, %"class.blink::LayoutView"*, %"struct.blink::PhysicalOffset"*)* @_ZN5blink23BackgroundImageGeometryC2ERKNS_10LayoutViewERKNS_14PhysicalOffsetE
@_ZN5blink23BackgroundImageGeometryC1ERKNS_20LayoutBoxModelObjectE = hidden unnamed_addr alias void (%"class.blink::BackgroundImageGeometry"*, %"class.blink::LayoutBoxModelObject"*), void (%"class.blink::BackgroundImageGeometry"*, %"class.blink::LayoutBoxModelObject"*)* @_ZN5blink23BackgroundImageGeometryC2ERKNS_20LayoutBoxModelObjectE
@_ZN5blink23BackgroundImageGeometryC1ERKNS_15LayoutTableCellEPKNS_12LayoutObjectE = hidden unnamed_addr alias void (%"class.blink::BackgroundImageGeometry"*, %"class.blink::LayoutTableCell"*, %"class.blink::LayoutObject"*), void (%"class.blink::BackgroundImageGeometry"*, %"class.blink::LayoutTableCell"*, %"class.blink::LayoutObject"*)* @_ZN5blink23BackgroundImageGeometryC2ERKNS_15LayoutTableCellEPKNS_12LayoutObjectE
@_ZN5blink23BackgroundImageGeometryC1ERKNS_17LayoutNGTableCellENS_14PhysicalOffsetERKNS_9LayoutBoxENS_12PhysicalSizeE = hidden unnamed_addr alias void (%"class.blink::BackgroundImageGeometry"*, %"class.blink::LayoutNGTableCell"*, i64, %"class.blink::LayoutBox"*, i64), void (%"class.blink::BackgroundImageGeometry"*, %"class.blink::LayoutNGTableCell"*, i64, %"class.blink::LayoutBox"*, i64)* @_ZN5blink23BackgroundImageGeometryC2ERKNS_17LayoutNGTableCellENS_14PhysicalOffsetERKNS_9LayoutBoxENS_12PhysicalSizeE

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink24NeedsFullSizeDestinationERKNS_9FillLayerE(%"class.blink::FillLayer"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %0, i64 0, i32 5
  %3 = bitcast [7 x i8]* %2 to i56*
  %4 = load i56, i56* %3, align 8
  %5 = and i56 %4, 549755813888
  %6 = icmp eq i56 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %0, i64 0, i32 0
  %9 = load %"class.blink::FillLayer"*, %"class.blink::FillLayer"** %8, align 8
  %10 = icmp eq %"class.blink::FillLayer"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = and i56 %4, 61440
  %13 = icmp ne i56 %12, 8192
  br label %14

14:                                               ; preds = %1, %7, %11
  %15 = phi i1 [ false, %7 ], [ false, %1 ], [ %13, %11 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundImageGeometry12SetNoRepeatXERKNS_9FillLayerENS_10LayoutUnitES4_(%"class.blink::BackgroundImageGeometry"* nocapture, %"class.blink::FillLayer"* nocapture readonly dereferenceable(64), i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 5
  %6 = bitcast [7 x i8]* %5 to i56*
  %7 = load i56, i56* %6, align 8
  %8 = and i56 %7, 549755813888
  %9 = icmp eq i56 %8, 0
  br i1 %9, label %41, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 0
  %12 = load %"class.blink::FillLayer"*, %"class.blink::FillLayer"** %11, align 8
  %13 = icmp ne %"class.blink::FillLayer"* %12, null
  %14 = and i56 %7, 61440
  %15 = icmp ne i56 %14, 8192
  %16 = and i1 %15, %13
  br i1 %16, label %17, label %41

17:                                               ; preds = %10
  %18 = tail call i1 @llvm.is.constant.i32(i32 %2) #7
  br i1 %18, label %19, label %23

19:                                               ; preds = %17
  %20 = sub i32 0, %2
  %21 = icmp eq i32 %20, -2147483648
  %22 = select i1 %21, i32 2147483647, i32 %20
  br label %28

23:                                               ; preds = %17
  %24 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %2) #7
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 2147483647, i32 %26
  br label %28

28:                                               ; preds = %19, %23
  %29 = phi i32 [ %22, %19 ], [ %27, %23 ]
  %30 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 0, i32 0
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8
  %34 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8, i32 1, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = bitcast %"struct.blink::PhysicalSize"* %33 to i64*
  %37 = zext i32 %35 to i64
  %38 = shl nuw i64 %37, 32
  %39 = zext i32 %32 to i64
  %40 = or i64 %38, %39
  store i64 %40, i64* %36, align 8
  br label %114

41:                                               ; preds = %10, %4
  %42 = icmp sgt i32 %2, 0
  br i1 %42, label %43, label %77

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4
  %45 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %46, i32 %2) #7
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 0, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = shl nuw i64 %52, 32
  %54 = zext i32 %49 to i64
  %55 = select i1 %48, i64 2147483647, i64 %54, !prof !2
  %56 = or i64 %55, %53
  %57 = bitcast %"struct.blink::PhysicalRect"* %44 to i64*
  store i64 %56, i64* %57, align 4
  %58 = trunc i64 %55 to i32
  %59 = sdiv i32 %58, 64
  %60 = srem i32 %58, 64
  %61 = add nsw i32 %60, 32
  %62 = ashr i32 %61, 6
  %63 = add nsw i32 %62, %59
  %64 = icmp sgt i32 %63, 33554431
  br i1 %64, label %69, label %65

65:                                               ; preds = %43
  %66 = icmp slt i32 %63, -33554432
  %67 = shl i32 %63, 6
  %68 = select i1 %66, i32 -2147483648, i32 %67
  br label %69

69:                                               ; preds = %65, %43
  %70 = phi i32 [ 2147483647, %43 ], [ %68, %65 ]
  %71 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  store i32 %73, i32* %74, align 4
  %75 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  store i32 %73, i32* %75, align 4
  %76 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 0, i32 0
  store i32 0, i32* %76, align 8
  br label %107

77:                                               ; preds = %41
  %78 = tail call i1 @llvm.is.constant.i32(i32 %2) #7
  br i1 %78, label %79, label %83

79:                                               ; preds = %77
  %80 = sub i32 0, %2
  %81 = icmp eq i32 %80, -2147483648
  %82 = select i1 %81, i32 2147483647, i32 %80
  br label %88

83:                                               ; preds = %77
  %84 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %2) #7
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 2147483647, i32 %86
  br label %88

88:                                               ; preds = %79, %83
  %89 = phi i32 [ %82, %79 ], [ %87, %83 ]
  %90 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 0, i32 0
  store i32 %89, i32* %90, align 8
  %91 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp slt i32 %2, 0
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %92, i32 %2) #7
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !2
  %99 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  store i32 %98, i32* %99, align 4
  %100 = icmp slt i32 %3, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %92, i32 %3) #7
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !2
  %106 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  store i32 %105, i32* %106, align 4
  br label %107

107:                                              ; preds = %88, %69
  %108 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8
  %109 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8, i32 1, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = bitcast %"struct.blink::PhysicalSize"* %108 to i64*
  %112 = zext i32 %110 to i64
  %113 = shl nuw i64 %112, 32
  store i64 %113, i64* %111, align 8
  br label %114

114:                                              ; preds = %107, %28
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundImageGeometry12SetNoRepeatYERKNS_9FillLayerENS_10LayoutUnitES4_(%"class.blink::BackgroundImageGeometry"* nocapture, %"class.blink::FillLayer"* nocapture readonly dereferenceable(64), i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 5
  %6 = bitcast [7 x i8]* %5 to i56*
  %7 = load i56, i56* %6, align 8
  %8 = and i56 %7, 549755813888
  %9 = icmp eq i56 %8, 0
  br i1 %9, label %41, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 0
  %12 = load %"class.blink::FillLayer"*, %"class.blink::FillLayer"** %11, align 8
  %13 = icmp ne %"class.blink::FillLayer"* %12, null
  %14 = and i56 %7, 61440
  %15 = icmp ne i56 %14, 8192
  %16 = and i1 %15, %13
  br i1 %16, label %17, label %41

17:                                               ; preds = %10
  %18 = tail call i1 @llvm.is.constant.i32(i32 %2) #7
  br i1 %18, label %19, label %23

19:                                               ; preds = %17
  %20 = sub i32 0, %2
  %21 = icmp eq i32 %20, -2147483648
  %22 = select i1 %21, i32 2147483647, i32 %20
  br label %28

23:                                               ; preds = %17
  %24 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %2) #7
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 2147483647, i32 %26
  br label %28

28:                                               ; preds = %19, %23
  %29 = phi i32 [ %22, %19 ], [ %27, %23 ]
  %30 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 1, i32 0
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8
  %32 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %31, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 1, i32 1, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = bitcast %"struct.blink::PhysicalSize"* %31 to i64*
  %37 = zext i32 %35 to i64
  %38 = shl nuw i64 %37, 32
  %39 = zext i32 %33 to i64
  %40 = or i64 %38, %39
  store i64 %40, i64* %36, align 8
  br label %114

41:                                               ; preds = %10, %4
  %42 = icmp sgt i32 %2, 0
  br i1 %42, label %43, label %78

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4
  %45 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 0, i32 1, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %48, i32 %2) #7
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = zext i32 %51 to i64
  %53 = shl nuw i64 %52, 32
  %54 = select i1 %50, i64 9223372032559808512, i64 %53, !prof !2
  %55 = zext i32 %46 to i64
  %56 = or i64 %54, %55
  %57 = bitcast %"struct.blink::PhysicalRect"* %44 to i64*
  store i64 %56, i64* %57, align 4
  %58 = lshr exact i64 %54, 32
  %59 = trunc i64 %58 to i32
  %60 = sdiv i32 %59, 64
  %61 = srem i32 %59, 64
  %62 = add nsw i32 %61, 32
  %63 = ashr i32 %62, 6
  %64 = add nsw i32 %63, %60
  %65 = icmp sgt i32 %64, 33554431
  br i1 %65, label %70, label %66

66:                                               ; preds = %43
  %67 = icmp slt i32 %64, -33554432
  %68 = shl i32 %64, 6
  %69 = select i1 %67, i32 -2147483648, i32 %68
  br label %70

70:                                               ; preds = %66, %43
  %71 = phi i32 [ 2147483647, %43 ], [ %69, %66 ]
  %72 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  store i32 %71, i32* %72, align 4
  %73 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 1, i32 1, i32 0
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 1, i32 1, i32 0
  store i32 %74, i32* %76, align 4
  %77 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 1, i32 0
  store i32 0, i32* %77, align 4
  br label %108

78:                                               ; preds = %41
  %79 = tail call i1 @llvm.is.constant.i32(i32 %2) #7
  br i1 %79, label %80, label %84

80:                                               ; preds = %78
  %81 = sub i32 0, %2
  %82 = icmp eq i32 %81, -2147483648
  %83 = select i1 %82, i32 2147483647, i32 %81
  br label %89

84:                                               ; preds = %78
  %85 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %2) #7
  %86 = extractvalue { i32, i1 } %85, 1
  %87 = extractvalue { i32, i1 } %85, 0
  %88 = select i1 %86, i32 2147483647, i32 %87
  br label %89

89:                                               ; preds = %80, %84
  %90 = phi i32 [ %83, %80 ], [ %88, %84 ]
  %91 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 1, i32 0
  store i32 %90, i32* %91, align 4
  %92 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 1, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp slt i32 %2, 0
  %95 = select i1 %94, i32 -2147483648, i32 2147483647
  %96 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %93, i32 %2) #7
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !2
  %100 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 1, i32 1, i32 0
  store i32 %99, i32* %100, align 4
  %101 = icmp slt i32 %3, 0
  %102 = select i1 %101, i32 -2147483648, i32 2147483647
  %103 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %93, i32 %3) #7
  %104 = extractvalue { i32, i1 } %103, 1
  %105 = extractvalue { i32, i1 } %103, 0
  %106 = select i1 %104, i32 %102, i32 %105, !prof !2
  %107 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 1, i32 1, i32 0
  store i32 %106, i32* %107, align 4
  br label %108

108:                                              ; preds = %89, %70
  %109 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8
  %110 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %109, i64 0, i32 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = bitcast %"struct.blink::PhysicalSize"* %109 to i64*
  %113 = zext i32 %111 to i64
  store i64 %113, i64* %112, align 8
  br label %114

114:                                              ; preds = %108, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundImageGeometry10SetRepeatXERKNS_9FillLayerENS_10LayoutUnitES4_(%"class.blink::BackgroundImageGeometry"* nocapture, %"class.blink::FillLayer"* dereferenceable(64), i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %89, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 2, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 2
  br i1 %12, label %13, label %34, !prof !3

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 2, i32 3
  %15 = load i8, i8* %14, align 2, !range !4
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::Length"* %9 to float*
  %19 = load float, float* %18, align 4
  br label %24

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = sitofp i32 %22 to float
  br label %24

24:                                               ; preds = %20, %17
  %25 = phi float [ %19, %17 ], [ %23, %20 ]
  %26 = fmul float %25, 6.400000e+01
  %27 = fcmp ult float %26, 0xC1E0000000000000
  %28 = fcmp ugt float %26, 0x41DFFFFFE0000000
  %29 = fcmp ogt float %26, 0xC1E0000000000000
  %30 = select i1 %29, float %26, float 0xC1E0000000000000
  %31 = fptosi float %30 to i32
  %32 = select i1 %27, i32 0, i32 2147483647
  %33 = select i1 %28, i32 %32, i32 %31
  br label %36

34:                                               ; preds = %8
  %35 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %9, i32 %2) #7
  br label %36

36:                                               ; preds = %24, %34
  %37 = phi i32 [ %33, %24 ], [ %35, %34 ]
  %38 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %38, align 8
  %40 = icmp ne %"class.blink::StyleImage"* %39, null
  %41 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 5
  %42 = bitcast [7 x i8]* %41 to i56*
  %43 = load i56, i56* %42, align 8
  %44 = and i56 %43, 3
  %45 = icmp eq i56 %44, 2
  %46 = and i1 %40, %45
  br i1 %46, label %53, label %47

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 3
  %49 = bitcast %"struct.blink::PhysicalOffset"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = trunc i64 %50 to i32
  %52 = icmp sgt i32 %51, -1
  br i1 %52, label %53, label %55

53:                                               ; preds = %36, %47
  %54 = phi i32 [ %51, %47 ], [ 0, %36 ]
  br label %55

55:                                               ; preds = %47, %53
  %56 = phi i32 [ %54, %53 ], [ %51, %47 ]
  %57 = phi i32 [ -2147483648, %53 ], [ 2147483647, %47 ]
  %58 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %37, i32 %56) #7
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !2
  %62 = and i56 %43, 25165824
  %63 = icmp eq i56 %62, 8388608
  br i1 %63, label %64, label %71

64:                                               ; preds = %55
  %65 = icmp sgt i32 %61, -1
  %66 = select i1 %65, i32 -2147483648, i32 2147483647
  %67 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %2, i32 %61) #7
  %68 = extractvalue { i32, i1 } %67, 1
  %69 = extractvalue { i32, i1 } %67, 0
  %70 = select i1 %68, i32 %66, i32 %69, !prof !2
  br label %71

71:                                               ; preds = %64, %55
  %72 = phi i32 [ %70, %64 ], [ %61, %55 ]
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %72, i32 %3) #7
  %74 = load i32, i32* %5, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %89, label %76

76:                                               ; preds = %71
  %77 = extractvalue { i32, i1 } %73, 1
  %78 = icmp slt i32 %3, 0
  %79 = select i1 %78, i32 -2147483648, i32 2147483647
  %80 = extractvalue { i32, i1 } %73, 0
  %81 = select i1 %77, i32 %79, i32 %80, !prof !2
  %82 = srem i32 %81, %74
  %83 = icmp sgt i32 %82, -1
  %84 = select i1 %83, i32 -2147483648, i32 2147483647
  %85 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %74, i32 %82) #7
  %86 = extractvalue { i32, i1 } %85, 1
  %87 = extractvalue { i32, i1 } %85, 0
  %88 = select i1 %86, i32 %84, i32 %87, !prof !2
  br label %89

89:                                               ; preds = %4, %76, %71
  %90 = phi i32 [ %88, %76 ], [ 0, %71 ], [ 0, %4 ]
  %91 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 0, i32 0
  store i32 %90, i32* %91, align 8
  %92 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8
  %93 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8, i32 1, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = bitcast %"struct.blink::PhysicalSize"* %92 to i64*
  %96 = zext i32 %94 to i64
  %97 = shl nuw i64 %96, 32
  store i64 %97, i64* %95, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink23BackgroundImageGeometry18OffsetInBackgroundERKNS_9FillLayerE(%"class.blink::BackgroundImageGeometry"* nocapture readonly, %"class.blink::FillLayer"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %3, align 8
  %5 = icmp eq %"class.blink::StyleImage"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 5
  %8 = bitcast [7 x i8]* %7 to i56*
  %9 = load i56, i56* %8, align 8
  %10 = and i56 %9, 3
  %11 = icmp eq i56 %10, 2
  br i1 %11, label %18, label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 3
  %14 = bitcast %"struct.blink::PhysicalOffset"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -4294967296
  %17 = and i64 %15, 4294967295
  br label %18

18:                                               ; preds = %6, %12
  %19 = phi i64 [ %16, %12 ], [ 0, %6 ]
  %20 = phi i64 [ %17, %12 ], [ 0, %6 ]
  %21 = or i64 %20, %19
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundImageGeometry10SetRepeatYERKNS_9FillLayerENS_10LayoutUnitES4_(%"class.blink::BackgroundImageGeometry"* nocapture, %"class.blink::FillLayer"* dereferenceable(64), i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %90, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 3, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 2
  br i1 %12, label %13, label %34, !prof !3

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 3, i32 3
  %15 = load i8, i8* %14, align 2, !range !4
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::Length"* %9 to float*
  %19 = load float, float* %18, align 4
  br label %24

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = sitofp i32 %22 to float
  br label %24

24:                                               ; preds = %20, %17
  %25 = phi float [ %19, %17 ], [ %23, %20 ]
  %26 = fmul float %25, 6.400000e+01
  %27 = fcmp ult float %26, 0xC1E0000000000000
  %28 = fcmp ugt float %26, 0x41DFFFFFE0000000
  %29 = fcmp ogt float %26, 0xC1E0000000000000
  %30 = select i1 %29, float %26, float 0xC1E0000000000000
  %31 = fptosi float %30 to i32
  %32 = select i1 %27, i32 0, i32 2147483647
  %33 = select i1 %28, i32 %32, i32 %31
  br label %36

34:                                               ; preds = %8
  %35 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %9, i32 %2) #7
  br label %36

36:                                               ; preds = %24, %34
  %37 = phi i32 [ %33, %24 ], [ %35, %34 ]
  %38 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %38, align 8
  %40 = icmp ne %"class.blink::StyleImage"* %39, null
  %41 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 5
  %42 = bitcast [7 x i8]* %41 to i56*
  %43 = load i56, i56* %42, align 8
  %44 = and i56 %43, 3
  %45 = icmp eq i56 %44, 2
  %46 = and i1 %40, %45
  br i1 %46, label %54, label %47

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 3
  %49 = bitcast %"struct.blink::PhysicalOffset"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %50, 32
  %52 = trunc i64 %51 to i32
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %54, label %56

54:                                               ; preds = %36, %47
  %55 = phi i32 [ %52, %47 ], [ 0, %36 ]
  br label %56

56:                                               ; preds = %47, %54
  %57 = phi i32 [ %55, %54 ], [ %52, %47 ]
  %58 = phi i32 [ -2147483648, %54 ], [ 2147483647, %47 ]
  %59 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %37, i32 %57) #7
  %60 = extractvalue { i32, i1 } %59, 1
  %61 = extractvalue { i32, i1 } %59, 0
  %62 = select i1 %60, i32 %58, i32 %61, !prof !2
  %63 = and i56 %43, 100663296
  %64 = icmp eq i56 %63, 67108864
  br i1 %64, label %65, label %72

65:                                               ; preds = %56
  %66 = icmp sgt i32 %62, -1
  %67 = select i1 %66, i32 -2147483648, i32 2147483647
  %68 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %2, i32 %62) #7
  %69 = extractvalue { i32, i1 } %68, 1
  %70 = extractvalue { i32, i1 } %68, 0
  %71 = select i1 %69, i32 %67, i32 %70, !prof !2
  br label %72

72:                                               ; preds = %65, %56
  %73 = phi i32 [ %71, %65 ], [ %62, %56 ]
  %74 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %73, i32 %3) #7
  %75 = load i32, i32* %5, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %90, label %77

77:                                               ; preds = %72
  %78 = extractvalue { i32, i1 } %74, 1
  %79 = icmp slt i32 %3, 0
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = extractvalue { i32, i1 } %74, 0
  %82 = select i1 %78, i32 %80, i32 %81, !prof !2
  %83 = srem i32 %82, %75
  %84 = icmp sgt i32 %83, -1
  %85 = select i1 %84, i32 -2147483648, i32 2147483647
  %86 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %75, i32 %83) #7
  %87 = extractvalue { i32, i1 } %86, 1
  %88 = extractvalue { i32, i1 } %86, 0
  %89 = select i1 %87, i32 %85, i32 %88, !prof !2
  br label %90

90:                                               ; preds = %4, %77, %72
  %91 = phi i32 [ %89, %77 ], [ 0, %72 ], [ 0, %4 ]
  %92 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 1, i32 0
  store i32 %91, i32* %92, align 4
  %93 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8
  %94 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %93, i64 0, i32 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = bitcast %"struct.blink::PhysicalSize"* %93 to i64*
  %97 = zext i32 %95 to i64
  store i64 %97, i64* %96, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundImageGeometry9SetSpaceXENS_10LayoutUnitES1_(%"class.blink::BackgroundImageGeometry"* nocapture, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8
  %5 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = bitcast %"struct.blink::PhysicalSize"* %4 to i64*
  %8 = zext i32 %6 to i64
  %9 = shl nuw i64 %8, 32
  %10 = zext i32 %1 to i64
  %11 = or i64 %9, %10
  store i64 %11, i64* %7, align 8
  %12 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %1, 0
  %15 = select i1 %14, i32 -2147483648, i32 2147483647
  %16 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 %1) #7
  %17 = extractvalue { i32, i1 } %16, 1
  %18 = extractvalue { i32, i1 } %16, 0
  %19 = select i1 %17, i32 %15, i32 %18, !prof !2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %3
  %22 = srem i32 %2, %19
  %23 = icmp sgt i32 %22, -1
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %19, i32 %22) #7
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  br label %29

29:                                               ; preds = %3, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %3 ]
  %31 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 0, i32 0
  store i32 %30, i32* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundImageGeometry9SetSpaceYENS_10LayoutUnitES1_(%"class.blink::BackgroundImageGeometry"* nocapture, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8
  %5 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %4, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = bitcast %"struct.blink::PhysicalSize"* %4 to i64*
  %8 = zext i32 %1 to i64
  %9 = shl nuw i64 %8, 32
  %10 = zext i32 %6 to i64
  %11 = or i64 %9, %10
  store i64 %11, i64* %7, align 8
  %12 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %1, 0
  %15 = select i1 %14, i32 -2147483648, i32 2147483647
  %16 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 %1) #7
  %17 = extractvalue { i32, i1 } %16, 1
  %18 = extractvalue { i32, i1 } %16, 0
  %19 = select i1 %17, i32 %15, i32 %18, !prof !2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %3
  %22 = srem i32 %2, %19
  %23 = icmp sgt i32 %22, -1
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %19, i32 %22) #7
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  br label %29

29:                                               ; preds = %3, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %3 ]
  %31 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 1, i32 0
  store i32 %30, i32* %31, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundImageGeometry18UseFixedAttachmentERKNS_14PhysicalOffsetE(%"class.blink::BackgroundImageGeometry"* nocapture, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, -1
  %8 = select i1 %7, i32 -2147483648, i32 2147483647
  %9 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %4, i32 %6) #7
  %10 = extractvalue { i32, i1 } %9, 1
  %11 = extractvalue { i32, i1 } %9, 0
  %12 = select i1 %10, i32 %8, i32 %11, !prof !2
  %13 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %16) #7
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !2
  %23 = icmp sgt i32 %12, 0
  %24 = select i1 %23, i32 %12, i32 0
  %25 = icmp sgt i32 %22, 0
  %26 = select i1 %25, i32 %22, i32 0
  %27 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6
  %28 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %27, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %29, i32 %24) #7
  %31 = extractvalue { i32, i1 } %30, 1
  %32 = extractvalue { i32, i1 } %30, 0
  %33 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 %26) #7
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = zext i32 %37 to i64
  %39 = shl nuw i64 %38, 32
  %40 = select i1 %36, i64 9223372032559808512, i64 %39, !prof !2
  %41 = zext i32 %32 to i64
  %42 = select i1 %31, i64 2147483647, i64 %41, !prof !2
  %43 = or i64 %40, %42
  %44 = bitcast %"struct.blink::PhysicalOffset"* %27 to i64*
  store i64 %43, i64* %44, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink23BackgroundImageGeometry27GetPositioningOffsetForCellERKNS_15LayoutTableCellERKNS_9LayoutBoxE(%"class.blink::BackgroundImageGeometry"* nocapture readnone, %"class.blink::LayoutTableCell"* nocapture readonly dereferenceable(312), %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"struct.blink::LayoutTable::ColAndColGroup", align 8
  %5 = alloca %"struct.blink::PhysicalRect", align 8
  %6 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 7
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 7
  %11 = bitcast %"class.blink::LayoutObject"** %10 to %"class.blink::LayoutTable"**
  %12 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %12, i64 0, i32 12
  %14 = load i16, i16* %13, align 8
  %15 = sext i16 %14 to i32
  %16 = shl nsw i32 %15, 6
  %17 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %12, i64 0, i32 13
  %18 = load i16, i16* %17, align 2
  %19 = sext i16 %18 to i32
  %20 = shl nsw i32 %19, 6
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0
  %22 = bitcast %"class.blink::LayoutBox"* %2 to i1 (%"class.blink::LayoutObject"*, i32)***
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, i64 92
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* %21, i32 50) #7
  br i1 %26, label %27, label %46

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = bitcast %"class.blink::LayoutRect"* %28 to i64*
  %30 = load i64, i64* %29, align 4
  %31 = trunc i64 %30 to i32
  %32 = lshr i64 %30, 32
  %33 = icmp sgt i16 %14, -1
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %16) #7
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !2
  %39 = trunc i64 %32 to i32
  %40 = icmp sgt i16 %18, -1
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %39, i32 %20) #7
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !2
  br label %234

46:                                               ; preds = %3
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, i64 92
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::LayoutObject"* %21, i32 49) #7
  br i1 %50, label %51, label %68

51:                                               ; preds = %46
  %52 = bitcast %"class.blink::LayoutBox"* %2 to i1 (%"class.blink::LayoutObject"*)***
  %53 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %52, align 8
  %54 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %53, i64 28
  %55 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.blink::LayoutObject"* %21) #7
  br i1 %56, label %68, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %59 = bitcast %"class.blink::LayoutRect"* %58 to i64*
  %60 = load i64, i64* %59, align 4
  %61 = trunc i64 %60 to i32
  %62 = icmp sgt i16 %14, -1
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %61, i32 %16) #7
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !2
  br label %234

68:                                               ; preds = %51, %46
  %69 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #7
  %70 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 1, i32 0
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %73 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 7
  %74 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %74, i64 0, i32 7
  %76 = bitcast %"class.blink::LayoutObject"** %75 to %"class.blink::LayoutTable"**
  %77 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %77, i64 0, i32 0, i32 0, i32 2, i32 1
  %79 = bitcast %"class.blink::LayoutSize"* %78 to i64*
  %80 = load i64, i64* %79, align 4
  %81 = trunc i64 %80 to i32
  %82 = lshr i64 %80, 32
  %83 = trunc i64 %82 to i32
  %84 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  store i64 0, i64* %84, align 8
  store i32 %81, i32* %70, align 8
  store i32 %83, i32* %71, align 4
  call void @_ZNK5blink11LayoutTable19SubtractCaptionRectERNS_12PhysicalRectE(%"class.blink::LayoutTable"* %77, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5) #7
  %85 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %86 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %85, i64 0, i32 7
  %87 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %87, i64 0, i32 7
  %89 = bitcast %"class.blink::LayoutObject"** %88 to %"class.blink::LayoutTable"**
  %90 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %90, i64 0, i32 0, i32 0, i32 2, i32 1
  %92 = bitcast %"class.blink::LayoutSize"* %91 to i64*
  %93 = load i64, i64* %92, align 4
  %94 = lshr i64 %93, 32
  %95 = trunc i64 %94 to i32
  %96 = load i32, i32* %71, align 4
  %97 = icmp sgt i32 %96, -1
  %98 = select i1 %97, i32 -2147483648, i32 2147483647
  %99 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %95, i32 %96) #7
  %100 = extractvalue { i32, i1 } %99, 1
  %101 = extractvalue { i32, i1 } %99, 0
  %102 = select i1 %100, i32 %98, i32 %101, !prof !2
  %103 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %87, i64 1, i32 1, i32 1
  %104 = bitcast i8* %103 to i64*
  %105 = load i64, i64* %104, align 4
  %106 = lshr i64 %105, 32
  %107 = trunc i64 %106 to i32
  %108 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %90, i64 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %110 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %109, align 8, !noalias !5
  %111 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %110, i64 0, i32 0, i32 9
  %112 = bitcast [20 x i8]* %111 to i160*
  %113 = load i160, i160* %112, align 8, !noalias !5
  %114 = lshr i160 %113, 102
  %115 = trunc i160 %114 to i8
  %116 = and i8 %115, 3
  %117 = bitcast %"class.blink::LayoutTable"* %90 to i8*
  switch i8 %116, label %118 [
    i8 0, label %127
    i8 1, label %119
  ]

118:                                              ; preds = %68
  br label %119

119:                                              ; preds = %118, %68
  %120 = phi { i64, i64 } [ { i64 993, i64 0 }, %118 ], [ { i64 1001, i64 0 }, %68 ]
  %121 = extractvalue { i64, i64 } %120, 0
  %122 = extractvalue { i64, i64 } %120, 1
  %123 = getelementptr inbounds i8, i8* %117, i64 %122
  %124 = bitcast i8* %123 to %"class.blink::LayoutBoxModelObject"*
  %125 = and i64 %121, 1
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %137, label %127

127:                                              ; preds = %119, %68
  %128 = phi %"class.blink::LayoutBoxModelObject"* [ %124, %119 ], [ %108, %68 ]
  %129 = phi i8* [ %123, %119 ], [ %117, %68 ]
  %130 = phi i64 [ %121, %119 ], [ 977, %68 ]
  %131 = bitcast i8* %129 to i8**
  %132 = load i8*, i8** %131, align 8
  %133 = add i64 %130, -1
  %134 = getelementptr i8, i8* %132, i64 %133
  %135 = bitcast i8* %134 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %136 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %135, align 8
  br label %139

137:                                              ; preds = %119
  %138 = inttoptr i64 %121 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %139

139:                                              ; preds = %127, %137
  %140 = phi %"class.blink::LayoutBoxModelObject"* [ %128, %127 ], [ %124, %137 ]
  %141 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %136, %127 ], [ %138, %137 ]
  %142 = call i32 %141(%"class.blink::LayoutBoxModelObject"* %140) #7
  %143 = icmp sgt i32 %142, -1
  %144 = select i1 %143, i32 -2147483648, i32 2147483647
  %145 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %107, i32 %142) #7
  %146 = extractvalue { i32, i1 } %145, 1
  %147 = extractvalue { i32, i1 } %145, 0
  %148 = select i1 %146, i32 %144, i32 %147, !prof !2
  %149 = icmp sgt i32 %102, -1
  %150 = select i1 %149, i32 -2147483648, i32 2147483647
  %151 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %148, i32 %102) #7
  %152 = extractvalue { i32, i1 } %151, 1
  %153 = extractvalue { i32, i1 } %151, 0
  %154 = select i1 %152, i32 %150, i32 %153, !prof !2
  %155 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %156 = bitcast %"class.blink::LayoutRect"* %155 to i64*
  %157 = load i64, i64* %156, align 4
  %158 = lshr i64 %157, 32
  %159 = trunc i64 %158 to i32
  %160 = icmp slt i32 %159, 0
  %161 = select i1 %160, i32 -2147483648, i32 2147483647
  %162 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %154, i32 %159) #7
  %163 = extractvalue { i32, i1 } %162, 1
  %164 = extractvalue { i32, i1 } %162, 0
  %165 = select i1 %163, i32 %161, i32 %164, !prof !2
  %166 = bitcast %"class.blink::LayoutBox"* %2 to %"class.blink::LayoutTableCol"*
  %167 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 5, i32 0
  %168 = bitcast %"class.blink::ComputedStyle"** %167 to %"class.blink::ComputedStyleBase"**
  %169 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %169, i64 0, i32 9
  %171 = bitcast [20 x i8]* %170 to i160*
  %172 = load i160, i160* %171, align 8
  %173 = and i160 %172, 133143986176
  %174 = icmp eq i160 %173, 47244640256
  br i1 %174, label %226, label %175

175:                                              ; preds = %139
  %176 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %177 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %176, align 8
  %178 = icmp eq %"class.blink::LayoutObject"* %177, null
  br i1 %178, label %226, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %4, i64 0, i32 1
  %181 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %4 to i8*
  %182 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %4, i64 0, i32 0
  br label %183

183:                                              ; preds = %212, %179
  %184 = phi i32 [ 0, %179 ], [ %222, %212 ]
  %185 = phi %"class.blink::LayoutObject"* [ %177, %179 ], [ %224, %212 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #7
  %186 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %187 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %186, i64 0, i32 7
  %188 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %188, i64 0, i32 7
  %190 = bitcast %"class.blink::LayoutObject"** %189 to %"class.blink::LayoutTable"**
  %191 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %190, align 8
  %192 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %191, i64 0, i32 10
  %193 = load i16, i16* %192, align 8, !noalias !8
  %194 = and i16 %193, 64
  %195 = icmp eq i16 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %183
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #7
  br label %226

197:                                              ; preds = %183
  %198 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %185, i64 3, i32 4, i32 0, i64 4
  %199 = bitcast i8* %198 to i32*
  %200 = load i32, i32* %199, align 8
  %201 = and i32 %200, 33554431
  call void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* nonnull sret %4, %"class.blink::LayoutTable"* %191, i32 %201) #7
  %202 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %182, align 8
  %203 = icmp eq %"class.blink::LayoutTableCol"* %202, null
  br i1 %203, label %205, label %204

204:                                              ; preds = %197
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #7
  br label %208

205:                                              ; preds = %197
  %206 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %180, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #7
  %207 = icmp eq %"class.blink::LayoutTableCol"* %206, null
  br i1 %207, label %226, label %208

208:                                              ; preds = %205, %204
  %209 = phi %"class.blink::LayoutTableCol"* [ %202, %204 ], [ %206, %205 ]
  %210 = call %"class.blink::LayoutTableCol"* @_ZNK5blink14LayoutTableCol20EnclosingColumnGroupEv(%"class.blink::LayoutTableCol"* nonnull %209) #7
  %211 = icmp eq %"class.blink::LayoutTableCol"* %210, %166
  br i1 %211, label %212, label %226

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %185, i64 1, i32 4, i32 0, i64 4
  %214 = bitcast i8* %213 to i64*
  %215 = load i64, i64* %214, align 4
  %216 = trunc i64 %215 to i32
  %217 = icmp slt i32 %216, 0
  %218 = select i1 %217, i32 -2147483648, i32 2147483647
  %219 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %184, i32 %216) #7
  %220 = extractvalue { i32, i1 } %219, 1
  %221 = extractvalue { i32, i1 } %219, 0
  %222 = select i1 %220, i32 %218, i32 %221, !prof !2
  %223 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %185, i64 0, i32 8
  %224 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %223, align 8
  %225 = icmp eq %"class.blink::LayoutObject"* %224, null
  br i1 %225, label %226, label %183

226:                                              ; preds = %212, %205, %208, %175, %196, %139
  %227 = phi i32 [ 0, %139 ], [ 0, %175 ], [ %184, %196 ], [ %222, %212 ], [ %184, %208 ], [ %184, %205 ]
  %228 = icmp sgt i16 %18, -1
  %229 = select i1 %228, i32 -2147483648, i32 2147483647
  %230 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %165, i32 %20) #7
  %231 = extractvalue { i32, i1 } %230, 1
  %232 = extractvalue { i32, i1 } %230, 0
  %233 = select i1 %231, i32 %229, i32 %232
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #7
  br label %234

234:                                              ; preds = %226, %57, %27
  %235 = phi i32 [ %38, %27 ], [ %67, %57 ], [ %227, %226 ]
  %236 = phi i32 [ %45, %27 ], [ 0, %57 ], [ %233, %226 ]
  %237 = zext i32 %236 to i64
  %238 = shl nuw i64 %237, 32
  %239 = zext i32 %235 to i64
  %240 = or i64 %238, %239
  ret i64 %240
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK5blink11LayoutTable19SubtractCaptionRectERNS_12PhysicalRectE(%"class.blink::LayoutTable"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink23BackgroundImageGeometry29GetBackgroundObjectDimensionsERKNS_15LayoutTableCellERKNS_9LayoutBoxE(%"class.blink::BackgroundImageGeometry"* nocapture readnone, %"class.blink::LayoutTableCell"* nocapture readonly dereferenceable(312), %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"struct.blink::LayoutTable::ColAndColGroup", align 8
  %5 = alloca %"struct.blink::LayoutTable::ColAndColGroup", align 8
  %6 = alloca %"struct.blink::PhysicalRect", align 8
  %7 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 7
  %12 = bitcast %"class.blink::LayoutObject"** %11 to %"class.blink::LayoutTable"**
  %13 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %13, i64 0, i32 12
  %15 = load i16, i16* %14, align 8
  %16 = sext i16 %15 to i32
  %17 = shl nsw i32 %16, 6
  %18 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %13, i64 0, i32 13
  %19 = load i16, i16* %18, align 2
  %20 = sext i16 %19 to i32
  %21 = shl nsw i32 %20, 6
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::LayoutBox"* %2 to i1 (%"class.blink::LayoutObject"*, i32)***
  %24 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, i64 92
  %26 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::LayoutObject"* %22, i32 50) #7
  br i1 %27, label %28, label %55

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 2, i32 1
  %30 = bitcast %"class.blink::LayoutSize"* %29 to i64*
  %31 = load i64, i64* %30, align 4
  %32 = lshr i64 %31, 32
  %33 = trunc i64 %32 to i32
  %34 = trunc i64 %31 to i32
  %35 = icmp sgt i16 %15, -1
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %34, i32 %17) #7
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  %41 = icmp sgt i16 %19, -1
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %33, i32 %21) #7
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !2
  %47 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %40, i32 %17) #7
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %36, i32 %49, !prof !2
  %51 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %46, i32 %21) #7
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %42, i32 %53, !prof !2
  br label %270

55:                                               ; preds = %3
  %56 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %57 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, i64 92
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %57, align 8
  %59 = tail call zeroext i1 %58(%"class.blink::LayoutObject"* %22, i32 49) #7
  br i1 %59, label %60, label %77

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 2, i32 1
  %62 = bitcast %"class.blink::LayoutSize"* %61 to i64*
  %63 = load i64, i64* %62, align 4
  %64 = lshr i64 %63, 32
  %65 = trunc i64 %64 to i32
  %66 = trunc i64 %63 to i32
  %67 = icmp sgt i16 %15, -1
  %68 = select i1 %67, i32 -2147483648, i32 2147483647
  %69 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %66, i32 %17) #7
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 %68, i32 %71, !prof !2
  %73 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %72, i32 %17) #7
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %68, i32 %75, !prof !2
  br label %270

77:                                               ; preds = %55
  %78 = bitcast %"struct.blink::PhysicalRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #7
  %79 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 1, i32 0
  %81 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %82 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %81, i64 0, i32 7
  %83 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %83, i64 0, i32 7
  %85 = bitcast %"class.blink::LayoutObject"** %84 to %"class.blink::LayoutTable"**
  %86 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %86, i64 0, i32 0, i32 0, i32 2, i32 1
  %88 = bitcast %"class.blink::LayoutSize"* %87 to i64*
  %89 = load i64, i64* %88, align 4
  %90 = trunc i64 %89 to i32
  %91 = lshr i64 %89, 32
  %92 = trunc i64 %91 to i32
  %93 = bitcast %"struct.blink::PhysicalRect"* %6 to i64*
  store i64 0, i64* %93, align 8
  store i32 %90, i32* %79, align 8
  store i32 %92, i32* %80, align 4
  call void @_ZNK5blink11LayoutTable19SubtractCaptionRectERNS_12PhysicalRectE(%"class.blink::LayoutTable"* %86, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #7
  %94 = load i32, i32* %80, align 4
  %95 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %96 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %95, i64 0, i32 7
  %97 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %97, i64 0, i32 7
  %99 = bitcast %"class.blink::LayoutObject"** %98 to %"class.blink::LayoutTable"**
  %100 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %100, i64 0, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %103 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %102, align 8, !noalias !11
  %104 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %103, i64 0, i32 0, i32 9
  %105 = bitcast [20 x i8]* %104 to i160*
  %106 = load i160, i160* %105, align 8, !noalias !11
  %107 = lshr i160 %106, 102
  %108 = trunc i160 %107 to i8
  %109 = and i8 %108, 3
  %110 = bitcast %"class.blink::LayoutTable"* %100 to i8*
  switch i8 %109, label %111 [
    i8 0, label %120
    i8 1, label %112
  ]

111:                                              ; preds = %77
  br label %112

112:                                              ; preds = %111, %77
  %113 = phi { i64, i64 } [ { i64 993, i64 0 }, %111 ], [ { i64 1001, i64 0 }, %77 ]
  %114 = extractvalue { i64, i64 } %113, 0
  %115 = extractvalue { i64, i64 } %113, 1
  %116 = getelementptr inbounds i8, i8* %110, i64 %115
  %117 = bitcast i8* %116 to %"class.blink::LayoutBoxModelObject"*
  %118 = and i64 %114, 1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %130, label %120

120:                                              ; preds = %112, %77
  %121 = phi %"class.blink::LayoutBoxModelObject"* [ %117, %112 ], [ %101, %77 ]
  %122 = phi i8* [ %116, %112 ], [ %110, %77 ]
  %123 = phi i64 [ %114, %112 ], [ 977, %77 ]
  %124 = bitcast i8* %122 to i8**
  %125 = load i8*, i8** %124, align 8
  %126 = add i64 %123, -1
  %127 = getelementptr i8, i8* %125, i64 %126
  %128 = bitcast i8* %127 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %129 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %128, align 8
  br label %132

130:                                              ; preds = %112
  %131 = inttoptr i64 %114 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %132

132:                                              ; preds = %120, %130
  %133 = phi %"class.blink::LayoutBoxModelObject"* [ %121, %120 ], [ %117, %130 ]
  %134 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %129, %120 ], [ %131, %130 ]
  %135 = call i32 %134(%"class.blink::LayoutBoxModelObject"* %133) #7
  %136 = icmp sgt i32 %135, -1
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %94, i32 %135) #7
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !2
  %142 = icmp sgt i16 %19, -1
  %143 = select i1 %142, i32 -2147483648, i32 2147483647
  %144 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %141, i32 %21) #7
  %145 = extractvalue { i32, i1 } %144, 1
  %146 = extractvalue { i32, i1 } %144, 0
  %147 = select i1 %145, i32 %143, i32 %146, !prof !2
  %148 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %147, i32 %21) #7
  %149 = extractvalue { i32, i1 } %148, 1
  %150 = extractvalue { i32, i1 } %148, 0
  %151 = select i1 %149, i32 %143, i32 %150, !prof !2
  %152 = bitcast %"class.blink::LayoutBox"* %2 to %"class.blink::LayoutTableCol"*
  %153 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 5, i32 0
  %154 = bitcast %"class.blink::ComputedStyle"** %153 to %"class.blink::ComputedStyleBase"**
  %155 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %155, i64 0, i32 9
  %157 = bitcast [20 x i8]* %156 to i160*
  %158 = load i160, i160* %157, align 8
  %159 = and i160 %158, 133143986176
  %160 = icmp eq i160 %159, 47244640256
  %161 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %162 = bitcast %"class.blink::LayoutSize"* %161 to i64*
  %163 = load i64, i64* %162, align 4
  %164 = trunc i64 %163 to i32
  br i1 %160, label %268, label %165

165:                                              ; preds = %132
  %166 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %167 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %166, align 8
  %168 = icmp eq %"class.blink::LayoutObject"* %167, null
  br i1 %168, label %216, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %4, i64 0, i32 1
  %171 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %4 to i8*
  %172 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %4, i64 0, i32 0
  br label %173

173:                                              ; preds = %202, %169
  %174 = phi i32 [ %164, %169 ], [ %212, %202 ]
  %175 = phi %"class.blink::LayoutObject"* [ %167, %169 ], [ %214, %202 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171) #7
  %176 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %177 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %176, i64 0, i32 7
  %178 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %177, align 8
  %179 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %178, i64 0, i32 7
  %180 = bitcast %"class.blink::LayoutObject"** %179 to %"class.blink::LayoutTable"**
  %181 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %181, i64 0, i32 10
  %183 = load i16, i16* %182, align 8, !noalias !14
  %184 = and i16 %183, 64
  %185 = icmp eq i16 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #7
  br label %216

187:                                              ; preds = %173
  %188 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %175, i64 3, i32 4, i32 0, i64 4
  %189 = bitcast i8* %188 to i32*
  %190 = load i32, i32* %189, align 8
  %191 = and i32 %190, 33554431
  call void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* nonnull sret %4, %"class.blink::LayoutTable"* %181, i32 %191) #7
  %192 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %172, align 8
  %193 = icmp eq %"class.blink::LayoutTableCol"* %192, null
  br i1 %193, label %195, label %194

194:                                              ; preds = %187
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #7
  br label %198

195:                                              ; preds = %187
  %196 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %170, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #7
  %197 = icmp eq %"class.blink::LayoutTableCol"* %196, null
  br i1 %197, label %216, label %198

198:                                              ; preds = %195, %194
  %199 = phi %"class.blink::LayoutTableCol"* [ %192, %194 ], [ %196, %195 ]
  %200 = call %"class.blink::LayoutTableCol"* @_ZNK5blink14LayoutTableCol20EnclosingColumnGroupEv(%"class.blink::LayoutTableCol"* nonnull %199) #7
  %201 = icmp eq %"class.blink::LayoutTableCol"* %200, %152
  br i1 %201, label %202, label %216

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %175, i64 1, i32 4, i32 0, i64 4
  %204 = bitcast i8* %203 to i64*
  %205 = load i64, i64* %204, align 4
  %206 = trunc i64 %205 to i32
  %207 = icmp slt i32 %206, 0
  %208 = select i1 %207, i32 -2147483648, i32 2147483647
  %209 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %174, i32 %206) #7
  %210 = extractvalue { i32, i1 } %209, 1
  %211 = extractvalue { i32, i1 } %209, 0
  %212 = select i1 %210, i32 %208, i32 %211, !prof !2
  %213 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %175, i64 0, i32 8
  %214 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %213, align 8
  %215 = icmp eq %"class.blink::LayoutObject"* %214, null
  br i1 %215, label %216, label %173

216:                                              ; preds = %202, %195, %198, %186, %165
  %217 = phi i32 [ %164, %165 ], [ %174, %186 ], [ %212, %202 ], [ %174, %198 ], [ %174, %195 ]
  %218 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9
  %219 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %218, align 8
  %220 = icmp eq %"class.blink::LayoutObject"* %219, null
  br i1 %220, label %268, label %221

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %5, i64 0, i32 1
  %223 = bitcast %"struct.blink::LayoutTable::ColAndColGroup"* %5 to i8*
  %224 = getelementptr inbounds %"struct.blink::LayoutTable::ColAndColGroup", %"struct.blink::LayoutTable::ColAndColGroup"* %5, i64 0, i32 0
  br label %225

225:                                              ; preds = %254, %221
  %226 = phi i32 [ %217, %221 ], [ %264, %254 ]
  %227 = phi %"class.blink::LayoutObject"* [ %219, %221 ], [ %266, %254 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %223) #7
  %228 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %229 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %228, i64 0, i32 7
  %230 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %229, align 8
  %231 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %230, i64 0, i32 7
  %232 = bitcast %"class.blink::LayoutObject"** %231 to %"class.blink::LayoutTable"**
  %233 = load %"class.blink::LayoutTable"*, %"class.blink::LayoutTable"** %232, align 8
  %234 = getelementptr inbounds %"class.blink::LayoutTable", %"class.blink::LayoutTable"* %233, i64 0, i32 10
  %235 = load i16, i16* %234, align 8, !noalias !17
  %236 = and i16 %235, 64
  %237 = icmp eq i16 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %225
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #7
  br label %268

239:                                              ; preds = %225
  %240 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %227, i64 3, i32 4, i32 0, i64 4
  %241 = bitcast i8* %240 to i32*
  %242 = load i32, i32* %241, align 8
  %243 = and i32 %242, 33554431
  call void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* nonnull sret %5, %"class.blink::LayoutTable"* %233, i32 %243) #7
  %244 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %224, align 8
  %245 = icmp eq %"class.blink::LayoutTableCol"* %244, null
  br i1 %245, label %247, label %246

246:                                              ; preds = %239
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #7
  br label %250

247:                                              ; preds = %239
  %248 = load %"class.blink::LayoutTableCol"*, %"class.blink::LayoutTableCol"** %222, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #7
  %249 = icmp eq %"class.blink::LayoutTableCol"* %248, null
  br i1 %249, label %268, label %250

250:                                              ; preds = %247, %246
  %251 = phi %"class.blink::LayoutTableCol"* [ %244, %246 ], [ %248, %247 ]
  %252 = call %"class.blink::LayoutTableCol"* @_ZNK5blink14LayoutTableCol20EnclosingColumnGroupEv(%"class.blink::LayoutTableCol"* nonnull %251) #7
  %253 = icmp eq %"class.blink::LayoutTableCol"* %252, %152
  br i1 %253, label %254, label %268

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %227, i64 1, i32 4, i32 0, i64 4
  %256 = bitcast i8* %255 to i64*
  %257 = load i64, i64* %256, align 4
  %258 = trunc i64 %257 to i32
  %259 = icmp slt i32 %258, 0
  %260 = select i1 %259, i32 -2147483648, i32 2147483647
  %261 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %226, i32 %258) #7
  %262 = extractvalue { i32, i1 } %261, 1
  %263 = extractvalue { i32, i1 } %261, 0
  %264 = select i1 %262, i32 %260, i32 %263, !prof !2
  %265 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %227, i64 0, i32 9
  %266 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %265, align 8
  %267 = icmp eq %"class.blink::LayoutObject"* %266, null
  br i1 %267, label %268, label %225

268:                                              ; preds = %254, %250, %247, %238, %132, %216
  %269 = phi i32 [ %217, %216 ], [ %164, %132 ], [ %226, %238 ], [ %264, %254 ], [ %226, %250 ], [ %226, %247 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #7
  br label %270

270:                                              ; preds = %268, %60, %28
  %271 = phi i32 [ %50, %28 ], [ %76, %60 ], [ %269, %268 ]
  %272 = phi i32 [ %54, %28 ], [ %65, %60 ], [ %151, %268 ]
  %273 = zext i32 %272 to i64
  %274 = shl nuw i64 %273, 32
  %275 = zext i32 %271 to i64
  %276 = or i64 %274, %275
  ret i64 %276
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink23BackgroundImageGeometry24ShouldUseFixedAttachmentERKNS_9FillLayerE(%"class.blink::FillLayer"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %2, align 8
  %4 = icmp eq %"class.blink::StyleImage"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %0, i64 0, i32 5
  %7 = bitcast [7 x i8]* %6 to i56*
  %8 = load i56, i56* %7, align 8
  %9 = and i56 %8, 3
  %10 = icmp eq i56 %9, 2
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ false, %1 ], [ %10, %5 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundImageGeometryC2ERKNS_10LayoutViewERKNS_14PhysicalOffsetE(%"class.blink::BackgroundImageGeometry"* nocapture, %"class.blink::LayoutView"* dereferenceable(408), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutBoxModelObject"* %5, %"class.blink::LayoutBoxModelObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 1
  %7 = tail call dereferenceable(216) %"class.blink::LayoutBox"* @_ZNK5blink10LayoutView7RootBoxEv(%"class.blink::LayoutView"* %1) #7
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %7, i64 0, i32 0
  store %"class.blink::LayoutBoxModelObject"* %8, %"class.blink::LayoutBoxModelObject"** %6, align 8
  %9 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 10
  %12 = bitcast %"struct.blink::PhysicalSize"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 73, i1 false)
  store i8 1, i8* %11, align 1
  %13 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 11
  store i8 0, i8* %13, align 2
  %14 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 12
  store i8 0, i8* %14, align 1
  %15 = tail call dereferenceable(216) %"class.blink::LayoutBox"* @_ZNK5blink10LayoutView7RootBoxEv(%"class.blink::LayoutView"* %1) #7
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %15, i64 0, i32 2, i32 1
  %17 = bitcast %"class.blink::LayoutSize"* %16 to i64*
  %18 = load i64, i64* %17, align 4
  %19 = bitcast %"struct.blink::PhysicalSize"* %9 to i64*
  store i64 %18, i64* %19, align 8
  %20 = bitcast %"struct.blink::PhysicalOffset"* %2 to i64*
  %21 = bitcast %"struct.blink::PhysicalOffset"* %10 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 8
  ret void
}

declare dereferenceable(216) %"class.blink::LayoutBox"* @_ZNK5blink10LayoutView7RootBoxEv(%"class.blink::LayoutView"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundImageGeometryC2ERKNS_20LayoutBoxModelObjectE(%"class.blink::BackgroundImageGeometry"* nocapture, %"class.blink::LayoutBoxModelObject"* dereferenceable(88)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 0
  store %"class.blink::LayoutBoxModelObject"* %1, %"class.blink::LayoutBoxModelObject"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 1
  store %"class.blink::LayoutBoxModelObject"* %1, %"class.blink::LayoutBoxModelObject"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 76, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundImageGeometryC2ERKNS_15LayoutTableCellEPKNS_12LayoutObjectE(%"class.blink::BackgroundImageGeometry"* nocapture, %"class.blink::LayoutTableCell"* dereferenceable(312), %"class.blink::LayoutObject"*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutTableCell", %"class.blink::LayoutTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutBoxModelObject"* %5, %"class.blink::LayoutBoxModelObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 1
  %7 = icmp ne %"class.blink::LayoutObject"* %2, null
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::LayoutObject"* %2 to i1 (%"class.blink::LayoutObject"*, i32)***
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, i64 92
  %12 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* nonnull %2, i32 46) #7
  %14 = bitcast %"class.blink::LayoutObject"* %2 to %"class.blink::LayoutBoxModelObject"*
  %15 = select i1 %13, %"class.blink::LayoutBoxModelObject"* %5, %"class.blink::LayoutBoxModelObject"* %14
  br label %16

16:                                               ; preds = %8, %3
  %17 = phi %"class.blink::LayoutBoxModelObject"* [ %5, %3 ], [ %15, %8 ]
  store %"class.blink::LayoutBoxModelObject"* %17, %"class.blink::LayoutBoxModelObject"** %6, align 8
  %18 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 11
  %21 = bitcast %"struct.blink::PhysicalSize"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 74, i1 false)
  store i8 1, i8* %20, align 2
  %22 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 12
  store i8 0, i8* %22, align 1
  br i1 %7, label %24, label %23

23:                                               ; preds = %16
  store i8 0, i8* %22, align 1
  br label %38

24:                                               ; preds = %16
  %25 = bitcast %"class.blink::LayoutObject"* %2 to i1 (%"class.blink::LayoutObject"*, i32)***
  %26 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %26, i64 92
  %28 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::LayoutObject"* nonnull %2, i32 46) #7
  %30 = xor i1 %29, true
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %22, align 1
  br i1 %29, label %38, label %32

32:                                               ; preds = %24
  %33 = bitcast %"class.blink::LayoutObject"* %2 to %"class.blink::LayoutBox"*
  %34 = tail call i64 @_ZN5blink23BackgroundImageGeometry27GetPositioningOffsetForCellERKNS_15LayoutTableCellERKNS_9LayoutBoxE(%"class.blink::BackgroundImageGeometry"* undef, %"class.blink::LayoutTableCell"* dereferenceable(312) %1, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %33)
  %35 = bitcast %"struct.blink::PhysicalOffset"* %19 to i64*
  store i64 %34, i64* %35, align 8
  %36 = tail call i64 @_ZN5blink23BackgroundImageGeometry29GetBackgroundObjectDimensionsERKNS_15LayoutTableCellERKNS_9LayoutBoxE(%"class.blink::BackgroundImageGeometry"* undef, %"class.blink::LayoutTableCell"* dereferenceable(312) %1, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %33)
  %37 = bitcast %"struct.blink::PhysicalSize"* %18 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %24, %23, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundImageGeometryC2ERKNS_17LayoutNGTableCellENS_14PhysicalOffsetERKNS_9LayoutBoxENS_12PhysicalSizeE(%"class.blink::BackgroundImageGeometry"* nocapture, %"class.blink::LayoutNGTableCell"* dereferenceable(320), i64, %"class.blink::LayoutBox"* dereferenceable(216), i64) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutNGTableCell", %"class.blink::LayoutNGTableCell"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutBoxModelObject"* %7, %"class.blink::LayoutBoxModelObject"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %3, i64 0, i32 0
  store %"class.blink::LayoutBoxModelObject"* %9, %"class.blink::LayoutBoxModelObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 11
  %13 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %10, i64 2
  %14 = bitcast %"struct.blink::PhysicalSize"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 58, i1 false)
  store i8 1, i8* %12, align 2
  %15 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 12
  store i8 1, i8* %15, align 1
  %16 = bitcast %"struct.blink::PhysicalOffset"* %11 to i64*
  store i64 %2, i64* %16, align 8
  %17 = bitcast %"struct.blink::PhysicalSize"* %10 to i64*
  store i64 %4, i64* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23BackgroundImageGeometry26ComputeDestRectAdjustmentsERKNS_9FillLayerERKNS_12PhysicalRectEbRNS_17LayoutRectOutsetsES8_(%"class.blink::BackgroundImageGeometry"* nocapture readonly, %"class.blink::FillLayer"* nocapture readonly dereferenceable(64), %"struct.blink::PhysicalRect"* dereferenceable(16), i1 zeroext, %"class.blink::LayoutRectOutsets"* nocapture dereferenceable(16), %"class.blink::LayoutRectOutsets"* nocapture dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.blink::FloatRoundedRect", align 4
  %8 = alloca [4 x %"struct.blink::BorderEdge"], align 16
  %9 = alloca %"class.blink::FloatRoundedRect", align 4
  %10 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 5
  %11 = bitcast [7 x i8]* %10 to i56*
  %12 = load i56, i56* %11, align 8
  %13 = lshr i56 %12, 2
  %14 = trunc i56 %13 to i32
  %15 = and i32 %14, 3
  switch i32 %15, label %359 [
    i32 2, label %18
    i32 1, label %16
    i32 0, label %216
  ]

16:                                               ; preds = %6
  %17 = bitcast %"class.blink::LayoutRectOutsets"* %4 to i64*
  br label %102

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 1
  %20 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %19, align 8
  %21 = bitcast %"class.blink::LayoutBoxModelObject"* %20 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %22 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %22, i64 118
  %24 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, align 8
  %25 = tail call i32 %24(%"class.blink::LayoutBoxModelObject"* %20) #7
  %26 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %21, align 8
  %27 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %26, i64 121
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  %29 = tail call i32 %28(%"class.blink::LayoutBoxModelObject"* %20) #7
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %21, align 8
  %31 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %30, i64 119
  %32 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %31, align 8
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* %20) #7
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %21, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 120
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %20) #7
  %38 = zext i32 %29 to i64
  %39 = shl nuw i64 %38, 32
  %40 = zext i32 %25 to i64
  %41 = or i64 %39, %40
  %42 = zext i32 %37 to i64
  %43 = shl nuw i64 %42, 32
  %44 = zext i32 %33 to i64
  %45 = or i64 %43, %44
  %46 = bitcast %"class.blink::LayoutRectOutsets"* %4 to i64*
  store i64 %41, i64* %46, align 4
  %47 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 2
  %48 = bitcast %"class.blink::LayoutUnit"* %47 to i64*
  store i64 %45, i64* %48, align 4
  %49 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 0, i32 0
  %50 = or i32 %25, %29
  %51 = or i32 %50, %33
  %52 = or i32 %51, %37
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %102, label %54

54:                                               ; preds = %18
  %55 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %19, align 8
  %56 = bitcast %"class.blink::LayoutBoxModelObject"* %55 to { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)***
  %57 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)**, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*** %56, align 8
  %58 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %57, i64 126
  %59 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %58, align 8
  %60 = tail call { i64, i64 } %59(%"class.blink::LayoutBoxModelObject"* %55) #7
  %61 = extractvalue { i64, i64 } %60, 0
  %62 = trunc i64 %61 to i32
  %63 = lshr i64 %61, 32
  %64 = trunc i64 %63 to i32
  %65 = extractvalue { i64, i64 } %60, 1
  %66 = load i32, i32* %49, align 4
  %67 = icmp slt i32 %62, 0
  %68 = select i1 %67, i32 -2147483648, i32 2147483647
  %69 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %66, i32 %62) #7
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 %68, i32 %71, !prof !2
  store i32 %72, i32* %49, align 4
  %73 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %64, 0
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %74, i32 %64) #7
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !2
  store i32 %80, i32* %73, align 4
  %81 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 2, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = trunc i64 %65 to i32
  %84 = icmp slt i32 %83, 0
  %85 = select i1 %84, i32 -2147483648, i32 2147483647
  %86 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %82, i32 %83) #7
  %87 = extractvalue { i32, i1 } %86, 1
  %88 = extractvalue { i32, i1 } %86, 0
  %89 = select i1 %87, i32 %85, i32 %88, !prof !2
  store i32 %89, i32* %81, align 4
  %90 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 3, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = lshr i64 %65, 32
  %93 = trunc i64 %92 to i32
  %94 = icmp slt i32 %93, 0
  %95 = select i1 %94, i32 -2147483648, i32 2147483647
  %96 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %91, i32 %93) #7
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !2
  store i32 %99, i32* %90, align 4
  %100 = bitcast %"class.blink::LayoutRectOutsets"* %5 to i8*
  %101 = bitcast %"class.blink::LayoutRectOutsets"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %100, i8* align 4 %101, i64 16, i1 false)
  br label %359

102:                                              ; preds = %18, %16
  %103 = phi i64* [ %17, %16 ], [ %46, %18 ]
  %104 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 1
  %105 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %104, align 8
  %106 = bitcast %"class.blink::LayoutBoxModelObject"* %105 to { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)***
  %107 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)**, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*** %106, align 8
  %108 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %107, i64 126
  %109 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %108, align 8
  %110 = tail call { i64, i64 } %109(%"class.blink::LayoutBoxModelObject"* %105) #7
  %111 = extractvalue { i64, i64 } %110, 0
  %112 = extractvalue { i64, i64 } %110, 1
  store i64 %111, i64* %103, align 4
  %113 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 2
  %114 = bitcast %"class.blink::LayoutUnit"* %113 to i64*
  store i64 %112, i64* %114, align 4
  br i1 %3, label %115, label %118

115:                                              ; preds = %102
  %116 = bitcast %"class.blink::LayoutRectOutsets"* %5 to i8*
  %117 = bitcast %"class.blink::LayoutRectOutsets"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 4 %117, i64 16, i1 false)
  br label %359

118:                                              ; preds = %102
  %119 = bitcast %"class.blink::FloatRoundedRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %119) #7
  %120 = bitcast %"class.blink::LayoutBoxModelObject"** %104 to %"class.blink::LayoutObject"**
  %121 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %121, i64 0, i32 5, i32 0
  %123 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %122, align 8
  call void @_ZN5blink21RoundedBorderGeometry30PixelSnappedRoundedInnerBorderERKNS_13ComputedStyleERKNS_12PhysicalRectENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* nonnull sret %7, %"class.blink::ComputedStyle"* dereferenceable(104) %123, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, i32 16843009) #7
  %124 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %7, i64 0, i32 0, i32 0, i32 0
  %125 = load float, float* %124, align 4
  %126 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %7, i64 0, i32 0, i32 0, i32 1
  %127 = load float, float* %126, align 4
  %128 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %7, i64 0, i32 0, i32 1, i32 0
  %129 = load float, float* %128, align 4
  %130 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %7, i64 0, i32 0, i32 1, i32 1
  %131 = load float, float* %130, align 4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %119) #7
  %132 = fmul float %125, 6.400000e+01
  %133 = fcmp ult float %132, 0xC1E0000000000000
  %134 = fcmp ugt float %132, 0x41DFFFFFE0000000
  %135 = fcmp ogt float %132, 0xC1E0000000000000
  %136 = select i1 %135, float %132, float 0xC1E0000000000000
  %137 = fptosi float %136 to i32
  %138 = select i1 %133, i32 0, i32 2147483647
  %139 = select i1 %134, i32 %138, i32 %137
  %140 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = icmp sgt i32 %141, -1
  %143 = select i1 %142, i32 -2147483648, i32 2147483647
  %144 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %139, i32 %141) #7
  %145 = extractvalue { i32, i1 } %144, 1
  %146 = extractvalue { i32, i1 } %144, 0
  %147 = select i1 %145, i32 %143, i32 %146, !prof !2
  %148 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 3, i32 0
  store i32 %147, i32* %148, align 4
  %149 = fmul float %127, 6.400000e+01
  %150 = fcmp ult float %149, 0xC1E0000000000000
  %151 = fcmp ugt float %149, 0x41DFFFFFE0000000
  %152 = fcmp ogt float %149, 0xC1E0000000000000
  %153 = select i1 %152, float %149, float 0xC1E0000000000000
  %154 = fptosi float %153 to i32
  %155 = select i1 %150, i32 0, i32 2147483647
  %156 = select i1 %151, i32 %155, i32 %154
  %157 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 0, i32 1, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = icmp sgt i32 %158, -1
  %160 = select i1 %159, i32 -2147483648, i32 2147483647
  %161 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %156, i32 %158) #7
  %162 = extractvalue { i32, i1 } %161, 1
  %163 = extractvalue { i32, i1 } %161, 0
  %164 = select i1 %162, i32 %160, i32 %163, !prof !2
  %165 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 0, i32 0
  store i32 %164, i32* %165, align 4
  %166 = load i32, i32* %140, align 4
  %167 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = icmp slt i32 %168, 0
  %170 = select i1 %169, i32 -2147483648, i32 2147483647
  %171 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %166, i32 %168) #7
  %172 = extractvalue { i32, i1 } %171, 1
  %173 = extractvalue { i32, i1 } %171, 0
  %174 = select i1 %172, i32 %170, i32 %173, !prof !2
  %175 = fadd float %125, %129
  %176 = fmul float %175, 6.400000e+01
  %177 = fcmp ult float %176, 0xC1E0000000000000
  %178 = fcmp ugt float %176, 0x41DFFFFFE0000000
  %179 = fcmp ogt float %176, 0xC1E0000000000000
  %180 = select i1 %179, float %176, float 0xC1E0000000000000
  %181 = fptosi float %180 to i32
  %182 = select i1 %177, i32 0, i32 2147483647
  %183 = select i1 %178, i32 %182, i32 %181
  %184 = icmp sgt i32 %183, -1
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %174, i32 %183) #7
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !2
  %190 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 1, i32 0
  store i32 %189, i32* %190, align 4
  %191 = load i32, i32* %157, align 4
  %192 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 1, i32 1, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = icmp slt i32 %193, 0
  %195 = select i1 %194, i32 -2147483648, i32 2147483647
  %196 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %191, i32 %193) #7
  %197 = extractvalue { i32, i1 } %196, 1
  %198 = extractvalue { i32, i1 } %196, 0
  %199 = select i1 %197, i32 %195, i32 %198, !prof !2
  %200 = fadd float %127, %131
  %201 = fmul float %200, 6.400000e+01
  %202 = fcmp ult float %201, 0xC1E0000000000000
  %203 = fcmp ugt float %201, 0x41DFFFFFE0000000
  %204 = fcmp ogt float %201, 0xC1E0000000000000
  %205 = select i1 %204, float %201, float 0xC1E0000000000000
  %206 = fptosi float %205 to i32
  %207 = select i1 %202, i32 0, i32 2147483647
  %208 = select i1 %203, i32 %207, i32 %206
  %209 = icmp sgt i32 %208, -1
  %210 = select i1 %209, i32 -2147483648, i32 2147483647
  %211 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %199, i32 %208) #7
  %212 = extractvalue { i32, i1 } %211, 1
  %213 = extractvalue { i32, i1 } %211, 0
  %214 = select i1 %212, i32 %210, i32 %213, !prof !2
  %215 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 2, i32 0
  store i32 %214, i32* %215, align 4
  br label %359

216:                                              ; preds = %6
  br i1 %3, label %359, label %217

217:                                              ; preds = %216
  %218 = bitcast [4 x %"struct.blink::BorderEdge"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %218) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %218, i8* align 16 bitcast ([4 x { %"class.blink::Color", i8, i8, [2 x i8], float }]* @__const._ZNK5blink23BackgroundImageGeometry26ComputeDestRectAdjustmentsERKNS_9FillLayerERKNS_12PhysicalRectEbRNS_17LayoutRectOutsetsES8_.edges to i8*), i64 48, i1 false)
  %219 = getelementptr inbounds [4 x %"struct.blink::BorderEdge"], [4 x %"struct.blink::BorderEdge"]* %8, i64 0, i64 0
  call void @_ZN5blink10BorderEdgeC1Ev(%"struct.blink::BorderEdge"* nonnull %219) #7
  %220 = getelementptr inbounds [4 x %"struct.blink::BorderEdge"], [4 x %"struct.blink::BorderEdge"]* %8, i64 0, i64 1
  call void @_ZN5blink10BorderEdgeC1Ev(%"struct.blink::BorderEdge"* %220) #7
  %221 = getelementptr inbounds [4 x %"struct.blink::BorderEdge"], [4 x %"struct.blink::BorderEdge"]* %8, i64 0, i64 2
  call void @_ZN5blink10BorderEdgeC1Ev(%"struct.blink::BorderEdge"* %221) #7
  %222 = getelementptr inbounds [4 x %"struct.blink::BorderEdge"], [4 x %"struct.blink::BorderEdge"]* %8, i64 0, i64 3
  call void @_ZN5blink10BorderEdgeC1Ev(%"struct.blink::BorderEdge"* %222) #7
  %223 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 1
  %224 = bitcast %"class.blink::LayoutBoxModelObject"** %223 to %"class.blink::LayoutObject"**
  %225 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %225, i64 0, i32 5, i32 0
  %227 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %226, align 8
  call void @_ZNK5blink13ComputedStyle17GetBorderEdgeInfoEPNS_10BorderEdgeENS_16PhysicalBoxSidesE(%"class.blink::ComputedStyle"* %227, %"struct.blink::BorderEdge"* nonnull %219, i32 16843009) #7
  %228 = bitcast %"class.blink::FloatRoundedRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %228) #7
  %229 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %224, align 8
  %230 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %229, i64 0, i32 5, i32 0
  %231 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %230, align 8
  call void @_ZN5blink21RoundedBorderGeometry30PixelSnappedRoundedInnerBorderERKNS_13ComputedStyleERKNS_12PhysicalRectENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* nonnull sret %9, %"class.blink::ComputedStyle"* dereferenceable(104) %231, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, i32 16843009) #7
  %232 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %9, i64 0, i32 0, i32 0, i32 0
  %233 = load float, float* %232, align 4
  %234 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %9, i64 0, i32 0, i32 0, i32 1
  %235 = load float, float* %234, align 4
  %236 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %9, i64 0, i32 0, i32 1, i32 0
  %237 = load float, float* %236, align 4
  %238 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %9, i64 0, i32 0, i32 1, i32 1
  %239 = load float, float* %238, align 4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %228) #7
  %240 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %223, align 8
  %241 = bitcast %"class.blink::LayoutBoxModelObject"* %240 to { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)***
  %242 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)**, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*** %241, align 8
  %243 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %242, i64 126
  %244 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %243, align 8
  %245 = call { i64, i64 } %244(%"class.blink::LayoutBoxModelObject"* %240) #7
  %246 = extractvalue { i64, i64 } %245, 0
  %247 = lshr i64 %246, 32
  %248 = trunc i64 %247 to i32
  %249 = extractvalue { i64, i64 } %245, 1
  %250 = call zeroext i1 @_ZNK5blink10BorderEdge18ObscuresBackgroundEv(%"struct.blink::BorderEdge"* nonnull %219) #7
  br i1 %250, label %251, label %271

251:                                              ; preds = %217
  %252 = trunc i64 %246 to i32
  %253 = fmul float %235, 6.400000e+01
  %254 = fcmp ult float %253, 0xC1E0000000000000
  %255 = fcmp ugt float %253, 0x41DFFFFFE0000000
  %256 = fcmp ogt float %253, 0xC1E0000000000000
  %257 = select i1 %256, float %253, float 0xC1E0000000000000
  %258 = fptosi float %257 to i32
  %259 = select i1 %254, i32 0, i32 2147483647
  %260 = select i1 %255, i32 %259, i32 %258
  %261 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 0, i32 1, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = icmp sgt i32 %262, -1
  %264 = select i1 %263, i32 -2147483648, i32 2147483647
  %265 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %260, i32 %262) #7
  %266 = extractvalue { i32, i1 } %265, 1
  %267 = extractvalue { i32, i1 } %265, 0
  %268 = select i1 %266, i32 %264, i32 %267, !prof !2
  %269 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 0, i32 0
  store i32 %268, i32* %269, align 4
  %270 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 0, i32 0
  store i32 %252, i32* %270, align 4
  br label %271

271:                                              ; preds = %251, %217
  %272 = getelementptr inbounds [4 x %"struct.blink::BorderEdge"], [4 x %"struct.blink::BorderEdge"]* %8, i64 0, i64 1
  %273 = call zeroext i1 @_ZNK5blink10BorderEdge18ObscuresBackgroundEv(%"struct.blink::BorderEdge"* %272) #7
  br i1 %273, label %274, label %302

274:                                              ; preds = %271
  %275 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %276 = load i32, i32* %275, align 4
  %277 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %278 = load i32, i32* %277, align 4
  %279 = icmp slt i32 %278, 0
  %280 = select i1 %279, i32 -2147483648, i32 2147483647
  %281 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %276, i32 %278) #7
  %282 = extractvalue { i32, i1 } %281, 1
  %283 = extractvalue { i32, i1 } %281, 0
  %284 = select i1 %282, i32 %280, i32 %283, !prof !2
  %285 = fadd float %233, %237
  %286 = fmul float %285, 6.400000e+01
  %287 = fcmp ult float %286, 0xC1E0000000000000
  %288 = fcmp ugt float %286, 0x41DFFFFFE0000000
  %289 = fcmp ogt float %286, 0xC1E0000000000000
  %290 = select i1 %289, float %286, float 0xC1E0000000000000
  %291 = fptosi float %290 to i32
  %292 = select i1 %287, i32 0, i32 2147483647
  %293 = select i1 %288, i32 %292, i32 %291
  %294 = icmp sgt i32 %293, -1
  %295 = select i1 %294, i32 -2147483648, i32 2147483647
  %296 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %284, i32 %293) #7
  %297 = extractvalue { i32, i1 } %296, 1
  %298 = extractvalue { i32, i1 } %296, 0
  %299 = select i1 %297, i32 %295, i32 %298, !prof !2
  %300 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 1, i32 0
  store i32 %299, i32* %300, align 4
  %301 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 1, i32 0
  store i32 %248, i32* %301, align 4
  br label %302

302:                                              ; preds = %274, %271
  %303 = getelementptr inbounds [4 x %"struct.blink::BorderEdge"], [4 x %"struct.blink::BorderEdge"]* %8, i64 0, i64 2
  %304 = call zeroext i1 @_ZNK5blink10BorderEdge18ObscuresBackgroundEv(%"struct.blink::BorderEdge"* %303) #7
  br i1 %304, label %305, label %334

305:                                              ; preds = %302
  %306 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 0, i32 1, i32 0
  %307 = load i32, i32* %306, align 4
  %308 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 1, i32 1, i32 0
  %309 = load i32, i32* %308, align 4
  %310 = icmp slt i32 %309, 0
  %311 = select i1 %310, i32 -2147483648, i32 2147483647
  %312 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %307, i32 %309) #7
  %313 = extractvalue { i32, i1 } %312, 1
  %314 = extractvalue { i32, i1 } %312, 0
  %315 = select i1 %313, i32 %311, i32 %314, !prof !2
  %316 = fadd float %235, %239
  %317 = fmul float %316, 6.400000e+01
  %318 = fcmp ult float %317, 0xC1E0000000000000
  %319 = fcmp ugt float %317, 0x41DFFFFFE0000000
  %320 = fcmp ogt float %317, 0xC1E0000000000000
  %321 = select i1 %320, float %317, float 0xC1E0000000000000
  %322 = fptosi float %321 to i32
  %323 = select i1 %318, i32 0, i32 2147483647
  %324 = select i1 %319, i32 %323, i32 %322
  %325 = icmp sgt i32 %324, -1
  %326 = select i1 %325, i32 -2147483648, i32 2147483647
  %327 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %315, i32 %324) #7
  %328 = extractvalue { i32, i1 } %327, 1
  %329 = extractvalue { i32, i1 } %327, 0
  %330 = select i1 %328, i32 %326, i32 %329, !prof !2
  %331 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 2, i32 0
  store i32 %330, i32* %331, align 4
  %332 = trunc i64 %249 to i32
  %333 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 2, i32 0
  store i32 %332, i32* %333, align 4
  br label %334

334:                                              ; preds = %305, %302
  %335 = getelementptr inbounds [4 x %"struct.blink::BorderEdge"], [4 x %"struct.blink::BorderEdge"]* %8, i64 0, i64 3
  %336 = call zeroext i1 @_ZNK5blink10BorderEdge18ObscuresBackgroundEv(%"struct.blink::BorderEdge"* %335) #7
  br i1 %336, label %337, label %358

337:                                              ; preds = %334
  %338 = fmul float %233, 6.400000e+01
  %339 = fcmp ult float %338, 0xC1E0000000000000
  %340 = fcmp ugt float %338, 0x41DFFFFFE0000000
  %341 = fcmp ogt float %338, 0xC1E0000000000000
  %342 = select i1 %341, float %338, float 0xC1E0000000000000
  %343 = fptosi float %342 to i32
  %344 = select i1 %339, i32 0, i32 2147483647
  %345 = select i1 %340, i32 %344, i32 %343
  %346 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %347 = load i32, i32* %346, align 4
  %348 = icmp sgt i32 %347, -1
  %349 = select i1 %348, i32 -2147483648, i32 2147483647
  %350 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %345, i32 %347) #7
  %351 = extractvalue { i32, i1 } %350, 1
  %352 = extractvalue { i32, i1 } %350, 0
  %353 = select i1 %351, i32 %349, i32 %352, !prof !2
  %354 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 3, i32 0
  store i32 %353, i32* %354, align 4
  %355 = lshr i64 %249, 32
  %356 = trunc i64 %355 to i32
  %357 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 3, i32 0
  store i32 %356, i32* %357, align 4
  br label %358

358:                                              ; preds = %337, %334
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %218) #7
  br label %359

359:                                              ; preds = %216, %115, %118, %54, %358, %6
  ret void
}

declare void @_ZN5blink21RoundedBorderGeometry30PixelSnappedRoundedInnerBorderERKNS_13ComputedStyleERKNS_12PhysicalRectENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* sret, %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::PhysicalRect"* dereferenceable(16), i32) local_unnamed_addr #3

declare void @_ZN5blink10BorderEdgeC1Ev(%"struct.blink::BorderEdge"*) unnamed_addr #3

declare void @_ZNK5blink13ComputedStyle17GetBorderEdgeInfoEPNS_10BorderEdgeENS_16PhysicalBoxSidesE(%"class.blink::ComputedStyle"*, %"struct.blink::BorderEdge"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink10BorderEdge18ObscuresBackgroundEv(%"struct.blink::BorderEdge"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23BackgroundImageGeometry33ComputePositioningAreaAdjustmentsERKNS_9FillLayerERKNS_12PhysicalRectEbRNS_17LayoutRectOutsetsES8_(%"class.blink::BackgroundImageGeometry"* nocapture readonly, %"class.blink::FillLayer"* nocapture readonly dereferenceable(64), %"struct.blink::PhysicalRect"* dereferenceable(16), i1 zeroext, %"class.blink::LayoutRectOutsets"* nocapture dereferenceable(16), %"class.blink::LayoutRectOutsets"* nocapture dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.blink::FloatRoundedRect", align 4
  %8 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 5
  %9 = bitcast [7 x i8]* %8 to i56*
  %10 = load i56, i56* %9, align 8
  %11 = lshr i56 %10, 4
  %12 = trunc i56 %11 to i32
  %13 = and i32 %12, 3
  switch i32 %13, label %217 [
    i32 2, label %16
    i32 1, label %14
    i32 0, label %214
  ]

14:                                               ; preds = %6
  %15 = bitcast %"class.blink::LayoutRectOutsets"* %4 to i64*
  br label %100

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 1
  %18 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %17, align 8
  %19 = bitcast %"class.blink::LayoutBoxModelObject"* %18 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %20 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %20, i64 118
  %22 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::LayoutBoxModelObject"* %18) #7
  %24 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %19, align 8
  %25 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, i64 121
  %26 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %25, align 8
  %27 = tail call i32 %26(%"class.blink::LayoutBoxModelObject"* %18) #7
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %19, align 8
  %29 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %28, i64 119
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  %31 = tail call i32 %30(%"class.blink::LayoutBoxModelObject"* %18) #7
  %32 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %19, align 8
  %33 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %32, i64 120
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %33, align 8
  %35 = tail call i32 %34(%"class.blink::LayoutBoxModelObject"* %18) #7
  %36 = zext i32 %27 to i64
  %37 = shl nuw i64 %36, 32
  %38 = zext i32 %23 to i64
  %39 = or i64 %37, %38
  %40 = zext i32 %35 to i64
  %41 = shl nuw i64 %40, 32
  %42 = zext i32 %31 to i64
  %43 = or i64 %41, %42
  %44 = bitcast %"class.blink::LayoutRectOutsets"* %4 to i64*
  store i64 %39, i64* %44, align 4
  %45 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 2
  %46 = bitcast %"class.blink::LayoutUnit"* %45 to i64*
  store i64 %43, i64* %46, align 4
  %47 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 0, i32 0
  %48 = or i32 %23, %27
  %49 = or i32 %48, %31
  %50 = or i32 %49, %35
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %100, label %52

52:                                               ; preds = %16
  %53 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %17, align 8
  %54 = bitcast %"class.blink::LayoutBoxModelObject"* %53 to { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)***
  %55 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)**, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*** %54, align 8
  %56 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %55, i64 126
  %57 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %56, align 8
  %58 = tail call { i64, i64 } %57(%"class.blink::LayoutBoxModelObject"* %53) #7
  %59 = extractvalue { i64, i64 } %58, 0
  %60 = trunc i64 %59 to i32
  %61 = lshr i64 %59, 32
  %62 = trunc i64 %61 to i32
  %63 = extractvalue { i64, i64 } %58, 1
  %64 = load i32, i32* %47, align 4
  %65 = icmp slt i32 %60, 0
  %66 = select i1 %65, i32 -2147483648, i32 2147483647
  %67 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %64, i32 %60) #7
  %68 = extractvalue { i32, i1 } %67, 1
  %69 = extractvalue { i32, i1 } %67, 0
  %70 = select i1 %68, i32 %66, i32 %69, !prof !2
  store i32 %70, i32* %47, align 4
  %71 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 1, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp slt i32 %62, 0
  %74 = select i1 %73, i32 -2147483648, i32 2147483647
  %75 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %72, i32 %62) #7
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = extractvalue { i32, i1 } %75, 0
  %78 = select i1 %76, i32 %74, i32 %77, !prof !2
  store i32 %78, i32* %71, align 4
  %79 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 2, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = trunc i64 %63 to i32
  %82 = icmp slt i32 %81, 0
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %80, i32 %81) #7
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 %83, i32 %86, !prof !2
  store i32 %87, i32* %79, align 4
  %88 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 3, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = lshr i64 %63, 32
  %91 = trunc i64 %90 to i32
  %92 = icmp slt i32 %91, 0
  %93 = select i1 %92, i32 -2147483648, i32 2147483647
  %94 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %89, i32 %91) #7
  %95 = extractvalue { i32, i1 } %94, 1
  %96 = extractvalue { i32, i1 } %94, 0
  %97 = select i1 %95, i32 %93, i32 %96, !prof !2
  store i32 %97, i32* %88, align 4
  %98 = bitcast %"class.blink::LayoutRectOutsets"* %5 to i8*
  %99 = bitcast %"class.blink::LayoutRectOutsets"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 16, i1 false)
  br label %217

100:                                              ; preds = %16, %14
  %101 = phi i64* [ %15, %14 ], [ %44, %16 ]
  %102 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 1
  %103 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %102, align 8
  %104 = bitcast %"class.blink::LayoutBoxModelObject"* %103 to { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)***
  %105 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)**, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*** %104, align 8
  %106 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %105, i64 126
  %107 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %106, align 8
  %108 = tail call { i64, i64 } %107(%"class.blink::LayoutBoxModelObject"* %103) #7
  %109 = extractvalue { i64, i64 } %108, 0
  %110 = extractvalue { i64, i64 } %108, 1
  store i64 %109, i64* %101, align 4
  %111 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %4, i64 0, i32 2
  %112 = bitcast %"class.blink::LayoutUnit"* %111 to i64*
  store i64 %110, i64* %112, align 4
  br i1 %3, label %113, label %116

113:                                              ; preds = %100
  %114 = bitcast %"class.blink::LayoutRectOutsets"* %5 to i8*
  %115 = bitcast %"class.blink::LayoutRectOutsets"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %114, i8* align 4 %115, i64 16, i1 false)
  br label %217

116:                                              ; preds = %100
  %117 = bitcast %"class.blink::FloatRoundedRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %117) #7
  %118 = bitcast %"class.blink::LayoutBoxModelObject"** %102 to %"class.blink::LayoutObject"**
  %119 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %119, i64 0, i32 5, i32 0
  %121 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %120, align 8
  call void @_ZN5blink21RoundedBorderGeometry30PixelSnappedRoundedInnerBorderERKNS_13ComputedStyleERKNS_12PhysicalRectENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* nonnull sret %7, %"class.blink::ComputedStyle"* dereferenceable(104) %121, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, i32 16843009) #7
  %122 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %7, i64 0, i32 0, i32 0, i32 0
  %123 = load float, float* %122, align 4
  %124 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %7, i64 0, i32 0, i32 0, i32 1
  %125 = load float, float* %124, align 4
  %126 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %7, i64 0, i32 0, i32 1, i32 0
  %127 = load float, float* %126, align 4
  %128 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %7, i64 0, i32 0, i32 1, i32 1
  %129 = load float, float* %128, align 4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %117) #7
  %130 = fmul float %123, 6.400000e+01
  %131 = fcmp ult float %130, 0xC1E0000000000000
  %132 = fcmp ugt float %130, 0x41DFFFFFE0000000
  %133 = fcmp ogt float %130, 0xC1E0000000000000
  %134 = select i1 %133, float %130, float 0xC1E0000000000000
  %135 = fptosi float %134 to i32
  %136 = select i1 %131, i32 0, i32 2147483647
  %137 = select i1 %132, i32 %136, i32 %135
  %138 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = icmp sgt i32 %139, -1
  %141 = select i1 %140, i32 -2147483648, i32 2147483647
  %142 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %137, i32 %139) #7
  %143 = extractvalue { i32, i1 } %142, 1
  %144 = extractvalue { i32, i1 } %142, 0
  %145 = select i1 %143, i32 %141, i32 %144, !prof !2
  %146 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 3, i32 0
  store i32 %145, i32* %146, align 4
  %147 = fmul float %125, 6.400000e+01
  %148 = fcmp ult float %147, 0xC1E0000000000000
  %149 = fcmp ugt float %147, 0x41DFFFFFE0000000
  %150 = fcmp ogt float %147, 0xC1E0000000000000
  %151 = select i1 %150, float %147, float 0xC1E0000000000000
  %152 = fptosi float %151 to i32
  %153 = select i1 %148, i32 0, i32 2147483647
  %154 = select i1 %149, i32 %153, i32 %152
  %155 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 1, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = icmp sgt i32 %156, -1
  %158 = select i1 %157, i32 -2147483648, i32 2147483647
  %159 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %154, i32 %156) #7
  %160 = extractvalue { i32, i1 } %159, 1
  %161 = extractvalue { i32, i1 } %159, 0
  %162 = select i1 %160, i32 %158, i32 %161, !prof !2
  %163 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 0, i32 0
  store i32 %162, i32* %163, align 4
  %164 = load i32, i32* %138, align 4
  %165 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 0, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = icmp slt i32 %166, 0
  %168 = select i1 %167, i32 -2147483648, i32 2147483647
  %169 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %164, i32 %166) #7
  %170 = extractvalue { i32, i1 } %169, 1
  %171 = extractvalue { i32, i1 } %169, 0
  %172 = select i1 %170, i32 %168, i32 %171, !prof !2
  %173 = fadd float %123, %127
  %174 = fmul float %173, 6.400000e+01
  %175 = fcmp ult float %174, 0xC1E0000000000000
  %176 = fcmp ugt float %174, 0x41DFFFFFE0000000
  %177 = fcmp ogt float %174, 0xC1E0000000000000
  %178 = select i1 %177, float %174, float 0xC1E0000000000000
  %179 = fptosi float %178 to i32
  %180 = select i1 %175, i32 0, i32 2147483647
  %181 = select i1 %176, i32 %180, i32 %179
  %182 = icmp sgt i32 %181, -1
  %183 = select i1 %182, i32 -2147483648, i32 2147483647
  %184 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %172, i32 %181) #7
  %185 = extractvalue { i32, i1 } %184, 1
  %186 = extractvalue { i32, i1 } %184, 0
  %187 = select i1 %185, i32 %183, i32 %186, !prof !2
  %188 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 1, i32 0
  store i32 %187, i32* %188, align 4
  %189 = load i32, i32* %155, align 4
  %190 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 1, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = icmp slt i32 %191, 0
  %193 = select i1 %192, i32 -2147483648, i32 2147483647
  %194 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %189, i32 %191) #7
  %195 = extractvalue { i32, i1 } %194, 1
  %196 = extractvalue { i32, i1 } %194, 0
  %197 = select i1 %195, i32 %193, i32 %196, !prof !2
  %198 = fadd float %125, %129
  %199 = fmul float %198, 6.400000e+01
  %200 = fcmp ult float %199, 0xC1E0000000000000
  %201 = fcmp ugt float %199, 0x41DFFFFFE0000000
  %202 = fcmp ogt float %199, 0xC1E0000000000000
  %203 = select i1 %202, float %199, float 0xC1E0000000000000
  %204 = fptosi float %203 to i32
  %205 = select i1 %200, i32 0, i32 2147483647
  %206 = select i1 %201, i32 %205, i32 %204
  %207 = icmp sgt i32 %206, -1
  %208 = select i1 %207, i32 -2147483648, i32 2147483647
  %209 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %197, i32 %206) #7
  %210 = extractvalue { i32, i1 } %209, 1
  %211 = extractvalue { i32, i1 } %209, 0
  %212 = select i1 %210, i32 %208, i32 %211, !prof !2
  %213 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 2, i32 0
  store i32 %212, i32* %213, align 4
  br label %217

214:                                              ; preds = %6
  %215 = bitcast %"class.blink::LayoutRectOutsets"* %5 to i8*
  %216 = bitcast %"class.blink::LayoutRectOutsets"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %216, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %215, i8 0, i64 16, i1 false)
  br label %217

217:                                              ; preds = %113, %116, %52, %214, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundImageGeometry22ComputePositioningAreaEPKNS_20LayoutBoxModelObjectENS_10PaintPhaseERKNS_9FillLayerERKNS_12PhysicalRectERS8_SB_RNS_14PhysicalOffsetESD_(%"class.blink::BackgroundImageGeometry"*, %"class.blink::LayoutBoxModelObject"*, i32, %"class.blink::FillLayer"* nocapture readonly dereferenceable(64), %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), %"struct.blink::PhysicalRect"* dereferenceable(16), %"struct.blink::PhysicalRect"* dereferenceable(16), %"struct.blink::PhysicalOffset"* nocapture dereferenceable(8), %"struct.blink::PhysicalOffset"* nocapture dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %10 = alloca %"class.blink::LayoutObject::AncestorSkipInfo", align 8
  %11 = alloca <2 x float>, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %"class.blink::LayoutRectOutsets", align 4
  %21 = alloca %"class.blink::LayoutRectOutsets", align 4
  %22 = alloca %"class.blink::LayoutRectOutsets", align 4
  %23 = alloca %"class.blink::LayoutRectOutsets", align 4
  %24 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %3, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %24, align 8
  %26 = icmp eq %"class.blink::StyleImage"* %25, null
  br i1 %26, label %287, label %27

27:                                               ; preds = %9
  %28 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %3, i64 0, i32 5
  %29 = bitcast [7 x i8]* %28 to i56*
  %30 = load i56, i56* %29, align 8
  %31 = and i56 %30, 3
  %32 = icmp eq i56 %31, 2
  br i1 %32, label %33, label %287

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 9
  store i8 1, i8* %34, align 8
  %35 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 0
  %36 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %36, i64 0, i32 0
  %38 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %36, i64 0, i32 0, i32 6, i32 0, i32 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  %40 = icmp eq %"class.blink::Node"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %33, %41
  %42 = phi %"class.blink::LayoutObject"* [ %44, %41 ], [ %37, %33 ]
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 7
  %44 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 6, i32 0, i32 0
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  %47 = icmp eq %"class.blink::Node"* %46, null
  br i1 %47, label %41, label %48

48:                                               ; preds = %41, %33
  %49 = phi %"class.blink::Node"* [ %39, %33 ], [ %46, %41 ]
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %51, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %52, align 8
  %54 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %53) #7
  %55 = icmp eq %"class.blink::LocalFrameView"* %54, null
  br i1 %55, label %275, label %56

56:                                               ; preds = %48
  %57 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"* nonnull %54) #7
  %58 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %57, i64 0, i32 0
  %59 = bitcast %"class.blink::PaintLayerScrollableArea"* %57 to { i64, i64 } (%"class.blink::ScrollableArea"*, i32)***
  %60 = load { i64, i64 } (%"class.blink::ScrollableArea"*, i32)**, { i64, i64 } (%"class.blink::ScrollableArea"*, i32)*** %59, align 8
  %61 = getelementptr inbounds { i64, i64 } (%"class.blink::ScrollableArea"*, i32)*, { i64, i64 } (%"class.blink::ScrollableArea"*, i32)** %60, i64 52
  %62 = load { i64, i64 } (%"class.blink::ScrollableArea"*, i32)*, { i64, i64 } (%"class.blink::ScrollableArea"*, i32)** %61, align 8
  %63 = tail call { i64, i64 } %62(%"class.blink::ScrollableArea"* %58, i32 0) #7
  %64 = extractvalue { i64, i64 } %63, 1
  %65 = trunc i64 %64 to i32
  %66 = lshr i64 %64, 32
  %67 = trunc i64 %66 to i32
  %68 = icmp sgt i32 %65, 33554431
  br i1 %68, label %74, label %69

69:                                               ; preds = %56
  %70 = icmp slt i32 %65, -33554432
  %71 = shl i64 %64, 6
  %72 = and i64 %71, 4294967232
  %73 = select i1 %70, i64 2147483648, i64 %72
  br label %74

74:                                               ; preds = %69, %56
  %75 = phi i64 [ 2147483647, %56 ], [ %73, %69 ]
  %76 = icmp sgt i32 %67, 33554431
  br i1 %76, label %81, label %77

77:                                               ; preds = %74
  %78 = icmp slt i32 %67, -33554432
  %79 = shl i64 %66, 38
  %80 = select i1 %78, i64 -9223372036854775808, i64 %79
  br label %81

81:                                               ; preds = %77, %74
  %82 = phi i64 [ 9223372032559808512, %74 ], [ %80, %77 ]
  %83 = or i64 %82, %75
  %84 = bitcast %"class.blink::LayoutBoxModelObject"* %36 to i1 (%"class.blink::LayoutObject"*, i32)***
  %85 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %84, align 8
  %86 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %85, i64 92
  %87 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.blink::LayoutObject"* %37, i32 55) #7
  %89 = icmp eq %"class.blink::LayoutBoxModelObject"* %36, null
  %90 = xor i1 %88, true
  %91 = or i1 %89, %90
  br i1 %91, label %104, label %92

92:                                               ; preds = %81
  %93 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %36, i64 0, i32 0, i32 4
  %94 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %93 to i96*
  %95 = load i96, i96* %94, align 4
  %96 = and i96 %95, 77371252455336267181195264
  %97 = icmp eq i96 %96, 0
  br i1 %97, label %275, label %98

98:                                               ; preds = %92
  %99 = bitcast %"class.blink::LayoutBoxModelObject"* %36 to %"class.blink::LayoutBox"*
  %100 = tail call i64 @_ZNK5blink9LayoutBox21ScrolledContentOffsetEv(%"class.blink::LayoutBox"* %99) #7
  %101 = lshr i64 %100, 32
  %102 = trunc i64 %101 to i32
  %103 = trunc i64 %100 to i32
  br label %104

104:                                              ; preds = %98, %81
  %105 = phi i32 [ 0, %81 ], [ %103, %98 ]
  %106 = phi i32 [ 0, %81 ], [ %102, %98 ]
  %107 = icmp eq %"class.blink::LayoutBoxModelObject"* %36, %1
  br i1 %107, label %178, label %108

108:                                              ; preds = %104
  %109 = bitcast %"class.blink::LayoutObject::AncestorSkipInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #7
  %110 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %10, i64 0, i32 0
  %111 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %10, i64 0, i32 1
  %112 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %10, i64 0, i32 2
  %113 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %10, i64 0, i32 3
  %114 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 16, i1 false) #7
  store %"class.blink::LayoutObject"* %114, %"class.blink::LayoutObject"** %110, align 8
  store i8 0, i8* %111, align 8
  store i8 0, i8* %112, align 1
  store i8 0, i8* %113, align 2
  %115 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %37, %"class.blink::LayoutObject::AncestorSkipInfo"* nonnull %10) #7
  %116 = icmp eq %"class.blink::LayoutBlock"* %115, null
  %117 = load i8, i8* %112, align 1
  %118 = icmp ne i8 %117, 0
  %119 = or i1 %116, %118
  br i1 %119, label %120, label %121

120:                                              ; preds = %108
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #7
  br label %178

121:                                              ; preds = %108, %163
  %122 = phi %"class.blink::LayoutBlock"* [ %164, %163 ], [ %115, %108 ]
  %123 = phi i32 [ %160, %163 ], [ 0, %108 ]
  %124 = phi i32 [ %159, %163 ], [ 0, %108 ]
  %125 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %122, i64 0, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %122, i64 0, i32 0, i32 0, i32 0, i32 4
  %127 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %126 to i96*
  %128 = load i96, i96* %127, align 4
  %129 = and i96 %128, 8589934592
  %130 = icmp eq i96 %129, 0
  br i1 %130, label %158, label %131

131:                                              ; preds = %121
  %132 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %122, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %133 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %133, i64 0, i32 0, i32 9
  %135 = bitcast [20 x i8]* %134 to i160*
  %136 = load i160, i160* %135, align 8
  %137 = lshr i160 %136, 74
  %138 = trunc i160 %137 to i32
  %139 = and i32 %138, 7
  switch i32 %139, label %140 [
    i32 5, label %158
    i32 2, label %158
  ]

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %122, i64 0, i32 0
  %142 = call i64 @_ZNK5blink9LayoutBox21ScrolledContentOffsetEv(%"class.blink::LayoutBox"* %141) #7
  %143 = lshr i64 %142, 32
  %144 = trunc i64 %143 to i32
  %145 = trunc i64 %142 to i32
  %146 = icmp slt i32 %145, 0
  %147 = select i1 %146, i32 -2147483648, i32 2147483647
  %148 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %124, i32 %145) #7
  %149 = extractvalue { i32, i1 } %148, 1
  %150 = extractvalue { i32, i1 } %148, 0
  %151 = select i1 %149, i32 %147, i32 %150, !prof !2
  %152 = icmp slt i32 %144, 0
  %153 = select i1 %152, i32 -2147483648, i32 2147483647
  %154 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %123, i32 %144) #7
  %155 = extractvalue { i32, i1 } %154, 1
  %156 = extractvalue { i32, i1 } %154, 0
  %157 = select i1 %155, i32 %153, i32 %156, !prof !2
  br label %158

158:                                              ; preds = %140, %131, %131, %121
  %159 = phi i32 [ %151, %140 ], [ %124, %131 ], [ %124, %121 ], [ %124, %131 ]
  %160 = phi i32 [ %157, %140 ], [ %123, %131 ], [ %123, %121 ], [ %123, %131 ]
  %161 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %122, i64 0, i32 0, i32 0
  %162 = icmp eq %"class.blink::LayoutBoxModelObject"* %161, %1
  br i1 %162, label %169, label %163

163:                                              ; preds = %158
  %164 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %125, %"class.blink::LayoutObject::AncestorSkipInfo"* nonnull %10) #7
  %165 = icmp eq %"class.blink::LayoutBlock"* %164, null
  %166 = load i8, i8* %112, align 1
  %167 = icmp ne i8 %166, 0
  %168 = or i1 %165, %167
  br i1 %168, label %169, label %121

169:                                              ; preds = %163, %158
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #7
  %170 = icmp slt i32 %159, 0
  %171 = select i1 %170, i32 -2147483648, i32 2147483647
  %172 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %159) #7
  %173 = extractvalue { i32, i1 } %172, 1
  %174 = extractvalue { i32, i1 } %172, 0
  %175 = select i1 %173, i32 %171, i32 %174, !prof !2
  %176 = icmp slt i32 %160, 0
  %177 = select i1 %176, i32 -2147483648, i32 2147483647
  br label %178

178:                                              ; preds = %104, %120, %169
  %179 = phi i32 [ %175, %169 ], [ %105, %120 ], [ %105, %104 ]
  %180 = phi i32 [ %160, %169 ], [ 0, %120 ], [ 0, %104 ]
  %181 = phi i32 [ %177, %169 ], [ 2147483647, %120 ], [ 2147483647, %104 ]
  %182 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %106, i32 %180) #7
  %183 = extractvalue { i32, i1 } %182, 1
  %184 = extractvalue { i32, i1 } %182, 0
  %185 = select i1 %183, i32 %181, i32 %184, !prof !2
  %186 = icmp eq %"class.blink::LayoutBoxModelObject"* %1, null
  br i1 %186, label %187, label %192

187:                                              ; preds = %178
  %188 = zext i32 %185 to i64
  %189 = shl nuw i64 %188, 32
  %190 = zext i32 %179 to i64
  %191 = or i64 %189, %190
  br label %275

192:                                              ; preds = %178
  %193 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0
  %194 = bitcast <2 x float>* %11 to %"class.blink::FloatPoint"*
  %195 = bitcast <2 x float>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #7
  store <2 x float> zeroinitializer, <2 x float>* %11, align 8
  %196 = call <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* %193, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %194, %"class.blink::LayoutBoxModelObject"* null, i32 4) #7
  %197 = extractelement <2 x float> %196, i32 0
  %198 = fmul float %197, 6.400000e+01
  %199 = call float @llvm.round.f32(float %198) #7
  %200 = fcmp ult float %199, 0xC1E0000000000000
  %201 = fcmp ugt float %199, 0x41DFFFFFE0000000
  %202 = fcmp ogt float %199, 0xC1E0000000000000
  %203 = select i1 %202, float %199, float 0xC1E0000000000000
  %204 = fptosi float %203 to i32
  %205 = select i1 %200, i32 0, i32 2147483647
  %206 = select i1 %201, i32 %205, i32 %204
  %207 = extractelement <2 x float> %196, i32 1
  %208 = fmul float %207, 6.400000e+01
  %209 = call float @llvm.round.f32(float %208) #7
  %210 = fcmp ult float %209, 0xC1E0000000000000
  %211 = fcmp ugt float %209, 0x41DFFFFFE0000000
  %212 = fcmp ogt float %209, 0xC1E0000000000000
  %213 = select i1 %212, float %209, float 0xC1E0000000000000
  %214 = fptosi float %213 to i32
  %215 = select i1 %210, i32 0, i32 2147483647
  %216 = select i1 %211, i32 %215, i32 %214
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #7
  %217 = call i1 @llvm.is.constant.i32(i32 %206) #7
  br i1 %217, label %218, label %222

218:                                              ; preds = %192
  %219 = sub i32 0, %206
  %220 = icmp eq i32 %219, -2147483648
  %221 = select i1 %220, i32 2147483647, i32 %219
  br label %227

222:                                              ; preds = %192
  %223 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %206) #7
  %224 = extractvalue { i32, i1 } %223, 1
  %225 = extractvalue { i32, i1 } %223, 0
  %226 = select i1 %224, i32 2147483647, i32 %225
  br label %227

227:                                              ; preds = %222, %218
  %228 = phi i32 [ %221, %218 ], [ %226, %222 ]
  %229 = call i1 @llvm.is.constant.i32(i32 %216) #7
  br i1 %229, label %230, label %234

230:                                              ; preds = %227
  %231 = sub i32 0, %216
  %232 = icmp eq i32 %231, -2147483648
  %233 = select i1 %232, i32 2147483647, i32 %231
  br label %239

234:                                              ; preds = %227
  %235 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %216) #7
  %236 = extractvalue { i32, i1 } %235, 1
  %237 = extractvalue { i32, i1 } %235, 0
  %238 = select i1 %236, i32 2147483647, i32 %237
  br label %239

239:                                              ; preds = %234, %230
  %240 = phi i32 [ %233, %230 ], [ %238, %234 ]
  %241 = icmp slt i32 %228, 0
  %242 = select i1 %241, i32 -2147483648, i32 2147483647
  %243 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %179, i32 %228) #7
  %244 = extractvalue { i32, i1 } %243, 1
  %245 = extractvalue { i32, i1 } %243, 0
  %246 = select i1 %244, i32 %242, i32 %245, !prof !2
  %247 = icmp slt i32 %240, 0
  %248 = select i1 %247, i32 -2147483648, i32 2147483647
  %249 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %185, i32 %240) #7
  %250 = extractvalue { i32, i1 } %249, 1
  %251 = extractvalue { i32, i1 } %249, 0
  %252 = select i1 %250, i32 %248, i32 %251, !prof !2
  %253 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0, i32 10
  %254 = bitcast %"class.blink::FragmentData"* %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = trunc i64 %255 to i32
  %257 = lshr i64 %255, 32
  %258 = trunc i64 %257 to i32
  %259 = icmp slt i32 %256, 0
  %260 = select i1 %259, i32 -2147483648, i32 2147483647
  %261 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %246, i32 %256) #7
  %262 = extractvalue { i32, i1 } %261, 1
  %263 = extractvalue { i32, i1 } %261, 0
  %264 = select i1 %262, i32 %260, i32 %263, !prof !2
  %265 = icmp slt i32 %258, 0
  %266 = select i1 %265, i32 -2147483648, i32 2147483647
  %267 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %252, i32 %258) #7
  %268 = extractvalue { i32, i1 } %267, 1
  %269 = extractvalue { i32, i1 } %267, 0
  %270 = select i1 %268, i32 %266, i32 %269, !prof !2
  %271 = zext i32 %270 to i64
  %272 = shl nuw i64 %271, 32
  %273 = zext i32 %264 to i64
  %274 = or i64 %272, %273
  br label %275

275:                                              ; preds = %48, %92, %187, %239
  %276 = phi i64 [ 0, %48 ], [ %83, %92 ], [ %83, %239 ], [ %83, %187 ]
  %277 = phi i64 [ 0, %48 ], [ 0, %92 ], [ %274, %239 ], [ %191, %187 ]
  %278 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  store i64 %277, i64* %278, align 4
  %279 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1
  %280 = bitcast %"struct.blink::PhysicalSize"* %279 to i64*
  store i64 %276, i64* %280, align 4
  %281 = bitcast %"struct.blink::PhysicalRect"* %6 to i8*
  %282 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %281, i8* align 4 %282, i64 16, i1 false)
  %283 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5
  %284 = bitcast %"struct.blink::PhysicalRect"* %283 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %284, i8* align 4 %282, i64 16, i1 false)
  %285 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4
  %286 = bitcast %"struct.blink::PhysicalRect"* %285 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %286, i8* align 4 %284, i64 16, i1 false)
  br label %650

287:                                              ; preds = %9, %27
  %288 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4
  %289 = bitcast %"struct.blink::PhysicalRect"* %288 to i8*
  %290 = bitcast %"struct.blink::PhysicalRect"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %289, i8* align 4 %290, i64 16, i1 false)
  %291 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 10
  %292 = load i8, i8* %291, align 1, !range !4
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %294, label %298

294:                                              ; preds = %287
  %295 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 12
  %296 = load i8, i8* %295, align 1, !range !4
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %304, label %298

298:                                              ; preds = %294, %287
  %299 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 2
  %300 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1
  %301 = bitcast %"struct.blink::PhysicalSize"* %299 to i64*
  %302 = bitcast %"struct.blink::PhysicalSize"* %300 to i64*
  %303 = load i64, i64* %301, align 4
  store i64 %303, i64* %302, align 4
  br label %306

304:                                              ; preds = %294
  %305 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %305, i8* align 4 %289, i64 16, i1 false)
  br label %306

306:                                              ; preds = %304, %298
  %307 = icmp ult i32 %2, 2
  br i1 %307, label %308, label %341

308:                                              ; preds = %306
  %309 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %3, i64 0, i32 5
  %310 = bitcast [7 x i8]* %309 to i56*
  %311 = load i56, i56* %310, align 8
  %312 = and i56 %311, 61440
  %313 = icmp eq i56 %312, 8192
  br i1 %313, label %314, label %341

314:                                              ; preds = %308
  %315 = load i8, i8* %291, align 1, !range !4
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %317, label %341

317:                                              ; preds = %314
  %318 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 11
  %319 = load i8, i8* %318, align 2, !range !4
  %320 = icmp eq i8 %319, 0
  br i1 %320, label %321, label %341

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 1
  %323 = bitcast %"class.blink::LayoutBoxModelObject"** %322 to %"class.blink::LayoutObject"**
  %324 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %323, align 8
  %325 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %324, i64 0, i32 5, i32 0
  %326 = bitcast %"class.blink::ComputedStyle"** %325 to %"class.blink::ComputedStyleBase"**
  %327 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %326, align 8
  %328 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %327, i64 0, i32 7, i32 0, i32 0
  %329 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %328, align 8
  %330 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %329, i64 0, i32 2, i32 0, i32 0, i32 0
  %331 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %330, align 8
  %332 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %331, i64 0, i32 2, i32 0, i32 0
  %333 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %332, align 8
  %334 = icmp eq %"class.blink::StyleImage"* %333, null
  br i1 %334, label %335, label %341

335:                                              ; preds = %321
  %336 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %327, i64 0, i32 9
  %337 = bitcast [20 x i8]* %336 to i160*
  %338 = load i160, i160* %337, align 8
  %339 = and i160 %338, 81129638414606681695789005144064
  %340 = icmp eq i160 %339, 0
  br label %341

341:                                              ; preds = %321, %317, %314, %308, %335, %306
  %342 = phi i1 [ true, %321 ], [ true, %317 ], [ true, %314 ], [ true, %308 ], [ true, %306 ], [ %340, %335 ]
  %343 = bitcast %"class.blink::LayoutRectOutsets"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %343) #7
  %344 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %20, i64 0, i32 0, i32 0
  %345 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %20, i64 0, i32 3, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %343, i8 0, i64 16, i1 false) #7
  %346 = bitcast %"class.blink::LayoutRectOutsets"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %346) #7
  %347 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %21, i64 0, i32 0, i32 0
  %348 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %21, i64 0, i32 3, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %346, i8 0, i64 16, i1 false) #7
  call void @_ZNK5blink23BackgroundImageGeometry26ComputeDestRectAdjustmentsERKNS_9FillLayerERKNS_12PhysicalRectEbRNS_17LayoutRectOutsetsES8_(%"class.blink::BackgroundImageGeometry"* %0, %"class.blink::FillLayer"* dereferenceable(64) %3, %"struct.blink::PhysicalRect"* dereferenceable(16) %5, i1 zeroext %342, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %20, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %21)
  %349 = bitcast %"class.blink::LayoutRectOutsets"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %349) #7
  %350 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %22, i64 0, i32 0, i32 0
  %351 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %22, i64 0, i32 3, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %349, i8 0, i64 16, i1 false) #7
  %352 = bitcast %"class.blink::LayoutRectOutsets"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %352) #7
  %353 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %23, i64 0, i32 0, i32 0
  %354 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %23, i64 0, i32 3, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %352, i8 0, i64 16, i1 false) #7
  call void @_ZNK5blink23BackgroundImageGeometry33ComputePositioningAreaAdjustmentsERKNS_9FillLayerERKNS_12PhysicalRectEbRNS_17LayoutRectOutsetsES8_(%"class.blink::BackgroundImageGeometry"* %0, %"class.blink::FillLayer"* dereferenceable(64) %3, %"struct.blink::PhysicalRect"* dereferenceable(16) %5, i1 zeroext %342, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %22, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %23)
  %355 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5
  %356 = bitcast %"struct.blink::PhysicalRect"* %355 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %356, i8* align 4 %289, i64 16, i1 false)
  call void @_ZN5blink12PhysicalRect8ContractERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"* %355, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %21) #7
  %357 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %355, i64 0, i32 0, i32 0, i32 0
  %358 = load i32, i32* %357, align 4
  %359 = sdiv i32 %358, 64
  %360 = srem i32 %358, 64
  %361 = add nsw i32 %360, 32
  %362 = ashr i32 %361, 6
  %363 = add nsw i32 %362, %359
  %364 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %365 = load i32, i32* %364, align 4
  %366 = sdiv i32 %365, 64
  %367 = srem i32 %365, 64
  %368 = add nsw i32 %367, 32
  %369 = ashr i32 %368, 6
  %370 = add nsw i32 %369, %366
  %371 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %372 = load i32, i32* %371, align 4
  %373 = icmp slt i32 %372, 0
  %374 = select i1 %373, i32 -2147483648, i32 2147483647
  %375 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %360, i32 %372) #7
  %376 = extractvalue { i32, i1 } %375, 1
  %377 = extractvalue { i32, i1 } %375, 0
  %378 = select i1 %376, i32 %374, i32 %377, !prof !2
  %379 = sdiv i32 %378, 64
  %380 = srem i32 %378, 64
  %381 = add nsw i32 %380, 32
  %382 = ashr i32 %381, 6
  %383 = sub nsw i32 %379, %362
  %384 = add nsw i32 %382, %383
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %392

386:                                              ; preds = %341
  %387 = add i32 %372, 4
  %388 = icmp ugt i32 %387, 8
  br i1 %388, label %389, label %392, !prof !20

389:                                              ; preds = %386
  %390 = icmp sgt i32 %372, 0
  %391 = select i1 %390, i32 1, i32 -1
  br label %392

392:                                              ; preds = %389, %386, %341
  %393 = phi i32 [ %391, %389 ], [ %384, %341 ], [ 0, %386 ]
  %394 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 1, i32 1, i32 0
  %395 = load i32, i32* %394, align 4
  %396 = icmp slt i32 %395, 0
  %397 = select i1 %396, i32 -2147483648, i32 2147483647
  %398 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %367, i32 %395) #7
  %399 = extractvalue { i32, i1 } %398, 1
  %400 = extractvalue { i32, i1 } %398, 0
  %401 = select i1 %399, i32 %397, i32 %400, !prof !2
  %402 = sdiv i32 %401, 64
  %403 = srem i32 %401, 64
  %404 = add nsw i32 %403, 32
  %405 = ashr i32 %404, 6
  %406 = sub nsw i32 %402, %369
  %407 = add nsw i32 %405, %406
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %415

409:                                              ; preds = %392
  %410 = add i32 %395, 4
  %411 = icmp ugt i32 %410, 8
  br i1 %411, label %412, label %415, !prof !20

412:                                              ; preds = %409
  %413 = icmp sgt i32 %395, 0
  %414 = select i1 %413, i32 1, i32 -1
  br label %415

415:                                              ; preds = %392, %409, %412
  %416 = phi i32 [ %414, %412 ], [ %407, %392 ], [ 0, %409 ]
  %417 = icmp sgt i32 %363, 33554431
  br i1 %417, label %422, label %418

418:                                              ; preds = %415
  %419 = icmp slt i32 %363, -33554432
  %420 = shl i32 %363, 6
  %421 = select i1 %419, i32 -2147483648, i32 %420
  br label %422

422:                                              ; preds = %418, %415
  %423 = phi i32 [ 2147483647, %415 ], [ %421, %418 ]
  %424 = icmp sgt i32 %370, 33554431
  br i1 %424, label %429, label %425

425:                                              ; preds = %422
  %426 = icmp slt i32 %370, -33554432
  %427 = shl i32 %370, 6
  %428 = select i1 %426, i32 -2147483648, i32 %427
  br label %429

429:                                              ; preds = %425, %422
  %430 = phi i32 [ 2147483647, %422 ], [ %428, %425 ]
  %431 = icmp sgt i32 %393, 33554431
  br i1 %431, label %436, label %432

432:                                              ; preds = %429
  %433 = icmp slt i32 %393, -33554432
  %434 = shl i32 %393, 6
  %435 = select i1 %433, i32 -2147483648, i32 %434
  br label %436

436:                                              ; preds = %432, %429
  %437 = phi i32 [ 2147483647, %429 ], [ %435, %432 ]
  %438 = icmp sgt i32 %416, 33554431
  br i1 %438, label %443, label %439

439:                                              ; preds = %436
  %440 = icmp slt i32 %416, -33554432
  %441 = shl i32 %416, 6
  %442 = select i1 %440, i32 -2147483648, i32 %441
  br label %443

443:                                              ; preds = %439, %436
  %444 = phi i32 [ 2147483647, %436 ], [ %442, %439 ]
  %445 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  store i32 %423, i32* %445, align 8
  store i32 %430, i32* %364, align 4
  store i32 %437, i32* %371, align 8
  store i32 %444, i32* %394, align 4
  %446 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 1
  %447 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %446, i64 0, i32 0
  %448 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %448)
  store i32 0, i32* %12, align 4
  %449 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %446, i64 0, i32 0, i32 0
  %450 = icmp slt i32 %437, 0
  %451 = bitcast i32* %12 to %"class.blink::LayoutUnit"*
  %452 = select i1 %450, %"class.blink::LayoutUnit"* %451, %"class.blink::LayoutUnit"* %447
  %453 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %452, i64 0, i32 0
  %454 = load i32, i32* %453, align 4
  store i32 %454, i32* %449, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %448)
  %455 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 1, i32 1
  %456 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %456)
  store i32 0, i32* %13, align 4
  %457 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %455, i64 0, i32 0
  %458 = icmp slt i32 %444, 0
  %459 = bitcast i32* %13 to %"class.blink::LayoutUnit"*
  %460 = select i1 %458, %"class.blink::LayoutUnit"* %459, %"class.blink::LayoutUnit"* %455
  %461 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %460, i64 0, i32 0
  %462 = load i32, i32* %461, align 4
  store i32 %462, i32* %457, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %456)
  call void @_ZN5blink12PhysicalRect8ContractERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"* %288, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %20) #7
  %463 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 1
  %464 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %463, i64 0, i32 0
  %465 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %465)
  store i32 0, i32* %14, align 4
  %466 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %463, i64 0, i32 0, i32 0
  %467 = load i32, i32* %466, align 4
  %468 = icmp slt i32 %467, 0
  %469 = bitcast i32* %14 to %"class.blink::LayoutUnit"*
  %470 = select i1 %468, %"class.blink::LayoutUnit"* %469, %"class.blink::LayoutUnit"* %464
  %471 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %470, i64 0, i32 0
  %472 = load i32, i32* %471, align 4
  store i32 %472, i32* %466, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %465)
  %473 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 1, i32 1
  %474 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %474)
  store i32 0, i32* %15, align 4
  %475 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %473, i64 0, i32 0
  %476 = load i32, i32* %475, align 4
  %477 = icmp slt i32 %476, 0
  %478 = bitcast i32* %15 to %"class.blink::LayoutUnit"*
  %479 = select i1 %477, %"class.blink::LayoutUnit"* %478, %"class.blink::LayoutUnit"* %473
  %480 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %479, i64 0, i32 0
  %481 = load i32, i32* %480, align 4
  store i32 %481, i32* %475, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %474)
  %482 = bitcast %"struct.blink::PhysicalRect"* %6 to i8*
  %483 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %482, i8* align 4 %483, i64 16, i1 false)
  call void @_ZN5blink12PhysicalRect8ContractERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"* %6, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %23) #7
  %484 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 0, i32 0, i32 0
  %485 = load i32, i32* %484, align 4
  %486 = sdiv i32 %485, 64
  %487 = srem i32 %485, 64
  %488 = add nsw i32 %487, 32
  %489 = ashr i32 %488, 6
  %490 = add nsw i32 %489, %486
  %491 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 0, i32 1, i32 0
  %492 = load i32, i32* %491, align 4
  %493 = sdiv i32 %492, 64
  %494 = srem i32 %492, 64
  %495 = add nsw i32 %494, 32
  %496 = ashr i32 %495, 6
  %497 = add nsw i32 %496, %493
  %498 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 0, i32 0
  %499 = load i32, i32* %498, align 4
  %500 = icmp slt i32 %499, 0
  %501 = select i1 %500, i32 -2147483648, i32 2147483647
  %502 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %487, i32 %499) #7
  %503 = extractvalue { i32, i1 } %502, 1
  %504 = extractvalue { i32, i1 } %502, 0
  %505 = select i1 %503, i32 %501, i32 %504, !prof !2
  %506 = sdiv i32 %505, 64
  %507 = srem i32 %505, 64
  %508 = add nsw i32 %507, 32
  %509 = ashr i32 %508, 6
  %510 = sub nsw i32 %506, %489
  %511 = add nsw i32 %509, %510
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %513, label %519

513:                                              ; preds = %443
  %514 = add i32 %499, 4
  %515 = icmp ugt i32 %514, 8
  br i1 %515, label %516, label %519, !prof !20

516:                                              ; preds = %513
  %517 = icmp sgt i32 %499, 0
  %518 = select i1 %517, i32 1, i32 -1
  br label %519

519:                                              ; preds = %516, %513, %443
  %520 = phi i32 [ %518, %516 ], [ %511, %443 ], [ 0, %513 ]
  %521 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 1, i32 0
  %522 = load i32, i32* %521, align 4
  %523 = icmp slt i32 %522, 0
  %524 = select i1 %523, i32 -2147483648, i32 2147483647
  %525 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %494, i32 %522) #7
  %526 = extractvalue { i32, i1 } %525, 1
  %527 = extractvalue { i32, i1 } %525, 0
  %528 = select i1 %526, i32 %524, i32 %527, !prof !2
  %529 = sdiv i32 %528, 64
  %530 = srem i32 %528, 64
  %531 = add nsw i32 %530, 32
  %532 = ashr i32 %531, 6
  %533 = sub nsw i32 %529, %496
  %534 = add nsw i32 %532, %533
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %536, label %542

536:                                              ; preds = %519
  %537 = add i32 %522, 4
  %538 = icmp ugt i32 %537, 8
  br i1 %538, label %539, label %542, !prof !20

539:                                              ; preds = %536
  %540 = icmp sgt i32 %522, 0
  %541 = select i1 %540, i32 1, i32 -1
  br label %542

542:                                              ; preds = %519, %536, %539
  %543 = phi i32 [ %541, %539 ], [ %534, %519 ], [ 0, %536 ]
  %544 = icmp sgt i32 %490, 33554431
  br i1 %544, label %549, label %545

545:                                              ; preds = %542
  %546 = icmp slt i32 %490, -33554432
  %547 = shl i32 %490, 6
  %548 = select i1 %546, i32 -2147483648, i32 %547
  br label %549

549:                                              ; preds = %545, %542
  %550 = phi i32 [ 2147483647, %542 ], [ %548, %545 ]
  %551 = icmp sgt i32 %497, 33554431
  br i1 %551, label %556, label %552

552:                                              ; preds = %549
  %553 = icmp slt i32 %497, -33554432
  %554 = shl i32 %497, 6
  %555 = select i1 %553, i32 -2147483648, i32 %554
  br label %556

556:                                              ; preds = %552, %549
  %557 = phi i32 [ 2147483647, %549 ], [ %555, %552 ]
  %558 = icmp sgt i32 %520, 33554431
  br i1 %558, label %563, label %559

559:                                              ; preds = %556
  %560 = icmp slt i32 %520, -33554432
  %561 = shl i32 %520, 6
  %562 = select i1 %560, i32 -2147483648, i32 %561
  br label %563

563:                                              ; preds = %559, %556
  %564 = phi i32 [ 2147483647, %556 ], [ %562, %559 ]
  %565 = icmp sgt i32 %543, 33554431
  br i1 %565, label %570, label %566

566:                                              ; preds = %563
  %567 = icmp slt i32 %543, -33554432
  %568 = shl i32 %543, 6
  %569 = select i1 %567, i32 -2147483648, i32 %568
  br label %570

570:                                              ; preds = %566, %563
  %571 = phi i32 [ 2147483647, %563 ], [ %569, %566 ]
  store i32 %550, i32* %484, align 4
  store i32 %557, i32* %491, align 4
  store i32 %564, i32* %498, align 4
  store i32 %571, i32* %521, align 4
  %572 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1
  %573 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %572, i64 0, i32 0
  %574 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %574)
  store i32 0, i32* %16, align 4
  %575 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %572, i64 0, i32 0, i32 0
  %576 = icmp slt i32 %564, 0
  %577 = bitcast i32* %16 to %"class.blink::LayoutUnit"*
  %578 = select i1 %576, %"class.blink::LayoutUnit"* %577, %"class.blink::LayoutUnit"* %573
  %579 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %578, i64 0, i32 0
  %580 = load i32, i32* %579, align 4
  store i32 %580, i32* %575, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %574)
  %581 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 1
  %582 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %582)
  store i32 0, i32* %17, align 4
  %583 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %581, i64 0, i32 0
  %584 = icmp slt i32 %571, 0
  %585 = bitcast i32* %17 to %"class.blink::LayoutUnit"*
  %586 = select i1 %584, %"class.blink::LayoutUnit"* %585, %"class.blink::LayoutUnit"* %581
  %587 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %586, i64 0, i32 0
  %588 = load i32, i32* %587, align 4
  store i32 %588, i32* %583, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %582)
  call void @_ZN5blink12PhysicalRect8ContractERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"* %5, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %22) #7
  %589 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1
  %590 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %589, i64 0, i32 0
  %591 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %591)
  store i32 0, i32* %18, align 4
  %592 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %589, i64 0, i32 0, i32 0
  %593 = load i32, i32* %592, align 4
  %594 = icmp slt i32 %593, 0
  %595 = bitcast i32* %18 to %"class.blink::LayoutUnit"*
  %596 = select i1 %594, %"class.blink::LayoutUnit"* %595, %"class.blink::LayoutUnit"* %590
  %597 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %596, i64 0, i32 0
  %598 = load i32, i32* %597, align 4
  store i32 %598, i32* %592, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %591)
  %599 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 1
  %600 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %600)
  store i32 0, i32* %19, align 4
  %601 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %599, i64 0, i32 0
  %602 = load i32, i32* %601, align 4
  %603 = icmp slt i32 %602, 0
  %604 = bitcast i32* %19 to %"class.blink::LayoutUnit"*
  %605 = select i1 %603, %"class.blink::LayoutUnit"* %604, %"class.blink::LayoutUnit"* %599
  %606 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %605, i64 0, i32 0
  %607 = load i32, i32* %606, align 4
  store i32 %607, i32* %601, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %600)
  %608 = load i32, i32* %351, align 4
  %609 = load i32, i32* %345, align 4
  %610 = icmp sgt i32 %609, -1
  %611 = select i1 %610, i32 -2147483648, i32 2147483647
  %612 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %608, i32 %609) #7
  %613 = extractvalue { i32, i1 } %612, 1
  %614 = extractvalue { i32, i1 } %612, 0
  %615 = select i1 %613, i32 %611, i32 %614, !prof !2
  %616 = load i32, i32* %350, align 4
  %617 = load i32, i32* %344, align 4
  %618 = icmp sgt i32 %617, -1
  %619 = select i1 %618, i32 -2147483648, i32 2147483647
  %620 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %616, i32 %617) #7
  %621 = extractvalue { i32, i1 } %620, 1
  %622 = extractvalue { i32, i1 } %620, 0
  %623 = select i1 %621, i32 %619, i32 %622, !prof !2
  %624 = bitcast %"struct.blink::PhysicalOffset"* %7 to i64*
  %625 = zext i32 %623 to i64
  %626 = shl nuw i64 %625, 32
  %627 = zext i32 %615 to i64
  %628 = or i64 %626, %627
  store i64 %628, i64* %624, align 4
  %629 = load i32, i32* %354, align 4
  %630 = load i32, i32* %348, align 4
  %631 = icmp sgt i32 %630, -1
  %632 = select i1 %631, i32 -2147483648, i32 2147483647
  %633 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %629, i32 %630) #7
  %634 = extractvalue { i32, i1 } %633, 1
  %635 = extractvalue { i32, i1 } %633, 0
  %636 = select i1 %634, i32 %632, i32 %635, !prof !2
  %637 = load i32, i32* %353, align 4
  %638 = load i32, i32* %347, align 4
  %639 = icmp sgt i32 %638, -1
  %640 = select i1 %639, i32 -2147483648, i32 2147483647
  %641 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %637, i32 %638) #7
  %642 = extractvalue { i32, i1 } %641, 1
  %643 = extractvalue { i32, i1 } %641, 0
  %644 = select i1 %642, i32 %640, i32 %643, !prof !2
  %645 = bitcast %"struct.blink::PhysicalOffset"* %8 to i64*
  %646 = zext i32 %644 to i64
  %647 = shl nuw i64 %646, 32
  %648 = zext i32 %636 to i64
  %649 = or i64 %647, %648
  store i64 %649, i64* %645, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %352) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %349) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %346) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %343) #7
  br label %650

650:                                              ; preds = %570, %275
  ret void
}

declare void @_ZN5blink12PhysicalRect8ContractERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"*, %"class.blink::LayoutRectOutsets"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundImageGeometry21CalculateFillTileSizeERKNS_9FillLayerERKNS_12PhysicalSizeES6_(%"class.blink::BackgroundImageGeometry"* nocapture, %"class.blink::FillLayer"* dereferenceable(64), %"struct.blink::PhysicalSize"* nocapture readonly dereferenceable(8), %"struct.blink::PhysicalSize"* dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"struct.blink::PhysicalSize"*
  %9 = alloca <2 x float>, align 8
  %10 = bitcast <2 x float>* %9 to %"class.blink::FloatSize"*
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 5
  %16 = bitcast [7 x i8]* %15 to i56*
  %17 = load i56, i56* %16, align 8
  %18 = lshr i56 %17, 16
  %19 = trunc i56 %18 to i32
  %20 = and i32 %19, 3
  %21 = bitcast %"class.blink::StyleImage"* %14 to i1 (%"class.blink::StyleImage"*)***
  %22 = load i1 (%"class.blink::StyleImage"*)**, i1 (%"class.blink::StyleImage"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %22, i64 8
  %24 = load i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::StyleImage"* %14) #7
  %26 = select i1 %25, %"struct.blink::PhysicalSize"* %2, %"struct.blink::PhysicalSize"* %3
  %27 = bitcast %"struct.blink::PhysicalSize"* %26 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = trunc i64 %28 to i32
  %30 = lshr i64 %28, 32
  %31 = trunc i64 %30 to i32
  %32 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #7
  %33 = bitcast i64* %7 to i32*
  store i32 -1431655766, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %8, i64 0, i32 1, i32 0
  store i32 -1431655766, i32* %34, align 4
  %35 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::LayoutBoxModelObject"** %35 to %"class.blink::LayoutObject"**
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 6, i32 0, i32 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  %40 = icmp eq %"class.blink::Node"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %4, %41
  %42 = phi %"class.blink::LayoutObject"* [ %44, %41 ], [ %37, %4 ]
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 7
  %44 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 6, i32 0, i32 0
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  %47 = icmp eq %"class.blink::Node"* %46, null
  br i1 %47, label %41, label %48

48:                                               ; preds = %41, %4
  %49 = phi %"class.blink::Node"* [ %39, %4 ], [ %46, %41 ]
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %51, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 5, i32 0
  %55 = bitcast %"class.blink::ComputedStyle"** %54 to %"class.blink::ComputedStyleBase"**
  %56 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %56, i64 0, i32 1, i32 0, i32 0
  %58 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %58, i64 0, i32 2, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %60, i64 0, i32 6
  %62 = load float, float* %61, align 8
  %63 = bitcast <2 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #7
  %64 = sitofp i32 %29 to float
  %65 = fmul float %64, 1.562500e-02
  %66 = sitofp i32 %31 to float
  %67 = fmul float %66, 1.562500e-02
  %68 = insertelement <2 x float> undef, float %65, i32 0
  %69 = insertelement <2 x float> %68, float %67, i32 1
  store <2 x float> %69, <2 x float>* %9, align 8
  %70 = bitcast %"class.blink::BackgroundImageGeometry"* %0 to %"class.blink::LayoutObject"**
  %71 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %70, align 8
  %72 = tail call i32 @_ZN5blink12LayoutObject29ShouldRespectImageOrientationEPKS0_(%"class.blink::LayoutObject"* %71) #7
  %73 = bitcast %"class.blink::StyleImage"* %14 to <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)***
  %74 = load <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)**, <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)*** %73, align 8
  %75 = getelementptr inbounds <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)*, <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)** %74, i64 7
  %76 = load <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)*, <2 x float> (%"class.blink::StyleImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)** %75, align 8
  %77 = call <2 x float> %76(%"class.blink::StyleImage"* %14, %"class.blink::Document"* dereferenceable(2848) %53, float %62, %"class.blink::FloatSize"* nonnull dereferenceable(8) %10, i32 %72) #7
  %78 = extractelement <2 x float> %77, i32 0
  %79 = fmul float %78, 6.400000e+01
  %80 = call float @llvm.floor.f32(float %79) #7
  %81 = fcmp ult float %80, 0xC1E0000000000000
  %82 = fcmp ugt float %80, 0x41DFFFFFE0000000
  %83 = fcmp ogt float %80, 0xC1E0000000000000
  %84 = select i1 %83, float %80, float 0xC1E0000000000000
  %85 = fptosi float %84 to i32
  %86 = select i1 %81, i32 0, i32 2147483647
  %87 = select i1 %82, i32 %86, i32 %85
  %88 = extractelement <2 x float> %77, i32 1
  %89 = fmul float %88, 6.400000e+01
  %90 = call float @llvm.floor.f32(float %89) #7
  %91 = fcmp ult float %90, 0xC1E0000000000000
  %92 = fcmp ugt float %90, 0x41DFFFFFE0000000
  %93 = fcmp ogt float %90, 0xC1E0000000000000
  %94 = select i1 %93, float %90, float 0xC1E0000000000000
  %95 = fptosi float %94 to i32
  %96 = select i1 %91, i32 0, i32 2147483647
  %97 = select i1 %92, i32 %96, i32 %95
  %98 = zext i32 %97 to i64
  %99 = shl nuw i64 %98, 32
  %100 = zext i32 %87 to i64
  %101 = or i64 %99, %100
  store i64 %101, i64* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #7
  switch i32 %20, label %346 [
    i32 2, label %102
    i32 0, label %273
    i32 1, label %273
  ]

102:                                              ; preds = %48
  %103 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7
  %104 = bitcast %"struct.blink::PhysicalSize"* %103 to i64*
  store i64 %28, i64* %104, align 8
  %105 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 4
  %106 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 4, i32 1
  %107 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 4, i32 0, i32 2
  %108 = load i8, i8* %107, align 1
  switch i8 %108, label %135 [
    i8 2, label %109
    i8 8, label %131
    i8 1, label %131
  ]

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 4, i32 0, i32 3
  %111 = load i8, i8* %110, align 2, !range !4
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = bitcast %"class.blink::LengthSize"* %105 to float*
  %115 = load float, float* %114, align 4
  br label %120

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %105, i64 0, i32 0, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = sitofp i32 %118 to float
  br label %120

120:                                              ; preds = %113, %116
  %121 = phi float [ %115, %113 ], [ %119, %116 ]
  %122 = fmul float %121, 6.400000e+01
  %123 = fcmp ult float %122, 0xC1E0000000000000
  %124 = fcmp ugt float %122, 0x41DFFFFFE0000000
  %125 = fcmp ogt float %122, 0xC1E0000000000000
  %126 = select i1 %125, float %122, float 0xC1E0000000000000
  %127 = fptosi float %126 to i32
  %128 = select i1 %123, i32 0, i32 2147483647
  %129 = select i1 %124, i32 %128, i32 %127
  %130 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %103, i64 0, i32 0, i32 0
  store i32 %129, i32* %130, align 8
  br label %135

131:                                              ; preds = %102, %102
  %132 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %105, i64 0, i32 0
  %133 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %132, i32 %29) #7
  %134 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 0, i32 0
  store i32 %133, i32* %134, align 8
  br label %135

135:                                              ; preds = %102, %131, %120
  %136 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 4, i32 1, i32 2
  %137 = load i8, i8* %136, align 1
  switch i8 %137, label %165 [
    i8 2, label %138
    i8 8, label %159
    i8 1, label %159
  ]

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %1, i64 0, i32 4, i32 1, i32 3
  %140 = load i8, i8* %139, align 2, !range !4
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %145, label %142

142:                                              ; preds = %138
  %143 = bitcast %"class.blink::Length"* %106 to float*
  %144 = load float, float* %143, align 4
  br label %149

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %106, i64 0, i32 0, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = sitofp i32 %147 to float
  br label %149

149:                                              ; preds = %142, %145
  %150 = phi float [ %144, %142 ], [ %148, %145 ]
  %151 = fmul float %150, 6.400000e+01
  %152 = fcmp ult float %151, 0xC1E0000000000000
  %153 = fcmp ugt float %151, 0x41DFFFFFE0000000
  %154 = fcmp ogt float %151, 0xC1E0000000000000
  %155 = select i1 %154, float %151, float 0xC1E0000000000000
  %156 = fptosi float %155 to i32
  %157 = select i1 %152, i32 0, i32 2147483647
  %158 = select i1 %153, i32 %157, i32 %156
  br label %161

159:                                              ; preds = %135, %135
  %160 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %106, i32 %31) #7
  br label %161

161:                                              ; preds = %149, %159
  %162 = phi i32 [ %158, %149 ], [ %160, %159 ]
  %163 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 1, i32 0
  store i32 %162, i32* %163, align 4
  %164 = load i8, i8* %136, align 1
  br label %165

165:                                              ; preds = %161, %135
  %166 = phi i8 [ %164, %161 ], [ %137, %135 ]
  %167 = load i8, i8* %107, align 1
  %168 = icmp eq i8 %167, 0
  %169 = icmp eq i8 %166, 0
  br i1 %168, label %170, label %211

170:                                              ; preds = %165
  br i1 %169, label %252, label %171

171:                                              ; preds = %170
  %172 = load i1 (%"class.blink::StyleImage"*)**, i1 (%"class.blink::StyleImage"*)*** %21, align 8
  %173 = getelementptr inbounds i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %172, i64 8
  %174 = load i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %173, align 8
  %175 = call zeroext i1 %174(%"class.blink::StyleImage"* %14) #7
  br i1 %175, label %178, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %103, i64 0, i32 0, i32 0
  store i32 %29, i32* %177, align 8
  br label %254

178:                                              ; preds = %171
  %179 = load i32, i32* %34, align 4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %254, label %181

181:                                              ; preds = %178
  %182 = load i32, i32* %33, align 8
  %183 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 1, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = sext i32 %184 to i64
  %186 = sext i32 %182 to i64
  %187 = mul nsw i64 %185, %186
  %188 = sext i32 %179 to i64
  %189 = sdiv i64 %187, %188
  %190 = call i1 @llvm.is.constant.i64(i64 %189) #7
  br i1 %190, label %198, label %191

191:                                              ; preds = %181
  %192 = icmp slt i64 %189, 0
  %193 = select i1 %192, i32 -2147483648, i32 2147483647
  %194 = add nsw i64 %189, 2147483648
  %195 = icmp ult i64 %194, 4294967296
  %196 = trunc i64 %189 to i32
  %197 = select i1 %195, i32 %196, i32 %193, !prof !3
  br label %204

198:                                              ; preds = %181
  %199 = icmp sgt i64 %189, 2147483647
  br i1 %199, label %204, label %200

200:                                              ; preds = %198
  %201 = icmp sgt i64 %189, -2147483648
  %202 = select i1 %201, i64 %189, i64 -2147483648
  %203 = trunc i64 %202 to i32
  br label %204

204:                                              ; preds = %191, %198, %200
  %205 = phi i32 [ %197, %191 ], [ %203, %200 ], [ 2147483647, %198 ]
  %206 = icmp sgt i32 %182, 63
  %207 = icmp slt i32 %205, 64
  %208 = and i1 %207, %206
  %209 = select i1 %208, i32 64, i32 %205
  %210 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %103, i64 0, i32 0, i32 0
  store i32 %209, i32* %210, align 8
  br label %254

211:                                              ; preds = %165
  br i1 %169, label %212, label %254

212:                                              ; preds = %211
  %213 = load i1 (%"class.blink::StyleImage"*)**, i1 (%"class.blink::StyleImage"*)*** %21, align 8
  %214 = getelementptr inbounds i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %213, i64 8
  %215 = load i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %214, align 8
  %216 = call zeroext i1 %215(%"class.blink::StyleImage"* %14) #7
  br i1 %216, label %219, label %217

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 1, i32 0
  store i32 %31, i32* %218, align 4
  br label %254

219:                                              ; preds = %212
  %220 = load i32, i32* %33, align 8
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %254, label %222

222:                                              ; preds = %219
  %223 = load i32, i32* %34, align 4
  %224 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %103, i64 0, i32 0, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = sext i32 %225 to i64
  %227 = sext i32 %223 to i64
  %228 = mul nsw i64 %226, %227
  %229 = sext i32 %220 to i64
  %230 = sdiv i64 %228, %229
  %231 = call i1 @llvm.is.constant.i64(i64 %230) #7
  br i1 %231, label %239, label %232

232:                                              ; preds = %222
  %233 = icmp slt i64 %230, 0
  %234 = select i1 %233, i32 -2147483648, i32 2147483647
  %235 = add nsw i64 %230, 2147483648
  %236 = icmp ult i64 %235, 4294967296
  %237 = trunc i64 %230 to i32
  %238 = select i1 %236, i32 %237, i32 %234, !prof !3
  br label %245

239:                                              ; preds = %222
  %240 = icmp sgt i64 %230, 2147483647
  br i1 %240, label %245, label %241

241:                                              ; preds = %239
  %242 = icmp sgt i64 %230, -2147483648
  %243 = select i1 %242, i64 %230, i64 -2147483648
  %244 = trunc i64 %243 to i32
  br label %245

245:                                              ; preds = %232, %239, %241
  %246 = phi i32 [ %238, %232 ], [ %244, %241 ], [ 2147483647, %239 ]
  %247 = icmp sgt i32 %223, 63
  %248 = icmp slt i32 %246, 64
  %249 = and i1 %248, %247
  %250 = select i1 %249, i32 64, i32 %246
  %251 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 1, i32 0
  store i32 %250, i32* %251, align 4
  br label %254

252:                                              ; preds = %170
  %253 = load i64, i64* %7, align 8
  store i64 %253, i64* %104, align 8
  br label %254

254:                                              ; preds = %178, %219, %211, %245, %217, %252, %176, %204
  %255 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %103, i64 0, i32 0
  %256 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %256)
  store i32 0, i32* %5, align 4
  %257 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %103, i64 0, i32 0, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = icmp slt i32 %258, 0
  %260 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %261 = select i1 %259, %"class.blink::LayoutUnit"* %260, %"class.blink::LayoutUnit"* %255
  %262 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %261, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  store i32 %263, i32* %257, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %256)
  %264 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 1
  %265 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %265)
  store i32 0, i32* %6, align 4
  %266 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %264, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  %268 = icmp slt i32 %267, 0
  %269 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %270 = select i1 %268, %"class.blink::LayoutUnit"* %269, %"class.blink::LayoutUnit"* %264
  %271 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %270, i64 0, i32 0
  %272 = load i32, i32* %271, align 4
  store i32 %272, i32* %266, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %265)
  br label %346

273:                                              ; preds = %48, %48
  %274 = icmp eq i32 %87, 0
  %275 = icmp eq i32 %97, 0
  %276 = or i1 %274, %275
  br i1 %276, label %277, label %282

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7
  %279 = bitcast %"struct.blink::PhysicalSize"* %3 to i64*
  %280 = bitcast %"struct.blink::PhysicalSize"* %278 to i64*
  %281 = load i64, i64* %279, align 4
  store i64 %281, i64* %280, align 8
  br label %346

282:                                              ; preds = %273
  %283 = icmp eq i32 %20, 1
  %284 = zext i1 %283 to i32
  %285 = call i64 @_ZNK5blink12PhysicalSize16FitToAspectRatioERKS0_NS_14AspectRatioFitE(%"struct.blink::PhysicalSize"* %3, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %8, i32 %284) #7
  %286 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7
  %287 = bitcast %"struct.blink::PhysicalSize"* %286 to i64*
  store i64 %285, i64* %287, align 8
  %288 = icmp eq i32 %20, 0
  %289 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %286, i64 0, i32 0
  %290 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %286, i64 0, i32 0, i32 0
  %291 = trunc i64 %285 to i32
  %292 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %3, i64 0, i32 0, i32 0
  %293 = load i32, i32* %292, align 4
  %294 = icmp ne i32 %293, %291
  %295 = lshr i64 %285, 32
  %296 = trunc i64 %295 to i32
  br i1 %288, label %297, label %325

297:                                              ; preds = %282
  br i1 %294, label %298, label %309

298:                                              ; preds = %297
  %299 = sdiv i32 %291, 64
  %300 = srem i32 %291, 64
  %301 = add nsw i32 %300, 32
  %302 = ashr i32 %301, 6
  %303 = add nsw i32 %302, %299
  %304 = icmp sgt i32 %303, 1
  %305 = select i1 %304, i32 %303, i32 1
  %306 = icmp sgt i32 %305, 33554431
  %307 = shl i32 %305, 6
  %308 = select i1 %306, i32 2147483647, i32 %307
  store i32 %308, i32* %290, align 8
  br label %309

309:                                              ; preds = %298, %297
  %310 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %3, i64 0, i32 1, i32 0
  %311 = load i32, i32* %310, align 4
  %312 = icmp eq i32 %311, %296
  br i1 %312, label %346, label %313

313:                                              ; preds = %309
  %314 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 1, i32 0
  %315 = sdiv i32 %296, 64
  %316 = srem i32 %296, 64
  %317 = add nsw i32 %316, 32
  %318 = ashr i32 %317, 6
  %319 = add nsw i32 %318, %315
  %320 = icmp sgt i32 %319, 1
  %321 = select i1 %320, i32 %319, i32 1
  %322 = icmp sgt i32 %321, 33554431
  %323 = shl i32 %321, 6
  %324 = select i1 %322, i32 2147483647, i32 %323
  store i32 %324, i32* %314, align 4
  br label %346

325:                                              ; preds = %282
  br i1 %294, label %326, label %333

326:                                              ; preds = %325
  %327 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %327)
  store i32 64, i32* %11, align 4
  %328 = icmp sgt i32 %291, 64
  %329 = bitcast i32* %11 to %"class.blink::LayoutUnit"*
  %330 = select i1 %328, %"class.blink::LayoutUnit"* %289, %"class.blink::LayoutUnit"* %329
  %331 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %330, i64 0, i32 0
  %332 = load i32, i32* %331, align 4
  store i32 %332, i32* %290, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %327)
  br label %333

333:                                              ; preds = %326, %325
  %334 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 1
  %335 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %3, i64 0, i32 1, i32 0
  %336 = load i32, i32* %335, align 4
  %337 = icmp eq i32 %336, %296
  br i1 %337, label %346, label %338

338:                                              ; preds = %333
  %339 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %334, i64 0, i32 0
  %340 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %340)
  store i32 64, i32* %12, align 4
  %341 = icmp sgt i32 %296, 64
  %342 = bitcast i32* %12 to %"class.blink::LayoutUnit"*
  %343 = select i1 %341, %"class.blink::LayoutUnit"* %334, %"class.blink::LayoutUnit"* %342
  %344 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %343, i64 0, i32 0
  %345 = load i32, i32* %344, align 4
  store i32 %345, i32* %339, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %340)
  br label %346

346:                                              ; preds = %309, %333, %48, %313, %338, %277, %254
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #7
  ret void
}

declare i32 @_ZN5blink12LayoutObject29ShouldRespectImageOrientationEPKS0_(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #3

declare i64 @_ZNK5blink12PhysicalSize16FitToAspectRatioERKS0_NS_14AspectRatioFitE(%"struct.blink::PhysicalSize"*, %"struct.blink::PhysicalSize"* dereferenceable(8), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23BackgroundImageGeometry9CalculateEPKNS_20LayoutBoxModelObjectENS_10PaintPhaseERKNS_9FillLayerERKNS_12PhysicalRectE(%"class.blink::BackgroundImageGeometry"*, %"class.blink::LayoutBoxModelObject"*, i32, %"class.blink::FillLayer"* dereferenceable(64), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"struct.blink::PhysicalRect", align 4
  %7 = alloca %"struct.blink::PhysicalRect", align 4
  %8 = alloca %"struct.blink::PhysicalOffset", align 4
  %9 = alloca %"struct.blink::PhysicalOffset", align 4
  %10 = bitcast %"struct.blink::PhysicalRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 0, i64 16, i1 false) #7
  %13 = bitcast %"struct.blink::PhysicalRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 0, i64 16, i1 false) #7
  %16 = bitcast %"struct.blink::PhysicalOffset"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %8, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %8, i64 0, i32 1, i32 0
  store i32 0, i32* %17, align 4
  store i32 0, i32* %18, align 4
  %19 = bitcast %"struct.blink::PhysicalOffset"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %9, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %9, i64 0, i32 1, i32 0
  store i32 0, i32* %20, align 4
  store i32 0, i32* %21, align 4
  call void @_ZN5blink23BackgroundImageGeometry22ComputePositioningAreaEPKNS_20LayoutBoxModelObjectENS_10PaintPhaseERKNS_9FillLayerERKNS_12PhysicalRectERS8_SB_RNS_14PhysicalOffsetESD_(%"class.blink::BackgroundImageGeometry"* %0, %"class.blink::LayoutBoxModelObject"* %1, i32 %2, %"class.blink::FillLayer"* dereferenceable(64) %3, %"struct.blink::PhysicalRect"* dereferenceable(16) %4, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %8, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %9)
  call void @_ZN5blink23BackgroundImageGeometry21CalculateFillTileSizeERKNS_9FillLayerERKNS_12PhysicalSizeES6_(%"class.blink::BackgroundImageGeometry"* %0, %"class.blink::FillLayer"* dereferenceable(64) %3, %"struct.blink::PhysicalSize"* dereferenceable(8) %11, %"struct.blink::PhysicalSize"* dereferenceable(8) %14)
  %22 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %3, i64 0, i32 5
  %23 = bitcast [7 x i8]* %22 to i56*
  %24 = load i56, i56* %23, align 8
  %25 = lshr i56 %24, 6
  %26 = trunc i56 %25 to i32
  %27 = and i32 %26, 7
  %28 = lshr i56 %24, 9
  %29 = trunc i56 %28 to i32
  %30 = and i32 %29, 7
  %31 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, -1
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %32, i32 %34) #7
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  %41 = load i32, i32* %12, align 4
  %42 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 1, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %43, -1
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %41, i32 %43) #7
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !2
  %50 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %51, i32 %34) #7
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 %36, i32 %54, !prof !2
  %56 = load i32, i32* %15, align 4
  %57 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %56, i32 %43) #7
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 %45, i32 %59, !prof !2
  %61 = bitcast %"struct.blink::PhysicalSize"* %14 to i64*
  %62 = load i64, i64* %61, align 4
  %63 = trunc i64 %62 to i32
  %64 = lshr i64 %62, 32
  %65 = trunc i64 %64 to i32
  %66 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %3, i64 0, i32 2
  %67 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %3, i64 0, i32 2, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 2
  br i1 %69, label %70, label %91, !prof !3

70:                                               ; preds = %5
  %71 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %3, i64 0, i32 2, i32 3
  %72 = load i8, i8* %71, align 2, !range !4
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = bitcast %"class.blink::Length"* %66 to float*
  %76 = load float, float* %75, align 4
  br label %81

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %66, i64 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = sitofp i32 %79 to float
  br label %81

81:                                               ; preds = %77, %74
  %82 = phi float [ %76, %74 ], [ %80, %77 ]
  %83 = fmul float %82, 6.400000e+01
  %84 = fcmp ult float %83, 0xC1E0000000000000
  %85 = fcmp ugt float %83, 0x41DFFFFFE0000000
  %86 = fcmp ogt float %83, 0xC1E0000000000000
  %87 = select i1 %86, float %83, float 0xC1E0000000000000
  %88 = fptosi float %87 to i32
  %89 = select i1 %84, i32 0, i32 2147483647
  %90 = select i1 %85, i32 %89, i32 %88
  br label %93

91:                                               ; preds = %5
  %92 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %66, i32 %55) #7
  br label %93

93:                                               ; preds = %81, %91
  %94 = phi i32 [ %90, %81 ], [ %92, %91 ]
  %95 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %3, i64 0, i32 1, i32 0, i32 0
  %96 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %95, align 8
  %97 = icmp eq %"class.blink::StyleImage"* %96, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %93
  %99 = load i56, i56* %23, align 8
  %100 = and i56 %99, 3
  %101 = icmp eq i56 %100, 2
  br i1 %101, label %107, label %102

102:                                              ; preds = %98, %93
  %103 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 3
  %104 = bitcast %"struct.blink::PhysicalOffset"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = and i64 %105, 4294967295
  br label %107

107:                                              ; preds = %98, %102
  %108 = phi i64 [ %106, %102 ], [ 0, %98 ]
  %109 = trunc i64 %108 to i32
  %110 = icmp sgt i32 %109, -1
  %111 = select i1 %110, i32 -2147483648, i32 2147483647
  %112 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %94, i32 %109) #7
  %113 = extractvalue { i32, i1 } %112, 1
  %114 = extractvalue { i32, i1 } %112, 0
  %115 = select i1 %113, i32 %111, i32 %114, !prof !2
  %116 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %3, i64 0, i32 3
  %117 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %3, i64 0, i32 3, i32 2
  %118 = load i8, i8* %117, align 1
  %119 = icmp eq i8 %118, 2
  br i1 %119, label %120, label %141, !prof !3

120:                                              ; preds = %107
  %121 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %3, i64 0, i32 3, i32 3
  %122 = load i8, i8* %121, align 2, !range !4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %127, label %124

124:                                              ; preds = %120
  %125 = bitcast %"class.blink::Length"* %116 to float*
  %126 = load float, float* %125, align 4
  br label %131

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %116, i64 0, i32 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = sitofp i32 %129 to float
  br label %131

131:                                              ; preds = %127, %124
  %132 = phi float [ %126, %124 ], [ %130, %127 ]
  %133 = fmul float %132, 6.400000e+01
  %134 = fcmp ult float %133, 0xC1E0000000000000
  %135 = fcmp ugt float %133, 0x41DFFFFFE0000000
  %136 = fcmp ogt float %133, 0xC1E0000000000000
  %137 = select i1 %136, float %133, float 0xC1E0000000000000
  %138 = fptosi float %137 to i32
  %139 = select i1 %134, i32 0, i32 2147483647
  %140 = select i1 %135, i32 %139, i32 %138
  br label %144

141:                                              ; preds = %107
  %142 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %116, i32 %60) #7
  %143 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %95, align 8
  br label %144

144:                                              ; preds = %131, %141
  %145 = phi %"class.blink::StyleImage"* [ %96, %131 ], [ %143, %141 ]
  %146 = phi i32 [ %140, %131 ], [ %142, %141 ]
  %147 = icmp eq %"class.blink::StyleImage"* %145, null
  br i1 %147, label %152, label %148

148:                                              ; preds = %144
  %149 = load i56, i56* %23, align 8
  %150 = and i56 %149, 3
  %151 = icmp eq i56 %150, 2
  br i1 %151, label %157, label %152

152:                                              ; preds = %148, %144
  %153 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 3
  %154 = bitcast %"struct.blink::PhysicalOffset"* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, -4294967296
  br label %157

157:                                              ; preds = %148, %152
  %158 = phi i64 [ %156, %152 ], [ 0, %148 ]
  %159 = lshr exact i64 %158, 32
  %160 = trunc i64 %159 to i32
  %161 = icmp sgt i32 %160, -1
  %162 = select i1 %161, i32 -2147483648, i32 2147483647
  %163 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %146, i32 %160) #7
  %164 = extractvalue { i32, i1 } %163, 1
  %165 = extractvalue { i32, i1 } %163, 0
  %166 = select i1 %164, i32 %162, i32 %165, !prof !2
  %167 = icmp eq i32 %27, 2
  %168 = icmp sgt i32 %63, 0
  %169 = and i1 %167, %168
  br i1 %169, label %170, label %271

170:                                              ; preds = %157
  %171 = load i32, i32* %33, align 4
  %172 = icmp sgt i32 %171, 0
  br i1 %172, label %173, label %271

173:                                              ; preds = %170
  %174 = shl i64 %62, 32
  %175 = ashr exact i64 %174, 26
  %176 = sext i32 %171 to i64
  %177 = sdiv i64 %175, %176
  %178 = call i1 @llvm.is.constant.i64(i64 %177) #7
  br i1 %178, label %186, label %179

179:                                              ; preds = %173
  %180 = icmp slt i64 %177, 0
  %181 = select i1 %180, i32 -2147483648, i32 2147483647
  %182 = add nsw i64 %177, 2147483648
  %183 = icmp ult i64 %182, 4294967296
  %184 = trunc i64 %177 to i32
  %185 = select i1 %183, i32 %184, i32 %181, !prof !3
  br label %192

186:                                              ; preds = %173
  %187 = icmp sgt i64 %177, 2147483647
  br i1 %187, label %192, label %188

188:                                              ; preds = %186
  %189 = icmp sgt i64 %177, -2147483648
  %190 = select i1 %189, i64 %177, i64 -2147483648
  %191 = trunc i64 %190 to i32
  br label %192

192:                                              ; preds = %188, %186, %179
  %193 = phi i32 [ %185, %179 ], [ %191, %188 ], [ 2147483647, %186 ]
  %194 = sdiv i32 %193, 64
  %195 = srem i32 %193, 64
  %196 = add nsw i32 %195, 32
  %197 = ashr i32 %196, 6
  %198 = add nsw i32 %197, %194
  %199 = icmp sgt i32 %198, 1
  %200 = select i1 %199, i32 %198, i32 1
  %201 = icmp sgt i32 %200, 33554431
  %202 = shl i32 %200, 6
  %203 = select i1 %201, i32 2147483647, i32 %202
  %204 = sext i32 %203 to i64
  %205 = sdiv i64 %175, %204
  %206 = call i1 @llvm.is.constant.i64(i64 %205) #7
  br i1 %206, label %214, label %207

207:                                              ; preds = %192
  %208 = icmp slt i64 %205, 0
  %209 = select i1 %208, i32 -2147483648, i32 2147483647
  %210 = add nsw i64 %205, 2147483648
  %211 = icmp ult i64 %210, 4294967296
  %212 = trunc i64 %205 to i32
  %213 = select i1 %211, i32 %212, i32 %209, !prof !3
  br label %220

214:                                              ; preds = %192
  %215 = icmp sgt i64 %205, 2147483647
  br i1 %215, label %220, label %216

216:                                              ; preds = %214
  %217 = icmp sgt i64 %205, -2147483648
  %218 = select i1 %217, i64 %205, i64 -2147483648
  %219 = trunc i64 %218 to i32
  br label %220

220:                                              ; preds = %207, %214, %216
  %221 = phi i32 [ %213, %207 ], [ %219, %216 ], [ 2147483647, %214 ]
  %222 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %3, i64 0, i32 4, i32 1, i32 2
  %223 = load i8, i8* %222, align 1
  %224 = icmp eq i8 %223, 0
  %225 = icmp ne i32 %30, 2
  %226 = and i1 %225, %224
  br i1 %226, label %227, label %249

227:                                              ; preds = %220
  %228 = load i32, i32* %42, align 4
  %229 = sext i32 %221 to i64
  %230 = sext i32 %228 to i64
  %231 = mul nsw i64 %230, %229
  %232 = sdiv i64 %231, %176
  %233 = call i1 @llvm.is.constant.i64(i64 %232) #7
  br i1 %233, label %241, label %234

234:                                              ; preds = %227
  %235 = icmp slt i64 %232, 0
  %236 = select i1 %235, i32 -2147483648, i32 2147483647
  %237 = add nsw i64 %232, 2147483648
  %238 = icmp ult i64 %237, 4294967296
  %239 = trunc i64 %232 to i32
  %240 = select i1 %238, i32 %239, i32 %236, !prof !3
  br label %247

241:                                              ; preds = %227
  %242 = icmp sgt i64 %232, 2147483647
  br i1 %242, label %247, label %243

243:                                              ; preds = %241
  %244 = icmp sgt i64 %232, -2147483648
  %245 = select i1 %244, i64 %232, i64 -2147483648
  %246 = trunc i64 %245 to i32
  br label %247

247:                                              ; preds = %234, %241, %243
  %248 = phi i32 [ %240, %234 ], [ %246, %243 ], [ 2147483647, %241 ]
  store i32 %248, i32* %42, align 4
  br label %249

249:                                              ; preds = %247, %220
  store i32 %221, i32* %33, align 8
  %250 = load i32, i32* %17, align 4
  %251 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %115, i32 %250) #7
  %252 = icmp eq i32 %221, 0
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = extractvalue { i32, i1 } %251, 1
  %255 = icmp slt i32 %250, 0
  %256 = select i1 %255, i32 -2147483648, i32 2147483647
  %257 = extractvalue { i32, i1 } %251, 0
  %258 = select i1 %254, i32 %256, i32 %257, !prof !2
  %259 = srem i32 %258, %221
  %260 = icmp sgt i32 %259, -1
  %261 = select i1 %260, i32 -2147483648, i32 2147483647
  %262 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %221, i32 %259) #7
  %263 = extractvalue { i32, i1 } %262, 1
  %264 = extractvalue { i32, i1 } %262, 0
  %265 = select i1 %263, i32 %261, i32 %264, !prof !2
  br label %266

266:                                              ; preds = %249, %253
  %267 = phi i32 [ %265, %253 ], [ 0, %249 ]
  %268 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 0, i32 0
  store i32 %267, i32* %268, align 8
  %269 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8
  %270 = bitcast %"struct.blink::PhysicalSize"* %269 to i64*
  store i64 0, i64* %270, align 8
  br label %271

271:                                              ; preds = %157, %266, %170
  %272 = icmp eq i32 %30, 2
  %273 = icmp sgt i32 %65, 0
  %274 = and i1 %272, %273
  br i1 %274, label %275, label %377

275:                                              ; preds = %271
  %276 = load i32, i32* %42, align 4
  %277 = icmp sgt i32 %276, 0
  br i1 %277, label %278, label %377

278:                                              ; preds = %275
  %279 = ashr i64 %62, 32
  %280 = shl nsw i64 %279, 6
  %281 = sext i32 %276 to i64
  %282 = sdiv i64 %280, %281
  %283 = call i1 @llvm.is.constant.i64(i64 %282) #7
  br i1 %283, label %291, label %284

284:                                              ; preds = %278
  %285 = icmp slt i64 %282, 0
  %286 = select i1 %285, i32 -2147483648, i32 2147483647
  %287 = add nsw i64 %282, 2147483648
  %288 = icmp ult i64 %287, 4294967296
  %289 = trunc i64 %282 to i32
  %290 = select i1 %288, i32 %289, i32 %286, !prof !3
  br label %297

291:                                              ; preds = %278
  %292 = icmp sgt i64 %282, 2147483647
  br i1 %292, label %297, label %293

293:                                              ; preds = %291
  %294 = icmp sgt i64 %282, -2147483648
  %295 = select i1 %294, i64 %282, i64 -2147483648
  %296 = trunc i64 %295 to i32
  br label %297

297:                                              ; preds = %293, %291, %284
  %298 = phi i32 [ %290, %284 ], [ %296, %293 ], [ 2147483647, %291 ]
  %299 = sdiv i32 %298, 64
  %300 = srem i32 %298, 64
  %301 = add nsw i32 %300, 32
  %302 = ashr i32 %301, 6
  %303 = add nsw i32 %302, %299
  %304 = icmp sgt i32 %303, 1
  %305 = select i1 %304, i32 %303, i32 1
  %306 = icmp sgt i32 %305, 33554431
  %307 = shl i32 %305, 6
  %308 = select i1 %306, i32 2147483647, i32 %307
  %309 = sext i32 %308 to i64
  %310 = sdiv i64 %280, %309
  %311 = call i1 @llvm.is.constant.i64(i64 %310) #7
  br i1 %311, label %319, label %312

312:                                              ; preds = %297
  %313 = icmp slt i64 %310, 0
  %314 = select i1 %313, i32 -2147483648, i32 2147483647
  %315 = add nsw i64 %310, 2147483648
  %316 = icmp ult i64 %315, 4294967296
  %317 = trunc i64 %310 to i32
  %318 = select i1 %316, i32 %317, i32 %314, !prof !3
  br label %325

319:                                              ; preds = %297
  %320 = icmp sgt i64 %310, 2147483647
  br i1 %320, label %325, label %321

321:                                              ; preds = %319
  %322 = icmp sgt i64 %310, -2147483648
  %323 = select i1 %322, i64 %310, i64 -2147483648
  %324 = trunc i64 %323 to i32
  br label %325

325:                                              ; preds = %312, %319, %321
  %326 = phi i32 [ %318, %312 ], [ %324, %321 ], [ 2147483647, %319 ]
  %327 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %3, i64 0, i32 4, i32 0, i32 2
  %328 = load i8, i8* %327, align 1
  %329 = icmp eq i8 %328, 0
  %330 = icmp ne i32 %27, 2
  %331 = and i1 %330, %329
  br i1 %331, label %332, label %355

332:                                              ; preds = %325
  %333 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 7, i32 0, i32 0
  %334 = load i32, i32* %333, align 8
  %335 = sext i32 %326 to i64
  %336 = sext i32 %334 to i64
  %337 = mul nsw i64 %336, %335
  %338 = sdiv i64 %337, %281
  %339 = call i1 @llvm.is.constant.i64(i64 %338) #7
  br i1 %339, label %347, label %340

340:                                              ; preds = %332
  %341 = icmp slt i64 %338, 0
  %342 = select i1 %341, i32 -2147483648, i32 2147483647
  %343 = add nsw i64 %338, 2147483648
  %344 = icmp ult i64 %343, 4294967296
  %345 = trunc i64 %338 to i32
  %346 = select i1 %344, i32 %345, i32 %342, !prof !3
  br label %353

347:                                              ; preds = %332
  %348 = icmp sgt i64 %338, 2147483647
  br i1 %348, label %353, label %349

349:                                              ; preds = %347
  %350 = icmp sgt i64 %338, -2147483648
  %351 = select i1 %350, i64 %338, i64 -2147483648
  %352 = trunc i64 %351 to i32
  br label %353

353:                                              ; preds = %340, %347, %349
  %354 = phi i32 [ %346, %340 ], [ %352, %349 ], [ 2147483647, %347 ]
  store i32 %354, i32* %333, align 8
  br label %355

355:                                              ; preds = %353, %325
  store i32 %326, i32* %42, align 4
  %356 = load i32, i32* %18, align 4
  %357 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %166, i32 %356) #7
  %358 = icmp eq i32 %326, 0
  br i1 %358, label %372, label %359

359:                                              ; preds = %355
  %360 = extractvalue { i32, i1 } %357, 1
  %361 = icmp slt i32 %356, 0
  %362 = select i1 %361, i32 -2147483648, i32 2147483647
  %363 = extractvalue { i32, i1 } %357, 0
  %364 = select i1 %360, i32 %362, i32 %363, !prof !2
  %365 = srem i32 %364, %326
  %366 = icmp sgt i32 %365, -1
  %367 = select i1 %366, i32 -2147483648, i32 2147483647
  %368 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %326, i32 %365) #7
  %369 = extractvalue { i32, i1 } %368, 1
  %370 = extractvalue { i32, i1 } %368, 0
  %371 = select i1 %369, i32 %367, i32 %370, !prof !2
  br label %372

372:                                              ; preds = %355, %359
  %373 = phi i32 [ %371, %359 ], [ 0, %355 ]
  %374 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 1, i32 0
  store i32 %373, i32* %374, align 4
  %375 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8
  %376 = bitcast %"struct.blink::PhysicalSize"* %375 to i64*
  store i64 0, i64* %376, align 8
  br label %377

377:                                              ; preds = %271, %372, %275
  switch i32 %27, label %512 [
    i32 0, label %378
    i32 3, label %380
    i32 1, label %480
  ]

378:                                              ; preds = %377
  %379 = load i32, i32* %17, align 4
  call void @_ZN5blink23BackgroundImageGeometry10SetRepeatXERKNS_9FillLayerENS_10LayoutUnitES4_(%"class.blink::BackgroundImageGeometry"* %0, %"class.blink::FillLayer"* dereferenceable(64) %3, i32 %40, i32 %379)
  br label %512

380:                                              ; preds = %377
  %381 = load i32, i32* %33, align 4
  %382 = icmp sgt i32 %381, 0
  br i1 %382, label %383, label %512

383:                                              ; preds = %380
  %384 = shl i64 %62, 32
  %385 = ashr exact i64 %384, 26
  %386 = sext i32 %381 to i64
  %387 = sdiv i64 %385, %386
  %388 = call i1 @llvm.is.constant.i64(i64 %387) #7
  br i1 %388, label %396, label %389

389:                                              ; preds = %383
  %390 = icmp slt i64 %387, 0
  %391 = select i1 %390, i32 -2147483648, i32 2147483647
  %392 = add nsw i64 %387, 2147483648
  %393 = icmp ult i64 %392, 4294967296
  %394 = trunc i64 %387 to i32
  %395 = select i1 %393, i32 %394, i32 %391, !prof !3
  br label %402

396:                                              ; preds = %383
  %397 = icmp sgt i64 %387, 2147483647
  br i1 %397, label %406, label %398

398:                                              ; preds = %396
  %399 = icmp sgt i64 %387, -2147483648
  %400 = select i1 %399, i64 %387, i64 -2147483648
  %401 = trunc i64 %400 to i32
  br label %402

402:                                              ; preds = %398, %389
  %403 = phi i32 [ %395, %389 ], [ %401, %398 ]
  %404 = sdiv i32 %403, 64
  %405 = icmp sgt i32 %403, 127
  br i1 %405, label %406, label %480

406:                                              ; preds = %402, %396
  %407 = phi i32 [ %404, %402 ], [ 33554431, %396 ]
  %408 = shl nsw i32 %407, 6
  %409 = sext i32 %408 to i64
  %410 = mul nsw i64 %409, %386
  %411 = sdiv i64 %410, 64
  %412 = ashr i64 %411, 32
  %413 = trunc i64 %412 to i32
  %414 = trunc i64 %411 to i32
  %415 = ashr i32 %414, 31
  %416 = icmp eq i32 %415, %413
  br i1 %416, label %421, label %417

417:                                              ; preds = %406
  %418 = xor i32 %408, %381
  %419 = lshr i32 %418, 31
  %420 = add nuw i32 %419, 2147483647
  br label %421

421:                                              ; preds = %417, %406
  %422 = phi i32 [ %414, %406 ], [ %420, %417 ]
  %423 = icmp sgt i32 %422, -1
  %424 = select i1 %423, i32 -2147483648, i32 2147483647
  %425 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %63, i32 %422) #7
  %426 = extractvalue { i32, i1 } %425, 1
  %427 = extractvalue { i32, i1 } %425, 0
  %428 = select i1 %426, i32 %424, i32 %427, !prof !2
  %429 = icmp slt i32 %407, -33554431
  %430 = add i32 %408, -64
  %431 = select i1 %429, i32 -2147483648, i32 %430
  %432 = sext i32 %431 to i64
  %433 = sext i32 %428 to i64
  %434 = shl nsw i64 %433, 6
  %435 = sdiv i64 %434, %432
  %436 = call i1 @llvm.is.constant.i64(i64 %435) #7
  br i1 %436, label %444, label %437

437:                                              ; preds = %421
  %438 = icmp slt i64 %435, 0
  %439 = select i1 %438, i32 -2147483648, i32 2147483647
  %440 = add i64 %435, 2147483648
  %441 = icmp ult i64 %440, 4294967296
  %442 = trunc i64 %435 to i32
  %443 = select i1 %441, i32 %442, i32 %439, !prof !3
  br label %450

444:                                              ; preds = %421
  %445 = icmp sgt i64 %435, 2147483647
  br i1 %445, label %453, label %446

446:                                              ; preds = %444
  %447 = icmp sgt i64 %435, -2147483648
  %448 = select i1 %447, i64 %435, i64 -2147483648
  %449 = trunc i64 %448 to i32
  br label %450

450:                                              ; preds = %437, %446
  %451 = phi i32 [ %443, %437 ], [ %449, %446 ]
  %452 = icmp sgt i32 %451, -1
  br i1 %452, label %453, label %480

453:                                              ; preds = %444, %450
  %454 = phi i32 [ %451, %450 ], [ 2147483647, %444 ]
  %455 = load i32, i32* %20, align 4
  %456 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8
  %457 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8, i32 1, i32 0
  %458 = load i32, i32* %457, align 4
  %459 = bitcast %"struct.blink::PhysicalSize"* %456 to i64*
  %460 = zext i32 %458 to i64
  %461 = shl nuw i64 %460, 32
  %462 = zext i32 %454 to i64
  %463 = or i64 %461, %462
  store i64 %463, i64* %459, align 8
  %464 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %381, i32 %454) #7
  %465 = extractvalue { i32, i1 } %464, 1
  %466 = extractvalue { i32, i1 } %464, 0
  %467 = select i1 %465, i32 2147483647, i32 %466, !prof !2
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %477, label %469

469:                                              ; preds = %453
  %470 = srem i32 %455, %467
  %471 = icmp sgt i32 %470, -1
  %472 = select i1 %471, i32 -2147483648, i32 2147483647
  %473 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %467, i32 %470) #7
  %474 = extractvalue { i32, i1 } %473, 1
  %475 = extractvalue { i32, i1 } %473, 0
  %476 = select i1 %474, i32 %472, i32 %475, !prof !2
  br label %477

477:                                              ; preds = %453, %469
  %478 = phi i32 [ %476, %469 ], [ 0, %453 ]
  %479 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 0, i32 0
  store i32 %478, i32* %479, align 8
  br label %512

480:                                              ; preds = %377, %402, %450
  %481 = load i56, i56* %23, align 8
  %482 = and i56 %481, 25165824
  %483 = icmp eq i56 %482, 8388608
  br i1 %483, label %484, label %495

484:                                              ; preds = %480
  %485 = icmp sgt i32 %115, -1
  %486 = select i1 %485, i32 -2147483648, i32 2147483647
  %487 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %40, i32 %115) #7
  %488 = extractvalue { i32, i1 } %487, 1
  %489 = extractvalue { i32, i1 } %487, 0
  %490 = select i1 %488, i32 %486, i32 %489, !prof !2
  %491 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %55, i32 %115) #7
  %492 = extractvalue { i32, i1 } %491, 1
  %493 = extractvalue { i32, i1 } %491, 0
  %494 = select i1 %492, i32 %486, i32 %493, !prof !2
  br label %495

495:                                              ; preds = %480, %484
  %496 = phi i32 [ %490, %484 ], [ %115, %480 ]
  %497 = phi i32 [ %494, %484 ], [ %115, %480 ]
  %498 = load i32, i32* %17, align 4
  %499 = icmp slt i32 %496, 0
  %500 = select i1 %499, i32 -2147483648, i32 2147483647
  %501 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %498, i32 %496) #7
  %502 = extractvalue { i32, i1 } %501, 1
  %503 = extractvalue { i32, i1 } %501, 0
  %504 = select i1 %502, i32 %500, i32 %503, !prof !2
  %505 = load i32, i32* %20, align 4
  %506 = icmp slt i32 %497, 0
  %507 = select i1 %506, i32 -2147483648, i32 2147483647
  %508 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %505, i32 %497) #7
  %509 = extractvalue { i32, i1 } %508, 1
  %510 = extractvalue { i32, i1 } %508, 0
  %511 = select i1 %509, i32 %507, i32 %510, !prof !2
  call void @_ZN5blink23BackgroundImageGeometry12SetNoRepeatXERKNS_9FillLayerENS_10LayoutUnitES4_(%"class.blink::BackgroundImageGeometry"* %0, %"class.blink::FillLayer"* dereferenceable(64) %3, i32 %504, i32 %511)
  br label %512

512:                                              ; preds = %377, %477, %380, %378, %495
  switch i32 %30, label %647 [
    i32 0, label %513
    i32 3, label %515
    i32 1, label %615
  ]

513:                                              ; preds = %512
  %514 = load i32, i32* %18, align 4
  call void @_ZN5blink23BackgroundImageGeometry10SetRepeatYERKNS_9FillLayerENS_10LayoutUnitES4_(%"class.blink::BackgroundImageGeometry"* %0, %"class.blink::FillLayer"* dereferenceable(64) %3, i32 %49, i32 %514)
  br label %647

515:                                              ; preds = %512
  %516 = load i32, i32* %42, align 4
  %517 = icmp sgt i32 %516, 0
  br i1 %517, label %518, label %647

518:                                              ; preds = %515
  %519 = ashr i64 %62, 32
  %520 = shl nsw i64 %519, 6
  %521 = sext i32 %516 to i64
  %522 = sdiv i64 %520, %521
  %523 = call i1 @llvm.is.constant.i64(i64 %522) #7
  br i1 %523, label %531, label %524

524:                                              ; preds = %518
  %525 = icmp slt i64 %522, 0
  %526 = select i1 %525, i32 -2147483648, i32 2147483647
  %527 = add i64 %522, 2147483648
  %528 = icmp ult i64 %527, 4294967296
  %529 = trunc i64 %522 to i32
  %530 = select i1 %528, i32 %529, i32 %526, !prof !3
  br label %537

531:                                              ; preds = %518
  %532 = icmp sgt i64 %522, 2147483647
  br i1 %532, label %541, label %533

533:                                              ; preds = %531
  %534 = icmp sgt i64 %522, -2147483648
  %535 = select i1 %534, i64 %522, i64 -2147483648
  %536 = trunc i64 %535 to i32
  br label %537

537:                                              ; preds = %533, %524
  %538 = phi i32 [ %530, %524 ], [ %536, %533 ]
  %539 = sdiv i32 %538, 64
  %540 = icmp sgt i32 %538, 127
  br i1 %540, label %541, label %615

541:                                              ; preds = %537, %531
  %542 = phi i32 [ %539, %537 ], [ 33554431, %531 ]
  %543 = shl nsw i32 %542, 6
  %544 = sext i32 %543 to i64
  %545 = mul nsw i64 %544, %521
  %546 = sdiv i64 %545, 64
  %547 = ashr i64 %546, 32
  %548 = trunc i64 %547 to i32
  %549 = trunc i64 %546 to i32
  %550 = ashr i32 %549, 31
  %551 = icmp eq i32 %550, %548
  br i1 %551, label %556, label %552

552:                                              ; preds = %541
  %553 = xor i32 %543, %516
  %554 = lshr i32 %553, 31
  %555 = add nuw i32 %554, 2147483647
  br label %556

556:                                              ; preds = %552, %541
  %557 = phi i32 [ %549, %541 ], [ %555, %552 ]
  %558 = icmp sgt i32 %557, -1
  %559 = select i1 %558, i32 -2147483648, i32 2147483647
  %560 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %65, i32 %557) #7
  %561 = extractvalue { i32, i1 } %560, 1
  %562 = extractvalue { i32, i1 } %560, 0
  %563 = select i1 %561, i32 %559, i32 %562, !prof !2
  %564 = icmp slt i32 %542, -33554431
  %565 = add i32 %543, -64
  %566 = select i1 %564, i32 -2147483648, i32 %565
  %567 = sext i32 %566 to i64
  %568 = sext i32 %563 to i64
  %569 = shl nsw i64 %568, 6
  %570 = sdiv i64 %569, %567
  %571 = call i1 @llvm.is.constant.i64(i64 %570) #7
  br i1 %571, label %579, label %572

572:                                              ; preds = %556
  %573 = icmp slt i64 %570, 0
  %574 = select i1 %573, i32 -2147483648, i32 2147483647
  %575 = add i64 %570, 2147483648
  %576 = icmp ult i64 %575, 4294967296
  %577 = trunc i64 %570 to i32
  %578 = select i1 %576, i32 %577, i32 %574, !prof !3
  br label %585

579:                                              ; preds = %556
  %580 = icmp sgt i64 %570, 2147483647
  br i1 %580, label %588, label %581

581:                                              ; preds = %579
  %582 = icmp sgt i64 %570, -2147483648
  %583 = select i1 %582, i64 %570, i64 -2147483648
  %584 = trunc i64 %583 to i32
  br label %585

585:                                              ; preds = %572, %581
  %586 = phi i32 [ %578, %572 ], [ %584, %581 ]
  %587 = icmp sgt i32 %586, -1
  br i1 %587, label %588, label %615

588:                                              ; preds = %579, %585
  %589 = phi i32 [ %586, %585 ], [ 2147483647, %579 ]
  %590 = load i32, i32* %21, align 4
  %591 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 8
  %592 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %591, i64 0, i32 0, i32 0
  %593 = load i32, i32* %592, align 4
  %594 = bitcast %"struct.blink::PhysicalSize"* %591 to i64*
  %595 = zext i32 %589 to i64
  %596 = shl nuw i64 %595, 32
  %597 = zext i32 %593 to i64
  %598 = or i64 %596, %597
  store i64 %598, i64* %594, align 8
  %599 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %516, i32 %589) #7
  %600 = extractvalue { i32, i1 } %599, 1
  %601 = extractvalue { i32, i1 } %599, 0
  %602 = select i1 %600, i32 2147483647, i32 %601, !prof !2
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %612, label %604

604:                                              ; preds = %588
  %605 = srem i32 %590, %602
  %606 = icmp sgt i32 %605, -1
  %607 = select i1 %606, i32 -2147483648, i32 2147483647
  %608 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %602, i32 %605) #7
  %609 = extractvalue { i32, i1 } %608, 1
  %610 = extractvalue { i32, i1 } %608, 0
  %611 = select i1 %609, i32 %607, i32 %610, !prof !2
  br label %612

612:                                              ; preds = %588, %604
  %613 = phi i32 [ %611, %604 ], [ 0, %588 ]
  %614 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 1, i32 0
  store i32 %613, i32* %614, align 4
  br label %647

615:                                              ; preds = %512, %537, %585
  %616 = load i56, i56* %23, align 8
  %617 = and i56 %616, 100663296
  %618 = icmp eq i56 %617, 67108864
  br i1 %618, label %619, label %630

619:                                              ; preds = %615
  %620 = icmp sgt i32 %166, -1
  %621 = select i1 %620, i32 -2147483648, i32 2147483647
  %622 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %49, i32 %166) #7
  %623 = extractvalue { i32, i1 } %622, 1
  %624 = extractvalue { i32, i1 } %622, 0
  %625 = select i1 %623, i32 %621, i32 %624, !prof !2
  %626 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %60, i32 %166) #7
  %627 = extractvalue { i32, i1 } %626, 1
  %628 = extractvalue { i32, i1 } %626, 0
  %629 = select i1 %627, i32 %621, i32 %628, !prof !2
  br label %630

630:                                              ; preds = %615, %619
  %631 = phi i32 [ %625, %619 ], [ %166, %615 ]
  %632 = phi i32 [ %629, %619 ], [ %166, %615 ]
  %633 = load i32, i32* %18, align 4
  %634 = icmp slt i32 %631, 0
  %635 = select i1 %634, i32 -2147483648, i32 2147483647
  %636 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %633, i32 %631) #7
  %637 = extractvalue { i32, i1 } %636, 1
  %638 = extractvalue { i32, i1 } %636, 0
  %639 = select i1 %637, i32 %635, i32 %638, !prof !2
  %640 = load i32, i32* %21, align 4
  %641 = icmp slt i32 %632, 0
  %642 = select i1 %641, i32 -2147483648, i32 2147483647
  %643 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %640, i32 %632) #7
  %644 = extractvalue { i32, i1 } %643, 1
  %645 = extractvalue { i32, i1 } %643, 0
  %646 = select i1 %644, i32 %642, i32 %645, !prof !2
  call void @_ZN5blink23BackgroundImageGeometry12SetNoRepeatYERKNS_9FillLayerENS_10LayoutUnitES4_(%"class.blink::BackgroundImageGeometry"* %0, %"class.blink::FillLayer"* dereferenceable(64) %3, i32 %639, i32 %646)
  br label %647

647:                                              ; preds = %512, %612, %515, %513, %630
  %648 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %95, align 8
  %649 = icmp eq %"class.blink::StyleImage"* %648, null
  br i1 %649, label %697, label %650

650:                                              ; preds = %647
  %651 = load i56, i56* %23, align 8
  %652 = and i56 %651, 3
  %653 = icmp eq i56 %652, 2
  br i1 %653, label %654, label %697

654:                                              ; preds = %650
  %655 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 0, i32 0
  %656 = load i32, i32* %655, align 4
  %657 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %658 = load i32, i32* %657, align 4
  %659 = icmp sgt i32 %658, -1
  %660 = select i1 %659, i32 -2147483648, i32 2147483647
  %661 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %656, i32 %658) #7
  %662 = extractvalue { i32, i1 } %661, 1
  %663 = extractvalue { i32, i1 } %661, 0
  %664 = select i1 %662, i32 %660, i32 %663, !prof !2
  %665 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 1, i32 0
  %666 = load i32, i32* %665, align 4
  %667 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4, i32 0, i32 1, i32 0
  %668 = load i32, i32* %667, align 4
  %669 = icmp sgt i32 %668, -1
  %670 = select i1 %669, i32 -2147483648, i32 2147483647
  %671 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %666, i32 %668) #7
  %672 = extractvalue { i32, i1 } %671, 1
  %673 = extractvalue { i32, i1 } %671, 0
  %674 = select i1 %672, i32 %670, i32 %673, !prof !2
  %675 = icmp sgt i32 %664, 0
  %676 = select i1 %675, i32 %664, i32 0
  %677 = icmp sgt i32 %674, 0
  %678 = select i1 %677, i32 %674, i32 0
  %679 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6
  %680 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %679, i64 0, i32 0, i32 0
  %681 = load i32, i32* %680, align 4
  %682 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %681, i32 %676) #7
  %683 = extractvalue { i32, i1 } %682, 1
  %684 = extractvalue { i32, i1 } %682, 0
  %685 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 6, i32 1, i32 0
  %686 = load i32, i32* %685, align 4
  %687 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %686, i32 %678) #7
  %688 = extractvalue { i32, i1 } %687, 1
  %689 = extractvalue { i32, i1 } %687, 0
  %690 = zext i32 %689 to i64
  %691 = shl nuw i64 %690, 32
  %692 = select i1 %688, i64 9223372032559808512, i64 %691, !prof !2
  %693 = zext i32 %684 to i64
  %694 = select i1 %683, i64 2147483647, i64 %693, !prof !2
  %695 = or i64 %692, %694
  %696 = bitcast %"struct.blink::PhysicalOffset"* %679 to i64*
  store i64 %695, i64* %696, align 4
  br label %697

697:                                              ; preds = %647, %654, %650
  %698 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 4
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* %698, %"struct.blink::PhysicalRect"* dereferenceable(16) %4) #7
  %699 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* %699, %"struct.blink::PhysicalRect"* dereferenceable(16) %4) #7
  %700 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %699, i64 0, i32 0, i32 0, i32 0
  %701 = load i32, i32* %700, align 4
  %702 = sdiv i32 %701, 64
  %703 = srem i32 %701, 64
  %704 = add nsw i32 %703, 32
  %705 = ashr i32 %704, 6
  %706 = add nsw i32 %705, %702
  %707 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %708 = load i32, i32* %707, align 4
  %709 = sdiv i32 %708, 64
  %710 = srem i32 %708, 64
  %711 = add nsw i32 %710, 32
  %712 = ashr i32 %711, 6
  %713 = add nsw i32 %712, %709
  %714 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  %715 = load i32, i32* %714, align 4
  %716 = icmp slt i32 %715, 0
  %717 = select i1 %716, i32 -2147483648, i32 2147483647
  %718 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %703, i32 %715) #7
  %719 = extractvalue { i32, i1 } %718, 1
  %720 = extractvalue { i32, i1 } %718, 0
  %721 = select i1 %719, i32 %717, i32 %720, !prof !2
  %722 = sdiv i32 %721, 64
  %723 = srem i32 %721, 64
  %724 = add nsw i32 %723, 32
  %725 = ashr i32 %724, 6
  %726 = sub nsw i32 %722, %705
  %727 = add nsw i32 %725, %726
  %728 = icmp eq i32 %727, 0
  br i1 %728, label %729, label %735

729:                                              ; preds = %697
  %730 = add i32 %715, 4
  %731 = icmp ugt i32 %730, 8
  br i1 %731, label %732, label %735, !prof !20

732:                                              ; preds = %729
  %733 = icmp sgt i32 %715, 0
  %734 = select i1 %733, i32 1, i32 -1
  br label %735

735:                                              ; preds = %732, %729, %697
  %736 = phi i32 [ %734, %732 ], [ %727, %697 ], [ 0, %729 ]
  %737 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 1, i32 1, i32 0
  %738 = load i32, i32* %737, align 4
  %739 = icmp slt i32 %738, 0
  %740 = select i1 %739, i32 -2147483648, i32 2147483647
  %741 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %710, i32 %738) #7
  %742 = extractvalue { i32, i1 } %741, 1
  %743 = extractvalue { i32, i1 } %741, 0
  %744 = select i1 %742, i32 %740, i32 %743, !prof !2
  %745 = sdiv i32 %744, 64
  %746 = srem i32 %744, 64
  %747 = add nsw i32 %746, 32
  %748 = ashr i32 %747, 6
  %749 = sub nsw i32 %745, %712
  %750 = add nsw i32 %748, %749
  %751 = icmp eq i32 %750, 0
  br i1 %751, label %752, label %758

752:                                              ; preds = %735
  %753 = add i32 %738, 4
  %754 = icmp ugt i32 %753, 8
  br i1 %754, label %755, label %758, !prof !20

755:                                              ; preds = %752
  %756 = icmp sgt i32 %738, 0
  %757 = select i1 %756, i32 1, i32 -1
  br label %758

758:                                              ; preds = %735, %752, %755
  %759 = phi i32 [ %757, %755 ], [ %750, %735 ], [ 0, %752 ]
  %760 = icmp sgt i32 %706, 33554431
  br i1 %760, label %765, label %761

761:                                              ; preds = %758
  %762 = icmp slt i32 %706, -33554432
  %763 = shl i32 %706, 6
  %764 = select i1 %762, i32 -2147483648, i32 %763
  br label %765

765:                                              ; preds = %761, %758
  %766 = phi i32 [ 2147483647, %758 ], [ %764, %761 ]
  %767 = icmp sgt i32 %713, 33554431
  br i1 %767, label %772, label %768

768:                                              ; preds = %765
  %769 = icmp slt i32 %713, -33554432
  %770 = shl i32 %713, 6
  %771 = select i1 %769, i32 -2147483648, i32 %770
  br label %772

772:                                              ; preds = %768, %765
  %773 = phi i32 [ 2147483647, %765 ], [ %771, %768 ]
  %774 = icmp sgt i32 %736, 33554431
  br i1 %774, label %779, label %775

775:                                              ; preds = %772
  %776 = icmp slt i32 %736, -33554432
  %777 = shl i32 %736, 6
  %778 = select i1 %776, i32 -2147483648, i32 %777
  br label %779

779:                                              ; preds = %775, %772
  %780 = phi i32 [ 2147483647, %772 ], [ %778, %775 ]
  %781 = icmp sgt i32 %759, 33554431
  br i1 %781, label %786, label %782

782:                                              ; preds = %779
  %783 = icmp slt i32 %759, -33554432
  %784 = shl i32 %759, 6
  %785 = select i1 %783, i32 -2147483648, i32 %784
  br label %786

786:                                              ; preds = %782, %779
  %787 = phi i32 [ 2147483647, %779 ], [ %785, %782 ]
  %788 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  store i32 %766, i32* %788, align 8
  store i32 %773, i32* %707, align 4
  store i32 %780, i32* %714, align 8
  store i32 %787, i32* %737, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #7
  ret void
}

declare void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.blink::ImageResourceObserver"* @_ZNK5blink23BackgroundImageGeometry11ImageClientEv(%"class.blink::BackgroundImageGeometry"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 1
  %7 = select i1 %4, %"class.blink::LayoutBoxModelObject"** %6, %"class.blink::LayoutBoxModelObject"** %5
  %8 = bitcast %"class.blink::LayoutBoxModelObject"** %7 to %"class.blink::ImageResourceObserver"**
  %9 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %8, align 8
  ret %"class.blink::ImageResourceObserver"* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(2848) %"class.blink::Document"* @_ZNK5blink23BackgroundImageGeometry13ImageDocumentEv(%"class.blink::BackgroundImageGeometry"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::BackgroundImageGeometry"* %0 to %"class.blink::LayoutObject"**
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %1, %7
  %8 = phi %"class.blink::LayoutObject"* [ %10, %7 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %1
  %15 = phi %"class.blink::Node"* [ %5, %1 ], [ %12, %7 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  ret %"class.blink::Document"* %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink23BackgroundImageGeometry10ImageStyleERKNS_13ComputedStyleE(%"class.blink::BackgroundImageGeometry"* nocapture readonly, %"class.blink::ComputedStyle"* readnone dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 10
  %4 = load i8, i8* %3, align 1, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 12
  %8 = load i8, i8* %7, align 1, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %0, i64 0, i32 1
  %12 = bitcast %"class.blink::LayoutBoxModelObject"** %11 to %"class.blink::LayoutObject"**
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  br label %16

16:                                               ; preds = %6, %10
  %17 = phi %"class.blink::ComputedStyle"* [ %15, %10 ], [ %1, %6 ]
  ret %"class.blink::ComputedStyle"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink23BackgroundImageGeometry25ImageInterpolationQualityEv(%"class.blink::BackgroundImageGeometry"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.blink::BackgroundImageGeometry"* %0 to %"class.blink::LayoutObject"**
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = tail call i32 @_ZNK5blink13ComputedStyle23GetInterpolationQualityEv(%"class.blink::ComputedStyle"* %5) #7
  ret i32 %6
}

declare i32 @_ZNK5blink13ComputedStyle23GetInterpolationQualityEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #6

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #6

declare i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #3

declare %"class.blink::LayoutTableCol"* @_ZNK5blink14LayoutTableCol20EnclosingColumnGroupEv(%"class.blink::LayoutTableCol"*) local_unnamed_addr #3

declare void @_ZNK5blink11LayoutTable30SlowColElementAtAbsoluteColumnEj(%"struct.blink::LayoutTable::ColAndColGroup"* sret, %"class.blink::LayoutTable"*, i32) local_unnamed_addr #3

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #3

declare i64 @_ZNK5blink9LayoutBox21ScrolledContentOffsetEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #3

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #3

declare <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"*, %"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #6

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj: argument 0"}
!16 = distinct !{!16, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj: argument 0"}
!19 = distinct !{!19, !"_ZNK5blink11LayoutTable26ColElementAtAbsoluteColumnEj"}
!20 = !{!"branch_weights", i32 4001, i32 4000000}
