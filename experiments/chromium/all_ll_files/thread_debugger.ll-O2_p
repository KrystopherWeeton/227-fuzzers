; ModuleID = '../../third_party/blink/renderer/core/inspector/thread_debugger.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/thread_debugger.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.66" }
%"struct.std::__1::atomic.66" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__atomic_base.68" }
%"struct.std::__1::__atomic_base.68" = type { %"struct.std::__1::__cxx_atomic_impl.69" }
%"struct.std::__1::__cxx_atomic_impl.69" = type { %"struct.std::__1::__cxx_atomic_base_impl.70" }
%"struct.std::__1::__cxx_atomic_base_impl.70" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.902 }
%class.scoped_refptr.902 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.903", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.903" = type { %"class.base::RefCounted.904" }
%"class.base::RefCounted.904" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.65 }
%class.scoped_refptr.65 = type { %"class.WTF::StringImpl"* }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent.295" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.295" = type { %"class.blink::PersistentBase.296" }
%"class.blink::PersistentBase.296" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.301" }
%"class.WTF::HashMap.301" = type { %"class.WTF::HashTable.302" }
%"class.WTF::HashTable.302" = type <{ %"struct.WTF::KeyValuePair.304"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.304" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.80", i32, [4 x i8], %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.216", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.232", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.250", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.257", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.196", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__cxx_atomic_impl.119" }
%"struct.std::__1::__cxx_atomic_impl.119" = type { %"struct.std::__1::__cxx_atomic_base_impl.120" }
%"struct.std::__1::__cxx_atomic_base_impl.120" = type { i64 }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::Worklist.155"* }
%"class.blink::Worklist.155" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::Worklist.162"* }
%"class.blink::Worklist.162" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::Worklist.169"* }
%"class.blink::Worklist.169" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.176", %"class.std::__1::__compressed_pair.183", %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.190", [4 x i8] }>
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { i64 }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { float }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.199", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.208" }
%"class.WTF::Vector.208" = type { %"class.WTF::VectorBuffer.209" }
%"class.WTF::VectorBuffer.209" = type { %"class.WTF::VectorBufferBase.210" }
%"class.WTF::VectorBufferBase.210" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.224" }
%"class.WTF::VectorBuffer.224" = type { %"class.WTF::VectorBufferBase.225" }
%"class.WTF::VectorBufferBase.225" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.238" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.141"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.148"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.155"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.287" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.256 }
%class.scoped_refptr.256 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.257" = type { %"struct.std::__1::__atomic_base.258" }
%"struct.std::__1::__atomic_base.258" = type { %"struct.std::__1::__cxx_atomic_impl.259" }
%"struct.std::__1::__cxx_atomic_impl.259" = type { %"struct.std::__1::__cxx_atomic_base_impl.260" }
%"struct.std::__1::__cxx_atomic_base_impl.260" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ThreadDebugger" = type { %"class.v8_inspector::V8InspectorClient", %"class.blink::V8PerIsolateData::Data", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr", %"class.WTF::Vector", %"class.WTF::Vector.15", %"class.WTF::Vector.20" }
%"class.v8_inspector::V8InspectorClient" = type { i32 (...)** }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8_inspector::V8Inspector"* }
%"class.v8_inspector::V8Inspector" = type { i32 (...)** }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr.1"*, i32, i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::TaskRunnerTimer"* }
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::ThreadDebugger"*, { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.6", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.6" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%"class.WTF::Vector.15" = type { %"class.WTF::VectorBuffer.16" }
%"class.WTF::VectorBuffer.16" = type { %"class.WTF::VectorBufferBase.17" }
%"class.WTF::VectorBufferBase.17" = type { void (i8*)**, i32, i32 }
%"class.WTF::Vector.20" = type { %"class.WTF::VectorBuffer.21" }
%"class.WTF::VectorBuffer.21" = type { %"class.WTF::VectorBufferBase.22" }
%"class.WTF::VectorBufferBase.22" = type { i8**, i32, i32 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.45", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.74", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.261", %"class.std::__1::unique_ptr.268", %"class.blink::Persistent.274", %"class.blink::Persistent.276", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.25", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", i32, i32 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.45" = type { %"class.WTF::HashTable.46" }
%"class.WTF::HashTable.46" = type <{ %"struct.WTF::KeyValuePair.49"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.49" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.58", %class.scoped_refptr.65 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.53", i8* }
%"class.WTF::HashMap.53" = type { %"class.WTF::HashTable.54" }
%"class.WTF::HashTable.54" = type <{ %"struct.WTF::KeyValuePair.57"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.57" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.58" = type { %"class.v8::PersistentValueMapBase.59" }
%"class.v8::PersistentValueMapBase.59" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.60", i8* }
%"class.WTF::HashMap.60" = type { %"class.WTF::HashTable.61" }
%"class.WTF::HashTable.61" = type <{ %"struct.WTF::KeyValuePair.64"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.64" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.2122", %"class.WTF::String", %"class.std::__1::unique_ptr.2124" }
%"class.WTF::RefCounted.2122" = type { %"class.base::RefCounted.2123" }
%"class.base::RefCounted.2123" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2124" = type { %"class.std::__1::__compressed_pair.2125" }
%"class.std::__1::__compressed_pair.2125" = type { %"struct.std::__1::__compressed_pair_elem.2126" }
%"struct.std::__1::__compressed_pair_elem.2126" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2127", %"class.std::__1::unique_ptr.2133", %"class.WTF::Vector.2139", i8, i32 }
%"class.std::__1::unique_ptr.2127" = type { %"class.std::__1::__compressed_pair.2128" }
%"class.std::__1::__compressed_pair.2128" = type { %"struct.std::__1::__compressed_pair_elem.2129" }
%"struct.std::__1::__compressed_pair_elem.2129" = type { %"class.WTF::Vector.1446"* }
%"class.WTF::Vector.1446" = type { %"class.WTF::VectorBuffer.1447" }
%"class.WTF::VectorBuffer.1447" = type { %"class.WTF::VectorBufferBase.1448" }
%"class.WTF::VectorBufferBase.1448" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.2133" = type { %"class.std::__1::__compressed_pair.2134" }
%"class.std::__1::__compressed_pair.2134" = type { %"struct.std::__1::__compressed_pair_elem.2135" }
%"struct.std::__1::__compressed_pair_elem.2135" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.2139" = type { %"class.WTF::VectorBuffer.2140" }
%"class.WTF::VectorBuffer.2140" = type { %"class.WTF::VectorBufferBase.1448", [32 x i8] }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.294, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.294 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.307" }
%"class.blink::MemberBase.307" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector.261" = type { %"class.WTF::VectorBuffer.262" }
%"class.WTF::VectorBuffer.262" = type { %"class.WTF::VectorBufferBase.263" }
%"class.WTF::VectorBufferBase.263" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.264 }
%class.scoped_refptr.264 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.265", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.265" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::Persistent.274" = type { %"class.blink::PersistentBase.275" }
%"class.blink::PersistentBase.275" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.276" = type { %"class.blink::PersistentBase.277" }
%"class.blink::PersistentBase.277" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.282" }
%"class.WTF::Vector.282" = type { %"class.WTF::VectorBuffer.283" }
%"class.WTF::VectorBuffer.283" = type { %"class.WTF::VectorBufferBase.284" }
%"class.WTF::VectorBufferBase.284" = type { %"struct.std::__1::pair.285"*, i32, i32 }
%"struct.std::__1::pair.285" = type { %"class.blink::UntracedMember", %"class.blink::Member.2184" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.2183" }
%"class.blink::MemberBase.2183" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.2184" = type { %"class.blink::MemberBase.2185" }
%"class.blink::MemberBase.2185" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8_inspector::StringView" = type { i8, i64, %union.anon }
%union.anon = type { i8* }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.308", i8, [7 x i8] }>
%"struct.std::__1::pair.308" = type { i64, i64 }
%"class.v8::Value" = type { i8 }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.313", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.322", %"class.WTF::String" }
%"class.WTF::StringAppend.322" = type { %"class.WTF::String", i8* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.390", i32, i8, [3 x i8], %"class.blink::HeapVector.392", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.400", %"class.blink::Member.402", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.411", %"class.blink::Member.539", %"class.blink::Member.541", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.323" }
%"class.blink::HeapHashMap.323" = type { %"class.WTF::HashMap.326" }
%"class.WTF::HashMap.326" = type { %"class.WTF::HashTable.327" }
%"class.WTF::HashTable.327" = type <{ %"struct.WTF::KeyValuePair.329"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.329" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.335" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.332" }
%"class.WTF::HashTable.332" = type <{ %"class.blink::WeakMember.334"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.334" = type opaque
%"class.blink::Supplementable.335" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.336" }
%"class.blink::HeapHashMap.336" = type { %"class.WTF::HashMap.339" }
%"class.WTF::HashMap.339" = type { %"class.WTF::HashTable.340" }
%"class.WTF::HashTable.340" = type <{ %"struct.WTF::KeyValuePair.342"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.342" = type { i8*, %"class.blink::Member.2186" }
%"class.blink::Member.2186" = type { %"class.blink::MemberBase.2187" }
%"class.blink::MemberBase.2187" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2188" }
%"class.blink::Member.2188" = type { %"class.blink::MemberBase.2189" }
%"class.blink::MemberBase.2189" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.343, %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378", %"class.blink::Member.384", i32, [4 x i8], %"class.WTF::HashSet.386", i32, i32 }
%class.scoped_refptr.343 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.344", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.347 }
%"class.WTF::RefCounted.344" = type { %"class.base::RefCounted.345" }
%"class.base::RefCounted.345" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.346 }
%union.anon.346 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.347 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.365", %"class.std::__1::map.374"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.353 }
%union.anon.353 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.357", %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.std::__1::map.365" = type { %"class.std::__1::__tree.366" }
%"class.std::__1::__tree.366" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.std::__1::map.374" = type opaque
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.386" = type { %"class.WTF::HashTable.387" }
%"class.WTF::HashTable.387" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.392" = type { %"class.WTF::Vector.395" }
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.WTF::VectorBufferBase.397" = type { %"class.blink::Member.398"*, i32, i32 }
%"class.blink::Member.398" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.404", i32, i32 }
%"class.blink::HeapHashMap.404" = type { %"class.WTF::HashMap.407" }
%"class.WTF::HashMap.407" = type { %"class.WTF::HashTable.408" }
%"class.WTF::HashTable.408" = type <{ %"struct.WTF::KeyValuePair.410"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.410" = type opaque
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.414" }
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.417" }
%"class.WTF::Vector.417" = type { %"class.WTF::VectorBuffer.418" }
%"class.WTF::VectorBuffer.418" = type { %"class.WTF::VectorBufferBase.419" }
%"class.WTF::VectorBufferBase.419" = type { %"class.mojo::StructPtr.420"*, i32, i32 }
%"class.mojo::StructPtr.420" = type { %"class.std::__1::unique_ptr.421" }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.424", %"class.WTF::HashMap.431", %"class.WTF::HashMap.436", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.441", i32, %"class.mojo::StructPtr.446", %"class.WTF::Vector.441" }
%"class.mojo::StructPtr.424" = type { %"class.std::__1::unique_ptr.425" }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.431" = type { %"class.WTF::HashTable.432" }
%"class.WTF::HashTable.432" = type <{ %"struct.WTF::KeyValuePair.435"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.435" = type opaque
%"class.WTF::HashMap.436" = type { %"class.WTF::HashTable.437" }
%"class.WTF::HashTable.437" = type <{ %"struct.WTF::KeyValuePair.440"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.440" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.446" = type { %"class.std::__1::unique_ptr.447" }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.441", i8, i8, [6 x i8] }>
%"class.WTF::Vector.441" = type { %"class.WTF::VectorBuffer.442" }
%"class.WTF::VectorBuffer.442" = type { %"class.WTF::VectorBufferBase.443" }
%"class.WTF::VectorBufferBase.443" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.530" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.461", i32 }>
%"class.std::__1::unique_ptr.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.464", %"class.absl::optional.465", %"class.absl::optional.470", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.483", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.505", %"class.std::__1::map.516", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.525", i8, %class.scoped_refptr.475, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.526" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.464" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.465" = type { %"class.absl::optional_internal::optional_data.466" }
%"class.absl::optional_internal::optional_data.466" = type { %"class.absl::optional_internal::optional_data_base.467" }
%"class.absl::optional_internal::optional_data_base.467" = type { %"class.absl::optional_internal::optional_data_dtor_base.468" }
%"class.absl::optional_internal::optional_data_dtor_base.468" = type { i8, %union.anon.469 }
%union.anon.469 = type { %"class.base::TimeDelta" }
%"class.absl::optional.470" = type { %"class.absl::optional_internal::optional_data.471" }
%"class.absl::optional_internal::optional_data.471" = type { %"class.absl::optional_internal::optional_data_base.472" }
%"class.absl::optional_internal::optional_data_base.472" = type { %"class.absl::optional_internal::optional_data_dtor_base.473" }
%"class.absl::optional_internal::optional_data_dtor_base.473" = type { i8, %union.anon.474 }
%union.anon.474 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.475, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.476" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::WeakPtrFactory.476" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.481 }
%class.scoped_refptr.481 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.553", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.475, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.66", [4 x i8] }>
%"class.base::RefCountedThreadSafe.553" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.482 }
%class.scoped_refptr.482 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.486", %class.scoped_refptr.487 }
%"class.base::RepeatingCallback.486" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.487 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.488", [4 x i8] }>
%"class.base::RefCountedThreadSafe.488" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.492", %"class.std::__1::unique_ptr.498", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.504" }
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.504" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.505" = type { %"class.std::__1::__tree.506" }
%"class.std::__1::__tree.506" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.507", %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.std::__1::map.516" = type { %"class.std::__1::__tree.517" }
%"class.std::__1::__tree.517" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.518", %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.base::OnceCallback.525" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.475 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.526" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.402", i8, [7 x i8], %"class.WTF::Vector.417", %"class.blink::HeapVector.545", i8, [7 x i8], %"class.WTF::HashSet.386", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.545" = type { %"class.WTF::Vector.548" }
%"class.WTF::Vector.548" = type { %"class.WTF::VectorBuffer.549" }
%"class.WTF::VectorBuffer.549" = type { %"class.WTF::VectorBufferBase.550" }
%"class.WTF::VectorBufferBase.550" = type { %"class.blink::Member.551"*, i32, i32 }
%"class.blink::Member.551" = type opaque
%"class.WTF::StringTypeAdapter.2311" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.688", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.696", %"class.blink::Member.698", %"class.blink::Member.700", i8, %"class.blink::Member.702", %"class.blink::Member.704", %"class.blink::Member.706", %"class.blink::Member.706", %"class.blink::Member.706", %"class.blink::Member.706", %"class.blink::Member.706", %"class.blink::Member.706", %"class.blink::Member.708", %"class.blink::Member.710", %"class.blink::Member.712", %"class.blink::Member.714", %"class.blink::Member.716", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.441", %"class.blink::Member.718", %class.scoped_refptr.720, %"class.blink::HeapHashSet.782", %"class.blink::Member.789", %"class.blink::HeapHashMap.802", %"class.std::__1::unique_ptr.809", %"class.blink::Member.821", %"class.blink::Member.850", %"class.blink::Member.860", %"class.blink::Member.866", %"class.WTF::Vector.869", %"class.util::TokenType.586", %"class.WTF::HashSet.874", %"class.WTF::Deque.878" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.575", %"class.blink::Member.577", %"class.blink::Member.579", %"class.blink::Member.581", i8, %"class.WTF::Vector.583" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.568" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.556" }
%"class.blink::HeapVector.556" = type { %"class.WTF::Vector.559" }
%"class.WTF::Vector.559" = type { %"class.WTF::VectorBuffer.560" }
%"class.WTF::VectorBuffer.560" = type { %"class.WTF::VectorBufferBase.561", [32 x i8] }
%"class.WTF::VectorBufferBase.561" = type { %"struct.std::__1::pair.562"*, i32, i32 }
%"struct.std::__1::pair.562" = type { %"class.WTF::AtomicString", %"class.blink::Member.563" }
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::HeapVector.565"* }
%"class.blink::HeapVector.565" = type opaque
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.WTF::Vector.571"* }
%"class.WTF::Vector.571" = type opaque
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.984", %"class.blink::Member.986", %"class.blink::Member.988", i8, i32, i8, i32, %"class.blink::Member.990", %"class.blink::Member.577", %"class.blink::FrameLifecycle", %"class.blink::Member.575", %"class.blink::Member.575", %"class.blink::Member.575", %"class.blink::Member.575", %"class.blink::Member.575", %"class.blink::Member.575", %"class.blink::Member.827", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1000", i8, %"class.base::UnguessableToken", %"class.absl::optional.1002", %"class.absl::optional.1007", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.575", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.984" = type { %"class.blink::MemberBase.985" }
%"class.blink::MemberBase.985" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.986" = type { %"class.blink::MemberBase.987" }
%"class.blink::MemberBase.987" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.988" = type { %"class.blink::MemberBase.989" }
%"class.blink::MemberBase.989" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.827" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1020", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1028", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1036", %"class.blink::FrameLoader", %"class.blink::Member.1063", %"class.blink::Member.900", %"class.blink::Member.1065", %"class.blink::Member.1067", %"class.blink::Member.1069", %"class.blink::Member.1071", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1073", %class.scoped_refptr.1293, %"class.blink::Member.1294", %"class.blink::Member.1296", %"class.blink::Member.1307", %"class.blink::Member.1309", %"class.blink::Member.1311", %"class.blink::Member.1315", %"class.blink::Member.1317", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1319", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1322", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1328", %"class.std::__1::unique_ptr.1329", %"class.absl::optional.1007", i32, [4 x i8], %"class.std::__1::unique_ptr.1335", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1343", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1348", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1353", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1356", %"class.blink::Member.1358", %"class.blink::Member.1360", %"class.blink::Member.1362", %"class.mojo::StructPtr.1365", %"class.blink::Member.1374", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1376", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1020" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1021" }
%"class.blink::HeapHashMap.1021" = type { %"class.WTF::HashMap.1024" }
%"class.WTF::HashMap.1024" = type { %"class.WTF::HashTable.1025" }
%"class.WTF::HashTable.1025" = type <{ %"struct.WTF::KeyValuePair.1027"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1027" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1028" = type { %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.812", %"class.base::WeakPtrFactory.817" }
%"class.WTF::HashMap.812" = type { %"class.WTF::HashTable.813" }
%"class.WTF::HashTable.813" = type <{ %"struct.WTF::KeyValuePair.816"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.816" = type opaque
%"class.base::WeakPtrFactory.817" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1034" }
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.825" }
%"class.blink::WeakMember.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2198", i64, %"class.std::__1::map.2199", i8*, i64, %"class.base::WeakPtrFactory.2208" }
%"class.base::RepeatingCallback.2198" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2199" = type { %"class.std::__1::__tree.2200" }
%"class.std::__1::__tree.2200" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2201", %"class.std::__1::__compressed_pair.2205" }
%"class.std::__1::__compressed_pair.2201" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"class.std::__1::__compressed_pair.2205" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.base::WeakPtrFactory.2208" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1036" = type { %"class.WTF::HashSet.1039" }
%"class.WTF::HashSet.1039" = type { %"class.WTF::HashTable.1040" }
%"class.WTF::HashTable.1040" = type <{ %"class.blink::WeakMember.1042"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1042" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.827", %"class.blink::Member.1043", %"class.blink::Member.1045", %"class.std::__1::unique_ptr.1047", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1059" }
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1050" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.65 }
%"class.WTF::HashSet.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1063" = type { %"class.blink::MemberBase.1064" }
%"class.blink::MemberBase.1064" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1571", %"class.blink::Member.827", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.1577", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1582", %"class.blink::Member.1584", %"class.blink::Member.1584", %"class.std::__1::unique_ptr.1587", i32, [4 x i8], %"class.WTF::HashSet.1590", %"class.blink::Member.1597", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1599", %"class.blink::HeapHashSet.1606", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1614", i8, %"class.blink::Member.1620", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1632", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1646", i8, %"class.std::__1::unique_ptr.1652", %"class.std::__1::unique_ptr.1769", %"class.WTF::Vector.1775", i32, %class.scoped_refptr.1780, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1781", %"class.blink::Member.1783", %"class.blink::Member.1785", %"class.blink::HeapHashSet.1787", %"class.blink::HeapHashSet.1794", %"class.std::__1::unique_ptr.1801", %"class.std::__1::unique_ptr.1808", %"class.WTF::Vector.261" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1571" = type { %"class.WTF::HashTable.1572" }
%"class.WTF::HashTable.1572" = type <{ %class.scoped_refptr.1575*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1575 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1576", { i64, i64 } }
%"class.blink::WeakMember.1576" = type { %"class.blink::MemberBase.1064" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1577" = type { %"class.absl::optional_internal::optional_data.1578" }
%"class.absl::optional_internal::optional_data.1578" = type { %"class.absl::optional_internal::optional_data_base.1579" }
%"class.absl::optional_internal::optional_data_base.1579" = type { %"class.absl::optional_internal::optional_data_dtor_base.1580" }
%"class.absl::optional_internal::optional_data_dtor_base.1580" = type { i8, %union.anon.1581 }
%union.anon.1581 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1582" = type { %"class.blink::MemberBase.1583" }
%"class.blink::MemberBase.1583" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1584" = type { %"class.blink::MemberBase.1585" }
%"class.blink::MemberBase.1585" = type { %"class.blink::HeapHashSet.1586"* }
%"class.blink::HeapHashSet.1586" = type opaque
%"class.std::__1::unique_ptr.1587" = type { %"class.std::__1::__compressed_pair.1588" }
%"class.std::__1::__compressed_pair.1588" = type { %"struct.std::__1::__compressed_pair_elem.1589" }
%"struct.std::__1::__compressed_pair_elem.1589" = type { %"class.WTF::HashSet.1590"* }
%"class.WTF::HashSet.1590" = type { %"class.WTF::HashTable.1591" }
%"class.WTF::HashTable.1591" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1597" = type { %"class.blink::MemberBase.1598" }
%"class.blink::MemberBase.1598" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1599" = type { %"class.WTF::HashSet.1602" }
%"class.WTF::HashSet.1602" = type { %"class.WTF::HashTable.1603" }
%"class.WTF::HashTable.1603" = type <{ %"class.blink::Member.1605"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1605" = type opaque
%"class.blink::HeapHashSet.1606" = type { %"class.WTF::HashSet.1609" }
%"class.WTF::HashSet.1609" = type { %"class.WTF::HashTable.1610" }
%"class.WTF::HashTable.1610" = type <{ %"class.blink::Member.1612"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1842", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1853", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.900" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1842" = type { %"class.blink::MemberBase.1843" }
%"class.blink::MemberBase.1843" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1844", %"class.blink::Member.1845", %"class.blink::Member.1847", %"class.blink::Member.1849", %"class.blink::Member.1851", %"class.WTF::Vector.261", i16, %class.scoped_refptr }
%"class.blink::ThreadState::PrefinalizerRegistration.1844" = type { i8 }
%"class.blink::Member.1845" = type { %"class.blink::MemberBase.1846" }
%"class.blink::MemberBase.1846" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1847" = type { %"class.blink::MemberBase.1848" }
%"class.blink::MemberBase.1848" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1849" = type { %"class.blink::MemberBase.1850" }
%"class.blink::MemberBase.1850" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1851" = type { %"class.blink::MemberBase.1852" }
%"class.blink::MemberBase.1852" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1853" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1854", { i64, i64 } }
%"class.blink::WeakMember.1854" = type { %"class.blink::MemberBase.1613" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1614" = type { %"class.std::__1::__compressed_pair.1615" }
%"class.std::__1::__compressed_pair.1615" = type { %"struct.std::__1::__compressed_pair_elem.1616" }
%"struct.std::__1::__compressed_pair_elem.1616" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1624", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1624" = type { %"class.WTF::HashTable.1625" }
%"class.WTF::HashTable.1625" = type <{ %"struct.WTF::KeyValuePair.1627"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1627" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1628", i32, i32 }
%"class.WTF::Vector.1628" = type { %"class.WTF::VectorBuffer.1629" }
%"class.WTF::VectorBuffer.1629" = type { %"class.WTF::VectorBufferBase.1630" }
%"class.WTF::VectorBufferBase.1630" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1632" = type { %"class.WTF::LinkedHashSet.1635" }
%"class.WTF::LinkedHashSet.1635" = type { %"class.WTF::HashMap.1636", %"class.WTF::VectorBackedLinkedList.1640" }
%"class.WTF::HashMap.1636" = type { %"class.WTF::HashTable.1637" }
%"class.WTF::HashTable.1637" = type <{ %"struct.WTF::KeyValuePair.1639"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1639" = type opaque
%"class.WTF::VectorBackedLinkedList.1640" = type { %"class.WTF::Vector.1641", i32, i32 }
%"class.WTF::Vector.1641" = type { %"class.WTF::VectorBuffer.1642" }
%"class.WTF::VectorBuffer.1642" = type { %"class.WTF::VectorBufferBase.1643" }
%"class.WTF::VectorBufferBase.1643" = type { %"class.WTF::VectorBackedLinkedListNode.1644"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1644" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1646" = type { %"class.std::__1::__compressed_pair.1647" }
%"class.std::__1::__compressed_pair.1647" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"struct.std::__1::__compressed_pair_elem.1648" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1652" = type { %"class.std::__1::__compressed_pair.1653" }
%"class.std::__1::__compressed_pair.1653" = type { %"struct.std::__1::__compressed_pair_elem.1654" }
%"struct.std::__1::__compressed_pair_elem.1654" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1655, %class.scoped_refptr.1655, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1746", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1751", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1655 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1656", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1663" }
%"class.WTF::RefCounted.1656" = type { %"class.base::RefCounted.1657" }
%"class.base::RefCounted.1657" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1658", i32, [4 x i8] }>
%"class.WTF::Vector.1658" = type { %"class.WTF::VectorBuffer.1659" }
%"class.WTF::VectorBuffer.1659" = type { %"class.WTF::VectorBufferBase.1660" }
%"class.WTF::VectorBufferBase.1660" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1663" = type { %"class.WTF::VectorBuffer.1664" }
%"class.WTF::VectorBuffer.1664" = type { %"class.WTF::VectorBufferBase.1665" }
%"class.WTF::VectorBufferBase.1665" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1669", %"class.std::__1::unique_ptr.1718", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1666, %class.scoped_refptr.1667, %class.scoped_refptr.1668 }
%class.scoped_refptr.1666 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1682", i8, i8, %class.scoped_refptr.1666, i32, i32 }
%"class.WTF::RefCounted.1682" = type { %"class.base::RefCounted.1683" }
%"class.base::RefCounted.1683" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1667 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1837" }
%"class.blink::PaintPropertyNode.1837" = type { %"class.WTF::RefCounted.1838", i8, i8, %class.scoped_refptr.1667, i32, i32 }
%"class.WTF::RefCounted.1838" = type { %"class.base::RefCounted.1839" }
%"class.base::RefCounted.1839" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1668 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1834" }
%"class.blink::PaintPropertyNode.1834" = type { %"class.WTF::RefCounted.1835", i8, i8, %class.scoped_refptr.1668, i32, i32 }
%"class.WTF::RefCounted.1835" = type { %"class.base::RefCounted.1836" }
%"class.base::RefCounted.1836" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1669" = type { %"class.std::__1::__compressed_pair.1670" }
%"class.std::__1::__compressed_pair.1670" = type { %"struct.std::__1::__compressed_pair_elem.1671" }
%"struct.std::__1::__compressed_pair_elem.1671" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1672", %"class.WTF::Vector.1677", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1672" = type { %"class.WTF::VectorBuffer.1673" }
%"class.WTF::VectorBuffer.1673" = type { %"class.WTF::VectorBufferBase.1674" }
%"class.WTF::VectorBufferBase.1674" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1677" = type { %"class.WTF::VectorBuffer.1678" }
%"class.WTF::VectorBuffer.1678" = type { %"class.WTF::VectorBufferBase.1679" }
%"class.WTF::VectorBufferBase.1679" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1697" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1690, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1691", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1684" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1684" = type { %"class.std::__1::__compressed_pair.1685" }
%"class.std::__1::__compressed_pair.1685" = type { %"struct.std::__1::__compressed_pair_elem.1686" }
%"struct.std::__1::__compressed_pair_elem.1686" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1690 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1819", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1819" = type { %"class.WTF::RefCounted.1820", i8, i8, %class.scoped_refptr.1690, i32, i32 }
%"class.WTF::RefCounted.1820" = type { %"class.base::RefCounted.1821" }
%"class.base::RefCounted.1821" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1822" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1822" = type { %"class.absl::optional_internal::optional_data.1823" }
%"class.absl::optional_internal::optional_data.1823" = type { %"class.absl::optional_internal::optional_data_base.1824" }
%"class.absl::optional_internal::optional_data_base.1824" = type { %"class.absl::optional_internal::optional_data_dtor_base.1825" }
%"class.absl::optional_internal::optional_data_dtor_base.1825" = type { i8, %union.anon.1826 }
%union.anon.1826 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1827", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1827" = type { %"class.std::__1::__vector_base.1828" }
%"class.std::__1::__vector_base.1828" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1829" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1829" = type { %"struct.std::__1::__compressed_pair_elem.1830" }
%"struct.std::__1::__compressed_pair_elem.1830" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1691" = type { %"class.std::__1::__compressed_pair.1692" }
%"class.std::__1::__compressed_pair.1692" = type { %"struct.std::__1::__compressed_pair_elem.1693" }
%"struct.std::__1::__compressed_pair_elem.1693" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1700", %"class.std::__1::unique_ptr.1706", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1700" = type { %"class.std::__1::__compressed_pair.1701" }
%"class.std::__1::__compressed_pair.1701" = type { %"struct.std::__1::__compressed_pair_elem.1702" }
%"struct.std::__1::__compressed_pair_elem.1702" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1706" = type { %"class.std::__1::__compressed_pair.1707" }
%"class.std::__1::__compressed_pair.1707" = type { %"struct.std::__1::__compressed_pair_elem.1708" }
%"struct.std::__1::__compressed_pair_elem.1708" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1718" = type { %"class.std::__1::__compressed_pair.1719" }
%"class.std::__1::__compressed_pair.1719" = type { %"struct.std::__1::__compressed_pair_elem.1720" }
%"struct.std::__1::__compressed_pair_elem.1720" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1721", %"class.absl::optional.1721" }
%"class.absl::optional.1721" = type { %"class.absl::optional_internal::optional_data.1722" }
%"class.absl::optional_internal::optional_data.1722" = type { %"class.absl::optional_internal::optional_data_base.1723" }
%"class.absl::optional_internal::optional_data_base.1723" = type { %"class.absl::optional_internal::optional_data_dtor_base.1724" }
%"class.absl::optional_internal::optional_data_dtor_base.1724" = type { i8, [3 x i8], %union.anon.1725 }
%union.anon.1725 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1663"*, %"class.absl::optional.1731", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1731" = type { %"class.absl::optional_internal::optional_data.1732" }
%"class.absl::optional_internal::optional_data.1732" = type { %"class.absl::optional_internal::optional_data_base.1733" }
%"class.absl::optional_internal::optional_data_base.1733" = type { %"class.absl::optional_internal::optional_data_dtor_base.1734" }
%"class.absl::optional_internal::optional_data_dtor_base.1734" = type { i8, %union.anon.1735 }
%union.anon.1735 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1736", %"class.WTF::Vector.1741" }
%"class.WTF::Vector.1736" = type { %"class.WTF::VectorBuffer.1737" }
%"class.WTF::VectorBuffer.1737" = type { %"class.WTF::VectorBufferBase.1738", [128 x i8] }
%"class.WTF::VectorBufferBase.1738" = type { i32*, i32, i32 }
%"class.WTF::Vector.1741" = type { %"class.WTF::VectorBuffer.1742" }
%"class.WTF::VectorBuffer.1742" = type { %"class.WTF::VectorBufferBase.1743", [128 x i8] }
%"class.WTF::VectorBufferBase.1743" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1746" = type { %"class.WTF::VectorBuffer.1747" }
%"class.WTF::VectorBuffer.1747" = type { %"class.WTF::VectorBufferBase.1748" }
%"class.WTF::VectorBufferBase.1748" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1751" = type { %"class.WTF::HashTable.1752" }
%"class.WTF::HashTable.1752" = type <{ %"struct.WTF::KeyValuePair.1755"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1755" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1756", %"class.WTF::Vector.1761" }
%"class.WTF::HashMap.1756" = type { %"class.WTF::HashTable.1757" }
%"class.WTF::HashTable.1757" = type <{ %"struct.WTF::KeyValuePair.1760"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1760" = type opaque
%"class.WTF::Vector.1761" = type { %"class.WTF::VectorBuffer.1762" }
%"class.WTF::VectorBuffer.1762" = type { %"class.WTF::VectorBufferBase.1763" }
%"class.WTF::VectorBufferBase.1763" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1769" = type { %"class.std::__1::__compressed_pair.1770" }
%"class.std::__1::__compressed_pair.1770" = type { %"struct.std::__1::__compressed_pair_elem.1771" }
%"struct.std::__1::__compressed_pair_elem.1771" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1775" = type { %"class.WTF::VectorBuffer.1776" }
%"class.WTF::VectorBuffer.1776" = type { %"class.WTF::VectorBufferBase.1777" }
%"class.WTF::VectorBufferBase.1777" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1780 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1781" = type { %"class.blink::MemberBase.1782" }
%"class.blink::MemberBase.1782" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1783" = type { %"class.blink::MemberBase.1784" }
%"class.blink::MemberBase.1784" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1785" = type { %"class.blink::MemberBase.1786" }
%"class.blink::MemberBase.1786" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1787" = type { %"class.WTF::HashSet.1790" }
%"class.WTF::HashSet.1790" = type { %"class.WTF::HashTable.1791" }
%"class.WTF::HashTable.1791" = type <{ %"class.blink::WeakMember.1793"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1793" = type opaque
%"class.blink::HeapHashSet.1794" = type { %"class.WTF::HashSet.1797" }
%"class.WTF::HashSet.1797" = type { %"class.WTF::HashTable.1798" }
%"class.WTF::HashTable.1798" = type <{ %"class.blink::WeakMember.1800"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1800" = type opaque
%"class.std::__1::unique_ptr.1801" = type { %"class.std::__1::__compressed_pair.1802" }
%"class.std::__1::__compressed_pair.1802" = type { %"struct.std::__1::__compressed_pair_elem.1803" }
%"struct.std::__1::__compressed_pair_elem.1803" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1804" }
%"class.base::time_internal::TimeBase.1804" = type { i64 }
%"class.std::__1::unique_ptr.1808" = type { %"class.std::__1::__compressed_pair.1809" }
%"class.std::__1::__compressed_pair.1809" = type { %"struct.std::__1::__compressed_pair_elem.1810" }
%"struct.std::__1::__compressed_pair_elem.1810" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1811", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1811" = type { %"class.absl::optional_internal::optional_data.1812" }
%"class.absl::optional_internal::optional_data.1812" = type { %"class.absl::optional_internal::optional_data_base.1813" }
%"class.absl::optional_internal::optional_data_base.1813" = type { %"class.absl::optional_internal::optional_data_dtor_base.1814" }
%"class.absl::optional_internal::optional_data_dtor_base.1814" = type { i8, %union.anon.1815 }
%union.anon.1815 = type { %"class.base::Time" }
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.905" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.831", %"class.blink::Member.831" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.831", %"class.blink::Member.833", %"class.blink::Member.831", %"class.blink::Member.831", %"class.blink::Member.835" }
%"class.blink::Member.833" = type { %"class.blink::MemberBase.834" }
%"class.blink::MemberBase.834" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.883", %"class.blink::Member.698", %"class.blink::Member.833", %"class.blink::Member.885", %"class.blink::Member.885", %"class.blink::Member.928", %"class.blink::Member.930", %"class.blink::Member.932", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.937", %"class.blink::HeapVector.939" }
%"class.blink::Member.883" = type { %"class.blink::MemberBase.884" }
%"class.blink::MemberBase.884" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.885" = type { %"class.blink::MemberBase.886" }
%"class.blink::MemberBase.886" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.889" }
%"class.blink::HeapHashMap.889" = type { %"class.WTF::HashMap.892" }
%"class.WTF::HashMap.892" = type { %"class.WTF::HashTable.893" }
%"class.WTF::HashTable.893" = type <{ %"struct.WTF::KeyValuePair.895"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.895" = type { %"class.WTF::AtomicString", %"class.blink::Member.896" }
%"class.blink::Member.896" = type { %"class.blink::MemberBase.897" }
%"class.blink::MemberBase.897" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.900", i32, %"class.blink::HeapVector.921" }
%"class.blink::HeapVector.921" = type { %"class.WTF::Vector.924" }
%"class.WTF::Vector.924" = type { %"class.WTF::VectorBuffer.925" }
%"class.WTF::VectorBuffer.925" = type { %"class.WTF::VectorBufferBase.926" }
%"class.WTF::VectorBufferBase.926" = type { %"class.blink::Member.900"*, i32, i32 }
%"class.blink::Member.928" = type { %"class.blink::MemberBase.929" }
%"class.blink::MemberBase.929" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.932" = type { %"class.blink::MemberBase.933" }
%"class.blink::MemberBase.933" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.934" }
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::HeapHashMap.936"* }
%"class.blink::HeapHashMap.936" = type opaque
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.939" = type { %"class.WTF::Vector.942" }
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"class.blink::Member.945"*, i32, i32 }
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.947", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.949, %"class.WTF::Vector.950", %"class.WTF::Vector.950", %"class.blink::Member.831", %"class.blink::Member.955", %"class.blink::HeapHashSet.959", %"class.blink::Member.698", %"class.WTF::HashSet.966", %"class.WTF::TextPosition", %"class.blink::Member.970", %"class.blink::HeapVector.972", %"class.blink::Member.979" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.949 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.950" = type { %"class.WTF::VectorBuffer.951" }
%"class.WTF::VectorBuffer.951" = type { %"class.WTF::VectorBufferBase.952" }
%"class.WTF::VectorBufferBase.952" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.957" }
%"class.blink::Member.957" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.959" = type { %"class.WTF::HashSet.962" }
%"class.WTF::HashSet.962" = type { %"class.WTF::HashTable.963" }
%"class.WTF::HashTable.963" = type <{ %"class.blink::WeakMember.965"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.965" = type { %"class.blink::MemberBase.834" }
%"class.WTF::HashSet.966" = type { %"class.WTF::HashTable.967" }
%"class.WTF::HashTable.967" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.970" = type { %"class.blink::MemberBase.971" }
%"class.blink::MemberBase.971" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.972" = type { %"class.WTF::Vector.975" }
%"class.WTF::Vector.975" = type { %"class.WTF::VectorBuffer.976" }
%"class.WTF::VectorBuffer.976" = type { %"class.WTF::VectorBufferBase.977" }
%"class.WTF::VectorBufferBase.977" = type { %"class.blink::Member.955"*, i32, i32 }
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.905" = type { %"class.blink::MemberBase.906" }
%"class.blink::MemberBase.906" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.909", %"class.blink::Member.911", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.909" = type { %"class.WTF::SingleThreadedBitField.910" }
%"class.WTF::SingleThreadedBitField.910" = type { i32 }
%"class.blink::Member.911" = type { %"class.blink::MemberBase.912" }
%"class.blink::MemberBase.912" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.913 }
%class.scoped_refptr.913 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.914", %"class.WTF::AtomicString", %"class.WTF::Vector.916" }
%"class.WTF::RefCounted.914" = type { %"class.base::RefCounted.915" }
%"class.base::RefCounted.915" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.916" = type { %"class.WTF::VectorBuffer.917" }
%"class.WTF::VectorBuffer.917" = type { %"class.WTF::VectorBufferBase.918", [32 x i8] }
%"class.WTF::VectorBufferBase.918" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1084", %"class.blink::HeapListHashSet.1095", %"class.blink::HeapListHashSet.1106", %"class.blink::HeapListHashSet.1117", %"class.blink::HeapListHashSet.1128", %"class.blink::HeapListHashSet.1139", %"class.blink::HeapListHashSet.1150", %"class.blink::HeapListHashSet.1161", %"class.blink::HeapListHashSet.1172", %"class.blink::HeapListHashSet.1183", %"class.blink::HeapListHashSet.1194", %"class.blink::HeapListHashSet.1205", %"class.blink::HeapListHashSet.1216", %"class.blink::HeapListHashSet.1227", %"class.blink::HeapListHashSet.1238", %"class.blink::HeapListHashSet.1249", %"class.blink::HeapListHashSet.1260", %"class.blink::HeapListHashSet.1271", %"class.blink::HeapListHashSet.1282" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1080", %"class.blink::Member.1082", %"class.blink::Member.1082", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1080" = type <{ %"class.blink::Member.1082"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1082" = type { %"class.blink::MemberBase.1083" }
%"class.blink::MemberBase.1083" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1296", %"class.blink::Member.1082", %"class.blink::Member.1082" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1084" = type { %"class.WTF::ListHashSet.base.1094", [7 x i8] }
%"class.WTF::ListHashSet.base.1094" = type <{ %"class.WTF::HashTable.1089", %"class.blink::Member.1091", %"class.blink::Member.1091", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1089" = type <{ %"class.blink::Member.1091"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::HeapListHashSetNode.1093"* }
%"class.blink::HeapListHashSetNode.1093" = type { %"class.blink::Member.1565", %"class.blink::Member.1091", %"class.blink::Member.1091" }
%"class.blink::Member.1565" = type { %"class.blink::MemberBase.1566" }
%"class.blink::MemberBase.1566" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1095" = type { %"class.WTF::ListHashSet.base.1105", [7 x i8] }
%"class.WTF::ListHashSet.base.1105" = type <{ %"class.WTF::HashTable.1100", %"class.blink::Member.1102", %"class.blink::Member.1102", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1100" = type <{ %"class.blink::Member.1102"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1102" = type { %"class.blink::MemberBase.1103" }
%"class.blink::MemberBase.1103" = type { %"class.blink::HeapListHashSetNode.1104"* }
%"class.blink::HeapListHashSetNode.1104" = type { %"class.blink::Member.1561", %"class.blink::Member.1102", %"class.blink::Member.1102" }
%"class.blink::Member.1561" = type { %"class.blink::MemberBase.1562" }
%"class.blink::MemberBase.1562" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1106" = type { %"class.WTF::ListHashSet.base.1116", [7 x i8] }
%"class.WTF::ListHashSet.base.1116" = type <{ %"class.WTF::HashTable.1111", %"class.blink::Member.1113", %"class.blink::Member.1113", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1111" = type <{ %"class.blink::Member.1113"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1113" = type { %"class.blink::MemberBase.1114" }
%"class.blink::MemberBase.1114" = type { %"class.blink::HeapListHashSetNode.1115"* }
%"class.blink::HeapListHashSetNode.1115" = type { %"class.blink::Member.1557", %"class.blink::Member.1113", %"class.blink::Member.1113" }
%"class.blink::Member.1557" = type { %"class.blink::MemberBase.1558" }
%"class.blink::MemberBase.1558" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1117" = type { %"class.WTF::ListHashSet.base.1127", [7 x i8] }
%"class.WTF::ListHashSet.base.1127" = type <{ %"class.WTF::HashTable.1122", %"class.blink::Member.1124", %"class.blink::Member.1124", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1122" = type <{ %"class.blink::Member.1124"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1124" = type { %"class.blink::MemberBase.1125" }
%"class.blink::MemberBase.1125" = type { %"class.blink::HeapListHashSetNode.1126"* }
%"class.blink::HeapListHashSetNode.1126" = type { %"class.blink::Member.1553", %"class.blink::Member.1124", %"class.blink::Member.1124" }
%"class.blink::Member.1553" = type { %"class.blink::MemberBase.1554" }
%"class.blink::MemberBase.1554" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1128" = type { %"class.WTF::ListHashSet.base.1138", [7 x i8] }
%"class.WTF::ListHashSet.base.1138" = type <{ %"class.WTF::HashTable.1133", %"class.blink::Member.1135", %"class.blink::Member.1135", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1133" = type <{ %"class.blink::Member.1135"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::HeapListHashSetNode.1137"* }
%"class.blink::HeapListHashSetNode.1137" = type { %"class.blink::Member.1549", %"class.blink::Member.1135", %"class.blink::Member.1135" }
%"class.blink::Member.1549" = type { %"class.blink::MemberBase.1550" }
%"class.blink::MemberBase.1550" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1139" = type { %"class.WTF::ListHashSet.base.1149", [7 x i8] }
%"class.WTF::ListHashSet.base.1149" = type <{ %"class.WTF::HashTable.1144", %"class.blink::Member.1146", %"class.blink::Member.1146", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1144" = type <{ %"class.blink::Member.1146"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::HeapListHashSetNode.1148"* }
%"class.blink::HeapListHashSetNode.1148" = type { %"class.blink::Member.1462", %"class.blink::Member.1146", %"class.blink::Member.1146" }
%"class.blink::Member.1462" = type { %"class.blink::MemberBase.1463" }
%"class.blink::MemberBase.1463" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type { %"class.blink::InspectorBaseAgent.1464", %"class.v8::Isolate"*, %"class.blink::Member.1471", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::HeapHashSet.1473", %"class.blink::Member.1480", %"class.blink::HeapVector.1483", %"class.blink::HeapHashMap.1490", %"class.blink::HeapHashMap.1497", %"class.blink::HeapHashMap.1504", %"class.WTF::HashSet.1511", %"class.WTF::HashSet.1511", %"class.WTF::HashMap.1515", i32, %"class.blink::Member.698", %"class.blink::HeapHashMap.1520", %"class.blink::Member.1527", %"class.blink::Member.1529", %"class.blink::Member.1531", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent.1464" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOM::Backend", %"class.blink::Member.1073", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.1465" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::DOM::Backend" = type { i32 (...)** }
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector.1429" }
%"class.WTF::Vector.1429" = type { %"class.WTF::VectorBuffer.1430" }
%"class.WTF::VectorBuffer.1430" = type { %"class.WTF::VectorBufferBase.1431" }
%"class.WTF::VectorBufferBase.1431" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr.1432", %"class.mojo::StructPtr.1432" }
%"class.mojo::StructPtr.1432" = type { %"class.std::__1::unique_ptr.1433" }
%"class.std::__1::unique_ptr.1433" = type { %"class.std::__1::__compressed_pair.1434" }
%"class.std::__1::__compressed_pair.1434" = type { %"struct.std::__1::__compressed_pair_elem.1435" }
%"struct.std::__1::__compressed_pair_elem.1435" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap.1436" }
%"class.WTF::HashMap.1436" = type { %"class.WTF::HashTable.1437" }
%"class.WTF::HashTable.1437" = type <{ %"struct.WTF::KeyValuePair.1440"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1440" = type { %"class.WTF::String", %"class.absl::optional.1441" }
%"class.absl::optional.1441" = type { %"class.absl::optional_internal::optional_data.1442" }
%"class.absl::optional_internal::optional_data.1442" = type { %"class.absl::optional_internal::optional_data_base.1443" }
%"class.absl::optional_internal::optional_data_base.1443" = type { %"class.absl::optional_internal::optional_data_dtor_base.1444" }
%"class.absl::optional_internal::optional_data_dtor_base.1444" = type { i8, %union.anon.1445 }
%union.anon.1445 = type { %"class.WTF::Vector.1446" }
%"class.std::__1::unique_ptr.1465" = type { %"class.std::__1::__compressed_pair.1466" }
%"class.std::__1::__compressed_pair.1466" = type { %"struct.std::__1::__compressed_pair_elem.1467" }
%"struct.std::__1::__compressed_pair_elem.1467" = type { %"class.blink::protocol::DOM::Frontend"* }
%"class.blink::protocol::DOM::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.blink::Member.1471" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::InspectedFrames"* }
%"class.blink::InspectedFrames" = type opaque
%"class.v8_inspector::V8InspectorSession" = type { i32 (...)** }
%"class.blink::HeapHashSet.1473" = type { %"class.WTF::HashSet.1476" }
%"class.WTF::HashSet.1476" = type { %"class.WTF::HashTable.1477" }
%"class.WTF::HashTable.1477" = type <{ %"class.blink::Member.1479"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1479" = type opaque
%"class.blink::Member.1480" = type { %"class.blink::MemberBase.1481" }
%"class.blink::MemberBase.1481" = type { %"class.blink::HeapHashMap.1482"* }
%"class.blink::HeapHashMap.1482" = type opaque
%"class.blink::HeapVector.1483" = type { %"class.WTF::Vector.1486" }
%"class.WTF::Vector.1486" = type { %"class.WTF::VectorBuffer.1487" }
%"class.WTF::VectorBuffer.1487" = type { %"class.WTF::VectorBufferBase.1488" }
%"class.WTF::VectorBufferBase.1488" = type { %"class.blink::Member.1480"*, i32, i32 }
%"class.blink::HeapHashMap.1490" = type { %"class.WTF::HashMap.1493" }
%"class.WTF::HashMap.1493" = type { %"class.WTF::HashTable.1494" }
%"class.WTF::HashTable.1494" = type <{ %"struct.WTF::KeyValuePair.1496"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1496" = type opaque
%"class.blink::HeapHashMap.1497" = type { %"class.WTF::HashMap.1500" }
%"class.WTF::HashMap.1500" = type { %"class.WTF::HashTable.1501" }
%"class.WTF::HashTable.1501" = type <{ %"struct.WTF::KeyValuePair.1503"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1503" = type opaque
%"class.blink::HeapHashMap.1504" = type { %"class.WTF::HashMap.1507" }
%"class.WTF::HashMap.1507" = type { %"class.WTF::HashTable.1508" }
%"class.WTF::HashTable.1508" = type <{ %"struct.WTF::KeyValuePair.1510"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1510" = type opaque
%"class.WTF::HashSet.1511" = type { %"class.WTF::HashTable.1512" }
%"class.WTF::HashTable.1512" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1515" = type { %"class.WTF::HashTable.1516" }
%"class.WTF::HashTable.1516" = type <{ %"struct.WTF::KeyValuePair.1519"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1519" = type opaque
%"class.blink::HeapHashMap.1520" = type { %"class.WTF::HashMap.1523" }
%"class.WTF::HashMap.1523" = type { %"class.WTF::HashTable.1524" }
%"class.WTF::HashTable.1524" = type <{ %"struct.WTF::KeyValuePair.1526"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1526" = type opaque
%"class.blink::Member.1527" = type { %"class.blink::MemberBase.1528" }
%"class.blink::MemberBase.1528" = type { %"class.blink::InspectorRevalidateDOMTask"* }
%"class.blink::InspectorRevalidateDOMTask" = type opaque
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::InspectorHistory"* }
%"class.blink::InspectorHistory" = type opaque
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::DOMEditor"* }
%"class.blink::DOMEditor" = type opaque
%"class.blink::InspectorAgentState::SimpleField" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.blink::HeapListHashSet.1150" = type { %"class.WTF::ListHashSet.base.1160", [7 x i8] }
%"class.WTF::ListHashSet.base.1160" = type <{ %"class.WTF::HashTable.1155", %"class.blink::Member.1157", %"class.blink::Member.1157", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1155" = type <{ %"class.blink::Member.1157"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1157" = type { %"class.blink::MemberBase.1158" }
%"class.blink::MemberBase.1158" = type { %"class.blink::HeapListHashSetNode.1159"* }
%"class.blink::HeapListHashSetNode.1159" = type { %"class.blink::Member.1425", %"class.blink::Member.1157", %"class.blink::Member.1157" }
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type { %"class.blink::InspectorBaseAgent", %"class.v8::Isolate"*, %"class.blink::Member.1462", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::HeapHashMap.1533", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOMDebugger::Backend", %"class.blink::Member.1073", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.1456" }
%"class.blink::protocol::DOMDebugger::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1456" = type { %"class.std::__1::__compressed_pair.1457" }
%"class.std::__1::__compressed_pair.1457" = type { %"struct.std::__1::__compressed_pair_elem.1458" }
%"struct.std::__1::__compressed_pair_elem.1458" = type { %"class.blink::protocol::DOMDebugger::Frontend"* }
%"class.blink::protocol::DOMDebugger::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.blink::HeapHashMap.1533" = type { %"class.WTF::HashMap.1536" }
%"class.WTF::HashMap.1536" = type { %"class.WTF::HashTable.1537" }
%"class.WTF::HashTable.1537" = type <{ %"struct.WTF::KeyValuePair.1539"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1539" = type opaque
%"class.blink::InspectorAgentState::MapField" = type { %"class.blink::InspectorAgentState::Field", i8, [7 x i8], %"class.WTF::HashMap.1540" }
%"class.WTF::HashMap.1540" = type { %"class.WTF::HashTable.1541" }
%"class.WTF::HashTable.1541" = type <{ %"struct.WTF::KeyValuePair.1544"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1544" = type opaque
%"class.blink::HeapListHashSet.1161" = type { %"class.WTF::ListHashSet.base.1171", [7 x i8] }
%"class.WTF::ListHashSet.base.1171" = type <{ %"class.WTF::HashTable.1166", %"class.blink::Member.1168", %"class.blink::Member.1168", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1166" = type <{ %"class.blink::Member.1168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::HeapListHashSetNode.1170"* }
%"class.blink::HeapListHashSetNode.1170" = type { %"class.blink::Member.1421", %"class.blink::Member.1168", %"class.blink::Member.1168" }
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.1422" }
%"class.blink::MemberBase.1422" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1172" = type { %"class.WTF::ListHashSet.base.1182", [7 x i8] }
%"class.WTF::ListHashSet.base.1182" = type <{ %"class.WTF::HashTable.1177", %"class.blink::Member.1179", %"class.blink::Member.1179", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1177" = type <{ %"class.blink::Member.1179"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::HeapListHashSetNode.1181"* }
%"class.blink::HeapListHashSetNode.1181" = type { %"class.blink::Member.1417", %"class.blink::Member.1179", %"class.blink::Member.1179" }
%"class.blink::Member.1417" = type { %"class.blink::MemberBase.1418" }
%"class.blink::MemberBase.1418" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1183" = type { %"class.WTF::ListHashSet.base.1193", [7 x i8] }
%"class.WTF::ListHashSet.base.1193" = type <{ %"class.WTF::HashTable.1188", %"class.blink::Member.1190", %"class.blink::Member.1190", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1188" = type <{ %"class.blink::Member.1190"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1190" = type { %"class.blink::MemberBase.1191" }
%"class.blink::MemberBase.1191" = type { %"class.blink::HeapListHashSetNode.1192"* }
%"class.blink::HeapListHashSetNode.1192" = type { %"class.blink::Member.1309", %"class.blink::Member.1190", %"class.blink::Member.1190" }
%"class.blink::HeapListHashSet.1194" = type { %"class.WTF::ListHashSet.base.1204", [7 x i8] }
%"class.WTF::ListHashSet.base.1204" = type <{ %"class.WTF::HashTable.1199", %"class.blink::Member.1201", %"class.blink::Member.1201", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1199" = type <{ %"class.blink::Member.1201"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1201" = type { %"class.blink::MemberBase.1202" }
%"class.blink::MemberBase.1202" = type { %"class.blink::HeapListHashSetNode.1203"* }
%"class.blink::HeapListHashSetNode.1203" = type { %"class.blink::Member.1411", %"class.blink::Member.1201", %"class.blink::Member.1201" }
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1205" = type { %"class.WTF::ListHashSet.base.1215", [7 x i8] }
%"class.WTF::ListHashSet.base.1215" = type <{ %"class.WTF::HashTable.1210", %"class.blink::Member.1212", %"class.blink::Member.1212", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1210" = type <{ %"class.blink::Member.1212"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::HeapListHashSetNode.1214"* }
%"class.blink::HeapListHashSetNode.1214" = type { %"class.blink::Member.1407", %"class.blink::Member.1212", %"class.blink::Member.1212" }
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1216" = type { %"class.WTF::ListHashSet.base.1226", [7 x i8] }
%"class.WTF::ListHashSet.base.1226" = type <{ %"class.WTF::HashTable.1221", %"class.blink::Member.1223", %"class.blink::Member.1223", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1221" = type <{ %"class.blink::Member.1223"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1223" = type { %"class.blink::MemberBase.1224" }
%"class.blink::MemberBase.1224" = type { %"class.blink::HeapListHashSetNode.1225"* }
%"class.blink::HeapListHashSetNode.1225" = type { %"class.blink::Member.1403", %"class.blink::Member.1223", %"class.blink::Member.1223" }
%"class.blink::Member.1403" = type { %"class.blink::MemberBase.1404" }
%"class.blink::MemberBase.1404" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1227" = type { %"class.WTF::ListHashSet.base.1237", [7 x i8] }
%"class.WTF::ListHashSet.base.1237" = type <{ %"class.WTF::HashTable.1232", %"class.blink::Member.1234", %"class.blink::Member.1234", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1232" = type <{ %"class.blink::Member.1234"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::HeapListHashSetNode.1236"* }
%"class.blink::HeapListHashSetNode.1236" = type { %"class.blink::Member.1399", %"class.blink::Member.1234", %"class.blink::Member.1234" }
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1238" = type { %"class.WTF::ListHashSet.base.1248", [7 x i8] }
%"class.WTF::ListHashSet.base.1248" = type <{ %"class.WTF::HashTable.1243", %"class.blink::Member.1245", %"class.blink::Member.1245", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1243" = type <{ %"class.blink::Member.1245"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1245" = type { %"class.blink::MemberBase.1246" }
%"class.blink::MemberBase.1246" = type { %"class.blink::HeapListHashSetNode.1247"* }
%"class.blink::HeapListHashSetNode.1247" = type { %"class.blink::Member.1395", %"class.blink::Member.1245", %"class.blink::Member.1245" }
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1249" = type { %"class.WTF::ListHashSet.base.1259", [7 x i8] }
%"class.WTF::ListHashSet.base.1259" = type <{ %"class.WTF::HashTable.1254", %"class.blink::Member.1256", %"class.blink::Member.1256", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1254" = type <{ %"class.blink::Member.1256"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1256" = type { %"class.blink::MemberBase.1257" }
%"class.blink::MemberBase.1257" = type { %"class.blink::HeapListHashSetNode.1258"* }
%"class.blink::HeapListHashSetNode.1258" = type { %"class.blink::Member.1391", %"class.blink::Member.1256", %"class.blink::Member.1256" }
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1260" = type { %"class.WTF::ListHashSet.base.1270", [7 x i8] }
%"class.WTF::ListHashSet.base.1270" = type <{ %"class.WTF::HashTable.1265", %"class.blink::Member.1267", %"class.blink::Member.1267", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1265" = type <{ %"class.blink::Member.1267"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1267" = type { %"class.blink::MemberBase.1268" }
%"class.blink::MemberBase.1268" = type { %"class.blink::HeapListHashSetNode.1269"* }
%"class.blink::HeapListHashSetNode.1269" = type { %"class.blink::Member.1387", %"class.blink::Member.1267", %"class.blink::Member.1267" }
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1271" = type { %"class.WTF::ListHashSet.base.1281", [7 x i8] }
%"class.WTF::ListHashSet.base.1281" = type <{ %"class.WTF::HashTable.1276", %"class.blink::Member.1278", %"class.blink::Member.1278", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1276" = type <{ %"class.blink::Member.1278"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1278" = type { %"class.blink::MemberBase.1279" }
%"class.blink::MemberBase.1279" = type { %"class.blink::HeapListHashSetNode.1280"* }
%"class.blink::HeapListHashSetNode.1280" = type { %"class.blink::Member.1311", %"class.blink::Member.1278", %"class.blink::Member.1278" }
%"class.blink::HeapListHashSet.1282" = type { %"class.WTF::ListHashSet.base.1292", [7 x i8] }
%"class.WTF::ListHashSet.base.1292" = type <{ %"class.WTF::HashTable.1287", %"class.blink::Member.1289", %"class.blink::Member.1289", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1287" = type <{ %"class.blink::Member.1289"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1289" = type { %"class.blink::MemberBase.1290" }
%"class.blink::MemberBase.1290" = type { %"class.blink::HeapListHashSetNode.1291"* }
%"class.blink::HeapListHashSetNode.1291" = type { %"class.blink::Member.1294", %"class.blink::Member.1289", %"class.blink::Member.1289" }
%class.scoped_refptr.1293 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.1295" }
%"class.blink::MemberBase.1295" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1296" = type { %"class.blink::MemberBase.1297" }
%"class.blink::MemberBase.1297" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.827", %"class.WTF::Vector.869", i32, [4 x i8], %"class.blink::HeapHashMap.1300", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.1300" = type { %"class.WTF::HashMap.1303" }
%"class.WTF::HashMap.1303" = type { %"class.WTF::HashTable.1304" }
%"class.WTF::HashTable.1304" = type <{ %"struct.WTF::KeyValuePair.1306"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1306" = type opaque
%"class.blink::Member.1307" = type { %"class.blink::MemberBase.1308" }
%"class.blink::MemberBase.1308" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1309" = type { %"class.blink::MemberBase.1310" }
%"class.blink::MemberBase.1310" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1311" = type { %"class.blink::MemberBase.1312" }
%"class.blink::MemberBase.1312" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.1315" = type { %"class.blink::MemberBase.1316" }
%"class.blink::MemberBase.1316" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1317" = type { %"class.blink::MemberBase.1318" }
%"class.blink::MemberBase.1318" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1319" = type { %"class.blink::Member.1320" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2211" }
%"class.mojo::Remote.2211" = type { %"class.mojo::internal::InterfacePtrState.2212" }
%"class.mojo::internal::InterfacePtrState.2212" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2213" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.588, %"class.std::__1::unique_ptr.461", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.475, i32 }>
%class.scoped_refptr.588 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.475, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.646", %"class.absl::optional.651", %"class.absl::optional.605", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.671", i8, [7 x i8], %class.scoped_refptr.475, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.488" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.475, %"class.std::__1::unique_ptr.589", %"class.absl::optional.599", %"struct.std::__1::atomic.257", i8, i8, i8, i8, i32, i32, %"class.absl::optional.605", %"class.std::__1::unique_ptr.610", i8, i64, %class.scoped_refptr.643, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.645" }
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.475, i8, %"class.mojo::ScopedHandleBase.592", %class.scoped_refptr.593, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.594", i8*, %"class.base::WeakPtrFactory.595" }
%"class.mojo::ScopedHandleBase.592" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.593 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.594" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.595" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.599" = type { %"class.absl::optional_internal::optional_data.600" }
%"class.absl::optional_internal::optional_data.600" = type { %"class.absl::optional_internal::optional_data_base.601" }
%"class.absl::optional_internal::optional_data_base.601" = type { %"class.absl::optional_internal::optional_data_dtor_base.602" }
%"class.absl::optional_internal::optional_data_dtor_base.602" = type { i8, %union.anon.603 }
%union.anon.603 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.604", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.604" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.610" = type { %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.613", i8, i64, %class.scoped_refptr.614, %class.scoped_refptr.639 }
%"class.base::RepeatingCallback.613" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.614 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.615", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.617", %"class.std::__1::map.628", i8, [7 x i8] }>
%"class.base::RefCounted.615" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.616 }
%class.scoped_refptr.616 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.617" = type { %"class.std::__1::__tree.618" }
%"class.std::__1::__tree.618" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.619", %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.std::__1::map.628" = type { %"class.std::__1::__tree.629" }
%"class.std::__1::__tree.629" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.630", %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%class.scoped_refptr.639 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.643 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.644 }
%class.scoped_refptr.644 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.645" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.646" = type { %"class.absl::optional_internal::optional_data.647" }
%"class.absl::optional_internal::optional_data.647" = type { %"class.absl::optional_internal::optional_data_base.648" }
%"class.absl::optional_internal::optional_data_base.648" = type { %"class.absl::optional_internal::optional_data_dtor_base.649" }
%"class.absl::optional_internal::optional_data_dtor_base.649" = type { i8, %union.anon.650 }
%union.anon.650 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.651" = type { %"class.absl::optional_internal::optional_data.652" }
%"class.absl::optional_internal::optional_data.652" = type { %"class.absl::optional_internal::optional_data_base.653" }
%"class.absl::optional_internal::optional_data_base.653" = type { %"class.absl::optional_internal::optional_data_dtor_base.654" }
%"class.absl::optional_internal::optional_data_dtor_base.654" = type { i8, [7 x i8], %union.anon.655 }
%union.anon.655 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.605" = type { %"class.absl::optional_internal::optional_data.606" }
%"class.absl::optional_internal::optional_data.606" = type { %"class.absl::optional_internal::optional_data_base.607" }
%"class.absl::optional_internal::optional_data_base.607" = type { %"class.absl::optional_internal::optional_data_dtor_base.608" }
%"class.absl::optional_internal::optional_data_dtor_base.608" = type { i8, %union.anon.609 }
%union.anon.609 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.656 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.656 = type { %"class.std::__1::map.659" }
%"class.std::__1::map.659" = type { %"class.std::__1::__tree.660" }
%"class.std::__1::__tree.660" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.661", %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.670"*, i64 }
%"class.std::__1::unique_ptr.670" = type opaque
%"class.std::__1::map.671" = type { %"class.std::__1::__tree.672" }
%"class.std::__1::__tree.672" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.673", %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2213" = type { %"class.std::__1::__compressed_pair.2214" }
%"class.std::__1::__compressed_pair.2214" = type { %"struct.std::__1::__compressed_pair_elem.2215" }
%"struct.std::__1::__compressed_pair_elem.2215" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1322" = type { %"class.std::__1::__compressed_pair.1323" }
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.1324" }
%"struct.std::__1::__compressed_pair_elem.1324" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1328" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1329" = type { %"class.std::__1::__compressed_pair.1330" }
%"class.std::__1::__compressed_pair.1330" = type { %"struct.std::__1::__compressed_pair_elem.1331" }
%"struct.std::__1::__compressed_pair_elem.1331" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1335" = type { %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1337" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1341" }
%"class.blink::Member.1341" = type { %"class.blink::MemberBase.1342" }
%"class.blink::MemberBase.1342" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2221" }
%"class.mojo::AssociatedRemote.2221" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2222" }
%"class.mojo::internal::AssociatedInterfacePtrState.2222" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2223" }
%"class.std::__1::unique_ptr.2223" = type { %"class.std::__1::__compressed_pair.2224" }
%"class.std::__1::__compressed_pair.2224" = type { %"struct.std::__1::__compressed_pair_elem.2225" }
%"struct.std::__1::__compressed_pair_elem.2225" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1343" = type { %"class.blink::Member.1344" }
%"class.blink::Member.1344" = type { %"class.blink::MemberBase.1345" }
%"class.blink::MemberBase.1345" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2231" }
%"class.mojo::AssociatedRemote.2231" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2232" }
%"class.mojo::internal::AssociatedInterfacePtrState.2232" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2233" }
%"class.std::__1::unique_ptr.2233" = type { %"class.std::__1::__compressed_pair.2234" }
%"class.std::__1::__compressed_pair.2234" = type { %"struct.std::__1::__compressed_pair_elem.2235" }
%"struct.std::__1::__compressed_pair_elem.2235" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1346" }
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2241", %"class.blink::Member.827", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2241" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2242" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.461" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2242" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1348" = type { %"class.blink::Member.1349" }
%"class.blink::Member.1349" = type { %"class.blink::MemberBase.1350" }
%"class.blink::MemberBase.1350" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2245", %"class.blink::Member.827", %"class.mojo::AssociatedReceiver.2246" }
%"class.blink::ThreadState::PrefinalizerRegistration.2245" = type { i8 }
%"class.mojo::AssociatedReceiver.2246" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2247" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2247" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1351" }
%"class.blink::Member.1351" = type { %"class.blink::MemberBase.1352" }
%"class.blink::MemberBase.1352" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2250", %"class.blink::Member.827", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2250" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.588, %"class.std::__1::unique_ptr.461", %"class.base::WeakPtrFactory.2251" }
%"class.base::WeakPtrFactory.2251" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1353" = type { %"class.blink::Member.1354" }
%"class.blink::Member.1354" = type { %"class.blink::MemberBase.1355" }
%"class.blink::MemberBase.1355" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2254", %"class.blink::Member.827", %"class.mojo::AssociatedReceiver.2255" }
%"class.blink::ThreadState::PrefinalizerRegistration.2254" = type { i8 }
%"class.mojo::AssociatedReceiver.2255" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2256" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2256" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1356" = type { %"class.blink::MemberBase.1357" }
%"class.blink::MemberBase.1357" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1358" = type { %"class.blink::MemberBase.1359" }
%"class.blink::MemberBase.1359" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1360" = type { %"class.blink::MemberBase.1361" }
%"class.blink::MemberBase.1361" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1362" = type { %"class.blink::MemberBase.1363" }
%"class.blink::MemberBase.1363" = type { %"class.blink::HeapHashMap.1364"* }
%"class.blink::HeapHashMap.1364" = type opaque
%"class.mojo::StructPtr.1365" = type { %"class.std::__1::unique_ptr.1366" }
%"class.std::__1::unique_ptr.1366" = type { %"class.std::__1::__compressed_pair.1367" }
%"class.std::__1::__compressed_pair.1367" = type { %"struct.std::__1::__compressed_pair_elem.1368" }
%"struct.std::__1::__compressed_pair_elem.1368" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1369", %"class.mojo::InlinedStructPtr.1370" }
%"class.mojo::InlinedStructPtr.1369" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1370" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1374" = type { %"class.blink::MemberBase.1375" }
%"class.blink::MemberBase.1375" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1376" = type { %"class.absl::optional_internal::optional_data.1377" }
%"class.absl::optional_internal::optional_data.1377" = type { %"class.absl::optional_internal::optional_data_base.1378" }
%"class.absl::optional_internal::optional_data_base.1378" = type { %"class.absl::optional_internal::optional_data_dtor_base.1379" }
%"class.absl::optional_internal::optional_data_dtor_base.1379" = type { i8, %union.anon.1380 }
%union.anon.1380 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.575", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.992" }
%"class.std::__1::vector.992" = type { %"class.std::__1::__vector_base.993" }
%"class.std::__1::__vector_base.993" = type { %"struct.std::__1::pair.994"*, %"struct.std::__1::pair.994"*, %"class.std::__1::__compressed_pair.995" }
%"struct.std::__1::pair.994" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"struct.std::__1::pair.994"* }
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1002" = type { %"class.absl::optional_internal::optional_data.1003" }
%"class.absl::optional_internal::optional_data.1003" = type { %"class.absl::optional_internal::optional_data_base.1004" }
%"class.absl::optional_internal::optional_data_base.1004" = type { %"class.absl::optional_internal::optional_data_dtor_base.1005" }
%"class.absl::optional_internal::optional_data_dtor_base.1005" = type { i8, %union.anon.1006 }
%union.anon.1006 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1007" = type { %"class.absl::optional_internal::optional_data.1008" }
%"class.absl::optional_internal::optional_data.1008" = type { %"class.absl::optional_internal::optional_data_base.1009" }
%"class.absl::optional_internal::optional_data_base.1009" = type { %"class.absl::optional_internal::optional_data_dtor_base.1010" }
%"class.absl::optional_internal::optional_data_dtor_base.1010" = type { i8, %union.anon.1011 }
%union.anon.1011 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1012 }
%class.scoped_refptr.1012 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1013" }
%"class.blink::HeapHashSet.1013" = type { %"class.WTF::HashSet.1016" }
%"class.WTF::HashSet.1016" = type { %"class.WTF::HashTable.1017" }
%"class.WTF::HashTable.1017" = type <{ %"class.blink::WeakMember.1019"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1019" = type opaque
%"class.blink::Member.577" = type { %"class.blink::MemberBase.578" }
%"class.blink::MemberBase.578" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.579" = type { %"class.blink::MemberBase.580" }
%"class.blink::MemberBase.580" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.583" = type { %"class.WTF::VectorBuffer.584" }
%"class.WTF::VectorBuffer.584" = type { %"class.WTF::VectorBufferBase.585" }
%"class.WTF::VectorBufferBase.585" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.586", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.680" }
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.390", i32, i8, [3 x i8], %"class.blink::HeapVector.392", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.400", %"class.blink::Member.402", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.411", %"class.blink::Member.539", %"class.blink::Member.541", i8 }>
%"class.blink::Supplementable.688" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.689" }
%"class.blink::HeapHashMap.689" = type { %"class.WTF::HashMap.692" }
%"class.WTF::HashMap.692" = type { %"class.WTF::HashTable.693" }
%"class.WTF::HashTable.693" = type <{ %"struct.WTF::KeyValuePair.695"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.695" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.696" = type { %"class.blink::MemberBase.697" }
%"class.blink::MemberBase.697" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1855", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.261", %"class.WTF::Vector.261", i8, i32, %"class.blink::Member.854", %"class.blink::Member.384", %"class.blink::Member.1863", %"class.blink::Member.1865", %"class.blink::Member.1867", %"class.blink::Member.1869", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1871", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1877", %"class.blink::Member.1879", %"class.blink::Member.945", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1881", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1887", %"class.blink::HeapVector.921", %"class.blink::Member.900", %"class.blink::Member.846", %"class.blink::Member.900", %"class.blink::Member.900", %"class.blink::Member.900", %"class.blink::UserActionElementSet", %"class.blink::Member.1896", double, double, i64, i64, %"class.blink::HeapHashSet.1898", %"class.blink::HeapHashSet.1905", i16, i8, %"class.blink::Member.1912", %"class.blink::Member.1914", %"class.blink::Member.1916", %"class.blink::Member.1918", %"class.blink::TextLinkColors", %"class.blink::Member.1920", i8, [7 x i8], %"class.blink::HeapHashMap.1922", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.900", %"class.WTF::Vector.1929", %"class.blink::Member.1934", %"class.blink::Member.1938", i8, %"class.blink::Member.900", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1940", %"class.blink::HeapVector.1942", %"class.std::__1::unique_ptr.1950", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1956", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1969", %"class.WTF::Vector.1971", i8, i8, %"class.std::__1::unique_ptr.1976", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.921", %"class.blink::HeapVector.1982", i32, i8, %"class.blink::HeapTaskRunnerTimer.1887", %"class.blink::HeapTaskRunnerTimer.1887", %"class.blink::DocumentTiming", %"class.blink::Member.1990", i8, i32, %"class.blink::Member.1992", %"class.blink::Member.1994", %"class.blink::Member.1996", %"class.blink::HeapTaskRunnerTimer.1887", %"class.blink::Member.1998", %"class.WTF::HashMap.2000", %"class.blink::Member.2005", %"class.blink::Member.2007", %"class.blink::Member.2009", %"class.blink::Member.2011", %"class.blink::Member.698", %"class.blink::Member.698", %"class.blink::HeapTaskRunnerTimer.1887", %"class.blink::HeapHashSet.2013", i8, i32, %"class.blink::Member.2020", %"class.blink::Member.2022", i32, %"class.blink::Member.2024", %"class.blink::Member.2026", %"class.blink::Member.2028", %"class.std::__1::unique_ptr.2030", i64, %"class.std::__1::unique_ptr.2036", i32, i32, %"class.blink::Member.2042", %"class.blink::Member.2044", %"class.blink::Member.2046", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.2048", %"class.WTF::Vector.869", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.2050", %"class.blink::Member.2057", %"class.std::__1::unique_ptr.2059", %"class.blink::Member.2065", i8, i8, %"class.WTF::String", %"class.blink::Member.2067", i8, [7 x i8], %"class.blink::HeapHashMap.2069", %"class.blink::HeapObserverSet.2076", %"class.blink::Member.2084", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.2086", i32, i8, i8, %"class.blink::WeakMember.2088", %"class.blink::Member.2089" }
%"class.blink::Supplementable.1855" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1856" }
%"class.blink::HeapHashMap.1856" = type { %"class.WTF::HashMap.1859" }
%"class.WTF::HashMap.1859" = type { %"class.WTF::HashTable.1860" }
%"class.WTF::HashTable.1860" = type <{ %"struct.WTF::KeyValuePair.1862"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1862" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.854" = type { %"class.blink::MemberBase.855" }
%"class.blink::MemberBase.855" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.1863" = type { %"class.blink::MemberBase.1864" }
%"class.blink::MemberBase.1864" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1865" = type { %"class.blink::MemberBase.1866" }
%"class.blink::MemberBase.1866" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1869" = type { %"class.blink::MemberBase.1870" }
%"class.blink::MemberBase.1870" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1871" = type { %"class.std::__1::__compressed_pair.1872" }
%"class.std::__1::__compressed_pair.1872" = type { %"struct.std::__1::__compressed_pair_elem.1873" }
%"struct.std::__1::__compressed_pair_elem.1873" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1877" = type { %"class.blink::MemberBase.1878" }
%"class.blink::MemberBase.1878" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1879" = type { %"class.blink::MemberBase.1880" }
%"class.blink::MemberBase.1880" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1881" = type { %"class.WTF::VectorBuffer.1882" }
%"class.WTF::VectorBuffer.1882" = type { %"class.WTF::VectorBufferBase.1883" }
%"class.WTF::VectorBufferBase.1883" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1884 }
%class.scoped_refptr.1884 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.846" = type { %"class.blink::MemberBase.847" }
%"class.blink::MemberBase.847" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.698", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.831", %"class.blink::Member.831", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1889" }
%"class.blink::HeapHashMap.1889" = type { %"class.WTF::HashMap.1892" }
%"class.WTF::HashMap.1892" = type { %"class.WTF::HashTable.1893" }
%"class.WTF::HashTable.1893" = type <{ %"struct.WTF::KeyValuePair.1895"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1895" = type opaque
%"class.blink::Member.1896" = type { %"class.blink::MemberBase.1897" }
%"class.blink::MemberBase.1897" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1898" = type { %"class.WTF::HashSet.1901" }
%"class.WTF::HashSet.1901" = type { %"class.WTF::HashTable.1902" }
%"class.WTF::HashTable.1902" = type <{ %"class.blink::WeakMember.1904"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1904" = type opaque
%"class.blink::HeapHashSet.1905" = type { %"class.WTF::HashSet.1908" }
%"class.WTF::HashSet.1908" = type { %"class.WTF::HashTable.1909" }
%"class.WTF::HashTable.1909" = type <{ %"class.blink::WeakMember.1911"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1911" = type opaque
%"class.blink::Member.1912" = type { %"class.blink::MemberBase.1913" }
%"class.blink::MemberBase.1913" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1914" = type { %"class.blink::MemberBase.1915" }
%"class.blink::MemberBase.1915" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.833", %"class.blink::HeapVector.939" }
%"class.blink::Member.1918" = type { %"class.blink::MemberBase.1919" }
%"class.blink::MemberBase.1919" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1920" = type { %"class.blink::MemberBase.1921" }
%"class.blink::MemberBase.1921" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1922" = type { %"class.WTF::HashMap.1925" }
%"class.WTF::HashMap.1925" = type { %"class.WTF::HashTable.1926" }
%"class.WTF::HashTable.1926" = type <{ %"struct.WTF::KeyValuePair.1928"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1928" = type opaque
%"class.WTF::Vector.1929" = type { %"class.WTF::VectorBuffer.1930" }
%"class.WTF::VectorBuffer.1930" = type { %"class.WTF::VectorBufferBase.1931" }
%"class.WTF::VectorBufferBase.1931" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1934" = type { %"class.blink::MemberBase.1935" }
%"class.blink::MemberBase.1935" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1938" = type { %"class.blink::MemberBase.1939" }
%"class.blink::MemberBase.1939" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1940" = type { %"class.blink::MemberBase.1941" }
%"class.blink::MemberBase.1941" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1942" = type { %"class.WTF::Vector.1945" }
%"class.WTF::Vector.1945" = type { %"class.WTF::VectorBuffer.1946" }
%"class.WTF::VectorBuffer.1946" = type { %"class.WTF::VectorBufferBase.1947" }
%"class.WTF::VectorBufferBase.1947" = type { %"class.blink::Member.1948"*, i32, i32 }
%"class.blink::Member.1948" = type opaque
%"class.std::__1::unique_ptr.1950" = type { %"class.std::__1::__compressed_pair.1951" }
%"class.std::__1::__compressed_pair.1951" = type { %"struct.std::__1::__compressed_pair_elem.1952" }
%"struct.std::__1::__compressed_pair_elem.1952" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1956" = type { %"class.WTF::HashSet.1959" }
%"class.WTF::HashSet.1959" = type { %"class.WTF::HashTable.1960" }
%"class.WTF::HashTable.1960" = type <{ %"class.blink::WeakMember.1962"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1962" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1963", i32, [4 x i8] }>
%"class.WTF::Vector.1963" = type { %"class.WTF::VectorBuffer.1964" }
%"class.WTF::VectorBuffer.1964" = type { %"class.WTF::VectorBufferBase.1965" }
%"class.WTF::VectorBufferBase.1965" = type { %"struct.std::__1::pair.1966"*, i32, i32 }
%"struct.std::__1::pair.1966" = type opaque
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1971" = type { %"class.WTF::VectorBuffer.1972" }
%"class.WTF::VectorBuffer.1972" = type { %"class.WTF::VectorBufferBase.1973" }
%"class.WTF::VectorBufferBase.1973" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1976" = type { %"class.std::__1::__compressed_pair.1977" }
%"class.std::__1::__compressed_pair.1977" = type { %"struct.std::__1::__compressed_pair_elem.1978" }
%"struct.std::__1::__compressed_pair_elem.1978" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1982" = type { %"class.WTF::Vector.1985" }
%"class.WTF::Vector.1985" = type { %"class.WTF::VectorBuffer.1986" }
%"class.WTF::VectorBuffer.1986" = type { %"class.WTF::VectorBufferBase.1987" }
%"class.WTF::VectorBufferBase.1987" = type { %"class.blink::Member.1988"*, i32, i32 }
%"class.blink::Member.1988" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.698" }
%"class.blink::Member.1990" = type { %"class.blink::MemberBase.1991" }
%"class.blink::MemberBase.1991" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1992" = type { %"class.blink::MemberBase.1993" }
%"class.blink::MemberBase.1993" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1994" = type { %"class.blink::MemberBase.1995" }
%"class.blink::MemberBase.1995" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1996" = type { %"class.blink::MemberBase.1997" }
%"class.blink::MemberBase.1997" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1998" = type { %"class.blink::MemberBase.1999" }
%"class.blink::MemberBase.1999" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.2000" = type { %"class.WTF::HashTable.2001" }
%"class.WTF::HashTable.2001" = type <{ %"struct.WTF::KeyValuePair.2004"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2004" = type opaque
%"class.blink::Member.2005" = type { %"class.blink::MemberBase.2006" }
%"class.blink::MemberBase.2006" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.2007" = type { %"class.blink::MemberBase.2008" }
%"class.blink::MemberBase.2008" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.2009" = type { %"class.blink::MemberBase.2010" }
%"class.blink::MemberBase.2010" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.2011" = type { %"class.blink::MemberBase.2012" }
%"class.blink::MemberBase.2012" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1887" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1888", { i64, i64 } }
%"class.blink::WeakMember.1888" = type { %"class.blink::MemberBase.699" }
%"class.blink::HeapHashSet.2013" = type { %"class.WTF::HashSet.2016" }
%"class.WTF::HashSet.2016" = type { %"class.WTF::HashTable.2017" }
%"class.WTF::HashTable.2017" = type <{ %"class.blink::Member.2019"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2019" = type opaque
%"class.blink::Member.2020" = type { %"class.blink::MemberBase.2021" }
%"class.blink::MemberBase.2021" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.2022" = type { %"class.blink::MemberBase.2023" }
%"class.blink::MemberBase.2023" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.2024" = type { %"class.blink::MemberBase.2025" }
%"class.blink::MemberBase.2025" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.2026" = type { %"class.blink::MemberBase.2027" }
%"class.blink::MemberBase.2027" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.2028" = type { %"class.blink::MemberBase.2029" }
%"class.blink::MemberBase.2029" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.2030" = type { %"class.std::__1::__compressed_pair.2031" }
%"class.std::__1::__compressed_pair.2031" = type { %"struct.std::__1::__compressed_pair_elem.2032" }
%"struct.std::__1::__compressed_pair_elem.2032" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2036" = type { %"class.std::__1::__compressed_pair.2037" }
%"class.std::__1::__compressed_pair.2037" = type { %"struct.std::__1::__compressed_pair_elem.2038" }
%"struct.std::__1::__compressed_pair_elem.2038" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.2042" = type { %"class.blink::MemberBase.2043" }
%"class.blink::MemberBase.2043" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.2044" = type { %"class.blink::MemberBase.2045" }
%"class.blink::MemberBase.2045" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.2046" = type { %"class.blink::MemberBase.2047" }
%"class.blink::MemberBase.2047" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.2048" = type { %"class.blink::MemberBase.2049" }
%"class.blink::MemberBase.2049" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.2050" = type { %"class.WTF::HashMap.2053" }
%"class.WTF::HashMap.2053" = type { %"class.WTF::HashTable.2054" }
%"class.WTF::HashTable.2054" = type <{ %"struct.WTF::KeyValuePair.2056"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2056" = type opaque
%"class.blink::Member.2057" = type { %"class.blink::MemberBase.2058" }
%"class.blink::MemberBase.2058" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.2059" = type { %"class.std::__1::__compressed_pair.2060" }
%"class.std::__1::__compressed_pair.2060" = type { %"struct.std::__1::__compressed_pair_elem.2061" }
%"struct.std::__1::__compressed_pair_elem.2061" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.2065" = type { %"class.blink::MemberBase.2066" }
%"class.blink::MemberBase.2066" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.2067" = type { %"class.blink::MemberBase.2068" }
%"class.blink::MemberBase.2068" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.2069" = type { %"class.WTF::HashMap.2072" }
%"class.WTF::HashMap.2072" = type { %"class.WTF::HashTable.2073" }
%"class.WTF::HashTable.2073" = type <{ %"struct.WTF::KeyValuePair.2075"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2075" = type opaque
%"class.blink::HeapObserverSet.2076" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2077" }
%"class.blink::HeapHashSet.2077" = type { %"class.WTF::HashSet.2080" }
%"class.WTF::HashSet.2080" = type { %"class.WTF::HashTable.2081" }
%"class.WTF::HashTable.2081" = type <{ %"class.blink::WeakMember.2083"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2083" = type opaque
%"class.blink::Member.2084" = type { %"class.blink::MemberBase.2085" }
%"class.blink::MemberBase.2085" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.2086" = type { %"class.blink::MemberBase.2087" }
%"class.blink::MemberBase.2087" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.698", %"class.blink::HeapHashSet.2093", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.2100", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.2093" = type { %"class.WTF::HashSet.2096" }
%"class.WTF::HashSet.2096" = type { %"class.WTF::HashTable.2097" }
%"class.WTF::HashTable.2097" = type <{ %"class.blink::Member.2099"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2099" = type opaque
%"class.blink::HeapTaskRunnerTimer.2100" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2101", { i64, i64 } }
%"class.blink::WeakMember.2101" = type { %"class.blink::MemberBase.2087" }
%"class.blink::WeakMember.2088" = type { %"class.blink::MemberBase.832" }
%"class.blink::Member.2089" = type { %"class.blink::MemberBase.2090" }
%"class.blink::MemberBase.2090" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.700" = type { %"class.blink::MemberBase.701" }
%"class.blink::MemberBase.701" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.702" = type { %"class.blink::MemberBase.703" }
%"class.blink::MemberBase.703" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.704" = type { %"class.blink::MemberBase.705" }
%"class.blink::MemberBase.705" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.708" = type { %"class.blink::MemberBase.709" }
%"class.blink::MemberBase.709" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.710" = type { %"class.blink::MemberBase.711" }
%"class.blink::MemberBase.711" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.716" = type { %"class.blink::MemberBase.717" }
%"class.blink::MemberBase.717" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.718" = type { %"class.blink::MemberBase.719" }
%"class.blink::MemberBase.719" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.720 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.722", i64, %"class.WTF::Vector.726", %"class.WTF::Vector.731", %"class.WTF::Vector.737", %"class.WTF::Vector.755", %class.scoped_refptr.343, %"class.WTF::HashMap.761", %"class.WTF::Vector.766", %"class.WTF::Vector.726", %"class.WTF::Vector.772", %"class.WTF::HashMap.777", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.721" }
%"class.base::RefCountedThreadSafe.721" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { i8* }
%"class.WTF::Vector.731" = type { %"class.WTF::VectorBuffer.732" }
%"class.WTF::VectorBuffer.732" = type { %"class.WTF::VectorBufferBase.733", [8 x i8] }
%"class.WTF::VectorBufferBase.733" = type { %class.scoped_refptr.734*, i32, i32 }
%class.scoped_refptr.734 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.737" = type { %"class.WTF::VectorBuffer.738" }
%"class.WTF::VectorBuffer.738" = type { %"class.WTF::VectorBufferBase.739" }
%"class.WTF::VectorBufferBase.739" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.741", %"class.std::__1::unique_ptr.747" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.740 }
%class.scoped_refptr.740 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.755" = type { %"class.WTF::VectorBuffer.756" }
%"class.WTF::VectorBuffer.756" = type { %"class.WTF::VectorBufferBase.757" }
%"class.WTF::VectorBufferBase.757" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.758", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.758" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.761" = type { %"class.WTF::HashTable.762" }
%"class.WTF::HashTable.762" = type <{ %"struct.WTF::KeyValuePair.765"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.765" = type opaque
%"class.WTF::Vector.766" = type { %"class.WTF::VectorBuffer.767" }
%"class.WTF::VectorBuffer.767" = type { %"class.WTF::VectorBufferBase.768" }
%"class.WTF::VectorBufferBase.768" = type { %"class.mojo::ScopedHandleBase.769"*, i32, i32 }
%"class.mojo::ScopedHandleBase.769" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.726" = type { %"class.WTF::VectorBuffer.727" }
%"class.WTF::VectorBuffer.727" = type { %"class.WTF::VectorBufferBase.728", [16 x i8] }
%"class.WTF::VectorBufferBase.728" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.772" = type { %"class.WTF::VectorBuffer.773" }
%"class.WTF::VectorBuffer.773" = type { %"class.WTF::VectorBufferBase.774" }
%"class.WTF::VectorBufferBase.774" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.777" = type { %"class.WTF::HashTable.778" }
%"class.WTF::HashTable.778" = type <{ %"struct.WTF::KeyValuePair.781"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.781" = type { i8**, %"class.std::__1::unique_ptr.2190" }
%"class.std::__1::unique_ptr.2190" = type { %"class.std::__1::__compressed_pair.2191" }
%"class.std::__1::__compressed_pair.2191" = type { %"struct.std::__1::__compressed_pair_elem.2192" }
%"struct.std::__1::__compressed_pair_elem.2192" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.782" = type { %"class.WTF::HashSet.785" }
%"class.WTF::HashSet.785" = type { %"class.WTF::HashTable.786" }
%"class.WTF::HashTable.786" = type <{ %"class.blink::WeakMember.788"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.788" = type opaque
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.796", %"class.blink::Member.796", %"class.blink::Member.798", %"class.blink::Member.800", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.791" }
%"class.absl::optional.791" = type { %"class.absl::optional_internal::optional_data.792" }
%"class.absl::optional_internal::optional_data.792" = type { %"class.absl::optional_internal::optional_data_base.793" }
%"class.absl::optional_internal::optional_data_base.793" = type { %"class.absl::optional_internal::optional_data_dtor_base.794" }
%"class.absl::optional_internal::optional_data_dtor_base.794" = type { i8, %union.anon.795 }
%union.anon.795 = type { i64 }
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::Event"* }
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.802" = type { %"class.WTF::HashMap.805" }
%"class.WTF::HashMap.805" = type { %"class.WTF::HashTable.806" }
%"class.WTF::HashTable.806" = type <{ %"struct.WTF::KeyValuePair.808"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.808" = type opaque
%"class.std::__1::unique_ptr.809" = type { %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.827", %"class.blink::CachedTextInputInfo", %"class.blink::Member.846", %"class.blink::Member.848", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.829", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.839", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.839" = type { %"class.WTF::HashMap.842" }
%"class.WTF::HashMap.842" = type { %"class.WTF::HashTable.843" }
%"class.WTF::HashTable.843" = type <{ %"struct.WTF::KeyValuePair.845"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.845" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.831", i32, i32 }
%"class.blink::Member.848" = type { %"class.blink::MemberBase.849" }
%"class.blink::MemberBase.849" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.850" = type { %"class.blink::MemberBase.851" }
%"class.blink::MemberBase.851" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.854", %"class.blink::Member.856", %"class.blink::Member.858" }
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.858" = type { %"class.blink::MemberBase.859" }
%"class.blink::MemberBase.859" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.860" = type { %"class.blink::MemberBase.861" }
%"class.blink::MemberBase.861" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.854", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.864" }
%"class.blink::Member.864" = type { %"class.blink::MemberBase.865" }
%"class.blink::MemberBase.865" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::HeapHashMap.868"* }
%"class.blink::HeapHashMap.868" = type opaque
%"class.WTF::Vector.869" = type { %"class.WTF::VectorBuffer.870" }
%"class.WTF::VectorBuffer.870" = type { %"class.WTF::VectorBufferBase.871" }
%"class.WTF::VectorBufferBase.871" = type { i8*, i32, i32 }
%"class.util::TokenType.586" = type { %"class.base::StrongAlias.587" }
%"class.base::StrongAlias.587" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.874" = type { %"class.WTF::HashTable.875" }
%"class.WTF::HashTable.875" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.878" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.881" }
%"class.WTF::VectorBuffer.881" = type { %"class.WTF::VectorBufferBase.882" }
%"class.WTF::VectorBufferBase.882" = type { i64*, i32, i32 }
%"class.v8_inspector::StringBuffer" = type { i32 (...)** }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.2108, i32, i8, i8, [2 x i8] }>
%union.anon.2108 = type { %"class.WTF::Vector.2109" }
%"class.WTF::Vector.2109" = type { %"class.WTF::VectorBuffer.2110" }
%"class.WTF::VectorBuffer.2110" = type { %"class.WTF::VectorBufferBase.1448", [16 x i8] }
%"class.blink::TrustedHTML" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::TrustedScript" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::TrustedScriptURL" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.911", %"class.WTF::Vector.2257" }
%"class.WTF::Vector.2257" = type { %"class.WTF::VectorBuffer.2258" }
%"class.WTF::VectorBuffer.2258" = type { %"class.WTF::VectorBufferBase.2259", [64 x i8] }
%"class.WTF::VectorBufferBase.2259" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Array" = type { i8 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Isolate::DisallowJavascriptExecutionScope" = type <{ i32, [4 x i8], %"class.v8::Isolate"*, i8, i8, i8, [5 x i8] }>
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::External" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Function" = type { i8 }
%"class.v8::Name" = type { i8 }
%"class.blink::ScriptSourceCode" = type <{ %"class.blink::ParkableString", %"class.blink::Member.2146", %"class.blink::Member.2148", i32, [4 x i8], %"class.blink::KURL", %"class.WTF::String", %"class.WTF::TextPosition", i32, [4 x i8] }>
%"class.blink::ParkableString" = type { %class.scoped_refptr.2121 }
%class.scoped_refptr.2121 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::Member.2146" = type { %"class.blink::MemberBase.2147" }
%"class.blink::MemberBase.2147" = type { %"class.blink::SingleCachedMetadataHandler"* }
%"class.blink::SingleCachedMetadataHandler" = type opaque
%"class.blink::Member.2148" = type { %"class.blink::MemberBase.2149" }
%"class.blink::MemberBase.2149" = type { %"class.blink::ScriptStreamer"* }
%"class.blink::ScriptStreamer" = type { %"class.blink::ThreadState::PrefinalizerRegistration.2152", i32, %"class.blink::Member.2153", %"class.blink::Member.2155", %"class.mojo::ScopedHandleBase.2157", %"class.std::__1::unique_ptr.589", %"class.blink::SourceStream"*, %"class.std::__1::unique_ptr.2158", i32, %"class.WTF::String", i64, i32, i32, %class.scoped_refptr }
%"class.blink::ThreadState::PrefinalizerRegistration.2152" = type { i8 }
%"class.blink::Member.2153" = type { %"class.blink::MemberBase.2154" }
%"class.blink::MemberBase.2154" = type { %"class.blink::ScriptResource"* }
%"class.blink::ScriptResource" = type opaque
%"class.blink::Member.2155" = type { %"class.blink::MemberBase.2156" }
%"class.blink::MemberBase.2156" = type { %"class.blink::ResponseBodyLoaderClient"* }
%"class.blink::ResponseBodyLoaderClient" = type opaque
%"class.mojo::ScopedHandleBase.2157" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.blink::SourceStream" = type opaque
%"class.std::__1::unique_ptr.2158" = type { %"class.std::__1::__compressed_pair.2159" }
%"class.std::__1::__compressed_pair.2159" = type { %"struct.std::__1::__compressed_pair_elem.2160" }
%"struct.std::__1::__compressed_pair_elem.2160" = type { %"class.v8::ScriptCompiler::StreamedSource"* }
%"class.v8::ScriptCompiler::StreamedSource" = type { %"class.std::__1::unique_ptr.2161" }
%"class.std::__1::unique_ptr.2161" = type { %"class.std::__1::__compressed_pair.2162" }
%"class.std::__1::__compressed_pair.2162" = type { %"struct.std::__1::__compressed_pair_elem.2163" }
%"struct.std::__1::__compressed_pair_elem.2163" = type { %"struct.v8::internal::ScriptStreamingData"* }
%"struct.v8::internal::ScriptStreamingData" = type opaque
%"class.WTF::Vector.2175" = type { %"class.WTF::VectorBuffer.2176" }
%"class.WTF::VectorBuffer.2176" = type { %"class.WTF::VectorBufferBase.2177" }
%"class.WTF::VectorBufferBase.2177" = type { %"struct.blink::V8EventListenerInfo"*, i32, i32 }
%"struct.blink::V8EventListenerInfo" = type { %"class.WTF::AtomicString", i8, i8, i8, %"class.v8::Local.2118", %"class.v8::Local.2174", i64 }
%"class.v8::Local.2118" = type { %"class.v8::Object"* }
%"class.v8::Local.2174" = type { %"class.v8::Function"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::V8EventListener" = type { %"class.blink::CallbackInterfaceBase" }
%"class.blink::CallbackInterfaceBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", i8, %"class.blink::Member.2172", %"class.blink::Member.2172" }
%"class.blink::Member.2172" = type { %"class.blink::MemberBase.2173" }
%"class.blink::MemberBase.2173" = type { %"class.blink::ScriptState"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2305" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2305" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2293", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2293" = type { %"class.std::__1::__vector_base.2294" }
%"class.std::__1::__vector_base.2294" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2300" }
%"class.std::__1::__compressed_pair.2300" = type { %"struct.std::__1::__compressed_pair_elem.2301" }
%"struct.std::__1::__compressed_pair_elem.2301" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2295", i64, i64 }
%"class.std::__1::unique_ptr.2295" = type { %"class.std::__1::__compressed_pair.2296" }
%"class.std::__1::__compressed_pair.2296" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::Vector.2113" = type { %"class.WTF::VectorBuffer.2114" }
%"class.WTF::VectorBuffer.2114" = type { %"class.WTF::VectorBufferBase.2115", [16 x i8] }
%"class.WTF::VectorBufferBase.2115" = type { i16*, i32, i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.2309" = type { %"class.WTF::StringTypeAdapter.2310" }
%"class.WTF::StringTypeAdapter.2310" = type { %"class.WTF::StringView" }
%"class.base::WeakPtr.2329" = type { %"class.base::internal::WeakPtrBase" }

$_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS3_14ThreadDebuggerEEENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE7EraseAtEj = comdat any

$_ZN12v8_inspector17V8InspectorClient21runMessageLoopOnPauseEi = comdat any

$_ZN12v8_inspector17V8InspectorClient22quitMessageLoopOnPauseEv = comdat any

$_ZN12v8_inspector17V8InspectorClient23runIfWaitingForDebuggerEi = comdat any

$_ZN12v8_inspector17V8InspectorClient11muteMetricsEi = comdat any

$_ZN12v8_inspector17V8InspectorClient13unmuteMetricsEi = comdat any

$_ZN12v8_inspector17V8InspectorClient14endUserGestureEv = comdat any

$_ZN12v8_inspector17V8InspectorClient27ensureDefaultContextInGroupEi = comdat any

$_ZN12v8_inspector17V8InspectorClient29beginEnsureAllContextsInGroupEi = comdat any

$_ZN12v8_inspector17V8InspectorClient27endEnsureAllContextsInGroupEi = comdat any

$_ZN12v8_inspector17V8InspectorClient17consoleAPIMessageEiN2v87Isolate17MessageErrorLevelERKNS_10StringViewES6_jjPNS_12V8StackTraceE = comdat any

$_ZN12v8_inspector17V8InspectorClient10memoryInfoEPN2v87IsolateENS1_5LocalINS1_7ContextEEE = comdat any

$_ZN12v8_inspector17V8InspectorClient12consoleClearEi = comdat any

$_ZN12v8_inspector17V8InspectorClient17canExecuteScriptsEi = comdat any

$_ZN12v8_inspector17V8InspectorClient29maxAsyncCallStackDepthChangedEi = comdat any

$_ZN12v8_inspector17V8InspectorClient17resourceNameToUrlERKNS_10StringViewE = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21CallbackInterfaceBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21CallbackInterfaceBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_21CallbackInterfaceBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_21CallbackInterfaceBaseEE7GetNameEPKv = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN3WTF6VectorIPvLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPvEEmm = comdat any

$_ZN3WTF6VectorIPFvPvELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPFvPvEEEmm = comdat any

$_ZN5blink15TaskRunnerTimerINS_14ThreadDebuggerEED0Ev = comdat any

$_ZN5blink15TaskRunnerTimerINS_14ThreadDebuggerEE5FiredEv = comdat any

$_ZN5blink9TimerBase16BindTimerClosureEN4base7WeakPtrIS0_EE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS3_14ThreadDebuggerEEENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS9_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS4_14ThreadDebuggerEEENS2_14default_deleteIS7_EEEEEEmm = comdat any

$_ZN3WTF6VectorIPvLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS3_14ThreadDebuggerEEENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIPFvPvELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_21CallbackInterfaceBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21CallbackInterfaceBaseEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink15TaskRunnerTimerINS_14ThreadDebuggerEEE = comdat any

@_ZTVN5blink14ThreadDebuggerE = hidden unnamed_addr constant { [35 x i8*], [4 x i8*] } { [35 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ThreadDebugger"*)* @_ZN5blink14ThreadDebuggerD2Ev to i8*), i8* bitcast (void (%"class.blink::ThreadDebugger"*)* @_ZN5blink14ThreadDebuggerD0Ev to i8*), i8* bitcast (void (%"class.v8_inspector::V8InspectorClient"*, i32)* @_ZN12v8_inspector17V8InspectorClient21runMessageLoopOnPauseEi to i8*), i8* bitcast (void (%"class.v8_inspector::V8InspectorClient"*)* @_ZN12v8_inspector17V8InspectorClient22quitMessageLoopOnPauseEv to i8*), i8* bitcast (void (%"class.v8_inspector::V8InspectorClient"*, i32)* @_ZN12v8_inspector17V8InspectorClient23runIfWaitingForDebuggerEi to i8*), i8* bitcast (void (%"class.v8_inspector::V8InspectorClient"*, i32)* @_ZN12v8_inspector17V8InspectorClient11muteMetricsEi to i8*), i8* bitcast (void (%"class.v8_inspector::V8InspectorClient"*, i32)* @_ZN12v8_inspector17V8InspectorClient13unmuteMetricsEi to i8*), i8* bitcast (void (%"class.blink::ThreadDebugger"*)* @_ZN5blink14ThreadDebugger16beginUserGestureEv to i8*), i8* bitcast (void (%"class.v8_inspector::V8InspectorClient"*)* @_ZN12v8_inspector17V8InspectorClient14endUserGestureEv to i8*), i8* bitcast (%"class.v8_inspector::StringBuffer"* (%"class.blink::ThreadDebugger"*, %"class.v8::Value"*)* @_ZN5blink14ThreadDebugger12valueSubtypeEN2v85LocalINS1_5ValueEEE to i8*), i8* bitcast (%"class.v8_inspector::StringBuffer"* (%"class.blink::ThreadDebugger"*, %"class.v8::Context"*, %"class.v8::Value"*)* @_ZN5blink14ThreadDebugger26descriptionForValueSubtypeEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE to i8*), i8* bitcast (i1 (%"class.blink::ThreadDebugger"*, %"class.v8::Value"*)* @_ZN5blink14ThreadDebugger27formatAccessorsAsPropertiesEN2v85LocalINS1_5ValueEEE to i8*), i8* bitcast (i1 (%"class.blink::ThreadDebugger"*, %"class.v8::Object"*)* @_ZN5blink14ThreadDebugger23isInspectableHeapObjectEN2v85LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.v8::Context"* (%"class.v8_inspector::V8InspectorClient"*, i32)* @_ZN12v8_inspector17V8InspectorClient27ensureDefaultContextInGroupEi to i8*), i8* bitcast (void (%"class.v8_inspector::V8InspectorClient"*, i32)* @_ZN12v8_inspector17V8InspectorClient29beginEnsureAllContextsInGroupEi to i8*), i8* bitcast (void (%"class.v8_inspector::V8InspectorClient"*, i32)* @_ZN12v8_inspector17V8InspectorClient27endEnsureAllContextsInGroupEi to i8*), i8* bitcast (void (%"class.blink::ThreadDebugger"*, %"class.v8::Context"*, %"class.v8::Object"*)* @_ZN5blink14ThreadDebugger31installAdditionalCommandLineAPIEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.v8_inspector::V8InspectorClient"*, i32, i32, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i32, i32, %"class.v8_inspector::V8StackTrace"*)* @_ZN12v8_inspector17V8InspectorClient17consoleAPIMessageEiN2v87Isolate17MessageErrorLevelERKNS_10StringViewES6_jjPNS_12V8StackTraceE to i8*), i8* bitcast (%"class.v8::Value"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Isolate"*, %"class.v8::Context"*)* @_ZN12v8_inspector17V8InspectorClient10memoryInfoEPN2v87IsolateENS1_5LocalINS1_7ContextEEE to i8*), i8* bitcast (void (%"class.blink::ThreadDebugger"*, %"class.v8_inspector::StringView"*)* @_ZN5blink14ThreadDebugger11consoleTimeERKN12v8_inspector10StringViewE to i8*), i8* bitcast (void (%"class.blink::ThreadDebugger"*, %"class.v8_inspector::StringView"*)* @_ZN5blink14ThreadDebugger14consoleTimeEndERKN12v8_inspector10StringViewE to i8*), i8* bitcast (void (%"class.blink::ThreadDebugger"*, %"class.v8_inspector::StringView"*)* @_ZN5blink14ThreadDebugger16consoleTimeStampERKN12v8_inspector10StringViewE to i8*), i8* bitcast (void (%"class.v8_inspector::V8InspectorClient"*, i32)* @_ZN12v8_inspector17V8InspectorClient12consoleClearEi to i8*), i8* bitcast (double (%"class.blink::ThreadDebugger"*)* @_ZN5blink14ThreadDebugger13currentTimeMSEv to i8*), i8* bitcast (void (%"class.blink::ThreadDebugger"*, double, void (i8*)*, i8*)* @_ZN5blink14ThreadDebugger19startRepeatingTimerEdPFvPvES1_ to i8*), i8* bitcast (void (%"class.blink::ThreadDebugger"*, i8*)* @_ZN5blink14ThreadDebugger11cancelTimerEPv to i8*), i8* bitcast (i1 (%"class.v8_inspector::V8InspectorClient"*, i32)* @_ZN12v8_inspector17V8InspectorClient17canExecuteScriptsEi to i8*), i8* bitcast (void (%"class.v8_inspector::V8InspectorClient"*, i32)* @_ZN12v8_inspector17V8InspectorClient29maxAsyncCallStackDepthChangedEi to i8*), i8* bitcast (%"class.v8_inspector::StringBuffer"* (%"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::StringView"*)* @_ZN12v8_inspector17V8InspectorClient17resourceNameToUrlERKNS_10StringViewE to i8*), i8* bitcast (i64 (%"class.blink::ThreadDebugger"*)* @_ZN5blink14ThreadDebugger16generateUniqueIdEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [4 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::ThreadDebugger"*)* @_ZThn8_N5blink14ThreadDebuggerD1Ev to i8*), i8* bitcast (void (%"class.blink::ThreadDebugger"*)* @_ZThn8_N5blink14ThreadDebuggerD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [22 x i8] c"Uncaught (in promise)\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"Uncaught \00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c" (in promise)\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"Handler added to rejected promise\00", align 1
@_ZZN5blink14ThreadDebugger12valueSubtypeEN2v85LocalINS1_5ValueEEEE5kNode = internal constant [5 x i8] c"node\00", align 1
@_ZZN5blink14ThreadDebugger12valueSubtypeEN2v85LocalINS1_5ValueEEEE6kArray = internal constant [6 x i8] c"array\00", align 1
@_ZZN5blink14ThreadDebugger12valueSubtypeEN2v85LocalINS1_5ValueEEEE5kBlob = internal constant [5 x i8] c"blob\00", align 1
@_ZZN5blink14ThreadDebugger12valueSubtypeEN2v85LocalINS1_5ValueEEEE12kTrustedType = internal constant [12 x i8] c"trustedtype\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"<!DOCTYPE \00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"getEventListeners\00", align 1
@.str.6 = private unnamed_addr constant [56 x i8] c"function getEventListeners(node) { [Command Line API] }\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"getAccessibleName\00", align 1
@.str.8 = private unnamed_addr constant [56 x i8] c"function getAccessibleName(node) { [Command Line API] }\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"getAccessibleRole\00", align 1
@.str.10 = private unnamed_addr constant [56 x i8] c"function getAccessibleRole(node) { [Command Line API] }\00", align 1
@.str.11 = private unnamed_addr constant [42 x i8] c"(function(e) { console.log(e.type, e); })\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"monitorEvents\00", align 1
@.str.13 = private unnamed_addr constant [63 x i8] c"function monitorEvents(object, [types]) { [Command Line API] }\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"unmonitorEvents\00", align 1
@.str.15 = private unnamed_addr constant [65 x i8] c"function unmonitorEvents(object, [types]) { [Command Line API] }\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"listener\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"useCapture\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"passive\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"once\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.21 = private unnamed_addr constant [10 x i8] c"TimeStamp\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"startRepeatingTimer\00", align 1
@.str.24 = private unnamed_addr constant [67 x i8] c"../../third_party/blink/renderer/core/inspector/thread_debugger.cc\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.25 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.26 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.28 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.29 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"toString\00", align 1
@.str.32 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.34 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink13V8EventTarget18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@.str.35 = private unnamed_addr constant [6 x i8] c"mouse\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"touch\00", align 1
@.str.38 = private unnamed_addr constant [8 x i8] c"pointer\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"control\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c"load\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"unload\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"abort\00", align 1
@.str.43 = private constant [6 x i8] c"error\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"change\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"submit\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"focus\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"blur\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"resize\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"scroll\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"search\00", align 1
@.str.54 = private unnamed_addr constant [13 x i8] c"devicemotion\00", align 1
@.str.55 = private unnamed_addr constant [18 x i8] c"deviceorientation\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"auxclick\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"click\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"dblclick\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"mousedown\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c"mouseeenter\00", align 1
@.str.61 = private unnamed_addr constant [11 x i8] c"mouseleave\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"mousemove\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"mouseout\00", align 1
@.str.64 = private unnamed_addr constant [10 x i8] c"mouseover\00", align 1
@.str.65 = private unnamed_addr constant [8 x i8] c"mouseup\00", align 1
@.str.66 = private unnamed_addr constant [11 x i8] c"mousewheel\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"keydown\00", align 1
@.str.68 = private unnamed_addr constant [6 x i8] c"keyup\00", align 1
@.str.69 = private unnamed_addr constant [9 x i8] c"keypress\00", align 1
@.str.70 = private unnamed_addr constant [10 x i8] c"textInput\00", align 1
@.str.71 = private unnamed_addr constant [11 x i8] c"touchstart\00", align 1
@.str.72 = private unnamed_addr constant [10 x i8] c"touchmove\00", align 1
@.str.73 = private unnamed_addr constant [9 x i8] c"touchend\00", align 1
@.str.74 = private unnamed_addr constant [12 x i8] c"touchcancel\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"pointerover\00", align 1
@.str.76 = private unnamed_addr constant [11 x i8] c"pointerout\00", align 1
@.str.77 = private unnamed_addr constant [13 x i8] c"pointerenter\00", align 1
@.str.78 = private unnamed_addr constant [13 x i8] c"pointerleave\00", align 1
@.str.79 = private unnamed_addr constant [12 x i8] c"pointerdown\00", align 1
@.str.80 = private unnamed_addr constant [10 x i8] c"pointerup\00", align 1
@.str.81 = private unnamed_addr constant [12 x i8] c"pointermove\00", align 1
@.str.82 = private unnamed_addr constant [14 x i8] c"pointercancel\00", align 1
@.str.83 = private unnamed_addr constant [18 x i8] c"gotpointercapture\00", align 1
@.str.84 = private unnamed_addr constant [19 x i8] c"lostpointercapture\00", align 1
@.str.85 = private unnamed_addr constant [5 x i8] c"zoom\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.86 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.87 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.88 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_21CallbackInterfaceBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21CallbackInterfaceBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_21CallbackInterfaceBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21CallbackInterfaceBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21CallbackInterfaceBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink15V8EventListenerE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZN5blink13CoreProbeSink16s_existingAgentsE = external local_unnamed_addr global %"struct.std::__1::atomic.66", align 4
@.str.89 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.90 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.91 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink6V8Node18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink10V8NodeList18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink14V8DOMTokenList18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink16V8HTMLCollection18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink19V8HTMLAllCollection18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink14V8DOMException18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink6V8Blob18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink13V8TrustedHTML18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink15V8TrustedScript18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink18V8TrustedScriptURL18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPvEEPKcv = private unnamed_addr constant [54 x i8] c"const char *WTF::GetStringWithTypeName() [T = void *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPFvPvEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = void (*)(void *)]\00", align 1
@_ZTVN5blink15TaskRunnerTimerINS_14ThreadDebuggerEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::TaskRunnerTimer"*)* @_ZN5blink15TaskRunnerTimerINS_14ThreadDebuggerEED0Ev to i8*), i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBase4StopEv to i8*), i8* bitcast (void (%"class.blink::TaskRunnerTimer"*)* @_ZN5blink15TaskRunnerTimerINS_14ThreadDebuggerEE5FiredEv to i8*), i8* bitcast (void (%"class.base::OnceCallback"*, %"class.blink::TimerBase"*, %"class.base::WeakPtr.2329"*)* @_ZN5blink9TimerBase16BindTimerClosureEN4base7WeakPtrIS0_EE to i8*)] }, comdat, align 8
@.str.93 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.94 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS3_14ThreadDebuggerEEENS1_14default_deleteIS6_EEEEEEPKcv = private unnamed_addr constant [190 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::TaskRunnerTimer<blink::ThreadDebugger>, std::__1::default_delete<blink::TaskRunnerTimer<blink::ThreadDebugger> > >]\00", align 1
@.str.95 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1

@_ZN5blink14ThreadDebuggerD1Ev = hidden unnamed_addr alias void (%"class.blink::ThreadDebugger"*), void (%"class.blink::ThreadDebugger"*)* @_ZN5blink14ThreadDebuggerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebuggerC2EPN2v87IsolateE(%"class.blink::ThreadDebugger"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 0
  %4 = bitcast %"class.blink::ThreadDebugger"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [4 x i8*] }, { [35 x i8*], [4 x i8*] }* @_ZTVN5blink14ThreadDebuggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [4 x i8*] }, { [35 x i8*], [4 x i8*] }* @_ZTVN5blink14ThreadDebuggerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 2
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %5, align 8
  %6 = tail call %"class.v8_inspector::V8Inspector"* @_ZN12v8_inspector11V8Inspector6createEPN2v87IsolateEPNS_17V8InspectorClientE(%"class.v8::Isolate"* %1, %"class.v8_inspector::V8InspectorClient"* %3) #13
  %7 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.v8_inspector::V8Inspector"* %6, %"class.v8_inspector::V8Inspector"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 4
  %9 = bitcast %"class.WTF::Vector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false)
  ret void
}

declare %"class.v8_inspector::V8Inspector"* @_ZN12v8_inspector11V8Inspector6createEPN2v87IsolateEPNS_17V8InspectorClientE(%"class.v8::Isolate"*, %"class.v8_inspector::V8InspectorClient"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebuggerD2Ev(%"class.blink::ThreadDebugger"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::ThreadDebugger"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [4 x i8*] }, { [35 x i8*], [4 x i8*] }* @_ZTVN5blink14ThreadDebuggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [4 x i8*] }, { [35 x i8*], [4 x i8*] }* @_ZTVN5blink14ThreadDebuggerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load i8**, i8*** %3, align 8
  %5 = icmp eq i8** %4, null
  %6 = bitcast i8** %4 to i8*
  br i1 %5, label %13, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #13
  store i8** null, i8*** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  %14 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %15 = load void (i8*)**, void (i8*)*** %14, align 8
  %16 = icmp eq void (i8*)** %15, null
  %17 = bitcast void (i8*)** %15 to i8*
  br i1 %16, label %24, label %18, !prof !2

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !3

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #13
  store void (i8*)** null, void (i8*)*** %14, align 8
  br label %24

24:                                               ; preds = %13, %23
  %25 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 4
  %26 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %26, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr.1"* %27, null
  br i1 %28, label %55, label %29, !prof !2

29:                                               ; preds = %24
  %30 = bitcast %"class.std::__1::unique_ptr.1"* %27 to i8*
  %31 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %53, label %34, !prof !3

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %27, i64 %35
  br label %37

37:                                               ; preds = %47, %34
  %38 = phi %"class.std::__1::unique_ptr.1"* [ %48, %47 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::TaskRunnerTimer"*, %"class.blink::TaskRunnerTimer"** %39, align 8
  store %"class.blink::TaskRunnerTimer"* null, %"class.blink::TaskRunnerTimer"** %39, align 8
  %41 = icmp eq %"class.blink::TaskRunnerTimer"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.blink::TaskRunnerTimer"* %40 to void (%"class.blink::TaskRunnerTimer"*)***
  %44 = load void (%"class.blink::TaskRunnerTimer"*)**, void (%"class.blink::TaskRunnerTimer"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::TaskRunnerTimer"*)*, void (%"class.blink::TaskRunnerTimer"*)** %44, i64 1
  %46 = load void (%"class.blink::TaskRunnerTimer"*)*, void (%"class.blink::TaskRunnerTimer"*)** %45, align 8
  tail call void %46(%"class.blink::TaskRunnerTimer"* nonnull %40) #13
  br label %47

47:                                               ; preds = %42, %37
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %38, i64 1
  %49 = icmp eq %"class.std::__1::unique_ptr.1"* %48, %36
  br i1 %49, label %50, label %37

50:                                               ; preds = %47
  store i32 0, i32* %31, align 4
  %51 = bitcast %"class.WTF::Vector"* %25 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %50, %29
  %54 = phi i8* [ %52, %50 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %54) #13
  store %"class.std::__1::unique_ptr.1"* null, %"class.std::__1::unique_ptr.1"** %26, align 8
  br label %55

55:                                               ; preds = %24, %53
  %56 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %56, align 8
  store %"class.v8_inspector::V8Inspector"* null, %"class.v8_inspector::V8Inspector"** %56, align 8
  %58 = icmp eq %"class.v8_inspector::V8Inspector"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.v8_inspector::V8Inspector"* %57 to void (%"class.v8_inspector::V8Inspector"*)***
  %61 = load void (%"class.v8_inspector::V8Inspector"*)**, void (%"class.v8_inspector::V8Inspector"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.v8_inspector::V8Inspector"*)*, void (%"class.v8_inspector::V8Inspector"*)** %61, i64 1
  %63 = load void (%"class.v8_inspector::V8Inspector"*)*, void (%"class.v8_inspector::V8Inspector"*)** %62, align 8
  tail call void %63(%"class.v8_inspector::V8Inspector"* nonnull %57) #13
  br label %64

64:                                               ; preds = %55, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink14ThreadDebuggerD1Ev(%"class.blink::ThreadDebugger"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 -1, i32 6, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::ThreadDebugger"*
  tail call void @_ZN5blink14ThreadDebuggerD2Ev(%"class.blink::ThreadDebugger"* %3) #13
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebuggerD0Ev(%"class.blink::ThreadDebugger"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn8_N5blink14ThreadDebuggerD0Ev(%"class.blink::ThreadDebugger"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ThreadDebugger"* @_ZN5blink14ThreadDebugger4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.v8::Isolate"* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %5 = add i64 %4, 8
  %6 = inttoptr i64 %5 to %"class.blink::V8PerIsolateData"**
  %7 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %6, align 8
  %8 = icmp eq %"class.blink::V8PerIsolateData"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %3
  %10 = tail call %"class.blink::V8PerIsolateData::Data"* @_ZN5blink16V8PerIsolateData14ThreadDebuggerEv(%"class.blink::V8PerIsolateData"* nonnull %7) #13
  %11 = icmp eq %"class.blink::V8PerIsolateData::Data"* %10, null
  %12 = getelementptr inbounds %"class.blink::V8PerIsolateData::Data", %"class.blink::V8PerIsolateData::Data"* %10, i64 -1
  %13 = bitcast %"class.blink::V8PerIsolateData::Data"* %12 to %"class.blink::ThreadDebugger"*
  %14 = select i1 %11, %"class.blink::ThreadDebugger"* null, %"class.blink::ThreadDebugger"* %13
  br label %15

15:                                               ; preds = %9, %3, %1
  %16 = phi %"class.blink::ThreadDebugger"* [ null, %1 ], [ %14, %9 ], [ null, %3 ]
  ret %"class.blink::ThreadDebugger"* %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.blink::V8PerIsolateData::Data"* @_ZN5blink16V8PerIsolateData14ThreadDebuggerEv(%"class.blink::V8PerIsolateData"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink14ThreadDebugger28V8MessageLevelToMessageLevelEN2v87Isolate17MessageErrorLevelE(i32) local_unnamed_addr #5 align 2 {
  switch i32 %0, label %4 [
    i32 2, label %5
    i32 16, label %2
    i32 8, label %3
  ]

2:                                                ; preds = %1
  br label %5

3:                                                ; preds = %1
  br label %5

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %4, %3, %2
  %6 = phi i32 [ 1, %4 ], [ 3, %3 ], [ 2, %2 ], [ 0, %1 ]
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger11IdleStartedEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.v8::Isolate"* %0, null
  br i1 %2, label %23, label %3

3:                                                ; preds = %1
  %4 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %5 = add i64 %4, 8
  %6 = inttoptr i64 %5 to %"class.blink::V8PerIsolateData"**
  %7 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %6, align 8
  %8 = icmp eq %"class.blink::V8PerIsolateData"* %7, null
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = tail call %"class.blink::V8PerIsolateData::Data"* @_ZN5blink16V8PerIsolateData14ThreadDebuggerEv(%"class.blink::V8PerIsolateData"* nonnull %7) #13
  %11 = icmp eq %"class.blink::V8PerIsolateData::Data"* %10, null
  %12 = getelementptr inbounds %"class.blink::V8PerIsolateData::Data", %"class.blink::V8PerIsolateData::Data"* %10, i64 -1
  %13 = icmp eq %"class.blink::V8PerIsolateData::Data"* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %23, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::V8PerIsolateData::Data", %"class.blink::V8PerIsolateData::Data"* %10, i64 2
  %17 = bitcast %"class.blink::V8PerIsolateData::Data"* %16 to %"class.v8_inspector::V8Inspector"**
  %18 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %17, align 8
  %19 = bitcast %"class.v8_inspector::V8Inspector"* %18 to void (%"class.v8_inspector::V8Inspector"*)***
  %20 = load void (%"class.v8_inspector::V8Inspector"*)**, void (%"class.v8_inspector::V8Inspector"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.v8_inspector::V8Inspector"*)*, void (%"class.v8_inspector::V8Inspector"*)** %20, i64 6
  %22 = load void (%"class.v8_inspector::V8Inspector"*)*, void (%"class.v8_inspector::V8Inspector"*)** %21, align 8
  tail call void %22(%"class.v8_inspector::V8Inspector"* %18) #13
  br label %23

23:                                               ; preds = %9, %3, %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger12IdleFinishedEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.v8::Isolate"* %0, null
  br i1 %2, label %23, label %3

3:                                                ; preds = %1
  %4 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %5 = add i64 %4, 8
  %6 = inttoptr i64 %5 to %"class.blink::V8PerIsolateData"**
  %7 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %6, align 8
  %8 = icmp eq %"class.blink::V8PerIsolateData"* %7, null
  br i1 %8, label %23, label %9

9:                                                ; preds = %3
  %10 = tail call %"class.blink::V8PerIsolateData::Data"* @_ZN5blink16V8PerIsolateData14ThreadDebuggerEv(%"class.blink::V8PerIsolateData"* nonnull %7) #13
  %11 = icmp eq %"class.blink::V8PerIsolateData::Data"* %10, null
  %12 = getelementptr inbounds %"class.blink::V8PerIsolateData::Data", %"class.blink::V8PerIsolateData::Data"* %10, i64 -1
  %13 = icmp eq %"class.blink::V8PerIsolateData::Data"* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %23, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::V8PerIsolateData::Data", %"class.blink::V8PerIsolateData::Data"* %10, i64 2
  %17 = bitcast %"class.blink::V8PerIsolateData::Data"* %16 to %"class.v8_inspector::V8Inspector"**
  %18 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %17, align 8
  %19 = bitcast %"class.v8_inspector::V8Inspector"* %18 to void (%"class.v8_inspector::V8Inspector"*)***
  %20 = load void (%"class.v8_inspector::V8Inspector"*)**, void (%"class.v8_inspector::V8Inspector"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.v8_inspector::V8Inspector"*)*, void (%"class.v8_inspector::V8Inspector"*)** %20, i64 7
  %22 = load void (%"class.v8_inspector::V8Inspector"*)*, void (%"class.v8_inspector::V8Inspector"*)** %21, align 8
  tail call void %22(%"class.v8_inspector::V8Inspector"* %18) #13
  br label %23

23:                                               ; preds = %9, %3, %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger18AsyncTaskScheduledERKN3WTF10StringViewEPvb(%"class.blink::ThreadDebugger"* nocapture readonly, %"class.WTF::StringView"* dereferenceable(24), i8*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8_inspector::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %6, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %5, %"class.WTF::StringView"* dereferenceable(24) %1) #13
  %8 = bitcast %"class.v8_inspector::V8Inspector"* %7 to void (%"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::StringView"*, i8*, i1)***
  %9 = load void (%"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::StringView"*, i8*, i1)**, void (%"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::StringView"*, i8*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::StringView"*, i8*, i1)*, void (%"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::StringView"*, i8*, i1)** %9, i64 8
  %11 = load void (%"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::StringView"*, i8*, i1)*, void (%"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::StringView"*, i8*, i1)** %10, align 8
  call void %11(%"class.v8_inspector::V8Inspector"* %7, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %5, i8* %2, i1 zeroext %3) #13
  ret void
}

declare void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* sret, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger17AsyncTaskCanceledEPv(%"class.blink::ThreadDebugger"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %3, align 8
  %5 = bitcast %"class.v8_inspector::V8Inspector"* %4 to void (%"class.v8_inspector::V8Inspector"*, i8*)***
  %6 = load void (%"class.v8_inspector::V8Inspector"*, i8*)**, void (%"class.v8_inspector::V8Inspector"*, i8*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8_inspector::V8Inspector"*, i8*)*, void (%"class.v8_inspector::V8Inspector"*, i8*)** %6, i64 9
  %8 = load void (%"class.v8_inspector::V8Inspector"*, i8*)*, void (%"class.v8_inspector::V8Inspector"*, i8*)** %7, align 8
  tail call void %8(%"class.v8_inspector::V8Inspector"* %4, i8* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger21AllAsyncTasksCanceledEv(%"class.blink::ThreadDebugger"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %2, align 8
  %4 = bitcast %"class.v8_inspector::V8Inspector"* %3 to void (%"class.v8_inspector::V8Inspector"*)***
  %5 = load void (%"class.v8_inspector::V8Inspector"*)**, void (%"class.v8_inspector::V8Inspector"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.v8_inspector::V8Inspector"*)*, void (%"class.v8_inspector::V8Inspector"*)** %5, i64 12
  %7 = load void (%"class.v8_inspector::V8Inspector"*)*, void (%"class.v8_inspector::V8Inspector"*)** %6, align 8
  tail call void %7(%"class.v8_inspector::V8Inspector"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger16AsyncTaskStartedEPv(%"class.blink::ThreadDebugger"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %3, align 8
  %5 = bitcast %"class.v8_inspector::V8Inspector"* %4 to void (%"class.v8_inspector::V8Inspector"*, i8*)***
  %6 = load void (%"class.v8_inspector::V8Inspector"*, i8*)**, void (%"class.v8_inspector::V8Inspector"*, i8*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8_inspector::V8Inspector"*, i8*)*, void (%"class.v8_inspector::V8Inspector"*, i8*)** %6, i64 10
  %8 = load void (%"class.v8_inspector::V8Inspector"*, i8*)*, void (%"class.v8_inspector::V8Inspector"*, i8*)** %7, align 8
  tail call void %8(%"class.v8_inspector::V8Inspector"* %4, i8* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger17AsyncTaskFinishedEPv(%"class.blink::ThreadDebugger"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %3, align 8
  %5 = bitcast %"class.v8_inspector::V8Inspector"* %4 to void (%"class.v8_inspector::V8Inspector"*, i8*)***
  %6 = load void (%"class.v8_inspector::V8Inspector"*, i8*)**, void (%"class.v8_inspector::V8Inspector"*, i8*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8_inspector::V8Inspector"*, i8*)*, void (%"class.v8_inspector::V8Inspector"*, i8*)** %6, i64 11
  %8 = load void (%"class.v8_inspector::V8Inspector"*, i8*)*, void (%"class.v8_inspector::V8Inspector"*, i8*)** %7, align 8
  tail call void %8(%"class.v8_inspector::V8Inspector"* %4, i8* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger22StoreCurrentStackTraceERKN3WTF10StringViewE(%"struct.v8_inspector::V8StackTraceId"* noalias sret, %"class.blink::ThreadDebugger"* nocapture readonly, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8_inspector::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %5, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %4, %"class.WTF::StringView"* dereferenceable(24) %2) #13
  %7 = bitcast %"class.v8_inspector::V8Inspector"* %6 to void (%"struct.v8_inspector::V8StackTraceId"*, %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::StringView"*)***
  %8 = load void (%"struct.v8_inspector::V8StackTraceId"*, %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::StringView"*)**, void (%"struct.v8_inspector::V8StackTraceId"*, %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::StringView"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"struct.v8_inspector::V8StackTraceId"*, %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::StringView"*)*, void (%"struct.v8_inspector::V8StackTraceId"*, %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::StringView"*)** %8, i64 13
  %10 = load void (%"struct.v8_inspector::V8StackTraceId"*, %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::StringView"*)*, void (%"struct.v8_inspector::V8StackTraceId"*, %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::StringView"*)** %9, align 8
  call void %10(%"struct.v8_inspector::V8StackTraceId"* sret %0, %"class.v8_inspector::V8Inspector"* %6, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger24ExternalAsyncTaskStartedERKN12v8_inspector14V8StackTraceIdE(%"class.blink::ThreadDebugger"* nocapture readonly, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %3, align 8
  %5 = bitcast %"class.v8_inspector::V8Inspector"* %4 to void (%"class.v8_inspector::V8Inspector"*, %"struct.v8_inspector::V8StackTraceId"*)***
  %6 = load void (%"class.v8_inspector::V8Inspector"*, %"struct.v8_inspector::V8StackTraceId"*)**, void (%"class.v8_inspector::V8Inspector"*, %"struct.v8_inspector::V8StackTraceId"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8_inspector::V8Inspector"*, %"struct.v8_inspector::V8StackTraceId"*)*, void (%"class.v8_inspector::V8Inspector"*, %"struct.v8_inspector::V8StackTraceId"*)** %6, i64 14
  %8 = load void (%"class.v8_inspector::V8Inspector"*, %"struct.v8_inspector::V8StackTraceId"*)*, void (%"class.v8_inspector::V8Inspector"*, %"struct.v8_inspector::V8StackTraceId"*)** %7, align 8
  tail call void %8(%"class.v8_inspector::V8Inspector"* %4, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger25ExternalAsyncTaskFinishedERKN12v8_inspector14V8StackTraceIdE(%"class.blink::ThreadDebugger"* nocapture readonly, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %3, align 8
  %5 = bitcast %"class.v8_inspector::V8Inspector"* %4 to void (%"class.v8_inspector::V8Inspector"*, %"struct.v8_inspector::V8StackTraceId"*)***
  %6 = load void (%"class.v8_inspector::V8Inspector"*, %"struct.v8_inspector::V8StackTraceId"*)**, void (%"class.v8_inspector::V8Inspector"*, %"struct.v8_inspector::V8StackTraceId"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8_inspector::V8Inspector"*, %"struct.v8_inspector::V8StackTraceId"*)*, void (%"class.v8_inspector::V8Inspector"*, %"struct.v8_inspector::V8StackTraceId"*)** %6, i64 15
  %8 = load void (%"class.v8_inspector::V8Inspector"*, %"struct.v8_inspector::V8StackTraceId"*)*, void (%"class.v8_inspector::V8Inspector"*, %"struct.v8_inspector::V8StackTraceId"*)** %7, align 8
  tail call void %8(%"class.v8_inspector::V8Inspector"* %4, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14ThreadDebugger15PromiseRejectedEN2v85LocalINS1_7ContextEEERKN3WTF6StringENS2_INS1_5ValueEEENSt3__110unique_ptrINS_14SourceLocationENSB_14default_deleteISD_EEEE(%"class.blink::ThreadDebugger"*, %"class.v8::Context"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.v8::Value"*, %"class.blink::SourceLocation"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringAppend", align 8
  %10 = alloca %"class.WTF::StringAppend.322", align 8
  %11 = alloca %"class.v8_inspector::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.v8_inspector::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.v8_inspector::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %18, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i64 21) #13
  %19 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %20, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %48, label %24

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %43

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #13
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !3

38:                                               ; preds = %29
  call void @llvm.trap() #13
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %24, %39
  %44 = phi %"class.WTF::StringImpl"* [ %41, %39 ], [ %22, %24 ]
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %88

48:                                               ; preds = %5, %39, %43
  %49 = phi %"class.WTF::StringImpl"* [ null, %5 ], [ null, %39 ], [ %44, %43 ]
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %70, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %70

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #13
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %57
  call void @llvm.trap() #13
  unreachable

67:                                               ; preds = %57
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %58, align 4
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  br label %70

70:                                               ; preds = %67, %52, %48
  %71 = phi %"class.WTF::StringImpl"* [ %69, %67 ], [ %49, %52 ], [ %49, %48 ]
  %72 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %73 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %72, i64* %73, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %74, label %231, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %231

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #13
  br label %231

88:                                               ; preds = %43
  %89 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #13
  %90 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %91 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8** %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 9, i32* %93, align 8
  %94 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %44, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #13
  br i1 %94, label %95, label %231

95:                                               ; preds = %88
  %96 = bitcast %"class.WTF::StringAppend"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #13
  %97 = bitcast %"class.WTF::StringAppend.322"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #13
  %98 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %7, i32 0, i32 8) #13
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %144, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %117

107:                                              ; preds = %100
  %108 = zext i32 %106 to i33
  %109 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %108, i33 1) #13
  %110 = extractvalue { i33, i1 } %109, 1
  %111 = extractvalue { i33, i1 } %109, 0
  %112 = icmp slt i33 %111, 0
  %113 = or i1 %110, %112
  br i1 %113, label %114, label %115, !prof !3

114:                                              ; preds = %107
  call void @llvm.trap() #13
  unreachable

115:                                              ; preds = %107
  %116 = trunc i33 %111 to i32
  store i32 %116, i32* %105, align 4
  br label %117

117:                                              ; preds = %100, %115
  %118 = phi i32 [ %116, %115 ], [ %106, %100 ]
  %119 = load atomic i32, i32* %101 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  br i1 %121, label %123, label %133

123:                                              ; preds = %117
  %124 = zext i32 %118 to i33
  %125 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %124, i33 1) #13
  %126 = extractvalue { i33, i1 } %125, 1
  %127 = extractvalue { i33, i1 } %125, 0
  %128 = icmp slt i33 %127, 0
  %129 = or i1 %126, %128
  br i1 %129, label %130, label %131, !prof !3

130:                                              ; preds = %123
  call void @llvm.trap() #13
  unreachable

131:                                              ; preds = %123
  %132 = trunc i33 %127 to i32
  store i32 %132, i32* %122, align 4
  br label %133

133:                                              ; preds = %131, %117
  %134 = phi i32 [ %132, %131 ], [ %118, %117 ]
  %135 = load atomic i32, i32* %101 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = add i32 %134, -1
  store i32 %139, i32* %122, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = phi i32 [ %139, %138 ], [ %134, %133 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #13
  br label %144

144:                                              ; preds = %95, %140, %143
  %145 = getelementptr inbounds %"class.WTF::StringAppend.322", %"class.WTF::StringAppend.322"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %145, align 8
  %146 = getelementptr inbounds %"class.WTF::StringAppend.322", %"class.WTF::StringAppend.322"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i8** %146, align 8
  %147 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %7, i32 8, i32 -1) #13
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %9, %"class.WTF::StringAppend.322"* nonnull dereferenceable(16) %10, %"class.WTF::StringImpl"* %147)
  %148 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %9)
  %149 = ptrtoint %"class.WTF::StringImpl"* %148 to i64
  %150 = bitcast %"class.WTF::String"* %7 to i64*
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  store i64 %149, i64* %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #13
  br label %166

166:                                              ; preds = %165, %162, %144
  %167 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #13
  br label %183

183:                                              ; preds = %182, %179, %166
  %184 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %200, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  br i1 %191, label %194, label %196

194:                                              ; preds = %187
  %195 = add i32 %193, -1
  store i32 %195, i32* %192, align 4
  br label %196

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %195, %194 ], [ %193, %187 ]
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %185) #13
  br label %200

200:                                              ; preds = %183, %196, %199
  %201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %202 = icmp eq %"class.WTF::StringImpl"* %201, null
  br i1 %202, label %216, label %203

203:                                              ; preds = %200
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load atomic i32, i32* %204 monotonic, align 4
  %206 = and i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 0
  %209 = load i32, i32* %208, align 4
  br i1 %207, label %210, label %212

210:                                              ; preds = %203
  %211 = add i32 %209, -1
  store i32 %211, i32* %208, align 4
  br label %212

212:                                              ; preds = %210, %203
  %213 = phi i32 [ %211, %210 ], [ %209, %203 ]
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %212
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %201) #13
  br label %216

216:                                              ; preds = %200, %212, %215
  br i1 %99, label %230, label %217

217:                                              ; preds = %216
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %217
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %223, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #13
  br label %230

230:                                              ; preds = %216, %226, %229
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #13
  br label %231

231:                                              ; preds = %87, %84, %70, %88, %230
  %232 = call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %1) #13
  %233 = bitcast %"class.blink::ThreadDebugger"* %0 to void (%"class.blink::ThreadDebugger"*, %"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.blink::SourceLocation"*)***
  %234 = load void (%"class.blink::ThreadDebugger"*, %"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.blink::SourceLocation"*)**, void (%"class.blink::ThreadDebugger"*, %"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.blink::SourceLocation"*)*** %233, align 8
  %235 = getelementptr inbounds void (%"class.blink::ThreadDebugger"*, %"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.blink::SourceLocation"*)*, void (%"class.blink::ThreadDebugger"*, %"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.blink::SourceLocation"*)** %234, i64 32
  %236 = load void (%"class.blink::ThreadDebugger"*, %"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.blink::SourceLocation"*)*, void (%"class.blink::ThreadDebugger"*, %"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"*, %"class.blink::SourceLocation"*)** %235, align 8
  call void %236(%"class.blink::ThreadDebugger"* %0, %"class.blink::ExecutionContext"* %232, i32 1, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.blink::SourceLocation"* %4) #13
  %237 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %4, i64 0, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %257, label %240

240:                                              ; preds = %231
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %257

245:                                              ; preds = %240
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  %248 = zext i32 %247 to i33
  %249 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %248, i33 1) #13
  %250 = extractvalue { i33, i1 } %249, 1
  %251 = extractvalue { i33, i1 } %249, 0
  %252 = icmp slt i33 %251, 0
  %253 = or i1 %250, %252
  br i1 %253, label %254, label %255, !prof !3

254:                                              ; preds = %245
  call void @llvm.trap() #13
  unreachable

255:                                              ; preds = %245
  %256 = trunc i33 %251 to i32
  store i32 %256, i32* %246, align 4
  br label %257

257:                                              ; preds = %231, %240, %255
  %258 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %259 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %258, align 8
  %260 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %260) #13
  %261 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %262 = icmp eq %"class.WTF::StringImpl"* %261, null
  br i1 %262, label %263, label %267

263:                                              ; preds = %257
  %264 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %264, align 8
  %265 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %266 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %265, i64* %266, align 8
  br label %274

267:                                              ; preds = %257
  %268 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %261, %"class.WTF::StringImpl"** %268, align 8
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 1
  %270 = load i32, i32* %269, align 4
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 1
  %272 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %273 = bitcast i8** %272 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %271, %"class.WTF::StringImpl"** %273, align 8
  br label %274

274:                                              ; preds = %263, %267
  %275 = phi i32 [ %270, %267 ], [ 0, %263 ]
  %276 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %275, i32* %276, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #13
  %277 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %277) #13
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %280, label %284

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %281, align 8
  %282 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %283 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %282, i64* %283, align 8
  br label %291

284:                                              ; preds = %274
  %285 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %278, %"class.WTF::StringImpl"** %285, align 8
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 1
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 1
  %289 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %290 = bitcast i8** %289 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %288, %"class.WTF::StringImpl"** %290, align 8
  br label %291

291:                                              ; preds = %280, %284
  %292 = phi i32 [ %287, %284 ], [ 0, %280 ]
  %293 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %292, i32* %293, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #13
  %294 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %294) #13
  br i1 %239, label %295, label %299

295:                                              ; preds = %291
  %296 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* null, i8** %296, align 8
  %297 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %298 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %297, i64* %298, align 8
  br label %306

299:                                              ; preds = %291
  %300 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %238, %"class.WTF::StringImpl"** %300, align 8
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 1
  %304 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %305 = bitcast i8** %304 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %303, %"class.WTF::StringImpl"** %305, align 8
  br label %306

306:                                              ; preds = %295, %299
  %307 = phi i32 [ %302, %299 ], [ 0, %295 ]
  %308 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %307, i32* %308, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #13
  %309 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %4, i64 0, i32 1
  %310 = load i32, i32* %309, align 8
  %311 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %4, i64 0, i32 2
  %312 = load i32, i32* %311, align 4
  %313 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %314 = load %"class.v8_inspector::V8StackTrace"*, %"class.v8_inspector::V8StackTrace"** %313, align 8
  store %"class.v8_inspector::V8StackTrace"* null, %"class.v8_inspector::V8StackTrace"** %313, align 8
  %315 = getelementptr inbounds %"class.blink::SourceLocation", %"class.blink::SourceLocation"* %4, i64 0, i32 4
  %316 = load i32, i32* %315, align 8
  %317 = bitcast %"class.v8_inspector::V8Inspector"* %259 to i32 (%"class.v8_inspector::V8Inspector"*, %"class.v8::Context"*, %"class.v8_inspector::StringView"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i32, i32, %"class.v8_inspector::V8StackTrace"*, i32)***
  %318 = load i32 (%"class.v8_inspector::V8Inspector"*, %"class.v8::Context"*, %"class.v8_inspector::StringView"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i32, i32, %"class.v8_inspector::V8StackTrace"*, i32)**, i32 (%"class.v8_inspector::V8Inspector"*, %"class.v8::Context"*, %"class.v8_inspector::StringView"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i32, i32, %"class.v8_inspector::V8StackTrace"*, i32)*** %317, align 8
  %319 = getelementptr inbounds i32 (%"class.v8_inspector::V8Inspector"*, %"class.v8::Context"*, %"class.v8_inspector::StringView"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i32, i32, %"class.v8_inspector::V8StackTrace"*, i32)*, i32 (%"class.v8_inspector::V8Inspector"*, %"class.v8::Context"*, %"class.v8_inspector::StringView"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i32, i32, %"class.v8_inspector::V8StackTrace"*, i32)** %318, i64 16
  %320 = load i32 (%"class.v8_inspector::V8Inspector"*, %"class.v8::Context"*, %"class.v8_inspector::StringView"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i32, i32, %"class.v8_inspector::V8StackTrace"*, i32)*, i32 (%"class.v8_inspector::V8Inspector"*, %"class.v8::Context"*, %"class.v8_inspector::StringView"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i32, i32, %"class.v8_inspector::V8StackTrace"*, i32)** %319, align 8
  %321 = call i32 %320(%"class.v8_inspector::V8Inspector"* %259, %"class.v8::Context"* %1, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %11, %"class.v8::Value"* %3, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %13, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %15, i32 %310, i32 %312, %"class.v8_inspector::V8StackTrace"* %314, i32 %316) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %294) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %277) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %260) #13
  br i1 %239, label %335, label %322

322:                                              ; preds = %306
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = and i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %328 = load i32, i32* %327, align 4
  br i1 %326, label %329, label %331

329:                                              ; preds = %322
  %330 = add i32 %328, -1
  store i32 %330, i32* %327, align 4
  br label %331

331:                                              ; preds = %329, %322
  %332 = phi i32 [ %330, %329 ], [ %328, %322 ]
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %331
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #13
  br label %335

335:                                              ; preds = %306, %331, %334
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %335
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #13
  br label %351

351:                                              ; preds = %335, %347, %350
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %353 = icmp eq %"class.WTF::StringImpl"* %352, null
  br i1 %353, label %367, label %354

354:                                              ; preds = %351
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = and i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 0
  %360 = load i32, i32* %359, align 4
  br i1 %358, label %361, label %363

361:                                              ; preds = %354
  %362 = add i32 %360, -1
  store i32 %362, i32* %359, align 4
  br label %363

363:                                              ; preds = %361, %354
  %364 = phi i32 [ %362, %361 ], [ %360, %354 ]
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %367

366:                                              ; preds = %363
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %352) #13
  br label %367

367:                                              ; preds = %351, %363, %366
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  %368 = icmp eq %"class.blink::SourceLocation"* %4, null
  br i1 %368, label %371, label %369

369:                                              ; preds = %367
  call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %4) #13
  %370 = bitcast %"class.blink::SourceLocation"* %4 to i8*
  call void @free(i8* %370) #13
  br label %371

371:                                              ; preds = %367, %369
  ret i32 %321
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.322"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.322", %"class.WTF::StringAppend.322"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #13
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.322", %"class.WTF::StringAppend.322"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #13
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !3

43:                                               ; preds = %34
  tail call void @llvm.trap() #13
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #13
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2311", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.2311"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #13
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2311"* nonnull %2, i8* %14) #13
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #13
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #13
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #13
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %39
  call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #13
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #13
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #13
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %75
  call void @llvm.trap() #13
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #13
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #13
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger23PromiseRejectionRevokedEN2v85LocalINS1_7ContextEEEj(%"class.blink::ThreadDebugger"* nocapture readonly, %"class.v8::Context"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.v8_inspector::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %8, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i64 33) #13
  %9 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.v8_inspector::V8Inspector"*, %"class.v8_inspector::V8Inspector"** %9, align 8
  %11 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %15, align 8
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %16, i64* %17, align 8
  br label %25

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %24, align 8
  br label %25

25:                                               ; preds = %14, %18
  %26 = phi i32 [ %21, %18 ], [ 0, %14 ]
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %26, i32* %27, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #13
  %28 = bitcast %"class.v8_inspector::V8Inspector"* %10 to void (%"class.v8_inspector::V8Inspector"*, %"class.v8::Context"*, i32, %"class.v8_inspector::StringView"*)***
  %29 = load void (%"class.v8_inspector::V8Inspector"*, %"class.v8::Context"*, i32, %"class.v8_inspector::StringView"*)**, void (%"class.v8_inspector::V8Inspector"*, %"class.v8::Context"*, i32, %"class.v8_inspector::StringView"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.v8_inspector::V8Inspector"*, %"class.v8::Context"*, i32, %"class.v8_inspector::StringView"*)*, void (%"class.v8_inspector::V8Inspector"*, %"class.v8::Context"*, i32, %"class.v8_inspector::StringView"*)** %29, i64 17
  %31 = load void (%"class.v8_inspector::V8Inspector"*, %"class.v8::Context"*, i32, %"class.v8_inspector::StringView"*)*, void (%"class.v8_inspector::V8Inspector"*, %"class.v8::Context"*, i32, %"class.v8_inspector::StringView"*)** %30, align 8
  call void %31(%"class.v8_inspector::V8Inspector"* %10, %"class.v8::Context"* %1, i32 %2, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #13
  br label %47

47:                                               ; preds = %25, %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger16beginUserGestureEv(%"class.blink::ThreadDebugger"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 2
  %3 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2, align 8
  %4 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink16CurrentDOMWindowEPN2v87IsolateE(%"class.v8::Isolate"* %3) #13
  %5 = icmp eq %"class.blink::LocalDOMWindow"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.blink::Frame"** %7 to %"class.blink::LocalFrame"**
  %9 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %8, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi %"class.blink::LocalFrame"* [ %9, %6 ], [ null, %1 ]
  tail call void @_ZN5blink10LocalFrame20NotifyUserActivationEPS0_NS_5mojom30UserActivationNotificationTypeEb(%"class.blink::LocalFrame"* %11, i32 2, i1 zeroext false) #13
  ret void
}

declare %"class.blink::LocalDOMWindow"* @_ZN5blink16CurrentDOMWindowEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN5blink10LocalFrame20NotifyUserActivationEPS0_NS_5mojom30UserActivationNotificationTypeEb(%"class.blink::LocalFrame"*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::StringBuffer"* @_ZN5blink14ThreadDebugger12valueSubtypeEN2v85LocalINS1_5ValueEEE(%"class.blink::ThreadDebugger"* nocapture readonly, %"class.v8::Value"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 2
  %9 = bitcast %"class.v8::Isolate"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 8
  %12 = inttoptr i64 %11 to %"class.blink::V8PerIsolateData"**
  %13 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %12, align 8
  %14 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %13, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %1) #13
  br i1 %14, label %69, label %15

15:                                               ; preds = %2
  %16 = load i64, i64* %9, align 8
  %17 = add i64 %16, 8
  %18 = inttoptr i64 %17 to %"class.blink::V8PerIsolateData"**
  %19 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %18, align 8
  %20 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %19, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink10V8NodeList18wrapper_type_info_E, %"class.v8::Value"* %1) #13
  br i1 %20, label %69, label %21

21:                                               ; preds = %15
  %22 = load i64, i64* %9, align 8
  %23 = add i64 %22, 8
  %24 = inttoptr i64 %23 to %"class.blink::V8PerIsolateData"**
  %25 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %24, align 8
  %26 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %25, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink14V8DOMTokenList18wrapper_type_info_E, %"class.v8::Value"* %1) #13
  br i1 %26, label %69, label %27

27:                                               ; preds = %21
  %28 = load i64, i64* %9, align 8
  %29 = add i64 %28, 8
  %30 = inttoptr i64 %29 to %"class.blink::V8PerIsolateData"**
  %31 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %30, align 8
  %32 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %31, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink16V8HTMLCollection18wrapper_type_info_E, %"class.v8::Value"* %1) #13
  br i1 %32, label %69, label %33

33:                                               ; preds = %27
  %34 = load i64, i64* %9, align 8
  %35 = add i64 %34, 8
  %36 = inttoptr i64 %35 to %"class.blink::V8PerIsolateData"**
  %37 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %37, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink19V8HTMLAllCollection18wrapper_type_info_E, %"class.v8::Value"* %1) #13
  br i1 %38, label %69, label %39

39:                                               ; preds = %33
  %40 = load i64, i64* %9, align 8
  %41 = add i64 %40, 8
  %42 = inttoptr i64 %41 to %"class.blink::V8PerIsolateData"**
  %43 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %42, align 8
  %44 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %43, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink14V8DOMException18wrapper_type_info_E, %"class.v8::Value"* %1) #13
  br i1 %44, label %69, label %45

45:                                               ; preds = %39
  %46 = load i64, i64* %9, align 8
  %47 = add i64 %46, 8
  %48 = inttoptr i64 %47 to %"class.blink::V8PerIsolateData"**
  %49 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %48, align 8
  %50 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %49, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Blob18wrapper_type_info_E, %"class.v8::Value"* %1) #13
  br i1 %50, label %69, label %51

51:                                               ; preds = %45
  %52 = load i64, i64* %9, align 8
  %53 = add i64 %52, 8
  %54 = inttoptr i64 %53 to %"class.blink::V8PerIsolateData"**
  %55 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %54, align 8
  %56 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %55, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8TrustedHTML18wrapper_type_info_E, %"class.v8::Value"* %1) #13
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = load i64, i64* %9, align 8
  %59 = add i64 %58, 8
  %60 = inttoptr i64 %59 to %"class.blink::V8PerIsolateData"**
  %61 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %60, align 8
  %62 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %61, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink15V8TrustedScript18wrapper_type_info_E, %"class.v8::Value"* %1) #13
  br i1 %62, label %69, label %63

63:                                               ; preds = %57
  %64 = load i64, i64* %9, align 8
  %65 = add i64 %64, 8
  %66 = inttoptr i64 %65 to %"class.blink::V8PerIsolateData"**
  %67 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %66, align 8
  %68 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %67, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink18V8TrustedScriptURL18wrapper_type_info_E, %"class.v8::Value"* %1) #13
  br i1 %68, label %69, label %79

69:                                               ; preds = %51, %57, %63, %45, %39, %15, %21, %27, %33, %2
  %70 = phi %"class.WTF::StringView"* [ %3, %2 ], [ %4, %33 ], [ %4, %27 ], [ %4, %21 ], [ %4, %15 ], [ %5, %39 ], [ %6, %45 ], [ %7, %63 ], [ %7, %57 ], [ %7, %51 ]
  %71 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN5blink14ThreadDebugger12valueSubtypeEN2v85LocalINS1_5ValueEEEE5kNode, i64 0, i64 0), %2 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @_ZZN5blink14ThreadDebugger12valueSubtypeEN2v85LocalINS1_5ValueEEEE6kArray, i64 0, i64 0), %33 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @_ZZN5blink14ThreadDebugger12valueSubtypeEN2v85LocalINS1_5ValueEEEE6kArray, i64 0, i64 0), %27 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @_ZZN5blink14ThreadDebugger12valueSubtypeEN2v85LocalINS1_5ValueEEEE6kArray, i64 0, i64 0), %21 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @_ZZN5blink14ThreadDebugger12valueSubtypeEN2v85LocalINS1_5ValueEEEE6kArray, i64 0, i64 0), %15 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), %39 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN5blink14ThreadDebugger12valueSubtypeEN2v85LocalINS1_5ValueEEEE5kBlob, i64 0, i64 0), %45 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @_ZZN5blink14ThreadDebugger12valueSubtypeEN2v85LocalINS1_5ValueEEEE12kTrustedType, i64 0, i64 0), %63 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @_ZZN5blink14ThreadDebugger12valueSubtypeEN2v85LocalINS1_5ValueEEEE12kTrustedType, i64 0, i64 0), %57 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @_ZZN5blink14ThreadDebugger12valueSubtypeEN2v85LocalINS1_5ValueEEEE12kTrustedType, i64 0, i64 0), %51 ]
  %72 = phi i32 [ 4, %2 ], [ 5, %33 ], [ 5, %27 ], [ 5, %21 ], [ 5, %15 ], [ 5, %39 ], [ 4, %45 ], [ 11, %63 ], [ 11, %57 ], [ 11, %51 ]
  %73 = bitcast %"class.WTF::StringView"* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #13
  %74 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %75 = bitcast %"class.WTF::StringView"* %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %70, i64 0, i32 1
  store i8* %71, i8** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %70, i64 0, i32 2
  store i32 %72, i32* %77, align 8
  %78 = call %"class.v8_inspector::StringBuffer"* @_ZN5blink25ToV8InspectorStringBufferERKN3WTF10StringViewE(%"class.WTF::StringView"* nonnull dereferenceable(24) %70) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #13
  br label %79

79:                                               ; preds = %69, %63
  %80 = phi %"class.v8_inspector::StringBuffer"* [ null, %63 ], [ %78, %69 ]
  ret %"class.v8_inspector::StringBuffer"* %80
}

declare %"class.v8_inspector::StringBuffer"* @_ZN5blink25ToV8InspectorStringBufferERKN3WTF10StringViewE(%"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::StringBuffer"* @_ZN5blink14ThreadDebugger26descriptionForValueSubtypeEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEE(%"class.blink::ThreadDebugger"* nocapture readonly, %"class.v8::Context"* nocapture readnone, %"class.v8::Value"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringBuilder", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 2
  %16 = bitcast %"class.v8::Isolate"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, 8
  %19 = inttoptr i64 %18 to %"class.blink::V8PerIsolateData"**
  %20 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %19, align 8
  %21 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %20, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8TrustedHTML18wrapper_type_info_E, %"class.v8::Value"* %2) #13
  %22 = load i64, i64* %16, align 8
  %23 = add i64 %22, 8
  %24 = inttoptr i64 %23 to %"class.blink::V8PerIsolateData"**
  %25 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %24, align 8
  br i1 %21, label %26, label %73

26:                                               ; preds = %3
  %27 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %25, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8TrustedHTML18wrapper_type_info_E, %"class.v8::Value"* %2) #13
  br i1 %27, label %28, label %50

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i64 %30, -4294967296
  %35 = zext i32 %33 to i64
  %36 = or i64 %34, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load i16, i16* %38, align 2
  switch i16 %39, label %44 [
    i16 1057, label %40
    i16 1056, label %40
    i16 1040, label %40
  ]

40:                                               ; preds = %28, %28, %28
  %41 = add i64 %30, 19
  %42 = inttoptr i64 %41 to i8**
  %43 = load i8*, i8** %42, align 1
  br label %47

44:                                               ; preds = %28
  %45 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %46 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %45, i32 1) #13
  br label %47

47:                                               ; preds = %44, %40
  %48 = phi i8* [ %43, %40 ], [ %46, %44 ]
  %49 = bitcast i8* %48 to %"class.blink::TrustedHTML"*
  br label %50

50:                                               ; preds = %26, %47
  %51 = phi %"class.blink::TrustedHTML"* [ %49, %47 ], [ null, %26 ]
  %52 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #13
  %53 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink11TrustedHTML8toStringEv(%"class.blink::TrustedHTML"* %51) #13
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %57, label %61

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %58, align 8
  %59 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %60 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %59, i64* %60, align 8
  br label %68

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 1
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %67 = bitcast i8** %66 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %67, align 8
  br label %68

68:                                               ; preds = %57, %61
  %69 = phi i32 [ %64, %61 ], [ 0, %57 ]
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %69, i32* %70, align 8
  %71 = call %"class.v8_inspector::StringBuffer"* @_ZN5blink25ToV8InspectorStringBufferERKN3WTF10StringViewE(%"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  %72 = ptrtoint %"class.v8_inspector::StringBuffer"* %71 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #13
  br label %512

73:                                               ; preds = %3
  %74 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %25, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink15V8TrustedScript18wrapper_type_info_E, %"class.v8::Value"* %2) #13
  %75 = load i64, i64* %16, align 8
  %76 = add i64 %75, 8
  %77 = inttoptr i64 %76 to %"class.blink::V8PerIsolateData"**
  %78 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %77, align 8
  br i1 %74, label %79, label %126

79:                                               ; preds = %73
  %80 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %78, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink15V8TrustedScript18wrapper_type_info_E, %"class.v8::Value"* %2) #13
  br i1 %80, label %81, label %103

81:                                               ; preds = %79
  %82 = bitcast %"class.v8::Value"* %2 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, -1
  %85 = inttoptr i64 %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = and i64 %83, -4294967296
  %88 = zext i32 %86 to i64
  %89 = or i64 %87, %88
  %90 = add i64 %89, 7
  %91 = inttoptr i64 %90 to i16*
  %92 = load i16, i16* %91, align 2
  switch i16 %92, label %97 [
    i16 1057, label %93
    i16 1056, label %93
    i16 1040, label %93
  ]

93:                                               ; preds = %81, %81, %81
  %94 = add i64 %83, 19
  %95 = inttoptr i64 %94 to i8**
  %96 = load i8*, i8** %95, align 1
  br label %100

97:                                               ; preds = %81
  %98 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %99 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %98, i32 1) #13
  br label %100

100:                                              ; preds = %97, %93
  %101 = phi i8* [ %96, %93 ], [ %99, %97 ]
  %102 = bitcast i8* %101 to %"class.blink::TrustedScript"*
  br label %103

103:                                              ; preds = %79, %100
  %104 = phi %"class.blink::TrustedScript"* [ %102, %100 ], [ null, %79 ]
  %105 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #13
  %106 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13TrustedScript8toStringEv(%"class.blink::TrustedScript"* %104) #13
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %110, label %114

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %111, align 8
  %112 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %113 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %112, i64* %113, align 8
  br label %121

114:                                              ; preds = %103
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %115, align 8
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 1
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %120 = bitcast i8** %119 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %118, %"class.WTF::StringImpl"** %120, align 8
  br label %121

121:                                              ; preds = %110, %114
  %122 = phi i32 [ %117, %114 ], [ 0, %110 ]
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %122, i32* %123, align 8
  %124 = call %"class.v8_inspector::StringBuffer"* @_ZN5blink25ToV8InspectorStringBufferERKN3WTF10StringViewE(%"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  %125 = ptrtoint %"class.v8_inspector::StringBuffer"* %124 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #13
  br label %512

126:                                              ; preds = %73
  %127 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %78, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink18V8TrustedScriptURL18wrapper_type_info_E, %"class.v8::Value"* %2) #13
  %128 = load i64, i64* %16, align 8
  %129 = add i64 %128, 8
  %130 = inttoptr i64 %129 to %"class.blink::V8PerIsolateData"**
  %131 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %130, align 8
  br i1 %127, label %132, label %179

132:                                              ; preds = %126
  %133 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %131, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink18V8TrustedScriptURL18wrapper_type_info_E, %"class.v8::Value"* %2) #13
  br i1 %133, label %134, label %156

134:                                              ; preds = %132
  %135 = bitcast %"class.v8::Value"* %2 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, -1
  %138 = inttoptr i64 %137 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = and i64 %136, -4294967296
  %141 = zext i32 %139 to i64
  %142 = or i64 %140, %141
  %143 = add i64 %142, 7
  %144 = inttoptr i64 %143 to i16*
  %145 = load i16, i16* %144, align 2
  switch i16 %145, label %150 [
    i16 1057, label %146
    i16 1056, label %146
    i16 1040, label %146
  ]

146:                                              ; preds = %134, %134, %134
  %147 = add i64 %136, 19
  %148 = inttoptr i64 %147 to i8**
  %149 = load i8*, i8** %148, align 1
  br label %153

150:                                              ; preds = %134
  %151 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %152 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %151, i32 1) #13
  br label %153

153:                                              ; preds = %150, %146
  %154 = phi i8* [ %149, %146 ], [ %152, %150 ]
  %155 = bitcast i8* %154 to %"class.blink::TrustedScriptURL"*
  br label %156

156:                                              ; preds = %132, %153
  %157 = phi %"class.blink::TrustedScriptURL"* [ %155, %153 ], [ null, %132 ]
  %158 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %158) #13
  %159 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink16TrustedScriptURL8toStringEv(%"class.blink::TrustedScriptURL"* %157) #13
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %159, i64 0, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %163, label %167

163:                                              ; preds = %156
  %164 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %164, align 8
  %165 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %166 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %165, i64* %166, align 8
  br label %174

167:                                              ; preds = %156
  %168 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %161, %"class.WTF::StringImpl"** %168, align 8
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 1
  %172 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %173 = bitcast i8** %172 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %171, %"class.WTF::StringImpl"** %173, align 8
  br label %174

174:                                              ; preds = %163, %167
  %175 = phi i32 [ %170, %167 ], [ 0, %163 ]
  %176 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %175, i32* %176, align 8
  %177 = call %"class.v8_inspector::StringBuffer"* @_ZN5blink25ToV8InspectorStringBufferERKN3WTF10StringViewE(%"class.WTF::StringView"* nonnull dereferenceable(24) %6) #13
  %178 = ptrtoint %"class.v8_inspector::StringBuffer"* %177 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %158) #13
  br label %512

179:                                              ; preds = %126
  %180 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %131, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %2) #13
  br i1 %180, label %181, label %512

181:                                              ; preds = %179
  %182 = load i64, i64* %16, align 8
  %183 = add i64 %182, 8
  %184 = inttoptr i64 %183 to %"class.blink::V8PerIsolateData"**
  %185 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %184, align 8
  %186 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %185, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %2) #13
  br i1 %186, label %187, label %209

187:                                              ; preds = %181
  %188 = bitcast %"class.v8::Value"* %2 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = add i64 %189, -1
  %191 = inttoptr i64 %190 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = and i64 %189, -4294967296
  %194 = zext i32 %192 to i64
  %195 = or i64 %193, %194
  %196 = add i64 %195, 7
  %197 = inttoptr i64 %196 to i16*
  %198 = load i16, i16* %197, align 2
  switch i16 %198, label %203 [
    i16 1057, label %199
    i16 1056, label %199
    i16 1040, label %199
  ]

199:                                              ; preds = %187, %187, %187
  %200 = add i64 %189, 19
  %201 = inttoptr i64 %200 to i8**
  %202 = load i8*, i8** %201, align 1
  br label %206

203:                                              ; preds = %187
  %204 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %205 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %204, i32 1) #13
  br label %206

206:                                              ; preds = %203, %199
  %207 = phi i8* [ %202, %199 ], [ %205, %203 ]
  %208 = bitcast i8* %207 to %"class.blink::Node"*
  br label %209

209:                                              ; preds = %181, %206
  %210 = phi %"class.blink::Node"* [ %208, %206 ], [ null, %181 ]
  %211 = bitcast %"class.WTF::StringBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %211) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %211, i8 -86, i64 48, i1 false)
  %212 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %212, align 8
  %213 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 1
  %214 = bitcast %union.anon.2108* %213 to i8*
  store i8 0, i8* %214, align 8
  %215 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 2
  store i32 0, i32* %215, align 8
  %216 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 3
  store i8 1, i8* %216, align 4
  %217 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 4
  store i8 0, i8* %217, align 1
  %218 = bitcast %"class.blink::Node"* %210 to i32 (%"class.blink::Node"*)***
  %219 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %218, align 8
  %220 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %219, i64 30
  %221 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %220, align 8
  %222 = tail call i32 %221(%"class.blink::Node"* %210) #13
  switch i32 %222, label %428 [
    i32 1, label %223
    i32 10, label %389
  ]

223:                                              ; preds = %209
  %224 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %224) #13
  %225 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %210, i64 1, i32 2
  %226 = bitcast %"class.blink::Member.831"* %225 to %"class.blink::QualifiedName"*
  %227 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"* %226) #13
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %229, label %234

229:                                              ; preds = %223
  %230 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %230, align 8
  %231 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %232 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 0, i32* %233, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  br label %254

234:                                              ; preds = %223
  %235 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %227, %"class.WTF::StringImpl"** %235, align 8
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 1
  %239 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %240 = bitcast i8** %239 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %238, %"class.WTF::StringImpl"** %240, align 8
  %241 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %237, i32* %241, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %234
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %234
  %251 = phi i32 [ %249, %248 ], [ %247, %234 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #13
  br label %254

254:                                              ; preds = %229, %250, %253
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %224) #13
  %255 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %210, i64 1, i32 3
  %256 = bitcast %"class.blink::Member.833"* %255 to %"class.blink::ElementData"**
  %257 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %256, align 8
  %258 = icmp eq %"class.blink::ElementData"* %257, null
  br i1 %258, label %316, label %259

259:                                              ; preds = %254
  %260 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %257, i64 0, i32 3, i32 0, i32 0, i32 0
  %261 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %260, align 8
  %262 = icmp eq %"class.WTF::StringImpl"* %261, null
  br i1 %262, label %316, label %263

263:                                              ; preds = %259
  %264 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %265 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %257, i64 0, i32 0, i32 0, i32 0
  %266 = load i32, i32* %265, align 4
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %276, label %269

269:                                              ; preds = %263
  %270 = bitcast %"class.blink::ElementData"* %257 to %"class.blink::UniqueElementData"*
  %271 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %257, i64 1, i32 1
  %272 = bitcast %"class.blink::Member.911"* %271 to %"class.blink::Attribute"**
  %273 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %272, align 8
  %274 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %270, i64 0, i32 2, i32 0, i32 0, i32 2
  %275 = load i32, i32* %274, align 4
  br label %281

276:                                              ; preds = %263
  %277 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %257, i64 1
  %278 = bitcast %"class.blink::ElementData"* %277 to %"class.blink::Attribute"*
  %279 = lshr i32 %266, 1
  %280 = and i32 %279, 268435455
  br label %281

281:                                              ; preds = %276, %269
  %282 = phi %"class.blink::Attribute"* [ %278, %276 ], [ %273, %269 ]
  %283 = phi i32 [ %280, %276 ], [ %275, %269 ]
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %282, i64 %284
  %286 = icmp eq i32 %283, 0
  br i1 %286, label %314, label %287

287:                                              ; preds = %281
  %288 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %264, i64 0, i32 0, i32 0
  %289 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %288, align 8
  %290 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %289, i64 0, i32 3, i32 0, i32 0, i32 0
  %291 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %289, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %292

292:                                              ; preds = %307, %287
  %293 = phi %"class.blink::Attribute"* [ %282, %287 ], [ %308, %307 ]
  %294 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %293, i64 0, i32 0, i32 0, i32 0
  %295 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %294, align 8
  %296 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %295, %289
  br i1 %296, label %310, label %297

297:                                              ; preds = %292
  %298 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %295, i64 0, i32 3, i32 0, i32 0, i32 0
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %298, align 8
  %300 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %290, align 8
  %301 = icmp eq %"class.WTF::StringImpl"* %299, %300
  br i1 %301, label %302, label %307

302:                                              ; preds = %297
  %303 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %295, i64 0, i32 4, i32 0, i32 0, i32 0
  %304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %303, align 8
  %305 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %306 = icmp eq %"class.WTF::StringImpl"* %304, %305
  br i1 %306, label %310, label %307

307:                                              ; preds = %302, %297
  %308 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %293, i64 1
  %309 = icmp eq %"class.blink::Attribute"* %308, %285
  br i1 %309, label %314, label %292

310:                                              ; preds = %302, %292
  %311 = icmp eq %"class.blink::Attribute"* %293, null
  br i1 %311, label %314, label %312

312:                                              ; preds = %310
  %313 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %293, i64 0, i32 1
  br label %318

314:                                              ; preds = %307, %310, %281
  %315 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %318

316:                                              ; preds = %259, %254
  %317 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %318

318:                                              ; preds = %312, %314, %316
  %319 = phi %"class.WTF::AtomicString"* [ %317, %316 ], [ %315, %314 ], [ %313, %312 ]
  %320 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %319, i64 0, i32 0, i32 0, i32 0
  %321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %320, align 8
  %322 = icmp eq %"class.WTF::StringImpl"* %321, null
  br i1 %322, label %346, label %323

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 1
  %325 = load i32, i32* %324, align 4
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %346, label %327

327:                                              ; preds = %323
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %7, i8 zeroext 35) #13
  %328 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %328) #13
  %329 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %320, align 8
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %331, label %335

331:                                              ; preds = %327
  %332 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %332, align 8
  %333 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %334 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %333, i64* %334, align 8
  br label %342

335:                                              ; preds = %327
  %336 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %329, %"class.WTF::StringImpl"** %336, align 8
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 1
  %338 = load i32, i32* %337, align 4
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 1
  %340 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %341 = bitcast i8** %340 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %339, %"class.WTF::StringImpl"** %341, align 8
  br label %342

342:                                              ; preds = %331, %335
  %343 = phi i32 [ %338, %335 ], [ 0, %331 ]
  %344 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %343, i32* %344, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %328) #13
  %345 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %256, align 8
  br label %346

346:                                              ; preds = %318, %342, %323
  %347 = phi %"class.blink::ElementData"* [ %257, %318 ], [ %345, %342 ], [ %257, %323 ]
  %348 = icmp eq %"class.blink::ElementData"* %347, null
  br i1 %348, label %462, label %349

349:                                              ; preds = %346
  %350 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %347, i64 0, i32 2, i32 0, i32 0
  %351 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %350, align 8
  %352 = icmp eq %"class.blink::SpaceSplitString::Data"* %351, null
  br i1 %352, label %462, label %353

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %351, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %354) #13
  %355 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %351, i64 0, i32 2, i32 0, i32 0, i32 2
  %356 = load i32, i32* %355, align 4
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %366, label %358

358:                                              ; preds = %353
  %359 = bitcast %"class.WTF::StringView"* %10 to i8*
  %360 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %351, i64 0, i32 2
  %361 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  %362 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %363 = bitcast i8** %362 to %"class.WTF::StringImpl"**
  %364 = bitcast %"class.WTF::StringView"* %10 to i64*
  %365 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  br label %373

366:                                              ; preds = %385, %353
  %367 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %351, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %367) #13
  %368 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %351, i64 0, i32 0, i32 0, i32 0, i32 0
  %369 = load i32, i32* %368, align 4
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %462

371:                                              ; preds = %366
  call void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"* nonnull %351) #13
  %372 = bitcast %"class.blink::SpaceSplitString::Data"* %351 to i8*
  call void @free(i8* %372) #13
  br label %462

373:                                              ; preds = %385, %358
  %374 = phi i32 [ 0, %358 ], [ %387, %385 ]
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %7, i8 zeroext 46) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %359) #13
  %375 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.916"* %360, i32 %374) #13
  %376 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %375, i64 0, i32 0, i32 0, i32 0
  %377 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %376, align 8
  %378 = icmp eq %"class.WTF::StringImpl"* %377, null
  br i1 %378, label %379, label %381

379:                                              ; preds = %373
  store i8* null, i8** %362, align 8
  %380 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %380, i64* %364, align 8
  br label %385

381:                                              ; preds = %373
  store %"class.WTF::StringImpl"* %377, %"class.WTF::StringImpl"** %361, align 8
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 1
  %383 = load i32, i32* %382, align 4
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 1
  store %"class.WTF::StringImpl"* %384, %"class.WTF::StringImpl"** %363, align 8
  br label %385

385:                                              ; preds = %379, %381
  %386 = phi i32 [ %383, %381 ], [ 0, %379 ]
  store i32 %386, i32* %365, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %359) #13
  %387 = add nuw i32 %374, 1
  %388 = icmp eq i32 %387, %356
  br i1 %388, label %366, label %373

389:                                              ; preds = %209
  %390 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %390) #13
  %391 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %392 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %391, i64* %392, align 8
  %393 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8** %393, align 8
  %394 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 10, i32* %394, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %390) #13
  %395 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %395) #13
  %396 = bitcast %"class.blink::Node"* %210 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %397 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %396, align 8
  %398 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %397, i64 27
  %399 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %398, align 8
  %400 = call %"class.WTF::StringImpl"* %399(%"class.blink::Node"* %210) #13
  %401 = icmp eq %"class.WTF::StringImpl"* %400, null
  br i1 %401, label %402, label %407

402:                                              ; preds = %389
  %403 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %403, align 8
  %404 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %405 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %404, i64* %405, align 8
  %406 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 0, i32* %406, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  br label %427

407:                                              ; preds = %389
  %408 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %400, %"class.WTF::StringImpl"** %408, align 8
  %409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 1
  %410 = load i32, i32* %409, align 4
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 1
  %412 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %413 = bitcast i8** %412 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %411, %"class.WTF::StringImpl"** %413, align 8
  %414 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %410, i32* %414, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %416 = load atomic i32, i32* %415 monotonic, align 4
  %417 = and i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 0
  %420 = load i32, i32* %419, align 4
  br i1 %418, label %421, label %423

421:                                              ; preds = %407
  %422 = add i32 %420, -1
  store i32 %422, i32* %419, align 4
  br label %423

423:                                              ; preds = %421, %407
  %424 = phi i32 [ %422, %421 ], [ %420, %407 ]
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %427

426:                                              ; preds = %423
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %400) #13
  br label %427

427:                                              ; preds = %402, %423, %426
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %395) #13
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %7, i8 zeroext 62) #13
  br label %462

428:                                              ; preds = %209
  %429 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %429) #13
  %430 = bitcast %"class.blink::Node"* %210 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %431 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %430, align 8
  %432 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %431, i64 27
  %433 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %432, align 8
  %434 = tail call %"class.WTF::StringImpl"* %433(%"class.blink::Node"* %210) #13
  %435 = icmp eq %"class.WTF::StringImpl"* %434, null
  br i1 %435, label %436, label %441

436:                                              ; preds = %428
  %437 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %437, align 8
  %438 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %439 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %438, i64* %439, align 8
  %440 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 0, i32* %440, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  br label %461

441:                                              ; preds = %428
  %442 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %434, %"class.WTF::StringImpl"** %442, align 8
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 0, i32 1
  %444 = load i32, i32* %443, align 4
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 1
  %446 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %447 = bitcast i8** %446 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %445, %"class.WTF::StringImpl"** %447, align 8
  %448 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %444, i32* %448, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  %449 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %450 = load atomic i32, i32* %449 monotonic, align 4
  %451 = and i32 %450, 2
  %452 = icmp eq i32 %451, 0
  %453 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 0, i32 0
  %454 = load i32, i32* %453, align 4
  br i1 %452, label %455, label %457

455:                                              ; preds = %441
  %456 = add i32 %454, -1
  store i32 %456, i32* %453, align 4
  br label %457

457:                                              ; preds = %455, %441
  %458 = phi i32 [ %456, %455 ], [ %454, %441 ]
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %460, label %461

460:                                              ; preds = %457
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %434) #13
  br label %461

461:                                              ; preds = %436, %457, %460
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %429) #13
  br label %462

462:                                              ; preds = %349, %346, %371, %366, %461, %427
  %463 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %463) #13
  %464 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %7) #13
  %465 = icmp eq %"class.WTF::StringImpl"* %464, null
  br i1 %465, label %466, label %470

466:                                              ; preds = %462
  %467 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %467, align 8
  %468 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %469 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %468, i64* %469, align 8
  br label %477

470:                                              ; preds = %462
  %471 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %464, %"class.WTF::StringImpl"** %471, align 8
  %472 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %464, i64 0, i32 1
  %473 = load i32, i32* %472, align 4
  %474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %464, i64 1
  %475 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %476 = bitcast i8** %475 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %474, %"class.WTF::StringImpl"** %476, align 8
  br label %477

477:                                              ; preds = %466, %470
  %478 = phi i32 [ %473, %470 ], [ 0, %466 ]
  %479 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %478, i32* %479, align 8
  %480 = call %"class.v8_inspector::StringBuffer"* @_ZN5blink25ToV8InspectorStringBufferERKN3WTF10StringViewE(%"class.WTF::StringView"* nonnull dereferenceable(24) %14) #13
  %481 = ptrtoint %"class.v8_inspector::StringBuffer"* %480 to i64
  br i1 %465, label %495, label %482

482:                                              ; preds = %477
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %464, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %484 = load atomic i32, i32* %483 monotonic, align 4
  %485 = and i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %464, i64 0, i32 0
  %488 = load i32, i32* %487, align 4
  br i1 %486, label %489, label %491

489:                                              ; preds = %482
  %490 = add i32 %488, -1
  store i32 %490, i32* %487, align 4
  br label %491

491:                                              ; preds = %489, %482
  %492 = phi i32 [ %490, %489 ], [ %488, %482 ]
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %494, label %495

494:                                              ; preds = %491
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %464) #13
  br label %495

495:                                              ; preds = %477, %491, %494
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %463) #13
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %7) #13
  %496 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %497 = icmp eq %"class.WTF::StringImpl"* %496, null
  br i1 %497, label %511, label %498

498:                                              ; preds = %495
  %499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %500 = load atomic i32, i32* %499 monotonic, align 4
  %501 = and i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 0
  %504 = load i32, i32* %503, align 4
  br i1 %502, label %505, label %507

505:                                              ; preds = %498
  %506 = add i32 %504, -1
  store i32 %506, i32* %503, align 4
  br label %507

507:                                              ; preds = %505, %498
  %508 = phi i32 [ %506, %505 ], [ %504, %498 ]
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %511

510:                                              ; preds = %507
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %496) #13
  br label %511

511:                                              ; preds = %495, %507, %510
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %211) #13
  br label %512

512:                                              ; preds = %179, %511, %174, %121, %68
  %513 = phi i64 [ %72, %68 ], [ %125, %121 ], [ %178, %174 ], [ %481, %511 ], [ 0, %179 ]
  %514 = inttoptr i64 %513 to %"class.v8_inspector::StringBuffer"*
  ret %"class.v8_inspector::StringBuffer"* %514
}

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink11TrustedHTML8toStringEv(%"class.blink::TrustedHTML"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13TrustedScript8toStringEv(%"class.blink::TrustedScript"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink16TrustedScriptURL8toStringEv(%"class.blink::TrustedScriptURL"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !4
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #13
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #13
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #13
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #13
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14ThreadDebugger27formatAccessorsAsPropertiesEN2v85LocalINS1_5ValueEEE(%"class.blink::ThreadDebugger"* nocapture readonly, %"class.v8::Value"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 2
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = tail call zeroext i1 @_ZN5blink12V8DOMWrapper9IsWrapperEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %4, %"class.v8::Value"* %1) #13
  ret i1 %5
}

declare zeroext i1 @_ZN5blink12V8DOMWrapper9IsWrapperEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN5blink14ThreadDebugger13currentTimeMSEv(%"class.blink::ThreadDebugger"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Time", align 8
  %3 = bitcast %"class.base::Time"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #13
  %4 = tail call i64 @_ZN4base4Time3NowEv() #13
  %5 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  store i64 %4, i64* %5, align 8
  %6 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* nonnull %2) #13
  %7 = fmul double %6, 1.000000e+03
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #13
  ret double %7
}

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

declare double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14ThreadDebugger23isInspectableHeapObjectEN2v85LocalINS1_6ObjectEEE(%"class.blink::ThreadDebugger"* nocapture readnone, %"class.v8::Object"*) unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZNK2v86Object18InternalFieldCountEv(%"class.v8::Object"* %1) #13
  %4 = icmp slt i32 %3, 2
  br i1 %4, label %54, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.v8::Object"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %26 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %5, %5, %5
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 1
  %21 = and i64 %20, 4294967295
  %22 = or i64 %21, %11
  %23 = tail call %"class.v8::internal::Isolate"* @_ZN2v88internal35IsolateFromNeverReadOnlySpaceObjectEm(i64 %7) #13
  %24 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %23, i64 %22) #13
  %25 = bitcast i64* %24 to %"class.v8::Value"*
  br label %28

26:                                               ; preds = %5
  %27 = tail call %"class.v8::Value"* @_ZN2v86Object20SlowGetInternalFieldEi(%"class.v8::Object"* %1, i32 1) #13
  br label %28

28:                                               ; preds = %17, %26
  %29 = phi %"class.v8::Value"* [ %27, %26 ], [ %25, %17 ]
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %53, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 3
  %35 = icmp eq i64 %34, 1
  br i1 %35, label %36, label %53

36:                                               ; preds = %31
  %37 = add i64 %33, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = and i64 %33, -4294967296
  %41 = zext i32 %39 to i64
  %42 = or i64 %40, %41
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i16*
  %45 = load i16, i16* %44, align 2
  %46 = icmp eq i16 %45, 67
  br i1 %46, label %47, label %53

47:                                               ; preds = %36
  %48 = add i64 %33, 23
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, -2
  %52 = icmp eq i32 %51, 10
  br i1 %52, label %54, label %53

53:                                               ; preds = %36, %31, %47, %28
  br label %54

54:                                               ; preds = %53, %47, %2
  %55 = phi i1 [ true, %2 ], [ true, %53 ], [ false, %47 ]
  ret i1 %55
}

declare i32 @_ZNK2v86Object18InternalFieldCountEv(%"class.v8::Object"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink14ThreadDebugger25CreateDataPropertyInArrayEN2v85LocalINS1_7ContextEEENS2_INS1_5ArrayEEEiNS2_INS1_5ValueEEE(%"class.v8::Context"*, %"class.v8::Array"*, i32, %"class.v8::Value"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %7 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  %8 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #13
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %8) #13
  %9 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %6, %"class.v8::Isolate"* %11, i32 1) #13
  %12 = bitcast %"class.v8::Array"* %1 to %"class.v8::Object"*
  %13 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %12, %"class.v8::Context"* %0, i32 %2, %"class.v8::Value"* %3) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #13
  ret i16 %13
}

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger22CreateFunctionPropertyEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEEPKcPFvRKNS1_20FunctionCallbackInfoINS1_5ValueEEEES8_NS1_14SideEffectTypeE(%"class.blink::ThreadDebugger"*, %"class.v8::Context"*, %"class.v8::Object"*, i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8*, i32) local_unnamed_addr #0 align 2 {
  %8 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #13
  %9 = bitcast %"class.blink::ThreadDebugger"* %0 to i8*
  %10 = tail call %"class.v8::External"* @_ZN2v88External3NewEPNS_7IsolateEPv(%"class.v8::Isolate"* %8, i8* %9) #13
  %11 = bitcast %"class.v8::External"* %10 to %"class.v8::Value"*
  tail call fastcc void @_ZN5blinkL30CreateFunctionPropertyWithDataEN2v85LocalINS0_7ContextEEENS1_INS0_6ObjectEEEPKcPFvRKNS0_20FunctionCallbackInfoINS0_5ValueEEEENS1_IS9_EES7_NS0_14SideEffectTypeE(%"class.v8::Context"* %1, %"class.v8::Object"* %2, i8* %3, void (%"class.v8::FunctionCallbackInfo"*)* %4, %"class.v8::Value"* %11, i8* %5, i32 %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL30CreateFunctionPropertyWithDataEN2v85LocalINS0_7ContextEEENS1_INS0_6ObjectEEEPKcPFvRKNS0_20FunctionCallbackInfoINS0_5ValueEEEENS1_IS9_EES7_NS0_14SideEffectTypeE(%"class.v8::Context"*, %"class.v8::Object"*, i8*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::Value"*, i8*, i32) unnamed_addr #0 {
  %8 = alloca %"class.v8::TryCatch", align 8
  %9 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %10 = alloca %"class.v8::TryCatch", align 8
  %11 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %12 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #13
  %13 = icmp eq i8* %2, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %7
  %15 = load i8, i8* %2, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %14, %7
  %18 = ptrtoint %"class.v8::Isolate"* %12 to i64
  %19 = add i64 %18, 200
  %20 = inttoptr i64 %19 to %"class.v8::String"*
  br label %27

21:                                               ; preds = %14
  %22 = tail call i64 @strlen(i8* nonnull %2) #15
  %23 = trunc i64 %22 to i32
  %24 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %12, i8* nonnull %2, i32 0, i32 %23) #13
  %25 = icmp eq %"class.v8::String"* %24, null
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %21
  tail call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %27

27:                                               ; preds = %17, %21, %26
  %28 = phi %"class.v8::String"* [ %20, %17 ], [ %24, %21 ], [ null, %26 ]
  %29 = tail call %"class.v8::Function"* @_ZN2v88Function3NewENS_5LocalINS_7ContextEEEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS1_IS5_EEiNS_19ConstructorBehaviorENS_14SideEffectTypeE(%"class.v8::Context"* %0, void (%"class.v8::FunctionCallbackInfo"*)* %3, %"class.v8::Value"* %4, i32 0, i32 0, i32 %6) #13
  %30 = icmp eq %"class.v8::Function"* %29, null
  br i1 %30, label %74, label %31

31:                                               ; preds = %27
  tail call void @_ZN2v88Function7SetNameENS_5LocalINS_6StringEEE(%"class.v8::Function"* nonnull %29, %"class.v8::String"* %28) #13
  %32 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #13
  %33 = icmp eq i8* %5, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = load i8, i8* %5, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %34, %31
  %38 = ptrtoint %"class.v8::Isolate"* %32 to i64
  %39 = add i64 %38, 200
  %40 = inttoptr i64 %39 to %"class.v8::String"*
  br label %47

41:                                               ; preds = %34
  %42 = tail call i64 @strlen(i8* nonnull %5) #15
  %43 = trunc i64 %42 to i32
  %44 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %32, i8* nonnull %5, i32 0, i32 %43) #13
  %45 = icmp eq %"class.v8::String"* %44, null
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %41
  tail call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %47

47:                                               ; preds = %37, %41, %46
  %48 = phi %"class.v8::String"* [ %40, %37 ], [ %44, %41 ], [ null, %46 ]
  %49 = bitcast %"class.v8::String"* %48 to %"class.v8::Value"*
  %50 = tail call %"class.v8::Function"* @_ZN2v88Function3NewENS_5LocalINS_7ContextEEEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS1_IS5_EEiNS_19ConstructorBehaviorENS_14SideEffectTypeE(%"class.v8::Context"* %0, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blinkL18ReturnDataCallbackERKN2v820FunctionCallbackInfoINS0_5ValueEEE, %"class.v8::Value"* %49, i32 0, i32 0, i32 1) #13
  %51 = icmp eq %"class.v8::Function"* %50, null
  br i1 %51, label %66, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.v8::Function"* %29 to %"class.v8::Object"*
  %54 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #13
  %55 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %54, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0), i32 1, i32 8) #13
  %56 = icmp eq %"class.v8::String"* %55, null
  br i1 %56, label %57, label %58, !prof !3

57:                                               ; preds = %52
  tail call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %58

58:                                               ; preds = %52, %57
  %59 = bitcast %"class.v8::String"* %55 to %"class.v8::Name"*
  %60 = bitcast %"class.v8::Function"* %50 to %"class.v8::Value"*
  %61 = bitcast %"class.v8::TryCatch"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %61) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 48, i1 false) #13
  %62 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #13
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %8, %"class.v8::Isolate"* %62) #13
  %63 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 24, i1 false) #13
  %64 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %9, %"class.v8::Isolate"* %64, i32 1) #13
  %65 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %53, %"class.v8::Context"* %0, %"class.v8::Name"* %59, %"class.v8::Value"* nonnull %60) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %61) #13
  br label %66

66:                                               ; preds = %47, %58
  %67 = bitcast %"class.v8::String"* %28 to %"class.v8::Name"*
  %68 = bitcast %"class.v8::Function"* %29 to %"class.v8::Value"*
  %69 = bitcast %"class.v8::TryCatch"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %69) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 48, i1 false) #13
  %70 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #13
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %10, %"class.v8::Isolate"* %70) #13
  %71 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 24, i1 false) #13
  %72 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %11, %"class.v8::Isolate"* %72, i32 1) #13
  %73 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %0, %"class.v8::Name"* %67, %"class.v8::Value"* nonnull %68) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %69) #13
  br label %74

74:                                               ; preds = %27, %66
  ret void
}

declare %"class.v8::External"* @_ZN2v88External3NewEPNS_7IsolateEPv(%"class.v8::Isolate"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger31installAdditionalCommandLineAPIEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEE(%"class.blink::ThreadDebugger"*, %"class.v8::Context"*, %"class.v8::Object"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ScriptSourceCode", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.WTF::TextPosition"*
  %9 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #13
  %10 = bitcast %"class.blink::ThreadDebugger"* %0 to i8*
  %11 = tail call %"class.v8::External"* @_ZN2v88External3NewEPNS_7IsolateEPv(%"class.v8::Isolate"* %9, i8* %10) #13
  %12 = bitcast %"class.v8::External"* %11 to %"class.v8::Value"*
  tail call fastcc void @_ZN5blinkL30CreateFunctionPropertyWithDataEN2v85LocalINS0_7ContextEEENS1_INS0_6ObjectEEEPKcPFvRKNS0_20FunctionCallbackInfoINS0_5ValueEEEENS1_IS9_EES7_NS0_14SideEffectTypeE(%"class.v8::Context"* %1, %"class.v8::Object"* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blink14ThreadDebugger25GetEventListenersCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE, %"class.v8::Value"* %12, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.6, i64 0, i64 0), i32 1) #13
  %13 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #13
  %14 = tail call %"class.v8::External"* @_ZN2v88External3NewEPNS_7IsolateEPv(%"class.v8::Isolate"* %13, i8* %10) #13
  %15 = bitcast %"class.v8::External"* %14 to %"class.v8::Value"*
  tail call fastcc void @_ZN5blinkL30CreateFunctionPropertyWithDataEN2v85LocalINS0_7ContextEEENS1_INS0_6ObjectEEEPKcPFvRKNS0_20FunctionCallbackInfoINS0_5ValueEEEENS1_IS9_EES7_NS0_14SideEffectTypeE(%"class.v8::Context"* %1, %"class.v8::Object"* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blink14ThreadDebugger25GetAccessibleNameCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE, %"class.v8::Value"* %15, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.8, i64 0, i64 0), i32 1) #13
  %16 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %1) #13
  %17 = tail call %"class.v8::External"* @_ZN2v88External3NewEPNS_7IsolateEPv(%"class.v8::Isolate"* %16, i8* %10) #13
  %18 = bitcast %"class.v8::External"* %17 to %"class.v8::Value"*
  tail call fastcc void @_ZN5blinkL30CreateFunctionPropertyWithDataEN2v85LocalINS0_7ContextEEENS1_INS0_6ObjectEEEPKcPFvRKNS0_20FunctionCallbackInfoINS0_5ValueEEEENS1_IS9_EES7_NS0_14SideEffectTypeE(%"class.v8::Context"* %1, %"class.v8::Object"* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blink14ThreadDebugger25GetAccessibleRoleCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE, %"class.v8::Value"* %18, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.10, i64 0, i64 0), i32 1) #13
  %19 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 2
  %20 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8
  %21 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %1)
  %22 = bitcast %"class.blink::ScriptSourceCode"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %22) #13
  %23 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0), i64 41) #13
  %24 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %24) #13
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %6) #13
  %25 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  store i64 0, i64* %7, align 8
  call void @_ZN5blink16ScriptSourceCodeC1ERKN3WTF6StringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKNS1_12TextPositionE(%"class.blink::ScriptSourceCode"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 5, %"class.blink::SingleCachedMetadataHandler"* null, %"class.blink::KURL"* nonnull dereferenceable(112) %6, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %8) #13
  %26 = call %"class.v8::Value"* @_ZN5blink14V8ScriptRunner27CompileAndRunInternalScriptEPN2v87IsolateEPNS_11ScriptStateERKNS_16ScriptSourceCodeE(%"class.v8::Isolate"* %20, %"class.blink::ScriptState"* %21, %"class.blink::ScriptSourceCode"* nonnull dereferenceable(168) %4) #13
  %27 = icmp eq %"class.v8::Value"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %3
  %29 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* nonnull %26) #13
  br label %30

30:                                               ; preds = %3, %28
  call void @_ZN5blink16ScriptSourceCodeD1Ev(%"class.blink::ScriptSourceCode"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %24) #13
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #13
  br label %47

47:                                               ; preds = %30, %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %22) #13
  call fastcc void @_ZN5blinkL30CreateFunctionPropertyWithDataEN2v85LocalINS0_7ContextEEENS1_INS0_6ObjectEEEPKcPFvRKNS0_20FunctionCallbackInfoINS0_5ValueEEEENS1_IS9_EES7_NS0_14SideEffectTypeE(%"class.v8::Context"* %1, %"class.v8::Object"* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blink14ThreadDebugger21MonitorEventsCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE, %"class.v8::Value"* %26, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.13, i64 0, i64 0), i32 0)
  call fastcc void @_ZN5blinkL30CreateFunctionPropertyWithDataEN2v85LocalINS0_7ContextEEENS1_INS0_6ObjectEEEPKcPFvRKNS0_20FunctionCallbackInfoINS0_5ValueEEEENS1_IS9_EES7_NS0_14SideEffectTypeE(%"class.v8::Context"* %1, %"class.v8::Object"* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blink14ThreadDebugger23UnmonitorEventsCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE, %"class.v8::Value"* %26, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.15, i64 0, i64 0), i32 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger25GetEventListenersCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 align 2 {
  %2 = alloca %"class.v8::TryCatch", align 8
  %3 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %8 = alloca %"class.v8::TryCatch", align 8
  %9 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %10 = alloca %"class.v8::TryCatch", align 8
  %11 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %12 = alloca %"class.v8::TryCatch", align 8
  %13 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %14 = alloca %"class.v8::TryCatch", align 8
  %15 = alloca %"class.v8::Isolate::DisallowJavascriptExecutionScope", align 8
  %16 = alloca %"class.WTF::Vector.2175", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %19, 1
  br i1 %20, label %334, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds i64, i64* %23, i64 4
  %25 = bitcast i64* %24 to %"class.v8::External"*
  %26 = tail call i8* @_ZNK2v88External5ValueEv(%"class.v8::External"* %25) #13
  %27 = bitcast i8* %26 to %"class.blink::ThreadDebugger"*
  %28 = load i64*, i64** %22, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = bitcast i64* %29 to %"class.v8::Isolate"**
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %31) #13
  %33 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %32) #13
  %34 = bitcast i8* %26 to i32 (%"class.blink::ThreadDebugger"*, %"class.blink::ExecutionContext"*)***
  %35 = load i32 (%"class.blink::ThreadDebugger"*, %"class.blink::ExecutionContext"*)**, i32 (%"class.blink::ThreadDebugger"*, %"class.blink::ExecutionContext"*)*** %34, align 8
  %36 = getelementptr inbounds i32 (%"class.blink::ThreadDebugger"*, %"class.blink::ExecutionContext"*)*, i32 (%"class.blink::ThreadDebugger"*, %"class.blink::ExecutionContext"*)** %35, i64 31
  %37 = load i32 (%"class.blink::ThreadDebugger"*, %"class.blink::ExecutionContext"*)*, i32 (%"class.blink::ThreadDebugger"*, %"class.blink::ExecutionContext"*)** %36, align 8
  %38 = tail call i32 %37(%"class.blink::ThreadDebugger"* %27, %"class.blink::ExecutionContext"* %33) #13
  %39 = bitcast %"class.WTF::Vector.2175"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.WTF::Vector.2175", %"class.WTF::Vector.2175"* %16, i64 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.WTF::Vector.2175", %"class.WTF::Vector.2175"* %16, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 16, i1 false) #13
  %42 = icmp eq i32 %38, 0
  br i1 %42, label %66, label %43

43:                                               ; preds = %21
  %44 = bitcast i8* %26 to %"class.v8_inspector::V8InspectorClient"*
  %45 = bitcast i8* %26 to void (%"class.v8_inspector::V8InspectorClient"*, i32)***
  %46 = load void (%"class.v8_inspector::V8InspectorClient"*, i32)**, void (%"class.v8_inspector::V8InspectorClient"*, i32)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorClient"*, i32)*, void (%"class.v8_inspector::V8InspectorClient"*, i32)** %46, i64 5
  %48 = load void (%"class.v8_inspector::V8InspectorClient"*, i32)*, void (%"class.v8_inspector::V8InspectorClient"*, i32)** %47, align 8
  tail call void %48(%"class.v8_inspector::V8InspectorClient"* %44, i32 %38) #13
  %49 = load i32, i32* %18, align 8
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %43
  %52 = load i64*, i64** %22, align 8
  %53 = getelementptr inbounds i64, i64* %52, i64 1
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 160
  %56 = inttoptr i64 %55 to %"class.v8::Value"*
  br label %61

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %59 = bitcast i64** %58 to %"class.v8::Value"**
  %60 = load %"class.v8::Value"*, %"class.v8::Value"** %59, align 8
  br label %61

61:                                               ; preds = %51, %57
  %62 = phi %"class.v8::Value"* [ %56, %51 ], [ %60, %57 ]
  call void @_ZN5blink25InspectorDOMDebuggerAgent27EventListenersInfoForTargetEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPN3WTF6VectorINS_19V8EventListenerInfoELj0ENS7_18PartitionAllocatorEEE(%"class.v8::Isolate"* %31, %"class.v8::Value"* %62, %"class.WTF::Vector.2175"* nonnull %16) #13
  %63 = load void (%"class.v8_inspector::V8InspectorClient"*, i32)**, void (%"class.v8_inspector::V8InspectorClient"*, i32)*** %45, align 8
  %64 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorClient"*, i32)*, void (%"class.v8_inspector::V8InspectorClient"*, i32)** %63, i64 6
  %65 = load void (%"class.v8_inspector::V8InspectorClient"*, i32)*, void (%"class.v8_inspector::V8InspectorClient"*, i32)** %64, align 8
  call void %65(%"class.v8_inspector::V8InspectorClient"* %44, i32 %38) #13
  br label %81

66:                                               ; preds = %21
  %67 = load i32, i32* %18, align 8
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %66
  %70 = load i64*, i64** %22, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 1
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 160
  %74 = inttoptr i64 %73 to %"class.v8::Value"*
  br label %79

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %77 = bitcast i64** %76 to %"class.v8::Value"**
  %78 = load %"class.v8::Value"*, %"class.v8::Value"** %77, align 8
  br label %79

79:                                               ; preds = %69, %75
  %80 = phi %"class.v8::Value"* [ %74, %69 ], [ %78, %75 ]
  call void @_ZN5blink25InspectorDOMDebuggerAgent27EventListenersInfoForTargetEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPN3WTF6VectorINS_19V8EventListenerInfoELj0ENS7_18PartitionAllocatorEEE(%"class.v8::Isolate"* %31, %"class.v8::Value"* %80, %"class.WTF::Vector.2175"* nonnull %16) #13
  br label %81

81:                                               ; preds = %79, %61
  %82 = call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %31) #13
  %83 = load %"struct.blink::V8EventListenerInfo"*, %"struct.blink::V8EventListenerInfo"** %40, align 8
  %84 = load i32, i32* %41, align 4
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %83, i64 %85
  %87 = icmp eq i32 %84, 0
  br i1 %87, label %110, label %88

88:                                               ; preds = %81
  %89 = bitcast %"class.v8::TryCatch"* %10 to i8*
  %90 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %11 to i8*
  %91 = bitcast %"class.v8::TryCatch"* %8 to i8*
  %92 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %9 to i8*
  %93 = ptrtoint %"class.v8::Isolate"* %31 to i64
  %94 = bitcast %"class.v8::TryCatch"* %6 to i8*
  %95 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %7 to i8*
  %96 = bitcast %"class.v8::TryCatch"* %4 to i8*
  %97 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %5 to i8*
  %98 = bitcast %"class.v8::TryCatch"* %2 to i8*
  %99 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %3 to i8*
  %100 = bitcast %"class.WTF::StringView"* %17 to i8*
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 0
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %103 = bitcast i8** %102 to %"class.WTF::StringImpl"**
  %104 = bitcast %"class.WTF::StringView"* %17 to i64*
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  %106 = bitcast %"class.v8::TryCatch"* %12 to i8*
  %107 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %13 to i8*
  %108 = bitcast %"class.v8::TryCatch"* %14 to i8*
  %109 = bitcast %"class.v8::Isolate::DisallowJavascriptExecutionScope"* %15 to i8*
  br label %171

110:                                              ; preds = %319, %81
  %111 = phi i64 [ 0, %81 ], [ %250, %319 ]
  %112 = load i64*, i64** %22, align 8
  %113 = getelementptr inbounds i64, i64* %112, i64 3
  %114 = icmp eq %"class.v8::Object"* %82, null
  %115 = bitcast %"class.v8::Object"* %82 to i64*
  %116 = getelementptr inbounds i64, i64* %112, i64 2
  %117 = select i1 %114, i64* %116, i64* %115, !prof !3
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %113, align 8
  %119 = inttoptr i64 %111 to %"class.WTF::StringImpl"*
  %120 = icmp eq i64 %111, 0
  br i1 %120, label %134, label %121

121:                                              ; preds = %110
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #13
  br label %134

134:                                              ; preds = %110, %130, %133
  %135 = load %"struct.blink::V8EventListenerInfo"*, %"struct.blink::V8EventListenerInfo"** %40, align 8
  %136 = icmp eq %"struct.blink::V8EventListenerInfo"* %135, null
  br i1 %136, label %170, label %137, !prof !2

137:                                              ; preds = %134
  %138 = bitcast %"struct.blink::V8EventListenerInfo"* %135 to i8*
  %139 = load i32, i32* %41, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %168, label %141, !prof !3

141:                                              ; preds = %137
  %142 = zext i32 %139 to i64
  %143 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %135, i64 %142
  br label %144

144:                                              ; preds = %162, %141
  %145 = phi %"struct.blink::V8EventListenerInfo"* [ %163, %162 ], [ %135, %141 ]
  %146 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %145, i64 0, i32 0, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #13
  br label %162

162:                                              ; preds = %161, %158, %144
  %163 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %145, i64 1
  %164 = icmp eq %"struct.blink::V8EventListenerInfo"* %163, %143
  br i1 %164, label %165, label %144

165:                                              ; preds = %162
  store i32 0, i32* %41, align 4
  %166 = bitcast %"class.WTF::Vector.2175"* %16 to i8**
  %167 = load i8*, i8** %166, align 8
  br label %168

168:                                              ; preds = %165, %137
  %169 = phi i8* [ %167, %165 ], [ %138, %137 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %169) #13
  store %"struct.blink::V8EventListenerInfo"* null, %"struct.blink::V8EventListenerInfo"** %40, align 8
  br label %170

170:                                              ; preds = %134, %168
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #13
  br label %334

171:                                              ; preds = %88, %319
  %172 = phi i32 [ 0, %88 ], [ %326, %319 ]
  %173 = phi %"struct.blink::V8EventListenerInfo"* [ %83, %88 ], [ %332, %319 ]
  %174 = phi i64 [ 0, %88 ], [ %250, %319 ]
  %175 = phi %"class.v8::Array"* [ null, %88 ], [ %249, %319 ]
  %176 = inttoptr i64 %174 to %"class.WTF::StringImpl"*
  %177 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %173, i64 0, i32 0, i32 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, %176
  br i1 %179, label %248, label %180

180:                                              ; preds = %171
  %181 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %181, label %199, label %182

182:                                              ; preds = %180
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %199

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i33
  %191 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %190, i33 1) #13
  %192 = extractvalue { i33, i1 } %191, 1
  %193 = extractvalue { i33, i1 } %191, 0
  %194 = icmp slt i33 %193, 0
  %195 = or i1 %192, %194
  br i1 %195, label %196, label %197, !prof !3

196:                                              ; preds = %187
  call void @llvm.trap() #13
  unreachable

197:                                              ; preds = %187
  %198 = trunc i33 %193 to i32
  store i32 %198, i32* %188, align 4
  br label %199

199:                                              ; preds = %197, %182, %180
  %200 = ptrtoint %"class.WTF::StringImpl"* %178 to i64
  %201 = icmp eq i64 %174, 0
  br i1 %201, label %215, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  br i1 %206, label %209, label %211

209:                                              ; preds = %202
  %210 = add i32 %208, -1
  store i32 %210, i32* %207, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %210, %209 ], [ %208, %202 ]
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %211
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #13
  br label %215

215:                                              ; preds = %199, %211, %214
  %216 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %31, i32 0) #13
  br i1 %181, label %217, label %219

217:                                              ; preds = %215
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %224

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 1
  %223 = bitcast %"class.WTF::StringImpl"* %222 to i8*
  br label %224

224:                                              ; preds = %217, %219
  %225 = phi %"class.WTF::StringImpl"* [ %218, %217 ], [ %178, %219 ]
  %226 = phi i8* [ null, %217 ], [ %223, %219 ]
  %227 = phi i32 [ 0, %217 ], [ %221, %219 ]
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 1
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %236, label %232

232:                                              ; preds = %224
  %233 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %31, i8* %226, i32 1, i32 %227) #13
  %234 = icmp eq %"class.v8::String"* %233, null
  br i1 %234, label %235, label %241, !prof !3

235:                                              ; preds = %232
  call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %241

236:                                              ; preds = %224
  %237 = bitcast i8* %226 to i16*
  %238 = call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %31, i16* %237, i32 1, i32 %227) #13
  %239 = icmp eq %"class.v8::String"* %238, null
  br i1 %239, label %240, label %241, !prof !3

240:                                              ; preds = %236
  call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %241

241:                                              ; preds = %232, %235, %236, %240
  %242 = phi %"class.v8::String"* [ %233, %232 ], [ null, %235 ], [ %238, %236 ], [ null, %240 ]
  %243 = bitcast %"class.v8::String"* %242 to %"class.v8::Name"*
  %244 = bitcast %"class.v8::Array"* %216 to %"class.v8::Value"*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %89) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 48, i1 false) #13
  %245 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %32) #13
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %10, %"class.v8::Isolate"* %245) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #13
  %246 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %32) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %11, %"class.v8::Isolate"* %246, i32 1) #13
  %247 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %82, %"class.v8::Context"* %32, %"class.v8::Name"* %243, %"class.v8::Value"* %244) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %89) #13
  br label %248

248:                                              ; preds = %171, %241
  %249 = phi %"class.v8::Array"* [ %216, %241 ], [ %175, %171 ]
  %250 = phi i64 [ %200, %241 ], [ %174, %171 ]
  %251 = phi i32 [ 0, %241 ], [ %172, %171 ]
  %252 = call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %31) #13
  %253 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %31, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i32 1, i32 8) #13
  %254 = icmp eq %"class.v8::String"* %253, null
  br i1 %254, label %255, label %256, !prof !3

255:                                              ; preds = %248
  call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %256

256:                                              ; preds = %248, %255
  %257 = bitcast %"class.v8::String"* %253 to %"class.v8::Name"*
  %258 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %173, i64 0, i32 4, i32 0
  %259 = bitcast %"class.v8::Object"** %258 to %"class.v8::Value"**
  %260 = load %"class.v8::Value"*, %"class.v8::Value"** %259, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %91) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 48, i1 false) #13
  %261 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %32) #13
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %8, %"class.v8::Isolate"* %261) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 24, i1 false) #13
  %262 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %32) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %9, %"class.v8::Isolate"* %262, i32 1) #13
  %263 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %252, %"class.v8::Context"* %32, %"class.v8::Name"* %257, %"class.v8::Value"* %260) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %91) #13
  %264 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %31, i8* nonnull getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i32 1, i32 10) #13
  %265 = icmp eq %"class.v8::String"* %264, null
  br i1 %265, label %266, label %267, !prof !3

266:                                              ; preds = %256
  call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %267

267:                                              ; preds = %256, %266
  %268 = bitcast %"class.v8::String"* %264 to %"class.v8::Name"*
  %269 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %173, i64 0, i32 1
  %270 = load i8, i8* %269, align 8, !range !4
  %271 = icmp eq i8 %270, 0
  %272 = select i1 %271, i64 192, i64 184
  %273 = add i64 %272, %93
  %274 = inttoptr i64 %273 to %"class.v8::Value"*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %94) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 48, i1 false) #13
  %275 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %32) #13
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %275) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 24, i1 false) #13
  %276 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %32) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %7, %"class.v8::Isolate"* %276, i32 1) #13
  %277 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %252, %"class.v8::Context"* %32, %"class.v8::Name"* %268, %"class.v8::Value"* %274) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %94) #13
  %278 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %31, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i32 1, i32 7) #13
  %279 = icmp eq %"class.v8::String"* %278, null
  br i1 %279, label %280, label %281, !prof !3

280:                                              ; preds = %267
  call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %281

281:                                              ; preds = %267, %280
  %282 = bitcast %"class.v8::String"* %278 to %"class.v8::Name"*
  %283 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %173, i64 0, i32 2
  %284 = load i8, i8* %283, align 1, !range !4
  %285 = icmp eq i8 %284, 0
  %286 = select i1 %285, i64 192, i64 184
  %287 = add i64 %286, %93
  %288 = inttoptr i64 %287 to %"class.v8::Value"*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %96) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 48, i1 false) #13
  %289 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %32) #13
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %289) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 24, i1 false) #13
  %290 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %32) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %5, %"class.v8::Isolate"* %290, i32 1) #13
  %291 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %252, %"class.v8::Context"* %32, %"class.v8::Name"* %282, %"class.v8::Value"* %288) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %96) #13
  %292 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %31, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0), i32 1, i32 4) #13
  %293 = icmp eq %"class.v8::String"* %292, null
  br i1 %293, label %294, label %295, !prof !3

294:                                              ; preds = %281
  call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %295

295:                                              ; preds = %281, %294
  %296 = bitcast %"class.v8::String"* %292 to %"class.v8::Name"*
  %297 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %173, i64 0, i32 3
  %298 = load i8, i8* %297, align 2, !range !4
  %299 = icmp eq i8 %298, 0
  %300 = select i1 %299, i64 192, i64 184
  %301 = add i64 %300, %93
  %302 = inttoptr i64 %301 to %"class.v8::Value"*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %98) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 48, i1 false) #13
  %303 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %32) #13
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %2, %"class.v8::Isolate"* %303) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 24, i1 false) #13
  %304 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %32) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %3, %"class.v8::Isolate"* %304, i32 1) #13
  %305 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %252, %"class.v8::Context"* %32, %"class.v8::Name"* %296, %"class.v8::Value"* %302) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %98) #13
  %306 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %31, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i32 1, i32 4) #13
  %307 = icmp eq %"class.v8::String"* %306, null
  br i1 %307, label %308, label %309, !prof !3

308:                                              ; preds = %295
  call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %309

309:                                              ; preds = %295, %308
  %310 = bitcast %"class.v8::String"* %306 to %"class.v8::Name"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #13
  %311 = inttoptr i64 %250 to %"class.WTF::StringImpl"*
  %312 = icmp eq i64 %250, 0
  br i1 %312, label %313, label %315

313:                                              ; preds = %309
  store i8* null, i8** %102, align 8
  %314 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %314, i64* %104, align 8
  br label %319

315:                                              ; preds = %309
  store %"class.WTF::StringImpl"* %311, %"class.WTF::StringImpl"** %101, align 8
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 1
  store %"class.WTF::StringImpl"* %318, %"class.WTF::StringImpl"** %103, align 8
  br label %319

319:                                              ; preds = %313, %315
  %320 = phi i32 [ %317, %315 ], [ 0, %313 ]
  store i32 %320, i32* %105, align 8
  %321 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %31, %"class.WTF::StringView"* nonnull dereferenceable(24) %17)
  %322 = bitcast %"class.v8::String"* %321 to %"class.v8::Value"*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %106) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 48, i1 false) #13
  %323 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %32) #13
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %12, %"class.v8::Isolate"* %323) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 24, i1 false) #13
  %324 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %32) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %13, %"class.v8::Isolate"* %324, i32 1) #13
  %325 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %252, %"class.v8::Context"* %32, %"class.v8::Name"* %310, %"class.v8::Value"* %322) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %106) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #13
  %326 = add i32 %251, 1
  %327 = bitcast %"class.v8::Object"* %252 to %"class.v8::Value"*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %108) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 48, i1 false) #13
  %328 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %32) #13
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %14, %"class.v8::Isolate"* %328) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 24, i1 false) #13
  %329 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %32) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeC1EPS0_NS1_9OnFailureE(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %15, %"class.v8::Isolate"* %329, i32 1) #13
  %330 = bitcast %"class.v8::Array"* %249 to %"class.v8::Object"*
  %331 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %330, %"class.v8::Context"* %32, i32 %251, %"class.v8::Value"* %327) #13
  call void @_ZN2v87Isolate32DisallowJavascriptExecutionScopeD1Ev(%"class.v8::Isolate::DisallowJavascriptExecutionScope"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %108) #13
  %332 = getelementptr inbounds %"struct.blink::V8EventListenerInfo", %"struct.blink::V8EventListenerInfo"* %173, i64 1
  %333 = icmp eq %"struct.blink::V8EventListenerInfo"* %332, %86
  br i1 %333, label %110, label %171

334:                                              ; preds = %1, %170
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger25GetAccessibleNameCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %87, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %11 = bitcast i64** %10 to %"class.v8::Value"**
  %12 = load %"class.v8::Value"*, %"class.v8::Value"** %11, align 8
  %13 = add i64 %9, 8
  %14 = inttoptr i64 %13 to %"class.blink::V8PerIsolateData"**
  %15 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %14, align 8
  %16 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %15, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %12) #13
  br i1 %16, label %17, label %87

17:                                               ; preds = %5
  %18 = bitcast %"class.v8::Value"* %12 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = and i64 %19, -4294967296
  %24 = zext i32 %22 to i64
  %25 = or i64 %23, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i16*
  %28 = load i16, i16* %27, align 2
  switch i16 %28, label %33 [
    i16 1057, label %29
    i16 1056, label %29
    i16 1040, label %29
  ]

29:                                               ; preds = %17, %17, %17
  %30 = add i64 %19, 19
  %31 = inttoptr i64 %30 to i8**
  %32 = load i8*, i8** %31, align 1
  br label %36

33:                                               ; preds = %17
  %34 = bitcast %"class.v8::Value"* %12 to %"class.v8::Object"*
  %35 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %34, i32 1) #13
  br label %36

36:                                               ; preds = %29, %33
  %37 = phi i8* [ %32, %29 ], [ %35, %33 ]
  %38 = icmp eq i8* %37, null
  br i1 %38, label %87, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, i8* %37, i64 16
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 12
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %87

45:                                               ; preds = %39
  %46 = bitcast i8* %37 to %"class.blink::Element"*
  %47 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element12computedNameEv(%"class.blink::Element"* nonnull %46) #13
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %66, label %49

49:                                               ; preds = %45
  %50 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %14, align 8
  %51 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %50, i64 0, i32 5, i32 0, i32 0, i32 0
  %52 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %51, align 8
  %53 = load i64*, i64** %6, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 3
  %55 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %52, i64 0, i32 3, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, %47
  br i1 %57, label %58, label %65

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %52, i64 0, i32 1, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %74, label %62

62:                                               ; preds = %58
  %63 = inttoptr i64 %60 to i64*
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* %54, align 8
  br label %74

65:                                               ; preds = %49
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %52, i64* %54, %"class.WTF::StringImpl"* nonnull %47) #13
  br label %74

66:                                               ; preds = %45
  %67 = load i64*, i64** %6, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 3
  %69 = getelementptr inbounds i64, i64* %67, i64 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 200
  %72 = inttoptr i64 %71 to i64*
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %68, align 8
  br label %87

74:                                               ; preds = %58, %62, %65
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #13
  br label %87

87:                                               ; preds = %39, %5, %36, %86, %83, %66, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger25GetAccessibleRoleCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %76, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %11 = bitcast i64** %10 to %"class.v8::Value"**
  %12 = load %"class.v8::Value"*, %"class.v8::Value"** %11, align 8
  %13 = add i64 %9, 8
  %14 = inttoptr i64 %13 to %"class.blink::V8PerIsolateData"**
  %15 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %14, align 8
  %16 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %15, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Value"* %12) #13
  br i1 %16, label %17, label %76

17:                                               ; preds = %5
  %18 = bitcast %"class.v8::Value"* %12 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = and i64 %19, -4294967296
  %24 = zext i32 %22 to i64
  %25 = or i64 %23, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i16*
  %28 = load i16, i16* %27, align 2
  switch i16 %28, label %33 [
    i16 1057, label %29
    i16 1056, label %29
    i16 1040, label %29
  ]

29:                                               ; preds = %17, %17, %17
  %30 = add i64 %19, 19
  %31 = inttoptr i64 %30 to i8**
  %32 = load i8*, i8** %31, align 1
  br label %36

33:                                               ; preds = %17
  %34 = bitcast %"class.v8::Value"* %12 to %"class.v8::Object"*
  %35 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %34, i32 1) #13
  br label %36

36:                                               ; preds = %29, %33
  %37 = phi i8* [ %32, %29 ], [ %35, %33 ]
  %38 = icmp eq i8* %37, null
  br i1 %38, label %76, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, i8* %37, i64 16
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 12
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %76

45:                                               ; preds = %39
  %46 = bitcast i8* %37 to %"class.blink::Element"*
  %47 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink7Element12computedRoleEv(%"class.blink::Element"* nonnull %46) #13
  %48 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %51, label %59

51:                                               ; preds = %45
  %52 = load i64*, i64** %6, align 8
  %53 = getelementptr inbounds i64, i64* %52, i64 3
  %54 = getelementptr inbounds i64, i64* %52, i64 1
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 200
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %53, align 8
  br label %76

59:                                               ; preds = %45
  %60 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %14, align 8
  %61 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %60, i64 0, i32 5, i32 0, i32 0, i32 0
  %62 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %61, align 8
  %63 = load i64*, i64** %6, align 8
  %64 = getelementptr inbounds i64, i64* %63, i64 3
  %65 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %62, i64 0, i32 3, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, %49
  br i1 %67, label %68, label %75

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %62, i64 0, i32 1, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = inttoptr i64 %70 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %64, align 8
  br label %76

75:                                               ; preds = %59
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %62, i64* %64, %"class.WTF::StringImpl"* nonnull %49) #13
  br label %76

76:                                               ; preds = %39, %5, %36, %75, %72, %68, %51, %1
  ret void
}

declare %"class.v8::Value"* @_ZN5blink14V8ScriptRunner27CompileAndRunInternalScriptEPN2v87IsolateEPNS_11ScriptStateERKNS_16ScriptSourceCodeE(%"class.v8::Isolate"*, %"class.blink::ScriptState"*, %"class.blink::ScriptSourceCode"* dereferenceable(168)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.32, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0)) #13
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.32, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0)) #13
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

declare void @_ZN5blink16ScriptSourceCodeC1ERKN3WTF6StringENS_24ScriptSourceLocationTypeEPNS_27SingleCachedMetadataHandlerERKNS_4KURLERKNS1_12TextPositionE(%"class.blink::ScriptSourceCode"*, %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::TextPosition"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink16ScriptSourceCodeD1Ev(%"class.blink::ScriptSourceCode"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger21MonitorEventsCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 align 2 {
  tail call void @_ZN5blink14ThreadDebugger24SetMonitorEventsCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEEb(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger23UnmonitorEventsCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 align 2 {
  tail call void @_ZN5blink14ThreadDebugger24SetMonitorEventsCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEEb(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger24SetMonitorEventsCallbackERKN2v820FunctionCallbackInfoINS1_5ValueEEEb(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::Vector.441", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca [21 x %"class.WTF::String"], align 8
  %17 = alloca [12 x %"class.WTF::String"], align 8
  %18 = alloca [4 x %"class.WTF::String"], align 8
  %19 = alloca [4 x %"class.WTF::String"], align 8
  %20 = alloca [10 x %"class.WTF::String"], align 8
  %21 = alloca [10 x %"class.WTF::String"], align 8
  %22 = alloca %"class.WTF::Vector.441", align 8
  %23 = alloca %"class.WTF::AtomicString", align 8
  %24 = alloca %"class.WTF::AtomicString", align 8
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %1441, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %34 = bitcast i64** %33 to %"class.v8::Value"**
  %35 = load %"class.v8::Value"*, %"class.v8::Value"** %34, align 8
  %36 = add i64 %32, 8
  %37 = inttoptr i64 %36 to %"class.blink::V8PerIsolateData"**
  %38 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %37, align 8
  %39 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %38, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8EventTarget18wrapper_type_info_E, %"class.v8::Value"* %35) #13
  br i1 %39, label %40, label %63

40:                                               ; preds = %28
  %41 = bitcast %"class.v8::Value"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, -1
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = and i64 %42, -4294967296
  %47 = zext i32 %45 to i64
  %48 = or i64 %46, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load i16, i16* %50, align 2
  switch i16 %51, label %56 [
    i16 1057, label %52
    i16 1056, label %52
    i16 1040, label %52
  ]

52:                                               ; preds = %40, %40, %40
  %53 = add i64 %42, 19
  %54 = inttoptr i64 %53 to i8**
  %55 = load i8*, i8** %54, align 1
  br label %59

56:                                               ; preds = %40
  %57 = bitcast %"class.v8::Value"* %35 to %"class.v8::Object"*
  %58 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %57, i32 1) #13
  br label %59

59:                                               ; preds = %56, %52
  %60 = phi i8* [ %55, %52 ], [ %58, %56 ]
  %61 = bitcast i8* %60 to %"class.blink::EventTarget"*
  %62 = icmp eq i8* %60, null
  br i1 %62, label %63, label %80

63:                                               ; preds = %59, %28
  %64 = load i64*, i64** %29, align 8
  %65 = getelementptr inbounds i64, i64* %64, i64 1
  %66 = bitcast i64* %65 to %"class.v8::Isolate"**
  %67 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %66, align 8
  %68 = load i32, i32* %25, align 8
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %63
  %71 = ptrtoint %"class.v8::Isolate"* %67 to i64
  %72 = add i64 %71, 160
  %73 = inttoptr i64 %72 to %"class.v8::Value"*
  br label %76

74:                                               ; preds = %63
  %75 = load %"class.v8::Value"*, %"class.v8::Value"** %34, align 8
  br label %76

76:                                               ; preds = %74, %70
  %77 = phi %"class.v8::Value"* [ %73, %70 ], [ %75, %74 ]
  %78 = tail call %"class.blink::DOMWindow"* @_ZN5blink11ToDOMWindowEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"* %67, %"class.v8::Value"* %77) #13
  %79 = getelementptr inbounds %"class.blink::DOMWindow", %"class.blink::DOMWindow"* %78, i64 0, i32 0, i32 0
  br label %80

80:                                               ; preds = %59, %76
  %81 = phi %"class.blink::EventTarget"* [ %79, %76 ], [ %61, %59 ]
  %82 = icmp eq %"class.blink::EventTarget"* %81, null
  br i1 %82, label %1441, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.WTF::Vector.441"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #13
  %85 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %22, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %22, i64 0, i32 0, i32 0, i32 1
  %87 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %22, i64 0, i32 0, i32 0, i32 2
  %88 = bitcast %"class.WTF::Vector.441"* %13 to i8*
  %89 = bitcast %"class.WTF::Vector.441"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #13, !noalias !5
  %90 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %13, i64 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %13, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %13, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 0, i64 16, i1 false) #13, !noalias !5
  %93 = load i32, i32* %25, align 8, !noalias !5
  %94 = icmp sgt i32 %93, 1
  br i1 %94, label %95, label %226

95:                                               ; preds = %83
  %96 = load i64*, i64** %33, align 8, !noalias !5
  %97 = getelementptr inbounds i64, i64* %96, i64 1
  %98 = load i64, i64* %97, align 8
  %99 = and i64 %98, 3
  %100 = icmp eq i64 %99, 1
  br i1 %100, label %101, label %137

101:                                              ; preds = %95
  %102 = add i64 %98, -1
  %103 = inttoptr i64 %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = and i64 %98, -4294967296
  %106 = zext i32 %104 to i64
  %107 = or i64 %105, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load i16, i16* %109, align 2
  %111 = icmp ult i16 %110, 64
  br i1 %111, label %112, label %137

112:                                              ; preds = %101
  %113 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #13, !noalias !5
  %114 = bitcast i64* %97 to %"class.v8::String"*
  %115 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* %114, i32 0) #13
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %115, %"class.WTF::StringImpl"** %116, align 8, !noalias !5
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.441"* nonnull %13, %"class.WTF::String"* nonnull dereferenceable(8) %14) #13
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8, !noalias !5
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #13
  br label %132

132:                                              ; preds = %131, %128, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #13, !noalias !5
  %133 = load i32, i32* %25, align 8, !noalias !5
  %134 = icmp sgt i32 %133, 1
  br i1 %134, label %135, label %226

135:                                              ; preds = %132
  %136 = load i64*, i64** %33, align 8, !noalias !5
  br label %137

137:                                              ; preds = %135, %101, %95
  %138 = phi i64* [ %136, %135 ], [ %96, %101 ], [ %96, %95 ]
  %139 = getelementptr inbounds i64, i64* %138, i64 1
  %140 = bitcast i64* %139 to %"class.v8::Value"*
  %141 = call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %140) #13
  br i1 %141, label %142, label %224

142:                                              ; preds = %137
  %143 = load i32, i32* %25, align 8, !noalias !5
  %144 = icmp sgt i32 %143, 1
  br i1 %144, label %151, label %145

145:                                              ; preds = %142
  %146 = load i64*, i64** %29, align 8, !noalias !5
  %147 = getelementptr inbounds i64, i64* %146, i64 1
  %148 = load i64, i64* %147, align 8
  %149 = add i64 %148, 160
  %150 = inttoptr i64 %149 to %"class.v8::Value"*
  br label %155

151:                                              ; preds = %142
  %152 = load i64*, i64** %33, align 8, !noalias !5
  %153 = getelementptr inbounds i64, i64* %152, i64 1
  %154 = bitcast i64* %153 to %"class.v8::Value"*
  br label %155

155:                                              ; preds = %151, %145
  %156 = phi %"class.v8::Value"* [ %150, %145 ], [ %154, %151 ]
  %157 = bitcast %"class.v8::Value"* %156 to %"class.v8::Array"*
  %158 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %157) #13
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %224, label %160

160:                                              ; preds = %155
  %161 = bitcast %"class.v8::Value"* %156 to %"class.v8::Object"*
  %162 = bitcast %"class.WTF::String"* %15 to i8*
  %163 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  br label %164

164:                                              ; preds = %220, %160
  %165 = phi i32 [ 0, %160 ], [ %221, %220 ]
  %166 = load i64*, i64** %29, align 8, !noalias !5
  %167 = getelementptr inbounds i64, i64* %166, i64 1
  %168 = bitcast i64* %167 to %"class.v8::Isolate"**
  %169 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %168, align 8
  %170 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %169) #13
  %171 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %161, %"class.v8::Context"* %170, i32 %165) #13
  %172 = icmp eq %"class.v8::Value"* %171, null
  br i1 %172, label %220, label %173

173:                                              ; preds = %164
  %174 = bitcast %"class.v8::Value"* %171 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = and i64 %175, 3
  %177 = icmp eq i64 %176, 1
  br i1 %177, label %178, label %220

178:                                              ; preds = %173
  %179 = add i64 %175, -1
  %180 = inttoptr i64 %179 to i32*
  %181 = load i32, i32* %180, align 4
  %182 = and i64 %175, -4294967296
  %183 = zext i32 %181 to i64
  %184 = or i64 %182, %183
  %185 = add i64 %184, 7
  %186 = inttoptr i64 %185 to i16*
  %187 = load i16, i16* %186, align 2
  %188 = icmp ult i16 %187, 64
  br i1 %188, label %189, label %220

189:                                              ; preds = %178
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #13, !noalias !5
  %190 = bitcast %"class.v8::Value"* %171 to %"class.v8::String"*
  %191 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %190, i32 0) #13
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %163, align 8, !noalias !5
  %192 = load i32, i32* %92, align 4, !noalias !5
  %193 = load i32, i32* %91, align 8, !noalias !5
  %194 = icmp eq i32 %192, %193
  br i1 %194, label %203, label %195, !prof !3

195:                                              ; preds = %189
  %196 = ptrtoint %"class.WTF::StringImpl"* %191 to i64
  %197 = load %"class.WTF::String"*, %"class.WTF::String"** %90, align 8, !noalias !5
  %198 = zext i32 %192 to i64
  %199 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %197, i64 %198
  %200 = bitcast %"class.WTF::String"* %199 to i64*
  store i64 %196, i64* %200, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %163, align 8, !noalias !5
  %201 = load i32, i32* %92, align 4, !noalias !5
  %202 = add i32 %201, 1
  store i32 %202, i32* %92, align 4, !noalias !5
  br label %219

203:                                              ; preds = %189
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.441"* nonnull %13, %"class.WTF::String"* nonnull dereferenceable(8) %15) #13
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8, !noalias !5
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #13
  br label %219

219:                                              ; preds = %218, %215, %203, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #13, !noalias !5
  br label %220

220:                                              ; preds = %219, %178, %173, %164
  %221 = add nuw i32 %165, 1
  %222 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %157) #13
  %223 = icmp ult i32 %221, %222
  br i1 %223, label %164, label %224

224:                                              ; preds = %220, %155, %137
  %225 = load i32, i32* %25, align 8, !noalias !5
  br label %226

226:                                              ; preds = %224, %132, %83
  %227 = phi i32 [ %225, %224 ], [ %133, %132 ], [ %93, %83 ]
  %228 = icmp eq i32 %227, 1
  br i1 %228, label %229, label %334

229:                                              ; preds = %226
  %230 = bitcast [21 x %"class.WTF::String"]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %230) #13, !noalias !5
  %231 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 0
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %231, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0), i64 5) #13
  %232 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %232, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), i64 3) #13
  %233 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 2
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %233, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0), i64 5) #13
  %234 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 3
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %234, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i64 0, i64 0), i64 7) #13
  %235 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %235, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i64 7) #13
  %236 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %236, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0), i64 4) #13
  %237 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 6
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %237, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0), i64 6) #13
  %238 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %238, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0), i64 5) #13
  %239 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %239, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), i64 5) #13
  %240 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %240, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i64 0, i64 0), i64 6) #13
  %241 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %241, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), i64 5) #13
  %242 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %242, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i64 0, i64 0), i64 6) #13
  %243 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %243, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i64 6) #13
  %244 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %244, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0), i64 5) #13
  %245 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %245, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0), i64 5) #13
  %246 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %246, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), i64 4) #13
  %247 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %247, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i64 6) #13
  %248 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %248, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0), i64 6) #13
  %249 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %249, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i64 0, i64 0), i64 6) #13
  %250 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %250, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i64 0, i64 0), i64 12) #13
  %251 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %251, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.55, i64 0, i64 0), i64 17) #13
  %252 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 168) #13
  %253 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %252, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  %254 = bitcast i8* %253 to %"class.WTF::String"*
  %255 = getelementptr inbounds [21 x %"class.WTF::String"], [21 x %"class.WTF::String"]* %16, i64 0, i64 21
  br label %256

256:                                              ; preds = %280, %229
  %257 = phi %"class.WTF::String"* [ %281, %280 ], [ %254, %229 ]
  %258 = phi %"class.WTF::String"* [ %282, %280 ], [ %231, %229 ]
  %259 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %258, i64 0, i32 0, i32 0
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8, !noalias !5
  %261 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %257, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %260, %"class.WTF::StringImpl"** %261, align 8
  %262 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %262, label %280, label %263

263:                                              ; preds = %256
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load atomic i32, i32* %264 monotonic, align 4
  %266 = and i32 %265, 2
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %280

268:                                              ; preds = %263
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  %271 = zext i32 %270 to i33
  %272 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %271, i33 1) #13
  %273 = extractvalue { i33, i1 } %272, 1
  %274 = extractvalue { i33, i1 } %272, 0
  %275 = icmp slt i33 %274, 0
  %276 = or i1 %273, %275
  br i1 %276, label %277, label %278, !prof !3

277:                                              ; preds = %268
  call void @llvm.trap() #13
  unreachable

278:                                              ; preds = %268
  %279 = trunc i33 %274 to i32
  store i32 %279, i32* %269, align 4
  br label %280

280:                                              ; preds = %278, %263, %256
  %281 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %257, i64 1
  %282 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %258, i64 1
  %283 = icmp eq %"class.WTF::String"* %282, %255
  br i1 %283, label %284, label %256

284:                                              ; preds = %280
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector.441"* nonnull %13, %"class.WTF::String"* %254, i32 21) #13
  %285 = icmp eq i8* %253, null
  br i1 %285, label %311, label %286, !prof !2

286:                                              ; preds = %284
  %287 = getelementptr inbounds i8, i8* %253, i64 168
  %288 = bitcast i8* %287 to %"class.WTF::String"*
  br label %289

289:                                              ; preds = %307, %286
  %290 = phi %"class.WTF::String"* [ %308, %307 ], [ %254, %286 ]
  %291 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %290, i64 0, i32 0, i32 0
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %292, null
  br i1 %293, label %307, label %294

294:                                              ; preds = %289
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  br i1 %298, label %301, label %303

301:                                              ; preds = %294
  %302 = add i32 %300, -1
  store i32 %302, i32* %299, align 4
  br label %303

303:                                              ; preds = %301, %294
  %304 = phi i32 [ %302, %301 ], [ %300, %294 ]
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %303
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %292) #13
  br label %307

307:                                              ; preds = %306, %303, %289
  %308 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %290, i64 1
  %309 = icmp eq %"class.WTF::String"* %308, %288
  br i1 %309, label %310, label %289

310:                                              ; preds = %307
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %253) #13
  br label %311

311:                                              ; preds = %310, %284
  br label %312

312:                                              ; preds = %311, %331
  %313 = phi %"class.WTF::String"* [ %314, %331 ], [ %255, %311 ]
  %314 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %313, i64 -1
  %315 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %314, i64 0, i32 0, i32 0
  %316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %315, align 8, !noalias !5
  %317 = icmp eq %"class.WTF::StringImpl"* %316, null
  br i1 %317, label %331, label %318

318:                                              ; preds = %312
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %316, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load atomic i32, i32* %319 monotonic, align 4
  %321 = and i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %316, i64 0, i32 0
  %324 = load i32, i32* %323, align 4
  br i1 %322, label %325, label %327

325:                                              ; preds = %318
  %326 = add i32 %324, -1
  store i32 %326, i32* %323, align 4
  br label %327

327:                                              ; preds = %325, %318
  %328 = phi i32 [ %326, %325 ], [ %324, %318 ]
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %327
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %316) #13
  br label %331

331:                                              ; preds = %330, %327, %312
  %332 = icmp eq %"class.WTF::String"* %314, %231
  br i1 %332, label %333, label %312

333:                                              ; preds = %331
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %230) #13, !noalias !5
  br label %334

334:                                              ; preds = %333, %226
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 16, i1 false) #13, !alias.scope !5
  %335 = load i32, i32* %92, align 4, !noalias !5
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %942, label %337

337:                                              ; preds = %334
  %338 = bitcast %"class.WTF::StringView"* %11 to i8*
  %339 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  %340 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %341 = bitcast i8** %340 to %"class.WTF::StringImpl"**
  %342 = bitcast %"class.WTF::StringView"* %11 to i64*
  %343 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  %344 = bitcast %"class.WTF::StringView"* %12 to i8*
  %345 = bitcast %"class.WTF::StringView"* %12 to i64*
  %346 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %347 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  %348 = bitcast %"class.WTF::StringView"* %9 to i8*
  %349 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  %350 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %351 = bitcast i8** %350 to %"class.WTF::StringImpl"**
  %352 = bitcast %"class.WTF::StringView"* %9 to i64*
  %353 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %354 = bitcast %"class.WTF::StringView"* %10 to i8*
  %355 = bitcast %"class.WTF::StringView"* %10 to i64*
  %356 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %357 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  %358 = bitcast %"class.WTF::StringView"* %7 to i8*
  %359 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %360 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %361 = bitcast i8** %360 to %"class.WTF::StringImpl"**
  %362 = bitcast %"class.WTF::StringView"* %7 to i64*
  %363 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %364 = bitcast %"class.WTF::StringView"* %8 to i8*
  %365 = bitcast %"class.WTF::StringView"* %8 to i64*
  %366 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %367 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %368 = bitcast %"class.WTF::StringView"* %5 to i8*
  %369 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %370 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %371 = bitcast i8** %370 to %"class.WTF::StringImpl"**
  %372 = bitcast %"class.WTF::StringView"* %5 to i64*
  %373 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %374 = bitcast %"class.WTF::StringView"* %6 to i8*
  %375 = bitcast %"class.WTF::StringView"* %6 to i64*
  %376 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %377 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %378 = bitcast %"class.WTF::StringView"* %3 to i8*
  %379 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %380 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %381 = bitcast i8** %380 to %"class.WTF::StringImpl"**
  %382 = bitcast %"class.WTF::StringView"* %3 to i64*
  %383 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %384 = bitcast %"class.WTF::StringView"* %4 to i8*
  %385 = bitcast %"class.WTF::StringView"* %4 to i64*
  %386 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %387 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %388 = bitcast [10 x %"class.WTF::String"]* %21 to i8*
  %389 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %21, i64 0, i64 0
  %390 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %21, i64 0, i64 1
  %391 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %21, i64 0, i64 2
  %392 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %21, i64 0, i64 3
  %393 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %21, i64 0, i64 4
  %394 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %21, i64 0, i64 5
  %395 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %21, i64 0, i64 6
  %396 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %21, i64 0, i64 7
  %397 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %21, i64 0, i64 8
  %398 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %21, i64 0, i64 9
  %399 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %21, i64 0, i64 10
  %400 = bitcast [10 x %"class.WTF::String"]* %20 to i8*
  %401 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %20, i64 0, i64 0
  %402 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %20, i64 0, i64 1
  %403 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %20, i64 0, i64 2
  %404 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %20, i64 0, i64 3
  %405 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %20, i64 0, i64 4
  %406 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %20, i64 0, i64 5
  %407 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %20, i64 0, i64 6
  %408 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %20, i64 0, i64 7
  %409 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %20, i64 0, i64 8
  %410 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %20, i64 0, i64 9
  %411 = getelementptr inbounds [10 x %"class.WTF::String"], [10 x %"class.WTF::String"]* %20, i64 0, i64 10
  %412 = bitcast [4 x %"class.WTF::String"]* %19 to i8*
  %413 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %19, i64 0, i64 0
  %414 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %19, i64 0, i64 1
  %415 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %19, i64 0, i64 2
  %416 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %19, i64 0, i64 3
  %417 = bitcast [4 x %"class.WTF::String"]* %18 to i8*
  %418 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %18, i64 0, i64 0
  %419 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %18, i64 0, i64 1
  %420 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %18, i64 0, i64 2
  %421 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %18, i64 0, i64 3
  %422 = bitcast [12 x %"class.WTF::String"]* %17 to i8*
  %423 = getelementptr inbounds [12 x %"class.WTF::String"], [12 x %"class.WTF::String"]* %17, i64 0, i64 0
  %424 = getelementptr inbounds [12 x %"class.WTF::String"], [12 x %"class.WTF::String"]* %17, i64 0, i64 1
  %425 = getelementptr inbounds [12 x %"class.WTF::String"], [12 x %"class.WTF::String"]* %17, i64 0, i64 2
  %426 = getelementptr inbounds [12 x %"class.WTF::String"], [12 x %"class.WTF::String"]* %17, i64 0, i64 3
  %427 = getelementptr inbounds [12 x %"class.WTF::String"], [12 x %"class.WTF::String"]* %17, i64 0, i64 4
  %428 = getelementptr inbounds [12 x %"class.WTF::String"], [12 x %"class.WTF::String"]* %17, i64 0, i64 5
  %429 = getelementptr inbounds [12 x %"class.WTF::String"], [12 x %"class.WTF::String"]* %17, i64 0, i64 6
  %430 = getelementptr inbounds [12 x %"class.WTF::String"], [12 x %"class.WTF::String"]* %17, i64 0, i64 7
  %431 = getelementptr inbounds [12 x %"class.WTF::String"], [12 x %"class.WTF::String"]* %17, i64 0, i64 8
  %432 = getelementptr inbounds [12 x %"class.WTF::String"], [12 x %"class.WTF::String"]* %17, i64 0, i64 9
  %433 = getelementptr inbounds [12 x %"class.WTF::String"], [12 x %"class.WTF::String"]* %17, i64 0, i64 10
  %434 = getelementptr inbounds [12 x %"class.WTF::String"], [12 x %"class.WTF::String"]* %17, i64 0, i64 11
  %435 = getelementptr inbounds [12 x %"class.WTF::String"], [12 x %"class.WTF::String"]* %17, i64 0, i64 12
  %436 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %19, i64 0, i64 0, i32 0, i32 0
  %437 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %19, i64 0, i64 1, i32 0, i32 0
  %438 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %19, i64 0, i64 2, i32 0, i32 0
  %439 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %19, i64 0, i64 3, i32 0, i32 0
  %440 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %18, i64 0, i64 0, i32 0, i32 0
  %441 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %18, i64 0, i64 1, i32 0, i32 0
  %442 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %18, i64 0, i64 2, i32 0, i32 0
  %443 = getelementptr inbounds [4 x %"class.WTF::String"], [4 x %"class.WTF::String"]* %18, i64 0, i64 3, i32 0, i32 0
  br label %444

444:                                              ; preds = %938, %337
  %445 = phi i32 [ 0, %337 ], [ %939, %938 ]
  %446 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.441"* nonnull %13, i32 %445) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %338) #13, !noalias !5
  %447 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %446, i64 0, i32 0, i32 0
  %448 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %447, align 8
  %449 = icmp eq %"class.WTF::StringImpl"* %448, null
  br i1 %449, label %450, label %452

450:                                              ; preds = %444
  store i8* null, i8** %340, align 8, !noalias !5
  %451 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %451, i64* %342, align 8, !noalias !5
  br label %457

452:                                              ; preds = %444
  store %"class.WTF::StringImpl"* %448, %"class.WTF::StringImpl"** %339, align 8, !noalias !5
  %453 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %448, i64 0, i32 1
  %454 = load i32, i32* %453, align 4
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %448, i64 1
  store %"class.WTF::StringImpl"* %455, %"class.WTF::StringImpl"** %341, align 8, !noalias !5
  %456 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %457

457:                                              ; preds = %452, %450
  %458 = phi i64 [ %456, %452 ], [ %451, %450 ]
  %459 = phi i32 [ %454, %452 ], [ 0, %450 ]
  store i32 %459, i32* %343, align 8, !noalias !5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %344) #13, !noalias !5
  store i64 %458, i64* %345, align 8, !noalias !5
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0), i8** %346, align 8, !noalias !5
  store i32 5, i32* %347, align 8, !noalias !5
  %460 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %344) #13, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %338) #13, !noalias !5
  br i1 %460, label %461, label %543

461:                                              ; preds = %457
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %422) #13, !noalias !5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %423, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0), i64 8) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %424, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0), i64 5) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %425, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i64 8) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %426, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i64 0, i64 0), i64 9) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %427, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i64 0, i64 0), i64 11) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %428, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.61, i64 0, i64 0), i64 10) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %429, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i64 0, i64 0), i64 9) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %430, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i64 0, i64 0), i64 8) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %431, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i64 0, i64 0), i64 9) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %432, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65, i64 0, i64 0), i64 7) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %433, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.61, i64 0, i64 0), i64 10) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %434, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i64 0, i64 0), i64 10) #13
  %462 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 96) #13
  %463 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %462, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  %464 = bitcast i8* %463 to %"class.WTF::String"*
  br label %465

465:                                              ; preds = %489, %461
  %466 = phi %"class.WTF::String"* [ %490, %489 ], [ %464, %461 ]
  %467 = phi %"class.WTF::String"* [ %491, %489 ], [ %423, %461 ]
  %468 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %467, i64 0, i32 0, i32 0
  %469 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %468, align 8, !noalias !5
  %470 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %466, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %469, %"class.WTF::StringImpl"** %470, align 8
  %471 = icmp eq %"class.WTF::StringImpl"* %469, null
  br i1 %471, label %489, label %472

472:                                              ; preds = %465
  %473 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %469, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %474 = load atomic i32, i32* %473 monotonic, align 4
  %475 = and i32 %474, 2
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %477, label %489

477:                                              ; preds = %472
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %469, i64 0, i32 0
  %479 = load i32, i32* %478, align 4
  %480 = zext i32 %479 to i33
  %481 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %480, i33 1) #13
  %482 = extractvalue { i33, i1 } %481, 1
  %483 = extractvalue { i33, i1 } %481, 0
  %484 = icmp slt i33 %483, 0
  %485 = or i1 %482, %484
  br i1 %485, label %486, label %487, !prof !3

486:                                              ; preds = %477
  call void @llvm.trap() #13
  unreachable

487:                                              ; preds = %477
  %488 = trunc i33 %483 to i32
  store i32 %488, i32* %478, align 4
  br label %489

489:                                              ; preds = %487, %472, %465
  %490 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %466, i64 1
  %491 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %467, i64 1
  %492 = icmp eq %"class.WTF::String"* %491, %435
  br i1 %492, label %493, label %465

493:                                              ; preds = %489
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector.441"* nonnull %22, %"class.WTF::String"* %464, i32 12) #13
  %494 = icmp eq i8* %463, null
  br i1 %494, label %520, label %495, !prof !2

495:                                              ; preds = %493
  %496 = getelementptr inbounds i8, i8* %463, i64 96
  %497 = bitcast i8* %496 to %"class.WTF::String"*
  br label %498

498:                                              ; preds = %516, %495
  %499 = phi %"class.WTF::String"* [ %517, %516 ], [ %464, %495 ]
  %500 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %499, i64 0, i32 0, i32 0
  %501 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %500, align 8
  %502 = icmp eq %"class.WTF::StringImpl"* %501, null
  br i1 %502, label %516, label %503

503:                                              ; preds = %498
  %504 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load atomic i32, i32* %504 monotonic, align 4
  %506 = and i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 0
  %509 = load i32, i32* %508, align 4
  br i1 %507, label %510, label %512

510:                                              ; preds = %503
  %511 = add i32 %509, -1
  store i32 %511, i32* %508, align 4
  br label %512

512:                                              ; preds = %510, %503
  %513 = phi i32 [ %511, %510 ], [ %509, %503 ]
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %515, label %516

515:                                              ; preds = %512
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %501) #13
  br label %516

516:                                              ; preds = %515, %512, %498
  %517 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %499, i64 1
  %518 = icmp eq %"class.WTF::String"* %517, %497
  br i1 %518, label %519, label %498

519:                                              ; preds = %516
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %463) #13
  br label %520

520:                                              ; preds = %519, %493
  br label %521

521:                                              ; preds = %520, %540
  %522 = phi %"class.WTF::String"* [ %523, %540 ], [ %435, %520 ]
  %523 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %522, i64 -1
  %524 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %523, i64 0, i32 0, i32 0
  %525 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %524, align 8, !noalias !5
  %526 = icmp eq %"class.WTF::StringImpl"* %525, null
  br i1 %526, label %540, label %527

527:                                              ; preds = %521
  %528 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %525, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %529 = load atomic i32, i32* %528 monotonic, align 4
  %530 = and i32 %529, 2
  %531 = icmp eq i32 %530, 0
  %532 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %525, i64 0, i32 0
  %533 = load i32, i32* %532, align 4
  br i1 %531, label %534, label %536

534:                                              ; preds = %527
  %535 = add i32 %533, -1
  store i32 %535, i32* %532, align 4
  br label %536

536:                                              ; preds = %534, %527
  %537 = phi i32 [ %535, %534 ], [ %533, %527 ]
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %539, label %540

539:                                              ; preds = %536
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %525) #13
  br label %540

540:                                              ; preds = %539, %536, %521
  %541 = icmp eq %"class.WTF::String"* %523, %423
  br i1 %541, label %542, label %521

542:                                              ; preds = %540
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %422) #13, !noalias !5
  br label %938

543:                                              ; preds = %457
  %544 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.441"* nonnull %13, i32 %445) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %348) #13, !noalias !5
  %545 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %544, i64 0, i32 0, i32 0
  %546 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %545, align 8
  %547 = icmp eq %"class.WTF::StringImpl"* %546, null
  br i1 %547, label %548, label %550

548:                                              ; preds = %543
  store i8* null, i8** %350, align 8, !noalias !5
  %549 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %549, i64* %352, align 8, !noalias !5
  br label %555

550:                                              ; preds = %543
  store %"class.WTF::StringImpl"* %546, %"class.WTF::StringImpl"** %349, align 8, !noalias !5
  %551 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %546, i64 0, i32 1
  %552 = load i32, i32* %551, align 4
  %553 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %546, i64 1
  store %"class.WTF::StringImpl"* %553, %"class.WTF::StringImpl"** %351, align 8, !noalias !5
  %554 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %555

555:                                              ; preds = %550, %548
  %556 = phi i64 [ %554, %550 ], [ %549, %548 ]
  %557 = phi i32 [ %552, %550 ], [ 0, %548 ]
  store i32 %557, i32* %353, align 8, !noalias !5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %354) #13, !noalias !5
  store i64 %556, i64* %355, align 8, !noalias !5
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), i8** %356, align 8, !noalias !5
  store i32 3, i32* %357, align 8, !noalias !5
  %558 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %354) #13, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %348) #13, !noalias !5
  br i1 %558, label %559, label %626

559:                                              ; preds = %555
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %417) #13, !noalias !5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %418, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i64 0, i64 0), i64 7) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %419, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i64 0, i64 0), i64 5) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %420, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i64 0, i64 0), i64 8) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %421, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.70, i64 0, i64 0), i64 9) #13
  %560 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 32) #13
  %561 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %560, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  %562 = bitcast i8* %561 to %"class.WTF::String"*
  %563 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %440, align 8, !noalias !5
  %564 = bitcast i8* %561 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %563, %"class.WTF::StringImpl"** %564, align 8
  %565 = icmp eq %"class.WTF::StringImpl"* %563, null
  br i1 %565, label %583, label %566

566:                                              ; preds = %559
  %567 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %568 = load atomic i32, i32* %567 monotonic, align 4
  %569 = and i32 %568, 2
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %571, label %583

571:                                              ; preds = %566
  %572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 0
  %573 = load i32, i32* %572, align 4
  %574 = zext i32 %573 to i33
  %575 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %574, i33 1) #13
  %576 = extractvalue { i33, i1 } %575, 1
  %577 = extractvalue { i33, i1 } %575, 0
  %578 = icmp slt i33 %577, 0
  %579 = or i1 %576, %578
  br i1 %579, label %580, label %581, !prof !3

580:                                              ; preds = %1177, %1156, %1135, %571
  call void @llvm.trap() #13
  unreachable

581:                                              ; preds = %571
  %582 = trunc i33 %577 to i32
  store i32 %582, i32* %572, align 4
  br label %583

583:                                              ; preds = %581, %566, %559
  %584 = getelementptr inbounds i8, i8* %561, i64 8
  %585 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %441, align 8, !noalias !5
  %586 = bitcast i8* %584 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %585, %"class.WTF::StringImpl"** %586, align 8
  %587 = icmp eq %"class.WTF::StringImpl"* %585, null
  br i1 %587, label %1146, label %1130

588:                                              ; preds = %1188
  %589 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %564, align 8
  %590 = icmp eq %"class.WTF::StringImpl"* %589, null
  br i1 %590, label %604, label %591

591:                                              ; preds = %588
  %592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %589, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %593 = load atomic i32, i32* %592 monotonic, align 4
  %594 = and i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %589, i64 0, i32 0
  %597 = load i32, i32* %596, align 4
  br i1 %595, label %598, label %600

598:                                              ; preds = %591
  %599 = add i32 %597, -1
  store i32 %599, i32* %596, align 4
  br label %600

600:                                              ; preds = %598, %591
  %601 = phi i32 [ %599, %598 ], [ %597, %591 ]
  %602 = icmp eq i32 %601, 0
  br i1 %602, label %603, label %604

603:                                              ; preds = %600
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %589) #13
  br label %604

604:                                              ; preds = %603, %600, %588
  %605 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %586, align 8
  %606 = icmp eq %"class.WTF::StringImpl"* %605, null
  br i1 %606, label %1203, label %1190

607:                                              ; preds = %1235, %1188
  %608 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %443, align 8, !noalias !5
  %609 = icmp eq %"class.WTF::StringImpl"* %608, null
  br i1 %609, label %623, label %610

610:                                              ; preds = %607
  %611 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %612 = load atomic i32, i32* %611 monotonic, align 4
  %613 = and i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 0, i32 0
  %616 = load i32, i32* %615, align 4
  br i1 %614, label %617, label %619

617:                                              ; preds = %610
  %618 = add i32 %616, -1
  store i32 %618, i32* %615, align 4
  br label %619

619:                                              ; preds = %617, %610
  %620 = phi i32 [ %618, %617 ], [ %616, %610 ]
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %622, label %623

622:                                              ; preds = %619
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %608) #13
  br label %623

623:                                              ; preds = %622, %619, %607
  %624 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %442, align 8, !noalias !5
  %625 = icmp eq %"class.WTF::StringImpl"* %624, null
  br i1 %625, label %1249, label %1236

626:                                              ; preds = %555
  %627 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.441"* nonnull %13, i32 %445) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %358) #13, !noalias !5
  %628 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %627, i64 0, i32 0, i32 0
  %629 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %628, align 8
  %630 = icmp eq %"class.WTF::StringImpl"* %629, null
  br i1 %630, label %631, label %633

631:                                              ; preds = %626
  store i8* null, i8** %360, align 8, !noalias !5
  %632 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %632, i64* %362, align 8, !noalias !5
  br label %638

633:                                              ; preds = %626
  store %"class.WTF::StringImpl"* %629, %"class.WTF::StringImpl"** %359, align 8, !noalias !5
  %634 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %629, i64 0, i32 1
  %635 = load i32, i32* %634, align 4
  %636 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %629, i64 1
  store %"class.WTF::StringImpl"* %636, %"class.WTF::StringImpl"** %361, align 8, !noalias !5
  %637 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %638

638:                                              ; preds = %633, %631
  %639 = phi i64 [ %637, %633 ], [ %632, %631 ]
  %640 = phi i32 [ %635, %633 ], [ 0, %631 ]
  store i32 %640, i32* %363, align 8, !noalias !5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %364) #13, !noalias !5
  store i64 %639, i64* %365, align 8, !noalias !5
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0), i8** %366, align 8, !noalias !5
  store i32 5, i32* %367, align 8, !noalias !5
  %641 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %364) #13, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %358) #13, !noalias !5
  br i1 %641, label %642, label %709

642:                                              ; preds = %638
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %412) #13, !noalias !5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %413, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.71, i64 0, i64 0), i64 10) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %414, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i64 0, i64 0), i64 9) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %415, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.73, i64 0, i64 0), i64 8) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %416, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.74, i64 0, i64 0), i64 11) #13
  %643 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 32) #13
  %644 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %643, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  %645 = bitcast i8* %644 to %"class.WTF::String"*
  %646 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %436, align 8, !noalias !5
  %647 = bitcast i8* %644 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %646, %"class.WTF::StringImpl"** %647, align 8
  %648 = icmp eq %"class.WTF::StringImpl"* %646, null
  br i1 %648, label %666, label %649

649:                                              ; preds = %642
  %650 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %646, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %651 = load atomic i32, i32* %650 monotonic, align 4
  %652 = and i32 %651, 2
  %653 = icmp eq i32 %652, 0
  br i1 %653, label %654, label %666

654:                                              ; preds = %649
  %655 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %646, i64 0, i32 0
  %656 = load i32, i32* %655, align 4
  %657 = zext i32 %656 to i33
  %658 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %657, i33 1) #13
  %659 = extractvalue { i33, i1 } %658, 1
  %660 = extractvalue { i33, i1 } %658, 0
  %661 = icmp slt i33 %660, 0
  %662 = or i1 %659, %661
  br i1 %662, label %663, label %664, !prof !3

663:                                              ; preds = %1025, %1004, %983, %654
  call void @llvm.trap() #13
  unreachable

664:                                              ; preds = %654
  %665 = trunc i33 %660 to i32
  store i32 %665, i32* %655, align 4
  br label %666

666:                                              ; preds = %664, %649, %642
  %667 = getelementptr inbounds i8, i8* %644, i64 8
  %668 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %437, align 8, !noalias !5
  %669 = bitcast i8* %667 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %668, %"class.WTF::StringImpl"** %669, align 8
  %670 = icmp eq %"class.WTF::StringImpl"* %668, null
  br i1 %670, label %994, label %978

671:                                              ; preds = %1036
  %672 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %647, align 8
  %673 = icmp eq %"class.WTF::StringImpl"* %672, null
  br i1 %673, label %687, label %674

674:                                              ; preds = %671
  %675 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %672, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %676 = load atomic i32, i32* %675 monotonic, align 4
  %677 = and i32 %676, 2
  %678 = icmp eq i32 %677, 0
  %679 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %672, i64 0, i32 0
  %680 = load i32, i32* %679, align 4
  br i1 %678, label %681, label %683

681:                                              ; preds = %674
  %682 = add i32 %680, -1
  store i32 %682, i32* %679, align 4
  br label %683

683:                                              ; preds = %681, %674
  %684 = phi i32 [ %682, %681 ], [ %680, %674 ]
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %686, label %687

686:                                              ; preds = %683
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %672) #13
  br label %687

687:                                              ; preds = %686, %683, %671
  %688 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %669, align 8
  %689 = icmp eq %"class.WTF::StringImpl"* %688, null
  br i1 %689, label %1051, label %1038

690:                                              ; preds = %1083, %1036
  %691 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %439, align 8, !noalias !5
  %692 = icmp eq %"class.WTF::StringImpl"* %691, null
  br i1 %692, label %706, label %693

693:                                              ; preds = %690
  %694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %691, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %695 = load atomic i32, i32* %694 monotonic, align 4
  %696 = and i32 %695, 2
  %697 = icmp eq i32 %696, 0
  %698 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %691, i64 0, i32 0
  %699 = load i32, i32* %698, align 4
  br i1 %697, label %700, label %702

700:                                              ; preds = %693
  %701 = add i32 %699, -1
  store i32 %701, i32* %698, align 4
  br label %702

702:                                              ; preds = %700, %693
  %703 = phi i32 [ %701, %700 ], [ %699, %693 ]
  %704 = icmp eq i32 %703, 0
  br i1 %704, label %705, label %706

705:                                              ; preds = %702
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %691) #13
  br label %706

706:                                              ; preds = %705, %702, %690
  %707 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %438, align 8, !noalias !5
  %708 = icmp eq %"class.WTF::StringImpl"* %707, null
  br i1 %708, label %1097, label %1084

709:                                              ; preds = %638
  %710 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.441"* nonnull %13, i32 %445) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %368) #13, !noalias !5
  %711 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %710, i64 0, i32 0, i32 0
  %712 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %711, align 8
  %713 = icmp eq %"class.WTF::StringImpl"* %712, null
  br i1 %713, label %714, label %716

714:                                              ; preds = %709
  store i8* null, i8** %370, align 8, !noalias !5
  %715 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %715, i64* %372, align 8, !noalias !5
  br label %721

716:                                              ; preds = %709
  store %"class.WTF::StringImpl"* %712, %"class.WTF::StringImpl"** %369, align 8, !noalias !5
  %717 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %712, i64 0, i32 1
  %718 = load i32, i32* %717, align 4
  %719 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %712, i64 1
  store %"class.WTF::StringImpl"* %719, %"class.WTF::StringImpl"** %371, align 8, !noalias !5
  %720 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %721

721:                                              ; preds = %716, %714
  %722 = phi i64 [ %720, %716 ], [ %715, %714 ]
  %723 = phi i32 [ %718, %716 ], [ 0, %714 ]
  store i32 %723, i32* %373, align 8, !noalias !5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %374) #13, !noalias !5
  store i64 %722, i64* %375, align 8, !noalias !5
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i64 0, i64 0), i8** %376, align 8, !noalias !5
  store i32 7, i32* %377, align 8, !noalias !5
  %724 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %374) #13, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %368) #13, !noalias !5
  br i1 %724, label %725, label %807

725:                                              ; preds = %721
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %400) #13, !noalias !5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %401, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i64 11) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %402, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.76, i64 0, i64 0), i64 10) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %403, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i64 0, i64 0), i64 12) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %404, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.78, i64 0, i64 0), i64 12) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %405, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.79, i64 0, i64 0), i64 11) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %406, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80, i64 0, i64 0), i64 9) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %407, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i64 0, i64 0), i64 11) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %408, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.82, i64 0, i64 0), i64 13) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %409, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.83, i64 0, i64 0), i64 17) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %410, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.84, i64 0, i64 0), i64 18) #13
  %726 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 80) #13
  %727 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %726, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  %728 = bitcast i8* %727 to %"class.WTF::String"*
  br label %729

729:                                              ; preds = %753, %725
  %730 = phi %"class.WTF::String"* [ %754, %753 ], [ %728, %725 ]
  %731 = phi %"class.WTF::String"* [ %755, %753 ], [ %401, %725 ]
  %732 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %731, i64 0, i32 0, i32 0
  %733 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %732, align 8, !noalias !5
  %734 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %730, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %733, %"class.WTF::StringImpl"** %734, align 8
  %735 = icmp eq %"class.WTF::StringImpl"* %733, null
  br i1 %735, label %753, label %736

736:                                              ; preds = %729
  %737 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %733, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %738 = load atomic i32, i32* %737 monotonic, align 4
  %739 = and i32 %738, 2
  %740 = icmp eq i32 %739, 0
  br i1 %740, label %741, label %753

741:                                              ; preds = %736
  %742 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %733, i64 0, i32 0
  %743 = load i32, i32* %742, align 4
  %744 = zext i32 %743 to i33
  %745 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %744, i33 1) #13
  %746 = extractvalue { i33, i1 } %745, 1
  %747 = extractvalue { i33, i1 } %745, 0
  %748 = icmp slt i33 %747, 0
  %749 = or i1 %746, %748
  br i1 %749, label %750, label %751, !prof !3

750:                                              ; preds = %741
  call void @llvm.trap() #13
  unreachable

751:                                              ; preds = %741
  %752 = trunc i33 %747 to i32
  store i32 %752, i32* %742, align 4
  br label %753

753:                                              ; preds = %751, %736, %729
  %754 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %730, i64 1
  %755 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %731, i64 1
  %756 = icmp eq %"class.WTF::String"* %755, %411
  br i1 %756, label %757, label %729

757:                                              ; preds = %753
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector.441"* nonnull %22, %"class.WTF::String"* %728, i32 10) #13
  %758 = icmp eq i8* %727, null
  br i1 %758, label %784, label %759, !prof !2

759:                                              ; preds = %757
  %760 = getelementptr inbounds i8, i8* %727, i64 80
  %761 = bitcast i8* %760 to %"class.WTF::String"*
  br label %762

762:                                              ; preds = %780, %759
  %763 = phi %"class.WTF::String"* [ %781, %780 ], [ %728, %759 ]
  %764 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %763, i64 0, i32 0, i32 0
  %765 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %764, align 8
  %766 = icmp eq %"class.WTF::StringImpl"* %765, null
  br i1 %766, label %780, label %767

767:                                              ; preds = %762
  %768 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %765, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %769 = load atomic i32, i32* %768 monotonic, align 4
  %770 = and i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %765, i64 0, i32 0
  %773 = load i32, i32* %772, align 4
  br i1 %771, label %774, label %776

774:                                              ; preds = %767
  %775 = add i32 %773, -1
  store i32 %775, i32* %772, align 4
  br label %776

776:                                              ; preds = %774, %767
  %777 = phi i32 [ %775, %774 ], [ %773, %767 ]
  %778 = icmp eq i32 %777, 0
  br i1 %778, label %779, label %780

779:                                              ; preds = %776
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %765) #13
  br label %780

780:                                              ; preds = %779, %776, %762
  %781 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %763, i64 1
  %782 = icmp eq %"class.WTF::String"* %781, %761
  br i1 %782, label %783, label %762

783:                                              ; preds = %780
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %727) #13
  br label %784

784:                                              ; preds = %783, %757
  br label %785

785:                                              ; preds = %784, %804
  %786 = phi %"class.WTF::String"* [ %787, %804 ], [ %411, %784 ]
  %787 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %786, i64 -1
  %788 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %787, i64 0, i32 0, i32 0
  %789 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %788, align 8, !noalias !5
  %790 = icmp eq %"class.WTF::StringImpl"* %789, null
  br i1 %790, label %804, label %791

791:                                              ; preds = %785
  %792 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %793 = load atomic i32, i32* %792 monotonic, align 4
  %794 = and i32 %793, 2
  %795 = icmp eq i32 %794, 0
  %796 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %789, i64 0, i32 0
  %797 = load i32, i32* %796, align 4
  br i1 %795, label %798, label %800

798:                                              ; preds = %791
  %799 = add i32 %797, -1
  store i32 %799, i32* %796, align 4
  br label %800

800:                                              ; preds = %798, %791
  %801 = phi i32 [ %799, %798 ], [ %797, %791 ]
  %802 = icmp eq i32 %801, 0
  br i1 %802, label %803, label %804

803:                                              ; preds = %800
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %789) #13
  br label %804

804:                                              ; preds = %803, %800, %785
  %805 = icmp eq %"class.WTF::String"* %787, %401
  br i1 %805, label %806, label %785

806:                                              ; preds = %804
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %400) #13, !noalias !5
  br label %938

807:                                              ; preds = %721
  %808 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.441"* nonnull %13, i32 %445) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %378) #13, !noalias !5
  %809 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %808, i64 0, i32 0, i32 0
  %810 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %809, align 8
  %811 = icmp eq %"class.WTF::StringImpl"* %810, null
  br i1 %811, label %812, label %814

812:                                              ; preds = %807
  store i8* null, i8** %380, align 8, !noalias !5
  %813 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %813, i64* %382, align 8, !noalias !5
  br label %819

814:                                              ; preds = %807
  store %"class.WTF::StringImpl"* %810, %"class.WTF::StringImpl"** %379, align 8, !noalias !5
  %815 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %810, i64 0, i32 1
  %816 = load i32, i32* %815, align 4
  %817 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %810, i64 1
  store %"class.WTF::StringImpl"* %817, %"class.WTF::StringImpl"** %381, align 8, !noalias !5
  %818 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %819

819:                                              ; preds = %814, %812
  %820 = phi i64 [ %818, %814 ], [ %813, %812 ]
  %821 = phi i32 [ %816, %814 ], [ 0, %812 ]
  store i32 %821, i32* %383, align 8, !noalias !5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %384) #13, !noalias !5
  store i64 %820, i64* %385, align 8, !noalias !5
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), i8** %386, align 8, !noalias !5
  store i32 7, i32* %387, align 8, !noalias !5
  %822 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %384) #13, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %378) #13, !noalias !5
  br i1 %822, label %823, label %905

823:                                              ; preds = %819
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %388) #13, !noalias !5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %389, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i64 6) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %390, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0), i64 6) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %391, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i64 0, i64 0), i64 4) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %392, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0), i64 5) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %393, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), i64 4) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %394, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i64 0, i64 0), i64 6) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %395, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), i64 5) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %396, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i64 0, i64 0), i64 6) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %397, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i64 6) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %398, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0), i64 5) #13
  %824 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 80) #13
  %825 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %824, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  %826 = bitcast i8* %825 to %"class.WTF::String"*
  br label %827

827:                                              ; preds = %851, %823
  %828 = phi %"class.WTF::String"* [ %852, %851 ], [ %826, %823 ]
  %829 = phi %"class.WTF::String"* [ %853, %851 ], [ %389, %823 ]
  %830 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %829, i64 0, i32 0, i32 0
  %831 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %830, align 8, !noalias !5
  %832 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %828, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %831, %"class.WTF::StringImpl"** %832, align 8
  %833 = icmp eq %"class.WTF::StringImpl"* %831, null
  br i1 %833, label %851, label %834

834:                                              ; preds = %827
  %835 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %831, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %836 = load atomic i32, i32* %835 monotonic, align 4
  %837 = and i32 %836, 2
  %838 = icmp eq i32 %837, 0
  br i1 %838, label %839, label %851

839:                                              ; preds = %834
  %840 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %831, i64 0, i32 0
  %841 = load i32, i32* %840, align 4
  %842 = zext i32 %841 to i33
  %843 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %842, i33 1) #13
  %844 = extractvalue { i33, i1 } %843, 1
  %845 = extractvalue { i33, i1 } %843, 0
  %846 = icmp slt i33 %845, 0
  %847 = or i1 %844, %846
  br i1 %847, label %848, label %849, !prof !3

848:                                              ; preds = %839
  call void @llvm.trap() #13
  unreachable

849:                                              ; preds = %839
  %850 = trunc i33 %845 to i32
  store i32 %850, i32* %840, align 4
  br label %851

851:                                              ; preds = %849, %834, %827
  %852 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %828, i64 1
  %853 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %829, i64 1
  %854 = icmp eq %"class.WTF::String"* %853, %399
  br i1 %854, label %855, label %827

855:                                              ; preds = %851
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector.441"* nonnull %22, %"class.WTF::String"* %826, i32 10) #13
  %856 = icmp eq i8* %825, null
  br i1 %856, label %882, label %857, !prof !2

857:                                              ; preds = %855
  %858 = getelementptr inbounds i8, i8* %825, i64 80
  %859 = bitcast i8* %858 to %"class.WTF::String"*
  br label %860

860:                                              ; preds = %878, %857
  %861 = phi %"class.WTF::String"* [ %879, %878 ], [ %826, %857 ]
  %862 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %861, i64 0, i32 0, i32 0
  %863 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %862, align 8
  %864 = icmp eq %"class.WTF::StringImpl"* %863, null
  br i1 %864, label %878, label %865

865:                                              ; preds = %860
  %866 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %863, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %867 = load atomic i32, i32* %866 monotonic, align 4
  %868 = and i32 %867, 2
  %869 = icmp eq i32 %868, 0
  %870 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %863, i64 0, i32 0
  %871 = load i32, i32* %870, align 4
  br i1 %869, label %872, label %874

872:                                              ; preds = %865
  %873 = add i32 %871, -1
  store i32 %873, i32* %870, align 4
  br label %874

874:                                              ; preds = %872, %865
  %875 = phi i32 [ %873, %872 ], [ %871, %865 ]
  %876 = icmp eq i32 %875, 0
  br i1 %876, label %877, label %878

877:                                              ; preds = %874
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %863) #13
  br label %878

878:                                              ; preds = %877, %874, %860
  %879 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %861, i64 1
  %880 = icmp eq %"class.WTF::String"* %879, %859
  br i1 %880, label %881, label %860

881:                                              ; preds = %878
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %825) #13
  br label %882

882:                                              ; preds = %881, %855
  br label %883

883:                                              ; preds = %882, %902
  %884 = phi %"class.WTF::String"* [ %885, %902 ], [ %399, %882 ]
  %885 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %884, i64 -1
  %886 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %885, i64 0, i32 0, i32 0
  %887 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %886, align 8, !noalias !5
  %888 = icmp eq %"class.WTF::StringImpl"* %887, null
  br i1 %888, label %902, label %889

889:                                              ; preds = %883
  %890 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %887, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %891 = load atomic i32, i32* %890 monotonic, align 4
  %892 = and i32 %891, 2
  %893 = icmp eq i32 %892, 0
  %894 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %887, i64 0, i32 0
  %895 = load i32, i32* %894, align 4
  br i1 %893, label %896, label %898

896:                                              ; preds = %889
  %897 = add i32 %895, -1
  store i32 %897, i32* %894, align 4
  br label %898

898:                                              ; preds = %896, %889
  %899 = phi i32 [ %897, %896 ], [ %895, %889 ]
  %900 = icmp eq i32 %899, 0
  br i1 %900, label %901, label %902

901:                                              ; preds = %898
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %887) #13
  br label %902

902:                                              ; preds = %901, %898, %883
  %903 = icmp eq %"class.WTF::String"* %885, %389
  br i1 %903, label %904, label %883

904:                                              ; preds = %902
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %388) #13, !noalias !5
  br label %938

905:                                              ; preds = %819
  %906 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.441"* nonnull %13, i32 %445) #13
  %907 = load i32, i32* %87, align 4, !alias.scope !5
  %908 = load i32, i32* %86, align 8, !alias.scope !5
  %909 = icmp eq i32 %907, %908
  br i1 %909, label %937, label %910, !prof !3

910:                                              ; preds = %905
  %911 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8, !alias.scope !5
  %912 = zext i32 %907 to i64
  %913 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %906, i64 0, i32 0, i32 0
  %914 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %913, align 8
  %915 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %911, i64 %912, i32 0, i32 0
  store %"class.WTF::StringImpl"* %914, %"class.WTF::StringImpl"** %915, align 8
  %916 = icmp eq %"class.WTF::StringImpl"* %914, null
  br i1 %916, label %934, label %917

917:                                              ; preds = %910
  %918 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %914, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %919 = load atomic i32, i32* %918 monotonic, align 4
  %920 = and i32 %919, 2
  %921 = icmp eq i32 %920, 0
  br i1 %921, label %922, label %934

922:                                              ; preds = %917
  %923 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %914, i64 0, i32 0
  %924 = load i32, i32* %923, align 4
  %925 = zext i32 %924 to i33
  %926 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %925, i33 1) #13
  %927 = extractvalue { i33, i1 } %926, 1
  %928 = extractvalue { i33, i1 } %926, 0
  %929 = icmp slt i33 %928, 0
  %930 = or i1 %927, %929
  br i1 %930, label %931, label %932, !prof !3

931:                                              ; preds = %922
  call void @llvm.trap() #13
  unreachable

932:                                              ; preds = %922
  %933 = trunc i33 %928 to i32
  store i32 %933, i32* %923, align 4
  br label %934

934:                                              ; preds = %932, %917, %910
  %935 = load i32, i32* %87, align 4, !alias.scope !5
  %936 = add i32 %935, 1
  store i32 %936, i32* %87, align 4, !alias.scope !5
  br label %938

937:                                              ; preds = %905
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.441"* nonnull %22, %"class.WTF::String"* dereferenceable(8) %906) #13
  br label %938

938:                                              ; preds = %1281, %1129, %937, %934, %904, %806, %542
  %939 = add nuw i32 %445, 1
  %940 = load i32, i32* %92, align 4, !noalias !5
  %941 = icmp ult i32 %939, %940
  br i1 %941, label %444, label %942

942:                                              ; preds = %938, %334
  %943 = phi i32 [ 0, %334 ], [ %940, %938 ]
  %944 = load %"class.WTF::String"*, %"class.WTF::String"** %90, align 8, !noalias !5
  %945 = icmp eq %"class.WTF::String"* %944, null
  br i1 %945, label %1282, label %946, !prof !2

946:                                              ; preds = %942
  %947 = bitcast %"class.WTF::String"* %944 to i8*
  %948 = icmp eq i32 %943, 0
  br i1 %948, label %976, label %949, !prof !3

949:                                              ; preds = %946
  %950 = zext i32 %943 to i64
  %951 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %944, i64 %950
  br label %952

952:                                              ; preds = %970, %949
  %953 = phi %"class.WTF::String"* [ %971, %970 ], [ %944, %949 ]
  %954 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %953, i64 0, i32 0, i32 0
  %955 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %954, align 8
  %956 = icmp eq %"class.WTF::StringImpl"* %955, null
  br i1 %956, label %970, label %957

957:                                              ; preds = %952
  %958 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %955, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %959 = load atomic i32, i32* %958 monotonic, align 4
  %960 = and i32 %959, 2
  %961 = icmp eq i32 %960, 0
  %962 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %955, i64 0, i32 0
  %963 = load i32, i32* %962, align 4
  br i1 %961, label %964, label %966

964:                                              ; preds = %957
  %965 = add i32 %963, -1
  store i32 %965, i32* %962, align 4
  br label %966

966:                                              ; preds = %964, %957
  %967 = phi i32 [ %965, %964 ], [ %963, %957 ]
  %968 = icmp eq i32 %967, 0
  br i1 %968, label %969, label %970

969:                                              ; preds = %966
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %955) #13
  br label %970

970:                                              ; preds = %969, %966, %952
  %971 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %953, i64 1
  %972 = icmp eq %"class.WTF::String"* %971, %951
  br i1 %972, label %973, label %952

973:                                              ; preds = %970
  store i32 0, i32* %92, align 4, !noalias !5
  %974 = bitcast %"class.WTF::Vector.441"* %13 to i8**
  %975 = load i8*, i8** %974, align 8, !noalias !5
  br label %976

976:                                              ; preds = %973, %946
  %977 = phi i8* [ %975, %973 ], [ %947, %946 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %977) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %90, align 8, !noalias !5
  br label %1282

978:                                              ; preds = %666
  %979 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %980 = load atomic i32, i32* %979 monotonic, align 4
  %981 = and i32 %980, 2
  %982 = icmp eq i32 %981, 0
  br i1 %982, label %983, label %994

983:                                              ; preds = %978
  %984 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %668, i64 0, i32 0
  %985 = load i32, i32* %984, align 4
  %986 = zext i32 %985 to i33
  %987 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %986, i33 1) #13
  %988 = extractvalue { i33, i1 } %987, 1
  %989 = extractvalue { i33, i1 } %987, 0
  %990 = icmp slt i33 %989, 0
  %991 = or i1 %988, %990
  br i1 %991, label %663, label %992, !prof !3

992:                                              ; preds = %983
  %993 = trunc i33 %989 to i32
  store i32 %993, i32* %984, align 4
  br label %994

994:                                              ; preds = %992, %978, %666
  %995 = getelementptr inbounds i8, i8* %644, i64 16
  %996 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %438, align 8, !noalias !5
  %997 = bitcast i8* %995 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %996, %"class.WTF::StringImpl"** %997, align 8
  %998 = icmp eq %"class.WTF::StringImpl"* %996, null
  br i1 %998, label %1015, label %999

999:                                              ; preds = %994
  %1000 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %996, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1001 = load atomic i32, i32* %1000 monotonic, align 4
  %1002 = and i32 %1001, 2
  %1003 = icmp eq i32 %1002, 0
  br i1 %1003, label %1004, label %1015

1004:                                             ; preds = %999
  %1005 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %996, i64 0, i32 0
  %1006 = load i32, i32* %1005, align 4
  %1007 = zext i32 %1006 to i33
  %1008 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1007, i33 1) #13
  %1009 = extractvalue { i33, i1 } %1008, 1
  %1010 = extractvalue { i33, i1 } %1008, 0
  %1011 = icmp slt i33 %1010, 0
  %1012 = or i1 %1009, %1011
  br i1 %1012, label %663, label %1013, !prof !3

1013:                                             ; preds = %1004
  %1014 = trunc i33 %1010 to i32
  store i32 %1014, i32* %1005, align 4
  br label %1015

1015:                                             ; preds = %1013, %999, %994
  %1016 = getelementptr inbounds i8, i8* %644, i64 24
  %1017 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %439, align 8, !noalias !5
  %1018 = bitcast i8* %1016 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1017, %"class.WTF::StringImpl"** %1018, align 8
  %1019 = icmp eq %"class.WTF::StringImpl"* %1017, null
  br i1 %1019, label %1036, label %1020

1020:                                             ; preds = %1015
  %1021 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1017, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1022 = load atomic i32, i32* %1021 monotonic, align 4
  %1023 = and i32 %1022, 2
  %1024 = icmp eq i32 %1023, 0
  br i1 %1024, label %1025, label %1036

1025:                                             ; preds = %1020
  %1026 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1017, i64 0, i32 0
  %1027 = load i32, i32* %1026, align 4
  %1028 = zext i32 %1027 to i33
  %1029 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1028, i33 1) #13
  %1030 = extractvalue { i33, i1 } %1029, 1
  %1031 = extractvalue { i33, i1 } %1029, 0
  %1032 = icmp slt i33 %1031, 0
  %1033 = or i1 %1030, %1032
  br i1 %1033, label %663, label %1034, !prof !3

1034:                                             ; preds = %1025
  %1035 = trunc i33 %1031 to i32
  store i32 %1035, i32* %1026, align 4
  br label %1036

1036:                                             ; preds = %1034, %1020, %1015
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector.441"* nonnull %22, %"class.WTF::String"* %645, i32 4) #13
  %1037 = icmp eq i8* %644, null
  br i1 %1037, label %690, label %671, !prof !2

1038:                                             ; preds = %687
  %1039 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %688, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1040 = load atomic i32, i32* %1039 monotonic, align 4
  %1041 = and i32 %1040, 2
  %1042 = icmp eq i32 %1041, 0
  %1043 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %688, i64 0, i32 0
  %1044 = load i32, i32* %1043, align 4
  br i1 %1042, label %1045, label %1047

1045:                                             ; preds = %1038
  %1046 = add i32 %1044, -1
  store i32 %1046, i32* %1043, align 4
  br label %1047

1047:                                             ; preds = %1045, %1038
  %1048 = phi i32 [ %1046, %1045 ], [ %1044, %1038 ]
  %1049 = icmp eq i32 %1048, 0
  br i1 %1049, label %1050, label %1051

1050:                                             ; preds = %1047
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %688) #13
  br label %1051

1051:                                             ; preds = %1050, %1047, %687
  %1052 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %997, align 8
  %1053 = icmp eq %"class.WTF::StringImpl"* %1052, null
  br i1 %1053, label %1067, label %1054

1054:                                             ; preds = %1051
  %1055 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1052, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1056 = load atomic i32, i32* %1055 monotonic, align 4
  %1057 = and i32 %1056, 2
  %1058 = icmp eq i32 %1057, 0
  %1059 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1052, i64 0, i32 0
  %1060 = load i32, i32* %1059, align 4
  br i1 %1058, label %1061, label %1063

1061:                                             ; preds = %1054
  %1062 = add i32 %1060, -1
  store i32 %1062, i32* %1059, align 4
  br label %1063

1063:                                             ; preds = %1061, %1054
  %1064 = phi i32 [ %1062, %1061 ], [ %1060, %1054 ]
  %1065 = icmp eq i32 %1064, 0
  br i1 %1065, label %1066, label %1067

1066:                                             ; preds = %1063
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1052) #13
  br label %1067

1067:                                             ; preds = %1066, %1063, %1051
  %1068 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1018, align 8
  %1069 = icmp eq %"class.WTF::StringImpl"* %1068, null
  br i1 %1069, label %1083, label %1070

1070:                                             ; preds = %1067
  %1071 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1068, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1072 = load atomic i32, i32* %1071 monotonic, align 4
  %1073 = and i32 %1072, 2
  %1074 = icmp eq i32 %1073, 0
  %1075 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1068, i64 0, i32 0
  %1076 = load i32, i32* %1075, align 4
  br i1 %1074, label %1077, label %1079

1077:                                             ; preds = %1070
  %1078 = add i32 %1076, -1
  store i32 %1078, i32* %1075, align 4
  br label %1079

1079:                                             ; preds = %1077, %1070
  %1080 = phi i32 [ %1078, %1077 ], [ %1076, %1070 ]
  %1081 = icmp eq i32 %1080, 0
  br i1 %1081, label %1082, label %1083

1082:                                             ; preds = %1079
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1068) #13
  br label %1083

1083:                                             ; preds = %1082, %1079, %1067
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %644) #13
  br label %690

1084:                                             ; preds = %706
  %1085 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %707, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1086 = load atomic i32, i32* %1085 monotonic, align 4
  %1087 = and i32 %1086, 2
  %1088 = icmp eq i32 %1087, 0
  %1089 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %707, i64 0, i32 0
  %1090 = load i32, i32* %1089, align 4
  br i1 %1088, label %1091, label %1093

1091:                                             ; preds = %1084
  %1092 = add i32 %1090, -1
  store i32 %1092, i32* %1089, align 4
  br label %1093

1093:                                             ; preds = %1091, %1084
  %1094 = phi i32 [ %1092, %1091 ], [ %1090, %1084 ]
  %1095 = icmp eq i32 %1094, 0
  br i1 %1095, label %1096, label %1097

1096:                                             ; preds = %1093
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %707) #13
  br label %1097

1097:                                             ; preds = %1096, %1093, %706
  %1098 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %437, align 8, !noalias !5
  %1099 = icmp eq %"class.WTF::StringImpl"* %1098, null
  br i1 %1099, label %1113, label %1100

1100:                                             ; preds = %1097
  %1101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1098, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1102 = load atomic i32, i32* %1101 monotonic, align 4
  %1103 = and i32 %1102, 2
  %1104 = icmp eq i32 %1103, 0
  %1105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1098, i64 0, i32 0
  %1106 = load i32, i32* %1105, align 4
  br i1 %1104, label %1107, label %1109

1107:                                             ; preds = %1100
  %1108 = add i32 %1106, -1
  store i32 %1108, i32* %1105, align 4
  br label %1109

1109:                                             ; preds = %1107, %1100
  %1110 = phi i32 [ %1108, %1107 ], [ %1106, %1100 ]
  %1111 = icmp eq i32 %1110, 0
  br i1 %1111, label %1112, label %1113

1112:                                             ; preds = %1109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1098) #13
  br label %1113

1113:                                             ; preds = %1112, %1109, %1097
  %1114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %436, align 8, !noalias !5
  %1115 = icmp eq %"class.WTF::StringImpl"* %1114, null
  br i1 %1115, label %1129, label %1116

1116:                                             ; preds = %1113
  %1117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1118 = load atomic i32, i32* %1117 monotonic, align 4
  %1119 = and i32 %1118, 2
  %1120 = icmp eq i32 %1119, 0
  %1121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1114, i64 0, i32 0
  %1122 = load i32, i32* %1121, align 4
  br i1 %1120, label %1123, label %1125

1123:                                             ; preds = %1116
  %1124 = add i32 %1122, -1
  store i32 %1124, i32* %1121, align 4
  br label %1125

1125:                                             ; preds = %1123, %1116
  %1126 = phi i32 [ %1124, %1123 ], [ %1122, %1116 ]
  %1127 = icmp eq i32 %1126, 0
  br i1 %1127, label %1128, label %1129

1128:                                             ; preds = %1125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1114) #13
  br label %1129

1129:                                             ; preds = %1128, %1125, %1113
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %412) #13, !noalias !5
  br label %938

1130:                                             ; preds = %583
  %1131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %585, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1132 = load atomic i32, i32* %1131 monotonic, align 4
  %1133 = and i32 %1132, 2
  %1134 = icmp eq i32 %1133, 0
  br i1 %1134, label %1135, label %1146

1135:                                             ; preds = %1130
  %1136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %585, i64 0, i32 0
  %1137 = load i32, i32* %1136, align 4
  %1138 = zext i32 %1137 to i33
  %1139 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1138, i33 1) #13
  %1140 = extractvalue { i33, i1 } %1139, 1
  %1141 = extractvalue { i33, i1 } %1139, 0
  %1142 = icmp slt i33 %1141, 0
  %1143 = or i1 %1140, %1142
  br i1 %1143, label %580, label %1144, !prof !3

1144:                                             ; preds = %1135
  %1145 = trunc i33 %1141 to i32
  store i32 %1145, i32* %1136, align 4
  br label %1146

1146:                                             ; preds = %1144, %1130, %583
  %1147 = getelementptr inbounds i8, i8* %561, i64 16
  %1148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %442, align 8, !noalias !5
  %1149 = bitcast i8* %1147 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1148, %"class.WTF::StringImpl"** %1149, align 8
  %1150 = icmp eq %"class.WTF::StringImpl"* %1148, null
  br i1 %1150, label %1167, label %1151

1151:                                             ; preds = %1146
  %1152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1153 = load atomic i32, i32* %1152 monotonic, align 4
  %1154 = and i32 %1153, 2
  %1155 = icmp eq i32 %1154, 0
  br i1 %1155, label %1156, label %1167

1156:                                             ; preds = %1151
  %1157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1148, i64 0, i32 0
  %1158 = load i32, i32* %1157, align 4
  %1159 = zext i32 %1158 to i33
  %1160 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1159, i33 1) #13
  %1161 = extractvalue { i33, i1 } %1160, 1
  %1162 = extractvalue { i33, i1 } %1160, 0
  %1163 = icmp slt i33 %1162, 0
  %1164 = or i1 %1161, %1163
  br i1 %1164, label %580, label %1165, !prof !3

1165:                                             ; preds = %1156
  %1166 = trunc i33 %1162 to i32
  store i32 %1166, i32* %1157, align 4
  br label %1167

1167:                                             ; preds = %1165, %1151, %1146
  %1168 = getelementptr inbounds i8, i8* %561, i64 24
  %1169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %443, align 8, !noalias !5
  %1170 = bitcast i8* %1168 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1169, %"class.WTF::StringImpl"** %1170, align 8
  %1171 = icmp eq %"class.WTF::StringImpl"* %1169, null
  br i1 %1171, label %1188, label %1172

1172:                                             ; preds = %1167
  %1173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1174 = load atomic i32, i32* %1173 monotonic, align 4
  %1175 = and i32 %1174, 2
  %1176 = icmp eq i32 %1175, 0
  br i1 %1176, label %1177, label %1188

1177:                                             ; preds = %1172
  %1178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1169, i64 0, i32 0
  %1179 = load i32, i32* %1178, align 4
  %1180 = zext i32 %1179 to i33
  %1181 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1180, i33 1) #13
  %1182 = extractvalue { i33, i1 } %1181, 1
  %1183 = extractvalue { i33, i1 } %1181, 0
  %1184 = icmp slt i33 %1183, 0
  %1185 = or i1 %1182, %1184
  br i1 %1185, label %580, label %1186, !prof !3

1186:                                             ; preds = %1177
  %1187 = trunc i33 %1183 to i32
  store i32 %1187, i32* %1178, align 4
  br label %1188

1188:                                             ; preds = %1186, %1172, %1167
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector.441"* nonnull %22, %"class.WTF::String"* %562, i32 4) #13
  %1189 = icmp eq i8* %561, null
  br i1 %1189, label %607, label %588, !prof !2

1190:                                             ; preds = %604
  %1191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %605, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1192 = load atomic i32, i32* %1191 monotonic, align 4
  %1193 = and i32 %1192, 2
  %1194 = icmp eq i32 %1193, 0
  %1195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %605, i64 0, i32 0
  %1196 = load i32, i32* %1195, align 4
  br i1 %1194, label %1197, label %1199

1197:                                             ; preds = %1190
  %1198 = add i32 %1196, -1
  store i32 %1198, i32* %1195, align 4
  br label %1199

1199:                                             ; preds = %1197, %1190
  %1200 = phi i32 [ %1198, %1197 ], [ %1196, %1190 ]
  %1201 = icmp eq i32 %1200, 0
  br i1 %1201, label %1202, label %1203

1202:                                             ; preds = %1199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %605) #13
  br label %1203

1203:                                             ; preds = %1202, %1199, %604
  %1204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1149, align 8
  %1205 = icmp eq %"class.WTF::StringImpl"* %1204, null
  br i1 %1205, label %1219, label %1206

1206:                                             ; preds = %1203
  %1207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1208 = load atomic i32, i32* %1207 monotonic, align 4
  %1209 = and i32 %1208, 2
  %1210 = icmp eq i32 %1209, 0
  %1211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1204, i64 0, i32 0
  %1212 = load i32, i32* %1211, align 4
  br i1 %1210, label %1213, label %1215

1213:                                             ; preds = %1206
  %1214 = add i32 %1212, -1
  store i32 %1214, i32* %1211, align 4
  br label %1215

1215:                                             ; preds = %1213, %1206
  %1216 = phi i32 [ %1214, %1213 ], [ %1212, %1206 ]
  %1217 = icmp eq i32 %1216, 0
  br i1 %1217, label %1218, label %1219

1218:                                             ; preds = %1215
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1204) #13
  br label %1219

1219:                                             ; preds = %1218, %1215, %1203
  %1220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1170, align 8
  %1221 = icmp eq %"class.WTF::StringImpl"* %1220, null
  br i1 %1221, label %1235, label %1222

1222:                                             ; preds = %1219
  %1223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1224 = load atomic i32, i32* %1223 monotonic, align 4
  %1225 = and i32 %1224, 2
  %1226 = icmp eq i32 %1225, 0
  %1227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1220, i64 0, i32 0
  %1228 = load i32, i32* %1227, align 4
  br i1 %1226, label %1229, label %1231

1229:                                             ; preds = %1222
  %1230 = add i32 %1228, -1
  store i32 %1230, i32* %1227, align 4
  br label %1231

1231:                                             ; preds = %1229, %1222
  %1232 = phi i32 [ %1230, %1229 ], [ %1228, %1222 ]
  %1233 = icmp eq i32 %1232, 0
  br i1 %1233, label %1234, label %1235

1234:                                             ; preds = %1231
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1220) #13
  br label %1235

1235:                                             ; preds = %1234, %1231, %1219
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %561) #13
  br label %607

1236:                                             ; preds = %623
  %1237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %624, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1238 = load atomic i32, i32* %1237 monotonic, align 4
  %1239 = and i32 %1238, 2
  %1240 = icmp eq i32 %1239, 0
  %1241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %624, i64 0, i32 0
  %1242 = load i32, i32* %1241, align 4
  br i1 %1240, label %1243, label %1245

1243:                                             ; preds = %1236
  %1244 = add i32 %1242, -1
  store i32 %1244, i32* %1241, align 4
  br label %1245

1245:                                             ; preds = %1243, %1236
  %1246 = phi i32 [ %1244, %1243 ], [ %1242, %1236 ]
  %1247 = icmp eq i32 %1246, 0
  br i1 %1247, label %1248, label %1249

1248:                                             ; preds = %1245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %624) #13
  br label %1249

1249:                                             ; preds = %1248, %1245, %623
  %1250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %441, align 8, !noalias !5
  %1251 = icmp eq %"class.WTF::StringImpl"* %1250, null
  br i1 %1251, label %1265, label %1252

1252:                                             ; preds = %1249
  %1253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1254 = load atomic i32, i32* %1253 monotonic, align 4
  %1255 = and i32 %1254, 2
  %1256 = icmp eq i32 %1255, 0
  %1257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1250, i64 0, i32 0
  %1258 = load i32, i32* %1257, align 4
  br i1 %1256, label %1259, label %1261

1259:                                             ; preds = %1252
  %1260 = add i32 %1258, -1
  store i32 %1260, i32* %1257, align 4
  br label %1261

1261:                                             ; preds = %1259, %1252
  %1262 = phi i32 [ %1260, %1259 ], [ %1258, %1252 ]
  %1263 = icmp eq i32 %1262, 0
  br i1 %1263, label %1264, label %1265

1264:                                             ; preds = %1261
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1250) #13
  br label %1265

1265:                                             ; preds = %1264, %1261, %1249
  %1266 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %440, align 8, !noalias !5
  %1267 = icmp eq %"class.WTF::StringImpl"* %1266, null
  br i1 %1267, label %1281, label %1268

1268:                                             ; preds = %1265
  %1269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1270 = load atomic i32, i32* %1269 monotonic, align 4
  %1271 = and i32 %1270, 2
  %1272 = icmp eq i32 %1271, 0
  %1273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1266, i64 0, i32 0
  %1274 = load i32, i32* %1273, align 4
  br i1 %1272, label %1275, label %1277

1275:                                             ; preds = %1268
  %1276 = add i32 %1274, -1
  store i32 %1276, i32* %1273, align 4
  br label %1277

1277:                                             ; preds = %1275, %1268
  %1278 = phi i32 [ %1276, %1275 ], [ %1274, %1268 ]
  %1279 = icmp eq i32 %1278, 0
  br i1 %1279, label %1280, label %1281

1280:                                             ; preds = %1277
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1266) #13
  br label %1281

1281:                                             ; preds = %1280, %1277, %1265
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %417) #13, !noalias !5
  br label %938

1282:                                             ; preds = %942, %976
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #13, !noalias !5
  %1283 = load i64*, i64** %29, align 8
  %1284 = getelementptr inbounds i64, i64* %1283, i64 4
  %1285 = bitcast i64* %1284 to %"class.v8::Object"*
  %1286 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21CallbackInterfaceBaseEEEPhm(i64 40) #13
  %1287 = bitcast i8* %1286 to %"class.blink::V8EventListener"*
  %1288 = bitcast i8* %1286 to %"class.blink::CallbackInterfaceBase"*
  call void @_ZN5blink21CallbackInterfaceBaseC2EN2v85LocalINS1_6ObjectEEENS0_20SingleOperationOrNotE(%"class.blink::CallbackInterfaceBase"* %1288, %"class.v8::Object"* %1285, i32 1) #13
  %1289 = bitcast i8* %1286 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink15V8EventListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1289, align 8
  %1290 = getelementptr inbounds i8, i8* %1286, i64 -4
  %1291 = bitcast i8* %1290 to i16*
  %1292 = load atomic i16, i16* %1291 monotonic, align 2
  %1293 = or i16 %1292, 1
  store atomic i16 %1293, i16* %1291 release, align 2
  %1294 = load i32, i32* %87, align 4
  %1295 = icmp eq i32 %1294, 0
  br i1 %1295, label %1303, label %1296

1296:                                             ; preds = %1282
  %1297 = bitcast %"class.WTF::AtomicString"* %24 to i8*
  %1298 = bitcast %"class.WTF::AtomicString"* %24 to i64*
  %1299 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 0, i32 0, i32 0, i32 0
  %1300 = bitcast %"class.WTF::AtomicString"* %23 to i8*
  %1301 = bitcast %"class.WTF::AtomicString"* %23 to i64*
  %1302 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  br label %1340

1303:                                             ; preds = %1436, %1282
  %1304 = phi i32 [ 0, %1282 ], [ %1439, %1436 ]
  %1305 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %1306 = icmp eq %"class.WTF::String"* %1305, null
  br i1 %1306, label %1339, label %1307, !prof !2

1307:                                             ; preds = %1303
  %1308 = bitcast %"class.WTF::String"* %1305 to i8*
  %1309 = icmp eq i32 %1304, 0
  br i1 %1309, label %1337, label %1310, !prof !3

1310:                                             ; preds = %1307
  %1311 = zext i32 %1304 to i64
  %1312 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1305, i64 %1311
  br label %1313

1313:                                             ; preds = %1331, %1310
  %1314 = phi %"class.WTF::String"* [ %1332, %1331 ], [ %1305, %1310 ]
  %1315 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1314, i64 0, i32 0, i32 0
  %1316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1315, align 8
  %1317 = icmp eq %"class.WTF::StringImpl"* %1316, null
  br i1 %1317, label %1331, label %1318

1318:                                             ; preds = %1313
  %1319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1316, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1320 = load atomic i32, i32* %1319 monotonic, align 4
  %1321 = and i32 %1320, 2
  %1322 = icmp eq i32 %1321, 0
  %1323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1316, i64 0, i32 0
  %1324 = load i32, i32* %1323, align 4
  br i1 %1322, label %1325, label %1327

1325:                                             ; preds = %1318
  %1326 = add i32 %1324, -1
  store i32 %1326, i32* %1323, align 4
  br label %1327

1327:                                             ; preds = %1325, %1318
  %1328 = phi i32 [ %1326, %1325 ], [ %1324, %1318 ]
  %1329 = icmp eq i32 %1328, 0
  br i1 %1329, label %1330, label %1331

1330:                                             ; preds = %1327
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1316) #13
  br label %1331

1331:                                             ; preds = %1330, %1327, %1313
  %1332 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1314, i64 1
  %1333 = icmp eq %"class.WTF::String"* %1332, %1312
  br i1 %1333, label %1334, label %1313

1334:                                             ; preds = %1331
  store i32 0, i32* %87, align 4
  %1335 = bitcast %"class.WTF::Vector.441"* %22 to i8**
  %1336 = load i8*, i8** %1335, align 8
  br label %1337

1337:                                             ; preds = %1334, %1307
  %1338 = phi i8* [ %1336, %1334 ], [ %1308, %1307 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1338) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %85, align 8
  br label %1339

1339:                                             ; preds = %1303, %1337
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #13
  br label %1441

1340:                                             ; preds = %1296, %1436
  %1341 = phi i32 [ 0, %1296 ], [ %1438, %1436 ]
  br i1 %1, label %1342, label %1389

1342:                                             ; preds = %1340
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1300) #13
  %1343 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.441"* nonnull %22, i32 %1341) #13
  %1344 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1343, i64 0, i32 0, i32 0
  %1345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1344, align 8
  %1346 = icmp eq %"class.WTF::StringImpl"* %1345, null
  br i1 %1346, label %1370, label %1347

1347:                                             ; preds = %1342
  %1348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1345, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1349 = load atomic i32, i32* %1348 acquire, align 4
  %1350 = and i32 %1349, 4
  %1351 = icmp eq i32 %1350, 0
  br i1 %1351, label %1368, label %1352

1352:                                             ; preds = %1347
  %1353 = load atomic i32, i32* %1348 monotonic, align 4
  %1354 = and i32 %1353, 2
  %1355 = icmp eq i32 %1354, 0
  br i1 %1355, label %1356, label %1370

1356:                                             ; preds = %1352
  %1357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1345, i64 0, i32 0
  %1358 = load i32, i32* %1357, align 4
  %1359 = zext i32 %1358 to i33
  %1360 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1359, i33 1) #13
  %1361 = extractvalue { i33, i1 } %1360, 1
  %1362 = extractvalue { i33, i1 } %1360, 0
  %1363 = icmp slt i33 %1362, 0
  %1364 = or i1 %1361, %1363
  br i1 %1364, label %1365, label %1366, !prof !3

1365:                                             ; preds = %1356
  call void @llvm.trap() #13
  unreachable

1366:                                             ; preds = %1356
  %1367 = trunc i33 %1362 to i32
  store i32 %1367, i32* %1357, align 4
  br label %1370

1368:                                             ; preds = %1347
  %1369 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %1345) #13
  br label %1370

1370:                                             ; preds = %1342, %1352, %1366, %1368
  %1371 = phi %"class.WTF::StringImpl"* [ %1369, %1368 ], [ %1345, %1352 ], [ %1345, %1366 ], [ null, %1342 ]
  %1372 = ptrtoint %"class.WTF::StringImpl"* %1371 to i64
  store i64 %1372, i64* %1301, align 8
  %1373 = call zeroext i1 @_ZN5blink11EventTarget16addEventListenerERKN3WTF12AtomicStringEPNS_15V8EventListenerE(%"class.blink::EventTarget"* nonnull %81, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %23, %"class.blink::V8EventListener"* %1287) #13
  %1374 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1302, align 8
  %1375 = icmp eq %"class.WTF::StringImpl"* %1374, null
  br i1 %1375, label %1436, label %1376

1376:                                             ; preds = %1370
  %1377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1374, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1378 = load atomic i32, i32* %1377 monotonic, align 4
  %1379 = and i32 %1378, 2
  %1380 = icmp eq i32 %1379, 0
  %1381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1374, i64 0, i32 0
  %1382 = load i32, i32* %1381, align 4
  br i1 %1380, label %1383, label %1385

1383:                                             ; preds = %1376
  %1384 = add i32 %1382, -1
  store i32 %1384, i32* %1381, align 4
  br label %1385

1385:                                             ; preds = %1383, %1376
  %1386 = phi i32 [ %1384, %1383 ], [ %1382, %1376 ]
  %1387 = icmp eq i32 %1386, 0
  br i1 %1387, label %1388, label %1436

1388:                                             ; preds = %1385
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1374) #13
  br label %1436

1389:                                             ; preds = %1340
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1297) #13
  %1390 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.441"* nonnull %22, i32 %1341) #13
  %1391 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1390, i64 0, i32 0, i32 0
  %1392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1391, align 8
  %1393 = icmp eq %"class.WTF::StringImpl"* %1392, null
  br i1 %1393, label %1417, label %1394

1394:                                             ; preds = %1389
  %1395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1392, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1396 = load atomic i32, i32* %1395 acquire, align 4
  %1397 = and i32 %1396, 4
  %1398 = icmp eq i32 %1397, 0
  br i1 %1398, label %1415, label %1399

1399:                                             ; preds = %1394
  %1400 = load atomic i32, i32* %1395 monotonic, align 4
  %1401 = and i32 %1400, 2
  %1402 = icmp eq i32 %1401, 0
  br i1 %1402, label %1403, label %1417

1403:                                             ; preds = %1399
  %1404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1392, i64 0, i32 0
  %1405 = load i32, i32* %1404, align 4
  %1406 = zext i32 %1405 to i33
  %1407 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1406, i33 1) #13
  %1408 = extractvalue { i33, i1 } %1407, 1
  %1409 = extractvalue { i33, i1 } %1407, 0
  %1410 = icmp slt i33 %1409, 0
  %1411 = or i1 %1408, %1410
  br i1 %1411, label %1412, label %1413, !prof !3

1412:                                             ; preds = %1403
  call void @llvm.trap() #13
  unreachable

1413:                                             ; preds = %1403
  %1414 = trunc i33 %1409 to i32
  store i32 %1414, i32* %1404, align 4
  br label %1417

1415:                                             ; preds = %1394
  %1416 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %1392) #13
  br label %1417

1417:                                             ; preds = %1389, %1399, %1413, %1415
  %1418 = phi %"class.WTF::StringImpl"* [ %1416, %1415 ], [ %1392, %1399 ], [ %1392, %1413 ], [ null, %1389 ]
  %1419 = ptrtoint %"class.WTF::StringImpl"* %1418 to i64
  store i64 %1419, i64* %1298, align 8
  %1420 = call zeroext i1 @_ZN5blink11EventTarget19removeEventListenerERKN3WTF12AtomicStringEPNS_15V8EventListenerE(%"class.blink::EventTarget"* nonnull %81, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %24, %"class.blink::V8EventListener"* %1287) #13
  %1421 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1299, align 8
  %1422 = icmp eq %"class.WTF::StringImpl"* %1421, null
  br i1 %1422, label %1436, label %1423

1423:                                             ; preds = %1417
  %1424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1421, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1425 = load atomic i32, i32* %1424 monotonic, align 4
  %1426 = and i32 %1425, 2
  %1427 = icmp eq i32 %1426, 0
  %1428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1421, i64 0, i32 0
  %1429 = load i32, i32* %1428, align 4
  br i1 %1427, label %1430, label %1432

1430:                                             ; preds = %1423
  %1431 = add i32 %1429, -1
  store i32 %1431, i32* %1428, align 4
  br label %1432

1432:                                             ; preds = %1430, %1423
  %1433 = phi i32 [ %1431, %1430 ], [ %1429, %1423 ]
  %1434 = icmp eq i32 %1433, 0
  br i1 %1434, label %1435, label %1436

1435:                                             ; preds = %1432
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1421) #13
  br label %1436

1436:                                             ; preds = %1435, %1432, %1417, %1388, %1385, %1370
  %1437 = phi i8* [ %1300, %1370 ], [ %1300, %1385 ], [ %1300, %1388 ], [ %1297, %1417 ], [ %1297, %1432 ], [ %1297, %1435 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1437) #13
  %1438 = add nuw i32 %1341, 1
  %1439 = load i32, i32* %87, align 4
  %1440 = icmp ult i32 %1438, %1439
  br i1 %1440, label %1340, label %1303

1441:                                             ; preds = %2, %80, %1339
  ret void
}

declare zeroext i1 @_ZN5blink11EventTarget16addEventListenerERKN3WTF12AtomicStringEPNS_15V8EventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::V8EventListener"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11EventTarget19removeEventListenerERKN3WTF12AtomicStringEPNS_15V8EventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::V8EventListener"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink7Element12computedNameEv(%"class.blink::Element"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink7Element12computedRoleEv(%"class.blink::Element"*) local_unnamed_addr #1

declare i8* @_ZNK2v88External5ValueEv(%"class.v8::External"*) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN5blink25InspectorDOMDebuggerAgent27EventListenersInfoForTargetEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPN3WTF6VectorINS_19V8EventListenerInfoELj0ENS7_18PartitionAllocatorEEE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.WTF::Vector.2175"*) local_unnamed_addr #1

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #7 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #13
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #13
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #13
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !3

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #13
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger11consoleTimeERKN12v8_inspector10StringViewE(%"class.blink::ThreadDebugger"*, %"class.v8_inspector::StringView"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 13, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %48, label %9, !prof !2

9:                                                ; preds = %2
  %10 = ptrtoint %"class.blink::ThreadDebugger"* %0 to i64
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  %13 = tail call %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringERKN12v8_inspector10StringViewE(%"class.v8_inspector::StringView"* dereferenceable(24) %1) #13
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5, i32 0) #13
  %15 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = select i1 %18, i8* %20, i8* %11
  %22 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %23 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %25 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %25, i64* %24, align 8
  %26 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 98, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 13, i32 0), i8* %21, i8* null, i64 %10, i64 0, i32 %22, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 2049) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  %27 = load i8, i8* %16, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %9
  %30 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %30) #16
  br label %31

31:                                               ; preds = %9, %29
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #13
  br label %47

47:                                               ; preds = %31, %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  br label %48

48:                                               ; preds = %2, %47
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringERKN12v8_inspector10StringViewE(%"class.v8_inspector::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger14consoleTimeEndERKN12v8_inspector10StringViewE(%"class.blink::ThreadDebugger"*, %"class.v8_inspector::StringView"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 13, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %48, label %9, !prof !2

9:                                                ; preds = %2
  %10 = ptrtoint %"class.blink::ThreadDebugger"* %0 to i64
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  %13 = tail call %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringERKN12v8_inspector10StringViewE(%"class.v8_inspector::StringView"* dereferenceable(24) %1) #13
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5, i32 0) #13
  %15 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = select i1 %18, i8* %20, i8* %11
  %22 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %23 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %25 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %25, i64* %24, align 8
  %26 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 101, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 13, i32 0), i8* %21, i8* null, i64 %10, i64 0, i32 %22, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 2049) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  %27 = load i8, i8* %16, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %9
  %30 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %30) #16
  br label %31

31:                                               ; preds = %9, %29
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #13
  br label %47

47:                                               ; preds = %31, %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  br label %48

48:                                               ; preds = %2, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger16consoleTimeStampERKN12v8_inspector10StringViewE(%"class.blink::ThreadDebugger"* nocapture readonly, %"class.v8_inspector::StringView"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.base::trace_event::TraceArguments", align 8
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 2
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = tail call %"class.blink::ExecutionContext"* @_ZN5blink23CurrentExecutionContextEPN2v87IsolateE(%"class.v8::Isolate"* %10) #13
  %12 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 43, i32 0), align 16
  %13 = and i8 %12, 25
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %100, label %15, !prof !2

15:                                               ; preds = %2
  %16 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %17 = bitcast %"class.base::TimeTicks"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  %19 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 40, i1 false) #13
  store i8 1, i8* %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %6, i64 0, i32 1, i64 0
  store i8 9, i8* %21, align 1
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %6, i64 0, i32 2, i64 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8** %22, align 8
  %23 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %6, i64 0, i32 3, i64 0
  %24 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #13
  %25 = tail call i8* @_Znwm(i64 192) #16
  %26 = bitcast i8* %25 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %26, i64 4096, i64 4096) #13
  %27 = getelementptr inbounds i8, i8* %25, i64 80
  %28 = bitcast i8* %27 to %"class.protozero::ScatteredStreamWriter"*
  %29 = bitcast i8* %25 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %28, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %29) #13
  %30 = getelementptr inbounds i8, i8* %25, i64 120
  %31 = getelementptr inbounds i8, i8* %25, i64 168
  %32 = bitcast i8* %31 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %32) #13
  %33 = bitcast i8* %30 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %33, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %32) #13
  %34 = getelementptr inbounds i8, i8* %25, i64 24
  %35 = bitcast i8* %34 to i8**
  store i8* %27, i8** %35, align 8
  %36 = bitcast i8* %31 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %36, i64 1) #13
  %37 = bitcast i8* %31 to %"struct.std::__1::__list_node"**
  %38 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %38, i64 0, i32 1, i32 1
  store i32 0, i32* %39, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %33, %"class.protozero::ScatteredStreamWriter"* %28, %"class.protozero::MessageArena"* %32) #13
  %40 = bitcast %"union.base::trace_event::TraceValue"* %23 to i8**
  store i8* %25, i8** %40, align 8
  %41 = bitcast i8* %30 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %5, %"class.perfetto::protos::pbzero::DebugAnnotation"* %41) #13
  %42 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* nonnull align 8 %24, i64 16, i1 false) #13
  %43 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  %44 = call %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringERKN12v8_inspector10StringViewE(%"class.v8_inspector::StringView"* dereferenceable(24) %1) #13
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %45, align 8
  call void @_ZN5blink26inspector_time_stamp_event4DataEN8perfetto11TracedValueEPNS_16ExecutionContextERKN3WTF6StringE(%"class.perfetto::TracedValue"* nonnull %3, %"class.blink::ExecutionContext"* %11, %"class.WTF::String"* nonnull dereferenceable(8) %4) #13
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %15
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #13
  br label %61

61:                                               ; preds = %60, %57, %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #13
  %62 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 43, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %16, %"class.base::TimeTicks"* nonnull dereferenceable(8) %7, %"class.base::trace_event::TraceArguments"* nonnull %6, i32 8) #13
  %63 = load i8, i8* %20, align 8
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %99, label %65

65:                                               ; preds = %61, %94
  %66 = phi i64 [ %95, %94 ], [ 0, %61 ]
  %67 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %6, i64 0, i32 1, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %81

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %6, i64 0, i32 3, i64 %66
  %72 = bitcast %"union.base::trace_event::TraceValue"* %71 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %73 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %72, align 8
  %74 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %73, null
  br i1 %74, label %94, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %73 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %77 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %77, i64 1
  %79 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %78, align 8
  call void %79(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %73) #13
  %80 = load i8, i8* %67, align 1
  br label %81

81:                                               ; preds = %75, %65
  %82 = phi i8 [ %68, %65 ], [ %80, %75 ]
  %83 = icmp eq i8 %82, 9
  br i1 %83, label %84, label %94

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %6, i64 0, i32 3, i64 %66
  %86 = bitcast %"union.base::trace_event::TraceValue"* %85 to %"class.protozero::HeapBuffered"**
  %87 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %86, align 8
  %88 = icmp eq %"class.protozero::HeapBuffered"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %87, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %90) #13
  %91 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %87, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %91) #13
  %92 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %87, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %92) #13
  %93 = bitcast %"class.protozero::HeapBuffered"* %87 to i8*
  call void @_ZdlPv(i8* %93) #16
  br label %94

94:                                               ; preds = %89, %84, %81, %70
  %95 = add nuw nsw i64 %66, 1
  %96 = load i8, i8* %20, align 8
  %97 = zext i8 %96 to i64
  %98 = icmp ult i64 %95, %97
  br i1 %98, label %65, label %99

99:                                               ; preds = %94, %61
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %100

100:                                              ; preds = %2, %99
  %101 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #13
  %102 = call %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringERKN12v8_inspector10StringViewE(%"class.v8_inspector::StringView"* dereferenceable(24) %1) #13
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %103, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.66", %"struct.std::__1::atomic.66"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %105 = and i32 %104, 65536
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %108, label %107

107:                                              ; preds = %100
  call void @_ZN5blink5probe20ConsoleTimeStampImplEPNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %11, %"class.WTF::String"* nonnull dereferenceable(8) %8) #13
  br label %108

108:                                              ; preds = %100, %107
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #13
  br label %124

124:                                              ; preds = %108, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #13
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZN5blink23CurrentExecutionContextEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger19startRepeatingTimerEdPFvPvES1_(%"class.blink::ThreadDebugger"*, double, void (i8*)*, i8*) unnamed_addr #0 align 2 {
  %5 = alloca void (i8*)*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"class.std::__1::unique_ptr.1", align 8
  %8 = alloca %"class.base::Location", align 8
  store void (i8*)* %2, void (i8*)** %5, align 8
  store i8* %3, i8** %6, align 8
  %9 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %24, label %15, !prof !3

15:                                               ; preds = %4
  %16 = ptrtoint i8* %3 to i64
  %17 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %9, i64 0, i32 0, i32 0, i32 0
  %18 = load i8**, i8*** %17, align 8
  %19 = zext i32 %11 to i64
  %20 = getelementptr inbounds i8*, i8** %18, i64 %19
  %21 = bitcast i8** %20 to i64*
  store i64 %16, i64* %21, align 8
  %22 = load i32, i32* %10, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %10, align 4
  br label %25

24:                                               ; preds = %4
  call void @_ZN3WTF6VectorIPvLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.20"* %9, i8** nonnull dereferenceable(8) %6) #13
  br label %25

25:                                               ; preds = %15, %24
  %26 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 5
  %27 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %42, label %32, !prof !3

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %26, i64 0, i32 0, i32 0, i32 0
  %34 = load void (i8*)**, void (i8*)*** %33, align 8
  %35 = zext i32 %28 to i64
  %36 = getelementptr inbounds void (i8*)*, void (i8*)** %34, i64 %35
  %37 = bitcast void (i8*)** %5 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast void (i8*)** %36 to i64*
  store i64 %38, i64* %39, align 8
  %40 = load i32, i32* %27, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* %27, align 4
  br label %43

42:                                               ; preds = %25
  call void @_ZN3WTF6VectorIPFvPvELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.15"* %26, void (i8*)** nonnull dereferenceable(8) %5) #13
  br label %43

43:                                               ; preds = %42, %32
  %44 = bitcast %"class.std::__1::unique_ptr.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #13
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::TaskRunnerTimer"* inttoptr (i64 -6148914691236517206 to %"class.blink::TaskRunnerTimer"*), %"class.blink::TaskRunnerTimer"** %45, align 8
  %46 = call %"class.blink::ThreadScheduler"* @_ZN5blink15ThreadScheduler7CurrentEv() #13
  %47 = bitcast %"class.blink::ThreadScheduler"* %46 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)***
  %48 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)*** %47, align 8
  %49 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)** %48, i64 10
  %50 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)** %49, align 8
  %51 = call %"class.base::SingleThreadTaskRunner"* %50(%"class.blink::ThreadScheduler"* %46) #13
  %52 = ptrtoint %"class.blink::ThreadDebugger"* %0 to i64
  %53 = call i8* @_Znwm(i64 104) #16
  %54 = bitcast i8* %53 to %"class.blink::TimerBase"*
  call void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"* nonnull %54, %"class.base::SingleThreadTaskRunner"* %51) #13
  %55 = bitcast i8* %53 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink15TaskRunnerTimerINS_14ThreadDebuggerEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds i8, i8* %53, i64 80
  %57 = bitcast i8* %56 to i64*
  store i64 %52, i64* %57, align 8
  %58 = getelementptr inbounds i8, i8* %53, i64 88
  %59 = bitcast i8* %58 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ThreadDebugger"*, %"class.blink::TimerBase"*)* @_ZN5blink14ThreadDebugger7OnTimerEPNS_9TimerBaseE to i64), i64 0>, <2 x i64>* %59, align 8
  %60 = bitcast %"class.std::__1::unique_ptr.1"* %7 to i8**
  store i8* %53, i8** %60, align 8
  %61 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 4
  %62 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %63, %65
  br i1 %66, label %76, label %67, !prof !3

67:                                               ; preds = %43
  %68 = ptrtoint i8* %53 to i64
  %69 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %61, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %69, align 8
  %71 = zext i32 %63 to i64
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %70, i64 %71
  store %"class.blink::TaskRunnerTimer"* null, %"class.blink::TaskRunnerTimer"** %45, align 8
  %73 = bitcast %"class.std::__1::unique_ptr.1"* %72 to i64*
  store i64 %68, i64* %73, align 8
  %74 = load i32, i32* %62, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %62, align 4
  br label %77

76:                                               ; preds = %43
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS3_14ThreadDebuggerEEENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS9_EEvOT_(%"class.WTF::Vector"* %61, %"class.std::__1::unique_ptr.1"* nonnull dereferenceable(8) %7) #13
  br label %77

77:                                               ; preds = %67, %76
  %78 = fmul double %1, 1.000000e+06
  %79 = fcmp ult double %78, 0xC3E0000000000000
  %80 = fcmp ugt double %78, 0x43DFFFFFFFFFFFFF
  %81 = fcmp ogt double %78, 0xC3E0000000000000
  %82 = select i1 %81, double %78, double 0xC3E0000000000000
  %83 = fptosi double %82 to i64
  %84 = select i1 %79, i64 0, i64 9223372036854775807
  %85 = select i1 %80, i64 %84, i64 %83
  %86 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.24, i64 0, i64 0), i32 603) #13
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* nonnull %54, i64 %85, i64 %85, %"class.base::Location"* nonnull dereferenceable(32) %8) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %86) #13
  %87 = load %"class.blink::TaskRunnerTimer"*, %"class.blink::TaskRunnerTimer"** %45, align 8
  store %"class.blink::TaskRunnerTimer"* null, %"class.blink::TaskRunnerTimer"** %45, align 8
  %88 = icmp eq %"class.blink::TaskRunnerTimer"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %77
  %90 = bitcast %"class.blink::TaskRunnerTimer"* %87 to void (%"class.blink::TaskRunnerTimer"*)***
  %91 = load void (%"class.blink::TaskRunnerTimer"*)**, void (%"class.blink::TaskRunnerTimer"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::TaskRunnerTimer"*)*, void (%"class.blink::TaskRunnerTimer"*)** %91, i64 1
  %93 = load void (%"class.blink::TaskRunnerTimer"*)*, void (%"class.blink::TaskRunnerTimer"*)** %92, align 8
  call void %93(%"class.blink::TaskRunnerTimer"* nonnull %87) #13
  br label %94

94:                                               ; preds = %77, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #13
  ret void
}

declare %"class.blink::ThreadScheduler"* @_ZN5blink15ThreadScheduler7CurrentEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger7OnTimerEPNS_9TimerBaseE(%"class.blink::ThreadDebugger"*, %"class.blink::TimerBase"* readnone) #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 4
  br label %8

8:                                                ; preds = %6, %22
  %9 = phi i32 [ 0, %6 ], [ %23, %22 ]
  %10 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.1"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS3_14ThreadDebuggerEEENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::TaskRunnerTimer"*, %"class.blink::TaskRunnerTimer"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %12, i64 0, i32 0
  %14 = icmp eq %"class.blink::TimerBase"* %13, %1
  br i1 %14, label %15, label %22

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 5
  %17 = tail call dereferenceable(8) void (i8*)** @_ZN3WTF6VectorIPFvPvELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.15"* %16, i32 %9) #13
  %18 = load void (i8*)*, void (i8*)** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 6
  %20 = tail call dereferenceable(8) i8** @_ZN3WTF6VectorIPvLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.20"* %19, i32 %9) #13
  %21 = load i8*, i8** %20, align 8
  tail call void %18(i8* %21) #13
  br label %26

22:                                               ; preds = %8
  %23 = add nuw i32 %9, 1
  %24 = load i32, i32* %3, align 4
  %25 = icmp ult i32 %23, %24
  br i1 %25, label %8, label %26

26:                                               ; preds = %22, %2, %15
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ThreadDebugger11cancelTimerEPv(%"class.blink::ThreadDebugger"*, i8* readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %100, label %13

13:                                               ; preds = %2, %96
  %14 = phi i32 [ %97, %96 ], [ 0, %2 ]
  %15 = tail call dereferenceable(8) i8** @_ZN3WTF6VectorIPvLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.20"* %9, i32 %14) #13
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, %1
  br i1 %17, label %18, label %96

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 4
  %20 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.1"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS3_14ThreadDebuggerEEENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %19, i32 %14) #13
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::TaskRunnerTimer"*, %"class.blink::TaskRunnerTimer"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %22, i64 0, i32 0
  %24 = bitcast %"class.blink::TaskRunnerTimer"* %22 to void (%"class.blink::TimerBase"*)***
  %25 = load void (%"class.blink::TimerBase"*)**, void (%"class.blink::TimerBase"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::TimerBase"*)*, void (%"class.blink::TimerBase"*)** %25, i64 2
  %27 = load void (%"class.blink::TimerBase"*)*, void (%"class.blink::TimerBase"*)** %26, align 8
  tail call void %27(%"class.blink::TimerBase"* %23) #13
  %28 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  %33 = icmp ugt i32 %31, %14
  br i1 %33, label %34, label %35

34:                                               ; preds = %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  store i8* null, i8** %29, align 8
  br label %44

35:                                               ; preds = %18
  %36 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #13
  %37 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %31) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.95, i64 0, i64 0), i8* %36, i8* %37) #13
  %38 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  store i8* %39, i8** %29, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #13
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #13
  br label %44

44:                                               ; preds = %41, %35, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  %45 = getelementptr inbounds %"class.blink::ThreadDebugger", %"class.blink::ThreadDebugger"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %46 = load void (i8*)**, void (i8*)*** %45, align 8
  %47 = zext i32 %14 to i64
  %48 = getelementptr inbounds void (i8*)*, void (i8*)** %46, i64 %47
  %49 = getelementptr inbounds void (i8*)*, void (i8*)** %48, i64 1
  %50 = icmp eq void (i8*)** %48, null
  br i1 %50, label %60, label %51, !prof !3

51:                                               ; preds = %44
  %52 = load i32, i32* %30, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds void (i8*)*, void (i8*)** %46, i64 %53
  %55 = bitcast void (i8*)** %48 to i8*
  %56 = bitcast void (i8*)** %49 to i8*
  %57 = ptrtoint void (i8*)** %54 to i64
  %58 = ptrtoint void (i8*)** %49 to i64
  %59 = sub i64 %57, %58
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* nonnull align 8 %56, i64 %59, i1 false) #13
  br label %60

60:                                               ; preds = %44, %51
  %61 = load i32, i32* %30, align 4
  %62 = add i32 %61, -1
  store i32 %62, i32* %30, align 4
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS3_14ThreadDebuggerEEENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %19, i32 %14)
  %63 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #13
  %64 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %64, align 8
  %65 = load i32, i32* %10, align 4
  %66 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #13
  %67 = icmp ugt i32 %65, %14
  br i1 %67, label %68, label %69

68:                                               ; preds = %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #13
  store i8* null, i8** %64, align 8
  br label %78

69:                                               ; preds = %60
  %70 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #13
  %71 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %65) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.95, i64 0, i64 0), i8* %70, i8* %71) #13
  %72 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #13
  store i8* %73, i8** %64, align 8
  %74 = icmp eq i8* %73, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %69
  %76 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %7) #13
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #13
  br label %78

78:                                               ; preds = %75, %69, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #13
  %79 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %9, i64 0, i32 0, i32 0, i32 0
  %80 = load i8**, i8*** %79, align 8
  %81 = getelementptr inbounds i8*, i8** %80, i64 %47
  %82 = getelementptr inbounds i8*, i8** %81, i64 1
  %83 = icmp eq i8** %81, null
  br i1 %83, label %93, label %84, !prof !3

84:                                               ; preds = %78
  %85 = load i32, i32* %10, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i8*, i8** %80, i64 %86
  %88 = bitcast i8** %81 to i8*
  %89 = bitcast i8** %82 to i8*
  %90 = ptrtoint i8** %87 to i64
  %91 = ptrtoint i8** %82 to i64
  %92 = sub i64 %90, %91
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* nonnull align 8 %89, i64 %92, i1 false) #13
  br label %93

93:                                               ; preds = %78, %84
  %94 = load i32, i32* %10, align 4
  %95 = add i32 %94, -1
  store i32 %95, i32* %10, align 4
  br label %100

96:                                               ; preds = %13
  %97 = add nuw i32 %14, 1
  %98 = load i32, i32* %10, align 4
  %99 = icmp ult i32 %97, %98
  br i1 %99, label %13, label %100

100:                                              ; preds = %96, %2, %93
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS3_14ThreadDebuggerEEENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.95, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %24, i64 %25
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::TaskRunnerTimer"*, %"class.blink::TaskRunnerTimer"** %27, align 8
  store %"class.blink::TaskRunnerTimer"* null, %"class.blink::TaskRunnerTimer"** %27, align 8
  %29 = icmp eq %"class.blink::TaskRunnerTimer"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %22
  %31 = bitcast %"class.blink::TaskRunnerTimer"* %28 to void (%"class.blink::TaskRunnerTimer"*)***
  %32 = load void (%"class.blink::TaskRunnerTimer"*)**, void (%"class.blink::TaskRunnerTimer"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::TaskRunnerTimer"*)*, void (%"class.blink::TaskRunnerTimer"*)** %32, i64 1
  %34 = load void (%"class.blink::TaskRunnerTimer"*)*, void (%"class.blink::TaskRunnerTimer"*)** %33, align 8
  call void %34(%"class.blink::TaskRunnerTimer"* nonnull %28) #13
  br label %35

35:                                               ; preds = %22, %30
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %26, i64 1
  %37 = icmp ne %"class.std::__1::unique_ptr.1"* %26, null
  %38 = icmp ne %"class.std::__1::unique_ptr.1"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %50, !prof !2

40:                                               ; preds = %35
  %41 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %23, align 8
  %42 = load i32, i32* %8, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %41, i64 %43
  %45 = bitcast %"class.std::__1::unique_ptr.1"* %26 to i8*
  %46 = bitcast %"class.std::__1::unique_ptr.1"* %36 to i8*
  %47 = ptrtoint %"class.std::__1::unique_ptr.1"* %44 to i64
  %48 = ptrtoint %"class.std::__1::unique_ptr.1"* %36 to i64
  %49 = sub i64 %47, %48
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* nonnull align 8 %46, i64 %49, i1 false) #13
  br label %50

50:                                               ; preds = %35, %40
  %51 = load i32, i32* %8, align 4
  %52 = add i32 %51, -1
  store i32 %52, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink14ThreadDebugger16generateUniqueIdEv(%"class.blink::ThreadDebugger"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #13
  store i64 -6148914691236517206, i64* %2, align 8
  call void @_ZN4base9RandBytesEPvm(i8* nonnull %3, i64 8) #13
  %4 = load i64, i64* %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #13
  ret i64 %4
}

declare void @_ZN4base9RandBytesEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector17V8InspectorClient21runMessageLoopOnPauseEi(%"class.v8_inspector::V8InspectorClient"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector17V8InspectorClient22quitMessageLoopOnPauseEv(%"class.v8_inspector::V8InspectorClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector17V8InspectorClient23runIfWaitingForDebuggerEi(%"class.v8_inspector::V8InspectorClient"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector17V8InspectorClient11muteMetricsEi(%"class.v8_inspector::V8InspectorClient"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector17V8InspectorClient13unmuteMetricsEi(%"class.v8_inspector::V8InspectorClient"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector17V8InspectorClient14endUserGestureEv(%"class.v8_inspector::V8InspectorClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Context"* @_ZN12v8_inspector17V8InspectorClient27ensureDefaultContextInGroupEi(%"class.v8_inspector::V8InspectorClient"*, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.v8::Context"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector17V8InspectorClient29beginEnsureAllContextsInGroupEi(%"class.v8_inspector::V8InspectorClient"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector17V8InspectorClient27endEnsureAllContextsInGroupEi(%"class.v8_inspector::V8InspectorClient"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector17V8InspectorClient17consoleAPIMessageEiN2v87Isolate17MessageErrorLevelERKNS_10StringViewES6_jjPNS_12V8StackTraceE(%"class.v8_inspector::V8InspectorClient"*, i32, i32, %"class.v8_inspector::StringView"* dereferenceable(24), %"class.v8_inspector::StringView"* dereferenceable(24), i32, i32, %"class.v8_inspector::V8StackTrace"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN12v8_inspector17V8InspectorClient10memoryInfoEPN2v87IsolateENS1_5LocalINS1_7ContextEEE(%"class.v8_inspector::V8InspectorClient"*, %"class.v8::Isolate"*, %"class.v8::Context"*) unnamed_addr #0 comdat align 2 {
  ret %"class.v8::Value"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector17V8InspectorClient12consoleClearEi(%"class.v8_inspector::V8InspectorClient"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12v8_inspector17V8InspectorClient17canExecuteScriptsEi(%"class.v8_inspector::V8InspectorClient"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector17V8InspectorClient29maxAsyncCallStackDepthChangedEi(%"class.v8_inspector::V8InspectorClient"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8_inspector::StringBuffer"* @_ZN12v8_inspector17V8InspectorClient17resourceNameToUrlERKNS_10StringViewE(%"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::StringView"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret %"class.v8_inspector::StringBuffer"* null
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #13
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon.2108* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.2108* %16 to %"class.WTF::Vector.2113"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2113"* %30, i16* nonnull dereferenceable(2) %3) #13
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #13
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2109"* %41, i8* nonnull dereferenceable(1) %4) #13
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2113"*, i16* dereferenceable(2)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2113"* %0, i32 %5) #13
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2113"* %0, i32 %5) #13
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2113"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2113"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2113"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2113"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2113"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2113"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2113"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #13
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2114"* %19, i16* nonnull %6) #13
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #13
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #13
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #13
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2114"* %53, i16* %48) #13
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2113"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2113", %"class.WTF::Vector.2113"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.29, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2114"*, i16*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2109"*, i8* dereferenceable(1)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2109"* %0, i32 %5) #13
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2109"* %0, i32 %5) #13
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2109"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2109"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.2109"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2109"* %0, i32 %27) #13
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2109"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.2109"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.2109"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #13
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2110"* %18, i8* nonnull %6) #13
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #13
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !2

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #13
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !2

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2110"* %46, i8* %42) #13
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.2109"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.2109", %"class.WTF::Vector.2109"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.29, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #13
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2110"*, i8*) local_unnamed_addr #11 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #13
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.916"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.916", %"class.WTF::Vector.916"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.916", %"class.WTF::Vector.916"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink16SpaceSplitString4DataD1Ev(%"class.blink::SpaceSplitString::Data"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare %"class.v8::internal::Isolate"* @_ZN2v88internal35IsolateFromNeverReadOnlySpaceObjectEm(i64) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object20SlowGetInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #1

declare %"class.v8::Function"* @_ZN2v88Function3NewENS_5LocalINS_7ContextEEEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS1_IS5_EEiNS_19ConstructorBehaviorENS_14SideEffectTypeE(%"class.v8::Context"*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::Value"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88Function7SetNameENS_5LocalINS_6StringEEE(%"class.v8::Function"*, %"class.v8::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blinkL18ReturnDataCallbackERKN2v820FunctionCallbackInfoINS0_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 3
  %5 = getelementptr inbounds i64, i64* %3, i64 4
  %6 = icmp eq i64* %5, null
  %7 = getelementptr inbounds i64, i64* %3, i64 2
  %8 = select i1 %6, i64* %7, i64* %5, !prof !3
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4, align 8
  ret void
}

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZN5blink11ToDOMWindowEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.441"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.441"* %0, i32 %5, %"class.WTF::String"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %10
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::String"* %6 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.WTF::String"* %11 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %16 = load i32, i32* %3, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.441"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp ugt %"class.WTF::String"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.441"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 3
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"class.WTF::String"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"class.WTF::String"* %37 to i8*
  br i1 %40, label %42, label %49, !prof !2

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.441"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.441"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"class.WTF::String"* %2 to i64
  %55 = ptrtoint %"class.WTF::String"* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !2

68:                                               ; preds = %53
  %69 = icmp eq %"class.WTF::String"* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %70) #13
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.441"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"class.WTF::String"* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"class.WTF::String"* %77 to i8*
  br i1 %80, label %82, label %88, !prof !2

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #13
  %86 = bitcast %"class.WTF::Vector.441"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #13
  %90 = bitcast %"class.WTF::Vector.441"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 3
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"class.WTF::String"*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"class.WTF::String"* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"class.WTF::String"* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"class.WTF::String"* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.29, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector.441"*, %"class.WTF::String"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.441"* %0, i32 %9, %"class.WTF::String"* %1) #13
  %15 = load i32, i32* %7, align 4
  br label %16

16:                                               ; preds = %13, %3
  %17 = phi i32 [ %15, %13 ], [ %8, %3 ]
  %18 = phi %"class.WTF::String"* [ %14, %13 ], [ %1, %3 ]
  %19 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %9, %17
  br i1 %22, label %24, label %23

23:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %20, align 8
  br label %33

24:                                               ; preds = %16
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.86, i64 0, i64 0), i8* %25, i8* %26) #13
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %20, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #13
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  %34 = zext i32 %2 to i64
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 %34
  %36 = icmp eq i32 %2, 0
  br i1 %36, label %71, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %0, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::String"*, %"class.WTF::String"** %38, align 8
  %40 = load i32, i32* %7, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 %41
  br label %43

43:                                               ; preds = %37, %67
  %44 = phi %"class.WTF::String"* [ %68, %67 ], [ %42, %37 ]
  %45 = phi %"class.WTF::String"* [ %69, %67 ], [ %18, %37 ]
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %48, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #13
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !3

64:                                               ; preds = %55
  call void @llvm.trap() #13
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %65, %50, %43
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 1
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 1
  %70 = icmp eq %"class.WTF::String"* %69, %35
  br i1 %70, label %71, label %43

71:                                               ; preds = %67, %33
  store i32 %9, i32* %7, align 4
  ret void
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.441"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.441"* %0, i32 %5, %"class.WTF::String"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %10, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #13
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %2, %15, %30
  %33 = load i32, i32* %3, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21CallbackInterfaceBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #13
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #13
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21CallbackInterfaceBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21CallbackInterfaceBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.66"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21CallbackInterfaceBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.66"*)) #13
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #13
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.87, i64 0, i64 0), i8* %40, i8* %41) #13
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.88, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #13
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #13
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21CallbackInterfaceBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackInterfaceBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CallbackInterfaceBase"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_21CallbackInterfaceBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CallbackInterfaceBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::CallbackInterfaceBase"*)***
  %4 = load void (%"class.blink::CallbackInterfaceBase"*)**, void (%"class.blink::CallbackInterfaceBase"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::CallbackInterfaceBase"*)*, void (%"class.blink::CallbackInterfaceBase"*)** %4, i64 1
  %6 = load void (%"class.blink::CallbackInterfaceBase"*)*, void (%"class.blink::CallbackInterfaceBase"*)** %5, align 8
  tail call void %6(%"class.blink::CallbackInterfaceBase"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21CallbackInterfaceBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #13
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.66"*) local_unnamed_addr #1

declare void @_ZN5blink21CallbackInterfaceBaseC2EN2v85LocalINS1_6ObjectEEENS0_20SingleOperationOrNotE(%"class.blink::CallbackInterfaceBase"*, %"class.v8::Object"*, i32) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN5blink5probe20ConsoleTimeStampImplEPNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"*, i64, i64, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #13
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #13
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %37
  tail call void @llvm.trap() #13
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #13
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #13
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.322"* %8) #13
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.322"* %8) #13
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #13
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.89, i64 0, i64 0), i8* %26, i8* %27) #13
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.90, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #13
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #13
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.91, i64 0, i64 0), i8* %41, i8* %42) #13
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.90, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #13
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2309", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2311", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2309", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2309"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2309", %"class.WTF::StringTypeAdapter.2309"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2309", %"class.WTF::StringTypeAdapter.2309"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2309"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2309"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2309"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2309", %"class.WTF::StringTypeAdapter.2309"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2309", %"class.WTF::StringTypeAdapter.2309"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #13
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2309"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2311"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #13
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #13
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2311"* nonnull %4, i8* %48) #13
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2309", %"class.WTF::StringTypeAdapter.2309"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2310"* nonnull %49, i8* %1) #13
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2311"* nonnull %4, i8* %52) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #13
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2309", %"class.WTF::StringTypeAdapter.2309"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.322"* %6) #13
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2310"* nonnull %53, i8* %56) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2309", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2311", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2309", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2309"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2309", %"class.WTF::StringTypeAdapter.2309"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2309", %"class.WTF::StringTypeAdapter.2309"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2309"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2309"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2309"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2309", %"class.WTF::StringTypeAdapter.2309"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2309", %"class.WTF::StringTypeAdapter.2309"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #13
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2309"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2311"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #13
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #13
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2311"* nonnull %4, i8* %48) #13
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2309", %"class.WTF::StringTypeAdapter.2309"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2310"* nonnull %49, i16* %1) #13
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2311"* nonnull %4, i16* %52) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #13
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2309", %"class.WTF::StringTypeAdapter.2309"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.322"* %6) #13
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2310"* nonnull %53, i16* %56) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2311"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.322"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2311", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.322", %"class.WTF::StringAppend.322"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.2311"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2311", %"class.WTF::StringTypeAdapter.2311"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.322", %"class.WTF::StringAppend.322"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.2311"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2311"* nonnull %4, i8* %21) #13
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.89, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.90, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.91, i64 0, i64 0), i8* %46, i8* %47) #13
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.90, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #13
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2310"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2311"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2310"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2311"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.441"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.441", %"class.WTF::Vector.441"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"*, i64*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !8

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !10

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !11

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #16
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #16, !noalias !12
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !12
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #16
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

declare void @_ZN5blink26inspector_time_stamp_event4DataEN8perfetto11TracedValueEPNS_16ExecutionContextERKN3WTF6StringE(%"class.perfetto::TracedValue"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPvLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.20"*, i8** dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = icmp ugt i8** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8*, i8** %7, i64 %10
  %12 = icmp ugt i8** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq i8** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPvEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPvEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.20"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i8**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load i8**, i8*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i8** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i8** %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.20"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.20"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i8**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i8** %1 to i64
  %56 = ptrtoint i8** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq i8** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPvEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPvEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.20"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i8**, i8*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i8** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i8** %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.20"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.20"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i8**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i8** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i8*, i8** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i8** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i8** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i8*, i8** %100, i64 %103
  %105 = bitcast i8** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPvEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.29, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPFvPvELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.15"*, void (i8*)** dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load void (i8*)**, void (i8*)*** %6, align 8
  %8 = icmp ugt void (i8*)** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds void (i8*)*, void (i8*)** %7, i64 %10
  %12 = icmp ugt void (i8*)** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq void (i8*)** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPFvPvEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPFvPvEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.15"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to void (i8*)**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load void (i8*)**, void (i8*)*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne void (i8*)** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast void (i8*)** %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.15"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.15"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to void (i8*)**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint void (i8*)** %1 to i64
  %56 = ptrtoint void (i8*)** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq void (i8*)** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPFvPvEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPFvPvEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.15"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load void (i8*)**, void (i8*)*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne void (i8*)** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast void (i8*)** %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.15"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.15"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to void (i8*)**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi void (i8*)** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds void (i8*)*, void (i8*)** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi void (i8*)** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi void (i8*)** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds void (i8*)*, void (i8*)** %100, i64 %103
  %105 = bitcast void (i8*)** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast void (i8*)** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPFvPvEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.29, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15TaskRunnerTimerINS_14ThreadDebuggerEED0Ev(%"class.blink::TaskRunnerTimer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %0, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"* %2) #13
  %3 = bitcast %"class.blink::TaskRunnerTimer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #16
  ret void
}

declare void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15TaskRunnerTimerINS_14ThreadDebuggerEE5FiredEv(%"class.blink::TaskRunnerTimer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::ThreadDebugger"** %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %0, i64 0, i32 2, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %0, i64 0, i32 2, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 %8
  %10 = bitcast i8* %9 to %"class.blink::ThreadDebugger"*
  %11 = and i64 %6, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %1
  %14 = bitcast i8* %9 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = add i64 %6, -1
  %17 = getelementptr i8, i8* %15, i64 %16
  %18 = bitcast i8* %17 to void (%"class.blink::ThreadDebugger"*, %"class.blink::TimerBase"*)**
  %19 = load void (%"class.blink::ThreadDebugger"*, %"class.blink::TimerBase"*)*, void (%"class.blink::ThreadDebugger"*, %"class.blink::TimerBase"*)** %18, align 8
  br label %22

20:                                               ; preds = %1
  %21 = inttoptr i64 %6 to void (%"class.blink::ThreadDebugger"*, %"class.blink::TimerBase"*)*
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi void (%"class.blink::ThreadDebugger"*, %"class.blink::TimerBase"*)* [ %19, %13 ], [ %21, %20 ]
  %24 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %0, i64 0, i32 0
  tail call void %23(%"class.blink::ThreadDebugger"* %10, %"class.blink::TimerBase"* %24) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9TimerBase16BindTimerClosureEN4base7WeakPtrIS0_EE(%"class.base::OnceCallback"* noalias sret, %"class.blink::TimerBase"*, %"class.base::WeakPtr.2329"*) unnamed_addr #0 comdat align 2 {
  %4 = tail call i8* @_Znwm(i64 64) #16, !noalias !15
  %5 = bitcast i8* %4 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %5, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #13, !noalias !15
  %6 = getelementptr inbounds i8, i8* %4, i64 32
  %7 = bitcast i8* %6 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBase11RunInternalEv to i64), i64 0>, <2 x i64>* %7, align 8, !noalias !15
  %8 = getelementptr inbounds i8, i8* %4, i64 48
  %9 = bitcast i8* %8 to %"class.base::internal::WeakReference"*
  %10 = getelementptr inbounds %"class.base::WeakPtr.2329", %"class.base::WeakPtr.2329"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %9, %"class.base::internal::WeakReference"* dereferenceable(8) %10) #13, !noalias !15
  %11 = getelementptr inbounds i8, i8* %4, i64 56
  %12 = bitcast i8* %11 to i64*
  %13 = getelementptr inbounds %"class.base::WeakPtr.2329", %"class.base::WeakPtr.2329"* %2, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8, !noalias !15
  store i64 %14, i64* %12, align 8, !noalias !15
  %15 = bitcast %"class.base::OnceCallback"* %0 to i8**
  store i8* %4, i8** %15, align 8, !alias.scope !15
  ret void
}

declare void @_ZN5blink9TimerBase11RunInternalEv(%"class.blink::TimerBase"*) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #13
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.blink::TimerBase"**
  %10 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %9, align 8
  %11 = icmp eq %"class.blink::TimerBase"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #13
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.94, i64 0, i64 0)) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #13
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.blink::TimerBase"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.blink::TimerBase"*)**
  %37 = load void (%"class.blink::TimerBase"*)*, void (%"class.blink::TimerBase"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.blink::TimerBase"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.blink::TimerBase"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.blink::TimerBase"* %28) #13
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #13
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #16
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #13
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::TimerBase"**
  %9 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %8, align 8
  %10 = icmp ne %"class.blink::TimerBase"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #13
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #6

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS3_14ThreadDebuggerEEENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS9_EEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.1"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.1"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.1"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.1"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS4_14ThreadDebuggerEEENS2_14default_deleteIS7_EEEEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([190 x i8], [190 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS3_14ThreadDebuggerEEENS1_14default_deleteIS6_EEEEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.1"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.1"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.1"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.1"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.1"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.1"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.1"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS4_14ThreadDebuggerEEENS2_14default_deleteIS7_EEEEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([190 x i8], [190 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS3_14ThreadDebuggerEEENS1_14default_deleteIS6_EEEEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.1"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.1"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.1"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.1"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.1"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.1"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.1"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::TaskRunnerTimer"* null, %"class.blink::TaskRunnerTimer"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.1"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS4_14ThreadDebuggerEEENS2_14default_deleteIS7_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.29, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i8** @_ZN3WTF6VectorIPvLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.20"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8**, i8*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i8*, i8** %24, i64 %25
  ret i8** %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.1"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15TaskRunnerTimerINS3_14ThreadDebuggerEEENS1_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.1"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) void (i8*)** @_ZN3WTF6VectorIPFvPvELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.15"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.15", %"class.WTF::Vector.15"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load void (i8*)**, void (i8*)*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds void (i8*)*, void (i8*)** %24, i64 %25
  ret void (i8*)** %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind readonly }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blinkL19NormalizeEventTypesERKN2v820FunctionCallbackInfoINS0_5ValueEEE: argument 0"}
!7 = distinct !{!7, !"_ZN5blinkL19NormalizeEventTypesERKN2v820FunctionCallbackInfoINS0_5ValueEEE"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = distinct !{!11, !9}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!15 = !{!16, !18, !20}
!16 = distinct !{!16, !17, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!18 = distinct !{!18, !19, !"_ZN4base8BindOnceIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8BindOnceIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!20 = distinct !{!20, !21, !"_ZN3WTF4BindIMN5blink9TimerBaseEFvvEJN4base7WeakPtrIS2_EEEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!21 = distinct !{!21, !"_ZN3WTF4BindIMN5blink9TimerBaseEFvvEJN4base7WeakPtrIS2_EEEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_"}
