; ModuleID = '../../net/dns/system_dns_config_change_notifier.cc'
source_filename = "../../net/dns/system_dns_config_change_notifier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array.79" }
%"struct.std::__1::array.79" = type { [8 x i8] }
%"class.net::SystemDnsConfigChangeNotifier" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::SystemDnsConfigChangeNotifier::Core"* }
%"class.net::SystemDnsConfigChangeNotifier::Core" = type { %"class.base::Lock", %"class.absl::optional", %"class.std::__1::map", %class.scoped_refptr, %"class.std::__1::unique_ptr.51", %"class.base::WeakPtrFactory.77" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.net::DnsConfig" }
%"struct.net::DnsConfig" = type { %"class.std::__1::vector", i8, %"class.std::__1::basic_string", %"class.std::__1::vector.9", %"class.std::__1::unordered_map", i8, i8, i32, %"class.base::TimeDelta", i32, i32, i8, i8, %"class.std::__1::vector.35", i32, i8, %"class.std::__1::vector.9" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair.0" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.net::IPEndPoint"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.16", %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.32", [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { float }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"*, %"class.std::__1::__compressed_pair.37" }
%"struct.net::DnsOverHttpsServerConfig" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.net::DnsOverHttpsServerConfig"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.net::DnsConfigService"* }
%"class.net::DnsConfigService" = type { i32 (...)**, %"class.base::RepeatingCallback", %"struct.net::DnsConfig", i8, i8, i8, i8, i8, %"class.absl::optional.56", %"class.base::FilePath", %class.scoped_refptr.61, %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.75" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.55", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.55" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, %union.anon.60 }
%union.anon.60 = type { %"class.base::TimeDelta" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%class.scoped_refptr.61 = type { %"class.net::DnsConfigService::HostsReader"* }
%"class.net::DnsConfigService::HostsReader" = type { %"class.net::SerialWorker", %"class.net::DnsConfigService"*, %"class.absl::optional.69", %"class.base::FilePath" }
%"class.net::SerialWorker" = type { i32 (...)**, %"class.base::RefCountedDeleteOnSequence", i32, %"class.base::WeakPtrFactory" }
%"class.base::RefCountedDeleteOnSequence" = type { %"class.base::subtle::RefCountedThreadSafeBase", %class.scoped_refptr }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.62 }
%class.scoped_refptr.62 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.63", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.63" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.64" }
%"struct.std::__1::atomic.64" = type { %"struct.std::__1::__atomic_base.65" }
%"struct.std::__1::__atomic_base.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__cxx_atomic_impl.67" }
%"struct.std::__1::__cxx_atomic_impl.67" = type { %"struct.std::__1::__cxx_atomic_base_impl.68" }
%"struct.std::__1::__cxx_atomic_base_impl.68" = type { i8 }
%"class.absl::optional.69" = type { %"class.absl::optional_internal::optional_data.70" }
%"class.absl::optional_internal::optional_data.70" = type { %"class.absl::optional_internal::optional_data_base.71" }
%"class.absl::optional_internal::optional_data_base.71" = type { %"class.absl::optional_internal::optional_data_dtor_base.72" }
%"class.absl::optional_internal::optional_data_dtor_base.72" = type { i8, [7 x i8], %union.anon.73 }
%union.anon.73 = type { %"class.std::__1::unordered_map" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.74" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.74" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.75" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.77" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.base::OnTaskRunnerDeleter" }
%"struct.base::OnTaskRunnerDeleter" = type { %class.scoped_refptr }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.80 }
%class.scoped_refptr.80 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.net::SystemDnsConfigChangeNotifier::Observer" = type { i32 (...)** }
%"class.net::(anonymous namespace)::WrappedObserver" = type { %class.scoped_refptr, %"class.net::SystemDnsConfigChangeNotifier::Observer"*, %"class.base::WeakPtrFactory.94" }
%"class.base::WeakPtrFactory.94" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.net::SystemDnsConfigChangeNotifier::Observer"*, %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.net::(anonymous namespace)::WrappedObserver"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::WeakPtr.98" = type { %"class.base::internal::WeakPtrBase" }

$_ZN3net29SystemDnsConfigChangeNotifier4CoreC2E13scoped_refptrIN4base19SequencedTaskRunnerEENSt3__110unique_ptrINS_16DnsConfigServiceENS6_14default_deleteIS8_EEEE = comdat any

$_ZN3net29SystemDnsConfigChangeNotifier4Core11AddObserverEPNS0_8ObserverE = comdat any

$_ZN3net29SystemDnsConfigChangeNotifier4Core14RemoveObserverEPNS0_8ObserverE = comdat any

$_ZN3net29SystemDnsConfigChangeNotifier4Core13RefreshConfigEv = comdat any

$_ZN3net29SystemDnsConfigChangeNotifier4Core29SetDnsConfigServiceForTestingENSt3__110unique_ptrINS_16DnsConfigServiceENS2_14default_deleteIS4_EEEE = comdat any

$_ZN3net29SystemDnsConfigChangeNotifier4Core27SetAndStartDnsConfigServiceENSt3__110unique_ptrINS_16DnsConfigServiceENS2_14default_deleteIS4_EEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS3_16DnsConfigServiceENS6_14default_deleteIS8_EEEEEJNS_7WeakPtrIS5_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS2_16DnsConfigServiceENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS3_16DnsConfigServiceENS6_14default_deleteIS8_EEEEEJNS_7WeakPtrIS5_EESB_EEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE = comdat any

$_ZN3net29SystemDnsConfigChangeNotifier4Core15OnConfigChangedERKNS_9DnsConfigE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvRKNS3_9DnsConfigEEJNS_7WeakPtrIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ = comdat any

$_ZN4base8internal9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvRKNS2_9DnsConfigEEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvRKNS3_9DnsConfigEEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN3net29SystemDnsConfigChangeNotifier4Core20TriggerRefreshConfigEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvvEJNS_7WeakPtrIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvvEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvvEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE = comdat any

$_ZN4base12DeleteHelperIN3net29SystemDnsConfigChangeNotifier4CoreEE8DoDeleteEPKv = comdat any

$_ZN3net29SystemDnsConfigChangeNotifier4CoreD2Ev = comdat any

@.ref.tmp = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 2, i8 1, i8 0, i8 1, i8 0, i8 0 }, align 1
@.str = private unnamed_addr constant [5 x i8] c"Core\00", align 1
@.str.1 = private unnamed_addr constant [51 x i8] c"../../net/dns/system_dns_config_change_notifier.cc\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"OnNotifyThreadsafe\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"RefreshConfig\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"SetDnsConfigServiceForTesting\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"operator()\00", align 1
@.str.9 = private unnamed_addr constant [35 x i8] c"../../base/sequenced_task_runner.h\00", align 1

@_ZN3net29SystemDnsConfigChangeNotifierC1Ev = hidden unnamed_addr alias void (%"class.net::SystemDnsConfigChangeNotifier"*), void (%"class.net::SystemDnsConfigChangeNotifier"*)* @_ZN3net29SystemDnsConfigChangeNotifierC2Ev
@_ZN3net29SystemDnsConfigChangeNotifierC1E13scoped_refptrIN4base19SequencedTaskRunnerEENSt3__110unique_ptrINS_16DnsConfigServiceENS5_14default_deleteIS7_EEEE = hidden unnamed_addr alias void (%"class.net::SystemDnsConfigChangeNotifier"*, %"class.base::SequencedTaskRunner"*, %"class.net::DnsConfigService"*), void (%"class.net::SystemDnsConfigChangeNotifier"*, %"class.base::SequencedTaskRunner"*, %"class.net::DnsConfigService"*)* @_ZN3net29SystemDnsConfigChangeNotifierC2E13scoped_refptrIN4base19SequencedTaskRunnerEENSt3__110unique_ptrINS_16DnsConfigServiceENS5_14default_deleteIS7_EEEE
@_ZN3net29SystemDnsConfigChangeNotifierD1Ev = hidden unnamed_addr alias void (%"class.net::SystemDnsConfigChangeNotifier"*), void (%"class.net::SystemDnsConfigChangeNotifier"*)* @_ZN3net29SystemDnsConfigChangeNotifierD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net29SystemDnsConfigChangeNotifierC2Ev(%"class.net::SystemDnsConfigChangeNotifier"*) unnamed_addr #0 align 2 {
  %2 = tail call %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp) #7
  %3 = tail call %"class.net::DnsConfigService"* @_ZN3net16DnsConfigService19CreateSystemServiceEv() #7
  tail call void @_ZN3net29SystemDnsConfigChangeNotifierC2E13scoped_refptrIN4base19SequencedTaskRunnerEENSt3__110unique_ptrINS_16DnsConfigServiceENS5_14default_deleteIS7_EEEE(%"class.net::SystemDnsConfigChangeNotifier"* %0, %"class.base::SequencedTaskRunner"* %2, %"class.net::DnsConfigService"* %3)
  ret void
}

declare %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* dereferenceable(15)) local_unnamed_addr #1

declare %"class.net::DnsConfigService"* @_ZN3net16DnsConfigService19CreateSystemServiceEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net29SystemDnsConfigChangeNotifierC2E13scoped_refptrIN4base19SequencedTaskRunnerEENSt3__110unique_ptrINS_16DnsConfigServiceENS5_14default_deleteIS7_EEEE(%"class.net::SystemDnsConfigChangeNotifier"*, %"class.base::SequencedTaskRunner"*, %"class.net::DnsConfigService"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"struct.base::OnTaskRunnerDeleter", align 8
  %6 = bitcast %"struct.base::OnTaskRunnerDeleter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = icmp eq %"class.base::SequencedTaskRunner"* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %3, %8
  call void @_ZN4base19OnTaskRunnerDeleterC1E13scoped_refptrINS_19SequencedTaskRunnerEE(%"struct.base::OnTaskRunnerDeleter"* nonnull %5, %"class.base::SequencedTaskRunner"* %1) #7
  %12 = bitcast %"class.net::SystemDnsConfigChangeNotifier"* %0 to i64*
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier", %"class.net::SystemDnsConfigChangeNotifier"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base19OnTaskRunnerDeleterC1EOS0_(%"struct.base::OnTaskRunnerDeleter"* %13, %"struct.base::OnTaskRunnerDeleter"* nonnull dereferenceable(8) %5) #7
  call void @_ZN4base19OnTaskRunnerDeleterD1Ev(%"struct.base::OnTaskRunnerDeleter"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %14 = icmp eq %"class.net::DnsConfigService"* %2, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %11
  %16 = call i8* @_Znwm(i64 312) #8
  %17 = bitcast i8* %16 to %"class.net::SystemDnsConfigChangeNotifier::Core"*
  br i1 %7, label %21, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic
  br label %21

21:                                               ; preds = %15, %18
  call void @_ZN3net29SystemDnsConfigChangeNotifier4CoreC2E13scoped_refptrIN4base19SequencedTaskRunnerEENSt3__110unique_ptrINS_16DnsConfigServiceENS6_14default_deleteIS8_EEEE(%"class.net::SystemDnsConfigChangeNotifier::Core"* nonnull %17, %"class.base::SequencedTaskRunner"* %1, %"class.net::DnsConfigService"* nonnull %2)
  %22 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier", %"class.net::SystemDnsConfigChangeNotifier"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::SystemDnsConfigChangeNotifier::Core"** %22, align 8
  %24 = bitcast %"class.net::SystemDnsConfigChangeNotifier"* %0 to i8**
  store i8* %16, i8** %24, align 8
  %25 = icmp eq %"class.net::SystemDnsConfigChangeNotifier::Core"* %23, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier", %"class.net::SystemDnsConfigChangeNotifier"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %27, align 8
  %29 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0), i32 193) #7
  %30 = bitcast %"class.net::SystemDnsConfigChangeNotifier::Core"* %23 to i8*
  %31 = call zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"* %28, %"class.base::Location"* nonnull dereferenceable(32) %4, void (i8*)* nonnull @_ZN4base12DeleteHelperIN3net29SystemDnsConfigChangeNotifier4CoreEE8DoDeleteEPKv, i8* nonnull %30) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #7
  br label %32

32:                                               ; preds = %11, %26, %21
  br i1 %7, label %41, label %33

33:                                               ; preds = %32
  %34 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %1, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw sub i32* %35, i32 1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %34, i64 -2
  %40 = bitcast %"class.base::RefCountedThreadSafe"* %39 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %40) #7
  br label %41

41:                                               ; preds = %32, %33, %38
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base19OnTaskRunnerDeleterC1E13scoped_refptrINS_19SequencedTaskRunnerEE(%"struct.base::OnTaskRunnerDeleter"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base19OnTaskRunnerDeleterD1Ev(%"struct.base::OnTaskRunnerDeleter"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net29SystemDnsConfigChangeNotifier4CoreC2E13scoped_refptrIN4base19SequencedTaskRunnerEENSt3__110unique_ptrINS_16DnsConfigServiceENS6_14default_deleteIS8_EEEE(%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.base::SequencedTaskRunner"*, %"class.net::DnsConfigService"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::WeakPtr", align 8
  %8 = ptrtoint %"class.base::SequencedTaskRunner"* %1 to i64
  %9 = ptrtoint %"class.net::DnsConfigService"* %2 to i64
  %10 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %10) #7
  %11 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %union.anon* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 208, i1 false) #7
  %14 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node_base"** %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 3
  %19 = bitcast %class.scoped_refptr* %18 to i64*
  store i64 %8, i64* %19, align 8
  %20 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 4
  %21 = bitcast %"class.std::__1::unique_ptr.51"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 5
  %23 = getelementptr inbounds %"class.base::WeakPtrFactory.77", %"class.base::WeakPtrFactory.77"* %22, i64 0, i32 0
  %24 = ptrtoint %"class.net::SystemDnsConfigChangeNotifier::Core"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %23, i64 %24) #7
  %25 = bitcast %class.scoped_refptr* %18 to %"class.base::TaskRunner"**
  %26 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %25, align 8
  %27 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i32 75) #7
  %28 = bitcast %"class.base::WeakPtr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #7
  %29 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #7, !noalias !2
  %30 = getelementptr inbounds %"class.base::WeakPtrFactory.77", %"class.base::WeakPtrFactory.77"* %22, i64 0, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %30) #7, !noalias !2
  %31 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 5, i32 0, i32 1
  %32 = load i64, i64* %31, align 8, !noalias !2
  %33 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %33, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %32) #7
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7, !noalias !2
  %34 = call i8* @_Znwm(i64 72) #8, !noalias !5
  %35 = bitcast i8* %34 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %35, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS3_16DnsConfigServiceENS6_14default_deleteIS8_EEEEEJNS_7WeakPtrIS5_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS2_16DnsConfigServiceENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS3_16DnsConfigServiceENS6_14default_deleteIS8_EEEEEJNS_7WeakPtrIS5_EESB_EEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE) #7, !noalias !5
  %36 = getelementptr inbounds i8, i8* %34, i64 32
  %37 = bitcast i8* %36 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::DnsConfigService"*)* @_ZN3net29SystemDnsConfigChangeNotifier4Core27SetAndStartDnsConfigServiceENSt3__110unique_ptrINS_16DnsConfigServiceENS2_14default_deleteIS4_EEEE to i64), i64 0>, <2 x i64>* %37, align 8, !noalias !5
  %38 = getelementptr inbounds i8, i8* %34, i64 48
  %39 = bitcast i8* %38 to %"class.base::internal::WeakReference"*
  %40 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %39, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %40) #7, !noalias !5
  %41 = getelementptr inbounds i8, i8* %34, i64 56
  %42 = bitcast i8* %41 to i64*
  %43 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8, !noalias !5
  store i64 %44, i64* %42, align 8, !noalias !5
  %45 = getelementptr inbounds i8, i8* %34, i64 64
  %46 = bitcast i8* %45 to i64*
  store i64 %9, i64* %46, align 8, !noalias !5
  %47 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %34, i8** %47, align 8, !alias.scope !5
  %48 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %26, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback"* nonnull %6) #7
  %49 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #7
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %33) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net29SystemDnsConfigChangeNotifierD2Ev(%"class.net::SystemDnsConfigChangeNotifier"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier", %"class.net::SystemDnsConfigChangeNotifier"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::SystemDnsConfigChangeNotifier::Core"** %3, align 8
  store %"class.net::SystemDnsConfigChangeNotifier::Core"* null, %"class.net::SystemDnsConfigChangeNotifier::Core"** %3, align 8
  %5 = icmp eq %"class.net::SystemDnsConfigChangeNotifier::Core"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier", %"class.net::SystemDnsConfigChangeNotifier"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %7, align 8
  %9 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0), i32 193) #7
  %10 = bitcast %"class.net::SystemDnsConfigChangeNotifier::Core"* %4 to i8*
  %11 = call zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"* %8, %"class.base::Location"* nonnull dereferenceable(32) %2, void (i8*)* nonnull @_ZN4base12DeleteHelperIN3net29SystemDnsConfigChangeNotifier4CoreEE8DoDeleteEPKv, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #7
  br label %12

12:                                               ; preds = %1, %6
  %13 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier", %"class.net::SystemDnsConfigChangeNotifier"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base19OnTaskRunnerDeleterD1Ev(%"struct.base::OnTaskRunnerDeleter"* %13) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net29SystemDnsConfigChangeNotifier11AddObserverEPNS0_8ObserverE(%"class.net::SystemDnsConfigChangeNotifier"* nocapture readonly, %"class.net::SystemDnsConfigChangeNotifier::Observer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier", %"class.net::SystemDnsConfigChangeNotifier"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::SystemDnsConfigChangeNotifier::Core"** %3, align 8
  %5 = icmp eq %"class.net::SystemDnsConfigChangeNotifier::Core"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN3net29SystemDnsConfigChangeNotifier4Core11AddObserverEPNS0_8ObserverE(%"class.net::SystemDnsConfigChangeNotifier::Core"* nonnull %4, %"class.net::SystemDnsConfigChangeNotifier::Observer"* %1)
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net29SystemDnsConfigChangeNotifier4Core11AddObserverEPNS0_8ObserverE(%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::SystemDnsConfigChangeNotifier::Observer"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.absl::optional", align 8
  %4 = ptrtoint %"class.net::SystemDnsConfigChangeNotifier::Observer"* %1 to i64
  %5 = tail call i8* @_Znwm(i64 32) #8
  %6 = bitcast i8* %5 to %"class.net::(anonymous namespace)::WrappedObserver"*
  %7 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #7
  %8 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 0, i32 0
  %9 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %8, align 8
  %10 = bitcast i8* %5 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* %9, %"class.base::SequencedTaskRunner"** %10, align 8
  %11 = icmp eq %"class.base::SequencedTaskRunner"* %9, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  br label %15

15:                                               ; preds = %2, %12
  %16 = getelementptr inbounds i8, i8* %5, i64 8
  %17 = bitcast i8* %16 to i64*
  store i64 %4, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %5, i64 16
  %19 = bitcast i8* %18 to %"class.base::internal::WeakPtrFactoryBase"*
  %20 = ptrtoint i8* %5 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %19, i64 %20) #7
  %21 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %21) #7
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24, !prof !10

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %25) #7
  br label %26

26:                                               ; preds = %15, %24
  %27 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !11
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 216, i1 false) #7
  %32 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9DnsConfigC1ERKS0_(%"struct.net::DnsConfig"* %33, %"struct.net::DnsConfig"* dereferenceable(208) %32) #7
  store i8 1, i8* %31, align 8
  call fastcc void @_ZN3net12_GLOBAL__N_115WrappedObserver18OnNotifyThreadsafeEN4absl8optionalINS_9DnsConfigEEE(%"class.net::(anonymous namespace)::WrappedObserver"* nonnull %6, %"class.absl::optional"* nonnull %3)
  %34 = load i8, i8* %31, align 8, !range !11
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %30
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* %33) #7
  store i8 0, i8* %31, align 8
  br label %37

37:                                               ; preds = %26, %36, %30
  %38 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node"**
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node"* %41, null
  br i1 %42, label %71, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %45

45:                                               ; preds = %67, %43
  %46 = phi %"class.std::__1::__tree_node"* [ %70, %67 ], [ %41, %43 ]
  %47 = phi %"class.std::__1::__tree_node_base"** [ %69, %67 ], [ %44, %43 ]
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 1, i32 0, i32 0
  %49 = load %"class.net::SystemDnsConfigChangeNotifier::Observer"*, %"class.net::SystemDnsConfigChangeNotifier::Observer"** %48, align 8
  %50 = icmp ugt %"class.net::SystemDnsConfigChangeNotifier::Observer"* %49, %1
  br i1 %50, label %51, label %57

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, null
  br i1 %54, label %55, label %67

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 0, i32 0
  br label %73

57:                                               ; preds = %45
  %58 = icmp ult %"class.net::SystemDnsConfigChangeNotifier::Observer"* %49, %1
  br i1 %58, label %59, label %65

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 0, i32 1
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %63, label %67

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 0, i32 0
  br label %73

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 0, i32 0
  br label %73

67:                                               ; preds = %59, %51
  %68 = phi %"class.std::__1::__tree_node_base"* [ %53, %51 ], [ %61, %59 ]
  %69 = phi %"class.std::__1::__tree_node_base"** [ %52, %51 ], [ %60, %59 ]
  %70 = bitcast %"class.std::__1::__tree_node_base"* %68 to %"class.std::__1::__tree_node"*
  br label %45

71:                                               ; preds = %37
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  br label %73

73:                                               ; preds = %71, %65, %63, %55
  %74 = phi %"class.std::__1::__tree_end_node"* [ %39, %71 ], [ %56, %55 ], [ %64, %63 ], [ %66, %65 ]
  %75 = phi %"class.std::__1::__tree_node_base"** [ %72, %71 ], [ %52, %55 ], [ %60, %63 ], [ %47, %65 ]
  %76 = bitcast %"class.std::__1::__tree_node_base"** %75 to %"class.std::__1::__tree_node"**
  %77 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node"* %77, null
  br i1 %78, label %79, label %106

79:                                               ; preds = %73
  %80 = call i8* @_Znwm(i64 48) #8, !noalias !12
  %81 = getelementptr inbounds i8, i8* %80, i64 32
  %82 = bitcast i8* %81 to i64*
  store i64 %4, i64* %82, align 8, !noalias !12
  %83 = getelementptr inbounds i8, i8* %80, i64 40
  %84 = bitcast i8* %83 to i64*
  store i64 %20, i64* %84, align 8, !noalias !12
  %85 = bitcast i8* %80 to %"class.std::__1::__tree_node_base"*
  %86 = getelementptr inbounds i8, i8* %80, i64 16
  %87 = bitcast i8* %86 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %87, align 8
  %88 = bitcast %"class.std::__1::__tree_node_base"** %75 to i8**
  store i8* %80, i8** %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %38, i64 0, i32 0, i32 0
  %90 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, null
  br i1 %93, label %98, label %94

94:                                               ; preds = %79
  %95 = ptrtoint %"class.std::__1::__tree_node_base"* %92 to i64
  %96 = bitcast %"class.std::__1::map"* %38 to i64*
  store i64 %95, i64* %96, align 8
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  br label %98

98:                                               ; preds = %79, %94
  %99 = phi %"class.std::__1::__tree_node_base"* [ %85, %79 ], [ %97, %94 ]
  %100 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %101, %"class.std::__1::__tree_node_base"* %99) #7
  %102 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, 1
  store i64 %104, i64* %102, align 8
  %105 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %21) #7
  br label %119

106:                                              ; preds = %73
  %107 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %21) #7
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %19) #7
  %108 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %10, align 8
  %109 = icmp eq %"class.base::SequencedTaskRunner"* %108, null
  br i1 %109, label %118, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %108, i64 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw sub i32* %112, i32 1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %118

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %111, i64 -2
  %117 = bitcast %"class.base::RefCountedThreadSafe"* %116 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %117) #7
  br label %118

118:                                              ; preds = %115, %110, %106
  call void @_ZdlPv(i8* nonnull %5) #8
  br label %119

119:                                              ; preds = %98, %118
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net29SystemDnsConfigChangeNotifier14RemoveObserverEPNS0_8ObserverE(%"class.net::SystemDnsConfigChangeNotifier"* nocapture readonly, %"class.net::SystemDnsConfigChangeNotifier::Observer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier", %"class.net::SystemDnsConfigChangeNotifier"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::SystemDnsConfigChangeNotifier::Core"** %3, align 8
  %5 = icmp eq %"class.net::SystemDnsConfigChangeNotifier::Core"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN3net29SystemDnsConfigChangeNotifier4Core14RemoveObserverEPNS0_8ObserverE(%"class.net::SystemDnsConfigChangeNotifier::Core"* nonnull %4, %"class.net::SystemDnsConfigChangeNotifier::Observer"* %1)
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net29SystemDnsConfigChangeNotifier4Core14RemoveObserverEPNS0_8ObserverE(%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::SystemDnsConfigChangeNotifier::Observer"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #7
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #7
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node"* %12, null
  br i1 %13, label %35, label %14

14:                                               ; preds = %8, %14
  %15 = phi %"class.std::__1::__tree_end_node"* [ %25, %14 ], [ %10, %8 ]
  %16 = phi %"class.std::__1::__tree_node"* [ %26, %14 ], [ %12, %8 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.net::SystemDnsConfigChangeNotifier::Observer"*, %"class.net::SystemDnsConfigChangeNotifier::Observer"** %17, align 8
  %19 = icmp ult %"class.net::SystemDnsConfigChangeNotifier::Observer"* %18, %1
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::__tree_node_base"** %20 to %"class.std::__1::__tree_node"**
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node"* %16 to %"class.std::__1::__tree_node"**
  %24 = select i1 %19, %"class.std::__1::__tree_node"** %21, %"class.std::__1::__tree_node"** %23
  %25 = select i1 %19, %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"* %22
  %26 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %24, align 8
  %27 = icmp eq %"class.std::__1::__tree_node"* %26, null
  br i1 %27, label %28, label %14

28:                                               ; preds = %14
  %29 = icmp eq %"class.std::__1::__tree_end_node"* %25, %10
  br i1 %29, label %35, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 4
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.net::SystemDnsConfigChangeNotifier::Observer"**
  %33 = load %"class.net::SystemDnsConfigChangeNotifier::Observer"*, %"class.net::SystemDnsConfigChangeNotifier::Observer"** %32, align 8
  %34 = icmp ugt %"class.net::SystemDnsConfigChangeNotifier::Observer"* %33, %1
  br i1 %34, label %35, label %36

35:                                               ; preds = %30, %28, %8
  br label %36

36:                                               ; preds = %35, %30
  %37 = phi %"class.std::__1::__tree_end_node"* [ %10, %35 ], [ %25, %30 ]
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 5
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.net::(anonymous namespace)::WrappedObserver"**
  %40 = load %"class.net::(anonymous namespace)::WrappedObserver"*, %"class.net::(anonymous namespace)::WrappedObserver"** %39, align 8
  store %"class.net::(anonymous namespace)::WrappedObserver"* null, %"class.net::(anonymous namespace)::WrappedObserver"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 1, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %44, label %52

44:                                               ; preds = %36
  %45 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_node_base"*
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 2
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_end_node"**
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, %45
  br i1 %51, label %68, label %59

52:                                               ; preds = %36, %52
  %53 = phi %"class.std::__1::__tree_node_base"* [ %55, %52 ], [ %42, %36 ]
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %52

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 0
  br label %68

59:                                               ; preds = %44, %59
  %60 = phi %"class.std::__1::__tree_end_node"** [ %63, %59 ], [ %47, %44 ]
  %61 = bitcast %"class.std::__1::__tree_end_node"** %60 to %"class.std::__1::__tree_node_base"**
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, %62
  br i1 %67, label %68, label %59

68:                                               ; preds = %59, %57, %44
  %69 = phi %"class.std::__1::__tree_end_node"* [ %58, %57 ], [ %48, %44 ], [ %64, %59 ]
  %70 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %9, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_end_node"* %71, %37
  br i1 %72, label %73, label %76

73:                                               ; preds = %68
  %74 = ptrtoint %"class.std::__1::__tree_end_node"* %69 to i64
  %75 = bitcast %"class.std::__1::map"* %9 to i64*
  store i64 %74, i64* %75, align 8
  br label %76

76:                                               ; preds = %73, %68
  %77 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, -1
  store i64 %79, i64* %77, align 8
  %80 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  %82 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %81, %"class.std::__1::__tree_node_base"* %82) #7
  %83 = load %"class.net::(anonymous namespace)::WrappedObserver"*, %"class.net::(anonymous namespace)::WrappedObserver"** %39, align 8
  store %"class.net::(anonymous namespace)::WrappedObserver"* null, %"class.net::(anonymous namespace)::WrappedObserver"** %39, align 8
  %84 = icmp eq %"class.net::(anonymous namespace)::WrappedObserver"* %83, null
  br i1 %84, label %100, label %85

85:                                               ; preds = %76
  %86 = getelementptr inbounds %"class.net::(anonymous namespace)::WrappedObserver", %"class.net::(anonymous namespace)::WrappedObserver"* %83, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %86) #7
  %87 = getelementptr inbounds %"class.net::(anonymous namespace)::WrappedObserver", %"class.net::(anonymous namespace)::WrappedObserver"* %83, i64 0, i32 0, i32 0
  %88 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %87, align 8
  %89 = icmp eq %"class.base::SequencedTaskRunner"* %88, null
  br i1 %89, label %98, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %88, i64 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw sub i32* %92, i32 1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %91, i64 -2
  %97 = bitcast %"class.base::RefCountedThreadSafe"* %96 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %97) #7
  br label %98

98:                                               ; preds = %95, %90, %85
  %99 = bitcast %"class.net::(anonymous namespace)::WrappedObserver"* %83 to i8*
  tail call void @_ZdlPv(i8* %99) #8
  br label %100

100:                                              ; preds = %76, %98
  %101 = bitcast %"class.std::__1::__tree_end_node"* %37 to i8*
  tail call void @_ZdlPv(i8* %101) #8
  %102 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #7
  %103 = icmp eq %"class.net::(anonymous namespace)::WrappedObserver"* %40, null
  br i1 %103, label %119, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.net::(anonymous namespace)::WrappedObserver", %"class.net::(anonymous namespace)::WrappedObserver"* %40, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %105) #7
  %106 = getelementptr inbounds %"class.net::(anonymous namespace)::WrappedObserver", %"class.net::(anonymous namespace)::WrappedObserver"* %40, i64 0, i32 0, i32 0
  %107 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %106, align 8
  %108 = icmp eq %"class.base::SequencedTaskRunner"* %107, null
  br i1 %108, label %117, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %107, i64 0, i32 0, i32 1
  %111 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw sub i32* %111, i32 1 acq_rel
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %110, i64 -2
  %116 = bitcast %"class.base::RefCountedThreadSafe"* %115 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %116) #7
  br label %117

117:                                              ; preds = %114, %109, %104
  %118 = bitcast %"class.net::(anonymous namespace)::WrappedObserver"* %40 to i8*
  tail call void @_ZdlPv(i8* %118) #8
  br label %119

119:                                              ; preds = %100, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net29SystemDnsConfigChangeNotifier13RefreshConfigEv(%"class.net::SystemDnsConfigChangeNotifier"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier", %"class.net::SystemDnsConfigChangeNotifier"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::SystemDnsConfigChangeNotifier::Core"** %2, align 8
  %4 = icmp eq %"class.net::SystemDnsConfigChangeNotifier::Core"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN3net29SystemDnsConfigChangeNotifier4Core13RefreshConfigEv(%"class.net::SystemDnsConfigChangeNotifier::Core"* nonnull %3)
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net29SystemDnsConfigChangeNotifier4Core13RefreshConfigEv(%"class.net::SystemDnsConfigChangeNotifier::Core"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::WeakPtr", align 8
  %6 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 3, i32 0
  %7 = bitcast %"class.base::SequencedTaskRunner"** %6 to %"class.base::TaskRunner"**
  %8 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %7, align 8
  %9 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i32 121) #7
  %10 = bitcast %"class.base::WeakPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #7
  %11 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7, !noalias !15
  %12 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 5, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %12) #7, !noalias !15
  %13 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 5, i32 0, i32 1
  %14 = load i64, i64* %13, align 8, !noalias !15
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %15, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %14) #7
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7, !noalias !15
  %16 = call i8* @_Znwm(i64 64) #8, !noalias !18
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvvEJNS_7WeakPtrIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvvEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvvEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #7, !noalias !18
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::SystemDnsConfigChangeNotifier::Core"*)* @_ZN3net29SystemDnsConfigChangeNotifier4Core20TriggerRefreshConfigEv to i64), i64 0>, <2 x i64>* %19, align 8, !noalias !18
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = bitcast i8* %20 to %"class.base::internal::WeakReference"*
  %22 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %21, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %22) #7, !noalias !18
  %23 = getelementptr inbounds i8, i8* %16, i64 56
  %24 = bitcast i8* %23 to i64*
  %25 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8, !noalias !18
  store i64 %26, i64* %24, align 8, !noalias !18
  %27 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %16, i8** %27, align 8, !alias.scope !18
  %28 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %8, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #7
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #7
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net29SystemDnsConfigChangeNotifier29SetDnsConfigServiceForTestingENSt3__110unique_ptrINS_16DnsConfigServiceENS1_14default_deleteIS3_EEEE(%"class.net::SystemDnsConfigChangeNotifier"* nocapture readonly, %"class.net::DnsConfigService"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier", %"class.net::SystemDnsConfigChangeNotifier"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::SystemDnsConfigChangeNotifier::Core"** %3, align 8
  tail call void @_ZN3net29SystemDnsConfigChangeNotifier4Core29SetDnsConfigServiceForTestingENSt3__110unique_ptrINS_16DnsConfigServiceENS2_14default_deleteIS4_EEEE(%"class.net::SystemDnsConfigChangeNotifier::Core"* %4, %"class.net::DnsConfigService"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net29SystemDnsConfigChangeNotifier4Core29SetDnsConfigServiceForTestingENSt3__110unique_ptrINS_16DnsConfigServiceENS2_14default_deleteIS4_EEEE(%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::DnsConfigService"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = ptrtoint %"class.net::DnsConfigService"* %1 to i64
  %8 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 3, i32 0
  %9 = bitcast %"class.base::SequencedTaskRunner"** %8 to %"class.base::TaskRunner"**
  %10 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %9, align 8
  %11 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i32 129) #7
  %12 = bitcast %"class.base::WeakPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #7
  %13 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7, !noalias !23
  %14 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 5, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %14) #7, !noalias !23
  %15 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 5, i32 0, i32 1
  %16 = load i64, i64* %15, align 8, !noalias !23
  %17 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %17, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %16) #7
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7, !noalias !23
  %18 = call i8* @_Znwm(i64 72) #8, !noalias !26
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS3_16DnsConfigServiceENS6_14default_deleteIS8_EEEEEJNS_7WeakPtrIS5_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS2_16DnsConfigServiceENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS3_16DnsConfigServiceENS6_14default_deleteIS8_EEEEEJNS_7WeakPtrIS5_EESB_EEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE) #7, !noalias !26
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::DnsConfigService"*)* @_ZN3net29SystemDnsConfigChangeNotifier4Core27SetAndStartDnsConfigServiceENSt3__110unique_ptrINS_16DnsConfigServiceENS2_14default_deleteIS4_EEEE to i64), i64 0>, <2 x i64>* %21, align 8, !noalias !26
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = bitcast i8* %22 to %"class.base::internal::WeakReference"*
  %24 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %23, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %24) #7, !noalias !26
  %25 = getelementptr inbounds i8, i8* %18, i64 56
  %26 = bitcast i8* %25 to i64*
  %27 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !26
  store i64 %28, i64* %26, align 8, !noalias !26
  %29 = getelementptr inbounds i8, i8* %18, i64 64
  %30 = bitcast i8* %29 to i64*
  store i64 %7, i64* %30, align 8, !noalias !26
  %31 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %18, i8** %31, align 8, !alias.scope !26
  %32 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %10, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #7
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #7
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #7
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net29SystemDnsConfigChangeNotifier4Core27SetAndStartDnsConfigServiceENSt3__110unique_ptrINS_16DnsConfigServiceENS2_14default_deleteIS4_EEEE(%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::DnsConfigService"*) #0 comdat align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = alloca %"class.base::WeakPtr", align 8
  %6 = ptrtoint %"class.net::DnsConfigService"* %1 to i64
  %7 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.net::DnsConfigService"*, %"class.net::DnsConfigService"** %8, align 8
  %10 = bitcast %"class.std::__1::unique_ptr.51"* %7 to i64*
  store i64 %6, i64* %10, align 8
  %11 = icmp eq %"class.net::DnsConfigService"* %9, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.net::DnsConfigService"* %9 to void (%"class.net::DnsConfigService"*)***
  %14 = load void (%"class.net::DnsConfigService"*)**, void (%"class.net::DnsConfigService"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %14, i64 1
  %16 = load void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %15, align 8
  tail call void %16(%"class.net::DnsConfigService"* nonnull %9) #7
  %17 = load %"class.net::DnsConfigService"*, %"class.net::DnsConfigService"** %8, align 8
  br label %18

18:                                               ; preds = %12, %2
  %19 = phi %"class.net::DnsConfigService"* [ %17, %12 ], [ %1, %2 ]
  %20 = bitcast %"class.base::RepeatingCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  %21 = bitcast %"class.base::WeakPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #7
  %22 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7, !noalias !31
  %23 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 5, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %23) #7, !noalias !31
  %24 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 5, i32 0, i32 1
  %25 = load i64, i64* %24, align 8, !noalias !31
  %26 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %26, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %25) #7
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7, !noalias !31
  %27 = call i8* @_Znwm(i64 64) #8, !noalias !34
  %28 = bitcast i8* %27 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %28, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvRKNS3_9DnsConfigEEJNS_7WeakPtrIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvRKNS2_9DnsConfigEEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvRKNS3_9DnsConfigEEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE) #7, !noalias !34
  %29 = getelementptr inbounds i8, i8* %27, i64 32
  %30 = bitcast i8* %29 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"struct.net::DnsConfig"*)* @_ZN3net29SystemDnsConfigChangeNotifier4Core15OnConfigChangedERKNS_9DnsConfigE to i64), i64 0>, <2 x i64>* %30, align 8, !noalias !34
  %31 = getelementptr inbounds i8, i8* %27, i64 48
  %32 = bitcast i8* %31 to %"class.base::internal::WeakReference"*
  %33 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %32, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %33) #7, !noalias !34
  %34 = getelementptr inbounds i8, i8* %27, i64 56
  %35 = bitcast i8* %34 to i64*
  %36 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8, !noalias !34
  store i64 %37, i64* %35, align 8, !noalias !34
  %38 = bitcast %"class.base::RepeatingCallback"* %4 to i8**
  store i8* %27, i8** %38, align 8, !alias.scope !34
  call void @_ZN3net16DnsConfigService11WatchConfigERKN4base17RepeatingCallbackIFvRKNS_9DnsConfigEEEE(%"class.net::DnsConfigService"* %19, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %4) #7
  %39 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #7
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %26) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  ret void
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS3_16DnsConfigServiceENS6_14default_deleteIS8_EEEEEJNS_7WeakPtrIS5_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #7
  br i1 %6, label %7, label %45

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.net::SystemDnsConfigChangeNotifier::Core"**
  %10 = load %"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::SystemDnsConfigChangeNotifier::Core"** %9, align 8
  %11 = icmp eq %"class.net::SystemDnsConfigChangeNotifier::Core"* %10, null
  br i1 %11, label %45, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #7
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #7
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.net::SystemDnsConfigChangeNotifier::Core"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::DnsConfigService"*)**
  %37 = load void (%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::DnsConfigService"*)*, void (%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::DnsConfigService"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::DnsConfigService"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::DnsConfigService"*)* [ %37, %31 ], [ %39, %38 ]
  %42 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %43 = bitcast void (%"class.base::internal::BindStateBase"*)** %42 to %"class.net::DnsConfigService"**
  %44 = load %"class.net::DnsConfigService"*, %"class.net::DnsConfigService"** %43, align 8
  store %"class.net::DnsConfigService"* null, %"class.net::DnsConfigService"** %43, align 8
  call void %41(%"class.net::SystemDnsConfigChangeNotifier::Core"* %28, %"class.net::DnsConfigService"* %44) #7
  br label %45

45:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS2_16DnsConfigServiceENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.net::DnsConfigService"**
  %6 = load %"class.net::DnsConfigService"*, %"class.net::DnsConfigService"** %5, align 8
  store %"class.net::DnsConfigService"* null, %"class.net::DnsConfigService"** %5, align 8
  %7 = icmp eq %"class.net::DnsConfigService"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.net::DnsConfigService"* %6 to void (%"class.net::DnsConfigService"*)***
  %10 = load void (%"class.net::DnsConfigService"*)**, void (%"class.net::DnsConfigService"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %10, i64 1
  %12 = load void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %11, align 8
  tail call void %12(%"class.net::DnsConfigService"* nonnull %6) #7
  br label %13

13:                                               ; preds = %3, %8
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %15 = bitcast void (%"class.base::internal::BindStateBase"*)** %14 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %15) #7
  %16 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %13, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS3_16DnsConfigServiceENS6_14default_deleteIS8_EEEEEJNS_7WeakPtrIS5_EESB_EEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #7
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::SystemDnsConfigChangeNotifier::Core"**
  %9 = load %"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::SystemDnsConfigChangeNotifier::Core"** %8, align 8
  %10 = icmp ne %"class.net::SystemDnsConfigChangeNotifier::Core"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #7
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN3net16DnsConfigService11WatchConfigERKN4base17RepeatingCallbackIFvRKNS_9DnsConfigEEEE(%"class.net::DnsConfigService"*, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net29SystemDnsConfigChangeNotifier4Core15OnConfigChangedERKNS_9DnsConfigE(%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"struct.net::DnsConfig"* dereferenceable(208)) #0 comdat align 2 {
  %3 = alloca %"class.absl::optional", align 8
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #7
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #7
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %11) #7
  %12 = bitcast %"class.absl::optional"* %3 to i64*
  store i64 -6148914691236517206, i64* %12, align 8
  store i8 0, i8* %11, align 8
  %13 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %union.anon* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 208, i1 false) #7
  %15 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %15, align 8
  %17 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 1
  %18 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %17, align 8
  %19 = icmp eq %"class.net::IPEndPoint"* %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13, i32 0, i32 0
  %22 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %21, align 8
  %23 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 13, i32 0, i32 1
  %24 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %23, align 8
  %25 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %22, %24
  br i1 %25, label %28, label %26

26:                                               ; preds = %20, %10
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9DnsConfigC1ERKS0_(%"struct.net::DnsConfig"* %27, %"struct.net::DnsConfig"* dereferenceable(208) %1) #7
  store i8 1, i8* %11, align 8
  br label %28

28:                                               ; preds = %20, %26
  %29 = phi i8 [ 1, %26 ], [ 0, %20 ]
  %30 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !11
  %32 = icmp ne i8 %31, 0
  %33 = icmp ne i8 %29, 0
  %34 = xor i1 %33, %32
  %35 = xor i1 %32, true
  %36 = or i1 %34, %35
  br i1 %36, label %46, label %37

37:                                               ; preds = %28
  %38 = icmp eq i8 %29, 0
  br i1 %38, label %39, label %40, !prof !39

39:                                               ; preds = %37
  call void @llvm.trap() #7
  unreachable

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = call zeroext i1 @_ZNK3net9DnsConfigeqERKS0_(%"struct.net::DnsConfig"* %41, %"struct.net::DnsConfig"* dereferenceable(208) %42) #7
  br i1 %43, label %115, label %44

44:                                               ; preds = %40
  %45 = load i8, i8* %11, align 8, !range !11
  br label %47

46:                                               ; preds = %28
  br i1 %34, label %47, label %115

47:                                               ; preds = %44, %46
  %48 = phi i8 [ %45, %44 ], [ %29, %46 ]
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %52 = load i8, i8* %30, align 8, !range !11
  %53 = icmp eq i8 %52, 0
  %54 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %53, label %57, label %55

55:                                               ; preds = %50
  %56 = call dereferenceable(208) %"struct.net::DnsConfig"* @_ZN3net9DnsConfigaSEOS0_(%"struct.net::DnsConfig"* %54, %"struct.net::DnsConfig"* dereferenceable(208) %51) #7
  br label %63

57:                                               ; preds = %50
  call void @_ZN3net9DnsConfigC1EOS0_(%"struct.net::DnsConfig"* %54, %"struct.net::DnsConfig"* dereferenceable(208) %51) #7
  store i8 1, i8* %30, align 8
  br label %63

58:                                               ; preds = %47
  %59 = load i8, i8* %30, align 8, !range !11
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* %62) #7
  store i8 0, i8* %30, align 8
  br label %63

63:                                               ; preds = %55, %57, %58, %61
  %64 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2, i32 0, i32 0
  %65 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %64, align 8
  %66 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %67 = icmp eq %"class.std::__1::__tree_end_node"* %65, %66
  br i1 %67, label %115, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %72

72:                                               ; preds = %68, %112
  %73 = phi %"class.std::__1::__tree_end_node"* [ %65, %68 ], [ %113, %112 ]
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 5
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.net::(anonymous namespace)::WrappedObserver"**
  %76 = load %"class.net::(anonymous namespace)::WrappedObserver"*, %"class.net::(anonymous namespace)::WrappedObserver"** %75, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 216, i1 false) #7
  %77 = load i8, i8* %30, align 8, !range !11
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %72
  call void @_ZN3net9DnsConfigC1ERKS0_(%"struct.net::DnsConfig"* %71, %"struct.net::DnsConfig"* dereferenceable(208) %70) #7
  store i8 1, i8* %69, align 8
  br label %80

80:                                               ; preds = %72, %79
  call fastcc void @_ZN3net12_GLOBAL__N_115WrappedObserver18OnNotifyThreadsafeEN4absl8optionalINS_9DnsConfigEEE(%"class.net::(anonymous namespace)::WrappedObserver"* %76, %"class.absl::optional"* nonnull %4)
  %81 = load i8, i8* %69, align 8, !range !11
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %84, label %83

83:                                               ; preds = %80
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* %71) #7
  store i8 0, i8* %69, align 8
  br label %84

84:                                               ; preds = %80, %83
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 1, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node_base"* %86, null
  br i1 %87, label %88, label %96

88:                                               ; preds = %84
  %89 = bitcast %"class.std::__1::__tree_end_node"* %73 to %"class.std::__1::__tree_node_base"*
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 2
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_end_node"**
  %92 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %92, i64 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, %89
  br i1 %95, label %112, label %103

96:                                               ; preds = %84, %96
  %97 = phi %"class.std::__1::__tree_node_base"* [ %99, %96 ], [ %86, %84 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, null
  br i1 %100, label %101, label %96

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %97, i64 0, i32 0
  br label %112

103:                                              ; preds = %88, %103
  %104 = phi %"class.std::__1::__tree_end_node"** [ %107, %103 ], [ %91, %88 ]
  %105 = bitcast %"class.std::__1::__tree_end_node"** %104 to %"class.std::__1::__tree_node_base"**
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %106, i64 0, i32 2
  %108 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %107, align 8
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 0, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, %106
  br i1 %111, label %112, label %103

112:                                              ; preds = %103, %88, %101
  %113 = phi %"class.std::__1::__tree_end_node"* [ %102, %101 ], [ %92, %88 ], [ %108, %103 ]
  %114 = icmp eq %"class.std::__1::__tree_end_node"* %113, %66
  br i1 %114, label %115, label %72

115:                                              ; preds = %112, %63, %46, %40
  %116 = load i8, i8* %11, align 8, !range !11
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* %119) #7
  store i8 0, i8* %11, align 8
  br label %120

120:                                              ; preds = %115, %118
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %11) #7
  %121 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvRKNS3_9DnsConfigEEJNS_7WeakPtrIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_(%"class.base::internal::BindStateBase"*, %"struct.net::DnsConfig"* dereferenceable(208)) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #7
  br i1 %7, label %8, label %43

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.net::SystemDnsConfigChangeNotifier::Core"**
  %11 = load %"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::SystemDnsConfigChangeNotifier::Core"** %10, align 8
  %12 = icmp eq %"class.net::SystemDnsConfigChangeNotifier::Core"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #7
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #7
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #7
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.net::SystemDnsConfigChangeNotifier::Core"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"struct.net::DnsConfig"*)**
  %38 = load void (%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"struct.net::DnsConfig"*)*, void (%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"struct.net::DnsConfig"*)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"struct.net::DnsConfig"*)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.net::SystemDnsConfigChangeNotifier::Core"*, %"struct.net::DnsConfig"*)* [ %38, %32 ], [ %40, %39 ]
  call void %42(%"class.net::SystemDnsConfigChangeNotifier::Core"* %29, %"struct.net::DnsConfig"* dereferenceable(208) %1) #7
  br label %43

43:                                               ; preds = %2, %8, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvRKNS2_9DnsConfigEEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #7
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvRKNS3_9DnsConfigEEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #7
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::SystemDnsConfigChangeNotifier::Core"**
  %9 = load %"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::SystemDnsConfigChangeNotifier::Core"** %8, align 8
  %10 = icmp ne %"class.net::SystemDnsConfigChangeNotifier::Core"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #7
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_115WrappedObserver18OnNotifyThreadsafeEN4absl8optionalINS_9DnsConfigEEE(%"class.net::(anonymous namespace)::WrappedObserver"*, %"class.absl::optional"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::WeakPtr.98", align 8
  %7 = bitcast %"class.net::(anonymous namespace)::WrappedObserver"* %0 to %"class.base::TaskRunner"**
  %8 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %7, align 8
  %9 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i32 39) #7
  %10 = bitcast %"class.base::WeakPtr.98"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #7
  %11 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7, !noalias !40
  %12 = getelementptr inbounds %"class.net::(anonymous namespace)::WrappedObserver", %"class.net::(anonymous namespace)::WrappedObserver"* %0, i64 0, i32 2, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %12) #7, !noalias !40
  %13 = getelementptr inbounds %"class.net::(anonymous namespace)::WrappedObserver", %"class.net::(anonymous namespace)::WrappedObserver"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = load i64, i64* %13, align 8, !noalias !40
  %15 = getelementptr inbounds %"class.base::WeakPtr.98", %"class.base::WeakPtr.98"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %15, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %14) #7
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7, !noalias !40
  %16 = call i8* @_Znwm(i64 280) #8, !noalias !43
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_115WrappedObserverEFvN4absl8optionalINS3_9DnsConfigEEEEJNS_7WeakPtrIS5_EES9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_115WrappedObserverEFvN4absl8optionalINS2_9DnsConfigEEEEJNS_7WeakPtrIS4_EES8_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net12_GLOBAL__N_115WrappedObserverEFvN4absl8optionalINS3_9DnsConfigEEEEJNS_7WeakPtrIS5_EES9_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE) #7, !noalias !43
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::(anonymous namespace)::WrappedObserver"*, %"class.absl::optional"*)* @_ZN3net12_GLOBAL__N_115WrappedObserver8OnNotifyEN4absl8optionalINS_9DnsConfigEEE to i64), i64 0>, <2 x i64>* %19, align 8, !noalias !43
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = bitcast i8* %20 to %"class.base::internal::WeakReference"*
  %22 = getelementptr inbounds %"class.base::WeakPtr.98", %"class.base::WeakPtr.98"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %21, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %22) #7, !noalias !43
  %23 = getelementptr inbounds i8, i8* %16, i64 56
  %24 = bitcast i8* %23 to i64*
  %25 = getelementptr inbounds %"class.base::WeakPtr.98", %"class.base::WeakPtr.98"* %6, i64 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8, !noalias !43
  store i64 %26, i64* %24, align 8, !noalias !43
  %27 = getelementptr inbounds i8, i8* %16, i64 64
  %28 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 216, i1 false) #7, !noalias !43
  %29 = load i8, i8* %28, align 8, !range !11, !noalias !43
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %33 = getelementptr inbounds i8, i8* %16, i64 72
  %34 = bitcast i8* %33 to %"struct.net::DnsConfig"*
  call void @_ZN3net9DnsConfigC1EOS0_(%"struct.net::DnsConfig"* %34, %"struct.net::DnsConfig"* dereferenceable(208) %32) #7, !noalias !43
  store i8 1, i8* %27, align 8, !noalias !43
  br label %35

35:                                               ; preds = %2, %31
  %36 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %16, i8** %36, align 8, !alias.scope !43
  %37 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %8, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #7
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #7
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #7
  ret void
}

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

declare void @_ZN3net9DnsConfigC1ERKS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* dereferenceable(208)) unnamed_addr #1

declare zeroext i1 @_ZNK3net9DnsConfigeqERKS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* dereferenceable(208)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare dereferenceable(208) %"struct.net::DnsConfig"* @_ZN3net9DnsConfigaSEOS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* dereferenceable(208)) local_unnamed_addr #1

declare void @_ZN3net9DnsConfigC1EOS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* dereferenceable(208)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_115WrappedObserver8OnNotifyEN4absl8optionalINS_9DnsConfigEEE(%"class.net::(anonymous namespace)::WrappedObserver"* nocapture readonly, %"class.absl::optional"*) #0 align 2 {
  %3 = alloca %"class.absl::optional", align 8
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::WrappedObserver", %"class.net::(anonymous namespace)::WrappedObserver"* %0, i64 0, i32 1
  %5 = load %"class.net::SystemDnsConfigChangeNotifier::Observer"*, %"class.net::SystemDnsConfigChangeNotifier::Observer"** %4, align 8
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 216, i1 false) #7
  %8 = load i8, i8* %7, align 8, !range !11
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9DnsConfigC1EOS0_(%"struct.net::DnsConfig"* %12, %"struct.net::DnsConfig"* dereferenceable(208) %11) #7
  store i8 1, i8* %6, align 8
  br label %13

13:                                               ; preds = %2, %10
  %14 = bitcast %"class.net::SystemDnsConfigChangeNotifier::Observer"* %5 to void (%"class.net::SystemDnsConfigChangeNotifier::Observer"*, %"class.absl::optional"*)***
  %15 = load void (%"class.net::SystemDnsConfigChangeNotifier::Observer"*, %"class.absl::optional"*)**, void (%"class.net::SystemDnsConfigChangeNotifier::Observer"*, %"class.absl::optional"*)*** %14, align 8
  %16 = load void (%"class.net::SystemDnsConfigChangeNotifier::Observer"*, %"class.absl::optional"*)*, void (%"class.net::SystemDnsConfigChangeNotifier::Observer"*, %"class.absl::optional"*)** %15, align 8
  call void %16(%"class.net::SystemDnsConfigChangeNotifier::Observer"* %5, %"class.absl::optional"* nonnull %3) #7
  %17 = load i8, i8* %6, align 8, !range !11
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* %20) #7
  store i8 0, i8* %6, align 8
  br label %21

21:                                               ; preds = %13, %19
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net12_GLOBAL__N_115WrappedObserverEFvN4absl8optionalINS3_9DnsConfigEEEEJNS_7WeakPtrIS5_EES9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.absl::optional", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i8*
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #7
  br i1 %9, label %10, label %58

10:                                               ; preds = %1
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %"class.net::(anonymous namespace)::WrappedObserver"**
  %13 = load %"class.net::(anonymous namespace)::WrappedObserver"*, %"class.net::(anonymous namespace)::WrappedObserver"** %12, align 8
  %14 = icmp eq %"class.net::(anonymous namespace)::WrappedObserver"* %13, null
  br i1 %14, label %58, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %19 = bitcast void ()** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %21) #7
  %22 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #7
  br i1 %22, label %26, label %23

23:                                               ; preds = %15
  %24 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #7
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  br label %26

26:                                               ; preds = %23, %15
  %27 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #7
  %28 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = select i1 %27, i8* %29, i8* null
  %31 = getelementptr inbounds i8, i8* %30, i64 %20
  %32 = bitcast i8* %31 to %"class.net::(anonymous namespace)::WrappedObserver"*
  %33 = and i64 %17, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %26
  %36 = bitcast i8* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = add i64 %17, -1
  %39 = getelementptr i8, i8* %37, i64 %38
  %40 = bitcast i8* %39 to void (%"class.net::(anonymous namespace)::WrappedObserver"*, %"class.absl::optional"*)**
  %41 = load void (%"class.net::(anonymous namespace)::WrappedObserver"*, %"class.absl::optional"*)*, void (%"class.net::(anonymous namespace)::WrappedObserver"*, %"class.absl::optional"*)** %40, align 8
  br label %44

42:                                               ; preds = %26
  %43 = inttoptr i64 %17 to void (%"class.net::(anonymous namespace)::WrappedObserver"*, %"class.absl::optional"*)*
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi void (%"class.net::(anonymous namespace)::WrappedObserver"*, %"class.absl::optional"*)* [ %41, %35 ], [ %43, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 216, i1 false) #7
  %46 = load i8, i8* %7, align 8, !range !11
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 3
  %50 = bitcast void (%"class.base::internal::BindStateBase"*)** %49 to %"struct.net::DnsConfig"*
  %51 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9DnsConfigC1EOS0_(%"struct.net::DnsConfig"* %51, %"struct.net::DnsConfig"* dereferenceable(208) %50) #7
  store i8 1, i8* %21, align 8
  br label %52

52:                                               ; preds = %48, %44
  call void %45(%"class.net::(anonymous namespace)::WrappedObserver"* %32, %"class.absl::optional"* nonnull %3) #7
  %53 = load i8, i8* %21, align 8, !range !11
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* %56) #7
  store i8 0, i8* %21, align 8
  br label %57

57:                                               ; preds = %55, %52
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %21) #7
  br label %58

58:                                               ; preds = %1, %10, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3net12_GLOBAL__N_115WrappedObserverEFvN4absl8optionalINS2_9DnsConfigEEEEJNS_7WeakPtrIS4_EES8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to i8*
  %6 = load i8, i8* %5, align 8, !range !11
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 1
  %10 = bitcast void ()** %9 to %"struct.net::DnsConfig"*
  tail call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* %10) #7
  store i8 0, i8* %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %12 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %13) #7
  %14 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #8
  br label %15

15:                                               ; preds = %11, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net12_GLOBAL__N_115WrappedObserverEFvN4absl8optionalINS3_9DnsConfigEEEEJNS_7WeakPtrIS5_EES9_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #7
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::(anonymous namespace)::WrappedObserver"**
  %9 = load %"class.net::(anonymous namespace)::WrappedObserver"*, %"class.net::(anonymous namespace)::WrappedObserver"** %8, align 8
  %10 = icmp ne %"class.net::(anonymous namespace)::WrappedObserver"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #7
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

declare dereferenceable(8) %class.scoped_refptr* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !11
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !11
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !11
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !11
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !11
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !11
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !11
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !11
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !11
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !11
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !11
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !11
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !11
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !11
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !11
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !11
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net29SystemDnsConfigChangeNotifier4Core20TriggerRefreshConfigEv(%"class.net::SystemDnsConfigChangeNotifier::Core"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.net::DnsConfigService"*, %"class.net::DnsConfigService"** %2, align 8
  %4 = bitcast %"class.net::DnsConfigService"* %3 to void (%"class.net::DnsConfigService"*)***
  %5 = load void (%"class.net::DnsConfigService"*)**, void (%"class.net::DnsConfigService"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %5, i64 2
  %7 = load void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %6, align 8
  tail call void %7(%"class.net::DnsConfigService"* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvvEJNS_7WeakPtrIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #7
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.net::SystemDnsConfigChangeNotifier::Core"**
  %10 = load %"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::SystemDnsConfigChangeNotifier::Core"** %9, align 8
  %11 = icmp eq %"class.net::SystemDnsConfigChangeNotifier::Core"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #7
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #7
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.net::SystemDnsConfigChangeNotifier::Core"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.net::SystemDnsConfigChangeNotifier::Core"*)**
  %37 = load void (%"class.net::SystemDnsConfigChangeNotifier::Core"*)*, void (%"class.net::SystemDnsConfigChangeNotifier::Core"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.net::SystemDnsConfigChangeNotifier::Core"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.net::SystemDnsConfigChangeNotifier::Core"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.net::SystemDnsConfigChangeNotifier::Core"* %28) #7
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvvEJNS_7WeakPtrIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #7
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net29SystemDnsConfigChangeNotifier4CoreEFvvEJNS_7WeakPtrIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #7
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::SystemDnsConfigChangeNotifier::Core"**
  %9 = load %"class.net::SystemDnsConfigChangeNotifier::Core"*, %"class.net::SystemDnsConfigChangeNotifier::Core"** %8, align 8
  %10 = icmp ne %"class.net::SystemDnsConfigChangeNotifier::Core"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #7
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZN4base19OnTaskRunnerDeleterC1EOS0_(%"struct.base::OnTaskRunnerDeleter"*, %"struct.base::OnTaskRunnerDeleter"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN4base19SequencedTaskRunner27DeleteOrReleaseSoonInternalERKNS_8LocationEPFvPKvES5_(%"class.base::SequencedTaskRunner"*, %"class.base::Location"* dereferenceable(32), void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12DeleteHelperIN3net29SystemDnsConfigChangeNotifier4CoreEE8DoDeleteEPKv(i8*) #0 comdat align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %"class.net::SystemDnsConfigChangeNotifier::Core"*
  tail call void @_ZN3net29SystemDnsConfigChangeNotifier4CoreD2Ev(%"class.net::SystemDnsConfigChangeNotifier::Core"* nonnull %4) #7
  tail call void @_ZdlPv(i8* nonnull %0) #8
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net29SystemDnsConfigChangeNotifier4CoreD2Ev(%"class.net::SystemDnsConfigChangeNotifier::Core"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %2) #7
  %3 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.net::DnsConfigService"*, %"class.net::DnsConfigService"** %3, align 8
  store %"class.net::DnsConfigService"* null, %"class.net::DnsConfigService"** %3, align 8
  %5 = icmp eq %"class.net::DnsConfigService"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::DnsConfigService"* %4 to void (%"class.net::DnsConfigService"*)***
  %8 = load void (%"class.net::DnsConfigService"*)**, void (%"class.net::DnsConfigService"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %8, i64 1
  %10 = load void (%"class.net::DnsConfigService"*)*, void (%"class.net::DnsConfigService"*)** %9, align 8
  tail call void %10(%"class.net::DnsConfigService"* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 3, i32 0
  %13 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %12, align 8
  %14 = icmp eq %"class.base::SequencedTaskRunner"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %13, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %16, i64 -2
  %22 = bitcast %"class.base::RefCountedThreadSafe"* %21 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %22) #7
  br label %23

23:                                               ; preds = %11, %15, %20
  %24 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2, i32 0
  %25 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node"**
  %27 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %26, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIPN3net29SystemDnsConfigChangeNotifier8ObserverENS_10unique_ptrINS2_12_GLOBAL__N_115WrappedObserverENS_14default_deleteIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS_9allocatorISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* %24, %"class.std::__1::__tree_node"* %27) #7
  %28 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = load i8, i8* %28, align 8, !range !11
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* %32) #7
  store i8 0, i8* %28, align 8
  br label %33

33:                                               ; preds = %23, %31
  %34 = getelementptr inbounds %"class.net::SystemDnsConfigChangeNotifier::Core", %"class.net::SystemDnsConfigChangeNotifier::Core"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %34) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__treeINS_12__value_typeIPN3net29SystemDnsConfigChangeNotifier8ObserverENS_10unique_ptrINS2_12_GLOBAL__N_115WrappedObserverENS_14default_deleteIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS_9allocatorISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* readnone, %"class.std::__1::__tree_node"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %30, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIPN3net29SystemDnsConfigChangeNotifier8ObserverENS_10unique_ptrINS2_12_GLOBAL__N_115WrappedObserverENS_14default_deleteIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS_9allocatorISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #7
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIPN3net29SystemDnsConfigChangeNotifier8ObserverENS_10unique_ptrINS2_12_GLOBAL__N_115WrappedObserverENS_14default_deleteIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS_9allocatorISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #7
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.net::(anonymous namespace)::WrappedObserver"*, %"class.net::(anonymous namespace)::WrappedObserver"** %10, align 8
  store %"class.net::(anonymous namespace)::WrappedObserver"* null, %"class.net::(anonymous namespace)::WrappedObserver"** %10, align 8
  %12 = icmp eq %"class.net::(anonymous namespace)::WrappedObserver"* %11, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.net::(anonymous namespace)::WrappedObserver", %"class.net::(anonymous namespace)::WrappedObserver"* %11, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %14) #7
  %15 = getelementptr inbounds %"class.net::(anonymous namespace)::WrappedObserver", %"class.net::(anonymous namespace)::WrappedObserver"* %11, i64 0, i32 0, i32 0
  %16 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %15, align 8
  %17 = icmp eq %"class.base::SequencedTaskRunner"* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %16, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %19, i64 -2
  %25 = bitcast %"class.base::RefCountedThreadSafe"* %24 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %25) #7
  br label %26

26:                                               ; preds = %23, %18, %13
  %27 = bitcast %"class.net::(anonymous namespace)::WrappedObserver"* %11 to i8*
  tail call void @_ZdlPv(i8* %27) #8
  br label %28

28:                                               ; preds = %4, %26
  %29 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %29) #8
  br label %30

30:                                               ; preds = %2, %28
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN3net29SystemDnsConfigChangeNotifier4CoreEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN3net29SystemDnsConfigChangeNotifier4CoreEE10GetWeakPtrEv"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS3_16DnsConfigServiceENS6_14default_deleteIS8_EEEEEJNS_7WeakPtrIS5_EESB_EEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS3_16DnsConfigServiceENS6_14default_deleteIS8_EEEEEJNS_7WeakPtrIS5_EESB_EEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS1_16DnsConfigServiceENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS1_16DnsConfigServiceENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeINS_12__value_typeIPN3net29SystemDnsConfigChangeNotifier8ObserverENS_10unique_ptrINS2_12_GLOBAL__N_115WrappedObserverENS_14default_deleteIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS_9allocatorISC_EEE16__construct_nodeIJRS5_SB_EEENS6_INS_11__tree_nodeISC_PvEENS_22__tree_node_destructorINSH_ISO_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeINS_12__value_typeIPN3net29SystemDnsConfigChangeNotifier8ObserverENS_10unique_ptrINS2_12_GLOBAL__N_115WrappedObserverENS_14default_deleteIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS_9allocatorISC_EEE16__construct_nodeIJRS5_SB_EEENS6_INS_11__tree_nodeISC_PvEENS_22__tree_node_destructorINSH_ISO_EEEEEEDpOT_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4base14WeakPtrFactoryIN3net29SystemDnsConfigChangeNotifier4CoreEE10GetWeakPtrEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4base14WeakPtrFactoryIN3net29SystemDnsConfigChangeNotifier4CoreEE10GetWeakPtrEv"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net29SystemDnsConfigChangeNotifier4CoreEFvvEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net29SystemDnsConfigChangeNotifier4CoreEFvvEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_"}
!21 = distinct !{!21, !22, !"_ZN4base8BindOnceIMN3net29SystemDnsConfigChangeNotifier4CoreEFvvEJNS_7WeakPtrIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8BindOnceIMN3net29SystemDnsConfigChangeNotifier4CoreEFvvEJNS_7WeakPtrIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK4base14WeakPtrFactoryIN3net29SystemDnsConfigChangeNotifier4CoreEE10GetWeakPtrEv: argument 0"}
!25 = distinct !{!25, !"_ZNK4base14WeakPtrFactoryIN3net29SystemDnsConfigChangeNotifier4CoreEE10GetWeakPtrEv"}
!26 = !{!27, !29}
!27 = distinct !{!27, !28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS3_16DnsConfigServiceENS6_14default_deleteIS8_EEEEEJNS_7WeakPtrIS5_EESB_EEEDcOT0_DpOT1_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS3_16DnsConfigServiceENS6_14default_deleteIS8_EEEEEJNS_7WeakPtrIS5_EESB_EEEDcOT0_DpOT1_"}
!29 = distinct !{!29, !30, !"_ZN4base8BindOnceIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS1_16DnsConfigServiceENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8BindOnceIMN3net29SystemDnsConfigChangeNotifier4CoreEFvNSt3__110unique_ptrINS1_16DnsConfigServiceENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK4base14WeakPtrFactoryIN3net29SystemDnsConfigChangeNotifier4CoreEE10GetWeakPtrEv: argument 0"}
!33 = distinct !{!33, !"_ZNK4base14WeakPtrFactoryIN3net29SystemDnsConfigChangeNotifier4CoreEE10GetWeakPtrEv"}
!34 = !{!35, !37}
!35 = distinct !{!35, !36, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net29SystemDnsConfigChangeNotifier4CoreEFvRKNS3_9DnsConfigEEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net29SystemDnsConfigChangeNotifier4CoreEFvRKNS3_9DnsConfigEEJNS_7WeakPtrIS5_EEEEEDcOT0_DpOT1_"}
!37 = distinct !{!37, !38, !"_ZN4base13BindRepeatingIMN3net29SystemDnsConfigChangeNotifier4CoreEFvRKNS1_9DnsConfigEEJNS_7WeakPtrIS3_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!38 = distinct !{!38, !"_ZN4base13BindRepeatingIMN3net29SystemDnsConfigChangeNotifier4CoreEFvRKNS1_9DnsConfigEEJNS_7WeakPtrIS3_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!39 = !{!"branch_weights", i32 1, i32 2000}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK4base14WeakPtrFactoryIN3net12_GLOBAL__N_115WrappedObserverEE10GetWeakPtrEv: argument 0"}
!42 = distinct !{!42, !"_ZNK4base14WeakPtrFactoryIN3net12_GLOBAL__N_115WrappedObserverEE10GetWeakPtrEv"}
!43 = !{!44, !46}
!44 = distinct !{!44, !45, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_115WrappedObserverEFvN4absl8optionalINS3_9DnsConfigEEEEJNS_7WeakPtrIS5_EES9_EEEDcOT0_DpOT1_: argument 0"}
!45 = distinct !{!45, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net12_GLOBAL__N_115WrappedObserverEFvN4absl8optionalINS3_9DnsConfigEEEEJNS_7WeakPtrIS5_EES9_EEEDcOT0_DpOT1_"}
!46 = distinct !{!46, !47, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_115WrappedObserverEFvN4absl8optionalINS1_9DnsConfigEEEEJNS_7WeakPtrIS3_EES7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!47 = distinct !{!47, !"_ZN4base8BindOnceIMN3net12_GLOBAL__N_115WrappedObserverEFvN4absl8optionalINS1_9DnsConfigEEEEJNS_7WeakPtrIS3_EES7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
