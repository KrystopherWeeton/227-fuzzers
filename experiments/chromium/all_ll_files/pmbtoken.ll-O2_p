; ModuleID = '../../third_party/boringssl/src/crypto/trust_token/pmbtoken.c'
source_filename = "../../third_party/boringssl/src/crypto/trust_token/pmbtoken.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.PMBTOKEN_METHOD = type { %struct.ec_group_st*, %union.EC_PRECOMP, %union.EC_PRECOMP, %struct.EC_RAW_POINT, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, i8*)*, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_AFFINE*, i8*)*, i32 (%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64)*, i8 }
%struct.ec_group_st = type { %struct.ec_method_st*, %struct.ec_point_st*, %struct.bignum_st, i32, %struct.bn_mont_ctx_st*, %struct.bignum_st, %union.EC_FELEM, %union.EC_FELEM, i32, i32, %union.EC_FELEM, i32, %struct.bn_mont_ctx_st*, %union.EC_FELEM }
%struct.ec_method_st = type { i32 (%struct.ec_group_st*)*, void (%struct.ec_group_st*)*, i32 (%struct.ec_group_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*)*, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %union.EC_FELEM*, %union.EC_FELEM*)*, i32 (%struct.ec_group_st*, %struct.EC_AFFINE*, %struct.EC_RAW_POINT*, i64)*, void (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_RAW_POINT*, %struct.EC_RAW_POINT*)*, void (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_RAW_POINT*)*, void (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*)*, void (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*)*, void (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*)*, void (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*)*, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*, i64)*, i32 (%struct.ec_group_st*, %union.EC_PRECOMP*, %struct.EC_RAW_POINT*)*, void (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %union.EC_PRECOMP*, %union.EC_SCALAR*, %union.EC_PRECOMP*, %union.EC_SCALAR*, %union.EC_PRECOMP*, %union.EC_SCALAR*)*, void (%struct.ec_group_st*, %union.EC_FELEM*, %union.EC_FELEM*, %union.EC_FELEM*)*, void (%struct.ec_group_st*, %union.EC_FELEM*, %union.EC_FELEM*)*, void (%struct.ec_group_st*, i8*, i64*, %union.EC_FELEM*)*, i32 (%struct.ec_group_st*, %union.EC_FELEM*, i8*, i64)*, void (%struct.ec_group_st*, %union.EC_FELEM*, i64*, i64)*, void (%struct.ec_group_st*, %union.EC_FELEM*, %union.EC_FELEM*, i64*, i64)*, void (%struct.ec_group_st*, %union.EC_SCALAR*, %union.EC_SCALAR*)*, i32 (%struct.ec_group_st*, %union.EC_SCALAR*, %union.EC_SCALAR*)*, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*)* }
%struct.bignum_ctx = type opaque
%struct.EC_AFFINE = type { %union.EC_FELEM, %union.EC_FELEM }
%union.EC_SCALAR = type { [9 x i64] }
%struct.ec_point_st = type { %struct.ec_group_st*, %struct.EC_RAW_POINT }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%struct.bn_mont_ctx_st = type { %struct.bignum_st, %struct.bignum_st, [2 x i64] }
%union.EC_FELEM = type { [9 x i64] }
%union.EC_PRECOMP = type { [31 x %struct.EC_AFFINE] }
%struct.EC_RAW_POINT = type { %union.EC_FELEM, %union.EC_FELEM, %union.EC_FELEM }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%struct.TRUST_TOKEN_CLIENT_KEY = type { %struct.EC_AFFINE, %struct.EC_AFFINE, %struct.EC_AFFINE }
%struct.cbs_st = type { i8*, i64 }
%struct.TRUST_TOKEN_ISSUER_KEY = type { %union.EC_SCALAR, %union.EC_SCALAR, %union.EC_SCALAR, %union.EC_SCALAR, %union.EC_SCALAR, %union.EC_SCALAR, %struct.EC_AFFINE, %union.EC_PRECOMP, %struct.EC_AFFINE, %union.EC_PRECOMP, %struct.EC_AFFINE, %union.EC_PRECOMP }
%struct.stack_st_TRUST_TOKEN_PRETOKEN = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.pmb_pretoken_st = type { [64 x i8], %union.EC_SCALAR, %struct.EC_AFFINE }
%struct.stack_st_TRUST_TOKEN = type opaque
%struct.trust_token_st = type { i8*, i64 }

@pmbtoken_exp1_method = internal global %struct.PMBTOKEN_METHOD zeroinitializer, align 8
@pmbtoken_exp2_method = internal global %struct.PMBTOKEN_METHOD zeroinitializer, align 8
@pmbtoken_exp1_method_once = internal global i32 0, align 4
@pmbtoken_exp1_ok = internal unnamed_addr global i32 0, align 4
@.str = private unnamed_addr constant [62 x i8] c"../../third_party/boringssl/src/crypto/trust_token/pmbtoken.c\00", align 1
@pmbtoken_exp1_init_method_impl.kH = internal constant [97 x i8] c"\04\82\D5h\F59\F6\08\19\A1u\9F\98\B5\10\F5\0B\9D+\E1dM\02v\18\11\F8/\D33%\1F,\B8\F6\F1\9E\93\85y\B3\B7\81\A3\E6#\C3\1C\FF\03\D9@l\EC\E0M\EA\DF\9D\94\D1\87\AB'\F7OS\EA\A3\18r\B9\D1V\A0N\81\AA\EB\1C\22m9\1C^\B1'\FC\87\C3\95\D0\13\B7\0B\5C\C7", align 16
@pmbtoken_exp1_hash_t.kHashTLabel = internal constant [30 x i8] c"PMBTokens Experiment V1 HashT\00", align 16
@pmbtoken_exp1_hash_s.kHashSLabel = internal constant [30 x i8] c"PMBTokens Experiment V1 HashS\00", align 16
@pmbtoken_exp1_hash_c.kHashCLabel = internal constant [30 x i8] c"PMBTokens Experiment V1 HashC\00", align 16
@kDefaultAdditionalData = internal constant [32 x i8] zeroinitializer, align 16
@hash_c_batch.kDLEQBatchLabel = internal constant [11 x i8] c"DLEQ BATCH\00", align 1
@hash_c_dleq.kDLEQ2Label = internal constant [6 x i8] c"DLEQ2\00", align 1
@hash_c_dleqor.kDLEQOR2Label = internal constant [8 x i8] c"DLEQOR2\00", align 1
@pmbtoken_exp2_method_once = internal global i32 0, align 4
@pmbtoken_exp2_ok = internal unnamed_addr global i32 0, align 4
@pmbtoken_exp2_init_method_impl.kH = internal constant [97 x i8] c"\04\BC'$\99\FA\C9\A4to\F9\07\81U\F8\1Fo\DA\09\E7\8C]\9EN\14|S\14\BC~)W\92\17\94n\D2\DF\A51\1BN\B7\FC\93\E3n\14\1FO\14\F3\E5Ga\1C,r%\F0JE#-W\93\0E\B2U\B8W%L\1E\DB\FDXp\17\9A\BB\9E^\93\9E\92\D3\E8%b\BFY\B2\D2=q\FF", align 16
@pmbtoken_exp2_hash_t.kHashTLabel = internal constant [30 x i8] c"PMBTokens Experiment V2 HashT\00", align 16
@pmbtoken_exp2_hash_s.kHashSLabel = internal constant [30 x i8] c"PMBTokens Experiment V2 HashS\00", align 16
@pmbtoken_exp2_hash_c.kHashCLabel = internal constant [30 x i8] c"PMBTokens Experiment V2 HashC\00", align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pmbtoken_exp1_generate_key(%struct.cbb_st*, %struct.cbb_st*) local_unnamed_addr #0 {
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp1_method_once, void ()* nonnull @pmbtoken_exp1_init_method_impl) #4
  %3 = load i32, i32* @pmbtoken_exp1_ok, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1171) #4
  br label %8

6:                                                ; preds = %2
  %7 = tail call fastcc i32 @pmbtoken_generate_key(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp1_method, %struct.cbb_st* %0, %struct.cbb_st* %1)
  br label %8

8:                                                ; preds = %5, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %5 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @pmbtoken_generate_key(%struct.PMBTOKEN_METHOD*, %struct.cbb_st*, %struct.cbb_st*) unnamed_addr #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.cbb_st, align 8
  %11 = alloca %struct.cbb_st, align 8
  %12 = alloca %struct.cbb_st, align 8
  %13 = alloca [3 x %struct.EC_RAW_POINT], align 16
  %14 = alloca %union.EC_SCALAR, align 8
  %15 = alloca %union.EC_SCALAR, align 8
  %16 = alloca %union.EC_SCALAR, align 8
  %17 = alloca %union.EC_SCALAR, align 8
  %18 = alloca %union.EC_SCALAR, align 8
  %19 = alloca %union.EC_SCALAR, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8*, align 8
  %22 = alloca [3 x %struct.EC_AFFINE], align 16
  %23 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 0
  %24 = load %struct.ec_group_st*, %struct.ec_group_st** %23, align 8
  %25 = bitcast [3 x %struct.EC_RAW_POINT]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 648, i8* nonnull %25) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 -86, i64 648, i1 false)
  %26 = bitcast %union.EC_SCALAR* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %26) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 72, i1 false)
  %27 = bitcast %union.EC_SCALAR* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %27) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 72, i1 false)
  %28 = bitcast %union.EC_SCALAR* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %28) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 72, i1 false)
  %29 = bitcast %union.EC_SCALAR* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %29) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 72, i1 false)
  %30 = bitcast %union.EC_SCALAR* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %30) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 72, i1 false)
  %31 = bitcast %union.EC_SCALAR* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 72, i1 false)
  %32 = getelementptr inbounds [3 x %struct.EC_RAW_POINT], [3 x %struct.EC_RAW_POINT]* %13, i64 0, i64 0
  %33 = call i32 @ec_random_nonzero_scalar(%struct.ec_group_st* %24, %union.EC_SCALAR* nonnull %14, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @kDefaultAdditionalData, i64 0, i64 0)) #4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %71, label %35

35:                                               ; preds = %3
  %36 = load %struct.ec_group_st*, %struct.ec_group_st** %23, align 8
  %37 = call i32 @ec_random_nonzero_scalar(%struct.ec_group_st* %36, %union.EC_SCALAR* nonnull %15, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @kDefaultAdditionalData, i64 0, i64 0)) #4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %71, label %39

39:                                               ; preds = %35
  %40 = load %struct.ec_group_st*, %struct.ec_group_st** %23, align 8
  %41 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 1
  %42 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 2
  %43 = call i32 @ec_point_mul_scalar_precomp(%struct.ec_group_st* %40, %struct.EC_RAW_POINT* nonnull %32, %union.EC_PRECOMP* %41, %union.EC_SCALAR* nonnull %14, %union.EC_PRECOMP* %42, %union.EC_SCALAR* nonnull %15, %union.EC_PRECOMP* null, %union.EC_SCALAR* null) #4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %71, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds [3 x %struct.EC_RAW_POINT], [3 x %struct.EC_RAW_POINT]* %13, i64 0, i64 1
  %47 = load %struct.ec_group_st*, %struct.ec_group_st** %23, align 8
  %48 = call i32 @ec_random_nonzero_scalar(%struct.ec_group_st* %47, %union.EC_SCALAR* nonnull %16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @kDefaultAdditionalData, i64 0, i64 0)) #4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %71, label %50

50:                                               ; preds = %45
  %51 = load %struct.ec_group_st*, %struct.ec_group_st** %23, align 8
  %52 = call i32 @ec_random_nonzero_scalar(%struct.ec_group_st* %51, %union.EC_SCALAR* nonnull %17, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @kDefaultAdditionalData, i64 0, i64 0)) #4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %71, label %54

54:                                               ; preds = %50
  %55 = load %struct.ec_group_st*, %struct.ec_group_st** %23, align 8
  %56 = call i32 @ec_point_mul_scalar_precomp(%struct.ec_group_st* %55, %struct.EC_RAW_POINT* %46, %union.EC_PRECOMP* %41, %union.EC_SCALAR* nonnull %16, %union.EC_PRECOMP* %42, %union.EC_SCALAR* nonnull %17, %union.EC_PRECOMP* null, %union.EC_SCALAR* null) #4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds [3 x %struct.EC_RAW_POINT], [3 x %struct.EC_RAW_POINT]* %13, i64 0, i64 2
  %60 = load %struct.ec_group_st*, %struct.ec_group_st** %23, align 8
  %61 = call i32 @ec_random_nonzero_scalar(%struct.ec_group_st* %60, %union.EC_SCALAR* nonnull %18, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @kDefaultAdditionalData, i64 0, i64 0)) #4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = load %struct.ec_group_st*, %struct.ec_group_st** %23, align 8
  %65 = call i32 @ec_random_nonzero_scalar(%struct.ec_group_st* %64, %union.EC_SCALAR* nonnull %19, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @kDefaultAdditionalData, i64 0, i64 0)) #4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %63
  %68 = load %struct.ec_group_st*, %struct.ec_group_st** %23, align 8
  %69 = call i32 @ec_point_mul_scalar_precomp(%struct.ec_group_st* %68, %struct.EC_RAW_POINT* %59, %union.EC_PRECOMP* %41, %union.EC_SCALAR* nonnull %18, %union.EC_PRECOMP* %42, %union.EC_SCALAR* nonnull %19, %union.EC_PRECOMP* null, %union.EC_SCALAR* null) #4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %67, %63, %58, %54, %50, %45, %39, %35, %3
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 99) #4
  call void @ERR_put_error(i32 32, i32 0, i32 100, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 176) #4
  br label %214

72:                                               ; preds = %67
  %73 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #4
  store i64 -6148914691236517206, i64* %20, align 8
  %74 = getelementptr inbounds %struct.ec_group_st, %struct.ec_group_st* %24, i64 0, i32 2
  %75 = call i32 @BN_num_bytes(%struct.bignum_st* %74) #4
  %76 = zext i32 %75 to i64
  store i64 %76, i64* %20, align 8
  %77 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %78 = call i32 @CBB_add_space(%struct.cbb_st* %1, i8** nonnull %21, i64 %76) #4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %72
  %81 = load i8*, i8** %21, align 8
  call void @ec_scalar_to_bytes(%struct.ec_group_st* %24, i8* %81, i64* nonnull %20, %union.EC_SCALAR* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %82 = load i64, i64* %20, align 8
  %83 = call i32 @CBB_add_space(%struct.cbb_st* %1, i8** nonnull %21, i64 %82) #4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %216

85:                                               ; preds = %231, %226, %221, %216, %80, %72
  call void @ERR_put_error(i32 32, i32 0, i32 101, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 185) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #4
  br label %212

86:                                               ; preds = %236
  %87 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 7
  %88 = load i8, i8* %87, align 8
  %89 = and i8 %88, 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %112, label %91

91:                                               ; preds = %86
  %92 = bitcast %struct.cbb_st* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %92) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 32, i1 false) #4
  %93 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %2, %struct.cbb_st* nonnull %12) #4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %111, label %95

95:                                               ; preds = %91
  %96 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %24, %struct.EC_AFFINE* nonnull %239, i32 4, i8* null, i64 0) #4
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %111, label %98

98:                                               ; preds = %95
  %99 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %100 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %12, i8** nonnull %9, i64 %96) #4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #4
  br label %111

103:                                              ; preds = %98
  %104 = load i8*, i8** %9, align 8
  %105 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %24, %struct.EC_AFFINE* nonnull %239, i32 4, i8* %104, i64 %96) #4
  %106 = icmp eq i64 %105, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #4
  br i1 %106, label %107, label %111

107:                                              ; preds = %103
  %108 = call i32 @CBB_flush(%struct.cbb_st* %2) #4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %107
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #4
  br label %127

111:                                              ; preds = %103, %95, %102, %107, %91
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #4
  br label %209

112:                                              ; preds = %86
  %113 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %24, %struct.EC_AFFINE* nonnull %239, i32 4, i8* null, i64 0) #4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %209, label %115

115:                                              ; preds = %112
  %116 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %117 = call i32 @CBB_add_space(%struct.cbb_st* %2, i8** nonnull %8, i64 %113) #4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #4
  br label %209

120:                                              ; preds = %115
  %121 = load i8*, i8** %8, align 8
  %122 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %24, %struct.EC_AFFINE* nonnull %239, i32 4, i8* %121, i64 %113) #4
  %123 = icmp eq i64 %122, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #4
  br i1 %123, label %124, label %209

124:                                              ; preds = %120
  %125 = call i32 @CBB_flush(%struct.cbb_st* %2) #4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %209, label %127

127:                                              ; preds = %124, %110
  %128 = getelementptr inbounds [3 x %struct.EC_AFFINE], [3 x %struct.EC_AFFINE]* %22, i64 0, i64 1
  %129 = load i8, i8* %87, align 8
  %130 = and i8 %129, 1
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %153, label %132

132:                                              ; preds = %127
  %133 = bitcast %struct.cbb_st* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %133) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 32, i1 false) #4
  %134 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %2, %struct.cbb_st* nonnull %11) #4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %152, label %136

136:                                              ; preds = %132
  %137 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %24, %struct.EC_AFFINE* %128, i32 4, i8* null, i64 0) #4
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %152, label %139

139:                                              ; preds = %136
  %140 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %141 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %11, i8** nonnull %7, i64 %137) #4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #4
  br label %152

144:                                              ; preds = %139
  %145 = load i8*, i8** %7, align 8
  %146 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %24, %struct.EC_AFFINE* %128, i32 4, i8* %145, i64 %137) #4
  %147 = icmp eq i64 %146, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #4
  br i1 %147, label %148, label %152

148:                                              ; preds = %144
  %149 = call i32 @CBB_flush(%struct.cbb_st* %2) #4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %152, label %151

151:                                              ; preds = %148
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %133) #4
  br label %168

152:                                              ; preds = %144, %136, %143, %148, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %133) #4
  br label %209

153:                                              ; preds = %127
  %154 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %24, %struct.EC_AFFINE* %128, i32 4, i8* null, i64 0) #4
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %209, label %156

156:                                              ; preds = %153
  %157 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %158 = call i32 @CBB_add_space(%struct.cbb_st* %2, i8** nonnull %6, i64 %154) #4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %156
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #4
  br label %209

161:                                              ; preds = %156
  %162 = load i8*, i8** %6, align 8
  %163 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %24, %struct.EC_AFFINE* %128, i32 4, i8* %162, i64 %154) #4
  %164 = icmp eq i64 %163, %154
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #4
  br i1 %164, label %165, label %209

165:                                              ; preds = %161
  %166 = call i32 @CBB_flush(%struct.cbb_st* %2) #4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %209, label %168

168:                                              ; preds = %165, %151
  %169 = getelementptr inbounds [3 x %struct.EC_AFFINE], [3 x %struct.EC_AFFINE]* %22, i64 0, i64 2
  %170 = load i8, i8* %87, align 8
  %171 = and i8 %170, 1
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %194, label %173

173:                                              ; preds = %168
  %174 = bitcast %struct.cbb_st* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %174) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 32, i1 false) #4
  %175 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %2, %struct.cbb_st* nonnull %10) #4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %24, %struct.EC_AFFINE* %169, i32 4, i8* null, i64 0) #4
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %193, label %180

180:                                              ; preds = %177
  %181 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %182 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %10, i8** nonnull %5, i64 %178) #4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #4
  br label %193

185:                                              ; preds = %180
  %186 = load i8*, i8** %5, align 8
  %187 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %24, %struct.EC_AFFINE* %169, i32 4, i8* %186, i64 %178) #4
  %188 = icmp eq i64 %187, %178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #4
  br i1 %188, label %189, label %193

189:                                              ; preds = %185
  %190 = call i32 @CBB_flush(%struct.cbb_st* %2) #4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %193, label %192

192:                                              ; preds = %189
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %174) #4
  br label %210

193:                                              ; preds = %185, %177, %184, %189, %173
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %174) #4
  br label %209

194:                                              ; preds = %168
  %195 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %24, %struct.EC_AFFINE* %169, i32 4, i8* null, i64 0) #4
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %209, label %197

197:                                              ; preds = %194
  %198 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %199 = call i32 @CBB_add_space(%struct.cbb_st* %2, i8** nonnull %4, i64 %195) #4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #4
  br label %209

202:                                              ; preds = %197
  %203 = load i8*, i8** %4, align 8
  %204 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %24, %struct.EC_AFFINE* %169, i32 4, i8* %203, i64 %195) #4
  %205 = icmp eq i64 %204, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #4
  br i1 %205, label %206, label %209

206:                                              ; preds = %202
  %207 = call i32 @CBB_flush(%struct.cbb_st* %2) #4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %120, %161, %202, %194, %201, %206, %193, %153, %160, %165, %152, %112, %119, %124, %111
  call void @ERR_put_error(i32 32, i32 0, i32 101, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 202) #4
  br label %210

210:                                              ; preds = %206, %192, %236, %209
  %211 = phi i32 [ 0, %209 ], [ 0, %236 ], [ 1, %192 ], [ 1, %206 ]
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %238) #4
  br label %212

212:                                              ; preds = %85, %210
  %213 = phi i32 [ %211, %210 ], [ 0, %85 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #4
  br label %214

214:                                              ; preds = %212, %71
  %215 = phi i32 [ %213, %212 ], [ 0, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %30) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %29) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %28) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %27) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %26) #4
  call void @llvm.lifetime.end.p0i8(i64 648, i8* nonnull %25) #4
  ret i32 %215

216:                                              ; preds = %80
  %217 = load i8*, i8** %21, align 8
  call void @ec_scalar_to_bytes(%struct.ec_group_st* %24, i8* %217, i64* nonnull %20, %union.EC_SCALAR* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %218 = load i64, i64* %20, align 8
  %219 = call i32 @CBB_add_space(%struct.cbb_st* %1, i8** nonnull %21, i64 %218) #4
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %85, label %221

221:                                              ; preds = %216
  %222 = load i8*, i8** %21, align 8
  call void @ec_scalar_to_bytes(%struct.ec_group_st* %24, i8* %222, i64* nonnull %20, %union.EC_SCALAR* nonnull %16) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %223 = load i64, i64* %20, align 8
  %224 = call i32 @CBB_add_space(%struct.cbb_st* %1, i8** nonnull %21, i64 %223) #4
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %85, label %226

226:                                              ; preds = %221
  %227 = load i8*, i8** %21, align 8
  call void @ec_scalar_to_bytes(%struct.ec_group_st* %24, i8* %227, i64* nonnull %20, %union.EC_SCALAR* nonnull %17) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %228 = load i64, i64* %20, align 8
  %229 = call i32 @CBB_add_space(%struct.cbb_st* %1, i8** nonnull %21, i64 %228) #4
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %85, label %231

231:                                              ; preds = %226
  %232 = load i8*, i8** %21, align 8
  call void @ec_scalar_to_bytes(%struct.ec_group_st* %24, i8* %232, i64* nonnull %20, %union.EC_SCALAR* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %233 = load i64, i64* %20, align 8
  %234 = call i32 @CBB_add_space(%struct.cbb_st* %1, i8** nonnull %21, i64 %233) #4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %85, label %236

236:                                              ; preds = %231
  %237 = load i8*, i8** %21, align 8
  call void @ec_scalar_to_bytes(%struct.ec_group_st* %24, i8* %237, i64* nonnull %20, %union.EC_SCALAR* nonnull %19) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #4
  %238 = bitcast [3 x %struct.EC_AFFINE]* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %238) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %238, i8 -86, i64 432, i1 false)
  %239 = getelementptr inbounds [3 x %struct.EC_AFFINE], [3 x %struct.EC_AFFINE]* %22, i64 0, i64 0
  %240 = call i32 @ec_jacobian_to_affine_batch(%struct.ec_group_st* %24, %struct.EC_AFFINE* nonnull %239, %struct.EC_RAW_POINT* nonnull %32, i64 3) #4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %210, label %86
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pmbtoken_exp1_client_key_from_bytes(%struct.TRUST_TOKEN_CLIENT_KEY*, i8*, i64) local_unnamed_addr #0 {
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp1_method_once, void ()* nonnull @pmbtoken_exp1_init_method_impl) #4
  %4 = load i32, i32* @pmbtoken_exp1_ok, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1171) #4
  br label %9

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @pmbtoken_client_key_from_bytes(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp1_method, %struct.TRUST_TOKEN_CLIENT_KEY* %0, i8* %1, i64 %2)
  br label %9

9:                                                ; preds = %6, %7
  %10 = phi i32 [ %8, %7 ], [ 0, %6 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @pmbtoken_client_key_from_bytes(%struct.PMBTOKEN_METHOD* nocapture readonly, %struct.TRUST_TOKEN_CLIENT_KEY*, i8*, i64) unnamed_addr #0 {
  %5 = alloca %struct.cbs_st, align 8
  %6 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #4
  %7 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @CBS_init(%struct.cbs_st* nonnull %5, i8* %2, i64 %3) #4
  %8 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 0
  %9 = load %struct.ec_group_st*, %struct.ec_group_st** %8, align 8
  %10 = getelementptr inbounds %struct.TRUST_TOKEN_CLIENT_KEY, %struct.TRUST_TOKEN_CLIENT_KEY* %1, i64 0, i32 0
  %11 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 7
  %12 = load i8, i8* %11, align 8
  %13 = shl i8 %12, 7
  %14 = ashr exact i8 %13, 7
  %15 = sext i8 %14 to i32
  %16 = call fastcc i32 @cbs_get_prefixed_point(%struct.cbs_st* nonnull %5, %struct.ec_group_st* %9, %struct.EC_AFFINE* %10, i32 %15)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %39, label %18

18:                                               ; preds = %4
  %19 = load %struct.ec_group_st*, %struct.ec_group_st** %8, align 8
  %20 = getelementptr inbounds %struct.TRUST_TOKEN_CLIENT_KEY, %struct.TRUST_TOKEN_CLIENT_KEY* %1, i64 0, i32 1
  %21 = load i8, i8* %11, align 8
  %22 = shl i8 %21, 7
  %23 = ashr exact i8 %22, 7
  %24 = sext i8 %23 to i32
  %25 = call fastcc i32 @cbs_get_prefixed_point(%struct.cbs_st* nonnull %5, %struct.ec_group_st* %19, %struct.EC_AFFINE* %20, i32 %24)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %18
  %28 = load %struct.ec_group_st*, %struct.ec_group_st** %8, align 8
  %29 = getelementptr inbounds %struct.TRUST_TOKEN_CLIENT_KEY, %struct.TRUST_TOKEN_CLIENT_KEY* %1, i64 0, i32 2
  %30 = load i8, i8* %11, align 8
  %31 = shl i8 %30, 7
  %32 = ashr exact i8 %31, 7
  %33 = sext i8 %32 to i32
  %34 = call fastcc i32 @cbs_get_prefixed_point(%struct.cbs_st* nonnull %5, %struct.ec_group_st* %28, %struct.EC_AFFINE* %29, i32 %33)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %27
  %37 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #4
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %36, %27, %18, %4
  call void @ERR_put_error(i32 32, i32 0, i32 105, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 221) #4
  br label %40

40:                                               ; preds = %36, %39
  %41 = phi i32 [ 0, %39 ], [ 1, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #4
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pmbtoken_exp1_issuer_key_from_bytes(%struct.TRUST_TOKEN_ISSUER_KEY*, i8*, i64) local_unnamed_addr #0 {
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp1_method_once, void ()* nonnull @pmbtoken_exp1_init_method_impl) #4
  %4 = load i32, i32* @pmbtoken_exp1_ok, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1171) #4
  br label %9

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @pmbtoken_issuer_key_from_bytes(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp1_method, %struct.TRUST_TOKEN_ISSUER_KEY* %0, i8* %1, i64 %2)
  br label %9

9:                                                ; preds = %6, %7
  %10 = phi i32 [ %8, %7 ], [ 0, %6 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @pmbtoken_issuer_key_from_bytes(%struct.PMBTOKEN_METHOD*, %struct.TRUST_TOKEN_ISSUER_KEY*, i8*, i64) unnamed_addr #0 {
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca [3 x %struct.EC_RAW_POINT], align 16
  %8 = alloca [3 x %struct.EC_AFFINE], align 16
  %9 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 0
  %10 = load %struct.ec_group_st*, %struct.ec_group_st** %9, align 8
  %11 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #4
  %12 = bitcast %struct.cbs_st* %6 to i8*
  %13 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #4
  %14 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  call void @CBS_init(%struct.cbs_st* nonnull %5, i8* %2, i64 %3) #4
  %15 = getelementptr inbounds %struct.ec_group_st, %struct.ec_group_st* %10, i64 0, i32 2
  %16 = call i32 @BN_num_bytes(%struct.bignum_st* %15) #4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 0
  %19 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 1
  %20 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 2
  %21 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 3
  %22 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 4
  %23 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 5
  %24 = call i32 @CBS_get_bytes(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %6, i64 %17) #4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %34, label %29

26:                                               ; preds = %29
  %27 = call i32 @CBS_get_bytes(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %6, i64 %17) #4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %34, label %74

29:                                               ; preds = %4
  %30 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #4
  %31 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #4
  %32 = call i32 @ec_scalar_from_bytes(%struct.ec_group_st* %10, %union.EC_SCALAR* %18, i8* %30, i64 %31) #4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %26

34:                                               ; preds = %106, %103, %98, %95, %90, %87, %82, %79, %74, %26, %29, %4
  call void @ERR_put_error(i32 32, i32 0, i32 105, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 241) #4
  br label %72

35:                                               ; preds = %111
  %36 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 7
  %37 = call i32 @ec_init_precomp(%struct.ec_group_st* %10, %union.EC_PRECOMP* %36, %struct.EC_RAW_POINT* nonnull %114) #4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %70, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds [3 x %struct.EC_RAW_POINT], [3 x %struct.EC_RAW_POINT]* %7, i64 0, i64 1
  %41 = call i32 @ec_point_mul_scalar_precomp(%struct.ec_group_st* %10, %struct.EC_RAW_POINT* %40, %union.EC_PRECOMP* %115, %union.EC_SCALAR* %20, %union.EC_PRECOMP* %116, %union.EC_SCALAR* %21, %union.EC_PRECOMP* null, %union.EC_SCALAR* null) #4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %70, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 9
  %45 = call i32 @ec_init_precomp(%struct.ec_group_st* %10, %union.EC_PRECOMP* %44, %struct.EC_RAW_POINT* %40) #4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %70, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds [3 x %struct.EC_RAW_POINT], [3 x %struct.EC_RAW_POINT]* %7, i64 0, i64 2
  %49 = call i32 @ec_point_mul_scalar_precomp(%struct.ec_group_st* %10, %struct.EC_RAW_POINT* %48, %union.EC_PRECOMP* %115, %union.EC_SCALAR* %22, %union.EC_PRECOMP* %116, %union.EC_SCALAR* %23, %union.EC_PRECOMP* null, %union.EC_SCALAR* null) #4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %70, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 11
  %53 = call i32 @ec_init_precomp(%struct.ec_group_st* %10, %union.EC_PRECOMP* %52, %struct.EC_RAW_POINT* %48) #4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %70, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds [3 x %struct.EC_AFFINE], [3 x %struct.EC_AFFINE]* %8, i64 0, i64 0
  %57 = call i32 @ec_jacobian_to_affine_batch(%struct.ec_group_st* %10, %struct.EC_AFFINE* nonnull %56, %struct.EC_RAW_POINT* nonnull %114, i64 3) #4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 6
  %61 = bitcast %struct.EC_AFFINE* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* nonnull align 16 %113, i64 144, i1 false)
  %62 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 8
  %63 = getelementptr inbounds [3 x %struct.EC_AFFINE], [3 x %struct.EC_AFFINE]* %8, i64 0, i64 1
  %64 = bitcast %struct.EC_AFFINE* %62 to i8*
  %65 = bitcast %struct.EC_AFFINE* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 16 %65, i64 144, i1 false)
  %66 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 10
  %67 = getelementptr inbounds [3 x %struct.EC_AFFINE], [3 x %struct.EC_AFFINE]* %8, i64 0, i64 2
  %68 = bitcast %struct.EC_AFFINE* %66 to i8*
  %69 = bitcast %struct.EC_AFFINE* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 16 %69, i64 144, i1 false)
  br label %70

70:                                               ; preds = %111, %35, %39, %43, %47, %51, %55, %59
  %71 = phi i32 [ 1, %59 ], [ 0, %55 ], [ 0, %51 ], [ 0, %47 ], [ 0, %43 ], [ 0, %39 ], [ 0, %35 ], [ 0, %111 ]
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %113) #4
  call void @llvm.lifetime.end.p0i8(i64 648, i8* nonnull %112) #4
  br label %72

72:                                               ; preds = %34, %70
  %73 = phi i32 [ %71, %70 ], [ 0, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #4
  ret i32 %73

74:                                               ; preds = %26
  %75 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #4
  %76 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #4
  %77 = call i32 @ec_scalar_from_bytes(%struct.ec_group_st* %10, %union.EC_SCALAR* %19, i8* %75, i64 %76) #4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %34, label %79

79:                                               ; preds = %74
  %80 = call i32 @CBS_get_bytes(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %6, i64 %17) #4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %34, label %82

82:                                               ; preds = %79
  %83 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #4
  %84 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #4
  %85 = call i32 @ec_scalar_from_bytes(%struct.ec_group_st* %10, %union.EC_SCALAR* %20, i8* %83, i64 %84) #4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %34, label %87

87:                                               ; preds = %82
  %88 = call i32 @CBS_get_bytes(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %6, i64 %17) #4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %34, label %90

90:                                               ; preds = %87
  %91 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #4
  %92 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #4
  %93 = call i32 @ec_scalar_from_bytes(%struct.ec_group_st* %10, %union.EC_SCALAR* %21, i8* %91, i64 %92) #4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %34, label %95

95:                                               ; preds = %90
  %96 = call i32 @CBS_get_bytes(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %6, i64 %17) #4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %34, label %98

98:                                               ; preds = %95
  %99 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #4
  %100 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #4
  %101 = call i32 @ec_scalar_from_bytes(%struct.ec_group_st* %10, %union.EC_SCALAR* %22, i8* %99, i64 %100) #4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %34, label %103

103:                                              ; preds = %98
  %104 = call i32 @CBS_get_bytes(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %6, i64 %17) #4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %34, label %106

106:                                              ; preds = %103
  %107 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #4
  %108 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #4
  %109 = call i32 @ec_scalar_from_bytes(%struct.ec_group_st* %10, %union.EC_SCALAR* %23, i8* %107, i64 %108) #4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %34, label %111

111:                                              ; preds = %106
  %112 = bitcast [3 x %struct.EC_RAW_POINT]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 648, i8* nonnull %112) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %112, i8 -86, i64 648, i1 false)
  %113 = bitcast [3 x %struct.EC_AFFINE]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %113) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %113, i8 -86, i64 432, i1 false)
  %114 = getelementptr inbounds [3 x %struct.EC_RAW_POINT], [3 x %struct.EC_RAW_POINT]* %7, i64 0, i64 0
  %115 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 1
  %116 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 2
  %117 = call i32 @ec_point_mul_scalar_precomp(%struct.ec_group_st* %10, %struct.EC_RAW_POINT* nonnull %114, %union.EC_PRECOMP* %115, %union.EC_SCALAR* %18, %union.EC_PRECOMP* %116, %union.EC_SCALAR* %19, %union.EC_PRECOMP* null, %union.EC_SCALAR* null) #4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %70, label %35
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_TRUST_TOKEN_PRETOKEN* @pmbtoken_exp1_blind(%struct.cbb_st*, i64) local_unnamed_addr #0 {
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp1_method_once, void ()* nonnull @pmbtoken_exp1_init_method_impl) #4
  %3 = load i32, i32* @pmbtoken_exp1_ok, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1171) #4
  br label %8

6:                                                ; preds = %2
  %7 = tail call fastcc %struct.stack_st_TRUST_TOKEN_PRETOKEN* @pmbtoken_blind(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp1_method, %struct.cbb_st* %0, i64 %1)
  br label %8

8:                                                ; preds = %5, %6
  %9 = phi %struct.stack_st_TRUST_TOKEN_PRETOKEN* [ %7, %6 ], [ null, %5 ]
  ret %struct.stack_st_TRUST_TOKEN_PRETOKEN* %9
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.stack_st_TRUST_TOKEN_PRETOKEN* @pmbtoken_blind(%struct.PMBTOKEN_METHOD* nocapture readonly, %struct.cbb_st*, i64) unnamed_addr #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.cbb_st, align 8
  %7 = alloca %union.EC_SCALAR, align 8
  %8 = alloca %struct.EC_RAW_POINT, align 8
  %9 = alloca %struct.EC_RAW_POINT, align 8
  %10 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 0
  %11 = load %struct.ec_group_st*, %struct.ec_group_st** %10, align 8
  %12 = tail call %struct.stack_st* @sk_new_null() #4
  %13 = bitcast %struct.stack_st* %12 to %struct.stack_st_TRUST_TOKEN_PRETOKEN*
  %14 = icmp eq %struct.stack_st* %12, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %3
  %16 = icmp eq i64 %2, 0
  br i1 %16, label %100, label %17

17:                                               ; preds = %15
  %18 = bitcast %union.EC_SCALAR* %7 to i8*
  %19 = bitcast %struct.EC_RAW_POINT* %8 to i8*
  %20 = bitcast %struct.EC_RAW_POINT* %9 to i8*
  %21 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 4
  %22 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 7
  %23 = bitcast %struct.cbb_st* %6 to i8*
  %24 = bitcast i8** %5 to i8*
  %25 = bitcast i8** %4 to i8*
  br label %27

26:                                               ; preds = %3
  tail call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 273) #4
  br label %99

27:                                               ; preds = %93, %17
  %28 = phi i64 [ 0, %17 ], [ %94, %93 ]
  %29 = call i8* @OPENSSL_malloc(i64 280) #4
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = call i64 @sk_push(%struct.stack_st* nonnull %12, i8* nonnull %29) #4
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %31, %27
  %35 = bitcast i8* %29 to %struct.pmb_pretoken_st*
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 282) #4
  call void @TRUST_TOKEN_PRETOKEN_free(%struct.pmb_pretoken_st* %35) #4
  br label %99

36:                                               ; preds = %31
  %37 = call i32 @RAND_bytes(i8* nonnull %29, i64 64) #4
  %38 = getelementptr inbounds i8, i8* %29, i64 64
  %39 = bitcast i8* %38 to %union.EC_SCALAR*
  %40 = call i32 @ec_random_nonzero_scalar(%struct.ec_group_st* %11, %union.EC_SCALAR* %39, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @kDefaultAdditionalData, i64 0, i64 0)) #4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %36
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 292) #4
  br label %99

43:                                               ; preds = %36
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %18) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 72, i1 false)
  call void @ec_scalar_inv0_montgomery(%struct.ec_group_st* %11, %union.EC_SCALAR* nonnull %7, %union.EC_SCALAR* %39) #4
  call void @ec_scalar_from_montgomery(%struct.ec_group_st* %11, %union.EC_SCALAR* %39, %union.EC_SCALAR* %39) #4
  call void @ec_scalar_from_montgomery(%struct.ec_group_st* %11, %union.EC_SCALAR* nonnull %7, %union.EC_SCALAR* nonnull %7) #4
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %19) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 216, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %20) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 216, i1 false)
  %44 = load i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, i8*)*, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, i8*)** %21, align 8
  %45 = call i32 %44(%struct.ec_group_st* %11, %struct.EC_RAW_POINT* nonnull %8, i8* nonnull %29) #4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %98, label %47

47:                                               ; preds = %43
  %48 = call i32 @ec_point_mul_scalar(%struct.ec_group_st* %11, %struct.EC_RAW_POINT* nonnull %9, %struct.EC_RAW_POINT* nonnull %8, %union.EC_SCALAR* nonnull %7) #4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %97, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds i8, i8* %29, i64 136
  %52 = bitcast i8* %51 to %struct.EC_AFFINE*
  %53 = call i32 @ec_jacobian_to_affine(%struct.ec_group_st* %11, %struct.EC_AFFINE* %52, %struct.EC_RAW_POINT* nonnull %9) #4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %96, label %55

55:                                               ; preds = %50
  %56 = load i8, i8* %22, align 8
  %57 = and i8 %56, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false) #4
  %60 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* nonnull %6) #4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %77, label %62

62:                                               ; preds = %59
  %63 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %11, %struct.EC_AFFINE* %52, i32 4, i8* null, i64 0) #4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %66 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %6, i8** nonnull %5, i64 %63) #4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #4
  br label %77

69:                                               ; preds = %65
  %70 = load i8*, i8** %5, align 8
  %71 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %11, %struct.EC_AFFINE* %52, i32 4, i8* %70, i64 %63) #4
  %72 = icmp eq i64 %71, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #4
  br i1 %72, label %73, label %77

73:                                               ; preds = %69
  %74 = call i32 @CBB_flush(%struct.cbb_st* %1) #4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #4
  br label %93

77:                                               ; preds = %69, %62, %73, %59, %68
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #4
  br label %92

78:                                               ; preds = %55
  %79 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %11, %struct.EC_AFFINE* %52, i32 4, i8* null, i64 0) #4
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %92, label %81

81:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %82 = call i32 @CBB_add_space(%struct.cbb_st* %1, i8** nonnull %4, i64 %79) #4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4
  br label %92

85:                                               ; preds = %81
  %86 = load i8*, i8** %4, align 8
  %87 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %11, %struct.EC_AFFINE* %52, i32 4, i8* %86, i64 %79) #4
  %88 = icmp eq i64 %87, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4
  br i1 %88, label %89, label %92

89:                                               ; preds = %85
  %90 = call i32 @CBB_flush(%struct.cbb_st* %1) #4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %85, %78, %89, %77, %84
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %20) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %19) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #4
  br label %99

93:                                               ; preds = %89, %76
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %20) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %19) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #4
  %94 = add nuw i64 %28, 1
  %95 = icmp eq i64 %94, %2
  br i1 %95, label %100, label %27

96:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %20) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %19) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #4
  br label %99

97:                                               ; preds = %47
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %20) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %19) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #4
  br label %99

98:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %20) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %19) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #4
  br label %99

99:                                               ; preds = %92, %98, %97, %96, %34, %42, %26
  call void @sk_pop_free_ex(%struct.stack_st* %12, void (void (i8*)*, i8*)* nonnull @sk_TRUST_TOKEN_PRETOKEN_call_free_func, void (i8*)* bitcast (void (%struct.pmb_pretoken_st*)* @TRUST_TOKEN_PRETOKEN_free to void (i8*)*)) #4
  br label %100

100:                                              ; preds = %93, %15, %99
  %101 = phi %struct.stack_st_TRUST_TOKEN_PRETOKEN* [ null, %99 ], [ %13, %15 ], [ %13, %93 ]
  ret %struct.stack_st_TRUST_TOKEN_PRETOKEN* %101
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pmbtoken_exp1_sign(%struct.TRUST_TOKEN_ISSUER_KEY*, %struct.cbb_st*, %struct.cbs_st*, i64, i64, i8 zeroext) local_unnamed_addr #0 {
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp1_method_once, void ()* nonnull @pmbtoken_exp1_init_method_impl) #4
  %7 = load i32, i32* @pmbtoken_exp1_ok, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1171) #4
  br label %12

10:                                               ; preds = %6
  %11 = tail call fastcc i32 @pmbtoken_sign(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp1_method, %struct.TRUST_TOKEN_ISSUER_KEY* %0, %struct.cbb_st* %1, %struct.cbs_st* %2, i64 %3, i64 %4, i8 zeroext %5)
  br label %12

12:                                               ; preds = %9, %10
  %13 = phi i32 [ %11, %10 ], [ 0, %9 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @pmbtoken_sign(%struct.PMBTOKEN_METHOD*, %struct.TRUST_TOKEN_ISSUER_KEY*, %struct.cbb_st*, %struct.cbs_st*, i64, i64, i8 zeroext) unnamed_addr #0 {
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i64, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i64, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i64, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  %30 = alloca [10 x %struct.EC_RAW_POINT], align 16
  %31 = alloca %union.EC_SCALAR, align 8
  %32 = alloca %union.EC_SCALAR, align 8
  %33 = alloca %union.EC_PRECOMP, align 8
  %34 = alloca %union.EC_SCALAR, align 8
  %35 = alloca %union.EC_SCALAR, align 8
  %36 = alloca %union.EC_SCALAR, align 8
  %37 = alloca %union.EC_SCALAR, align 8
  %38 = alloca %union.EC_SCALAR, align 8
  %39 = alloca %union.EC_SCALAR, align 8
  %40 = alloca %union.EC_SCALAR, align 8
  %41 = alloca [10 x %struct.EC_AFFINE], align 16
  %42 = alloca %struct.EC_AFFINE, align 8
  %43 = alloca %struct.EC_AFFINE, align 8
  %44 = alloca %struct.EC_AFFINE, align 8
  %45 = alloca %struct.EC_AFFINE, align 8
  %46 = alloca %union.EC_SCALAR, align 8
  %47 = alloca %union.EC_SCALAR, align 8
  %48 = alloca %union.EC_SCALAR, align 8
  %49 = alloca %union.EC_SCALAR, align 8
  %50 = alloca %union.EC_SCALAR, align 8
  %51 = alloca %union.EC_SCALAR, align 8
  %52 = alloca %union.EC_SCALAR, align 8
  %53 = alloca %union.EC_SCALAR, align 8
  %54 = alloca %union.EC_SCALAR, align 8
  %55 = alloca %union.EC_SCALAR, align 8
  %56 = alloca %union.EC_SCALAR, align 8
  %57 = alloca %union.EC_SCALAR, align 8
  %58 = alloca %union.EC_SCALAR, align 8
  %59 = alloca %union.EC_SCALAR, align 8
  %60 = alloca %union.EC_SCALAR, align 8
  %61 = alloca %union.EC_SCALAR, align 8
  %62 = alloca i8*, align 8
  %63 = alloca i8*, align 8
  %64 = alloca i8*, align 8
  %65 = alloca i8*, align 8
  %66 = alloca %struct.cbb_st, align 8
  %67 = alloca %struct.cbb_st, align 8
  %68 = alloca i8*, align 8
  %69 = alloca i8*, align 8
  %70 = alloca i8*, align 8
  %71 = alloca %struct.cbb_st, align 8
  %72 = alloca %struct.EC_AFFINE, align 8
  %73 = alloca %struct.EC_RAW_POINT, align 8
  %74 = alloca %union.EC_SCALAR, align 8
  %75 = alloca %union.EC_SCALAR, align 8
  %76 = alloca [64 x i8], align 16
  %77 = alloca [3 x %struct.EC_RAW_POINT], align 16
  %78 = alloca [3 x %struct.EC_AFFINE], align 16
  %79 = alloca %struct.EC_RAW_POINT, align 8
  %80 = alloca %struct.EC_RAW_POINT, align 8
  %81 = alloca %struct.EC_RAW_POINT, align 8
  %82 = alloca %struct.EC_RAW_POINT, align 8
  %83 = alloca %struct.cbb_st, align 8
  %84 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 0
  %85 = load %struct.ec_group_st*, %struct.ec_group_st** %84, align 8
  %86 = icmp ult i64 %4, %5
  br i1 %86, label %87, label %88

87:                                               ; preds = %7
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 740) #4
  br label %623

88:                                               ; preds = %7
  %89 = icmp ugt i64 %5, 85401592933840516
  br i1 %89, label %90, label %91

90:                                               ; preds = %88
  tail call void @ERR_put_error(i32 32, i32 0, i32 69, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 746) #4
  br label %623

91:                                               ; preds = %88
  %92 = mul i64 %5, 216
  %93 = tail call i8* @OPENSSL_malloc(i64 %92) #4
  %94 = bitcast i8* %93 to %struct.EC_RAW_POINT*
  %95 = tail call i8* @OPENSSL_malloc(i64 %92) #4
  %96 = bitcast i8* %95 to %struct.EC_RAW_POINT*
  %97 = tail call i8* @OPENSSL_malloc(i64 %92) #4
  %98 = bitcast i8* %97 to %struct.EC_RAW_POINT*
  %99 = tail call i8* @OPENSSL_malloc(i64 %92) #4
  %100 = bitcast i8* %99 to %struct.EC_RAW_POINT*
  %101 = mul i64 %5, 72
  %102 = tail call i8* @OPENSSL_malloc(i64 %101) #4
  %103 = bitcast i8* %102 to %union.EC_SCALAR*
  %104 = bitcast %struct.cbb_st* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %104) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 32, i1 false)
  call void @CBB_zero(%struct.cbb_st* nonnull %71) #4
  %105 = icmp ne i8* %93, null
  %106 = icmp ne i8* %95, null
  %107 = and i1 %105, %106
  %108 = icmp ne i8* %97, null
  %109 = and i1 %107, %108
  %110 = icmp ne i8* %99, null
  %111 = and i1 %109, %110
  %112 = icmp ne i8* %102, null
  %113 = and i1 %111, %112
  br i1 %113, label %114, label %198

114:                                              ; preds = %91
  %115 = call i32 @CBB_init(%struct.cbb_st* nonnull %71, i64 0) #4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %198, label %117

117:                                              ; preds = %114
  %118 = load %struct.ec_group_st*, %struct.ec_group_st** %84, align 8
  %119 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 10
  %120 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %118, %struct.EC_AFFINE* %119, i32 4, i8* null, i64 0) #4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %198, label %122

122:                                              ; preds = %117
  %123 = bitcast i8** %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %70, align 8
  %124 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %71, i8** nonnull %70, i64 %120) #4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #4
  br label %198

127:                                              ; preds = %122
  %128 = load i8*, i8** %70, align 8
  %129 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %118, %struct.EC_AFFINE* %119, i32 4, i8* %128, i64 %120) #4
  %130 = icmp eq i64 %129, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #4
  br i1 %130, label %131, label %198

131:                                              ; preds = %127
  %132 = load %struct.ec_group_st*, %struct.ec_group_st** %84, align 8
  %133 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 6
  %134 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %132, %struct.EC_AFFINE* %133, i32 4, i8* null, i64 0) #4
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %198, label %136

136:                                              ; preds = %131
  %137 = bitcast i8** %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %69, align 8
  %138 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %71, i8** nonnull %69, i64 %134) #4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #4
  br label %198

141:                                              ; preds = %136
  %142 = load i8*, i8** %69, align 8
  %143 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %132, %struct.EC_AFFINE* %133, i32 4, i8* %142, i64 %134) #4
  %144 = icmp eq i64 %143, %134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #4
  br i1 %144, label %145, label %198

145:                                              ; preds = %141
  %146 = load %struct.ec_group_st*, %struct.ec_group_st** %84, align 8
  %147 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 8
  %148 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %146, %struct.EC_AFFINE* %147, i32 4, i8* null, i64 0) #4
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %198, label %150

150:                                              ; preds = %145
  %151 = bitcast i8** %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %68, align 8
  %152 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %71, i8** nonnull %68, i64 %148) #4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #4
  br label %198

155:                                              ; preds = %150
  %156 = load i8*, i8** %68, align 8
  %157 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %146, %struct.EC_AFFINE* %147, i32 4, i8* %156, i64 %148) #4
  %158 = icmp eq i64 %157, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #4
  br i1 %158, label %159, label %198

159:                                              ; preds = %155
  %160 = icmp eq i64 %5, 0
  br i1 %160, label %371, label %161

161:                                              ; preds = %159
  %162 = bitcast %struct.EC_AFFINE* %72 to i8*
  %163 = bitcast %struct.EC_RAW_POINT* %73 to i8*
  %164 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 7
  %165 = bitcast %union.EC_SCALAR* %74 to i8*
  %166 = bitcast %union.EC_SCALAR* %75 to i8*
  %167 = and i8 %6, 1
  %168 = zext i8 %167 to i64
  %169 = sub nsw i64 0, %168
  %170 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 2
  %171 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 0
  %172 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 3
  %173 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 1
  %174 = getelementptr inbounds [64 x i8], [64 x i8]* %76, i64 0, i64 0
  %175 = bitcast [3 x %struct.EC_RAW_POINT]* %77 to i8*
  %176 = bitcast [3 x %struct.EC_AFFINE]* %78 to i8*
  %177 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 5
  %178 = getelementptr inbounds [3 x %struct.EC_RAW_POINT], [3 x %struct.EC_RAW_POINT]* %77, i64 0, i64 0
  %179 = getelementptr inbounds [3 x %struct.EC_RAW_POINT], [3 x %struct.EC_RAW_POINT]* %77, i64 0, i64 1
  %180 = getelementptr inbounds [3 x %struct.EC_RAW_POINT], [3 x %struct.EC_RAW_POINT]* %77, i64 0, i64 2
  %181 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 4
  %182 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 5
  %183 = getelementptr inbounds [3 x %struct.EC_AFFINE], [3 x %struct.EC_AFFINE]* %78, i64 0, i64 0
  %184 = getelementptr inbounds [3 x %struct.EC_AFFINE], [3 x %struct.EC_AFFINE]* %78, i64 0, i64 1
  %185 = bitcast %struct.cbb_st* %67 to i8*
  %186 = bitcast i8** %11 to i8*
  %187 = bitcast i8** %10 to i8*
  %188 = getelementptr inbounds [3 x %struct.EC_AFFINE], [3 x %struct.EC_AFFINE]* %78, i64 0, i64 2
  %189 = bitcast %struct.cbb_st* %66 to i8*
  %190 = bitcast i8** %9 to i8*
  %191 = bitcast i8** %8 to i8*
  %192 = bitcast i8** %65 to i8*
  %193 = bitcast i8** %64 to i8*
  %194 = bitcast i8** %63 to i8*
  %195 = bitcast i8** %62 to i8*
  %196 = bitcast %struct.EC_RAW_POINT* %179 to i8*
  %197 = bitcast %struct.EC_RAW_POINT* %180 to i8*
  br label %201

198:                                              ; preds = %155, %141, %127, %145, %131, %117, %154, %140, %126, %114, %91
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 767) #4
  br label %621

199:                                              ; preds = %358
  %200 = icmp eq i64 %360, %5
  br i1 %200, label %362, label %201

201:                                              ; preds = %199, %161
  %202 = phi i64 [ 0, %161 ], [ %360, %199 ]
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %162) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %162, i8 -86, i64 144, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %163) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 -86, i64 216, i1 false)
  %203 = load i8, i8* %164, align 8
  %204 = shl i8 %203, 7
  %205 = ashr exact i8 %204, 7
  %206 = sext i8 %205 to i32
  %207 = call fastcc i32 @cbs_get_prefixed_point(%struct.cbs_st* %3, %struct.ec_group_st* %85, %struct.EC_AFFINE* nonnull %72, i32 %206)
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %201
  call void @ERR_put_error(i32 32, i32 0, i32 105, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 775) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %163) #4
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %162) #4
  br label %621

210:                                              ; preds = %201
  call void @ec_affine_to_jacobian(%struct.ec_group_st* %85, %struct.EC_RAW_POINT* nonnull %73, %struct.EC_AFFINE* nonnull %72) #4
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %165) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 -86, i64 72, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %166) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %166, i8 -86, i64 72, i1 false)
  call void @ec_scalar_select(%struct.ec_group_st* %85, %union.EC_SCALAR* nonnull %74, i64 %169, %union.EC_SCALAR* %170, %union.EC_SCALAR* %171) #4
  call void @ec_scalar_select(%struct.ec_group_st* %85, %union.EC_SCALAR* nonnull %75, i64 %169, %union.EC_SCALAR* %172, %union.EC_SCALAR* %173) #4
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %174) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %174, i8 -86, i64 64, i1 false)
  %211 = call i32 @RAND_bytes(i8* nonnull %174, i64 64) #4
  call void @llvm.lifetime.start.p0i8(i64 648, i8* nonnull %175) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %175, i8 -86, i64 648, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %176) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %176, i8 -86, i64 432, i1 false)
  %212 = load i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_AFFINE*, i8*)*, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_AFFINE*, i8*)** %177, align 8
  %213 = call i32 %212(%struct.ec_group_st* %85, %struct.EC_RAW_POINT* nonnull %178, %struct.EC_AFFINE* nonnull %72, i8* nonnull %174) #4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %358, label %215

215:                                              ; preds = %210
  %216 = call i32 @ec_point_mul_scalar_batch(%struct.ec_group_st* %85, %struct.EC_RAW_POINT* %179, %struct.EC_RAW_POINT* nonnull %73, %union.EC_SCALAR* nonnull %74, %struct.EC_RAW_POINT* nonnull %178, %union.EC_SCALAR* nonnull %75, %struct.EC_RAW_POINT* null, %union.EC_SCALAR* null) #4
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %358, label %218

218:                                              ; preds = %215
  %219 = call i32 @ec_point_mul_scalar_batch(%struct.ec_group_st* %85, %struct.EC_RAW_POINT* %180, %struct.EC_RAW_POINT* nonnull %73, %union.EC_SCALAR* %181, %struct.EC_RAW_POINT* nonnull %178, %union.EC_SCALAR* %182, %struct.EC_RAW_POINT* null, %union.EC_SCALAR* null) #4
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %358, label %221

221:                                              ; preds = %218
  %222 = call i32 @ec_jacobian_to_affine_batch(%struct.ec_group_st* %85, %struct.EC_AFFINE* nonnull %183, %struct.EC_RAW_POINT* nonnull %178, i64 3) #4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %358, label %224

224:                                              ; preds = %221
  %225 = call i32 @CBB_add_bytes(%struct.cbb_st* %2, i8* nonnull %174, i64 64) #4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %358, label %227

227:                                              ; preds = %224
  %228 = load i8, i8* %164, align 8
  %229 = and i8 %228, 1
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %250, label %231

231:                                              ; preds = %227
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %185) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 -86, i64 32, i1 false) #4
  %232 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %2, %struct.cbb_st* nonnull %67) #4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %249, label %234

234:                                              ; preds = %231
  %235 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* %184, i32 4, i8* null, i64 0) #4
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %249, label %237

237:                                              ; preds = %234
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %11, align 8
  %238 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %67, i8** nonnull %11, i64 %235) #4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #4
  br label %249

241:                                              ; preds = %237
  %242 = load i8*, i8** %11, align 8
  %243 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* %184, i32 4, i8* %242, i64 %235) #4
  %244 = icmp eq i64 %243, %235
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #4
  br i1 %244, label %245, label %249

245:                                              ; preds = %241
  %246 = call i32 @CBB_flush(%struct.cbb_st* %2) #4
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %249, label %248

248:                                              ; preds = %245
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %185) #4
  br label %264

249:                                              ; preds = %241, %234, %240, %245, %231
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %185) #4
  br label %358

250:                                              ; preds = %227
  %251 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* %184, i32 4, i8* null, i64 0) #4
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %358, label %253

253:                                              ; preds = %250
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %187) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %254 = call i32 @CBB_add_space(%struct.cbb_st* %2, i8** nonnull %10, i64 %251) #4
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %187) #4
  br label %358

257:                                              ; preds = %253
  %258 = load i8*, i8** %10, align 8
  %259 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* %184, i32 4, i8* %258, i64 %251) #4
  %260 = icmp eq i64 %259, %251
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %187) #4
  br i1 %260, label %261, label %358

261:                                              ; preds = %257
  %262 = call i32 @CBB_flush(%struct.cbb_st* %2) #4
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %358, label %264

264:                                              ; preds = %261, %248
  %265 = load i8, i8* %164, align 8
  %266 = and i8 %265, 1
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %287, label %268

268:                                              ; preds = %264
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %189) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 -86, i64 32, i1 false) #4
  %269 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %2, %struct.cbb_st* nonnull %66) #4
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %286, label %271

271:                                              ; preds = %268
  %272 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* %188, i32 4, i8* null, i64 0) #4
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %286, label %274

274:                                              ; preds = %271
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %275 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %66, i8** nonnull %9, i64 %272) #4
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #4
  br label %286

278:                                              ; preds = %274
  %279 = load i8*, i8** %9, align 8
  %280 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* %188, i32 4, i8* %279, i64 %272) #4
  %281 = icmp eq i64 %280, %272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #4
  br i1 %281, label %282, label %286

282:                                              ; preds = %278
  %283 = call i32 @CBB_flush(%struct.cbb_st* %2) #4
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %286, label %285

285:                                              ; preds = %282
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %189) #4
  br label %301

286:                                              ; preds = %278, %271, %277, %282, %268
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %189) #4
  br label %358

287:                                              ; preds = %264
  %288 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* %188, i32 4, i8* null, i64 0) #4
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %358, label %290

290:                                              ; preds = %287
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %291 = call i32 @CBB_add_space(%struct.cbb_st* %2, i8** nonnull %8, i64 %288) #4
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

293:                                              ; preds = %290
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #4
  br label %358

294:                                              ; preds = %290
  %295 = load i8*, i8** %8, align 8
  %296 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* %188, i32 4, i8* %295, i64 %288) #4
  %297 = icmp eq i64 %296, %288
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #4
  br i1 %297, label %298, label %358

298:                                              ; preds = %294
  %299 = call i32 @CBB_flush(%struct.cbb_st* %2) #4
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %358, label %301

301:                                              ; preds = %298, %285
  %302 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* nonnull %72, i32 4, i8* null, i64 0) #4
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %345, label %304

304:                                              ; preds = %301
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %192) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %65, align 8
  %305 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %71, i8** nonnull %65, i64 %302) #4
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #4
  br label %345

308:                                              ; preds = %304
  %309 = load i8*, i8** %65, align 8
  %310 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* nonnull %72, i32 4, i8* %309, i64 %302) #4
  %311 = icmp eq i64 %310, %302
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #4
  br i1 %311, label %312, label %345

312:                                              ; preds = %308
  %313 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* nonnull %183, i32 4, i8* null, i64 0) #4
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %345, label %315

315:                                              ; preds = %312
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %64, align 8
  %316 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %71, i8** nonnull %64, i64 %313) #4
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %319

318:                                              ; preds = %315
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #4
  br label %345

319:                                              ; preds = %315
  %320 = load i8*, i8** %64, align 8
  %321 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* nonnull %183, i32 4, i8* %320, i64 %313) #4
  %322 = icmp eq i64 %321, %313
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #4
  br i1 %322, label %323, label %345

323:                                              ; preds = %319
  %324 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* %184, i32 4, i8* null, i64 0) #4
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %345, label %326

326:                                              ; preds = %323
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %194) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %63, align 8
  %327 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %71, i8** nonnull %63, i64 %324) #4
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %326
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #4
  br label %345

330:                                              ; preds = %326
  %331 = load i8*, i8** %63, align 8
  %332 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* %184, i32 4, i8* %331, i64 %324) #4
  %333 = icmp eq i64 %332, %324
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #4
  br i1 %333, label %334, label %345

334:                                              ; preds = %330
  %335 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* %188, i32 4, i8* null, i64 0) #4
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %345, label %337

337:                                              ; preds = %334
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %62, align 8
  %338 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %71, i8** nonnull %62, i64 %335) #4
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %337
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #4
  br label %345

341:                                              ; preds = %337
  %342 = load i8*, i8** %62, align 8
  %343 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %85, %struct.EC_AFFINE* %188, i32 4, i8* %342, i64 %335) #4
  %344 = icmp eq i64 %343, %335
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #4
  br i1 %344, label %346, label %345

345:                                              ; preds = %341, %330, %319, %308, %334, %323, %312, %301, %340, %329, %318, %307
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 808) #4
  br label %358

346:                                              ; preds = %341
  %347 = getelementptr inbounds %struct.EC_RAW_POINT, %struct.EC_RAW_POINT* %94, i64 %202
  %348 = bitcast %struct.EC_RAW_POINT* %347 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %348, i8* nonnull align 8 %163, i64 216, i1 false)
  %349 = getelementptr inbounds %struct.EC_RAW_POINT, %struct.EC_RAW_POINT* %96, i64 %202
  %350 = bitcast %struct.EC_RAW_POINT* %349 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %350, i8* nonnull align 16 %175, i64 216, i1 false)
  %351 = getelementptr inbounds %struct.EC_RAW_POINT, %struct.EC_RAW_POINT* %98, i64 %202
  %352 = bitcast %struct.EC_RAW_POINT* %351 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %352, i8* align 8 %196, i64 216, i1 false)
  %353 = getelementptr inbounds %struct.EC_RAW_POINT, %struct.EC_RAW_POINT* %100, i64 %202
  %354 = bitcast %struct.EC_RAW_POINT* %353 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %354, i8* align 16 %197, i64 216, i1 false)
  %355 = call i32 @CBB_flush(%struct.cbb_st* %2) #4
  %356 = icmp eq i32 %355, 0
  %357 = select i1 %356, i32 2, i32 0
  br label %358

358:                                              ; preds = %346, %257, %294, %287, %293, %298, %286, %250, %256, %261, %249, %345, %224, %221, %218, %215, %210
  %359 = phi i32 [ 2, %345 ], [ 2, %224 ], [ 2, %221 ], [ 2, %218 ], [ 2, %215 ], [ 2, %210 ], [ 2, %249 ], [ 2, %261 ], [ 2, %257 ], [ 2, %256 ], [ 2, %250 ], [ 2, %286 ], [ 2, %298 ], [ 2, %294 ], [ 2, %293 ], [ 2, %287 ], [ %357, %346 ]
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %176) #4
  call void @llvm.lifetime.end.p0i8(i64 648, i8* nonnull %175) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %174) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %166) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %165) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %163) #4
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %162) #4
  %360 = add nuw i64 %202, 1
  %361 = icmp eq i32 %359, 0
  br i1 %361, label %199, label %621

362:                                              ; preds = %199
  br i1 %160, label %371, label %365

363:                                              ; preds = %365
  %364 = icmp eq i64 %370, %5
  br i1 %364, label %371, label %365

365:                                              ; preds = %362, %363
  %366 = phi i64 [ %370, %363 ], [ 0, %362 ]
  %367 = getelementptr inbounds %union.EC_SCALAR, %union.EC_SCALAR* %103, i64 %366
  %368 = call fastcc i32 @hash_c_batch(%struct.PMBTOKEN_METHOD* %0, %union.EC_SCALAR* %367, %struct.cbb_st* nonnull %71, i64 %366)
  %369 = icmp eq i32 %368, 0
  %370 = add nuw i64 %366, 1
  br i1 %369, label %621, label %363

371:                                              ; preds = %363, %159, %362
  %372 = bitcast %struct.EC_RAW_POINT* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %372, i8 -86, i64 216, i1 false)
  %373 = bitcast %struct.EC_RAW_POINT* %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %373, i8 -86, i64 216, i1 false)
  %374 = bitcast %struct.EC_RAW_POINT* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %374, i8 -86, i64 216, i1 false)
  %375 = bitcast %struct.EC_RAW_POINT* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %375, i8 -86, i64 216, i1 false)
  %376 = call i32 @ec_point_mul_scalar_public_batch(%struct.ec_group_st* %85, %struct.EC_RAW_POINT* nonnull %79, %union.EC_SCALAR* null, %struct.EC_RAW_POINT* nonnull %94, %union.EC_SCALAR* nonnull %103, i64 %5) #4
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %621, label %378

378:                                              ; preds = %371
  %379 = call i32 @ec_point_mul_scalar_public_batch(%struct.ec_group_st* %85, %struct.EC_RAW_POINT* nonnull %80, %union.EC_SCALAR* null, %struct.EC_RAW_POINT* nonnull %96, %union.EC_SCALAR* nonnull %103, i64 %5) #4
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %621, label %381

381:                                              ; preds = %378
  %382 = call i32 @ec_point_mul_scalar_public_batch(%struct.ec_group_st* %85, %struct.EC_RAW_POINT* nonnull %81, %union.EC_SCALAR* null, %struct.EC_RAW_POINT* nonnull %98, %union.EC_SCALAR* nonnull %103, i64 %5) #4
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %621, label %384

384:                                              ; preds = %381
  %385 = call i32 @ec_point_mul_scalar_public_batch(%struct.ec_group_st* %85, %struct.EC_RAW_POINT* nonnull %82, %union.EC_SCALAR* null, %struct.EC_RAW_POINT* nonnull %100, %union.EC_SCALAR* nonnull %103, i64 %5) #4
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %621, label %387

387:                                              ; preds = %384
  %388 = bitcast %struct.cbb_st* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %388, i8 -86, i64 32, i1 false)
  %389 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* %2, %struct.cbb_st* nonnull %83) #4
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %621, label %391

391:                                              ; preds = %387
  %392 = load %struct.ec_group_st*, %struct.ec_group_st** %84, align 8
  %393 = bitcast [10 x %struct.EC_RAW_POINT]* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2160, i8* nonnull %393) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %393, i8 -86, i64 2160, i1 false) #4
  %394 = bitcast %union.EC_SCALAR* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %394) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %394, i8 -86, i64 72, i1 false) #4
  %395 = bitcast %union.EC_SCALAR* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %395) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %395, i8 -86, i64 72, i1 false) #4
  %396 = call i32 @ec_random_nonzero_scalar(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %31, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @kDefaultAdditionalData, i64 0, i64 0)) #4
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %598, label %398

398:                                              ; preds = %391
  %399 = call i32 @ec_random_nonzero_scalar(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %32, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @kDefaultAdditionalData, i64 0, i64 0)) #4
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %598, label %401

401:                                              ; preds = %398
  %402 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %30, i64 0, i64 4
  %403 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 1
  %404 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 2
  %405 = call i32 @ec_point_mul_scalar_precomp(%struct.ec_group_st* %392, %struct.EC_RAW_POINT* %402, %union.EC_PRECOMP* %403, %union.EC_SCALAR* nonnull %31, %union.EC_PRECOMP* %404, %union.EC_SCALAR* nonnull %32, %union.EC_PRECOMP* null, %union.EC_SCALAR* null) #4
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %598, label %407

407:                                              ; preds = %401
  %408 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %30, i64 0, i64 5
  %409 = call i32 @ec_point_mul_scalar_batch(%struct.ec_group_st* %392, %struct.EC_RAW_POINT* %408, %struct.EC_RAW_POINT* nonnull %79, %union.EC_SCALAR* nonnull %31, %struct.EC_RAW_POINT* nonnull %80, %union.EC_SCALAR* nonnull %32, %struct.EC_RAW_POINT* null, %union.EC_SCALAR* null) #4
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %598, label %411

411:                                              ; preds = %407
  %412 = and i8 %6, 1
  %413 = zext i8 %412 to i64
  %414 = sub nsw i64 0, %413
  %415 = bitcast %union.EC_PRECOMP* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4464, i8* nonnull %415) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %415, i8 -86, i64 4464, i1 false) #4
  %416 = bitcast %union.EC_SCALAR* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %416) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %416, i8 -86, i64 72, i1 false) #4
  %417 = bitcast %union.EC_SCALAR* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %417) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %417, i8 -86, i64 72, i1 false) #4
  %418 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 2
  %419 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 0
  call void @ec_scalar_select(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %34, i64 %414, %union.EC_SCALAR* %418, %union.EC_SCALAR* %419) #4
  %420 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 3
  %421 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 1
  call void @ec_scalar_select(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %35, i64 %414, %union.EC_SCALAR* %420, %union.EC_SCALAR* %421) #4
  %422 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 7
  %423 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 9
  call void @ec_precomp_select(%struct.ec_group_st* %392, %union.EC_PRECOMP* nonnull %33, i64 %414, %union.EC_PRECOMP* %422, %union.EC_PRECOMP* %423) #4
  %424 = bitcast %union.EC_SCALAR* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %424) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %424, i8 -86, i64 72, i1 false) #4
  %425 = bitcast %union.EC_SCALAR* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %425) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %425, i8 -86, i64 72, i1 false) #4
  %426 = bitcast %union.EC_SCALAR* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %426) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %426, i8 -86, i64 72, i1 false) #4
  %427 = bitcast %union.EC_SCALAR* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %427) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %427, i8 -86, i64 72, i1 false) #4
  %428 = bitcast %union.EC_SCALAR* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %428) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %428, i8 -86, i64 72, i1 false) #4
  %429 = call i32 @ec_random_nonzero_scalar(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %36, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @kDefaultAdditionalData, i64 0, i64 0)) #4
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %596, label %431

431:                                              ; preds = %411
  %432 = call i32 @ec_random_nonzero_scalar(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %37, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @kDefaultAdditionalData, i64 0, i64 0)) #4
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %596, label %434

434:                                              ; preds = %431
  %435 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %30, i64 0, i64 6
  %436 = call i32 @ec_point_mul_scalar_precomp(%struct.ec_group_st* %392, %struct.EC_RAW_POINT* %435, %union.EC_PRECOMP* %403, %union.EC_SCALAR* nonnull %36, %union.EC_PRECOMP* %404, %union.EC_SCALAR* nonnull %37, %union.EC_PRECOMP* null, %union.EC_SCALAR* null) #4
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %596, label %438

438:                                              ; preds = %434
  %439 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %30, i64 0, i64 7
  %440 = call i32 @ec_point_mul_scalar_batch(%struct.ec_group_st* %392, %struct.EC_RAW_POINT* %439, %struct.EC_RAW_POINT* nonnull %79, %union.EC_SCALAR* nonnull %36, %struct.EC_RAW_POINT* nonnull %80, %union.EC_SCALAR* nonnull %37, %struct.EC_RAW_POINT* null, %union.EC_SCALAR* null) #4
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %596, label %442

442:                                              ; preds = %438
  %443 = call i32 @ec_random_nonzero_scalar(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %38, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @kDefaultAdditionalData, i64 0, i64 0)) #4
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %596, label %445

445:                                              ; preds = %442
  %446 = call i32 @ec_random_nonzero_scalar(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %39, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @kDefaultAdditionalData, i64 0, i64 0)) #4
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %596, label %448

448:                                              ; preds = %445
  %449 = call i32 @ec_random_nonzero_scalar(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %40, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @kDefaultAdditionalData, i64 0, i64 0)) #4
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %596, label %451

451:                                              ; preds = %448
  %452 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %30, i64 0, i64 8
  %453 = call i32 @ec_point_mul_scalar_precomp(%struct.ec_group_st* %392, %struct.EC_RAW_POINT* %452, %union.EC_PRECOMP* %403, %union.EC_SCALAR* nonnull %39, %union.EC_PRECOMP* %404, %union.EC_SCALAR* nonnull %40, %union.EC_PRECOMP* nonnull %33, %union.EC_SCALAR* nonnull %38) #4
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %596, label %455

455:                                              ; preds = %451
  %456 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %30, i64 0, i64 9
  %457 = call i32 @ec_point_mul_scalar_batch(%struct.ec_group_st* %392, %struct.EC_RAW_POINT* %456, %struct.EC_RAW_POINT* nonnull %79, %union.EC_SCALAR* nonnull %39, %struct.EC_RAW_POINT* nonnull %80, %union.EC_SCALAR* nonnull %40, %struct.EC_RAW_POINT* nonnull %81, %union.EC_SCALAR* nonnull %38) #4
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %596, label %459

459:                                              ; preds = %455
  %460 = bitcast [10 x %struct.EC_AFFINE]* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1440, i8* nonnull %460) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %460, i8 -86, i64 1440, i1 false) #4
  %461 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %30, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %393, i8* nonnull align 8 %372, i64 216, i1 false) #4
  %462 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %30, i64 0, i64 1
  %463 = bitcast %struct.EC_RAW_POINT* %462 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %463, i8* nonnull align 8 %373, i64 216, i1 false) #4
  %464 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %30, i64 0, i64 2
  %465 = bitcast %struct.EC_RAW_POINT* %464 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %465, i8* nonnull align 8 %374, i64 216, i1 false) #4
  %466 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %30, i64 0, i64 3
  %467 = bitcast %struct.EC_RAW_POINT* %466 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %467, i8* nonnull align 8 %375, i64 216, i1 false) #4
  %468 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %41, i64 0, i64 0
  %469 = call i32 @ec_jacobian_to_affine_batch(%struct.ec_group_st* %392, %struct.EC_AFFINE* nonnull %468, %struct.EC_RAW_POINT* nonnull %461, i64 10) #4
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %594, label %471

471:                                              ; preds = %459
  %472 = bitcast %struct.EC_AFFINE* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %472) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %472, i8 -86, i64 144, i1 false) #4
  %473 = bitcast %struct.EC_AFFINE* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %473) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %473, i8 -86, i64 144, i1 false) #4
  %474 = bitcast %struct.EC_AFFINE* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %474) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %474, i8 -86, i64 144, i1 false) #4
  %475 = bitcast %struct.EC_AFFINE* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %475) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %475, i8 -86, i64 144, i1 false) #4
  %476 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %41, i64 0, i64 8
  %477 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %41, i64 0, i64 6
  call void @ec_affine_select(%struct.ec_group_st* %392, %struct.EC_AFFINE* nonnull %42, i64 %414, %struct.EC_AFFINE* %476, %struct.EC_AFFINE* %477) #4
  %478 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %41, i64 0, i64 9
  %479 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %41, i64 0, i64 7
  call void @ec_affine_select(%struct.ec_group_st* %392, %struct.EC_AFFINE* nonnull %43, i64 %414, %struct.EC_AFFINE* %478, %struct.EC_AFFINE* %479) #4
  call void @ec_affine_select(%struct.ec_group_st* %392, %struct.EC_AFFINE* nonnull %44, i64 %414, %struct.EC_AFFINE* %477, %struct.EC_AFFINE* %476) #4
  call void @ec_affine_select(%struct.ec_group_st* %392, %struct.EC_AFFINE* nonnull %45, i64 %414, %struct.EC_AFFINE* %479, %struct.EC_AFFINE* %478) #4
  %480 = bitcast %union.EC_SCALAR* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %480) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %480, i8 -86, i64 72, i1 false) #4
  %481 = bitcast %union.EC_SCALAR* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %481) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %481, i8 -86, i64 72, i1 false) #4
  %482 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %41, i64 0, i64 1
  %483 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %41, i64 0, i64 3
  %484 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %41, i64 0, i64 4
  %485 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %41, i64 0, i64 5
  %486 = call fastcc i32 @hash_c_dleq(%struct.PMBTOKEN_METHOD* %0, %union.EC_SCALAR* nonnull %46, %struct.EC_AFFINE* %119, %struct.EC_AFFINE* nonnull %468, %struct.EC_AFFINE* %482, %struct.EC_AFFINE* %483, %struct.EC_AFFINE* %484, %struct.EC_AFFINE* %485) #4
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %592, label %488

488:                                              ; preds = %471
  %489 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %41, i64 0, i64 2
  %490 = call fastcc i32 @hash_c_dleqor(%struct.PMBTOKEN_METHOD* %0, %union.EC_SCALAR* nonnull %47, %struct.EC_AFFINE* %133, %struct.EC_AFFINE* %147, %struct.EC_AFFINE* nonnull %468, %struct.EC_AFFINE* %482, %struct.EC_AFFINE* %489, %struct.EC_AFFINE* nonnull %42, %struct.EC_AFFINE* nonnull %43, %struct.EC_AFFINE* nonnull %44, %struct.EC_AFFINE* nonnull %45) #4
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %592, label %492

492:                                              ; preds = %488
  %493 = bitcast %union.EC_SCALAR* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %493) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %493, i8 -86, i64 72, i1 false) #4
  call void @ec_scalar_to_montgomery(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %48, %union.EC_SCALAR* nonnull %46) #4
  %494 = bitcast %union.EC_SCALAR* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %494) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %494, i8 -86, i64 72, i1 false) #4
  %495 = bitcast %union.EC_SCALAR* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %495) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %495, i8 -86, i64 72, i1 false) #4
  %496 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 4
  call void @ec_scalar_mul_montgomery(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %49, %union.EC_SCALAR* %496, %union.EC_SCALAR* nonnull %48) #4
  call void @ec_scalar_add(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %49, %union.EC_SCALAR* nonnull %31, %union.EC_SCALAR* nonnull %49) #4
  %497 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 5
  call void @ec_scalar_mul_montgomery(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %50, %union.EC_SCALAR* %497, %union.EC_SCALAR* nonnull %48) #4
  call void @ec_scalar_add(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %50, %union.EC_SCALAR* nonnull %32, %union.EC_SCALAR* nonnull %50) #4
  %498 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %498) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %499 = bitcast i64* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %499) #4
  %500 = getelementptr inbounds %struct.ec_group_st, %struct.ec_group_st* %392, i64 0, i32 2
  %501 = call i32 @BN_num_bytes(%struct.bignum_st* %500) #4
  %502 = zext i32 %501 to i64
  store i64 %502, i64* %29, align 8
  %503 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %83, i8** nonnull %28, i64 %502) #4
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %521, label %505

505:                                              ; preds = %492
  %506 = load i8*, i8** %28, align 8
  call void @ec_scalar_to_bytes(%struct.ec_group_st* %392, i8* %506, i64* nonnull %29, %union.EC_SCALAR* nonnull %46) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %499) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %498) #4
  %507 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %507) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %508 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %508) #4
  %509 = call i32 @BN_num_bytes(%struct.bignum_st* %500) #4
  %510 = zext i32 %509 to i64
  store i64 %510, i64* %27, align 8
  %511 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %83, i8** nonnull %26, i64 %510) #4
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %521, label %513

513:                                              ; preds = %505
  %514 = load i8*, i8** %26, align 8
  call void @ec_scalar_to_bytes(%struct.ec_group_st* %392, i8* %514, i64* nonnull %27, %union.EC_SCALAR* nonnull %49) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %508) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %507) #4
  %515 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %515) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %24, align 8
  %516 = bitcast i64* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %516) #4
  %517 = call i32 @BN_num_bytes(%struct.bignum_st* %500) #4
  %518 = zext i32 %517 to i64
  store i64 %518, i64* %25, align 8
  %519 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %83, i8** nonnull %24, i64 %518) #4
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %521, label %524

521:                                              ; preds = %513, %505, %492
  %522 = phi i8* [ %499, %492 ], [ %508, %505 ], [ %516, %513 ]
  %523 = phi i8* [ %498, %492 ], [ %507, %505 ], [ %515, %513 ]
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 327) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %522) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %523) #4
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 572) #4
  br label %590

524:                                              ; preds = %513
  %525 = load i8*, i8** %24, align 8
  call void @ec_scalar_to_bytes(%struct.ec_group_st* %392, i8* %525, i64* nonnull %25, %union.EC_SCALAR* nonnull %50) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %516) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %515) #4
  %526 = bitcast %union.EC_SCALAR* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %526) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %526, i8 -86, i64 72, i1 false) #4
  %527 = bitcast %union.EC_SCALAR* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %527) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %527, i8 -86, i64 72, i1 false) #4
  %528 = bitcast %union.EC_SCALAR* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %528) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %528, i8 -86, i64 72, i1 false) #4
  call void @ec_scalar_add(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %51, %union.EC_SCALAR* nonnull %47, %union.EC_SCALAR* nonnull %38) #4
  %529 = bitcast %union.EC_SCALAR* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %529) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %529, i8 -86, i64 72, i1 false) #4
  call void @ec_scalar_to_montgomery(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %54, %union.EC_SCALAR* nonnull %51) #4
  call void @ec_scalar_mul_montgomery(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %52, %union.EC_SCALAR* nonnull %34, %union.EC_SCALAR* nonnull %54) #4
  call void @ec_scalar_add(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %52, %union.EC_SCALAR* nonnull %36, %union.EC_SCALAR* nonnull %52) #4
  call void @ec_scalar_mul_montgomery(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %53, %union.EC_SCALAR* nonnull %35, %union.EC_SCALAR* nonnull %54) #4
  call void @ec_scalar_add(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %53, %union.EC_SCALAR* nonnull %37, %union.EC_SCALAR* nonnull %53) #4
  %530 = bitcast %union.EC_SCALAR* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %530) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %530, i8 -86, i64 72, i1 false) #4
  %531 = bitcast %union.EC_SCALAR* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %531) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %531, i8 -86, i64 72, i1 false) #4
  %532 = bitcast %union.EC_SCALAR* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %532) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %532, i8 -86, i64 72, i1 false) #4
  %533 = bitcast %union.EC_SCALAR* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %533) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %533, i8 -86, i64 72, i1 false) #4
  %534 = bitcast %union.EC_SCALAR* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %534) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %534, i8 -86, i64 72, i1 false) #4
  %535 = bitcast %union.EC_SCALAR* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %535) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %535, i8 -86, i64 72, i1 false) #4
  %536 = bitcast %union.EC_SCALAR* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %536) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %536, i8 -86, i64 72, i1 false) #4
  call void @ec_scalar_neg(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %55, %union.EC_SCALAR* nonnull %38) #4
  call void @ec_scalar_select(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %56, i64 %414, %union.EC_SCALAR* nonnull %55, %union.EC_SCALAR* nonnull %51) #4
  call void @ec_scalar_select(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %58, i64 %414, %union.EC_SCALAR* nonnull %39, %union.EC_SCALAR* nonnull %52) #4
  call void @ec_scalar_select(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %60, i64 %414, %union.EC_SCALAR* nonnull %40, %union.EC_SCALAR* nonnull %53) #4
  call void @ec_scalar_select(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %57, i64 %414, %union.EC_SCALAR* nonnull %51, %union.EC_SCALAR* nonnull %55) #4
  call void @ec_scalar_select(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %59, i64 %414, %union.EC_SCALAR* nonnull %52, %union.EC_SCALAR* nonnull %39) #4
  call void @ec_scalar_select(%struct.ec_group_st* %392, %union.EC_SCALAR* nonnull %61, i64 %414, %union.EC_SCALAR* nonnull %53, %union.EC_SCALAR* nonnull %40) #4
  %537 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %537) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %22, align 8
  %538 = bitcast i64* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %538) #4
  %539 = call i32 @BN_num_bytes(%struct.bignum_st* %500) #4
  %540 = zext i32 %539 to i64
  store i64 %540, i64* %23, align 8
  %541 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %83, i8** nonnull %22, i64 %540) #4
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %585, label %543

543:                                              ; preds = %524
  %544 = load i8*, i8** %22, align 8
  call void @ec_scalar_to_bytes(%struct.ec_group_st* %392, i8* %544, i64* nonnull %23, %union.EC_SCALAR* nonnull %56) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %538) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %537) #4
  %545 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %545) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %546 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %546) #4
  %547 = call i32 @BN_num_bytes(%struct.bignum_st* %500) #4
  %548 = zext i32 %547 to i64
  store i64 %548, i64* %21, align 8
  %549 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %83, i8** nonnull %20, i64 %548) #4
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %585, label %551

551:                                              ; preds = %543
  %552 = load i8*, i8** %20, align 8
  call void @ec_scalar_to_bytes(%struct.ec_group_st* %392, i8* %552, i64* nonnull %21, %union.EC_SCALAR* nonnull %57) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %546) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %545) #4
  %553 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %553) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %554 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %554) #4
  %555 = call i32 @BN_num_bytes(%struct.bignum_st* %500) #4
  %556 = zext i32 %555 to i64
  store i64 %556, i64* %19, align 8
  %557 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %83, i8** nonnull %18, i64 %556) #4
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %585, label %559

559:                                              ; preds = %551
  %560 = load i8*, i8** %18, align 8
  call void @ec_scalar_to_bytes(%struct.ec_group_st* %392, i8* %560, i64* nonnull %19, %union.EC_SCALAR* nonnull %58) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %554) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %553) #4
  %561 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %561) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %16, align 8
  %562 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %562) #4
  %563 = call i32 @BN_num_bytes(%struct.bignum_st* %500) #4
  %564 = zext i32 %563 to i64
  store i64 %564, i64* %17, align 8
  %565 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %83, i8** nonnull %16, i64 %564) #4
  %566 = icmp eq i32 %565, 0
  br i1 %566, label %585, label %567

567:                                              ; preds = %559
  %568 = load i8*, i8** %16, align 8
  call void @ec_scalar_to_bytes(%struct.ec_group_st* %392, i8* %568, i64* nonnull %17, %union.EC_SCALAR* nonnull %59) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %562) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %561) #4
  %569 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %569) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %570 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %570) #4
  %571 = call i32 @BN_num_bytes(%struct.bignum_st* %500) #4
  %572 = zext i32 %571 to i64
  store i64 %572, i64* %15, align 8
  %573 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %83, i8** nonnull %14, i64 %572) #4
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %585, label %575

575:                                              ; preds = %567
  %576 = load i8*, i8** %14, align 8
  call void @ec_scalar_to_bytes(%struct.ec_group_st* %392, i8* %576, i64* nonnull %15, %union.EC_SCALAR* nonnull %60) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %570) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %569) #4
  %577 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %577) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %578 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %578) #4
  %579 = call i32 @BN_num_bytes(%struct.bignum_st* %500) #4
  %580 = zext i32 %579 to i64
  store i64 %580, i64* %13, align 8
  %581 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %83, i8** nonnull %12, i64 %580) #4
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %585, label %583

583:                                              ; preds = %575
  %584 = load i8*, i8** %12, align 8
  call void @ec_scalar_to_bytes(%struct.ec_group_st* %392, i8* %584, i64* nonnull %13, %union.EC_SCALAR* nonnull %61) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %578) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %577) #4
  br label %588

585:                                              ; preds = %575, %567, %559, %551, %543, %524
  %586 = phi i8* [ %538, %524 ], [ %546, %543 ], [ %554, %551 ], [ %562, %559 ], [ %570, %567 ], [ %578, %575 ]
  %587 = phi i8* [ %537, %524 ], [ %545, %543 ], [ %553, %551 ], [ %561, %559 ], [ %569, %567 ], [ %577, %575 ]
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 327) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %586) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %587) #4
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 608) #4
  br label %588

588:                                              ; preds = %585, %583
  %589 = phi i32 [ 0, %585 ], [ 1, %583 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %536) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %535) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %534) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %533) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %532) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %531) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %530) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %529) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %528) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %527) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %526) #4
  br label %590

590:                                              ; preds = %588, %521
  %591 = phi i32 [ %589, %588 ], [ 0, %521 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %495) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %494) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %493) #4
  br label %592

592:                                              ; preds = %590, %488, %471
  %593 = phi i32 [ %591, %590 ], [ 0, %488 ], [ 0, %471 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %481) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %480) #4
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %475) #4
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %474) #4
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %473) #4
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %472) #4
  br label %594

594:                                              ; preds = %592, %459
  %595 = phi i32 [ %593, %592 ], [ 0, %459 ]
  call void @llvm.lifetime.end.p0i8(i64 1440, i8* nonnull %460) #4
  br label %596

596:                                              ; preds = %594, %455, %451, %448, %445, %442, %438, %434, %431, %411
  %597 = phi i32 [ %595, %594 ], [ 0, %455 ], [ 0, %451 ], [ 0, %448 ], [ 0, %445 ], [ 0, %442 ], [ 0, %438 ], [ 0, %434 ], [ 0, %431 ], [ 0, %411 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %428) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %427) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %426) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %425) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %424) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %417) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %416) #4
  call void @llvm.lifetime.end.p0i8(i64 4464, i8* nonnull %415) #4
  br label %598

598:                                              ; preds = %391, %398, %401, %407, %596
  %599 = phi i32 [ %597, %596 ], [ 0, %407 ], [ 0, %401 ], [ 0, %398 ], [ 0, %391 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %395) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %394) #4
  call void @llvm.lifetime.end.p0i8(i64 2160, i8* nonnull %393) #4
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %621, label %601

601:                                              ; preds = %598
  %602 = call i32 @CBB_flush(%struct.cbb_st* %2) #4
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %621, label %604

604:                                              ; preds = %601
  %605 = getelementptr inbounds %struct.ec_group_st, %struct.ec_group_st* %85, i64 0, i32 5
  %606 = call i32 @BN_num_bytes(%struct.bignum_st* %605) #4
  %607 = shl i32 %606, 1
  %608 = or i32 %607, 1
  %609 = zext i32 %608 to i64
  %610 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 7
  %611 = load i8, i8* %610, align 8
  %612 = and i8 %611, 1
  %613 = icmp eq i8 %612, 0
  %614 = add nuw nsw i64 %609, 2
  %615 = select i1 %613, i64 %609, i64 %614
  %616 = sub i64 %4, %5
  %617 = mul i64 %615, %616
  %618 = call i32 @CBS_skip(%struct.cbs_st* %3, i64 %617) #4
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %620, label %621

620:                                              ; preds = %604
  call void @ERR_put_error(i32 32, i32 0, i32 105, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 861) #4
  br label %621

621:                                              ; preds = %358, %365, %209, %604, %601, %598, %387, %384, %381, %378, %371, %620, %198
  %622 = phi i32 [ 0, %620 ], [ 0, %601 ], [ 0, %598 ], [ 0, %387 ], [ 0, %384 ], [ 0, %381 ], [ 0, %378 ], [ 0, %371 ], [ 0, %198 ], [ 1, %604 ], [ 0, %209 ], [ 0, %365 ], [ 0, %358 ]
  call void @OPENSSL_free(i8* %93) #4
  call void @OPENSSL_free(i8* %95) #4
  call void @OPENSSL_free(i8* %97) #4
  call void @OPENSSL_free(i8* %99) #4
  call void @OPENSSL_free(i8* %102) #4
  call void @CBB_cleanup(%struct.cbb_st* nonnull %71) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %104) #4
  br label %623

623:                                              ; preds = %621, %90, %87
  %624 = phi i32 [ 0, %87 ], [ 0, %90 ], [ %622, %621 ]
  ret i32 %624
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_TRUST_TOKEN* @pmbtoken_exp1_unblind(%struct.TRUST_TOKEN_CLIENT_KEY*, %struct.stack_st_TRUST_TOKEN_PRETOKEN*, %struct.cbs_st*, i64, i32) local_unnamed_addr #0 {
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp1_method_once, void ()* nonnull @pmbtoken_exp1_init_method_impl) #4
  %6 = load i32, i32* @pmbtoken_exp1_ok, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1171) #4
  br label %11

9:                                                ; preds = %5
  %10 = tail call fastcc %struct.stack_st_TRUST_TOKEN* @pmbtoken_unblind(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp1_method, %struct.TRUST_TOKEN_CLIENT_KEY* %0, %struct.stack_st_TRUST_TOKEN_PRETOKEN* %1, %struct.cbs_st* %2, i64 %3, i32 %4)
  br label %11

11:                                               ; preds = %8, %9
  %12 = phi %struct.stack_st_TRUST_TOKEN* [ %10, %9 ], [ null, %8 ]
  ret %struct.stack_st_TRUST_TOKEN* %12
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.stack_st_TRUST_TOKEN* @pmbtoken_unblind(%struct.PMBTOKEN_METHOD* nocapture readonly, %struct.TRUST_TOKEN_CLIENT_KEY*, %struct.stack_st_TRUST_TOKEN_PRETOKEN*, %struct.cbs_st*, i64, i32) unnamed_addr #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca [3 x %struct.EC_RAW_POINT], align 16
  %14 = alloca [3 x %union.EC_SCALAR], align 16
  %15 = alloca [10 x %struct.EC_RAW_POINT], align 16
  %16 = alloca %union.EC_SCALAR, align 8
  %17 = alloca %union.EC_SCALAR, align 8
  %18 = alloca %union.EC_SCALAR, align 8
  %19 = alloca %struct.EC_RAW_POINT, align 8
  %20 = alloca %union.EC_SCALAR, align 8
  %21 = alloca %union.EC_SCALAR, align 8
  %22 = alloca %union.EC_SCALAR, align 8
  %23 = alloca %union.EC_SCALAR, align 8
  %24 = alloca %union.EC_SCALAR, align 8
  %25 = alloca %union.EC_SCALAR, align 8
  %26 = alloca %union.EC_SCALAR, align 8
  %27 = alloca %struct.EC_RAW_POINT, align 8
  %28 = alloca %struct.EC_RAW_POINT, align 8
  %29 = alloca %union.EC_SCALAR, align 8
  %30 = alloca %union.EC_SCALAR, align 8
  %31 = alloca [10 x %struct.EC_AFFINE], align 16
  %32 = alloca %union.EC_SCALAR, align 8
  %33 = alloca %union.EC_SCALAR, align 8
  %34 = alloca %struct.cbb_st, align 8
  %35 = alloca %struct.cbb_st, align 8
  %36 = alloca %struct.cbb_st, align 8
  %37 = alloca i8*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca i8*, align 8
  %40 = alloca i8*, align 8
  %41 = alloca i8*, align 8
  %42 = alloca i8*, align 8
  %43 = alloca i8*, align 8
  %44 = alloca %struct.cbb_st, align 8
  %45 = alloca [64 x i8], align 16
  %46 = alloca %struct.EC_AFFINE, align 8
  %47 = alloca %struct.EC_AFFINE, align 8
  %48 = alloca %struct.EC_AFFINE, align 8
  %49 = alloca [3 x %struct.EC_RAW_POINT], align 16
  %50 = alloca [3 x %struct.EC_AFFINE], align 16
  %51 = alloca %struct.cbb_st, align 8
  %52 = alloca %struct.EC_RAW_POINT, align 8
  %53 = alloca %struct.EC_RAW_POINT, align 8
  %54 = alloca %struct.EC_RAW_POINT, align 8
  %55 = alloca %struct.EC_RAW_POINT, align 8
  %56 = alloca %struct.cbs_st, align 8
  %57 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 0
  %58 = load %struct.ec_group_st*, %struct.ec_group_st** %57, align 8
  %59 = bitcast %struct.stack_st_TRUST_TOKEN_PRETOKEN* %2 to %struct.stack_st*
  %60 = tail call i64 @sk_num(%struct.stack_st* %59) #4
  %61 = icmp ult i64 %60, %4
  br i1 %61, label %62, label %63

62:                                               ; preds = %6
  tail call void @ERR_put_error(i32 32, i32 0, i32 105, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 884) #4
  br label %599

63:                                               ; preds = %6
  %64 = tail call %struct.stack_st* @sk_new_null() #4
  %65 = bitcast %struct.stack_st* %64 to %struct.stack_st_TRUST_TOKEN*
  %66 = icmp eq %struct.stack_st* %64, null
  br i1 %66, label %67, label %68

67:                                               ; preds = %63
  tail call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 891) #4
  br label %599

68:                                               ; preds = %63
  %69 = icmp ugt i64 %4, 85401592933840516
  br i1 %69, label %70, label %71

70:                                               ; preds = %68
  tail call void @ERR_put_error(i32 32, i32 0, i32 69, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 897) #4
  br label %599

71:                                               ; preds = %68
  %72 = mul i64 %4, 216
  %73 = tail call i8* @OPENSSL_malloc(i64 %72) #4
  %74 = bitcast i8* %73 to %struct.EC_RAW_POINT*
  %75 = tail call i8* @OPENSSL_malloc(i64 %72) #4
  %76 = bitcast i8* %75 to %struct.EC_RAW_POINT*
  %77 = tail call i8* @OPENSSL_malloc(i64 %72) #4
  %78 = bitcast i8* %77 to %struct.EC_RAW_POINT*
  %79 = tail call i8* @OPENSSL_malloc(i64 %72) #4
  %80 = bitcast i8* %79 to %struct.EC_RAW_POINT*
  %81 = mul i64 %4, 72
  %82 = tail call i8* @OPENSSL_malloc(i64 %81) #4
  %83 = bitcast i8* %82 to %union.EC_SCALAR*
  %84 = bitcast %struct.cbb_st* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 32, i1 false)
  call void @CBB_zero(%struct.cbb_st* nonnull %44) #4
  %85 = icmp ne i8* %73, null
  %86 = icmp ne i8* %75, null
  %87 = and i1 %85, %86
  %88 = icmp ne i8* %77, null
  %89 = and i1 %87, %88
  %90 = icmp ne i8* %79, null
  %91 = and i1 %89, %90
  %92 = icmp ne i8* %82, null
  %93 = and i1 %91, %92
  br i1 %93, label %94, label %171

94:                                               ; preds = %71
  %95 = call i32 @CBB_init(%struct.cbb_st* nonnull %44, i64 0) #4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %171, label %97

97:                                               ; preds = %94
  %98 = load %struct.ec_group_st*, %struct.ec_group_st** %57, align 8
  %99 = getelementptr inbounds %struct.TRUST_TOKEN_CLIENT_KEY, %struct.TRUST_TOKEN_CLIENT_KEY* %1, i64 0, i32 2
  %100 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %98, %struct.EC_AFFINE* %99, i32 4, i8* null, i64 0) #4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %171, label %102

102:                                              ; preds = %97
  %103 = bitcast i8** %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %43, align 8
  %104 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %44, i8** nonnull %43, i64 %100) #4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #4
  br label %171

107:                                              ; preds = %102
  %108 = load i8*, i8** %43, align 8
  %109 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %98, %struct.EC_AFFINE* %99, i32 4, i8* %108, i64 %100) #4
  %110 = icmp eq i64 %109, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #4
  br i1 %110, label %111, label %171

111:                                              ; preds = %107
  %112 = load %struct.ec_group_st*, %struct.ec_group_st** %57, align 8
  %113 = getelementptr inbounds %struct.TRUST_TOKEN_CLIENT_KEY, %struct.TRUST_TOKEN_CLIENT_KEY* %1, i64 0, i32 0
  %114 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %112, %struct.EC_AFFINE* %113, i32 4, i8* null, i64 0) #4
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %171, label %116

116:                                              ; preds = %111
  %117 = bitcast i8** %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %42, align 8
  %118 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %44, i8** nonnull %42, i64 %114) #4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #4
  br label %171

121:                                              ; preds = %116
  %122 = load i8*, i8** %42, align 8
  %123 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %112, %struct.EC_AFFINE* %113, i32 4, i8* %122, i64 %114) #4
  %124 = icmp eq i64 %123, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #4
  br i1 %124, label %125, label %171

125:                                              ; preds = %121
  %126 = load %struct.ec_group_st*, %struct.ec_group_st** %57, align 8
  %127 = getelementptr inbounds %struct.TRUST_TOKEN_CLIENT_KEY, %struct.TRUST_TOKEN_CLIENT_KEY* %1, i64 0, i32 1
  %128 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %126, %struct.EC_AFFINE* %127, i32 4, i8* null, i64 0) #4
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %171, label %130

130:                                              ; preds = %125
  %131 = bitcast i8** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %132 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %44, i8** nonnull %41, i64 %128) #4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #4
  br label %171

135:                                              ; preds = %130
  %136 = load i8*, i8** %41, align 8
  %137 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %126, %struct.EC_AFFINE* %127, i32 4, i8* %136, i64 %128) #4
  %138 = icmp eq i64 %137, %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #4
  br i1 %138, label %139, label %171

139:                                              ; preds = %135
  %140 = icmp eq i64 %4, 0
  br i1 %140, label %424, label %141

141:                                              ; preds = %139
  %142 = getelementptr inbounds [64 x i8], [64 x i8]* %45, i64 0, i64 0
  %143 = bitcast %struct.EC_AFFINE* %46 to i8*
  %144 = bitcast %struct.EC_AFFINE* %47 to i8*
  %145 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 7
  %146 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 5
  %147 = bitcast %struct.EC_AFFINE* %48 to i8*
  %148 = bitcast i8** %40 to i8*
  %149 = bitcast i8** %39 to i8*
  %150 = bitcast i8** %38 to i8*
  %151 = bitcast i8** %37 to i8*
  %152 = bitcast [3 x %struct.EC_RAW_POINT]* %49 to i8*
  %153 = bitcast [3 x %struct.EC_AFFINE]* %50 to i8*
  %154 = getelementptr inbounds [3 x %struct.EC_RAW_POINT], [3 x %struct.EC_RAW_POINT]* %49, i64 0, i64 0
  %155 = getelementptr inbounds [3 x %struct.EC_RAW_POINT], [3 x %struct.EC_RAW_POINT]* %49, i64 0, i64 1
  %156 = getelementptr inbounds [3 x %struct.EC_RAW_POINT], [3 x %struct.EC_RAW_POINT]* %49, i64 0, i64 2
  %157 = getelementptr inbounds [3 x %struct.EC_AFFINE], [3 x %struct.EC_AFFINE]* %50, i64 0, i64 0
  %158 = bitcast %struct.cbb_st* %51 to i8*
  %159 = getelementptr inbounds %struct.ec_group_st, %struct.ec_group_st* %58, i64 0, i32 5
  %160 = bitcast %struct.cbb_st* %36 to i8*
  %161 = bitcast i8** %12 to i8*
  %162 = bitcast i8** %11 to i8*
  %163 = getelementptr inbounds [3 x %struct.EC_AFFINE], [3 x %struct.EC_AFFINE]* %50, i64 0, i64 1
  %164 = bitcast %struct.cbb_st* %35 to i8*
  %165 = bitcast i8** %10 to i8*
  %166 = bitcast i8** %9 to i8*
  %167 = getelementptr inbounds [3 x %struct.EC_AFFINE], [3 x %struct.EC_AFFINE]* %50, i64 0, i64 2
  %168 = bitcast %struct.cbb_st* %34 to i8*
  %169 = bitcast i8** %8 to i8*
  %170 = bitcast i8** %7 to i8*
  br label %174

171:                                              ; preds = %135, %121, %107, %125, %111, %97, %134, %120, %106, %94, %71
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 916) #4
  call void @OPENSSL_free(i8* %73) #4
  call void @OPENSSL_free(i8* %75) #4
  call void @OPENSSL_free(i8* %77) #4
  call void @OPENSSL_free(i8* %79) #4
  call void @OPENSSL_free(i8* %82) #4
  br label %595

172:                                              ; preds = %412
  %173 = icmp eq i64 %414, %4
  br i1 %173, label %415, label %174

174:                                              ; preds = %172, %141
  %175 = phi i64 [ 0, %141 ], [ %414, %172 ]
  %176 = call i8* @sk_value(%struct.stack_st* %59, i64 %175) #4
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %142) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %142, i8 -86, i64 64, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %143) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 -86, i64 144, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %144) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 -86, i64 144, i1 false)
  %177 = call i32 @CBS_copy_bytes(%struct.cbs_st* %3, i8* nonnull %142, i64 64) #4
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %193, label %179

179:                                              ; preds = %174
  %180 = load i8, i8* %145, align 8
  %181 = shl i8 %180, 7
  %182 = ashr exact i8 %181, 7
  %183 = sext i8 %182 to i32
  %184 = call fastcc i32 @cbs_get_prefixed_point(%struct.cbs_st* %3, %struct.ec_group_st* %58, %struct.EC_AFFINE* nonnull %46, i32 %183)
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %193, label %186

186:                                              ; preds = %179
  %187 = load i8, i8* %145, align 8
  %188 = shl i8 %187, 7
  %189 = ashr exact i8 %188, 7
  %190 = sext i8 %189 to i32
  %191 = call fastcc i32 @cbs_get_prefixed_point(%struct.cbs_st* %3, %struct.ec_group_st* %58, %struct.EC_AFFINE* nonnull %47, i32 %190)
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %186, %179, %174
  call void @ERR_put_error(i32 32, i32 0, i32 105, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 930) #4
  br label %412

194:                                              ; preds = %186
  %195 = getelementptr inbounds %struct.EC_RAW_POINT, %struct.EC_RAW_POINT* %74, i64 %175
  %196 = getelementptr inbounds i8, i8* %176, i64 136
  %197 = bitcast i8* %196 to %struct.EC_AFFINE*
  call void @ec_affine_to_jacobian(%struct.ec_group_st* %58, %struct.EC_RAW_POINT* %195, %struct.EC_AFFINE* %197) #4
  %198 = getelementptr inbounds %struct.EC_RAW_POINT, %struct.EC_RAW_POINT* %78, i64 %175
  call void @ec_affine_to_jacobian(%struct.ec_group_st* %58, %struct.EC_RAW_POINT* %198, %struct.EC_AFFINE* nonnull %46) #4
  %199 = getelementptr inbounds %struct.EC_RAW_POINT, %struct.EC_RAW_POINT* %80, i64 %175
  call void @ec_affine_to_jacobian(%struct.ec_group_st* %58, %struct.EC_RAW_POINT* %199, %struct.EC_AFFINE* nonnull %47) #4
  %200 = load i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_AFFINE*, i8*)*, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_AFFINE*, i8*)** %146, align 8
  %201 = getelementptr inbounds %struct.EC_RAW_POINT, %struct.EC_RAW_POINT* %76, i64 %175
  %202 = call i32 %200(%struct.ec_group_st* %58, %struct.EC_RAW_POINT* %201, %struct.EC_AFFINE* %197, i8* nonnull %142) #4
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %412, label %204

204:                                              ; preds = %194
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %147) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 144, i1 false)
  %205 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* %197, i32 4, i8* null, i64 0) #4
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %251, label %207

207:                                              ; preds = %204
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %208 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %44, i8** nonnull %40, i64 %205) #4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #4
  br label %251

211:                                              ; preds = %207
  %212 = load i8*, i8** %40, align 8
  %213 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* %197, i32 4, i8* %212, i64 %205) #4
  %214 = icmp eq i64 %213, %205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #4
  br i1 %214, label %215, label %251

215:                                              ; preds = %211
  %216 = call i32 @ec_jacobian_to_affine(%struct.ec_group_st* %58, %struct.EC_AFFINE* nonnull %48, %struct.EC_RAW_POINT* %201) #4
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %251, label %218

218:                                              ; preds = %215
  %219 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* nonnull %48, i32 4, i8* null, i64 0) #4
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %251, label %221

221:                                              ; preds = %218
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %39, align 8
  %222 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %44, i8** nonnull %39, i64 %219) #4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %221
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #4
  br label %251

225:                                              ; preds = %221
  %226 = load i8*, i8** %39, align 8
  %227 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* nonnull %48, i32 4, i8* %226, i64 %219) #4
  %228 = icmp eq i64 %227, %219
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #4
  br i1 %228, label %229, label %251

229:                                              ; preds = %225
  %230 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* nonnull %46, i32 4, i8* null, i64 0) #4
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %251, label %232

232:                                              ; preds = %229
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %38, align 8
  %233 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %44, i8** nonnull %38, i64 %230) #4
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #4
  br label %251

236:                                              ; preds = %232
  %237 = load i8*, i8** %38, align 8
  %238 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* nonnull %46, i32 4, i8* %237, i64 %230) #4
  %239 = icmp eq i64 %238, %230
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #4
  br i1 %239, label %240, label %251

240:                                              ; preds = %236
  %241 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* nonnull %47, i32 4, i8* null, i64 0) #4
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %251, label %243

243:                                              ; preds = %240
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %37, align 8
  %244 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %44, i8** nonnull %37, i64 %241) #4
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #4
  br label %251

247:                                              ; preds = %243
  %248 = load i8*, i8** %37, align 8
  %249 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* nonnull %47, i32 4, i8* %248, i64 %241) #4
  %250 = icmp eq i64 %249, %241
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #4
  br i1 %250, label %252, label %251

251:                                              ; preds = %247, %236, %225, %211, %240, %229, %218, %204, %246, %235, %224, %210, %215
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 947) #4
  br label %410

252:                                              ; preds = %247
  call void @llvm.lifetime.start.p0i8(i64 648, i8* nonnull %152) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %152, i8 -86, i64 648, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %153) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %153, i8 -86, i64 432, i1 false)
  %253 = getelementptr inbounds i8, i8* %176, i64 64
  %254 = bitcast i8* %253 to %union.EC_SCALAR*
  %255 = call i32 @ec_point_mul_scalar(%struct.ec_group_st* %58, %struct.EC_RAW_POINT* nonnull %154, %struct.EC_RAW_POINT* %201, %union.EC_SCALAR* %254) #4
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %408, label %257

257:                                              ; preds = %252
  %258 = call i32 @ec_point_mul_scalar(%struct.ec_group_st* %58, %struct.EC_RAW_POINT* %155, %struct.EC_RAW_POINT* %198, %union.EC_SCALAR* %254) #4
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %408, label %260

260:                                              ; preds = %257
  %261 = call i32 @ec_point_mul_scalar(%struct.ec_group_st* %58, %struct.EC_RAW_POINT* %156, %struct.EC_RAW_POINT* %199, %union.EC_SCALAR* %254) #4
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %408, label %263

263:                                              ; preds = %260
  %264 = call i32 @ec_jacobian_to_affine_batch(%struct.ec_group_st* %58, %struct.EC_AFFINE* nonnull %157, %struct.EC_RAW_POINT* nonnull %154, i64 3) #4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %408, label %266

266:                                              ; preds = %263
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %158) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -86, i64 32, i1 false)
  %267 = call i32 @BN_num_bytes(%struct.bignum_st* %159) #4
  %268 = shl i32 %267, 1
  %269 = or i32 %268, 1
  %270 = zext i32 %269 to i64
  %271 = mul nuw nsw i64 %270, 3
  %272 = add nuw nsw i64 %271, 74
  %273 = call i32 @CBB_init(%struct.cbb_st* nonnull %51, i64 %272) #4
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %395, label %275

275:                                              ; preds = %266
  %276 = call i32 @CBB_add_u32(%struct.cbb_st* nonnull %51, i32 %5) #4
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %395, label %278

278:                                              ; preds = %275
  %279 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %51, i8* %176, i64 64) #4
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %395, label %281

281:                                              ; preds = %278
  %282 = load i8, i8* %145, align 8
  %283 = and i8 %282, 1
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %304, label %285

285:                                              ; preds = %281
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %160) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 32, i1 false) #4
  %286 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %51, %struct.cbb_st* nonnull %36) #4
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %303, label %288

288:                                              ; preds = %285
  %289 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* nonnull %157, i32 4, i8* null, i64 0) #4
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %303, label %291

291:                                              ; preds = %288
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %292 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %36, i8** nonnull %12, i64 %289) #4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %291
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #4
  br label %303

295:                                              ; preds = %291
  %296 = load i8*, i8** %12, align 8
  %297 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* nonnull %157, i32 4, i8* %296, i64 %289) #4
  %298 = icmp eq i64 %297, %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #4
  br i1 %298, label %299, label %303

299:                                              ; preds = %295
  %300 = call i32 @CBB_flush(%struct.cbb_st* nonnull %51) #4
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %303, label %302

302:                                              ; preds = %299
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %160) #4
  br label %318

303:                                              ; preds = %295, %288, %294, %299, %285
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %160) #4
  br label %395

304:                                              ; preds = %281
  %305 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* nonnull %157, i32 4, i8* null, i64 0) #4
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %395, label %307

307:                                              ; preds = %304
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %11, align 8
  %308 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %51, i8** nonnull %11, i64 %305) #4
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %311

310:                                              ; preds = %307
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #4
  br label %395

311:                                              ; preds = %307
  %312 = load i8*, i8** %11, align 8
  %313 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* nonnull %157, i32 4, i8* %312, i64 %305) #4
  %314 = icmp eq i64 %313, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #4
  br i1 %314, label %315, label %395

315:                                              ; preds = %311
  %316 = call i32 @CBB_flush(%struct.cbb_st* nonnull %51) #4
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %395, label %318

318:                                              ; preds = %315, %302
  %319 = load i8, i8* %145, align 8
  %320 = and i8 %319, 1
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %341, label %322

322:                                              ; preds = %318
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %164) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %164, i8 -86, i64 32, i1 false) #4
  %323 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %51, %struct.cbb_st* nonnull %35) #4
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %340, label %325

325:                                              ; preds = %322
  %326 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* %163, i32 4, i8* null, i64 0) #4
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %340, label %328

328:                                              ; preds = %325
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %329 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %35, i8** nonnull %10, i64 %326) #4
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %332

331:                                              ; preds = %328
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #4
  br label %340

332:                                              ; preds = %328
  %333 = load i8*, i8** %10, align 8
  %334 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* %163, i32 4, i8* %333, i64 %326) #4
  %335 = icmp eq i64 %334, %326
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #4
  br i1 %335, label %336, label %340

336:                                              ; preds = %332
  %337 = call i32 @CBB_flush(%struct.cbb_st* nonnull %51) #4
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %340, label %339

339:                                              ; preds = %336
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %164) #4
  br label %355

340:                                              ; preds = %332, %325, %331, %336, %322
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %164) #4
  br label %395

341:                                              ; preds = %318
  %342 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* %163, i32 4, i8* null, i64 0) #4
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %395, label %344

344:                                              ; preds = %341
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %345 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %51, i8** nonnull %9, i64 %342) #4
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %347, label %348

347:                                              ; preds = %344
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #4
  br label %395

348:                                              ; preds = %344
  %349 = load i8*, i8** %9, align 8
  %350 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* %163, i32 4, i8* %349, i64 %342) #4
  %351 = icmp eq i64 %350, %342
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #4
  br i1 %351, label %352, label %395

352:                                              ; preds = %348
  %353 = call i32 @CBB_flush(%struct.cbb_st* nonnull %51) #4
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %395, label %355

355:                                              ; preds = %352, %339
  %356 = load i8, i8* %145, align 8
  %357 = and i8 %356, 1
  %358 = icmp eq i8 %357, 0
  br i1 %358, label %378, label %359

359:                                              ; preds = %355
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %168) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 32, i1 false) #4
  %360 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %51, %struct.cbb_st* nonnull %34) #4
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %377, label %362

362:                                              ; preds = %359
  %363 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* %167, i32 4, i8* null, i64 0) #4
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %377, label %365

365:                                              ; preds = %362
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %366 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %34, i8** nonnull %8, i64 %363) #4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %369

368:                                              ; preds = %365
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #4
  br label %377

369:                                              ; preds = %365
  %370 = load i8*, i8** %8, align 8
  %371 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* %167, i32 4, i8* %370, i64 %363) #4
  %372 = icmp eq i64 %371, %363
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #4
  br i1 %372, label %373, label %377

373:                                              ; preds = %369
  %374 = call i32 @CBB_flush(%struct.cbb_st* nonnull %51) #4
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %377, label %376

376:                                              ; preds = %373
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %168) #4
  br label %392

377:                                              ; preds = %369, %362, %368, %373, %359
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %168) #4
  br label %395

378:                                              ; preds = %355
  %379 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* %167, i32 4, i8* null, i64 0) #4
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %395, label %381

381:                                              ; preds = %378
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %170) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %382 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %51, i8** nonnull %7, i64 %379) #4
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %385

384:                                              ; preds = %381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #4
  br label %395

385:                                              ; preds = %381
  %386 = load i8*, i8** %7, align 8
  %387 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %58, %struct.EC_AFFINE* %167, i32 4, i8* %386, i64 %379) #4
  %388 = icmp eq i64 %387, %379
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #4
  br i1 %388, label %389, label %395

389:                                              ; preds = %385
  %390 = call i32 @CBB_flush(%struct.cbb_st* nonnull %51) #4
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %395, label %392

392:                                              ; preds = %389, %376
  %393 = call i32 @CBB_flush(%struct.cbb_st* nonnull %51) #4
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %396

395:                                              ; preds = %311, %348, %385, %378, %384, %389, %377, %341, %347, %352, %340, %304, %310, %315, %303, %392, %278, %275, %266
  call void @CBB_cleanup(%struct.cbb_st* nonnull %51) #4
  br label %406

396:                                              ; preds = %392
  %397 = call i8* @CBB_data(%struct.cbb_st* nonnull %51) #4
  %398 = call i64 @CBB_len(%struct.cbb_st* nonnull %51) #4
  %399 = call %struct.trust_token_st* @TRUST_TOKEN_new(i8* %397, i64 %398) #4
  call void @CBB_cleanup(%struct.cbb_st* nonnull %51) #4
  %400 = icmp eq %struct.trust_token_st* %399, null
  br i1 %400, label %405, label %401

401:                                              ; preds = %396
  %402 = bitcast %struct.trust_token_st* %399 to i8*
  %403 = call i64 @sk_push(%struct.stack_st* nonnull %64, i8* nonnull %402) #4
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %405, label %406

405:                                              ; preds = %401, %396
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 985) #4
  call void @TRUST_TOKEN_free(%struct.trust_token_st* %399) #4
  br label %406

406:                                              ; preds = %405, %401, %395
  %407 = phi i32 [ 2, %395 ], [ 2, %405 ], [ 0, %401 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %158) #4
  br label %408

408:                                              ; preds = %252, %257, %260, %263, %406
  %409 = phi i32 [ %407, %406 ], [ 2, %263 ], [ 2, %260 ], [ 2, %257 ], [ 2, %252 ]
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %153) #4
  call void @llvm.lifetime.end.p0i8(i64 648, i8* nonnull %152) #4
  br label %410

410:                                              ; preds = %251, %408
  %411 = phi i32 [ %409, %408 ], [ 2, %251 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %147) #4
  br label %412

412:                                              ; preds = %194, %193, %410
  %413 = phi i32 [ %411, %410 ], [ 2, %193 ], [ 2, %194 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %144) #4
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %143) #4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %142) #4
  %414 = add nuw i64 %175, 1
  switch i32 %413, label %597 [
    i32 0, label %172
    i32 2, label %587
  ]

415:                                              ; preds = %172
  br i1 %140, label %424, label %418

416:                                              ; preds = %418
  %417 = icmp eq i64 %423, %4
  br i1 %417, label %424, label %418

418:                                              ; preds = %415, %416
  %419 = phi i64 [ %423, %416 ], [ 0, %415 ]
  %420 = getelementptr inbounds %union.EC_SCALAR, %union.EC_SCALAR* %83, i64 %419
  %421 = call fastcc i32 @hash_c_batch(%struct.PMBTOKEN_METHOD* %0, %union.EC_SCALAR* %420, %struct.cbb_st* nonnull %44, i64 %419)
  %422 = icmp eq i32 %421, 0
  %423 = add nuw i64 %419, 1
  br i1 %422, label %588, label %416

424:                                              ; preds = %416, %139, %415
  %425 = bitcast %struct.EC_RAW_POINT* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %425, i8 -86, i64 216, i1 false)
  %426 = bitcast %struct.EC_RAW_POINT* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %426, i8 -86, i64 216, i1 false)
  %427 = bitcast %struct.EC_RAW_POINT* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %427, i8 -86, i64 216, i1 false)
  %428 = bitcast %struct.EC_RAW_POINT* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %428, i8 -86, i64 216, i1 false)
  %429 = call i32 @ec_point_mul_scalar_public_batch(%struct.ec_group_st* %58, %struct.EC_RAW_POINT* nonnull %52, %union.EC_SCALAR* null, %struct.EC_RAW_POINT* nonnull %74, %union.EC_SCALAR* nonnull %83, i64 %4) #4
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %594, label %431

431:                                              ; preds = %424
  %432 = call i32 @ec_point_mul_scalar_public_batch(%struct.ec_group_st* %58, %struct.EC_RAW_POINT* nonnull %53, %union.EC_SCALAR* null, %struct.EC_RAW_POINT* nonnull %76, %union.EC_SCALAR* nonnull %83, i64 %4) #4
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %593, label %434

434:                                              ; preds = %431
  %435 = call i32 @ec_point_mul_scalar_public_batch(%struct.ec_group_st* %58, %struct.EC_RAW_POINT* nonnull %54, %union.EC_SCALAR* null, %struct.EC_RAW_POINT* nonnull %78, %union.EC_SCALAR* nonnull %83, i64 %4) #4
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %592, label %437

437:                                              ; preds = %434
  %438 = call i32 @ec_point_mul_scalar_public_batch(%struct.ec_group_st* %58, %struct.EC_RAW_POINT* nonnull %55, %union.EC_SCALAR* null, %struct.EC_RAW_POINT* nonnull %80, %union.EC_SCALAR* nonnull %83, i64 %4) #4
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %591, label %440

440:                                              ; preds = %437
  %441 = bitcast %struct.cbs_st* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %441, i8 -86, i64 16, i1 false)
  %442 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* %3, %struct.cbs_st* nonnull %56) #4
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %590, label %444

444:                                              ; preds = %440
  %445 = load %struct.ec_group_st*, %struct.ec_group_st** %57, align 8
  %446 = getelementptr inbounds %struct.ec_group_st, %struct.ec_group_st* %445, i64 0, i32 1
  %447 = load %struct.ec_point_st*, %struct.ec_point_st** %446, align 8
  %448 = getelementptr inbounds %struct.ec_point_st, %struct.ec_point_st* %447, i64 0, i32 1
  %449 = bitcast [10 x %struct.EC_RAW_POINT]* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2160, i8* nonnull %449) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %449, i8 -86, i64 2160, i1 false) #4
  %450 = bitcast %union.EC_SCALAR* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %450) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %450, i8 -86, i64 72, i1 false) #4
  %451 = bitcast %union.EC_SCALAR* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %451) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %451, i8 -86, i64 72, i1 false) #4
  %452 = bitcast %union.EC_SCALAR* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %452) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %452, i8 -86, i64 72, i1 false) #4
  %453 = call fastcc i32 @scalar_from_cbs(%struct.cbs_st* nonnull %56, %struct.ec_group_st* %445, %union.EC_SCALAR* nonnull %16) #4
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %461, label %455

455:                                              ; preds = %444
  %456 = call fastcc i32 @scalar_from_cbs(%struct.cbs_st* nonnull %56, %struct.ec_group_st* %445, %union.EC_SCALAR* nonnull %17) #4
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %461, label %458

458:                                              ; preds = %455
  %459 = call fastcc i32 @scalar_from_cbs(%struct.cbs_st* nonnull %56, %struct.ec_group_st* %445, %union.EC_SCALAR* nonnull %18) #4
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %461, label %462

461:                                              ; preds = %458, %455, %444
  call void @ERR_put_error(i32 32, i32 0, i32 105, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 647) #4
  br label %581

462:                                              ; preds = %458
  %463 = bitcast %struct.EC_RAW_POINT* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %463) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %463, i8 -86, i64 216, i1 false) #4
  call void @ec_affine_to_jacobian(%struct.ec_group_st* %445, %struct.EC_RAW_POINT* nonnull %19, %struct.EC_AFFINE* %99) #4
  %464 = bitcast %union.EC_SCALAR* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %464) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %464, i8 -86, i64 72, i1 false) #4
  call void @ec_scalar_neg(%struct.ec_group_st* %445, %union.EC_SCALAR* nonnull %20, %union.EC_SCALAR* nonnull %16) #4
  %465 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %15, i64 0, i64 4
  %466 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 3
  %467 = bitcast [3 x %struct.EC_RAW_POINT]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 648, i8* nonnull %467) #4
  %468 = getelementptr inbounds [3 x %struct.EC_RAW_POINT], [3 x %struct.EC_RAW_POINT]* %13, i64 0, i64 0
  %469 = bitcast %struct.EC_RAW_POINT* %448 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %467, i8* align 8 %469, i64 216, i1 false) #4
  %470 = getelementptr inbounds [3 x %struct.EC_RAW_POINT], [3 x %struct.EC_RAW_POINT]* %13, i64 0, i64 1
  %471 = bitcast %struct.EC_RAW_POINT* %470 to i8*
  %472 = bitcast %struct.EC_RAW_POINT* %466 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %471, i8* align 8 %472, i64 216, i1 false) #4
  %473 = getelementptr inbounds [3 x %struct.EC_RAW_POINT], [3 x %struct.EC_RAW_POINT]* %13, i64 0, i64 2
  %474 = bitcast %struct.EC_RAW_POINT* %473 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %474, i8* nonnull align 8 %463, i64 216, i1 false) #4
  %475 = bitcast [3 x %union.EC_SCALAR]* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %475) #4
  %476 = getelementptr inbounds [3 x %union.EC_SCALAR], [3 x %union.EC_SCALAR]* %14, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %475, i8* nonnull align 8 %451, i64 72, i1 false) #4
  %477 = getelementptr inbounds [3 x %union.EC_SCALAR], [3 x %union.EC_SCALAR]* %14, i64 0, i64 1
  %478 = bitcast %union.EC_SCALAR* %477 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %478, i8* nonnull align 8 %452, i64 72, i1 false) #4
  %479 = getelementptr inbounds [3 x %union.EC_SCALAR], [3 x %union.EC_SCALAR]* %14, i64 0, i64 2
  %480 = bitcast %union.EC_SCALAR* %479 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %480, i8* nonnull align 8 %464, i64 72, i1 false) #4
  %481 = call i32 @ec_point_mul_scalar_public_batch(%struct.ec_group_st* %445, %struct.EC_RAW_POINT* %465, %union.EC_SCALAR* null, %struct.EC_RAW_POINT* nonnull %468, %union.EC_SCALAR* nonnull %476, i64 3) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %475) #4
  call void @llvm.lifetime.end.p0i8(i64 648, i8* nonnull %467) #4
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %579, label %483

483:                                              ; preds = %462
  %484 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %15, i64 0, i64 5
  call void @llvm.lifetime.start.p0i8(i64 648, i8* nonnull %467) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %467, i8* nonnull align 8 %425, i64 216, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %471, i8* nonnull align 8 %426, i64 216, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %474, i8* nonnull align 8 %428, i64 216, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %475) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %475, i8* nonnull align 8 %451, i64 72, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %478, i8* nonnull align 8 %452, i64 72, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %480, i8* nonnull align 8 %464, i64 72, i1 false) #4
  %485 = call i32 @ec_point_mul_scalar_public_batch(%struct.ec_group_st* %445, %struct.EC_RAW_POINT* %484, %union.EC_SCALAR* null, %struct.EC_RAW_POINT* nonnull %468, %union.EC_SCALAR* nonnull %476, i64 3) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %475) #4
  call void @llvm.lifetime.end.p0i8(i64 648, i8* nonnull %467) #4
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %579, label %487

487:                                              ; preds = %483
  %488 = bitcast %union.EC_SCALAR* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %488) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %488, i8 -86, i64 72, i1 false) #4
  %489 = bitcast %union.EC_SCALAR* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %489) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %489, i8 -86, i64 72, i1 false) #4
  %490 = bitcast %union.EC_SCALAR* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %490) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %490, i8 -86, i64 72, i1 false) #4
  %491 = bitcast %union.EC_SCALAR* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %491) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %491, i8 -86, i64 72, i1 false) #4
  %492 = bitcast %union.EC_SCALAR* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %492) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %492, i8 -86, i64 72, i1 false) #4
  %493 = bitcast %union.EC_SCALAR* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %493) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %493, i8 -86, i64 72, i1 false) #4
  %494 = call fastcc i32 @scalar_from_cbs(%struct.cbs_st* nonnull %56, %struct.ec_group_st* %445, %union.EC_SCALAR* nonnull %21) #4
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %511, label %496

496:                                              ; preds = %487
  %497 = call fastcc i32 @scalar_from_cbs(%struct.cbs_st* nonnull %56, %struct.ec_group_st* %445, %union.EC_SCALAR* nonnull %22) #4
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %511, label %499

499:                                              ; preds = %496
  %500 = call fastcc i32 @scalar_from_cbs(%struct.cbs_st* nonnull %56, %struct.ec_group_st* %445, %union.EC_SCALAR* nonnull %23) #4
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %511, label %502

502:                                              ; preds = %499
  %503 = call fastcc i32 @scalar_from_cbs(%struct.cbs_st* nonnull %56, %struct.ec_group_st* %445, %union.EC_SCALAR* nonnull %24) #4
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %511, label %505

505:                                              ; preds = %502
  %506 = call fastcc i32 @scalar_from_cbs(%struct.cbs_st* nonnull %56, %struct.ec_group_st* %445, %union.EC_SCALAR* nonnull %25) #4
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %511, label %508

508:                                              ; preds = %505
  %509 = call fastcc i32 @scalar_from_cbs(%struct.cbs_st* nonnull %56, %struct.ec_group_st* %445, %union.EC_SCALAR* nonnull %26) #4
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %512

511:                                              ; preds = %508, %505, %502, %499, %496, %487
  call void @ERR_put_error(i32 32, i32 0, i32 105, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 671) #4
  br label %577

512:                                              ; preds = %508
  %513 = bitcast %struct.EC_RAW_POINT* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %513) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %513, i8 -86, i64 216, i1 false) #4
  %514 = bitcast %struct.EC_RAW_POINT* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %514) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %514, i8 -86, i64 216, i1 false) #4
  call void @ec_affine_to_jacobian(%struct.ec_group_st* %445, %struct.EC_RAW_POINT* nonnull %27, %struct.EC_AFFINE* %113) #4
  call void @ec_affine_to_jacobian(%struct.ec_group_st* %445, %struct.EC_RAW_POINT* nonnull %28, %struct.EC_AFFINE* %127) #4
  %515 = bitcast %union.EC_SCALAR* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %515) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %515, i8 -86, i64 72, i1 false) #4
  %516 = bitcast %union.EC_SCALAR* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %516) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %516, i8 -86, i64 72, i1 false) #4
  call void @ec_scalar_neg(%struct.ec_group_st* %445, %union.EC_SCALAR* nonnull %29, %union.EC_SCALAR* nonnull %21) #4
  call void @ec_scalar_neg(%struct.ec_group_st* %445, %union.EC_SCALAR* nonnull %30, %union.EC_SCALAR* nonnull %22) #4
  %517 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %15, i64 0, i64 6
  call void @llvm.lifetime.start.p0i8(i64 648, i8* nonnull %467) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %467, i8* align 8 %469, i64 216, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %471, i8* align 8 %472, i64 216, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %474, i8* nonnull align 8 %513, i64 216, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %475) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %475, i8* nonnull align 8 %490, i64 72, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %478, i8* nonnull align 8 %492, i64 72, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %480, i8* nonnull align 8 %515, i64 72, i1 false) #4
  %518 = call i32 @ec_point_mul_scalar_public_batch(%struct.ec_group_st* %445, %struct.EC_RAW_POINT* %517, %union.EC_SCALAR* null, %struct.EC_RAW_POINT* nonnull %468, %union.EC_SCALAR* nonnull %476, i64 3) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %475) #4
  call void @llvm.lifetime.end.p0i8(i64 648, i8* nonnull %467) #4
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %575, label %520

520:                                              ; preds = %512
  %521 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %15, i64 0, i64 7
  call void @llvm.lifetime.start.p0i8(i64 648, i8* nonnull %467) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %467, i8* nonnull align 8 %425, i64 216, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %471, i8* nonnull align 8 %426, i64 216, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %474, i8* nonnull align 8 %427, i64 216, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %475) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %475, i8* nonnull align 8 %490, i64 72, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %478, i8* nonnull align 8 %492, i64 72, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %480, i8* nonnull align 8 %515, i64 72, i1 false) #4
  %522 = call i32 @ec_point_mul_scalar_public_batch(%struct.ec_group_st* %445, %struct.EC_RAW_POINT* %521, %union.EC_SCALAR* null, %struct.EC_RAW_POINT* nonnull %468, %union.EC_SCALAR* nonnull %476, i64 3) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %475) #4
  call void @llvm.lifetime.end.p0i8(i64 648, i8* nonnull %467) #4
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %575, label %524

524:                                              ; preds = %520
  %525 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %15, i64 0, i64 8
  call void @llvm.lifetime.start.p0i8(i64 648, i8* nonnull %467) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %467, i8* align 8 %469, i64 216, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %471, i8* align 8 %472, i64 216, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %474, i8* nonnull align 8 %514, i64 216, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %475) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %475, i8* nonnull align 8 %491, i64 72, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %478, i8* nonnull align 8 %493, i64 72, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %480, i8* nonnull align 8 %516, i64 72, i1 false) #4
  %526 = call i32 @ec_point_mul_scalar_public_batch(%struct.ec_group_st* %445, %struct.EC_RAW_POINT* %525, %union.EC_SCALAR* null, %struct.EC_RAW_POINT* nonnull %468, %union.EC_SCALAR* nonnull %476, i64 3) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %475) #4
  call void @llvm.lifetime.end.p0i8(i64 648, i8* nonnull %467) #4
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %575, label %528

528:                                              ; preds = %524
  %529 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %15, i64 0, i64 9
  call void @llvm.lifetime.start.p0i8(i64 648, i8* nonnull %467) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %467, i8* nonnull align 8 %425, i64 216, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %471, i8* nonnull align 8 %426, i64 216, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %474, i8* nonnull align 8 %427, i64 216, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %475) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %475, i8* nonnull align 8 %491, i64 72, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %478, i8* nonnull align 8 %493, i64 72, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %480, i8* nonnull align 8 %516, i64 72, i1 false) #4
  %530 = call i32 @ec_point_mul_scalar_public_batch(%struct.ec_group_st* %445, %struct.EC_RAW_POINT* %529, %union.EC_SCALAR* null, %struct.EC_RAW_POINT* nonnull %468, %union.EC_SCALAR* nonnull %476, i64 3) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %475) #4
  call void @llvm.lifetime.end.p0i8(i64 648, i8* nonnull %467) #4
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %575, label %532

532:                                              ; preds = %528
  %533 = bitcast [10 x %struct.EC_AFFINE]* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1440, i8* nonnull %533) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %533, i8 -86, i64 1440, i1 false) #4
  %534 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %15, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %449, i8* nonnull align 8 %425, i64 216, i1 false) #4
  %535 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %15, i64 0, i64 1
  %536 = bitcast %struct.EC_RAW_POINT* %535 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %536, i8* nonnull align 8 %426, i64 216, i1 false) #4
  %537 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %15, i64 0, i64 2
  %538 = bitcast %struct.EC_RAW_POINT* %537 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %538, i8* nonnull align 8 %427, i64 216, i1 false) #4
  %539 = getelementptr inbounds [10 x %struct.EC_RAW_POINT], [10 x %struct.EC_RAW_POINT]* %15, i64 0, i64 3
  %540 = bitcast %struct.EC_RAW_POINT* %539 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %540, i8* nonnull align 8 %428, i64 216, i1 false) #4
  %541 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %31, i64 0, i64 0
  %542 = call i32 @ec_jacobian_to_affine_batch(%struct.ec_group_st* %445, %struct.EC_AFFINE* nonnull %541, %struct.EC_RAW_POINT* nonnull %534, i64 10) #4
  %543 = icmp eq i32 %542, 0
  br i1 %543, label %573, label %544

544:                                              ; preds = %532
  %545 = bitcast %union.EC_SCALAR* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %545) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %545, i8 -86, i64 72, i1 false) #4
  %546 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %31, i64 0, i64 1
  %547 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %31, i64 0, i64 3
  %548 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %31, i64 0, i64 4
  %549 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %31, i64 0, i64 5
  %550 = call fastcc i32 @hash_c_dleq(%struct.PMBTOKEN_METHOD* %0, %union.EC_SCALAR* nonnull %32, %struct.EC_AFFINE* %99, %struct.EC_AFFINE* nonnull %541, %struct.EC_AFFINE* %546, %struct.EC_AFFINE* %547, %struct.EC_AFFINE* %548, %struct.EC_AFFINE* %549) #4
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %571, label %552

552:                                              ; preds = %544
  %553 = call i32 @ec_scalar_equal_vartime(%struct.ec_group_st* %445, %union.EC_SCALAR* nonnull %16, %union.EC_SCALAR* nonnull %32) #4
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %555, label %556

555:                                              ; preds = %552
  call void @ERR_put_error(i32 32, i32 0, i32 114, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 711) #4
  br label %571

556:                                              ; preds = %552
  %557 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %31, i64 0, i64 2
  %558 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %31, i64 0, i64 6
  %559 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %31, i64 0, i64 7
  %560 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %31, i64 0, i64 8
  %561 = getelementptr inbounds [10 x %struct.EC_AFFINE], [10 x %struct.EC_AFFINE]* %31, i64 0, i64 9
  %562 = call fastcc i32 @hash_c_dleqor(%struct.PMBTOKEN_METHOD* %0, %union.EC_SCALAR* nonnull %32, %struct.EC_AFFINE* %113, %struct.EC_AFFINE* %127, %struct.EC_AFFINE* nonnull %541, %struct.EC_AFFINE* %546, %struct.EC_AFFINE* %557, %struct.EC_AFFINE* %558, %struct.EC_AFFINE* %559, %struct.EC_AFFINE* %560, %struct.EC_AFFINE* %561) #4
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %571, label %564

564:                                              ; preds = %556
  %565 = bitcast %union.EC_SCALAR* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %565) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %565, i8 -86, i64 72, i1 false) #4
  call void @ec_scalar_add(%struct.ec_group_st* %445, %union.EC_SCALAR* nonnull %33, %union.EC_SCALAR* nonnull %21, %union.EC_SCALAR* nonnull %22) #4
  %566 = call i32 @ec_scalar_equal_vartime(%struct.ec_group_st* %445, %union.EC_SCALAR* nonnull %33, %union.EC_SCALAR* nonnull %32) #4
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %568, label %569

568:                                              ; preds = %564
  call void @ERR_put_error(i32 32, i32 0, i32 114, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 727) #4
  br label %569

569:                                              ; preds = %568, %564
  %570 = phi i32 [ 0, %568 ], [ 1, %564 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %565) #4
  br label %571

571:                                              ; preds = %569, %556, %555, %544
  %572 = phi i32 [ %570, %569 ], [ 0, %555 ], [ 0, %544 ], [ 0, %556 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %545) #4
  br label %573

573:                                              ; preds = %571, %532
  %574 = phi i32 [ %572, %571 ], [ 0, %532 ]
  call void @llvm.lifetime.end.p0i8(i64 1440, i8* nonnull %533) #4
  br label %575

575:                                              ; preds = %573, %528, %524, %520, %512
  %576 = phi i32 [ %574, %573 ], [ 0, %528 ], [ 0, %524 ], [ 0, %520 ], [ 0, %512 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %516) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %515) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %514) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %513) #4
  br label %577

577:                                              ; preds = %575, %511
  %578 = phi i32 [ %576, %575 ], [ 0, %511 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %493) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %492) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %491) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %490) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %489) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %488) #4
  br label %579

579:                                              ; preds = %577, %483, %462
  %580 = phi i32 [ %578, %577 ], [ 0, %483 ], [ 0, %462 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %464) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %463) #4
  br label %581

581:                                              ; preds = %461, %579
  %582 = phi i32 [ %580, %579 ], [ 0, %461 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %452) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %451) #4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %450) #4
  call void @llvm.lifetime.end.p0i8(i64 2160, i8* nonnull %449) #4
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %589, label %584

584:                                              ; preds = %581
  %585 = call i64 @CBS_len(%struct.cbs_st* nonnull %56) #4
  %586 = icmp eq i64 %585, 0
  call void @OPENSSL_free(i8* nonnull %73) #4
  call void @OPENSSL_free(i8* nonnull %75) #4
  call void @OPENSSL_free(i8* nonnull %77) #4
  call void @OPENSSL_free(i8* nonnull %79) #4
  call void @OPENSSL_free(i8* nonnull %82) #4
  call void @CBB_cleanup(%struct.cbb_st* nonnull %44) #4
  br i1 %586, label %597, label %596

587:                                              ; preds = %412
  call void @OPENSSL_free(i8* nonnull %73) #4
  call void @OPENSSL_free(i8* nonnull %75) #4
  call void @OPENSSL_free(i8* nonnull %77) #4
  call void @OPENSSL_free(i8* nonnull %79) #4
  call void @OPENSSL_free(i8* nonnull %82) #4
  br label %595

588:                                              ; preds = %418
  call void @OPENSSL_free(i8* nonnull %73) #4
  call void @OPENSSL_free(i8* nonnull %75) #4
  call void @OPENSSL_free(i8* nonnull %77) #4
  call void @OPENSSL_free(i8* nonnull %79) #4
  call void @OPENSSL_free(i8* nonnull %82) #4
  br label %595

589:                                              ; preds = %581
  call void @OPENSSL_free(i8* nonnull %73) #4
  call void @OPENSSL_free(i8* nonnull %75) #4
  call void @OPENSSL_free(i8* nonnull %77) #4
  call void @OPENSSL_free(i8* nonnull %79) #4
  call void @OPENSSL_free(i8* nonnull %82) #4
  br label %595

590:                                              ; preds = %440
  call void @OPENSSL_free(i8* nonnull %73) #4
  call void @OPENSSL_free(i8* nonnull %75) #4
  call void @OPENSSL_free(i8* nonnull %77) #4
  call void @OPENSSL_free(i8* nonnull %79) #4
  call void @OPENSSL_free(i8* nonnull %82) #4
  br label %595

591:                                              ; preds = %437
  call void @OPENSSL_free(i8* nonnull %73) #4
  call void @OPENSSL_free(i8* nonnull %75) #4
  call void @OPENSSL_free(i8* nonnull %77) #4
  call void @OPENSSL_free(i8* nonnull %79) #4
  call void @OPENSSL_free(i8* nonnull %82) #4
  br label %595

592:                                              ; preds = %434
  call void @OPENSSL_free(i8* nonnull %73) #4
  call void @OPENSSL_free(i8* nonnull %75) #4
  call void @OPENSSL_free(i8* nonnull %77) #4
  call void @OPENSSL_free(i8* nonnull %79) #4
  call void @OPENSSL_free(i8* nonnull %82) #4
  br label %595

593:                                              ; preds = %431
  call void @OPENSSL_free(i8* nonnull %73) #4
  call void @OPENSSL_free(i8* nonnull %75) #4
  call void @OPENSSL_free(i8* nonnull %77) #4
  call void @OPENSSL_free(i8* nonnull %79) #4
  call void @OPENSSL_free(i8* nonnull %82) #4
  br label %595

594:                                              ; preds = %424
  call void @OPENSSL_free(i8* nonnull %73) #4
  call void @OPENSSL_free(i8* nonnull %75) #4
  call void @OPENSSL_free(i8* nonnull %77) #4
  call void @OPENSSL_free(i8* nonnull %79) #4
  call void @OPENSSL_free(i8* nonnull %82) #4
  br label %595

595:                                              ; preds = %587, %588, %589, %590, %591, %592, %593, %594, %171
  call void @CBB_cleanup(%struct.cbb_st* nonnull %44) #4
  br label %596

596:                                              ; preds = %595, %584
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %64, void (void (i8*)*, i8*)* nonnull @sk_TRUST_TOKEN_call_free_func, void (i8*)* bitcast (void (%struct.trust_token_st*)* @TRUST_TOKEN_free to void (i8*)*)) #4
  br label %597

597:                                              ; preds = %412, %584, %596
  %598 = phi %struct.stack_st_TRUST_TOKEN* [ %65, %584 ], [ null, %596 ], [ undef, %412 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #4
  br label %599

599:                                              ; preds = %67, %70, %597, %62
  %600 = phi %struct.stack_st_TRUST_TOKEN* [ null, %62 ], [ null, %67 ], [ null, %70 ], [ %598, %597 ]
  ret %struct.stack_st_TRUST_TOKEN* %600
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pmbtoken_exp1_read(%struct.TRUST_TOKEN_ISSUER_KEY*, i8*, i8* nocapture, i8*, i64) local_unnamed_addr #0 {
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp1_method_once, void ()* nonnull @pmbtoken_exp1_init_method_impl) #4
  %6 = load i32, i32* @pmbtoken_exp1_ok, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1171) #4
  br label %11

9:                                                ; preds = %5
  %10 = tail call fastcc i32 @pmbtoken_read(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp1_method, %struct.TRUST_TOKEN_ISSUER_KEY* %0, i8* %1, i8* %2, i8* %3, i64 %4)
  br label %11

11:                                               ; preds = %8, %9
  %12 = phi i32 [ %10, %9 ], [ 0, %8 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @pmbtoken_read(%struct.PMBTOKEN_METHOD* nocapture readonly, %struct.TRUST_TOKEN_ISSUER_KEY*, i8*, i8* nocapture, i8*, i64) unnamed_addr #0 {
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca %struct.EC_AFFINE, align 8
  %9 = alloca %struct.EC_AFFINE, align 8
  %10 = alloca %struct.EC_AFFINE, align 8
  %11 = alloca %struct.EC_RAW_POINT, align 8
  %12 = alloca %struct.EC_RAW_POINT, align 8
  %13 = alloca %union.EC_PRECOMP, align 8
  %14 = alloca %union.EC_PRECOMP, align 8
  %15 = alloca %struct.EC_RAW_POINT, align 8
  %16 = alloca %struct.EC_RAW_POINT, align 8
  %17 = alloca %struct.EC_RAW_POINT, align 8
  %18 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 0
  %19 = load %struct.ec_group_st*, %struct.ec_group_st** %18, align 8
  %20 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #4
  %21 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  call void @CBS_init(%struct.cbs_st* nonnull %7, i8* %4, i64 %5) #4
  %22 = bitcast %struct.EC_AFFINE* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %22) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 144, i1 false)
  %23 = bitcast %struct.EC_AFFINE* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %23) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 144, i1 false)
  %24 = bitcast %struct.EC_AFFINE* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %24) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 144, i1 false)
  %25 = call i32 @CBS_copy_bytes(%struct.cbs_st* nonnull %7, i8* %2, i64 64) #4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %52, label %27

27:                                               ; preds = %6
  %28 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 7
  %29 = load i8, i8* %28, align 8
  %30 = shl i8 %29, 7
  %31 = ashr exact i8 %30, 7
  %32 = sext i8 %31 to i32
  %33 = call fastcc i32 @cbs_get_prefixed_point(%struct.cbs_st* nonnull %7, %struct.ec_group_st* %19, %struct.EC_AFFINE* nonnull %8, i32 %32)
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %52, label %35

35:                                               ; preds = %27
  %36 = load i8, i8* %28, align 8
  %37 = shl i8 %36, 7
  %38 = ashr exact i8 %37, 7
  %39 = sext i8 %38 to i32
  %40 = call fastcc i32 @cbs_get_prefixed_point(%struct.cbs_st* nonnull %7, %struct.ec_group_st* %19, %struct.EC_AFFINE* nonnull %9, i32 %39)
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %52, label %42

42:                                               ; preds = %35
  %43 = load i8, i8* %28, align 8
  %44 = shl i8 %43, 7
  %45 = ashr exact i8 %44, 7
  %46 = sext i8 %45 to i32
  %47 = call fastcc i32 @cbs_get_prefixed_point(%struct.cbs_st* nonnull %7, %struct.ec_group_st* %19, %struct.EC_AFFINE* nonnull %10, i32 %46)
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %42
  %50 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %49, %42, %35, %27, %6
  call void @ERR_put_error(i32 32, i32 0, i32 110, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1050) #4
  br label %105

53:                                               ; preds = %49
  %54 = bitcast %struct.EC_RAW_POINT* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %54) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 216, i1 false)
  %55 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 4
  %56 = load i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, i8*)*, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, i8*)** %55, align 8
  %57 = call i32 %56(%struct.ec_group_st* %19, %struct.EC_RAW_POINT* nonnull %11, i8* %2) #4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %103, label %59

59:                                               ; preds = %53
  %60 = bitcast %struct.EC_RAW_POINT* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %60) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 216, i1 false)
  %61 = bitcast %union.EC_PRECOMP* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4464, i8* nonnull %61) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 4464, i1 false)
  %62 = bitcast %union.EC_PRECOMP* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4464, i8* nonnull %62) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 4464, i1 false)
  call void @ec_affine_to_jacobian(%struct.ec_group_st* %19, %struct.EC_RAW_POINT* nonnull %12, %struct.EC_AFFINE* nonnull %8) #4
  %63 = call i32 @ec_init_precomp(%struct.ec_group_st* %19, %union.EC_PRECOMP* nonnull %13, %struct.EC_RAW_POINT* nonnull %12) #4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %101, label %65

65:                                               ; preds = %59
  %66 = call i32 @ec_init_precomp(%struct.ec_group_st* %19, %union.EC_PRECOMP* nonnull %14, %struct.EC_RAW_POINT* nonnull %11) #4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %101, label %68

68:                                               ; preds = %65
  %69 = bitcast %struct.EC_RAW_POINT* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %69) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 216, i1 false)
  %70 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 4
  %71 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 5
  %72 = call i32 @ec_point_mul_scalar_precomp(%struct.ec_group_st* %19, %struct.EC_RAW_POINT* nonnull %15, %union.EC_PRECOMP* nonnull %14, %union.EC_SCALAR* %70, %union.EC_PRECOMP* nonnull %13, %union.EC_SCALAR* %71, %union.EC_PRECOMP* null, %union.EC_SCALAR* null) #4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %68
  %75 = call i32 @ec_affine_jacobian_equal(%struct.ec_group_st* %19, %struct.EC_AFFINE* nonnull %10, %struct.EC_RAW_POINT* nonnull %15) #4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74, %68
  call void @ERR_put_error(i32 32, i32 0, i32 111, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1075) #4
  br label %99

78:                                               ; preds = %74
  %79 = bitcast %struct.EC_RAW_POINT* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %79) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 216, i1 false)
  %80 = bitcast %struct.EC_RAW_POINT* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %80) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 216, i1 false)
  %81 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 0
  %82 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 1
  %83 = call i32 @ec_point_mul_scalar_precomp(%struct.ec_group_st* %19, %struct.EC_RAW_POINT* nonnull %16, %union.EC_PRECOMP* nonnull %14, %union.EC_SCALAR* %81, %union.EC_PRECOMP* nonnull %13, %union.EC_SCALAR* %82, %union.EC_PRECOMP* null, %union.EC_SCALAR* null) #4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %97, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 2
  %87 = getelementptr inbounds %struct.TRUST_TOKEN_ISSUER_KEY, %struct.TRUST_TOKEN_ISSUER_KEY* %1, i64 0, i32 3
  %88 = call i32 @ec_point_mul_scalar_precomp(%struct.ec_group_st* %19, %struct.EC_RAW_POINT* nonnull %17, %union.EC_PRECOMP* nonnull %14, %union.EC_SCALAR* %86, %union.EC_PRECOMP* nonnull %13, %union.EC_SCALAR* %87, %union.EC_PRECOMP* null, %union.EC_SCALAR* null) #4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %97, label %90

90:                                               ; preds = %85
  %91 = call i32 @ec_affine_jacobian_equal(%struct.ec_group_st* %19, %struct.EC_AFFINE* nonnull %9, %struct.EC_RAW_POINT* nonnull %16) #4
  %92 = call i32 @ec_affine_jacobian_equal(%struct.ec_group_st* %19, %struct.EC_AFFINE* nonnull %9, %struct.EC_RAW_POINT* nonnull %17) #4
  %93 = icmp eq i32 %91, %92
  br i1 %93, label %94, label %95

94:                                               ; preds = %90
  call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1092) #4
  br label %97

95:                                               ; preds = %90
  %96 = trunc i32 %92 to i8
  store i8 %96, i8* %3, align 1
  br label %97

97:                                               ; preds = %94, %95, %78, %85
  %98 = phi i32 [ 0, %85 ], [ 0, %78 ], [ 1, %95 ], [ 0, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %80) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %79) #4
  br label %99

99:                                               ; preds = %97, %77
  %100 = phi i32 [ %98, %97 ], [ 0, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %69) #4
  br label %101

101:                                              ; preds = %59, %65, %99
  %102 = phi i32 [ %100, %99 ], [ 0, %65 ], [ 0, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 4464, i8* nonnull %62) #4
  call void @llvm.lifetime.end.p0i8(i64 4464, i8* nonnull %61) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %60) #4
  br label %103

103:                                              ; preds = %53, %101
  %104 = phi i32 [ %102, %101 ], [ 0, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %54) #4
  br label %105

105:                                              ; preds = %103, %52
  %106 = phi i32 [ 0, %52 ], [ %104, %103 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %24) #4
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %23) #4
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %22) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #4
  ret i32 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pmbtoken_exp1_get_h_for_testing(i8*) local_unnamed_addr #0 {
  %2 = alloca %struct.EC_AFFINE, align 8
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp1_method_once, void ()* nonnull @pmbtoken_exp1_init_method_impl) #4
  %3 = load i32, i32* @pmbtoken_exp1_ok, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1171) #4
  br label %18

6:                                                ; preds = %1
  %7 = bitcast %struct.EC_AFFINE* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %7) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 144, i1 false)
  %8 = load %struct.ec_group_st*, %struct.ec_group_st** getelementptr inbounds (%struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* @pmbtoken_exp1_method, i64 0, i32 0), align 8
  %9 = call i32 @ec_jacobian_to_affine(%struct.ec_group_st* %8, %struct.EC_AFFINE* nonnull %2, %struct.EC_RAW_POINT* getelementptr inbounds (%struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* @pmbtoken_exp1_method, i64 0, i32 3)) #4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = load %struct.ec_group_st*, %struct.ec_group_st** getelementptr inbounds (%struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* @pmbtoken_exp1_method, i64 0, i32 0), align 8
  %13 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %12, %struct.EC_AFFINE* nonnull %2, i32 4, i8* %0, i64 97) #4
  %14 = icmp eq i64 %13, 97
  %15 = zext i1 %14 to i32
  br label %16

16:                                               ; preds = %6, %11
  %17 = phi i32 [ 0, %6 ], [ %15, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %7) #4
  br label %18

18:                                               ; preds = %5, %16
  %19 = phi i32 [ %17, %16 ], [ 0, %5 ]
  ret i32 %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @ec_jacobian_to_affine(%struct.ec_group_st*, %struct.EC_AFFINE*, %struct.EC_RAW_POINT*) local_unnamed_addr #2

declare i64 @ec_point_to_bytes(%struct.ec_group_st*, %struct.EC_AFFINE*, i32, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pmbtoken_exp2_generate_key(%struct.cbb_st*, %struct.cbb_st*) local_unnamed_addr #0 {
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp2_method_once, void ()* nonnull @pmbtoken_exp2_init_method_impl) #4
  %3 = load i32, i32* @pmbtoken_exp2_ok, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1321) #4
  br label %8

6:                                                ; preds = %2
  %7 = tail call fastcc i32 @pmbtoken_generate_key(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp2_method, %struct.cbb_st* %0, %struct.cbb_st* %1)
  br label %8

8:                                                ; preds = %5, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %5 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pmbtoken_exp2_client_key_from_bytes(%struct.TRUST_TOKEN_CLIENT_KEY*, i8*, i64) local_unnamed_addr #0 {
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp2_method_once, void ()* nonnull @pmbtoken_exp2_init_method_impl) #4
  %4 = load i32, i32* @pmbtoken_exp2_ok, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1321) #4
  br label %9

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @pmbtoken_client_key_from_bytes(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp2_method, %struct.TRUST_TOKEN_CLIENT_KEY* %0, i8* %1, i64 %2)
  br label %9

9:                                                ; preds = %6, %7
  %10 = phi i32 [ %8, %7 ], [ 0, %6 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pmbtoken_exp2_issuer_key_from_bytes(%struct.TRUST_TOKEN_ISSUER_KEY*, i8*, i64) local_unnamed_addr #0 {
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp2_method_once, void ()* nonnull @pmbtoken_exp2_init_method_impl) #4
  %4 = load i32, i32* @pmbtoken_exp2_ok, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1321) #4
  br label %9

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @pmbtoken_issuer_key_from_bytes(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp2_method, %struct.TRUST_TOKEN_ISSUER_KEY* %0, i8* %1, i64 %2)
  br label %9

9:                                                ; preds = %6, %7
  %10 = phi i32 [ %8, %7 ], [ 0, %6 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_TRUST_TOKEN_PRETOKEN* @pmbtoken_exp2_blind(%struct.cbb_st*, i64) local_unnamed_addr #0 {
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp2_method_once, void ()* nonnull @pmbtoken_exp2_init_method_impl) #4
  %3 = load i32, i32* @pmbtoken_exp2_ok, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1321) #4
  br label %8

6:                                                ; preds = %2
  %7 = tail call fastcc %struct.stack_st_TRUST_TOKEN_PRETOKEN* @pmbtoken_blind(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp2_method, %struct.cbb_st* %0, i64 %1)
  br label %8

8:                                                ; preds = %5, %6
  %9 = phi %struct.stack_st_TRUST_TOKEN_PRETOKEN* [ %7, %6 ], [ null, %5 ]
  ret %struct.stack_st_TRUST_TOKEN_PRETOKEN* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pmbtoken_exp2_sign(%struct.TRUST_TOKEN_ISSUER_KEY*, %struct.cbb_st*, %struct.cbs_st*, i64, i64, i8 zeroext) local_unnamed_addr #0 {
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp2_method_once, void ()* nonnull @pmbtoken_exp2_init_method_impl) #4
  %7 = load i32, i32* @pmbtoken_exp2_ok, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1321) #4
  br label %12

10:                                               ; preds = %6
  %11 = tail call fastcc i32 @pmbtoken_sign(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp2_method, %struct.TRUST_TOKEN_ISSUER_KEY* %0, %struct.cbb_st* %1, %struct.cbs_st* %2, i64 %3, i64 %4, i8 zeroext %5)
  br label %12

12:                                               ; preds = %9, %10
  %13 = phi i32 [ %11, %10 ], [ 0, %9 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_TRUST_TOKEN* @pmbtoken_exp2_unblind(%struct.TRUST_TOKEN_CLIENT_KEY*, %struct.stack_st_TRUST_TOKEN_PRETOKEN*, %struct.cbs_st*, i64, i32) local_unnamed_addr #0 {
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp2_method_once, void ()* nonnull @pmbtoken_exp2_init_method_impl) #4
  %6 = load i32, i32* @pmbtoken_exp2_ok, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1321) #4
  br label %11

9:                                                ; preds = %5
  %10 = tail call fastcc %struct.stack_st_TRUST_TOKEN* @pmbtoken_unblind(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp2_method, %struct.TRUST_TOKEN_CLIENT_KEY* %0, %struct.stack_st_TRUST_TOKEN_PRETOKEN* %1, %struct.cbs_st* %2, i64 %3, i32 %4)
  br label %11

11:                                               ; preds = %8, %9
  %12 = phi %struct.stack_st_TRUST_TOKEN* [ %10, %9 ], [ null, %8 ]
  ret %struct.stack_st_TRUST_TOKEN* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pmbtoken_exp2_read(%struct.TRUST_TOKEN_ISSUER_KEY*, i8*, i8* nocapture, i8*, i64) local_unnamed_addr #0 {
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp2_method_once, void ()* nonnull @pmbtoken_exp2_init_method_impl) #4
  %6 = load i32, i32* @pmbtoken_exp2_ok, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1321) #4
  br label %11

9:                                                ; preds = %5
  %10 = tail call fastcc i32 @pmbtoken_read(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp2_method, %struct.TRUST_TOKEN_ISSUER_KEY* %0, i8* %1, i8* %2, i8* %3, i64 %4)
  br label %11

11:                                               ; preds = %8, %9
  %12 = phi i32 [ %10, %9 ], [ 0, %8 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pmbtoken_exp2_get_h_for_testing(i8*) local_unnamed_addr #0 {
  %2 = alloca %struct.EC_AFFINE, align 8
  tail call void @CRYPTO_once(i32* nonnull @pmbtoken_exp2_method_once, void ()* nonnull @pmbtoken_exp2_init_method_impl) #4
  %3 = load i32, i32* @pmbtoken_exp2_ok, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @ERR_put_error(i32 32, i32 0, i32 68, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1321) #4
  br label %18

6:                                                ; preds = %1
  %7 = bitcast %struct.EC_AFFINE* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %7) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 144, i1 false)
  %8 = load %struct.ec_group_st*, %struct.ec_group_st** getelementptr inbounds (%struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* @pmbtoken_exp2_method, i64 0, i32 0), align 8
  %9 = call i32 @ec_jacobian_to_affine(%struct.ec_group_st* %8, %struct.EC_AFFINE* nonnull %2, %struct.EC_RAW_POINT* getelementptr inbounds (%struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* @pmbtoken_exp2_method, i64 0, i32 3)) #4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = load %struct.ec_group_st*, %struct.ec_group_st** getelementptr inbounds (%struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* @pmbtoken_exp2_method, i64 0, i32 0), align 8
  %13 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %12, %struct.EC_AFFINE* nonnull %2, i32 4, i8* %0, i64 97) #4
  %14 = icmp eq i64 %13, 97
  %15 = zext i1 %14 to i32
  br label %16

16:                                               ; preds = %6, %11
  %17 = phi i32 [ 0, %6 ], [ %15, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %7) #4
  br label %18

18:                                               ; preds = %5, %16
  %19 = phi i32 [ %17, %16 ], [ 0, %5 ]
  ret i32 %19
}

declare void @CRYPTO_once(i32*, void ()*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @pmbtoken_exp1_init_method_impl() #0 {
  %1 = tail call fastcc i32 @pmbtoken_init_method(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp1_method, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @pmbtoken_exp1_init_method_impl.kH, i64 0, i64 0), i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, i8*)* nonnull @pmbtoken_exp1_hash_t, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_AFFINE*, i8*)* nonnull @pmbtoken_exp1_hash_s, i32 (%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64)* nonnull @pmbtoken_exp1_hash_c, i32 1)
  store i32 %1, i32* @pmbtoken_exp1_ok, align 4
  ret void
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @pmbtoken_init_method(%struct.PMBTOKEN_METHOD*, i8*, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, i8*)*, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_AFFINE*, i8*)*, i32 (%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64)*, i32) unnamed_addr #0 {
  %7 = alloca %struct.EC_AFFINE, align 8
  %8 = tail call %struct.ec_group_st* @EC_GROUP_new_by_curve_name(i32 715) #4
  %9 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 0
  store %struct.ec_group_st* %8, %struct.ec_group_st** %9, align 8
  %10 = icmp eq %struct.ec_group_st* %8, null
  br i1 %10, label %42, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 4
  store i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, i8*)* %2, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, i8*)** %12, align 8
  %13 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 5
  store i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_AFFINE*, i8*)* %3, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_AFFINE*, i8*)** %13, align 8
  %14 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 6
  store i32 (%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64)* %4, i32 (%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64)** %14, align 8
  %15 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 7
  %16 = trunc i32 %5 to i8
  %17 = load i8, i8* %15, align 8
  %18 = and i8 %16, 1
  %19 = and i8 %17, -2
  %20 = or i8 %19, %18
  store i8 %20, i8* %15, align 8
  %21 = bitcast %struct.EC_AFFINE* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %21) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 144, i1 false)
  %22 = call i32 @ec_point_from_uncompressed(%struct.ec_group_st* nonnull %8, %struct.EC_AFFINE* nonnull %7, i8* %1, i64 97) #4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %11
  %25 = load %struct.ec_group_st*, %struct.ec_group_st** %9, align 8
  %26 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 3
  call void @ec_affine_to_jacobian(%struct.ec_group_st* %25, %struct.EC_RAW_POINT* %26, %struct.EC_AFFINE* nonnull %7) #4
  %27 = load %struct.ec_group_st*, %struct.ec_group_st** %9, align 8
  %28 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 1
  %29 = getelementptr inbounds %struct.ec_group_st, %struct.ec_group_st* %27, i64 0, i32 1
  %30 = load %struct.ec_point_st*, %struct.ec_point_st** %29, align 8
  %31 = getelementptr inbounds %struct.ec_point_st, %struct.ec_point_st* %30, i64 0, i32 1
  %32 = call i32 @ec_init_precomp(%struct.ec_group_st* %27, %union.EC_PRECOMP* %28, %struct.EC_RAW_POINT* %31) #4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %24
  %35 = load %struct.ec_group_st*, %struct.ec_group_st** %9, align 8
  %36 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 2
  %37 = call i32 @ec_init_precomp(%struct.ec_group_st* %35, %union.EC_PRECOMP* %36, %struct.EC_RAW_POINT* %26) #4
  %38 = icmp ne i32 %37, 0
  %39 = zext i1 %38 to i32
  br label %40

40:                                               ; preds = %34, %24, %11
  %41 = phi i32 [ 0, %11 ], [ 0, %24 ], [ %39, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %21) #4
  br label %42

42:                                               ; preds = %6, %40
  %43 = phi i32 [ %41, %40 ], [ 0, %6 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pmbtoken_exp1_hash_t(%struct.ec_group_st*, %struct.EC_RAW_POINT*, i8*) #0 {
  %4 = tail call i32 @ec_hash_to_curve_p384_xmd_sha512_sswu_draft07(%struct.ec_group_st* %0, %struct.EC_RAW_POINT* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @pmbtoken_exp1_hash_t.kHashTLabel, i64 0, i64 0), i64 30, i8* %2, i64 64) #4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pmbtoken_exp1_hash_s(%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_AFFINE*, i8*) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.cbb_st, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4
  store i8* null, i8** %7, align 8
  %11 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #4
  store i64 -6148914691236517206, i64* %8, align 8
  %12 = call i32 @CBB_init(%struct.cbb_st* nonnull %6, i64 0) #4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %37, label %14

14:                                               ; preds = %4
  %15 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %0, %struct.EC_AFFINE* %2, i32 4, i8* null, i64 0) #4
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %37, label %17

17:                                               ; preds = %14
  %18 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %19 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %6, i8** nonnull %5, i64 %15) #4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #4
  br label %37

22:                                               ; preds = %17
  %23 = load i8*, i8** %5, align 8
  %24 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %0, %struct.EC_AFFINE* %2, i32 4, i8* %23, i64 %15) #4
  %25 = icmp eq i64 %24, %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #4
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %6, i8* %3, i64 64) #4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %26
  %30 = call i32 @CBB_finish(%struct.cbb_st* nonnull %6, i8** nonnull %7, i64* nonnull %8) #4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %29
  %33 = load i8*, i8** %7, align 8
  %34 = load i64, i64* %8, align 8
  %35 = call i32 @ec_hash_to_curve_p384_xmd_sha512_sswu_draft07(%struct.ec_group_st* %0, %struct.EC_RAW_POINT* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @pmbtoken_exp1_hash_s.kHashSLabel, i64 0, i64 0), i64 30, i8* %33, i64 %34) #4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %22, %14, %21, %32, %29, %26, %4
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1124) #4
  br label %38

38:                                               ; preds = %32, %37
  %39 = phi i32 [ 0, %37 ], [ 1, %32 ]
  %40 = load i8*, i8** %7, align 8
  call void @OPENSSL_free(i8* %40) #4
  call void @CBB_cleanup(%struct.cbb_st* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pmbtoken_exp1_hash_c(%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64) #0 {
  %5 = tail call i32 @ec_hash_to_scalar_p384_xmd_sha512_draft07(%struct.ec_group_st* %0, %union.EC_SCALAR* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @pmbtoken_exp1_hash_c.kHashCLabel, i64 0, i64 0), i64 30, i8* %2, i64 %3) #4
  ret i32 %5
}

declare %struct.ec_group_st* @EC_GROUP_new_by_curve_name(i32) local_unnamed_addr #2

declare i32 @ec_point_from_uncompressed(%struct.ec_group_st*, %struct.EC_AFFINE*, i8*, i64) local_unnamed_addr #2

declare void @ec_affine_to_jacobian(%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_AFFINE*) local_unnamed_addr #2

declare i32 @ec_init_precomp(%struct.ec_group_st*, %union.EC_PRECOMP*, %struct.EC_RAW_POINT*) local_unnamed_addr #2

declare i32 @ec_hash_to_curve_p384_xmd_sha512_sswu_draft07(%struct.ec_group_st*, %struct.EC_RAW_POINT*, i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

declare i32 @CBB_finish(%struct.cbb_st*, i8**, i64*) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

declare i32 @CBB_add_space(%struct.cbb_st*, i8**, i64) local_unnamed_addr #2

declare i32 @ec_hash_to_scalar_p384_xmd_sha512_draft07(%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64, i8*, i64) local_unnamed_addr #2

declare i32 @BN_num_bytes(%struct.bignum_st*) local_unnamed_addr #2

declare void @ec_scalar_to_bytes(%struct.ec_group_st*, i8*, i64*, %union.EC_SCALAR*) local_unnamed_addr #2

declare i32 @ec_jacobian_to_affine_batch(%struct.ec_group_st*, %struct.EC_AFFINE*, %struct.EC_RAW_POINT*, i64) local_unnamed_addr #2

declare i32 @ec_random_nonzero_scalar(%struct.ec_group_st*, %union.EC_SCALAR*, i8*) local_unnamed_addr #2

declare i32 @ec_point_mul_scalar_precomp(%struct.ec_group_st*, %struct.EC_RAW_POINT*, %union.EC_PRECOMP*, %union.EC_SCALAR*, %union.EC_PRECOMP*, %union.EC_SCALAR*, %union.EC_PRECOMP*, %union.EC_SCALAR*) local_unnamed_addr #2

declare i32 @CBB_add_u16_length_prefixed(%struct.cbb_st*, %struct.cbb_st*) local_unnamed_addr #2

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @cbs_get_prefixed_point(%struct.cbs_st*, %struct.ec_group_st*, %struct.EC_AFFINE*, i32) unnamed_addr #0 {
  %5 = alloca %struct.cbs_st, align 8
  %6 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #4
  %7 = icmp eq i32 %3, 0
  %8 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  br i1 %7, label %12, label %9

9:                                                ; preds = %4
  %10 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* %0, %struct.cbs_st* nonnull %5) #4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %26, label %20

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.ec_group_st, %struct.ec_group_st* %1, i64 0, i32 5
  %14 = tail call i32 @BN_num_bytes(%struct.bignum_st* %13) #4
  %15 = shl i32 %14, 1
  %16 = or i32 %15, 1
  %17 = zext i32 %16 to i64
  %18 = call i32 @CBS_get_bytes(%struct.cbs_st* %0, %struct.cbs_st* nonnull %5, i64 %17) #4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %12, %9
  %21 = call i8* @CBS_data(%struct.cbs_st* nonnull %5) #4
  %22 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #4
  %23 = call i32 @ec_point_from_uncompressed(%struct.ec_group_st* %1, %struct.EC_AFFINE* %2, i8* %21, i64 %22) #4
  %24 = icmp ne i32 %23, 0
  %25 = zext i1 %24 to i32
  br label %26

26:                                               ; preds = %12, %20, %9
  %27 = phi i32 [ 0, %12 ], [ 0, %9 ], [ %25, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #4
  ret i32 %27
}

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @CBS_get_u16_length_prefixed(%struct.cbs_st*, %struct.cbs_st*) local_unnamed_addr #2

declare i32 @CBS_get_bytes(%struct.cbs_st*, %struct.cbs_st*, i64) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @ec_scalar_from_bytes(%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare void @TRUST_TOKEN_PRETOKEN_free(%struct.pmb_pretoken_st*) #2

declare i32 @RAND_bytes(i8*, i64) local_unnamed_addr #2

declare void @ec_scalar_inv0_montgomery(%struct.ec_group_st*, %union.EC_SCALAR*, %union.EC_SCALAR*) local_unnamed_addr #2

declare void @ec_scalar_from_montgomery(%struct.ec_group_st*, %union.EC_SCALAR*, %union.EC_SCALAR*) local_unnamed_addr #2

declare i32 @ec_point_mul_scalar(%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*) local_unnamed_addr #2

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #2

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_TRUST_TOKEN_PRETOKEN_call_free_func(void (i8*)* nocapture, i8*) #3 {
  %3 = bitcast void (i8*)* %0 to void (%struct.pmb_pretoken_st*)*
  %4 = bitcast i8* %1 to %struct.pmb_pretoken_st*
  tail call void %3(%struct.pmb_pretoken_st* %4) #4
  ret void
}

declare void @CBB_zero(%struct.cbb_st*) local_unnamed_addr #2

declare void @ec_scalar_select(%struct.ec_group_st*, %union.EC_SCALAR*, i64, %union.EC_SCALAR*, %union.EC_SCALAR*) local_unnamed_addr #2

declare i32 @ec_point_mul_scalar_batch(%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @hash_c_batch(%struct.PMBTOKEN_METHOD* nocapture readonly, %union.EC_SCALAR*, %struct.cbb_st*, i64) unnamed_addr #0 {
  %5 = alloca %struct.cbb_st, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = icmp ugt i64 %3, 65535
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void @ERR_put_error(i32 32, i32 0, i32 69, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 422) #4
  br label %44

10:                                               ; preds = %4
  %11 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  call void @CBB_zero(%struct.cbb_st* nonnull %5) #4
  %12 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #4
  store i8* null, i8** %6, align 8
  %13 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #4
  store i64 -6148914691236517206, i64* %7, align 8
  %14 = call i32 @CBB_init(%struct.cbb_st* nonnull %5, i64 0) #4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %40, label %16

16:                                               ; preds = %10
  %17 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @hash_c_batch.kDLEQBatchLabel, i64 0, i64 0), i64 11) #4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %40, label %19

19:                                               ; preds = %16
  %20 = call i8* @CBB_data(%struct.cbb_st* %2) #4
  %21 = call i64 @CBB_len(%struct.cbb_st* %2) #4
  %22 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* %20, i64 %21) #4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %19
  %25 = trunc i64 %3 to i16
  %26 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %5, i16 zeroext %25) #4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %40, label %28

28:                                               ; preds = %24
  %29 = call i32 @CBB_finish(%struct.cbb_st* nonnull %5, i8** nonnull %6, i64* nonnull %7) #4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 6
  %33 = load i32 (%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64)*, i32 (%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64)** %32, align 8
  %34 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 0
  %35 = load %struct.ec_group_st*, %struct.ec_group_st** %34, align 8
  %36 = load i8*, i8** %6, align 8
  %37 = load i64, i64* %7, align 8
  %38 = call i32 %33(%struct.ec_group_st* %35, %union.EC_SCALAR* %1, i8* %36, i64 %37) #4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %31, %28, %24, %19, %16, %10
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 437) #4
  br label %41

41:                                               ; preds = %31, %40
  %42 = phi i32 [ 0, %40 ], [ 1, %31 ]
  call void @CBB_cleanup(%struct.cbb_st* nonnull %5) #4
  %43 = load i8*, i8** %6, align 8
  call void @OPENSSL_free(i8* %43) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #4
  br label %44

44:                                               ; preds = %41, %9
  %45 = phi i32 [ 0, %9 ], [ %42, %41 ]
  ret i32 %45
}

declare i32 @ec_point_mul_scalar_public_batch(%struct.ec_group_st*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*, %struct.EC_RAW_POINT*, %union.EC_SCALAR*, i64) local_unnamed_addr #2

declare i32 @CBS_skip(%struct.cbs_st*, i64) local_unnamed_addr #2

declare i8* @CBB_data(%struct.cbb_st*) local_unnamed_addr #2

declare i64 @CBB_len(%struct.cbb_st*) local_unnamed_addr #2

declare i32 @CBB_add_u16(%struct.cbb_st*, i16 zeroext) local_unnamed_addr #2

declare void @ec_precomp_select(%struct.ec_group_st*, %union.EC_PRECOMP*, i64, %union.EC_PRECOMP*, %union.EC_PRECOMP*) local_unnamed_addr #2

declare void @ec_affine_select(%struct.ec_group_st*, %struct.EC_AFFINE*, i64, %struct.EC_AFFINE*, %struct.EC_AFFINE*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @hash_c_dleq(%struct.PMBTOKEN_METHOD* nocapture readonly, %union.EC_SCALAR*, %struct.EC_AFFINE*, %struct.EC_AFFINE*, %struct.EC_AFFINE*, %struct.EC_AFFINE*, %struct.EC_AFFINE*, %struct.EC_AFFINE*) unnamed_addr #0 {
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca %struct.cbb_st, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  %18 = bitcast %struct.cbb_st* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false)
  call void @CBB_zero(%struct.cbb_st* nonnull %15) #4
  %19 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #4
  store i8* null, i8** %16, align 8
  %20 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #4
  store i64 -6148914691236517206, i64* %17, align 8
  %21 = call i32 @CBB_init(%struct.cbb_st* nonnull %15, i64 0) #4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %116, label %23

23:                                               ; preds = %8
  %24 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @hash_c_dleq.kDLEQ2Label, i64 0, i64 0), i64 6) #4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %116, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 0
  %28 = load %struct.ec_group_st*, %struct.ec_group_st** %27, align 8
  %29 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %28, %struct.EC_AFFINE* %2, i32 4, i8* null, i64 0) #4
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %116, label %31

31:                                               ; preds = %26
  %32 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %33 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %15, i8** nonnull %14, i64 %29) #4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #4
  br label %116

36:                                               ; preds = %31
  %37 = load i8*, i8** %14, align 8
  %38 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %28, %struct.EC_AFFINE* %2, i32 4, i8* %37, i64 %29) #4
  %39 = icmp eq i64 %38, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #4
  br i1 %39, label %40, label %116

40:                                               ; preds = %36
  %41 = load %struct.ec_group_st*, %struct.ec_group_st** %27, align 8
  %42 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %41, %struct.EC_AFFINE* %3, i32 4, i8* null, i64 0) #4
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %116, label %44

44:                                               ; preds = %40
  %45 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %13, align 8
  %46 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %15, i8** nonnull %13, i64 %42) #4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #4
  br label %116

49:                                               ; preds = %44
  %50 = load i8*, i8** %13, align 8
  %51 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %41, %struct.EC_AFFINE* %3, i32 4, i8* %50, i64 %42) #4
  %52 = icmp eq i64 %51, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #4
  br i1 %52, label %53, label %116

53:                                               ; preds = %49
  %54 = load %struct.ec_group_st*, %struct.ec_group_st** %27, align 8
  %55 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %54, %struct.EC_AFFINE* %4, i32 4, i8* null, i64 0) #4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %116, label %57

57:                                               ; preds = %53
  %58 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %59 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %15, i8** nonnull %12, i64 %55) #4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #4
  br label %116

62:                                               ; preds = %57
  %63 = load i8*, i8** %12, align 8
  %64 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %54, %struct.EC_AFFINE* %4, i32 4, i8* %63, i64 %55) #4
  %65 = icmp eq i64 %64, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #4
  br i1 %65, label %66, label %116

66:                                               ; preds = %62
  %67 = load %struct.ec_group_st*, %struct.ec_group_st** %27, align 8
  %68 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %67, %struct.EC_AFFINE* %5, i32 4, i8* null, i64 0) #4
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %116, label %70

70:                                               ; preds = %66
  %71 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %11, align 8
  %72 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %15, i8** nonnull %11, i64 %68) #4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #4
  br label %116

75:                                               ; preds = %70
  %76 = load i8*, i8** %11, align 8
  %77 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %67, %struct.EC_AFFINE* %5, i32 4, i8* %76, i64 %68) #4
  %78 = icmp eq i64 %77, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #4
  br i1 %78, label %79, label %116

79:                                               ; preds = %75
  %80 = load %struct.ec_group_st*, %struct.ec_group_st** %27, align 8
  %81 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %80, %struct.EC_AFFINE* %6, i32 4, i8* null, i64 0) #4
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %116, label %83

83:                                               ; preds = %79
  %84 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %85 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %15, i8** nonnull %10, i64 %81) #4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #4
  br label %116

88:                                               ; preds = %83
  %89 = load i8*, i8** %10, align 8
  %90 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %80, %struct.EC_AFFINE* %6, i32 4, i8* %89, i64 %81) #4
  %91 = icmp eq i64 %90, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #4
  br i1 %91, label %92, label %116

92:                                               ; preds = %88
  %93 = load %struct.ec_group_st*, %struct.ec_group_st** %27, align 8
  %94 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %93, %struct.EC_AFFINE* %7, i32 4, i8* null, i64 0) #4
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %116, label %96

96:                                               ; preds = %92
  %97 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %98 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %15, i8** nonnull %9, i64 %94) #4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #4
  br label %116

101:                                              ; preds = %96
  %102 = load i8*, i8** %9, align 8
  %103 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %93, %struct.EC_AFFINE* %7, i32 4, i8* %102, i64 %94) #4
  %104 = icmp eq i64 %103, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #4
  br i1 %104, label %105, label %116

105:                                              ; preds = %101
  %106 = call i32 @CBB_finish(%struct.cbb_st* nonnull %15, i8** nonnull %16, i64* nonnull %17) #4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %116, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 6
  %110 = load i32 (%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64)*, i32 (%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64)** %109, align 8
  %111 = load %struct.ec_group_st*, %struct.ec_group_st** %27, align 8
  %112 = load i8*, i8** %16, align 8
  %113 = load i64, i64* %17, align 8
  %114 = call i32 %110(%struct.ec_group_st* %111, %union.EC_SCALAR* %1, i8* %112, i64 %113) #4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %101, %88, %75, %62, %49, %36, %92, %79, %66, %53, %40, %26, %100, %87, %74, %61, %48, %35, %108, %105, %23, %8
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 367) #4
  br label %117

117:                                              ; preds = %108, %116
  %118 = phi i32 [ 0, %116 ], [ 1, %108 ]
  call void @CBB_cleanup(%struct.cbb_st* nonnull %15) #4
  %119 = load i8*, i8** %16, align 8
  call void @OPENSSL_free(i8* %119) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #4
  ret i32 %118
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @hash_c_dleqor(%struct.PMBTOKEN_METHOD* nocapture readonly, %union.EC_SCALAR*, %struct.EC_AFFINE*, %struct.EC_AFFINE*, %struct.EC_AFFINE*, %struct.EC_AFFINE*, %struct.EC_AFFINE*, %struct.EC_AFFINE*, %struct.EC_AFFINE*, %struct.EC_AFFINE*, %struct.EC_AFFINE*) unnamed_addr #0 {
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca %struct.cbb_st, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i64, align 8
  %24 = bitcast %struct.cbb_st* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false)
  call void @CBB_zero(%struct.cbb_st* nonnull %21) #4
  %25 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #4
  store i8* null, i8** %22, align 8
  %26 = bitcast i64* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #4
  store i64 -6148914691236517206, i64* %23, align 8
  %27 = call i32 @CBB_init(%struct.cbb_st* nonnull %21, i64 0) #4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %161, label %29

29:                                               ; preds = %11
  %30 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @hash_c_dleqor.kDLEQOR2Label, i64 0, i64 0), i64 8) #4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %161, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 0
  %34 = load %struct.ec_group_st*, %struct.ec_group_st** %33, align 8
  %35 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %34, %struct.EC_AFFINE* %2, i32 4, i8* null, i64 0) #4
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %161, label %37

37:                                               ; preds = %32
  %38 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %39 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %21, i8** nonnull %20, i64 %35) #4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #4
  br label %161

42:                                               ; preds = %37
  %43 = load i8*, i8** %20, align 8
  %44 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %34, %struct.EC_AFFINE* %2, i32 4, i8* %43, i64 %35) #4
  %45 = icmp eq i64 %44, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #4
  br i1 %45, label %46, label %161

46:                                               ; preds = %42
  %47 = load %struct.ec_group_st*, %struct.ec_group_st** %33, align 8
  %48 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %47, %struct.EC_AFFINE* %3, i32 4, i8* null, i64 0) #4
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %161, label %50

50:                                               ; preds = %46
  %51 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %52 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %21, i8** nonnull %19, i64 %48) #4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #4
  br label %161

55:                                               ; preds = %50
  %56 = load i8*, i8** %19, align 8
  %57 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %47, %struct.EC_AFFINE* %3, i32 4, i8* %56, i64 %48) #4
  %58 = icmp eq i64 %57, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #4
  br i1 %58, label %59, label %161

59:                                               ; preds = %55
  %60 = load %struct.ec_group_st*, %struct.ec_group_st** %33, align 8
  %61 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %60, %struct.EC_AFFINE* %4, i32 4, i8* null, i64 0) #4
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %161, label %63

63:                                               ; preds = %59
  %64 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %65 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %21, i8** nonnull %18, i64 %61) #4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #4
  br label %161

68:                                               ; preds = %63
  %69 = load i8*, i8** %18, align 8
  %70 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %60, %struct.EC_AFFINE* %4, i32 4, i8* %69, i64 %61) #4
  %71 = icmp eq i64 %70, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #4
  br i1 %71, label %72, label %161

72:                                               ; preds = %68
  %73 = load %struct.ec_group_st*, %struct.ec_group_st** %33, align 8
  %74 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %73, %struct.EC_AFFINE* %5, i32 4, i8* null, i64 0) #4
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %161, label %76

76:                                               ; preds = %72
  %77 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %78 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %21, i8** nonnull %17, i64 %74) #4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #4
  br label %161

81:                                               ; preds = %76
  %82 = load i8*, i8** %17, align 8
  %83 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %73, %struct.EC_AFFINE* %5, i32 4, i8* %82, i64 %74) #4
  %84 = icmp eq i64 %83, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #4
  br i1 %84, label %85, label %161

85:                                               ; preds = %81
  %86 = load %struct.ec_group_st*, %struct.ec_group_st** %33, align 8
  %87 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %86, %struct.EC_AFFINE* %6, i32 4, i8* null, i64 0) #4
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %161, label %89

89:                                               ; preds = %85
  %90 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %16, align 8
  %91 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %21, i8** nonnull %16, i64 %87) #4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #4
  br label %161

94:                                               ; preds = %89
  %95 = load i8*, i8** %16, align 8
  %96 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %86, %struct.EC_AFFINE* %6, i32 4, i8* %95, i64 %87) #4
  %97 = icmp eq i64 %96, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #4
  br i1 %97, label %98, label %161

98:                                               ; preds = %94
  %99 = load %struct.ec_group_st*, %struct.ec_group_st** %33, align 8
  %100 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %99, %struct.EC_AFFINE* %7, i32 4, i8* null, i64 0) #4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %161, label %102

102:                                              ; preds = %98
  %103 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %104 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %21, i8** nonnull %15, i64 %100) #4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #4
  br label %161

107:                                              ; preds = %102
  %108 = load i8*, i8** %15, align 8
  %109 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %99, %struct.EC_AFFINE* %7, i32 4, i8* %108, i64 %100) #4
  %110 = icmp eq i64 %109, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #4
  br i1 %110, label %111, label %161

111:                                              ; preds = %107
  %112 = load %struct.ec_group_st*, %struct.ec_group_st** %33, align 8
  %113 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %112, %struct.EC_AFFINE* %8, i32 4, i8* null, i64 0) #4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %161, label %115

115:                                              ; preds = %111
  %116 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %117 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %21, i8** nonnull %14, i64 %113) #4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #4
  br label %161

120:                                              ; preds = %115
  %121 = load i8*, i8** %14, align 8
  %122 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %112, %struct.EC_AFFINE* %8, i32 4, i8* %121, i64 %113) #4
  %123 = icmp eq i64 %122, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #4
  br i1 %123, label %124, label %161

124:                                              ; preds = %120
  %125 = load %struct.ec_group_st*, %struct.ec_group_st** %33, align 8
  %126 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %125, %struct.EC_AFFINE* %9, i32 4, i8* null, i64 0) #4
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %161, label %128

128:                                              ; preds = %124
  %129 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %13, align 8
  %130 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %21, i8** nonnull %13, i64 %126) #4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #4
  br label %161

133:                                              ; preds = %128
  %134 = load i8*, i8** %13, align 8
  %135 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %125, %struct.EC_AFFINE* %9, i32 4, i8* %134, i64 %126) #4
  %136 = icmp eq i64 %135, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #4
  br i1 %136, label %137, label %161

137:                                              ; preds = %133
  %138 = load %struct.ec_group_st*, %struct.ec_group_st** %33, align 8
  %139 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %138, %struct.EC_AFFINE* %10, i32 4, i8* null, i64 0) #4
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %161, label %141

141:                                              ; preds = %137
  %142 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %143 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %21, i8** nonnull %12, i64 %139) #4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %141
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #4
  br label %161

146:                                              ; preds = %141
  %147 = load i8*, i8** %12, align 8
  %148 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %138, %struct.EC_AFFINE* %10, i32 4, i8* %147, i64 %139) #4
  %149 = icmp eq i64 %148, %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #4
  br i1 %149, label %150, label %161

150:                                              ; preds = %146
  %151 = call i32 @CBB_finish(%struct.cbb_st* nonnull %21, i8** nonnull %22, i64* nonnull %23) #4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %struct.PMBTOKEN_METHOD, %struct.PMBTOKEN_METHOD* %0, i64 0, i32 6
  %155 = load i32 (%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64)*, i32 (%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64)** %154, align 8
  %156 = load %struct.ec_group_st*, %struct.ec_group_st** %33, align 8
  %157 = load i8*, i8** %22, align 8
  %158 = load i64, i64* %23, align 8
  %159 = call i32 %155(%struct.ec_group_st* %156, %union.EC_SCALAR* %1, i8* %157, i64 %158) #4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %146, %133, %120, %107, %94, %81, %68, %55, %42, %137, %124, %111, %98, %85, %72, %59, %46, %32, %145, %132, %119, %106, %93, %80, %67, %54, %41, %153, %150, %29, %11
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 405) #4
  br label %162

162:                                              ; preds = %153, %161
  %163 = phi i32 [ 0, %161 ], [ 1, %153 ]
  call void @CBB_cleanup(%struct.cbb_st* nonnull %21) #4
  %164 = load i8*, i8** %22, align 8
  call void @OPENSSL_free(i8* %164) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #4
  ret i32 %163
}

declare void @ec_scalar_to_montgomery(%struct.ec_group_st*, %union.EC_SCALAR*, %union.EC_SCALAR*) local_unnamed_addr #2

declare void @ec_scalar_mul_montgomery(%struct.ec_group_st*, %union.EC_SCALAR*, %union.EC_SCALAR*, %union.EC_SCALAR*) local_unnamed_addr #2

declare void @ec_scalar_add(%struct.ec_group_st*, %union.EC_SCALAR*, %union.EC_SCALAR*, %union.EC_SCALAR*) local_unnamed_addr #2

declare void @ec_scalar_neg(%struct.ec_group_st*, %union.EC_SCALAR*, %union.EC_SCALAR*) local_unnamed_addr #2

declare i32 @CBS_copy_bytes(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare i32 @CBB_add_u32(%struct.cbb_st*, i32) local_unnamed_addr #2

declare %struct.trust_token_st* @TRUST_TOKEN_new(i8*, i64) local_unnamed_addr #2

declare void @TRUST_TOKEN_free(%struct.trust_token_st*) #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @scalar_from_cbs(%struct.cbs_st*, %struct.ec_group_st*, %union.EC_SCALAR*) unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = getelementptr inbounds %struct.ec_group_st, %struct.ec_group_st* %1, i64 0, i32 2
  %6 = tail call i32 @BN_num_bytes(%struct.bignum_st* %5) #4
  %7 = zext i32 %6 to i64
  %8 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #4
  %9 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = call i32 @CBS_get_bytes(%struct.cbs_st* %0, %struct.cbs_st* nonnull %4, i64 %7) #4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  call void @ERR_put_error(i32 32, i32 0, i32 105, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 338) #4
  br label %17

13:                                               ; preds = %3
  %14 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #4
  %15 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #4
  %16 = call i32 @ec_scalar_from_bytes(%struct.ec_group_st* %1, %union.EC_SCALAR* %2, i8* %14, i64 %15) #4
  br label %17

17:                                               ; preds = %13, %12
  %18 = phi i32 [ 1, %13 ], [ 0, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #4
  ret i32 %18
}

declare i32 @ec_scalar_equal_vartime(%struct.ec_group_st*, %union.EC_SCALAR*, %union.EC_SCALAR*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_TRUST_TOKEN_call_free_func(void (i8*)* nocapture, i8*) #3 {
  %3 = bitcast void (i8*)* %0 to void (%struct.trust_token_st*)*
  %4 = bitcast i8* %1 to %struct.trust_token_st*
  tail call void %3(%struct.trust_token_st* %4) #4
  ret void
}

declare i32 @ec_affine_jacobian_equal(%struct.ec_group_st*, %struct.EC_AFFINE*, %struct.EC_RAW_POINT*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @pmbtoken_exp2_init_method_impl() #0 {
  %1 = tail call fastcc i32 @pmbtoken_init_method(%struct.PMBTOKEN_METHOD* nonnull @pmbtoken_exp2_method, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @pmbtoken_exp2_init_method_impl.kH, i64 0, i64 0), i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, i8*)* nonnull @pmbtoken_exp2_hash_t, i32 (%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_AFFINE*, i8*)* nonnull @pmbtoken_exp2_hash_s, i32 (%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64)* nonnull @pmbtoken_exp2_hash_c, i32 0)
  store i32 %1, i32* @pmbtoken_exp2_ok, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pmbtoken_exp2_hash_t(%struct.ec_group_st*, %struct.EC_RAW_POINT*, i8*) #0 {
  %4 = tail call i32 @ec_hash_to_curve_p384_xmd_sha512_sswu_draft07(%struct.ec_group_st* %0, %struct.EC_RAW_POINT* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @pmbtoken_exp2_hash_t.kHashTLabel, i64 0, i64 0), i64 30, i8* %2, i64 64) #4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pmbtoken_exp2_hash_s(%struct.ec_group_st*, %struct.EC_RAW_POINT*, %struct.EC_AFFINE*, i8*) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.cbb_st, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4
  store i8* null, i8** %7, align 8
  %11 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #4
  store i64 -6148914691236517206, i64* %8, align 8
  %12 = call i32 @CBB_init(%struct.cbb_st* nonnull %6, i64 0) #4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %37, label %14

14:                                               ; preds = %4
  %15 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %0, %struct.EC_AFFINE* %2, i32 4, i8* null, i64 0) #4
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %37, label %17

17:                                               ; preds = %14
  %18 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %19 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %6, i8** nonnull %5, i64 %15) #4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #4
  br label %37

22:                                               ; preds = %17
  %23 = load i8*, i8** %5, align 8
  %24 = call i64 @ec_point_to_bytes(%struct.ec_group_st* %0, %struct.EC_AFFINE* %2, i32 4, i8* %23, i64 %15) #4
  %25 = icmp eq i64 %24, %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #4
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %6, i8* %3, i64 64) #4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %26
  %30 = call i32 @CBB_finish(%struct.cbb_st* nonnull %6, i8** nonnull %7, i64* nonnull %8) #4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %29
  %33 = load i8*, i8** %7, align 8
  %34 = load i64, i64* %8, align 8
  %35 = call i32 @ec_hash_to_curve_p384_xmd_sha512_sswu_draft07(%struct.ec_group_st* %0, %struct.EC_RAW_POINT* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @pmbtoken_exp2_hash_s.kHashSLabel, i64 0, i64 0), i64 30, i8* %33, i64 %34) #4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %22, %14, %21, %32, %29, %26, %4
  call void @ERR_put_error(i32 32, i32 0, i32 65, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 1274) #4
  br label %38

38:                                               ; preds = %32, %37
  %39 = phi i32 [ 0, %37 ], [ 1, %32 ]
  %40 = load i8*, i8** %7, align 8
  call void @OPENSSL_free(i8* %40) #4
  call void @CBB_cleanup(%struct.cbb_st* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pmbtoken_exp2_hash_c(%struct.ec_group_st*, %union.EC_SCALAR*, i8*, i64) #0 {
  %5 = tail call i32 @ec_hash_to_scalar_p384_xmd_sha512_draft07(%struct.ec_group_st* %0, %union.EC_SCALAR* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @pmbtoken_exp2_hash_c.kHashCLabel, i64 0, i64 0), i64 30, i8* %2, i64 %3) #4
  ret i32 %5
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
