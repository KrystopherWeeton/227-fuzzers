; ModuleID = '../../third_party/blink/renderer/core/css/style_rule.cc'
source_filename = "../../third_party/blink/renderer/core/css/style_rule.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.124", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.140", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.158", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.164", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.109", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::Worklist.40"* }
%"class.blink::Worklist.40" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist.47"* }
%"class.blink::Worklist.47" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.89", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.103", [4 x i8] }>
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91", %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64 }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { float }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.112", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.132" }
%"class.WTF::VectorBuffer.132" = type { %"class.WTF::VectorBufferBase.133" }
%"class.WTF::VectorBufferBase.133" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.146" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.40"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.47"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.168" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.164" = type { %"struct.std::__1::__atomic_base.165" }
%"struct.std::__1::__atomic_base.165" = type { %"struct.std::__1::__cxx_atomic_impl.166" }
%"struct.std::__1::__cxx_atomic_impl.166" = type { %"struct.std::__1::__cxx_atomic_base_impl.167" }
%"struct.std::__1::__cxx_atomic_base_impl.167" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.426" }
%"struct.std::__1::atomic.426" = type { %"struct.std::__1::__atomic_base.427" }
%"struct.std::__1::__atomic_base.427" = type { %"struct.std::__1::__atomic_base.428" }
%"struct.std::__1::__atomic_base.428" = type { %"struct.std::__1::__cxx_atomic_impl.429" }
%"struct.std::__1::__cxx_atomic_impl.429" = type { %"struct.std::__1::__cxx_atomic_base_impl.430" }
%"struct.std::__1::__cxx_atomic_base_impl.430" = type { i32 }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.196", %"class.blink::Member.200" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.173 }
%class.scoped_refptr.173 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.174" }
%"struct.std::__1::atomic.174" = type { %"struct.std::__1::__atomic_base.175" }
%"struct.std::__1::__atomic_base.175" = type { %"struct.std::__1::__atomic_base.176" }
%"struct.std::__1::__atomic_base.176" = type { %"struct.std::__1::__cxx_atomic_impl.177" }
%"struct.std::__1::__cxx_atomic_impl.177" = type { %"struct.std::__1::__cxx_atomic_base_impl.178" }
%"struct.std::__1::__cxx_atomic_base_impl.178" = type { i32 }
%"class.blink::Member.196" = type { %"class.blink::MemberBase.197" }
%"class.blink::MemberBase.197" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::Member.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.196", %"class.blink::CSSSelectorList" }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.196" }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.196" }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.231", %"class.blink::Member.231", %"class.blink::Member.231", %"class.blink::Member.231", %"class.blink::Member.231" }
%"class.blink::Member.231" = type { %"class.blink::MemberBase.232" }
%"class.blink::MemberBase.232" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::StyleRuleGroup" = type { %"class.blink::StyleRuleBase", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.206" }
%"class.WTF::Vector.206" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"class.blink::Member.209"*, i32, i32 }
%"class.blink::Member.209" = type { %"class.blink::MemberBase.210" }
%"class.blink::MemberBase.210" = type { %"class.blink::StyleRuleBase"* }
%"class.blink::StyleRuleCondition" = type { %"class.blink::StyleRuleGroup", %"class.WTF::String" }
%"class.blink::StyleRuleMedia" = type { %"class.blink::StyleRuleCondition", %class.scoped_refptr.212 }
%class.scoped_refptr.212 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.213", %"class.WTF::Vector.215" }
%"class.WTF::RefCounted.213" = type { %"class.base::RefCounted.214" }
%"class.base::RefCounted.214" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.215" = type { %"class.WTF::VectorBuffer.216" }
%"class.WTF::VectorBuffer.216" = type { %"class.WTF::VectorBufferBase.217" }
%"class.WTF::VectorBufferBase.217" = type { %"class.std::__1::unique_ptr.218"*, i32, i32 }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.221", %"class.WTF::String" }
%"class.WTF::Vector.221" = type { %"class.WTF::VectorBuffer.222" }
%"class.WTF::VectorBuffer.222" = type { %"class.WTF::VectorBufferBase.223" }
%"class.WTF::VectorBufferBase.223" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type opaque
%"class.blink::StyleRuleSupports" = type <{ %"class.blink::StyleRuleCondition", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::StyleRuleContainer" = type { %"class.blink::StyleRuleCondition", %"class.blink::Member.259" }
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::ContainerQuery"* }
%"class.blink::ContainerQuery" = type <{ %class.scoped_refptr.212, %"class.base::StrongAlias", [7 x i8] }>
%"class.base::StrongAlias" = type { i8 }
%"class.blink::StyleRuleViewport" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.196" }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::CSSStyleRule" = type { %"class.blink::CSSRule", %"class.blink::Member.263", %"class.blink::Member.265", %"class.blink::Member.267" }
%"class.blink::Member.263" = type { %"class.blink::MemberBase.264" }
%"class.blink::MemberBase.264" = type { %"class.blink::StyleRule"* }
%"class.blink::Member.265" = type { %"class.blink::MemberBase.266" }
%"class.blink::MemberBase.266" = type { %"class.blink::StyleRuleCSSStyleDeclaration"* }
%"class.blink::StyleRuleCSSStyleDeclaration" = type opaque
%"class.blink::Member.267" = type { %"class.blink::MemberBase.268" }
%"class.blink::MemberBase.268" = type { %"class.blink::StylePropertyMap"* }
%"class.blink::StylePropertyMap" = type { %"class.blink::StylePropertyMapReadOnlyMainThread" }
%"class.blink::StylePropertyMapReadOnlyMainThread" = type { %"class.blink::StylePropertyMapReadOnly" }
%"class.blink::StylePropertyMapReadOnly" = type { %"class.blink::ScriptWrappable", %"class.blink::PairIterable" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::CSSPageRule" = type { %"class.blink::CSSRule", %"class.blink::Member.269", %"class.blink::Member.265" }
%"class.blink::Member.269" = type { %"class.blink::MemberBase.270" }
%"class.blink::MemberBase.270" = type { %"class.blink::StyleRulePage"* }
%"class.blink::CSSPropertyRule" = type { %"class.blink::CSSRule", %"class.blink::Member.271" }
%"class.blink::Member.271" = type { %"class.blink::MemberBase.272" }
%"class.blink::MemberBase.272" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::CSSFontFaceRule" = type { %"class.blink::CSSRule", %"class.blink::Member.273", %"class.blink::Member.265" }
%"class.blink::Member.273" = type { %"class.blink::MemberBase.274" }
%"class.blink::MemberBase.274" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::CSSMediaRule" = type { %"class.blink::CSSConditionRule", %"class.blink::Member.288" }
%"class.blink::CSSConditionRule" = type { %"class.blink::CSSGroupingRule" }
%"class.blink::CSSGroupingRule" = type { %"class.blink::CSSRule", %"class.blink::Member.275", %"class.blink::HeapVector.277", %"class.blink::Member.286" }
%"class.blink::Member.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::StyleRuleGroup"* }
%"class.blink::HeapVector.277" = type { %"class.WTF::Vector.280" }
%"class.WTF::Vector.280" = type { %"class.WTF::VectorBuffer.281" }
%"class.WTF::VectorBuffer.281" = type { %"class.WTF::VectorBufferBase.282" }
%"class.WTF::VectorBufferBase.282" = type { %"class.blink::Member.283"*, i32, i32 }
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::CSSRule"* }
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.288" = type { %"class.blink::MemberBase.289" }
%"class.blink::MemberBase.289" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.212, %"class.blink::Member.290", %"class.blink::Member.283" }
%"class.blink::Member.290" = type { %"class.blink::MemberBase.291" }
%"class.blink::MemberBase.291" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSScrollTimelineRule" = type { %"class.blink::CSSRule", %"class.blink::Member.292" }
%"class.blink::Member.292" = type { %"class.blink::MemberBase.293" }
%"class.blink::MemberBase.293" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::CSSSupportsRule" = type { %"class.blink::CSSConditionRule" }
%"class.blink::StyleRuleImport" = type { %"class.blink::StyleRuleBase", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.235", %"class.blink::Member.237", %"class.WTF::String", %class.scoped_refptr.212, %"class.blink::Member.235", i8, i32 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::StyleRuleImport::ImportedStyleSheetClient"* }
%"class.blink::StyleRuleImport::ImportedStyleSheetClient" = type { %"class.blink::ResourceClient.base", %"class.blink::Member.244" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.241", [7 x i8], %"class.blink::Member.242", i8 }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.241" = type { i8 }
%"class.blink::Member.242" = type { %"class.blink::MemberBase.243" }
%"class.blink::MemberBase.243" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type opaque
%"class.blink::Member.244" = type { %"class.blink::MemberBase.245" }
%"class.blink::MemberBase.245" = type { %"class.blink::StyleRuleImport"* }
%"class.blink::Member.235" = type { %"class.blink::MemberBase.236" }
%"class.blink::MemberBase.236" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%"class.blink::CSSImportRule" = type { %"class.blink::CSSRule", %"class.blink::Member.244", %"class.blink::Member.288", %"class.blink::Member.290" }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.246", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.246" = type { %"class.WTF::Vector.249" }
%"class.WTF::Vector.249" = type { %"class.WTF::VectorBuffer.250" }
%"class.WTF::VectorBuffer.250" = type { %"class.WTF::VectorBufferBase.251" }
%"class.WTF::VectorBufferBase.251" = type { %"class.blink::Member.252"*, i32, i32 }
%"class.blink::Member.252" = type opaque
%"class.blink::CSSKeyframesRule" = type <{ %"class.blink::CSSRule", %"class.blink::Member.294", %"class.blink::HeapVector.296", %"class.blink::Member.286", i8, [7 x i8] }>
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::HeapVector.296" = type { %"class.WTF::Vector.299" }
%"class.WTF::Vector.299" = type { %"class.WTF::VectorBuffer.300" }
%"class.WTF::VectorBuffer.300" = type { %"class.WTF::VectorBufferBase.301" }
%"class.WTF::VectorBufferBase.301" = type { %"class.blink::Member.302"*, i32, i32 }
%"class.blink::Member.302" = type opaque
%"class.blink::StyleRuleNamespace" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::CSSNamespaceRule" = type { %"class.blink::CSSRule", %"class.blink::Member.304" }
%"class.blink::Member.304" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::StyleRuleNamespace"* }
%"class.blink::CSSContainerRule" = type { %"class.blink::CSSConditionRule" }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.231", %"class.blink::Member.231", %"class.blink::Member.231", %"class.blink::Member.231", %"class.blink::Member.231", %"class.blink::Member.231", %"class.blink::Member.231", %"class.blink::Member.231", %"class.blink::Member.231", %"class.blink::Member.231", i32, [4 x i8] }>
%"class.blink::CSSCounterStyleRule" = type { %"class.blink::CSSRule", %"class.blink::Member.306" }
%"class.blink::Member.306" = type { %"class.blink::MemberBase.307" }
%"class.blink::MemberBase.307" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleKeyframe" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.196", %"class.WTF::Vector.254" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { double*, i32, i32 }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.308", %"class.blink::HeapVector.313", i8, [7 x i8] }>
%"class.blink::Member.308" = type { %"class.blink::MemberBase.309" }
%"class.blink::MemberBase.309" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.311" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.355", i32, i8, [3 x i8], %"class.blink::HeapVector.357", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.365", %"class.blink::Member.367", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.376", %"class.blink::Member.382", %"class.blink::Member.384", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.329" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.326" }
%"class.WTF::HashTable.326" = type <{ %"class.blink::WeakMember.328"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.328" = type opaque
%"class.blink::Supplementable.329" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.330" }
%"class.blink::HeapHashMap.330" = type { %"class.WTF::HashMap.333" }
%"class.WTF::HashMap.333" = type { %"class.WTF::HashTable.334" }
%"class.WTF::HashTable.334" = type <{ %"struct.WTF::KeyValuePair.336"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.336" = type { i8*, %"class.blink::Member.386" }
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.388" }
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.337, %"class.std::__1::unique_ptr.338", %"class.std::__1::unique_ptr.338", %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.344", %"class.blink::Member.350", i32, [4 x i8], %"class.WTF::HashSet.351", i32, i32 }
%class.scoped_refptr.337 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.350" = type { %"class.blink::MemberBase.310" }
%"class.WTF::HashSet.351" = type { %"class.WTF::HashTable.352" }
%"class.WTF::HashTable.352" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.355" = type { %"class.blink::MemberBase.356" }
%"class.blink::MemberBase.356" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.357" = type { %"class.WTF::Vector.360" }
%"class.WTF::Vector.360" = type { %"class.WTF::VectorBuffer.361" }
%"class.WTF::VectorBuffer.361" = type { %"class.WTF::VectorBufferBase.362" }
%"class.WTF::VectorBufferBase.362" = type { %"class.blink::Member.363"*, i32, i32 }
%"class.blink::Member.363" = type opaque
%"class.blink::Member.365" = type { %"class.blink::MemberBase.366" }
%"class.blink::MemberBase.366" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.369", i32, i32 }
%"class.blink::HeapHashMap.369" = type { %"class.WTF::HashMap.372" }
%"class.WTF::HashMap.372" = type { %"class.WTF::HashTable.373" }
%"class.WTF::HashTable.373" = type <{ %"struct.WTF::KeyValuePair.375"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.375" = type opaque
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::HeapVector.313" = type { %"class.WTF::Vector.316" }
%"class.WTF::Vector.316" = type { %"class.WTF::VectorBuffer.317" }
%"class.WTF::VectorBuffer.317" = type { %"class.WTF::VectorBufferBase.318", [96 x i8] }
%"class.WTF::VectorBufferBase.318" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.231" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.412 }
%union.anon.412 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE7EraseAtEj = comdat any

$_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_13StyleRuleBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13StyleRuleBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13StyleRuleBaseEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_18StyleRuleNamespaceEE4CallIJRKN3WTF12AtomicStringES7_EEEPS1_DpOT_ = comdat any

$_ZN5blink18StyleRuleNamespaceC2EN3WTF12AtomicStringES2_ = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_21CSSLazyPropertyParserEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRuleBaseEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ContainerQueryEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ContainerQueryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ContainerQueryEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ContainerQueryEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14ContainerQueryEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ContainerQueryEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13StyleRuleBaseEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::StyleRuleBase]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13StyleRuleBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13StyleRuleBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13StyleRuleBaseEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.6 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13StyleRuleBaseEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StyleRuleBase>, WTF::VectorTraits<blink::Member<blink::StyleRuleBase> > >]\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ContainerQueryEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ContainerQuery]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ContainerQueryEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ContainerQueryEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ContainerQueryEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ContainerQueryEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ContainerQueryEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink9StyleRuleC1ENS_15CSSSelectorListEPNS_19CSSPropertyValueSetE = hidden unnamed_addr alias void (%"class.blink::StyleRule"*, %"class.blink::CSSSelectorList"*, %"class.blink::CSSPropertyValueSet"*), void (%"class.blink::StyleRule"*, %"class.blink::CSSSelectorList"*, %"class.blink::CSSPropertyValueSet"*)* @_ZN5blink9StyleRuleC2ENS_15CSSSelectorListEPNS_19CSSPropertyValueSetE
@_ZN5blink9StyleRuleC1ENS_15CSSSelectorListEPNS_21CSSLazyPropertyParserE = hidden unnamed_addr alias void (%"class.blink::StyleRule"*, %"class.blink::CSSSelectorList"*, %"class.blink::CSSLazyPropertyParser"*), void (%"class.blink::StyleRule"*, %"class.blink::CSSSelectorList"*, %"class.blink::CSSLazyPropertyParser"*)* @_ZN5blink9StyleRuleC2ENS_15CSSSelectorListEPNS_21CSSLazyPropertyParserE
@_ZN5blink9StyleRuleC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::StyleRule"*, %"class.blink::StyleRule"*), void (%"class.blink::StyleRule"*, %"class.blink::StyleRule"*)* @_ZN5blink9StyleRuleC2ERKS0_
@_ZN5blink9StyleRuleD1Ev = hidden unnamed_addr alias void (%"class.blink::StyleRule"*), void (%"class.blink::StyleRule"*)* @_ZN5blink9StyleRuleD2Ev
@_ZN5blink13StyleRulePageC1ENS_15CSSSelectorListEPNS_19CSSPropertyValueSetE = hidden unnamed_addr alias void (%"class.blink::StyleRulePage"*, %"class.blink::CSSSelectorList"*, %"class.blink::CSSPropertyValueSet"*), void (%"class.blink::StyleRulePage"*, %"class.blink::CSSSelectorList"*, %"class.blink::CSSPropertyValueSet"*)* @_ZN5blink13StyleRulePageC2ENS_15CSSSelectorListEPNS_19CSSPropertyValueSetE
@_ZN5blink13StyleRulePageC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::StyleRulePage"*, %"class.blink::StyleRulePage"*), void (%"class.blink::StyleRulePage"*, %"class.blink::StyleRulePage"*)* @_ZN5blink13StyleRulePageC2ERKS0_
@_ZN5blink13StyleRulePageD1Ev = hidden unnamed_addr alias void (%"class.blink::StyleRulePage"*), void (%"class.blink::StyleRulePage"*)* @_ZN5blink13StyleRulePageD2Ev
@_ZN5blink17StyleRulePropertyC1ERKN3WTF6StringEPNS_19CSSPropertyValueSetE = hidden unnamed_addr alias void (%"class.blink::StyleRuleProperty"*, %"class.WTF::String"*, %"class.blink::CSSPropertyValueSet"*), void (%"class.blink::StyleRuleProperty"*, %"class.WTF::String"*, %"class.blink::CSSPropertyValueSet"*)* @_ZN5blink17StyleRulePropertyC2ERKN3WTF6StringEPNS_19CSSPropertyValueSetE
@_ZN5blink17StyleRulePropertyC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::StyleRuleProperty"*, %"class.blink::StyleRuleProperty"*), void (%"class.blink::StyleRuleProperty"*, %"class.blink::StyleRuleProperty"*)* @_ZN5blink17StyleRulePropertyC2ERKS0_
@_ZN5blink17StyleRulePropertyD1Ev = hidden unnamed_addr alias void (%"class.blink::StyleRuleProperty"*), void (%"class.blink::StyleRuleProperty"*)* @_ZN5blink17StyleRulePropertyD2Ev
@_ZN5blink17StyleRuleFontFaceC1EPNS_19CSSPropertyValueSetE = hidden unnamed_addr alias void (%"class.blink::StyleRuleFontFace"*, %"class.blink::CSSPropertyValueSet"*), void (%"class.blink::StyleRuleFontFace"*, %"class.blink::CSSPropertyValueSet"*)* @_ZN5blink17StyleRuleFontFaceC2EPNS_19CSSPropertyValueSetE
@_ZN5blink17StyleRuleFontFaceC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::StyleRuleFontFace"*, %"class.blink::StyleRuleFontFace"*), void (%"class.blink::StyleRuleFontFace"*, %"class.blink::StyleRuleFontFace"*)* @_ZN5blink17StyleRuleFontFaceC2ERKS0_
@_ZN5blink23StyleRuleScrollTimelineC1ERKN3WTF6StringEPKNS_19CSSPropertyValueSetE = hidden unnamed_addr alias void (%"class.blink::StyleRuleScrollTimeline"*, %"class.WTF::String"*, %"class.blink::CSSPropertyValueSet"*), void (%"class.blink::StyleRuleScrollTimeline"*, %"class.WTF::String"*, %"class.blink::CSSPropertyValueSet"*)* @_ZN5blink23StyleRuleScrollTimelineC2ERKN3WTF6StringEPKNS_19CSSPropertyValueSetE
@_ZN5blink23StyleRuleScrollTimelineD1Ev = hidden unnamed_addr alias void (%"class.blink::StyleRuleScrollTimeline"*), void (%"class.blink::StyleRuleScrollTimeline"*)* @_ZN5blink23StyleRuleScrollTimelineD2Ev
@_ZN5blink14StyleRuleGroupC1ENS_13StyleRuleBase8RuleTypeERNS_10HeapVectorINS_6MemberIS1_EELj0EEE = hidden unnamed_addr alias void (%"class.blink::StyleRuleGroup"*, i32, %"class.blink::HeapVector"*), void (%"class.blink::StyleRuleGroup"*, i32, %"class.blink::HeapVector"*)* @_ZN5blink14StyleRuleGroupC2ENS_13StyleRuleBase8RuleTypeERNS_10HeapVectorINS_6MemberIS1_EELj0EEE
@_ZN5blink14StyleRuleGroupC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::StyleRuleGroup"*, %"class.blink::StyleRuleGroup"*), void (%"class.blink::StyleRuleGroup"*, %"class.blink::StyleRuleGroup"*)* @_ZN5blink14StyleRuleGroupC2ERKS0_
@_ZN5blink18StyleRuleConditionC1ENS_13StyleRuleBase8RuleTypeERNS_10HeapVectorINS_6MemberIS1_EELj0EEE = hidden unnamed_addr alias void (%"class.blink::StyleRuleCondition"*, i32, %"class.blink::HeapVector"*), void (%"class.blink::StyleRuleCondition"*, i32, %"class.blink::HeapVector"*)* @_ZN5blink18StyleRuleConditionC2ENS_13StyleRuleBase8RuleTypeERNS_10HeapVectorINS_6MemberIS1_EELj0EEE
@_ZN5blink18StyleRuleConditionC1ENS_13StyleRuleBase8RuleTypeERKN3WTF6StringERNS_10HeapVectorINS_6MemberIS1_EELj0EEE = hidden unnamed_addr alias void (%"class.blink::StyleRuleCondition"*, i32, %"class.WTF::String"*, %"class.blink::HeapVector"*), void (%"class.blink::StyleRuleCondition"*, i32, %"class.WTF::String"*, %"class.blink::HeapVector"*)* @_ZN5blink18StyleRuleConditionC2ENS_13StyleRuleBase8RuleTypeERKN3WTF6StringERNS_10HeapVectorINS_6MemberIS1_EELj0EEE
@_ZN5blink18StyleRuleConditionC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::StyleRuleCondition"*, %"class.blink::StyleRuleCondition"*), void (%"class.blink::StyleRuleCondition"*, %"class.blink::StyleRuleCondition"*)* @_ZN5blink18StyleRuleConditionC2ERKS0_
@_ZN5blink14StyleRuleMediaC1E13scoped_refptrINS_13MediaQuerySetEERNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE = hidden unnamed_addr alias void (%"class.blink::StyleRuleMedia"*, %"class.blink::MediaQuerySet"*, %"class.blink::HeapVector"*), void (%"class.blink::StyleRuleMedia"*, %"class.blink::MediaQuerySet"*, %"class.blink::HeapVector"*)* @_ZN5blink14StyleRuleMediaC2E13scoped_refptrINS_13MediaQuerySetEERNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE
@_ZN5blink14StyleRuleMediaC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::StyleRuleMedia"*, %"class.blink::StyleRuleMedia"*), void (%"class.blink::StyleRuleMedia"*, %"class.blink::StyleRuleMedia"*)* @_ZN5blink14StyleRuleMediaC2ERKS0_
@_ZN5blink17StyleRuleSupportsC1ERKN3WTF6StringEbRNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE = hidden unnamed_addr alias void (%"class.blink::StyleRuleSupports"*, %"class.WTF::String"*, i1, %"class.blink::HeapVector"*), void (%"class.blink::StyleRuleSupports"*, %"class.WTF::String"*, i1, %"class.blink::HeapVector"*)* @_ZN5blink17StyleRuleSupportsC2ERKN3WTF6StringEbRNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE
@_ZN5blink17StyleRuleSupportsC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::StyleRuleSupports"*, %"class.blink::StyleRuleSupports"*), void (%"class.blink::StyleRuleSupports"*, %"class.blink::StyleRuleSupports"*)* @_ZN5blink17StyleRuleSupportsC2ERKS0_
@_ZN5blink18StyleRuleContainerC1ERNS_14ContainerQueryERNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE = hidden unnamed_addr alias void (%"class.blink::StyleRuleContainer"*, %"class.blink::ContainerQuery"*, %"class.blink::HeapVector"*), void (%"class.blink::StyleRuleContainer"*, %"class.blink::ContainerQuery"*, %"class.blink::HeapVector"*)* @_ZN5blink18StyleRuleContainerC2ERNS_14ContainerQueryERNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE
@_ZN5blink18StyleRuleContainerC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::StyleRuleContainer"*, %"class.blink::StyleRuleContainer"*), void (%"class.blink::StyleRuleContainer"*, %"class.blink::StyleRuleContainer"*)* @_ZN5blink18StyleRuleContainerC2ERKS0_
@_ZN5blink17StyleRuleViewportC1EPNS_19CSSPropertyValueSetE = hidden unnamed_addr alias void (%"class.blink::StyleRuleViewport"*, %"class.blink::CSSPropertyValueSet"*), void (%"class.blink::StyleRuleViewport"*, %"class.blink::CSSPropertyValueSet"*)* @_ZN5blink17StyleRuleViewportC2EPNS_19CSSPropertyValueSetE
@_ZN5blink17StyleRuleViewportC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::StyleRuleViewport"*, %"class.blink::StyleRuleViewport"*), void (%"class.blink::StyleRuleViewport"*, %"class.blink::StyleRuleViewport"*)* @_ZN5blink17StyleRuleViewportC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSRule"* @_ZNK5blink13StyleRuleBase18CreateCSSOMWrapperEPNS_13CSSStyleSheetE(%"class.blink::StyleRuleBase"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::CSSRule"* @_ZNK5blink13StyleRuleBase18CreateCSSOMWrapperEPNS_13CSSStyleSheetEPNS_7CSSRuleE(%"class.blink::StyleRuleBase"* %0, %"class.blink::CSSStyleSheet"* %1, %"class.blink::CSSRule"* null)
  ret %"class.blink::CSSRule"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSRule"* @_ZNK5blink13StyleRuleBase18CreateCSSOMWrapperEPNS_13CSSStyleSheetEPNS_7CSSRuleE(%"class.blink::StyleRuleBase"*, %"class.blink::CSSStyleSheet"*, %"class.blink::CSSRule"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 1
  switch i8 %5, label %61 [
    i8 1, label %6
    i8 5, label %10
    i8 6, label %14
    i8 4, label %18
    i8 3, label %22
    i8 12, label %26
    i8 13, label %30
    i8 2, label %34
    i8 7, label %38
    i8 9, label %42
    i8 10, label %46
    i8 11, label %50
    i8 8, label %65
    i8 0, label %65
    i8 14, label %65
  ]

6:                                                ; preds = %3
  %7 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRule"*
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #11
  %9 = bitcast i8* %8 to %"class.blink::CSSStyleRule"*
  tail call void @_ZN5blink12CSSStyleRuleC1EPNS_9StyleRuleEPNS_13CSSStyleSheetE(%"class.blink::CSSStyleRule"* %9, %"class.blink::StyleRule"* %7, %"class.blink::CSSStyleSheet"* %1) #11
  br label %54

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRulePage"*
  %12 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #11
  %13 = bitcast i8* %12 to %"class.blink::CSSPageRule"*
  tail call void @_ZN5blink11CSSPageRuleC1EPNS_13StyleRulePageEPNS_13CSSStyleSheetE(%"class.blink::CSSPageRule"* %13, %"class.blink::StyleRulePage"* %11, %"class.blink::CSSStyleSheet"* %1) #11
  br label %54

14:                                               ; preds = %3
  %15 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleProperty"*
  %16 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #11
  %17 = bitcast i8* %16 to %"class.blink::CSSPropertyRule"*
  tail call void @_ZN5blink15CSSPropertyRuleC1EPNS_17StyleRulePropertyEPNS_13CSSStyleSheetE(%"class.blink::CSSPropertyRule"* %17, %"class.blink::StyleRuleProperty"* %15, %"class.blink::CSSStyleSheet"* %1) #11
  br label %54

18:                                               ; preds = %3
  %19 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleFontFace"*
  %20 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #11
  %21 = bitcast i8* %20 to %"class.blink::CSSFontFaceRule"*
  tail call void @_ZN5blink15CSSFontFaceRuleC1EPNS_17StyleRuleFontFaceEPNS_13CSSStyleSheetE(%"class.blink::CSSFontFaceRule"* %21, %"class.blink::StyleRuleFontFace"* %19, %"class.blink::CSSStyleSheet"* %1) #11
  br label %54

22:                                               ; preds = %3
  %23 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleMedia"*
  %24 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 72) #11
  %25 = bitcast i8* %24 to %"class.blink::CSSMediaRule"*
  tail call void @_ZN5blink12CSSMediaRuleC1EPNS_14StyleRuleMediaEPNS_13CSSStyleSheetE(%"class.blink::CSSMediaRule"* %25, %"class.blink::StyleRuleMedia"* %23, %"class.blink::CSSStyleSheet"* %1) #11
  br label %54

26:                                               ; preds = %3
  %27 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleScrollTimeline"*
  %28 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #11
  %29 = bitcast i8* %28 to %"class.blink::CSSScrollTimelineRule"*
  tail call void @_ZN5blink21CSSScrollTimelineRuleC1EPNS_23StyleRuleScrollTimelineEPNS_13CSSStyleSheetE(%"class.blink::CSSScrollTimelineRule"* %29, %"class.blink::StyleRuleScrollTimeline"* %27, %"class.blink::CSSStyleSheet"* %1) #11
  br label %54

30:                                               ; preds = %3
  %31 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleSupports"*
  %32 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #11
  %33 = bitcast i8* %32 to %"class.blink::CSSSupportsRule"*
  tail call void @_ZN5blink15CSSSupportsRuleC1EPNS_17StyleRuleSupportsEPNS_13CSSStyleSheetE(%"class.blink::CSSSupportsRule"* %33, %"class.blink::StyleRuleSupports"* %31, %"class.blink::CSSStyleSheet"* %1) #11
  br label %54

34:                                               ; preds = %3
  %35 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleImport"*
  %36 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #11
  %37 = bitcast i8* %36 to %"class.blink::CSSImportRule"*
  tail call void @_ZN5blink13CSSImportRuleC1EPNS_15StyleRuleImportEPNS_13CSSStyleSheetE(%"class.blink::CSSImportRule"* %37, %"class.blink::StyleRuleImport"* %35, %"class.blink::CSSStyleSheet"* %1) #11
  br label %54

38:                                               ; preds = %3
  %39 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleKeyframes"*
  %40 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 72) #11
  %41 = bitcast i8* %40 to %"class.blink::CSSKeyframesRule"*
  tail call void @_ZN5blink16CSSKeyframesRuleC1EPNS_18StyleRuleKeyframesEPNS_13CSSStyleSheetE(%"class.blink::CSSKeyframesRule"* %41, %"class.blink::StyleRuleKeyframes"* %39, %"class.blink::CSSStyleSheet"* %1) #11
  br label %54

42:                                               ; preds = %3
  %43 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleNamespace"*
  %44 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #11
  %45 = bitcast i8* %44 to %"class.blink::CSSNamespaceRule"*
  tail call void @_ZN5blink16CSSNamespaceRuleC1EPNS_18StyleRuleNamespaceEPNS_13CSSStyleSheetE(%"class.blink::CSSNamespaceRule"* %45, %"class.blink::StyleRuleNamespace"* %43, %"class.blink::CSSStyleSheet"* %1) #11
  br label %54

46:                                               ; preds = %3
  %47 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleContainer"*
  %48 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #11
  %49 = bitcast i8* %48 to %"class.blink::CSSContainerRule"*
  tail call void @_ZN5blink16CSSContainerRuleC1EPNS_18StyleRuleContainerEPNS_13CSSStyleSheetE(%"class.blink::CSSContainerRule"* %49, %"class.blink::StyleRuleContainer"* %47, %"class.blink::CSSStyleSheet"* %1) #11
  br label %54

50:                                               ; preds = %3
  %51 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleCounterStyle"*
  %52 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #11
  %53 = bitcast i8* %52 to %"class.blink::CSSCounterStyleRule"*
  tail call void @_ZN5blink19CSSCounterStyleRuleC1EPNS_21StyleRuleCounterStyleEPNS_13CSSStyleSheetE(%"class.blink::CSSCounterStyleRule"* %53, %"class.blink::StyleRuleCounterStyle"* %51, %"class.blink::CSSStyleSheet"* %1) #11
  br label %54

54:                                               ; preds = %6, %10, %14, %18, %22, %26, %30, %34, %38, %42, %46, %50
  %55 = phi i8* [ %8, %6 ], [ %12, %10 ], [ %16, %14 ], [ %20, %18 ], [ %24, %22 ], [ %28, %26 ], [ %32, %30 ], [ %36, %34 ], [ %40, %38 ], [ %44, %42 ], [ %48, %46 ], [ %52, %50 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 -4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = or i16 %58, 1
  store atomic i16 %59, i16* %57 release, align 2
  %60 = bitcast i8* %55 to %"class.blink::CSSRule"*
  br label %61

61:                                               ; preds = %54, %3
  %62 = phi %"class.blink::CSSRule"* [ null, %3 ], [ %60, %54 ]
  %63 = icmp eq %"class.blink::CSSRule"* %2, null
  br i1 %63, label %65, label %64

64:                                               ; preds = %61
  tail call void @_ZN5blink7CSSRule13SetParentRuleEPS0_(%"class.blink::CSSRule"* %62, %"class.blink::CSSRule"* nonnull %2) #11
  br label %65

65:                                               ; preds = %64, %61, %3, %3, %3
  %66 = phi %"class.blink::CSSRule"* [ null, %3 ], [ null, %3 ], [ null, %3 ], [ %62, %61 ], [ %62, %64 ]
  ret %"class.blink::CSSRule"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSRule"* @_ZNK5blink13StyleRuleBase18CreateCSSOMWrapperEPNS_7CSSRuleE(%"class.blink::StyleRuleBase"*, %"class.blink::CSSRule"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::CSSRule"* @_ZNK5blink13StyleRuleBase18CreateCSSOMWrapperEPNS_13CSSStyleSheetEPNS_7CSSRuleE(%"class.blink::StyleRuleBase"* %0, %"class.blink::CSSStyleSheet"* null, %"class.blink::CSSRule"* %1)
  ret %"class.blink::CSSRule"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 1
  switch i8 %4, label %198 [
    i8 11, label %196
    i8 1, label %5
    i8 5, label %27
    i8 6, label %38
    i8 4, label %49
    i8 3, label %60
    i8 12, label %76
    i8 13, label %136
    i8 2, label %152
    i8 7, label %154
    i8 8, label %156
    i8 10, label %169
    i8 14, label %158
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 16
  %7 = bitcast %"class.blink::StyleRuleBase"* %6 to i64*
  %8 = load atomic i64, i64* %7 monotonic, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %5
  %11 = inttoptr i64 %8 to i8*
  %12 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %13, i64 5
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, align 8
  tail call void %15(%"class.blink::Visitor"* %1, i8* nonnull %11, i8* nonnull %11, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #11
  br label %16

16:                                               ; preds = %10, %5
  %17 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 24
  %18 = bitcast %"class.blink::StyleRuleBase"* %17 to i64*
  %19 = load atomic i64, i64* %18 monotonic, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %198, label %21

21:                                               ; preds = %16
  %22 = inttoptr i64 %19 to i8*
  %23 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %24, i64 5
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %25, align 8
  tail call void %26(%"class.blink::Visitor"* %1, i8* nonnull %22, i8* nonnull %22, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21CSSLazyPropertyParserEE5TraceEPNS_7VisitorEPKv) #11
  br label %198

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %29 = bitcast %"class.blink::StyleRuleBase"* %28 to i64*
  %30 = load atomic i64, i64* %29 monotonic, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %198, label %32

32:                                               ; preds = %27
  %33 = inttoptr i64 %30 to i8*
  %34 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %1, i8* nonnull %33, i8* nonnull %33, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #11
  br label %198

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 16
  %40 = bitcast %"class.blink::StyleRuleBase"* %39 to i64*
  %41 = load atomic i64, i64* %40 monotonic, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %198, label %43

43:                                               ; preds = %38
  %44 = inttoptr i64 %41 to i8*
  %45 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %1, i8* nonnull %44, i8* nonnull %44, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #11
  br label %198

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %51 = bitcast %"class.blink::StyleRuleBase"* %50 to i64*
  %52 = load atomic i64, i64* %51 monotonic, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %198, label %54

54:                                               ; preds = %49
  %55 = inttoptr i64 %52 to i8*
  %56 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %57 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %57, i64 5
  %59 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, align 8
  tail call void %59(%"class.blink::Visitor"* %1, i8* nonnull %55, i8* nonnull %55, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #11
  br label %198

60:                                               ; preds = %2
  %61 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %62 = bitcast %"class.blink::StyleRuleBase"* %61 to i64*
  %63 = load atomic i64, i64* %62 monotonic, align 8
  %64 = icmp eq i64 %63, 0
  %65 = bitcast %"class.blink::StyleRuleBase"* %61 to i8**
  %66 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %67 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %67, i64 11
  %69 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %68, align 8
  tail call void %69(%"class.blink::Visitor"* %1, i8** %65) #11
  br i1 %64, label %198, label %70

70:                                               ; preds = %60
  %71 = inttoptr i64 %63 to i8*
  %72 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, i64 5
  %75 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %74, align 8
  tail call void %75(%"class.blink::Visitor"* %1, i8* nonnull %71, i8* nonnull %71, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %198

76:                                               ; preds = %2
  %77 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 16
  %78 = bitcast %"class.blink::StyleRuleBase"* %77 to i64*
  %79 = load atomic i64, i64* %78 monotonic, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %88, label %81

81:                                               ; preds = %76
  %82 = inttoptr i64 %79 to %"class.blink::CSSValue"*
  %83 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %82, i64 0, i32 0
  %84 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %85 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %85, i64 5
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %86, align 8
  tail call void %87(%"class.blink::Visitor"* %1, i8* %83, i8* %83, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #11
  br label %88

88:                                               ; preds = %81, %76
  %89 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 24
  %90 = bitcast %"class.blink::StyleRuleBase"* %89 to i64*
  %91 = load atomic i64, i64* %90 monotonic, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %100, label %93

93:                                               ; preds = %88
  %94 = inttoptr i64 %91 to %"class.blink::CSSValue"*
  %95 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %94, i64 0, i32 0
  %96 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %97 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %97, i64 5
  %99 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %98, align 8
  tail call void %99(%"class.blink::Visitor"* %1, i8* %95, i8* %95, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #11
  br label %100

100:                                              ; preds = %93, %88
  %101 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 32
  %102 = bitcast %"class.blink::StyleRuleBase"* %101 to i64*
  %103 = load atomic i64, i64* %102 monotonic, align 8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %112, label %105

105:                                              ; preds = %100
  %106 = inttoptr i64 %103 to %"class.blink::CSSValue"*
  %107 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %106, i64 0, i32 0
  %108 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %109 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %109, i64 5
  %111 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %110, align 8
  tail call void %111(%"class.blink::Visitor"* %1, i8* %107, i8* %107, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #11
  br label %112

112:                                              ; preds = %105, %100
  %113 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 40
  %114 = bitcast %"class.blink::StyleRuleBase"* %113 to i64*
  %115 = load atomic i64, i64* %114 monotonic, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %124, label %117

117:                                              ; preds = %112
  %118 = inttoptr i64 %115 to %"class.blink::CSSValue"*
  %119 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %118, i64 0, i32 0
  %120 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %121 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %121, i64 5
  %123 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %122, align 8
  tail call void %123(%"class.blink::Visitor"* %1, i8* %119, i8* %119, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #11
  br label %124

124:                                              ; preds = %117, %112
  %125 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 48
  %126 = bitcast %"class.blink::StyleRuleBase"* %125 to i64*
  %127 = load atomic i64, i64* %126 monotonic, align 8
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %198, label %129

129:                                              ; preds = %124
  %130 = inttoptr i64 %127 to %"class.blink::CSSValue"*
  %131 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %130, i64 0, i32 0
  %132 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %133 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %133, i64 5
  %135 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %134, align 8
  tail call void %135(%"class.blink::Visitor"* %1, i8* %131, i8* %131, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #11
  br label %198

136:                                              ; preds = %2
  %137 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %138 = bitcast %"class.blink::StyleRuleBase"* %137 to i64*
  %139 = load atomic i64, i64* %138 monotonic, align 8
  %140 = icmp eq i64 %139, 0
  %141 = bitcast %"class.blink::StyleRuleBase"* %137 to i8**
  %142 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %143 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %143, i64 11
  %145 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %144, align 8
  tail call void %145(%"class.blink::Visitor"* %1, i8** %141) #11
  br i1 %140, label %198, label %146

146:                                              ; preds = %136
  %147 = inttoptr i64 %139 to i8*
  %148 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %149 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %149, i64 5
  %151 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %150, align 8
  tail call void %151(%"class.blink::Visitor"* %1, i8* nonnull %147, i8* nonnull %147, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %198

152:                                              ; preds = %2
  %153 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleImport"*
  tail call void @_ZNK5blink15StyleRuleImport18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleImport"* %153, %"class.blink::Visitor"* %1) #11
  br label %198

154:                                              ; preds = %2
  %155 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleKeyframes"*
  tail call void @_ZNK5blink18StyleRuleKeyframes18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleKeyframes"* %155, %"class.blink::Visitor"* %1) #11
  br label %198

156:                                              ; preds = %2
  %157 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleKeyframe"*
  tail call void @_ZNK5blink17StyleRuleKeyframe18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleKeyframe"* %157, %"class.blink::Visitor"* %1) #11
  br label %198

158:                                              ; preds = %2
  %159 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %160 = bitcast %"class.blink::StyleRuleBase"* %159 to i64*
  %161 = load atomic i64, i64* %160 monotonic, align 8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %198, label %163

163:                                              ; preds = %158
  %164 = inttoptr i64 %161 to i8*
  %165 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %166 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %166, i64 5
  %168 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %167, align 8
  tail call void %168(%"class.blink::Visitor"* %1, i8* nonnull %164, i8* nonnull %164, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #11
  br label %198

169:                                              ; preds = %2
  %170 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 32
  %171 = bitcast %"class.blink::StyleRuleBase"* %170 to i64*
  %172 = load atomic i64, i64* %171 monotonic, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %180, label %174

174:                                              ; preds = %169
  %175 = inttoptr i64 %172 to i8*
  %176 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %177 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %177, i64 5
  %179 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %178, align 8
  tail call void %179(%"class.blink::Visitor"* %1, i8* nonnull %175, i8* nonnull %175, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14ContainerQueryEE5TraceEPNS_7VisitorEPKv) #11
  br label %180

180:                                              ; preds = %174, %169
  %181 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %182 = bitcast %"class.blink::StyleRuleBase"* %181 to i64*
  %183 = load atomic i64, i64* %182 monotonic, align 8
  %184 = icmp eq i64 %183, 0
  %185 = bitcast %"class.blink::StyleRuleBase"* %181 to i8**
  %186 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %187 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %186, align 8
  %188 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %187, i64 11
  %189 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %188, align 8
  tail call void %189(%"class.blink::Visitor"* %1, i8** %185) #11
  br i1 %184, label %198, label %190

190:                                              ; preds = %180
  %191 = inttoptr i64 %183 to i8*
  %192 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %193 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %192, align 8
  %194 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %193, i64 5
  %195 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %194, align 8
  tail call void %195(%"class.blink::Visitor"* %1, i8* nonnull %191, i8* nonnull %191, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %198

196:                                              ; preds = %2
  %197 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleCounterStyle"*
  tail call void @_ZNK5blink21StyleRuleCounterStyle18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleCounterStyle"* %197, %"class.blink::Visitor"* %1) #11
  br label %198

198:                                              ; preds = %190, %180, %163, %158, %146, %136, %129, %124, %70, %60, %54, %49, %43, %38, %32, %27, %21, %16, %152, %154, %156, %196, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9StyleRule18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRule"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.196"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::Member.200"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21CSSLazyPropertyParserEE5TraceEPNS_7VisitorEPKv) #11
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13StyleRulePage18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRulePage"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRulePage", %"class.blink::StyleRulePage"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.196"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17StyleRuleProperty18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleProperty"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.196"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17StyleRuleFontFace18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleFontFace"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.196"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14StyleRuleMedia18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleMedia"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleMedia", %"class.blink::StyleRuleMedia"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #11
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23StyleRuleScrollTimeline18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleScrollTimeline"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleScrollTimeline", %"class.blink::StyleRuleScrollTimeline"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.231"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSValue"*
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %8, i64 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #11
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::StyleRuleScrollTimeline", %"class.blink::StyleRuleScrollTimeline"* %0, i64 0, i32 3
  %16 = bitcast %"class.blink::Member.231"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to %"class.blink::CSSValue"*
  %21 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %20, i64 0, i32 0
  %22 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, i64 5
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8* %21, i8* %21, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #11
  br label %26

26:                                               ; preds = %14, %19
  %27 = getelementptr inbounds %"class.blink::StyleRuleScrollTimeline", %"class.blink::StyleRuleScrollTimeline"* %0, i64 0, i32 4
  %28 = bitcast %"class.blink::Member.231"* %27 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %26
  %32 = inttoptr i64 %29 to %"class.blink::CSSValue"*
  %33 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %32, i64 0, i32 0
  %34 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %1, i8* %33, i8* %33, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %26, %31
  %39 = getelementptr inbounds %"class.blink::StyleRuleScrollTimeline", %"class.blink::StyleRuleScrollTimeline"* %0, i64 0, i32 5
  %40 = bitcast %"class.blink::Member.231"* %39 to i64*
  %41 = load atomic i64, i64* %40 monotonic, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %38
  %44 = inttoptr i64 %41 to %"class.blink::CSSValue"*
  %45 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %44, i64 0, i32 0
  %46 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %47 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, i64 5
  %49 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, align 8
  tail call void %49(%"class.blink::Visitor"* %1, i8* %45, i8* %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #11
  br label %50

50:                                               ; preds = %38, %43
  %51 = getelementptr inbounds %"class.blink::StyleRuleScrollTimeline", %"class.blink::StyleRuleScrollTimeline"* %0, i64 0, i32 6
  %52 = bitcast %"class.blink::Member.231"* %51 to i64*
  %53 = load atomic i64, i64* %52 monotonic, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %50
  %56 = inttoptr i64 %53 to %"class.blink::CSSValue"*
  %57 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %56, i64 0, i32 0
  %58 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %59 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, i64 5
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, align 8
  tail call void %61(%"class.blink::Visitor"* %1, i8* %57, i8* %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #11
  br label %62

62:                                               ; preds = %50, %55
  ret void
}

declare void @_ZNK5blink15StyleRuleImport18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleImport"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink18StyleRuleKeyframes18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleKeyframes"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink17StyleRuleKeyframe18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleKeyframe"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17StyleRuleViewport18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleViewport"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleViewport", %"class.blink::StyleRuleViewport"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.196"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18StyleRuleContainer18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleContainer"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleContainer", %"class.blink::StyleRuleContainer"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.259"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14ContainerQueryEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::StyleRuleContainer", %"class.blink::StyleRuleContainer"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast %"class.blink::HeapVector"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  %18 = bitcast %"class.blink::HeapVector"* %14 to i8**
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %20 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, i64 11
  %22 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8** %18) #11
  br i1 %17, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %29

29:                                               ; preds = %13, %23
  ret void
}

declare void @_ZNK5blink21StyleRuleCounterStyle18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleCounterStyle"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13StyleRuleBase30FinalizeGarbageCollectedObjectEv(%"class.blink::StyleRuleBase"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  switch i8 %3, label %183 [
    i8 11, label %181
    i8 1, label %4
    i8 5, label %11
    i8 6, label %18
    i8 10, label %163
    i8 3, label %36
    i8 12, label %56
    i8 13, label %74
    i8 2, label %110
    i8 7, label %112
    i8 8, label %114
    i8 9, label %127
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %6 = bitcast %"class.blink::StyleRuleBase"* %5 to %"class.blink::CSSSelector"**
  %7 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %6, align 8
  %8 = icmp eq %"class.blink::CSSSelector"* %7, null
  br i1 %8, label %183, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::StyleRuleBase"* %5 to %"class.blink::CSSSelectorList"*
  tail call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* %10) #11
  br label %183

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 16
  %13 = bitcast %"class.blink::StyleRuleBase"* %12 to %"class.blink::CSSSelector"**
  %14 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %13, align 8
  %15 = icmp eq %"class.blink::CSSSelector"* %14, null
  br i1 %15, label %183, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::StyleRuleBase"* %12 to %"class.blink::CSSSelectorList"*
  tail call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* %17) #11
  br label %183

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %20 = bitcast %"class.blink::StyleRuleBase"* %19 to %"class.WTF::StringImpl"**
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %183, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %183

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #11
  br label %183

36:                                               ; preds = %1
  %37 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 32
  %38 = bitcast %"class.blink::StyleRuleBase"* %37 to %class.scoped_refptr.212*
  tail call void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.212* %38) #11
  %39 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 24
  %40 = bitcast %"class.blink::StyleRuleBase"* %39 to %"class.WTF::StringImpl"**
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %183, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %183

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #11
  br label %183

56:                                               ; preds = %1
  %57 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %58 = bitcast %"class.blink::StyleRuleBase"* %57 to %"class.WTF::StringImpl"**
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %183, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %183

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #11
  br label %183

74:                                               ; preds = %1
  %75 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 32
  %76 = bitcast %"class.blink::StyleRuleBase"* %75 to %"class.WTF::StringImpl"**
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #11
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 24
  %94 = bitcast %"class.blink::StyleRuleBase"* %93 to %"class.WTF::StringImpl"**
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %183, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %183

109:                                              ; preds = %106
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #11
  br label %183

110:                                              ; preds = %1
  %111 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleImport"*
  tail call void @_ZN5blink15StyleRuleImportD1Ev(%"class.blink::StyleRuleImport"* %111) #11
  br label %183

112:                                              ; preds = %1
  %113 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleKeyframes"*
  tail call void @_ZN5blink18StyleRuleKeyframesD1Ev(%"class.blink::StyleRuleKeyframes"* %113) #11
  br label %183

114:                                              ; preds = %1
  %115 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 16
  %116 = bitcast %"class.blink::StyleRuleBase"* %115 to double**
  %117 = load double*, double** %116, align 8
  %118 = icmp eq double* %117, null
  %119 = bitcast double* %117 to i8*
  br i1 %118, label %183, label %120, !prof !2

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 28
  %122 = bitcast %"class.blink::StyleRuleBase"* %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %126, label %125, !prof !3

125:                                              ; preds = %120
  store i32 0, i32* %122, align 4
  br label %126

126:                                              ; preds = %125, %120
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %119) #11
  store double* null, double** %116, align 8
  br label %183

127:                                              ; preds = %1
  %128 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 16
  %129 = bitcast %"class.blink::StyleRuleBase"* %128 to %"class.WTF::StringImpl"**
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #11
  br label %145

145:                                              ; preds = %144, %141, %127
  %146 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %147 = bitcast %"class.blink::StyleRuleBase"* %146 to %"class.WTF::StringImpl"**
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %183, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %183

162:                                              ; preds = %159
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #11
  br label %183

163:                                              ; preds = %1
  %164 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 24
  %165 = bitcast %"class.blink::StyleRuleBase"* %164 to %"class.WTF::StringImpl"**
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %183, label %168

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %177
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %166) #11
  br label %183

181:                                              ; preds = %1
  %182 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleCounterStyle"*
  tail call void @_ZN5blink21StyleRuleCounterStyleD1Ev(%"class.blink::StyleRuleCounterStyle"* %182) #11
  br label %183

183:                                              ; preds = %180, %177, %163, %162, %159, %145, %126, %114, %109, %106, %92, %73, %70, %56, %55, %52, %36, %35, %32, %18, %16, %11, %9, %4, %110, %112, %181, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink15StyleRuleImportD1Ev(%"class.blink::StyleRuleImport"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink18StyleRuleKeyframesD1Ev(%"class.blink::StyleRuleKeyframes"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink21StyleRuleCounterStyleD1Ev(%"class.blink::StyleRuleCounterStyle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleBase"* @_ZNK5blink13StyleRuleBase4CopyEv(%"class.blink::StyleRuleBase"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.scoped_refptr.212, align 8
  %3 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 1
  switch i8 %4, label %358 [
    i8 1, label %5
    i8 5, label %51
    i8 6, label %70
    i8 4, label %109
    i8 3, label %124
    i8 12, label %172
    i8 13, label %229
    i8 11, label %349
    i8 7, label %267
    i8 14, label %276
    i8 9, label %291
    i8 10, label %298
  ]

5:                                                ; preds = %1
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 32) #11
  %7 = load i8, i8* %3, align 1
  store i8 %7, i8* %6, align 1
  %8 = getelementptr inbounds i8, i8* %6, i64 4
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %6, i64 8
  %11 = bitcast i8* %10 to %"class.blink::CSSSelectorList"*
  %12 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %13 = bitcast %"class.blink::StyleRuleBase"* %12 to %"class.blink::CSSSelectorList"*
  tail call void @_ZNK5blink15CSSSelectorList4CopyEv(%"class.blink::CSSSelectorList"* sret %11, %"class.blink::CSSSelectorList"* %13) #11
  %14 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 16
  %15 = bitcast %"class.blink::StyleRuleBase"* %14 to %"class.blink::CSSPropertyValueSet"**
  %16 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %15, align 8
  %17 = icmp eq %"class.blink::CSSPropertyValueSet"* %16, null
  br i1 %17, label %18, label %38

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 24
  %20 = bitcast %"class.blink::StyleRuleBase"* %19 to %"class.blink::CSSLazyPropertyParser"**
  %21 = load %"class.blink::CSSLazyPropertyParser"*, %"class.blink::CSSLazyPropertyParser"** %20, align 8
  %22 = bitcast %"class.blink::CSSLazyPropertyParser"* %21 to %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)***
  %23 = load %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)**, %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)*, %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)** %23, i64 2
  %25 = load %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)*, %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)** %24, align 8
  %26 = tail call %"class.blink::CSSPropertyValueSet"* %25(%"class.blink::CSSLazyPropertyParser"* %21) #11
  %27 = ptrtoint %"class.blink::CSSPropertyValueSet"* %26 to i64
  %28 = bitcast %"class.blink::StyleRuleBase"* %14 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %18
  %32 = bitcast %"class.blink::CSSPropertyValueSet"* %26 to i8*
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #11
  %34 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %15, align 8
  br label %35

35:                                               ; preds = %31, %18
  %36 = phi %"class.blink::CSSPropertyValueSet"* [ %26, %18 ], [ %34, %31 ]
  %37 = bitcast %"class.blink::StyleRuleBase"* %19 to i64*
  store atomic i64 0, i64* %37 monotonic, align 8
  br label %38

38:                                               ; preds = %5, %35
  %39 = phi %"class.blink::CSSPropertyValueSet"* [ %16, %5 ], [ %36, %35 ]
  %40 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %39) #11
  %41 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %40, i64 0, i32 0
  %42 = getelementptr inbounds i8, i8* %6, i64 16
  %43 = bitcast i8* %42 to %"class.blink::CSSPropertyValueSet"**
  store %"class.blink::CSSPropertyValueSet"* %41, %"class.blink::CSSPropertyValueSet"** %43, align 8
  %44 = getelementptr inbounds i8, i8* %6, i64 24
  %45 = bitcast i8* %44 to %"class.blink::CSSLazyPropertyParser"**
  store %"class.blink::CSSLazyPropertyParser"* null, %"class.blink::CSSLazyPropertyParser"** %45, align 8
  %46 = getelementptr inbounds i8, i8* %6, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  %50 = bitcast i8* %6 to %"class.blink::StyleRuleBase"*
  br label %358

51:                                               ; preds = %1
  %52 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 24) #11
  %53 = load i8, i8* %3, align 1
  store i8 %53, i8* %52, align 1
  %54 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %55 = bitcast %"class.blink::StyleRuleBase"* %54 to %"class.blink::CSSPropertyValueSet"**
  %56 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %55, align 8
  %57 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %56) #11
  %58 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %57, i64 0, i32 0
  %59 = getelementptr inbounds i8, i8* %52, i64 8
  %60 = bitcast i8* %59 to %"class.blink::CSSPropertyValueSet"**
  store %"class.blink::CSSPropertyValueSet"* %58, %"class.blink::CSSPropertyValueSet"** %60, align 8
  %61 = getelementptr inbounds i8, i8* %52, i64 16
  %62 = bitcast i8* %61 to %"class.blink::CSSSelectorList"*
  %63 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 16
  %64 = bitcast %"class.blink::StyleRuleBase"* %63 to %"class.blink::CSSSelectorList"*
  tail call void @_ZNK5blink15CSSSelectorList4CopyEv(%"class.blink::CSSSelectorList"* sret %62, %"class.blink::CSSSelectorList"* %64) #11
  %65 = getelementptr inbounds i8, i8* %52, i64 -4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = or i16 %67, 1
  store atomic i16 %68, i16* %66 release, align 2
  %69 = bitcast i8* %52 to %"class.blink::StyleRuleBase"*
  br label %358

70:                                               ; preds = %1
  %71 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 24) #11
  %72 = load i8, i8* %3, align 1
  store i8 %72, i8* %71, align 1
  %73 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %74 = bitcast %"class.blink::StyleRuleBase"* %73 to %"class.WTF::StringImpl"**
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = getelementptr inbounds i8, i8* %71, i64 8
  %77 = bitcast i8* %76 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %77, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %78, label %96, label %79

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %96

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i33
  %88 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #11
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !3

93:                                               ; preds = %84
  tail call void @llvm.trap() #11
  unreachable

94:                                               ; preds = %84
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %85, align 4
  br label %96

96:                                               ; preds = %70, %79, %94
  %97 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 16
  %98 = bitcast %"class.blink::StyleRuleBase"* %97 to %"class.blink::CSSPropertyValueSet"**
  %99 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %98, align 8
  %100 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %99) #11
  %101 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %100, i64 0, i32 0
  %102 = getelementptr inbounds i8, i8* %71, i64 16
  %103 = bitcast i8* %102 to %"class.blink::CSSPropertyValueSet"**
  store %"class.blink::CSSPropertyValueSet"* %101, %"class.blink::CSSPropertyValueSet"** %103, align 8
  %104 = getelementptr inbounds i8, i8* %71, i64 -4
  %105 = bitcast i8* %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = or i16 %106, 1
  store atomic i16 %107, i16* %105 release, align 2
  %108 = bitcast i8* %71 to %"class.blink::StyleRuleBase"*
  br label %358

109:                                              ; preds = %1
  %110 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 16) #11
  %111 = load i8, i8* %3, align 1
  store i8 %111, i8* %110, align 1
  %112 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %113 = bitcast %"class.blink::StyleRuleBase"* %112 to %"class.blink::CSSPropertyValueSet"**
  %114 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %113, align 8
  %115 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %114) #11
  %116 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %115, i64 0, i32 0
  %117 = getelementptr inbounds i8, i8* %110, i64 8
  %118 = bitcast i8* %117 to %"class.blink::CSSPropertyValueSet"**
  store %"class.blink::CSSPropertyValueSet"* %116, %"class.blink::CSSPropertyValueSet"** %118, align 8
  %119 = getelementptr inbounds i8, i8* %110, i64 -4
  %120 = bitcast i8* %119 to i16*
  %121 = load atomic i16, i16* %120 monotonic, align 2
  %122 = or i16 %121, 1
  store atomic i16 %122, i16* %120 release, align 2
  %123 = bitcast i8* %110 to %"class.blink::StyleRuleBase"*
  br label %358

124:                                              ; preds = %1
  %125 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 40) #11
  %126 = bitcast i8* %125 to %"class.blink::StyleRuleGroup"*
  %127 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleGroup"*
  tail call void @_ZN5blink14StyleRuleGroupC2ERKS0_(%"class.blink::StyleRuleGroup"* %126, %"class.blink::StyleRuleGroup"* dereferenceable(24) %127) #11
  %128 = getelementptr inbounds i8, i8* %125, i64 24
  %129 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 24
  %130 = bitcast %"class.blink::StyleRuleBase"* %129 to %"class.WTF::StringImpl"**
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = bitcast i8* %128 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %131, %"class.WTF::StringImpl"** %132, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %133, label %151, label %134

134:                                              ; preds = %124
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %151

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i33
  %143 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %142, i33 1) #11
  %144 = extractvalue { i33, i1 } %143, 1
  %145 = extractvalue { i33, i1 } %143, 0
  %146 = icmp slt i33 %145, 0
  %147 = or i1 %144, %146
  br i1 %147, label %148, label %149, !prof !3

148:                                              ; preds = %139
  tail call void @llvm.trap() #11
  unreachable

149:                                              ; preds = %139
  %150 = trunc i33 %145 to i32
  store i32 %150, i32* %140, align 4
  br label %151

151:                                              ; preds = %124, %134, %149
  %152 = getelementptr inbounds i8, i8* %125, i64 32
  %153 = bitcast i8* %152 to %"class.blink::MediaQuerySet"**
  store %"class.blink::MediaQuerySet"* null, %"class.blink::MediaQuerySet"** %153, align 8
  %154 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 32
  %155 = bitcast %"class.blink::StyleRuleBase"* %154 to %"class.blink::MediaQuerySet"**
  %156 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %155, align 8
  %157 = icmp eq %"class.blink::MediaQuerySet"* %156, null
  br i1 %157, label %166, label %158

158:                                              ; preds = %151
  %159 = tail call noalias i8* @malloc(i64 24) #11
  %160 = bitcast i8* %159 to %"class.blink::MediaQuerySet"*
  tail call void @_ZN5blink13MediaQuerySetC1ERKS0_(%"class.blink::MediaQuerySet"* %160, %"class.blink::MediaQuerySet"* nonnull dereferenceable(24) %156) #11
  %161 = bitcast %class.scoped_refptr.212* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #11
  %162 = bitcast i8* %152 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %class.scoped_refptr.212* %2 to i64*
  %165 = ptrtoint i8* %159 to i64
  store i64 %165, i64* %162, align 8
  store i64 %163, i64* %164, align 8
  call void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.212* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #11
  br label %166

166:                                              ; preds = %151, %158
  %167 = getelementptr inbounds i8, i8* %125, i64 -4
  %168 = bitcast i8* %167 to i16*
  %169 = load atomic i16, i16* %168 monotonic, align 2
  %170 = or i16 %169, 1
  store atomic i16 %170, i16* %168 release, align 2
  %171 = bitcast i8* %125 to %"class.blink::StyleRuleBase"*
  br label %358

172:                                              ; preds = %1
  %173 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 56) #11
  %174 = load i8, i8* %3, align 1
  store i8 %174, i8* %173, align 1
  %175 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %176 = bitcast %"class.blink::StyleRuleBase"* %175 to %"class.WTF::StringImpl"**
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = getelementptr inbounds i8, i8* %173, i64 8
  %179 = bitcast i8* %178 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %177, %"class.WTF::StringImpl"** %179, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %180, label %198, label %181

181:                                              ; preds = %172
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %198

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = zext i32 %188 to i33
  %190 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %189, i33 1) #11
  %191 = extractvalue { i33, i1 } %190, 1
  %192 = extractvalue { i33, i1 } %190, 0
  %193 = icmp slt i33 %192, 0
  %194 = or i1 %191, %193
  br i1 %194, label %195, label %196, !prof !3

195:                                              ; preds = %186
  tail call void @llvm.trap() #11
  unreachable

196:                                              ; preds = %186
  %197 = trunc i33 %192 to i32
  store i32 %197, i32* %187, align 4
  br label %198

198:                                              ; preds = %172, %181, %196
  %199 = getelementptr inbounds i8, i8* %173, i64 16
  %200 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 16
  %201 = bitcast %"class.blink::StyleRuleBase"* %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast i8* %199 to i64*
  store i64 %202, i64* %203, align 8
  %204 = getelementptr inbounds i8, i8* %173, i64 24
  %205 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 24
  %206 = bitcast %"class.blink::StyleRuleBase"* %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast i8* %204 to i64*
  store i64 %207, i64* %208, align 8
  %209 = getelementptr inbounds i8, i8* %173, i64 32
  %210 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 32
  %211 = bitcast %"class.blink::StyleRuleBase"* %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = bitcast i8* %209 to i64*
  store i64 %212, i64* %213, align 8
  %214 = getelementptr inbounds i8, i8* %173, i64 40
  %215 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 40
  %216 = bitcast %"class.blink::StyleRuleBase"* %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast i8* %214 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds i8, i8* %173, i64 48
  %220 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 48
  %221 = bitcast %"class.blink::StyleRuleBase"* %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast i8* %219 to i64*
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds i8, i8* %173, i64 -4
  %225 = bitcast i8* %224 to i16*
  %226 = load atomic i16, i16* %225 monotonic, align 2
  %227 = or i16 %226, 1
  store atomic i16 %227, i16* %225 release, align 2
  %228 = bitcast i8* %173 to %"class.blink::StyleRuleBase"*
  br label %358

229:                                              ; preds = %1
  %230 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 48) #11
  %231 = bitcast i8* %230 to %"class.blink::StyleRuleGroup"*
  %232 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleGroup"*
  tail call void @_ZN5blink14StyleRuleGroupC2ERKS0_(%"class.blink::StyleRuleGroup"* %231, %"class.blink::StyleRuleGroup"* dereferenceable(24) %232) #11
  %233 = getelementptr inbounds i8, i8* %230, i64 24
  %234 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 24
  %235 = bitcast %"class.blink::StyleRuleBase"* %234 to %"class.WTF::StringImpl"**
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  %237 = bitcast i8* %233 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %236, %"class.WTF::StringImpl"** %237, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %238, label %256, label %239

239:                                              ; preds = %229
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %256

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  %247 = zext i32 %246 to i33
  %248 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %247, i33 1) #11
  %249 = extractvalue { i33, i1 } %248, 1
  %250 = extractvalue { i33, i1 } %248, 0
  %251 = icmp slt i33 %250, 0
  %252 = or i1 %249, %251
  br i1 %252, label %253, label %254, !prof !3

253:                                              ; preds = %244
  tail call void @llvm.trap() #11
  unreachable

254:                                              ; preds = %244
  %255 = trunc i33 %250 to i32
  store i32 %255, i32* %245, align 4
  br label %256

256:                                              ; preds = %229, %239, %254
  %257 = getelementptr inbounds i8, i8* %230, i64 32
  %258 = bitcast i8* %257 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %258, align 8
  %259 = getelementptr inbounds i8, i8* %230, i64 40
  %260 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 40, i32 0
  %261 = load i8, i8* %260, align 8, !range !4
  store i8 %261, i8* %259, align 8
  %262 = getelementptr inbounds i8, i8* %230, i64 -4
  %263 = bitcast i8* %262 to i16*
  %264 = load atomic i16, i16* %263 monotonic, align 2
  %265 = or i16 %264, 1
  store atomic i16 %265, i16* %263 release, align 2
  %266 = bitcast i8* %230 to %"class.blink::StyleRuleBase"*
  br label %358

267:                                              ; preds = %1
  %268 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleKeyframes"*
  %269 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 40) #11
  %270 = bitcast i8* %269 to %"class.blink::StyleRuleKeyframes"*
  tail call void @_ZN5blink18StyleRuleKeyframesC1ERKS0_(%"class.blink::StyleRuleKeyframes"* %270, %"class.blink::StyleRuleKeyframes"* dereferenceable(40) %268) #11
  %271 = getelementptr inbounds i8, i8* %269, i64 -4
  %272 = bitcast i8* %271 to i16*
  %273 = load atomic i16, i16* %272 monotonic, align 2
  %274 = or i16 %273, 1
  store atomic i16 %274, i16* %272 release, align 2
  %275 = bitcast i8* %269 to %"class.blink::StyleRuleBase"*
  br label %358

276:                                              ; preds = %1
  %277 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 16) #11
  %278 = load i8, i8* %3, align 1
  store i8 %278, i8* %277, align 1
  %279 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %280 = bitcast %"class.blink::StyleRuleBase"* %279 to %"class.blink::CSSPropertyValueSet"**
  %281 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %280, align 8
  %282 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %281) #11
  %283 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %282, i64 0, i32 0
  %284 = getelementptr inbounds i8, i8* %277, i64 8
  %285 = bitcast i8* %284 to %"class.blink::CSSPropertyValueSet"**
  store %"class.blink::CSSPropertyValueSet"* %283, %"class.blink::CSSPropertyValueSet"** %285, align 8
  %286 = getelementptr inbounds i8, i8* %277, i64 -4
  %287 = bitcast i8* %286 to i16*
  %288 = load atomic i16, i16* %287 monotonic, align 2
  %289 = or i16 %288, 1
  store atomic i16 %289, i16* %287 release, align 2
  %290 = bitcast i8* %277 to %"class.blink::StyleRuleBase"*
  br label %358

291:                                              ; preds = %1
  %292 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 8
  %293 = bitcast %"class.blink::StyleRuleBase"* %292 to %"class.WTF::AtomicString"*
  %294 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 16
  %295 = bitcast %"class.blink::StyleRuleBase"* %294 to %"class.WTF::AtomicString"*
  %296 = tail call %"class.blink::StyleRuleNamespace"* @_ZN5blink25MakeGarbageCollectedTraitINS_18StyleRuleNamespaceEE4CallIJRKN3WTF12AtomicStringES7_EEEPS1_DpOT_(%"class.WTF::AtomicString"* dereferenceable(8) %293, %"class.WTF::AtomicString"* dereferenceable(8) %295) #11
  %297 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %296, i64 0, i32 0
  br label %358

298:                                              ; preds = %1
  %299 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 40) #11
  %300 = bitcast i8* %299 to %"class.blink::StyleRuleGroup"*
  %301 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleGroup"*
  tail call void @_ZN5blink14StyleRuleGroupC2ERKS0_(%"class.blink::StyleRuleGroup"* %300, %"class.blink::StyleRuleGroup"* dereferenceable(24) %301) #11
  %302 = getelementptr inbounds i8, i8* %299, i64 24
  %303 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 24
  %304 = bitcast %"class.blink::StyleRuleBase"* %303 to %"class.WTF::StringImpl"**
  %305 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %304, align 8
  %306 = bitcast i8* %302 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %305, %"class.WTF::StringImpl"** %306, align 8
  %307 = icmp eq %"class.WTF::StringImpl"* %305, null
  br i1 %307, label %325, label %308

308:                                              ; preds = %298
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = load atomic i32, i32* %309 monotonic, align 4
  %311 = and i32 %310, 2
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %325

313:                                              ; preds = %308
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 0
  %315 = load i32, i32* %314, align 4
  %316 = zext i32 %315 to i33
  %317 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %316, i33 1) #11
  %318 = extractvalue { i33, i1 } %317, 1
  %319 = extractvalue { i33, i1 } %317, 0
  %320 = icmp slt i33 %319, 0
  %321 = or i1 %318, %320
  br i1 %321, label %322, label %323, !prof !3

322:                                              ; preds = %313
  tail call void @llvm.trap() #11
  unreachable

323:                                              ; preds = %313
  %324 = trunc i33 %319 to i32
  store i32 %324, i32* %314, align 4
  br label %325

325:                                              ; preds = %298, %308, %323
  %326 = getelementptr inbounds i8, i8* %299, i64 32
  %327 = bitcast i8* %326 to %"class.blink::ContainerQuery"**
  store %"class.blink::ContainerQuery"* null, %"class.blink::ContainerQuery"** %327, align 8
  %328 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %0, i64 32
  %329 = bitcast %"class.blink::StyleRuleBase"* %328 to %"class.blink::ContainerQuery"**
  %330 = load %"class.blink::ContainerQuery"*, %"class.blink::ContainerQuery"** %329, align 8
  %331 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ContainerQueryEEEPhm(i64 16) #11
  %332 = bitcast i8* %331 to %"class.blink::ContainerQuery"*
  tail call void @_ZN5blink14ContainerQueryC1ERKS0_(%"class.blink::ContainerQuery"* %332, %"class.blink::ContainerQuery"* dereferenceable(16) %330) #11
  %333 = getelementptr inbounds i8, i8* %331, i64 -4
  %334 = bitcast i8* %333 to i16*
  %335 = load atomic i16, i16* %334 monotonic, align 2
  %336 = or i16 %335, 1
  store atomic i16 %336, i16* %334 release, align 2
  %337 = ptrtoint i8* %331 to i64
  %338 = bitcast i8* %326 to i64*
  store atomic i64 %337, i64* %338 monotonic, align 8
  %339 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %343, label %341

341:                                              ; preds = %325
  %342 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %331) #11
  br label %343

343:                                              ; preds = %325, %341
  %344 = getelementptr inbounds i8, i8* %299, i64 -4
  %345 = bitcast i8* %344 to i16*
  %346 = load atomic i16, i16* %345 monotonic, align 2
  %347 = or i16 %346, 1
  store atomic i16 %347, i16* %345 release, align 2
  %348 = bitcast i8* %299 to %"class.blink::StyleRuleBase"*
  br label %358

349:                                              ; preds = %1
  %350 = bitcast %"class.blink::StyleRuleBase"* %0 to %"class.blink::StyleRuleCounterStyle"*
  %351 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 104) #11
  %352 = bitcast i8* %351 to %"class.blink::StyleRuleCounterStyle"*
  tail call void @_ZN5blink21StyleRuleCounterStyleC1ERKS0_(%"class.blink::StyleRuleCounterStyle"* %352, %"class.blink::StyleRuleCounterStyle"* dereferenceable(104) %350) #11
  %353 = getelementptr inbounds i8, i8* %351, i64 -4
  %354 = bitcast i8* %353 to i16*
  %355 = load atomic i16, i16* %354 monotonic, align 2
  %356 = or i16 %355, 1
  store atomic i16 %356, i16* %354 release, align 2
  %357 = bitcast i8* %351 to %"class.blink::StyleRuleBase"*
  br label %358

358:                                              ; preds = %1, %349, %343, %291, %276, %267, %256, %198, %166, %109, %96, %51, %38
  %359 = phi %"class.blink::StyleRuleBase"* [ %357, %349 ], [ %348, %343 ], [ %297, %291 ], [ %290, %276 ], [ %275, %267 ], [ %266, %256 ], [ %228, %198 ], [ %171, %166 ], [ %123, %109 ], [ %108, %96 ], [ %69, %51 ], [ %50, %38 ], [ null, %1 ]
  ret %"class.blink::StyleRuleBase"* %359
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink7CSSRule13SetParentRuleEPS0_(%"class.blink::CSSRule"*, %"class.blink::CSSRule"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9StyleRule18AverageSizeInBytesEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i32 @_ZN5blink19CSSPropertyValueSet18AverageSizeInBytesEv() #11
  %2 = add i32 %1, 48
  ret i32 %2
}

declare i32 @_ZN5blink19CSSPropertyValueSet18AverageSizeInBytesEv() local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9StyleRuleC2ENS_15CSSSelectorListEPNS_19CSSPropertyValueSetE(%"class.blink::StyleRule"* nocapture, %"class.blink::CSSSelectorList"* nocapture, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 0, i32 0
  store i8 1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 1
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %1, i64 0, i32 0
  %8 = bitcast %"class.blink::CSSSelectorList"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::CSSSelectorList"* %6 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %7, align 8
  %11 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::CSSPropertyValueSet"* %2, %"class.blink::CSSPropertyValueSet"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::CSSLazyPropertyParser"* null, %"class.blink::CSSLazyPropertyParser"** %12, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9StyleRuleC2ENS_15CSSSelectorListEPNS_21CSSLazyPropertyParserE(%"class.blink::StyleRule"* nocapture, %"class.blink::CSSSelectorList"* nocapture, %"class.blink::CSSLazyPropertyParser"*) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 0, i32 0
  store i8 1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %1, i64 0, i32 0
  %8 = bitcast %"class.blink::CSSSelectorList"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::CSSSelectorList"* %6 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %7, align 8
  %11 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::CSSPropertyValueSet"* null, %"class.blink::CSSPropertyValueSet"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::CSSLazyPropertyParser"* %2, %"class.blink::CSSLazyPropertyParser"** %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(4) %"class.blink::CSSPropertyValueSet"* @_ZNK5blink9StyleRule10PropertiesEv(%"class.blink::StyleRule"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.196", %"class.blink::Member.196"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %3, align 8
  %5 = icmp eq %"class.blink::CSSPropertyValueSet"* %4, null
  br i1 %5, label %6, label %26

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 4, i32 0
  %8 = getelementptr inbounds %"class.blink::MemberBase.201", %"class.blink::MemberBase.201"* %7, i64 0, i32 0
  %9 = load %"class.blink::CSSLazyPropertyParser"*, %"class.blink::CSSLazyPropertyParser"** %8, align 8
  %10 = bitcast %"class.blink::CSSLazyPropertyParser"* %9 to %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)***
  %11 = load %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)**, %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)*, %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)** %11, i64 2
  %13 = load %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)*, %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)** %12, align 8
  %14 = tail call %"class.blink::CSSPropertyValueSet"* %13(%"class.blink::CSSLazyPropertyParser"* %9) #11
  %15 = ptrtoint %"class.blink::CSSPropertyValueSet"* %14 to i64
  %16 = bitcast %"class.blink::Member.196"* %2 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %6
  %20 = bitcast %"class.blink::CSSPropertyValueSet"* %14 to i8*
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #11
  %22 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %3, align 8
  br label %23

23:                                               ; preds = %6, %19
  %24 = phi %"class.blink::CSSPropertyValueSet"* [ %14, %6 ], [ %22, %19 ]
  %25 = bitcast %"class.blink::MemberBase.201"* %7 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  br label %26

26:                                               ; preds = %1, %23
  %27 = phi %"class.blink::CSSPropertyValueSet"* [ %4, %1 ], [ %24, %23 ]
  ret %"class.blink::CSSPropertyValueSet"* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9StyleRuleC2ERKS0_(%"class.blink::StyleRule"*, %"class.blink::StyleRule"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %1, i64 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %3, align 1
  %6 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 1
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %1, i64 0, i32 2
  tail call void @_ZNK5blink15CSSSelectorList4CopyEv(%"class.blink::CSSSelectorList"* sret %7, %"class.blink::CSSSelectorList"* %8) #11
  %9 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %1, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::Member.196", %"class.blink::Member.196"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %10, align 8
  %12 = icmp eq %"class.blink::CSSPropertyValueSet"* %11, null
  br i1 %12, label %13, label %33

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %1, i64 0, i32 4, i32 0
  %15 = getelementptr inbounds %"class.blink::MemberBase.201", %"class.blink::MemberBase.201"* %14, i64 0, i32 0
  %16 = load %"class.blink::CSSLazyPropertyParser"*, %"class.blink::CSSLazyPropertyParser"** %15, align 8
  %17 = bitcast %"class.blink::CSSLazyPropertyParser"* %16 to %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)***
  %18 = load %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)**, %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)*, %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)** %18, i64 2
  %20 = load %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)*, %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)** %19, align 8
  %21 = tail call %"class.blink::CSSPropertyValueSet"* %20(%"class.blink::CSSLazyPropertyParser"* %16) #11
  %22 = ptrtoint %"class.blink::CSSPropertyValueSet"* %21 to i64
  %23 = bitcast %"class.blink::Member.196"* %9 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %13
  %27 = bitcast %"class.blink::CSSPropertyValueSet"* %21 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #11
  %29 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %10, align 8
  br label %30

30:                                               ; preds = %26, %13
  %31 = phi %"class.blink::CSSPropertyValueSet"* [ %21, %13 ], [ %29, %26 ]
  %32 = bitcast %"class.blink::MemberBase.201"* %14 to i64*
  store atomic i64 0, i64* %32 monotonic, align 8
  br label %33

33:                                               ; preds = %2, %30
  %34 = phi %"class.blink::CSSPropertyValueSet"* [ %11, %2 ], [ %31, %30 ]
  %35 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %34) #11
  %36 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %35, i64 0, i32 0
  %37 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::CSSPropertyValueSet"* %36, %"class.blink::CSSPropertyValueSet"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::CSSLazyPropertyParser"* null, %"class.blink::CSSLazyPropertyParser"** %38, align 8
  ret void
}

declare void @_ZNK5blink15CSSSelectorList4CopyEv(%"class.blink::CSSSelectorList"* sret, %"class.blink::CSSSelectorList"*) local_unnamed_addr #1

declare %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9StyleRuleD2Ev(%"class.blink::StyleRule"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %2, i64 0, i32 0
  %4 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %3, align 8
  %5 = icmp eq %"class.blink::CSSSelector"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* %2) #11
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink9StyleRule17MutablePropertiesEv(%"class.blink::StyleRule"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.blink::Member.196", %"class.blink::Member.196"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %3, align 8
  %5 = icmp eq %"class.blink::CSSPropertyValueSet"* %4, null
  br i1 %5, label %6, label %26

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 4, i32 0
  %8 = getelementptr inbounds %"class.blink::MemberBase.201", %"class.blink::MemberBase.201"* %7, i64 0, i32 0
  %9 = load %"class.blink::CSSLazyPropertyParser"*, %"class.blink::CSSLazyPropertyParser"** %8, align 8
  %10 = bitcast %"class.blink::CSSLazyPropertyParser"* %9 to %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)***
  %11 = load %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)**, %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)*, %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)** %11, i64 2
  %13 = load %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)*, %"class.blink::CSSPropertyValueSet"* (%"class.blink::CSSLazyPropertyParser"*)** %12, align 8
  %14 = tail call %"class.blink::CSSPropertyValueSet"* %13(%"class.blink::CSSLazyPropertyParser"* %9) #11
  %15 = ptrtoint %"class.blink::CSSPropertyValueSet"* %14 to i64
  %16 = bitcast %"class.blink::Member.196"* %2 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %6
  %20 = bitcast %"class.blink::CSSPropertyValueSet"* %14 to i8*
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #11
  %22 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %3, align 8
  br label %23

23:                                               ; preds = %19, %6
  %24 = phi %"class.blink::CSSPropertyValueSet"* [ %14, %6 ], [ %22, %19 ]
  %25 = bitcast %"class.blink::MemberBase.201"* %7 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  br label %26

26:                                               ; preds = %1, %23
  %27 = phi %"class.blink::CSSPropertyValueSet"* [ %4, %1 ], [ %24, %23 ]
  %28 = bitcast %"class.blink::CSSPropertyValueSet"* %27 to %"class.blink::MutableCSSPropertyValueSet"*
  %29 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %27, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %26
  %33 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %27) #11
  %34 = ptrtoint %"class.blink::MutableCSSPropertyValueSet"* %33 to i64
  %35 = bitcast %"class.blink::Member.196"* %2 to i64*
  store atomic i64 %34, i64* %35 monotonic, align 8
  %36 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.blink::MutableCSSPropertyValueSet"* %33 to i8*
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #11
  %41 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 3, i32 0, i32 0
  %42 = bitcast %"class.blink::CSSPropertyValueSet"** %41 to %"class.blink::MutableCSSPropertyValueSet"**
  %43 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %42, align 8
  br label %44

44:                                               ; preds = %38, %32, %26
  %45 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %43, %38 ], [ %33, %32 ], [ %28, %26 ]
  ret %"class.blink::MutableCSSPropertyValueSet"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9StyleRule42PropertiesHaveFailedOrCanceledSubresourcesEv(%"class.blink::StyleRule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %2, align 8
  %4 = icmp eq %"class.blink::CSSPropertyValueSet"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK5blink19CSSPropertyValueSet31HasFailedOrCanceledSubresourcesEv(%"class.blink::CSSPropertyValueSet"* nonnull %3) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ false, %1 ], [ %6, %5 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK5blink19CSSPropertyValueSet31HasFailedOrCanceledSubresourcesEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9StyleRule30ShouldConsiderForMatchingRulesEb(%"class.blink::StyleRule"* nocapture readonly, i1 zeroext) local_unnamed_addr #5 align 2 {
  br i1 %1, label %26, label %3

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %8, align 8
  %10 = icmp eq %"class.blink::CSSPropertyValueSet"* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = load i32, i32* null, align 536870912
  br label %20

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %9, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, -1
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %9, i64 7, i32 0
  %19 = load i32, i32* %18, align 4
  br label %23

20:                                               ; preds = %13, %11
  %21 = phi i32 [ %12, %11 ], [ %15, %13 ]
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %17, %20
  %24 = phi i32 [ %22, %20 ], [ %19, %17 ]
  %25 = icmp ne i32 %24, 0
  br label %26

26:                                               ; preds = %23, %3, %2
  %27 = phi i1 [ true, %3 ], [ true, %2 ], [ %25, %23 ]
  ret i1 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9StyleRule19HasParsedPropertiesEv(%"class.blink::StyleRule"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::CSSLazyPropertyParser"*, %"class.blink::CSSLazyPropertyParser"** %2, align 8
  %4 = icmp eq %"class.blink::CSSLazyPropertyParser"* %3, null
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink13StyleRulePageC2ENS_15CSSSelectorListEPNS_19CSSPropertyValueSetE(%"class.blink::StyleRulePage"* nocapture, %"class.blink::CSSSelectorList"* nocapture, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleRulePage", %"class.blink::StyleRulePage"* %0, i64 0, i32 0, i32 0
  store i8 5, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::StyleRulePage", %"class.blink::StyleRulePage"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSPropertyValueSet"* %2, %"class.blink::CSSPropertyValueSet"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::StyleRulePage", %"class.blink::StyleRulePage"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %1, i64 0, i32 0
  %8 = bitcast %"class.blink::CSSSelectorList"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::CSSSelectorList"* %6 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13StyleRulePageC2ERKS0_(%"class.blink::StyleRulePage"*, %"class.blink::StyleRulePage"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRulePage", %"class.blink::StyleRulePage"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::StyleRulePage", %"class.blink::StyleRulePage"* %1, i64 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %3, align 1
  %6 = getelementptr inbounds %"class.blink::StyleRulePage", %"class.blink::StyleRulePage"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %6, align 8
  %8 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %7) #11
  %9 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::StyleRulePage", %"class.blink::StyleRulePage"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSPropertyValueSet"* %9, %"class.blink::CSSPropertyValueSet"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::StyleRulePage", %"class.blink::StyleRulePage"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.blink::StyleRulePage", %"class.blink::StyleRulePage"* %1, i64 0, i32 2
  tail call void @_ZNK5blink15CSSSelectorList4CopyEv(%"class.blink::CSSSelectorList"* sret %11, %"class.blink::CSSSelectorList"* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13StyleRulePageD2Ev(%"class.blink::StyleRulePage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRulePage", %"class.blink::StyleRulePage"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %2, i64 0, i32 0
  %4 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %3, align 8
  %5 = icmp eq %"class.blink::CSSSelector"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* %2) #11
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink13StyleRulePage17MutablePropertiesEv(%"class.blink::StyleRulePage"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRulePage", %"class.blink::StyleRulePage"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::Member.196", %"class.blink::Member.196"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  %8 = bitcast %"class.blink::CSSPropertyValueSet"* %4 to %"class.blink::MutableCSSPropertyValueSet"*
  br i1 %7, label %20, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %4) #11
  %11 = ptrtoint %"class.blink::MutableCSSPropertyValueSet"* %10 to i64
  %12 = bitcast %"class.blink::Member.196"* %2 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.blink::MutableCSSPropertyValueSet"* %10 to i8*
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #11
  %18 = bitcast %"class.blink::Member.196"* %2 to %"class.blink::MutableCSSPropertyValueSet"**
  %19 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %18, align 8
  br label %20

20:                                               ; preds = %15, %9, %1
  %21 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %19, %15 ], [ %10, %9 ], [ %8, %1 ]
  ret %"class.blink::MutableCSSPropertyValueSet"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17StyleRulePropertyC2ERKN3WTF6StringEPNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleProperty"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::CSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %0, i64 0, i32 0, i32 0
  store i8 6, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #11
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !3

23:                                               ; preds = %14
  tail call void @llvm.trap() #11
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %3, %9, %24
  %27 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSPropertyValueSet"* %2, %"class.blink::CSSPropertyValueSet"** %27, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17StyleRulePropertyC2ERKS0_(%"class.blink::StyleRuleProperty"* nocapture, %"class.blink::StyleRuleProperty"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %1, i64 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %3, align 1
  %6 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #11
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #11
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %2, %10, %25
  %28 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %1, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %28, align 8
  %30 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %29) #11
  %31 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %30, i64 0, i32 0
  %32 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSPropertyValueSet"* %31, %"class.blink::CSSPropertyValueSet"** %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17StyleRulePropertyD2Ev(%"class.blink::StyleRuleProperty"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #11
  br label %18

18:                                               ; preds = %1, %14, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink17StyleRuleProperty17MutablePropertiesEv(%"class.blink::StyleRuleProperty"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::Member.196", %"class.blink::Member.196"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  %8 = bitcast %"class.blink::CSSPropertyValueSet"* %4 to %"class.blink::MutableCSSPropertyValueSet"*
  br i1 %7, label %20, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %4) #11
  %11 = ptrtoint %"class.blink::MutableCSSPropertyValueSet"* %10 to i64
  %12 = bitcast %"class.blink::Member.196"* %2 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.blink::MutableCSSPropertyValueSet"* %10 to i8*
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #11
  %18 = bitcast %"class.blink::Member.196"* %2 to %"class.blink::MutableCSSPropertyValueSet"**
  %19 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %18, align 8
  br label %20

20:                                               ; preds = %15, %9, %1
  %21 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %19, %15 ], [ %10, %9 ], [ %8, %1 ]
  ret %"class.blink::MutableCSSPropertyValueSet"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink17StyleRuleProperty9GetSyntaxEv(%"class.blink::StyleRuleProperty"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %2, align 8
  %4 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %3, i32 345) #11
  ret %"class.blink::CSSValue"* %4
}

declare %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink17StyleRuleProperty8InheritsEv(%"class.blink::StyleRuleProperty"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %2, align 8
  %4 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %3, i32 169) #11
  ret %"class.blink::CSSValue"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink17StyleRuleProperty15GetInitialValueEv(%"class.blink::StyleRuleProperty"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %2, align 8
  %4 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %3, i32 170) #11
  ret %"class.blink::CSSValue"* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink17StyleRuleFontFaceC2EPNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleFontFace"* nocapture, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %0, i64 0, i32 0, i32 0
  store i8 4, i8* %3, align 1
  %4 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSPropertyValueSet"* %1, %"class.blink::CSSPropertyValueSet"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17StyleRuleFontFaceC2ERKS0_(%"class.blink::StyleRuleFontFace"* nocapture, %"class.blink::StyleRuleFontFace"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %1, i64 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %3, align 1
  %6 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %6, align 8
  %8 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %7) #11
  %9 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSPropertyValueSet"* %9, %"class.blink::CSSPropertyValueSet"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink17StyleRuleFontFace17MutablePropertiesEv(%"class.blink::StyleRuleFontFace"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::Member.196", %"class.blink::Member.196"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  %8 = bitcast %"class.blink::CSSPropertyValueSet"* %4 to %"class.blink::MutableCSSPropertyValueSet"*
  br i1 %7, label %20, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %4) #11
  %11 = ptrtoint %"class.blink::MutableCSSPropertyValueSet"* %10 to i64
  %12 = bitcast %"class.blink::Member.196"* %2 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.blink::MutableCSSPropertyValueSet"* %10 to i8*
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #11
  %18 = bitcast %"class.blink::Member.196"* %2 to %"class.blink::MutableCSSPropertyValueSet"**
  %19 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %18, align 8
  br label %20

20:                                               ; preds = %15, %9, %1
  %21 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %19, %15 ], [ %10, %9 ], [ %8, %1 ]
  ret %"class.blink::MutableCSSPropertyValueSet"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyleRuleScrollTimelineC2ERKN3WTF6StringEPKNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleScrollTimeline"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::CSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleRuleScrollTimeline", %"class.blink::StyleRuleScrollTimeline"* %0, i64 0, i32 0, i32 0
  store i8 12, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::StyleRuleScrollTimeline", %"class.blink::StyleRuleScrollTimeline"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %32, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 acquire, align 4
  %12 = and i32 %11, 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %9
  %15 = load atomic i32, i32* %10 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %32

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #11
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %18
  tail call void @llvm.trap() #11
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %32

30:                                               ; preds = %9
  %31 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %7) #11
  br label %32

32:                                               ; preds = %3, %14, %28, %30
  %33 = phi %"class.WTF::StringImpl"* [ %31, %30 ], [ %7, %14 ], [ %7, %28 ], [ null, %3 ]
  %34 = ptrtoint %"class.WTF::StringImpl"* %33 to i64
  %35 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  store i64 %34, i64* %35, align 8
  %36 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 328) #11
  %37 = getelementptr inbounds %"class.blink::StyleRuleScrollTimeline", %"class.blink::StyleRuleScrollTimeline"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSValue"* %36, %"class.blink::CSSValue"** %37, align 8
  %38 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 253) #11
  %39 = getelementptr inbounds %"class.blink::StyleRuleScrollTimeline", %"class.blink::StyleRuleScrollTimeline"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::CSSValue"* %38, %"class.blink::CSSValue"** %39, align 8
  %40 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 332) #11
  %41 = getelementptr inbounds %"class.blink::StyleRuleScrollTimeline", %"class.blink::StyleRuleScrollTimeline"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::CSSValue"* %40, %"class.blink::CSSValue"** %41, align 8
  %42 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 140) #11
  %43 = getelementptr inbounds %"class.blink::StyleRuleScrollTimeline", %"class.blink::StyleRuleScrollTimeline"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::CSSValue"* %42, %"class.blink::CSSValue"** %43, align 8
  %44 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 366) #11
  %45 = getelementptr inbounds %"class.blink::StyleRuleScrollTimeline", %"class.blink::StyleRuleScrollTimeline"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.blink::CSSValue"* %44, %"class.blink::CSSValue"** %45, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyleRuleScrollTimelineD2Ev(%"class.blink::StyleRuleScrollTimeline"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRuleScrollTimeline", %"class.blink::StyleRuleScrollTimeline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #11
  br label %18

18:                                               ; preds = %1, %14, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14StyleRuleGroupC2ENS_13StyleRuleBase8RuleTypeERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::StyleRuleGroup"* nocapture, i32, %"class.blink::HeapVector"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleRuleGroup", %"class.blink::StyleRuleGroup"* %0, i64 0, i32 0, i32 0
  %5 = trunc i32 %1 to i8
  store i8 %5, i8* %4, align 1
  %6 = getelementptr inbounds %"class.blink::StyleRuleGroup", %"class.blink::StyleRuleGroup"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::HeapVector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #11
  %8 = bitcast %"class.blink::HeapVector"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::HeapVector"* %6 to i64*
  store atomic i64 0, i64* %8 monotonic, align 8
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.blink::StyleRuleGroup", %"class.blink::StyleRuleGroup"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %11, align 4
  %14 = load i32, i32* %12, align 4
  store i32 %14, i32* %11, align 4
  store i32 %13, i32* %12, align 4
  %15 = getelementptr inbounds %"class.blink::StyleRuleGroup", %"class.blink::StyleRuleGroup"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  store i32 %18, i32* %15, align 4
  store i32 %17, i32* %16, align 4
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %3
  %22 = bitcast %"class.blink::HeapVector"* %6 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #11
  br label %25

25:                                               ; preds = %21, %3
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.blink::HeapVector"* %2 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #11
  br label %32

32:                                               ; preds = %25, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14StyleRuleGroupC2ERKS0_(%"class.blink::StyleRuleGroup"*, %"class.blink::StyleRuleGroup"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleGroup", %"class.blink::StyleRuleGroup"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::StyleRuleGroup", %"class.blink::StyleRuleGroup"* %1, i64 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %3, align 1
  %6 = getelementptr inbounds %"class.blink::StyleRuleGroup", %"class.blink::StyleRuleGroup"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::StyleRuleGroup", %"class.blink::StyleRuleGroup"* %1, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.blink::StyleRuleGroup", %"class.blink::StyleRuleGroup"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.209"* null, %"class.blink::Member.209"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::StyleRuleGroup", %"class.blink::StyleRuleGroup"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %2
  %14 = zext i32 %9 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRuleBaseEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.blink::HeapVector"* %6 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %11, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  br i1 %22, label %28, label %24

24:                                               ; preds = %13
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #11
  %26 = bitcast %"class.blink::HeapVector"* %6 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %2, %13, %24
  %29 = phi i64 [ %14, %13 ], [ %14, %24 ], [ 0, %2 ]
  %30 = phi i8* [ %23, %13 ], [ %27, %24 ], [ null, %2 ]
  %31 = getelementptr inbounds %"class.blink::StyleRuleGroup", %"class.blink::StyleRuleGroup"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 %9, i32* %31, align 4
  %32 = shl nuw nsw i64 %29, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 %32, i1 false) #11
  %33 = load i32, i32* %31, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %6, i64 0, i32 0
  br label %38

37:                                               ; preds = %52, %28
  ret void

38:                                               ; preds = %35, %52
  %39 = phi i32 [ 0, %35 ], [ %53, %52 ]
  %40 = tail call dereferenceable(8) %"class.blink::Member.209"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"* %7, i32 %39) #11
  %41 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.blink::StyleRuleBase"*, %"class.blink::StyleRuleBase"** %41, align 8
  %43 = tail call %"class.blink::StyleRuleBase"* @_ZNK5blink13StyleRuleBase4CopyEv(%"class.blink::StyleRuleBase"* %42)
  %44 = tail call dereferenceable(8) %"class.blink::Member.209"* @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"* %36, i32 %39) #11
  %45 = ptrtoint %"class.blink::StyleRuleBase"* %43 to i64
  %46 = bitcast %"class.blink::Member.209"* %44 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %43, i64 0, i32 0
  %51 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %50) #11
  br label %52

52:                                               ; preds = %38, %49
  %53 = add nuw i32 %39, 1
  %54 = load i32, i32* %31, align 4
  %55 = icmp ult i32 %53, %54
  br i1 %55, label %38, label %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14StyleRuleGroup17WrapperInsertRuleEjPNS_13StyleRuleBaseE(%"class.blink::StyleRuleGroup"*, i32, %"class.blink::StyleRuleBase"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::StyleRuleBase"*, align 8
  store %"class.blink::StyleRuleBase"* %2, %"class.blink::StyleRuleBase"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::StyleRuleGroup", %"class.blink::StyleRuleGroup"* %0, i64 0, i32 1, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.206"* %5, i32 %1, %"class.blink::StyleRuleBase"** nonnull dereferenceable(8) %4)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.206"*, i32, %"class.blink::StyleRuleBase"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %37

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = lshr i32 %24, 2
  %31 = add i32 %29, %30
  %32 = icmp ugt i32 %31, 4
  %33 = select i1 %32, i32 %31, i32 4
  %34 = icmp ugt i32 %33, %29
  %35 = select i1 %34, i32 %33, i32 %29
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.206"* %0, i32 %35) #11
  %36 = load i32, i32* %9, align 4
  br label %37

37:                                               ; preds = %28, %23
  %38 = phi i32 [ %36, %28 ], [ %24, %23 ]
  %39 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::Member.209"*, %"class.blink::Member.209"** %39, align 8
  %41 = zext i32 %1 to i64
  %42 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %40, i64 %41
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %40, i64 %43
  %45 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %42, i64 1
  %46 = icmp ne %"class.blink::Member.209"* %45, null
  %47 = icmp ne %"class.blink::Member.209"* %42, null
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %89, !prof !2

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %44, i64 -1
  %51 = icmp ult %"class.blink::Member.209"* %50, %42
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = ptrtoint %"class.blink::Member.209"* %42 to i64
  br label %69

54:                                               ; preds = %49
  %55 = ptrtoint %"class.blink::Member.209"* %50 to i64
  %56 = ptrtoint %"class.blink::Member.209"* %42 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %45, i64 %58
  br label %60

60:                                               ; preds = %60, %54
  %61 = phi %"class.blink::Member.209"* [ %67, %60 ], [ %59, %54 ]
  %62 = phi %"class.blink::Member.209"* [ %66, %60 ], [ %50, %54 ]
  %63 = bitcast %"class.blink::Member.209"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.209"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %62, i64 -1
  %67 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %61, i64 -1
  %68 = icmp ult %"class.blink::Member.209"* %66, %42
  br i1 %68, label %69, label %60

69:                                               ; preds = %60, %52
  %70 = phi i64 [ %53, %52 ], [ %56, %60 ]
  %71 = ptrtoint %"class.blink::Member.209"* %44 to i64
  %72 = sub i64 %71, %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %89, label %74

74:                                               ; preds = %69
  %75 = ashr exact i64 %72, 3
  br label %76

76:                                               ; preds = %86, %74
  %77 = phi i64 [ %79, %86 ], [ %75, %74 ]
  %78 = phi %"class.blink::Member.209"* [ %87, %86 ], [ %45, %74 ]
  %79 = add i64 %77, -1
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %76
  %83 = bitcast %"class.blink::Member.209"* %78 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %84) #11
  br label %86

86:                                               ; preds = %82, %76
  %87 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %78, i64 1
  %88 = icmp eq i64 %79, 0
  br i1 %88, label %89, label %76

89:                                               ; preds = %86, %37, %69
  %90 = bitcast %"class.blink::StyleRuleBase"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.blink::Member.209"* %42 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %89
  %96 = inttoptr i64 %91 to i8*
  %97 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #11
  br label %98

98:                                               ; preds = %89, %95
  %99 = load i32, i32* %9, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14StyleRuleGroup17WrapperRemoveRuleEj(%"class.blink::StyleRuleGroup"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleGroup", %"class.blink::StyleRuleGroup"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.206"* %3, i32 %1)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.206"*, i32) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.209"*, %"class.blink::Member.209"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %24, i64 %25
  %27 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %26, i64 1
  %28 = load i32, i32* %8, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %24, i64 %29
  %31 = icmp ne %"class.blink::Member.209"* %26, null
  %32 = icmp ne %"class.blink::Member.209"* %27, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %124, !prof !2

34:                                               ; preds = %22
  %35 = icmp ult %"class.blink::Member.209"* %27, %30
  br i1 %35, label %36, label %104

36:                                               ; preds = %34
  %37 = shl nuw nsw i64 %29, 3
  %38 = add nsw i64 %37, -9
  %39 = shl nuw nsw i64 %25, 3
  %40 = sub nsw i64 %38, %39
  %41 = lshr i64 %40, 3
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 7
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %36, %45
  %46 = phi %"class.blink::Member.209"* [ %53, %45 ], [ %26, %36 ]
  %47 = phi %"class.blink::Member.209"* [ %52, %45 ], [ %27, %36 ]
  %48 = phi i64 [ %54, %45 ], [ %43, %36 ]
  %49 = bitcast %"class.blink::Member.209"* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::Member.209"* %46 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %47, i64 1
  %53 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %46, i64 1
  %54 = add i64 %48, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %45, !llvm.loop !5

56:                                               ; preds = %45, %36
  %57 = phi %"class.blink::Member.209"* [ %26, %36 ], [ %53, %45 ]
  %58 = phi %"class.blink::Member.209"* [ %27, %36 ], [ %52, %45 ]
  %59 = icmp ult i64 %40, 56
  br i1 %59, label %104, label %60

60:                                               ; preds = %56, %60
  %61 = phi %"class.blink::Member.209"* [ %102, %60 ], [ %57, %56 ]
  %62 = phi %"class.blink::Member.209"* [ %101, %60 ], [ %58, %56 ]
  %63 = bitcast %"class.blink::Member.209"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.209"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %62, i64 1
  %67 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %61, i64 1
  %68 = bitcast %"class.blink::Member.209"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.blink::Member.209"* %67 to i64*
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %62, i64 2
  %72 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %61, i64 2
  %73 = bitcast %"class.blink::Member.209"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.blink::Member.209"* %72 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %62, i64 3
  %77 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %61, i64 3
  %78 = bitcast %"class.blink::Member.209"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.blink::Member.209"* %77 to i64*
  store atomic i64 %79, i64* %80 monotonic, align 8
  %81 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %62, i64 4
  %82 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %61, i64 4
  %83 = bitcast %"class.blink::Member.209"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.blink::Member.209"* %82 to i64*
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %62, i64 5
  %87 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %61, i64 5
  %88 = bitcast %"class.blink::Member.209"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member.209"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %62, i64 6
  %92 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %61, i64 6
  %93 = bitcast %"class.blink::Member.209"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.209"* %92 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %62, i64 7
  %97 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %61, i64 7
  %98 = bitcast %"class.blink::Member.209"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.blink::Member.209"* %97 to i64*
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %62, i64 8
  %102 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %61, i64 8
  %103 = icmp ult %"class.blink::Member.209"* %101, %30
  br i1 %103, label %60, label %104

104:                                              ; preds = %56, %60, %34
  %105 = ptrtoint %"class.blink::Member.209"* %30 to i64
  %106 = ptrtoint %"class.blink::Member.209"* %27 to i64
  %107 = sub i64 %105, %106
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %124, label %109

109:                                              ; preds = %104
  %110 = ashr exact i64 %107, 3
  br label %111

111:                                              ; preds = %121, %109
  %112 = phi i64 [ %114, %121 ], [ %110, %109 ]
  %113 = phi %"class.blink::Member.209"* [ %122, %121 ], [ %26, %109 ]
  %114 = add i64 %112, -1
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %111
  %118 = bitcast %"class.blink::Member.209"* %113 to i8**
  %119 = load i8*, i8** %118, align 8
  %120 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %119) #11
  br label %121

121:                                              ; preds = %117, %111
  %122 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %113, i64 1
  %123 = icmp eq i64 %114, 0
  br i1 %123, label %124, label %111

124:                                              ; preds = %121, %22, %104
  %125 = load %"class.blink::Member.209"*, %"class.blink::Member.209"** %23, align 8
  %126 = load i32, i32* %8, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %125, i64 %127
  %129 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %128, i64 -1
  %130 = bitcast %"class.blink::Member.209"* %129 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %130, i64 8) #11
  %131 = load i32, i32* %8, align 4
  %132 = add i32 %131, -1
  store i32 %132, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14StyleRuleGroup18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleGroup"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleGroup", %"class.blink::StyleRuleGroup"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #11
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleRuleConditionC2ENS_13StyleRuleBase8RuleTypeERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::StyleRuleCondition"* nocapture, i32, %"class.blink::HeapVector"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleRuleCondition", %"class.blink::StyleRuleCondition"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = trunc i32 %1 to i8
  store i8 %5, i8* %4, align 1
  %6 = getelementptr inbounds %"class.blink::StyleRuleCondition", %"class.blink::StyleRuleCondition"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.blink::HeapVector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #11
  %8 = bitcast %"class.blink::HeapVector"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::HeapVector"* %6 to i64*
  store atomic i64 0, i64* %8 monotonic, align 8
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.blink::StyleRuleCondition", %"class.blink::StyleRuleCondition"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %11, align 4
  %14 = load i32, i32* %12, align 4
  store i32 %14, i32* %11, align 4
  store i32 %13, i32* %12, align 4
  %15 = getelementptr inbounds %"class.blink::StyleRuleCondition", %"class.blink::StyleRuleCondition"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  store i32 %18, i32* %15, align 4
  store i32 %17, i32* %16, align 4
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %3
  %22 = bitcast %"class.blink::HeapVector"* %6 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #11
  br label %25

25:                                               ; preds = %21, %3
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.blink::HeapVector"* %2 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #11
  br label %32

32:                                               ; preds = %25, %28
  %33 = getelementptr inbounds %"class.blink::StyleRuleCondition", %"class.blink::StyleRuleCondition"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %33, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleRuleConditionC2ENS_13StyleRuleBase8RuleTypeERKN3WTF6StringERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::StyleRuleCondition"* nocapture, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::HeapVector"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::StyleRuleCondition", %"class.blink::StyleRuleCondition"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = trunc i32 %1 to i8
  store i8 %6, i8* %5, align 1
  %7 = getelementptr inbounds %"class.blink::StyleRuleCondition", %"class.blink::StyleRuleCondition"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.blink::HeapVector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #11
  %9 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::HeapVector"* %7 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  store atomic i64 %10, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.blink::StyleRuleCondition", %"class.blink::StyleRuleCondition"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %12, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %12, align 4
  store i32 %14, i32* %13, align 4
  %16 = getelementptr inbounds %"class.blink::StyleRuleCondition", %"class.blink::StyleRuleCondition"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %17, align 4
  store i32 %19, i32* %16, align 4
  store i32 %18, i32* %17, align 4
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %4
  %23 = bitcast %"class.blink::HeapVector"* %7 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #11
  br label %26

26:                                               ; preds = %22, %4
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #11
  br label %33

33:                                               ; preds = %26, %29
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::StyleRuleCondition", %"class.blink::StyleRuleCondition"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #11
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #11
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %33, %38, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleRuleConditionC2ERKS0_(%"class.blink::StyleRuleCondition"*, %"class.blink::StyleRuleCondition"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleCondition", %"class.blink::StyleRuleCondition"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::StyleRuleCondition", %"class.blink::StyleRuleCondition"* %1, i64 0, i32 0
  tail call void @_ZN5blink14StyleRuleGroupC2ERKS0_(%"class.blink::StyleRuleGroup"* %3, %"class.blink::StyleRuleGroup"* dereferenceable(24) %4)
  %5 = getelementptr inbounds %"class.blink::StyleRuleCondition", %"class.blink::StyleRuleCondition"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::StyleRuleCondition", %"class.blink::StyleRuleCondition"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #11
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !3

23:                                               ; preds = %14
  tail call void @llvm.trap() #11
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %2, %9, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14StyleRuleMediaC2E13scoped_refptrINS_13MediaQuerySetEERNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE(%"class.blink::StyleRuleMedia"* nocapture, %"class.blink::MediaQuerySet"*, %"class.blink::HeapVector"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %class.scoped_refptr.212, align 8
  %5 = getelementptr inbounds %class.scoped_refptr.212, %class.scoped_refptr.212* %4, i64 0, i32 0
  store %"class.blink::MediaQuerySet"* %1, %"class.blink::MediaQuerySet"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::StyleRuleMedia", %"class.blink::StyleRuleMedia"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 3, i8* %6, align 1
  %7 = getelementptr inbounds %"class.blink::StyleRuleMedia", %"class.blink::StyleRuleMedia"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.blink::HeapVector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #11
  %9 = bitcast %"class.blink::HeapVector"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::HeapVector"* %7 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  store atomic i64 %10, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.blink::StyleRuleMedia", %"class.blink::StyleRuleMedia"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %12, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %12, align 4
  store i32 %14, i32* %13, align 4
  %16 = getelementptr inbounds %"class.blink::StyleRuleMedia", %"class.blink::StyleRuleMedia"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %17, align 4
  store i32 %19, i32* %16, align 4
  store i32 %18, i32* %17, align 4
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %3
  %23 = bitcast %"class.blink::HeapVector"* %7 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #11
  br label %26

26:                                               ; preds = %22, %3
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.blink::HeapVector"* %2 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #11
  br label %33

33:                                               ; preds = %26, %29
  %34 = getelementptr inbounds %"class.blink::StyleRuleMedia", %"class.blink::StyleRuleMedia"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %34, align 8
  %35 = getelementptr inbounds %"class.blink::StyleRuleMedia", %"class.blink::StyleRuleMedia"* %0, i64 0, i32 1, i32 0
  store %"class.blink::MediaQuerySet"* %1, %"class.blink::MediaQuerySet"** %35, align 8
  %36 = icmp eq %"class.blink::MediaQuerySet"* %1, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %38) #11
  br label %39

39:                                               ; preds = %33, %37
  call void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.212* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.212*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.212, %class.scoped_refptr.212* %0, i64 0, i32 0
  %3 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %2, align 8
  %4 = icmp eq %"class.blink::MediaQuerySet"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #11
  %7 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %40

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.215", %"class.WTF::Vector.215"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.218"*, %"class.std::__1::unique_ptr.218"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.218"* %13, null
  br i1 %14, label %38, label %15, !prof !2

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::unique_ptr.218"* %13 to i8*
  %17 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %36, label %20, !prof !3

20:                                               ; preds = %15
  %21 = zext i32 %18 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %13, i64 %21
  br label %23

23:                                               ; preds = %30, %20
  %24 = phi %"class.std::__1::unique_ptr.218"* [ %31, %30 ], [ %13, %20 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %25, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %25, align 8
  %27 = icmp eq %"class.blink::MediaQuery"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  tail call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %26) #11
  %29 = bitcast %"class.blink::MediaQuery"* %26 to i8*
  tail call void @free(i8* %29) #11
  br label %30

30:                                               ; preds = %28, %23
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %24, i64 1
  %32 = icmp eq %"class.std::__1::unique_ptr.218"* %31, %22
  br i1 %32, label %33, label %23

33:                                               ; preds = %30
  store i32 0, i32* %17, align 4
  %34 = bitcast %"class.WTF::Vector.215"* %11 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %15
  %37 = phi i8* [ %35, %33 ], [ %16, %15 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %37) #11
  br label %38

38:                                               ; preds = %10, %36
  %39 = bitcast %"class.blink::MediaQuerySet"* %3 to i8*
  tail call void @free(i8* %39) #11
  br label %40

40:                                               ; preds = %38, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14StyleRuleMediaC2ERKS0_(%"class.blink::StyleRuleMedia"*, %"class.blink::StyleRuleMedia"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.212, align 8
  %4 = getelementptr inbounds %"class.blink::StyleRuleMedia", %"class.blink::StyleRuleMedia"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::StyleRuleMedia", %"class.blink::StyleRuleMedia"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink14StyleRuleGroupC2ERKS0_(%"class.blink::StyleRuleGroup"* %4, %"class.blink::StyleRuleGroup"* dereferenceable(24) %5) #11
  %6 = getelementptr inbounds %"class.blink::StyleRuleMedia", %"class.blink::StyleRuleMedia"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::StyleRuleMedia", %"class.blink::StyleRuleMedia"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #11
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #11
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %2, %10, %25
  %28 = getelementptr inbounds %"class.blink::StyleRuleMedia", %"class.blink::StyleRuleMedia"* %0, i64 0, i32 1
  %29 = getelementptr inbounds %class.scoped_refptr.212, %class.scoped_refptr.212* %28, i64 0, i32 0
  store %"class.blink::MediaQuerySet"* null, %"class.blink::MediaQuerySet"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::StyleRuleMedia", %"class.blink::StyleRuleMedia"* %1, i64 0, i32 1, i32 0
  %31 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %30, align 8
  %32 = icmp eq %"class.blink::MediaQuerySet"* %31, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %27
  %34 = tail call noalias i8* @malloc(i64 24) #11
  %35 = bitcast i8* %34 to %"class.blink::MediaQuerySet"*
  tail call void @_ZN5blink13MediaQuerySetC1ERKS0_(%"class.blink::MediaQuerySet"* %35, %"class.blink::MediaQuerySet"* nonnull dereferenceable(24) %31) #11
  %36 = bitcast %class.scoped_refptr.212* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = bitcast %class.scoped_refptr.212* %28 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %class.scoped_refptr.212* %3 to i64*
  %40 = ptrtoint i8* %34 to i64
  store i64 %40, i64* %37, align 8
  store i64 %38, i64* %39, align 8
  call void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.212* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  br label %41

41:                                               ; preds = %27, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17StyleRuleSupportsC2ERKN3WTF6StringEbRNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE(%"class.blink::StyleRuleSupports"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), i1 zeroext, %"class.blink::HeapVector"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = zext i1 %2 to i8
  %6 = getelementptr inbounds %"class.blink::StyleRuleSupports", %"class.blink::StyleRuleSupports"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 13, i8* %6, align 1
  %7 = getelementptr inbounds %"class.blink::StyleRuleSupports", %"class.blink::StyleRuleSupports"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.blink::HeapVector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #11
  %9 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::HeapVector"* %7 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  store atomic i64 %10, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.blink::StyleRuleSupports", %"class.blink::StyleRuleSupports"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %12, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %12, align 4
  store i32 %14, i32* %13, align 4
  %16 = getelementptr inbounds %"class.blink::StyleRuleSupports", %"class.blink::StyleRuleSupports"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %16, align 4
  %19 = load i32, i32* %17, align 4
  store i32 %19, i32* %16, align 4
  store i32 %18, i32* %17, align 4
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %4
  %23 = bitcast %"class.blink::HeapVector"* %7 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #11
  br label %26

26:                                               ; preds = %22, %4
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #11
  br label %33

33:                                               ; preds = %29, %26
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::StyleRuleSupports", %"class.blink::StyleRuleSupports"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #11
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #11
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %33, %38, %53
  %56 = getelementptr inbounds %"class.blink::StyleRuleSupports", %"class.blink::StyleRuleSupports"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %56, align 8
  %57 = getelementptr inbounds %"class.blink::StyleRuleSupports", %"class.blink::StyleRuleSupports"* %0, i64 0, i32 2
  store i8 %5, i8* %57, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17StyleRuleSupportsC2ERKS0_(%"class.blink::StyleRuleSupports"*, %"class.blink::StyleRuleSupports"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleSupports", %"class.blink::StyleRuleSupports"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::StyleRuleSupports", %"class.blink::StyleRuleSupports"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink14StyleRuleGroupC2ERKS0_(%"class.blink::StyleRuleGroup"* %3, %"class.blink::StyleRuleGroup"* dereferenceable(24) %4) #11
  %5 = getelementptr inbounds %"class.blink::StyleRuleSupports", %"class.blink::StyleRuleSupports"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::StyleRuleSupports", %"class.blink::StyleRuleSupports"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #11
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !3

23:                                               ; preds = %14
  tail call void @llvm.trap() #11
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %2, %9, %24
  %27 = getelementptr inbounds %"class.blink::StyleRuleSupports", %"class.blink::StyleRuleSupports"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::StyleRuleSupports", %"class.blink::StyleRuleSupports"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.blink::StyleRuleSupports", %"class.blink::StyleRuleSupports"* %1, i64 0, i32 2
  %30 = load i8, i8* %29, align 8, !range !4
  store i8 %30, i8* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleRuleContainerC2ERNS_14ContainerQueryERNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE(%"class.blink::StyleRuleContainer"* nocapture, %"class.blink::ContainerQuery"* dereferenceable(16), %"class.blink::HeapVector"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleRuleContainer", %"class.blink::StyleRuleContainer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 10, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::StyleRuleContainer", %"class.blink::StyleRuleContainer"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.blink::HeapVector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #11
  %7 = bitcast %"class.blink::HeapVector"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.blink::HeapVector"* %5 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  store atomic i64 %8, i64* %9 monotonic, align 8
  %10 = getelementptr inbounds %"class.blink::StyleRuleContainer", %"class.blink::StyleRuleContainer"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %10, align 4
  %13 = load i32, i32* %11, align 4
  store i32 %13, i32* %10, align 4
  store i32 %12, i32* %11, align 4
  %14 = getelementptr inbounds %"class.blink::StyleRuleContainer", %"class.blink::StyleRuleContainer"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %15, align 4
  store i32 %17, i32* %14, align 4
  store i32 %16, i32* %15, align 4
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %3
  %21 = bitcast %"class.blink::HeapVector"* %5 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %24

24:                                               ; preds = %20, %3
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::HeapVector"* %2 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #11
  br label %31

31:                                               ; preds = %24, %27
  %32 = getelementptr inbounds %"class.blink::StyleRuleContainer", %"class.blink::StyleRuleContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::StyleRuleContainer", %"class.blink::StyleRuleContainer"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ContainerQuery"* %1, %"class.blink::ContainerQuery"** %33, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18StyleRuleContainerC2ERKS0_(%"class.blink::StyleRuleContainer"*, %"class.blink::StyleRuleContainer"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleContainer", %"class.blink::StyleRuleContainer"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::StyleRuleContainer", %"class.blink::StyleRuleContainer"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink14StyleRuleGroupC2ERKS0_(%"class.blink::StyleRuleGroup"* %3, %"class.blink::StyleRuleGroup"* dereferenceable(24) %4) #11
  %5 = getelementptr inbounds %"class.blink::StyleRuleContainer", %"class.blink::StyleRuleContainer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::StyleRuleContainer", %"class.blink::StyleRuleContainer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #11
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !3

23:                                               ; preds = %14
  tail call void @llvm.trap() #11
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %2, %9, %24
  %27 = getelementptr inbounds %"class.blink::StyleRuleContainer", %"class.blink::StyleRuleContainer"* %0, i64 0, i32 1
  %28 = getelementptr inbounds %"class.blink::Member.259", %"class.blink::Member.259"* %27, i64 0, i32 0, i32 0
  store %"class.blink::ContainerQuery"* null, %"class.blink::ContainerQuery"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::StyleRuleContainer", %"class.blink::StyleRuleContainer"* %1, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.blink::ContainerQuery"*, %"class.blink::ContainerQuery"** %29, align 8
  %31 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ContainerQueryEEEPhm(i64 16) #11
  %32 = bitcast i8* %31 to %"class.blink::ContainerQuery"*
  tail call void @_ZN5blink14ContainerQueryC1ERKS0_(%"class.blink::ContainerQuery"* %32, %"class.blink::ContainerQuery"* dereferenceable(16) %30) #11
  %33 = getelementptr inbounds i8, i8* %31, i64 -4
  %34 = bitcast i8* %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = or i16 %35, 1
  store atomic i16 %36, i16* %34 release, align 2
  %37 = ptrtoint i8* %31 to i64
  %38 = bitcast %"class.blink::Member.259"* %27 to i64*
  store atomic i64 %37, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %26
  %42 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #11
  br label %43

43:                                               ; preds = %26, %41
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink17StyleRuleViewportC2EPNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleViewport"* nocapture, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleViewport", %"class.blink::StyleRuleViewport"* %0, i64 0, i32 0, i32 0
  store i8 14, i8* %3, align 1
  %4 = getelementptr inbounds %"class.blink::StyleRuleViewport", %"class.blink::StyleRuleViewport"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSPropertyValueSet"* %1, %"class.blink::CSSPropertyValueSet"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17StyleRuleViewportC2ERKS0_(%"class.blink::StyleRuleViewport"* nocapture, %"class.blink::StyleRuleViewport"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleViewport", %"class.blink::StyleRuleViewport"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::StyleRuleViewport", %"class.blink::StyleRuleViewport"* %1, i64 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %3, align 1
  %6 = getelementptr inbounds %"class.blink::StyleRuleViewport", %"class.blink::StyleRuleViewport"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %6, align 8
  %8 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %7) #11
  %9 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::StyleRuleViewport", %"class.blink::StyleRuleViewport"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSPropertyValueSet"* %9, %"class.blink::CSSPropertyValueSet"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink17StyleRuleViewport17MutablePropertiesEv(%"class.blink::StyleRuleViewport"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRuleViewport", %"class.blink::StyleRuleViewport"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::Member.196", %"class.blink::Member.196"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  %8 = bitcast %"class.blink::CSSPropertyValueSet"* %4 to %"class.blink::MutableCSSPropertyValueSet"*
  br i1 %7, label %20, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %4) #11
  %11 = ptrtoint %"class.blink::MutableCSSPropertyValueSet"* %10 to i64
  %12 = bitcast %"class.blink::Member.196"* %2 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.blink::MutableCSSPropertyValueSet"* %10 to i8*
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #11
  %18 = bitcast %"class.blink::Member.196"* %2 to %"class.blink::MutableCSSPropertyValueSet"**
  %19 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %18, align 8
  br label %20

20:                                               ; preds = %15, %9, %1
  %21 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %19, %15 ], [ %10, %9 ], [ %8, %1 ]
  ret %"class.blink::MutableCSSPropertyValueSet"* %21
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.174"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.174"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13StyleRuleBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13StyleRuleBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13StyleRuleBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::StyleRuleBase"*
  tail call void @_ZN5blink13StyleRuleBase30FinalizeGarbageCollectedObjectEv(%"class.blink::StyleRuleBase"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13StyleRuleBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.174"*) local_unnamed_addr #1

declare void @_ZN5blink18StyleRuleKeyframesC1ERKS0_(%"class.blink::StyleRuleKeyframes"*, %"class.blink::StyleRuleKeyframes"* dereferenceable(40)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::StyleRuleNamespace"* @_ZN5blink25MakeGarbageCollectedTraitINS_18StyleRuleNamespaceEE4CallIJRKN3WTF12AtomicStringES7_EEEPS1_DpOT_(%"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 24) #11
  %4 = bitcast i8* %3 to %"class.blink::StyleRuleNamespace"*
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #11
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #11
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %2, %8, %23
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #11
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !3

43:                                               ; preds = %34
  tail call void @llvm.trap() #11
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %46

46:                                               ; preds = %25, %29, %44
  tail call void @_ZN5blink18StyleRuleNamespaceC2EN3WTF12AtomicStringES2_(%"class.blink::StyleRuleNamespace"* %4, %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"* %27)
  %47 = getelementptr inbounds i8, i8* %3, i64 -4
  %48 = bitcast i8* %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = or i16 %49, 1
  store atomic i16 %50, i16* %48 release, align 2
  ret %"class.blink::StyleRuleNamespace"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18StyleRuleNamespaceC2EN3WTF12AtomicStringES2_(%"class.blink::StyleRuleNamespace"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %0, i64 0, i32 0, i32 0
  store i8 9, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %5, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #11
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #11
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %25, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %26, label %56, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #11
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %34
  tail call void @llvm.trap() #11
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = load atomic i32, i32* %28 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %51 = add i32 %45, -1
  store i32 %51, i32* %50, align 4
  br label %52

52:                                               ; preds = %49, %44
  %53 = phi i32 [ %51, %49 ], [ %45, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #11
  br label %56

56:                                               ; preds = %24, %52, %55
  br i1 %6, label %70, label %57

57:                                               ; preds = %56
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #11
  br label %70

70:                                               ; preds = %56, %66, %69
  ret void
}

declare void @_ZN5blink21StyleRuleCounterStyleC1ERKS0_(%"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink13MediaQuerySetC1ERKS0_(%"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZN5blink12CSSStyleRuleC1EPNS_9StyleRuleEPNS_13CSSStyleSheetE(%"class.blink::CSSStyleRule"*, %"class.blink::StyleRule"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.174"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.174"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink11CSSPageRuleC1EPNS_13StyleRulePageEPNS_13CSSStyleSheetE(%"class.blink::CSSPageRule"*, %"class.blink::StyleRulePage"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare void @_ZN5blink15CSSPropertyRuleC1EPNS_17StyleRulePropertyEPNS_13CSSStyleSheetE(%"class.blink::CSSPropertyRule"*, %"class.blink::StyleRuleProperty"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare void @_ZN5blink15CSSFontFaceRuleC1EPNS_17StyleRuleFontFaceEPNS_13CSSStyleSheetE(%"class.blink::CSSFontFaceRule"*, %"class.blink::StyleRuleFontFace"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare void @_ZN5blink12CSSMediaRuleC1EPNS_14StyleRuleMediaEPNS_13CSSStyleSheetE(%"class.blink::CSSMediaRule"*, %"class.blink::StyleRuleMedia"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare void @_ZN5blink21CSSScrollTimelineRuleC1EPNS_23StyleRuleScrollTimelineEPNS_13CSSStyleSheetE(%"class.blink::CSSScrollTimelineRule"*, %"class.blink::StyleRuleScrollTimeline"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare void @_ZN5blink15CSSSupportsRuleC1EPNS_17StyleRuleSupportsEPNS_13CSSStyleSheetE(%"class.blink::CSSSupportsRule"*, %"class.blink::StyleRuleSupports"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare void @_ZN5blink13CSSImportRuleC1EPNS_15StyleRuleImportEPNS_13CSSStyleSheetE(%"class.blink::CSSImportRule"*, %"class.blink::StyleRuleImport"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare void @_ZN5blink16CSSKeyframesRuleC1EPNS_18StyleRuleKeyframesEPNS_13CSSStyleSheetE(%"class.blink::CSSKeyframesRule"*, %"class.blink::StyleRuleKeyframes"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare void @_ZN5blink16CSSNamespaceRuleC1EPNS_18StyleRuleNamespaceEPNS_13CSSStyleSheetE(%"class.blink::CSSNamespaceRule"*, %"class.blink::StyleRuleNamespace"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare void @_ZN5blink16CSSContainerRuleC1EPNS_18StyleRuleContainerEPNS_13CSSStyleSheetE(%"class.blink::CSSContainerRule"*, %"class.blink::StyleRuleContainer"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare void @_ZN5blink19CSSCounterStyleRuleC1EPNS_21StyleRuleCounterStyleEPNS_13CSSStyleSheetE(%"class.blink::CSSCounterStyleRule"*, %"class.blink::StyleRuleCounterStyle"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSPropertyValueSet"*
  tail call void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21CSSLazyPropertyParserEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSLazyPropertyParser"*
  %4 = bitcast i8* %1 to void (%"class.blink::CSSLazyPropertyParser"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CSSLazyPropertyParser"*, %"class.blink::Visitor"*)**, void (%"class.blink::CSSLazyPropertyParser"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CSSLazyPropertyParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSLazyPropertyParser"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CSSLazyPropertyParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSLazyPropertyParser"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CSSLazyPropertyParser"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRuleBaseEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.6, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.174"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.174"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13StyleRuleBaseEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.209"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.209"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::StyleRuleBase"*
  %35 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %34, i64 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13StyleRuleBaseEE5TraceEPNS_7VisitorEPKv) #11
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.209"* @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.209"*, %"class.blink::Member.209"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %24, i64 %25
  ret %"class.blink::Member.209"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.209"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.206"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.209"*, %"class.blink::Member.209"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.209", %"class.blink::Member.209"* %24, i64 %25
  ret %"class.blink::Member.209"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.206"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.209"*, %"class.blink::Member.209"** %8, align 8
  %10 = icmp eq %"class.blink::Member.209"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRuleBaseEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.206"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.209"*, %"class.blink::Member.209"** %8, align 8
  %26 = icmp eq %"class.blink::Member.209"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.209"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.206"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.206"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.206"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.206"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRuleBaseEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.209"*, %"class.blink::Member.209"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.209"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.209"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.206"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.206"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.206"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.206", %"class.WTF::Vector.206"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN5blink14ContainerQueryC1ERKS0_(%"class.blink::ContainerQuery"*, %"class.blink::ContainerQuery"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ContainerQueryEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ContainerQueryEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ContainerQueryEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.174"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ContainerQueryEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.174"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ContainerQueryEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ContainerQueryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ContainerQueryEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %class.scoped_refptr.212*
  tail call void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.212* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ContainerQueryEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
