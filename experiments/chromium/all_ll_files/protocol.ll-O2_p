; ModuleID = 'gen/headless/lib/browser/protocol/protocol.cc'
source_filename = "gen/headless/lib/browser/protocol/protocol.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.headless::protocol::DictionaryValue" = type { %"class.headless::protocol::Value.base", [4 x i8], %"class.std::__1::unordered_map", %"class.std::__1::vector.18" }
%"class.headless::protocol::Value.base" = type <{ %"class.crdtp::Serializable", i32 }>
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1", %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.15", [4 x i8] }>
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3", %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { float }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.22 }
%union.anon.22 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::basic_string"* }
%"class.headless::protocol::ListValue" = type { %"class.headless::protocol::Value.base", %"class.std::__1::vector.31" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.headless::protocol::Value"* }
%"class.headless::protocol::Value" = type <{ %"class.crdtp::Serializable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr"* }
%"class.headless::protocol::Object" = type { %"class.crdtp::Serializable", %"class.std::__1::unique_ptr.70" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.headless::protocol::DictionaryValue"* }
%"class.headless::protocol::(anonymous namespace)::ValueParserHandler" = type { %"class.crdtp::ParserHandler", %"struct.crdtp::Status", %"class.std::__1::unique_ptr", %"class.std::__1::vector", i8, %"class.std::__1::basic_string" }
%"class.crdtp::ParserHandler" = type { i32 (...)** }
%"struct.crdtp::Status" = type { i32, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"class.std::__1::__compressed_pair.38" }
%"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState" = type { i8, %union.anon }
%union.anon = type { %"class.headless::protocol::DictionaryValue"* }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.headless::protocol::Binary" = type { %"class.crdtp::Serializable", %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { i8*, i8*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.headless::protocol::FundamentalValue" = type { %"class.headless::protocol::Value.base", %union.anon.51 }
%union.anon.51 = type { double }
%"class.headless::protocol::StringValue" = type { %"class.headless::protocol::Value.base", %"class.std::__1::basic_string" }
%"class.headless::protocol::BinaryValue" = type { %"class.headless::protocol::Value.base", %"class.headless::protocol::Binary" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::tuple.116" = type { i8 }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.headless::protocol::ListValue"* }
%"struct.std::__1::pair.82" = type { %"class.std::__1::basic_string", %"class.headless::protocol::Value"* }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119", %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.11"*, i8, [7 x i8] }>
%"class.std::__1::allocator.11" = type { i8 }
%"class.crdtp::cbor::EnvelopeEncoder" = type { i64 }
%"class.crdtp::ErrorSupport" = type { %"class.std::__1::vector.91", %"class.std::__1::basic_string" }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"struct.crdtp::ErrorSupport::Segment"*, %"struct.crdtp::ErrorSupport::Segment"*, %"class.std::__1::__compressed_pair.94" }
%"struct.crdtp::ErrorSupport::Segment" = type { i32, %union.anon.93 }
%union.anon.93 = type { i8* }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.crdtp::ErrorSupport::Segment"* }
%"class.crdtp::DeserializerState" = type { %"class.std::__1::shared_ptr", %"class.crdtp::cbor::CBORTokenizer", %"struct.crdtp::Status", %"class.std::__1::vector.99" }
%"class.std::__1::shared_ptr" = type { %"class.std::__1::vector.44"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.crdtp::cbor::CBORTokenizer" = type { %"class.crdtp::span", i32, %"struct.crdtp::Status", i64, i32, i64 }
%"class.crdtp::span" = type { i8*, i64 }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"class.crdtp::span.101"*, %"class.crdtp::span.101"*, %"class.std::__1::__compressed_pair.102" }
%"class.crdtp::span.101" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.crdtp::span.101"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.headless::protocol::Object"* }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }

$_ZN8headless8protocol15DictionaryValue3setINS0_5ValueEEEvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERNS4_10unique_ptrIT_NS4_14default_deleteISE_EEEE = comdat any

$_ZN8headless8protocol15DictionaryValue3setIS1_EEvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS3_10unique_ptrIT_NS3_14default_deleteISD_EEEE = comdat any

$_ZN8headless8protocol15DictionaryValue3setINS0_9ListValueEEEvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERNS4_10unique_ptrIT_NS4_14default_deleteISE_EEEE = comdat any

$_ZNSt3__16removeINS_11__wrap_iterIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEES7_EET_SA_SA_RKT0_ = comdat any

$_ZN8headless8protocol5ValueD0Ev = comdat any

$_ZN5crdtp12SerializableD2Ev = comdat any

$_ZN8headless8protocol16FundamentalValueD0Ev = comdat any

$_ZN8headless8protocol11StringValueD2Ev = comdat any

$_ZN8headless8protocol11StringValueD0Ev = comdat any

$_ZN8headless8protocol11BinaryValueD2Ev = comdat any

$_ZN8headless8protocol11BinaryValueD0Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSU_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

@_ZTVN8headless8protocol15DictionaryValueE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::vector.44"*)* @_ZNK8headless8protocol15DictionaryValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.headless::protocol::DictionaryValue"*)* @_ZN8headless8protocol15DictionaryValueD2Ev to i8*), i8* bitcast (void (%"class.headless::protocol::DictionaryValue"*)* @_ZN8headless8protocol15DictionaryValueD0Ev to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, i8*)* @_ZNK8headless8protocol5Value9asBooleanEPb to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, double*)* @_ZNK8headless8protocol5Value8asDoubleEPd to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, i32*)* @_ZNK8headless8protocol5Value9asIntegerEPi to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)* @_ZNK8headless8protocol5Value8asStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, %"class.headless::protocol::Binary"*)* @_ZNK8headless8protocol5Value8asBinaryEPNS0_6BinaryE to i8*), i8* bitcast (%"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)* @_ZNK8headless8protocol15DictionaryValue5cloneEv to i8*)] }, align 8
@_ZTVN8headless8protocol9ListValueE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.headless::protocol::ListValue"*, %"class.std::__1::vector.44"*)* @_ZNK8headless8protocol9ListValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.headless::protocol::ListValue"*)* @_ZN8headless8protocol9ListValueD2Ev to i8*), i8* bitcast (void (%"class.headless::protocol::ListValue"*)* @_ZN8headless8protocol9ListValueD0Ev to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, i8*)* @_ZNK8headless8protocol5Value9asBooleanEPb to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, double*)* @_ZNK8headless8protocol5Value8asDoubleEPd to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, i32*)* @_ZNK8headless8protocol5Value9asIntegerEPi to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)* @_ZNK8headless8protocol5Value8asStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, %"class.headless::protocol::Binary"*)* @_ZNK8headless8protocol5Value8asBinaryEPNS0_6BinaryE to i8*), i8* bitcast (%"class.headless::protocol::Value"* (%"class.headless::protocol::ListValue"*)* @_ZNK8headless8protocol9ListValue5cloneEv to i8*)] }, align 8
@.str = private unnamed_addr constant [16 x i8] c"object expected\00", align 1
@_ZTVN8headless8protocol6ObjectE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.headless::protocol::Object"*, %"class.std::__1::vector.44"*)* @_ZNK8headless8protocol6Object16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.headless::protocol::Object"*)* @_ZN8headless8protocol6ObjectD2Ev to i8*), i8* bitcast (void (%"class.headless::protocol::Object"*)* @_ZN8headless8protocol6ObjectD0Ev to i8*)] }, align 8
@_ZTVN8headless8protocol5ValueE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)* @_ZNK8headless8protocol5Value16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.crdtp::Serializable"*)* @_ZN5crdtp12SerializableD2Ev to i8*), i8* bitcast (void (%"class.headless::protocol::Value"*)* @_ZN8headless8protocol5ValueD0Ev to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, i8*)* @_ZNK8headless8protocol5Value9asBooleanEPb to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, double*)* @_ZNK8headless8protocol5Value8asDoubleEPd to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, i32*)* @_ZNK8headless8protocol5Value9asIntegerEPi to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)* @_ZNK8headless8protocol5Value8asStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, %"class.headless::protocol::Binary"*)* @_ZNK8headless8protocol5Value8asBinaryEPNS0_6BinaryE to i8*), i8* bitcast (%"class.headless::protocol::Value"* (%"class.headless::protocol::Value"*)* @_ZNK8headless8protocol5Value5cloneEv to i8*)] }, align 8
@_ZTVN8headless8protocol16FundamentalValueE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.headless::protocol::FundamentalValue"*, %"class.std::__1::vector.44"*)* @_ZNK8headless8protocol16FundamentalValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.crdtp::Serializable"*)* @_ZN5crdtp12SerializableD2Ev to i8*), i8* bitcast (void (%"class.headless::protocol::FundamentalValue"*)* @_ZN8headless8protocol16FundamentalValueD0Ev to i8*), i8* bitcast (i1 (%"class.headless::protocol::FundamentalValue"*, i8*)* @_ZNK8headless8protocol16FundamentalValue9asBooleanEPb to i8*), i8* bitcast (i1 (%"class.headless::protocol::FundamentalValue"*, double*)* @_ZNK8headless8protocol16FundamentalValue8asDoubleEPd to i8*), i8* bitcast (i1 (%"class.headless::protocol::FundamentalValue"*, i32*)* @_ZNK8headless8protocol16FundamentalValue9asIntegerEPi to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)* @_ZNK8headless8protocol5Value8asStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, %"class.headless::protocol::Binary"*)* @_ZNK8headless8protocol5Value8asBinaryEPNS0_6BinaryE to i8*), i8* bitcast (%"class.headless::protocol::Value"* (%"class.headless::protocol::FundamentalValue"*)* @_ZNK8headless8protocol16FundamentalValue5cloneEv to i8*)] }, align 8
@_ZTVN8headless8protocol11StringValueE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.headless::protocol::StringValue"*, %"class.std::__1::vector.44"*)* @_ZNK8headless8protocol11StringValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.headless::protocol::StringValue"*)* @_ZN8headless8protocol11StringValueD2Ev to i8*), i8* bitcast (void (%"class.headless::protocol::StringValue"*)* @_ZN8headless8protocol11StringValueD0Ev to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, i8*)* @_ZNK8headless8protocol5Value9asBooleanEPb to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, double*)* @_ZNK8headless8protocol5Value8asDoubleEPd to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, i32*)* @_ZNK8headless8protocol5Value9asIntegerEPi to i8*), i8* bitcast (i1 (%"class.headless::protocol::StringValue"*, %"class.std::__1::basic_string"*)* @_ZNK8headless8protocol11StringValue8asStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, %"class.headless::protocol::Binary"*)* @_ZNK8headless8protocol5Value8asBinaryEPNS0_6BinaryE to i8*), i8* bitcast (%"class.headless::protocol::Value"* (%"class.headless::protocol::StringValue"*)* @_ZNK8headless8protocol11StringValue5cloneEv to i8*)] }, align 8
@_ZTVN8headless8protocol11BinaryValueE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.headless::protocol::BinaryValue"*, %"class.std::__1::vector.44"*)* @_ZNK8headless8protocol11BinaryValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.headless::protocol::BinaryValue"*)* @_ZN8headless8protocol11BinaryValueD2Ev to i8*), i8* bitcast (void (%"class.headless::protocol::BinaryValue"*)* @_ZN8headless8protocol11BinaryValueD0Ev to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, i8*)* @_ZNK8headless8protocol5Value9asBooleanEPb to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, double*)* @_ZNK8headless8protocol5Value8asDoubleEPd to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, i32*)* @_ZNK8headless8protocol5Value9asIntegerEPi to i8*), i8* bitcast (i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)* @_ZNK8headless8protocol5Value8asStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.headless::protocol::BinaryValue"*, %"class.headless::protocol::Binary"*)* @_ZNK8headless8protocol11BinaryValue8asBinaryEPNS0_6BinaryE to i8*), i8* bitcast (%"class.headless::protocol::Value"* (%"class.headless::protocol::BinaryValue"*)* @_ZNK8headless8protocol11BinaryValue5cloneEv to i8*)] }, align 8
@_ZTVN8headless8protocol12_GLOBAL__N_118ValueParserHandlerE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*)* @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandlerD2Ev to i8*), i8* bitcast (void (%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*)* @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandlerD0Ev to i8*), i8* bitcast (void (%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*)* @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler14HandleMapBeginEv to i8*), i8* bitcast (void (%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*)* @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler12HandleMapEndEv to i8*), i8* bitcast (void (%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*)* @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler16HandleArrayBeginEv to i8*), i8* bitcast (void (%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*)* @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler14HandleArrayEndEv to i8*), i8* bitcast (void (%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*, i8*, i64)* @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler13HandleString8EN5crdtp4spanIhEE to i8*), i8* bitcast (void (%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*, i16*, i64)* @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler14HandleString16EN5crdtp4spanItEE to i8*), i8* bitcast (void (%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*, i8*, i64)* @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler12HandleBinaryEN5crdtp4spanIhEE to i8*), i8* bitcast (void (%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*, double)* @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler12HandleDoubleEd to i8*), i8* bitcast (void (%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*, i32)* @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler11HandleInt32Ei to i8*), i8* bitcast (void (%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*, i1)* @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler10HandleBoolEb to i8*), i8* bitcast (void (%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*)* @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler10HandleNullEv to i8*), i8* bitcast (void (%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*, i32, i64)* @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler11HandleErrorEN5crdtp6StatusE to i8*)] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN8headless8protocol15DictionaryValueD1Ev = hidden unnamed_addr alias void (%"class.headless::protocol::DictionaryValue"*), void (%"class.headless::protocol::DictionaryValue"*)* @_ZN8headless8protocol15DictionaryValueD2Ev
@_ZN8headless8protocol15DictionaryValueC1Ev = hidden unnamed_addr alias void (%"class.headless::protocol::DictionaryValue"*), void (%"class.headless::protocol::DictionaryValue"*)* @_ZN8headless8protocol15DictionaryValueC2Ev
@_ZN8headless8protocol9ListValueD1Ev = hidden unnamed_addr alias void (%"class.headless::protocol::ListValue"*), void (%"class.headless::protocol::ListValue"*)* @_ZN8headless8protocol9ListValueD2Ev
@_ZN8headless8protocol9ListValueC1Ev = hidden unnamed_addr alias void (%"class.headless::protocol::ListValue"*), void (%"class.headless::protocol::ListValue"*)* @_ZN8headless8protocol9ListValueC2Ev
@_ZN8headless8protocol6ObjectC1ENSt3__110unique_ptrINS0_15DictionaryValueENS2_14default_deleteIS4_EEEE = hidden unnamed_addr alias void (%"class.headless::protocol::Object"*, %"class.headless::protocol::DictionaryValue"*), void (%"class.headless::protocol::Object"*, %"class.headless::protocol::DictionaryValue"*)* @_ZN8headless8protocol6ObjectC2ENSt3__110unique_ptrINS0_15DictionaryValueENS2_14default_deleteIS4_EEEE
@_ZN8headless8protocol6ObjectD1Ev = hidden unnamed_addr alias void (%"class.headless::protocol::Object"*), void (%"class.headless::protocol::Object"*)* @_ZN8headless8protocol6ObjectD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::protocol::Value"* @_ZN8headless8protocol5Value11parseBinaryEPKhm(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", align 8
  %4 = bitcast %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %4) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 64, i1 false)
  %5 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN8headless8protocol12_GLOBAL__N_118ValueParserHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 1, i32 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 1, i32 1
  store i64 -1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 5
  %10 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #16
  %11 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 33, i1 false) #16
  %12 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 0
  call void @_ZN5crdtp4cbor9ParseCBORENS_4spanIhEEPNS_13ParserHandlerE(i8* %0, i64 %1, %"class.crdtp::ParserHandler"* nonnull %12) #16
  %13 = load i32, i32* %6, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %16, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %16, align 8
  br label %18

18:                                               ; preds = %2, %15
  %19 = phi %"class.headless::protocol::Value"* [ %17, %15 ], [ null, %2 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN8headless8protocol12_GLOBAL__N_118ValueParserHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #17
  br label %27

27:                                               ; preds = %24, %18
  %28 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 3, i32 0, i32 0
  %29 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %28, align 8
  %30 = icmp eq %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %29 to i64
  %33 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 3, i32 0, i32 1
  %34 = bitcast %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %29, i64 0, i32 0
  call void @_ZdlPv(i8* %35) #17
  br label %36

36:                                               ; preds = %31, %27
  %37 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %37, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %37, align 8
  %39 = icmp eq %"class.headless::protocol::Value"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.headless::protocol::Value"* %38 to void (%"class.headless::protocol::Value"*)***
  %42 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %42, i64 2
  %44 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %43, align 8
  call void %44(%"class.headless::protocol::Value"* nonnull %38) #16
  br label %45

45:                                               ; preds = %36, %40
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %4) #16
  ret %"class.headless::protocol::Value"* %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5crdtp4cbor9ParseCBORENS_4spanIhEEPNS_13ParserHandlerE(i8*, i64, %"class.crdtp::ParserHandler"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandlerD2Ev(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN8headless8protocol12_GLOBAL__N_118ValueParserHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #17
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %12, align 8
  %14 = icmp eq %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %13 to i64
  %17 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = bitcast %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %13, i64 0, i32 0
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %21, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %21, align 8
  %23 = icmp eq %"class.headless::protocol::Value"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.headless::protocol::Value"* %22 to void (%"class.headless::protocol::Value"*)***
  %26 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %26, i64 2
  %28 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %27, align 8
  tail call void %28(%"class.headless::protocol::Value"* nonnull %22) #16
  br label %29

29:                                               ; preds = %20, %24
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8headless8protocol5Value9asBooleanEPb(%"class.headless::protocol::Value"* nocapture readnone, i8* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8headless8protocol5Value8asDoubleEPd(%"class.headless::protocol::Value"* nocapture readnone, double* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8headless8protocol5Value9asIntegerEPi(%"class.headless::protocol::Value"* nocapture readnone, i32* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8headless8protocol5Value8asStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.headless::protocol::Value"* nocapture readnone, %"class.std::__1::basic_string"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8headless8protocol5Value8asBinaryEPNS0_6BinaryE(%"class.headless::protocol::Value"* nocapture readnone, %"class.headless::protocol::Binary"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8headless8protocol5Value16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.headless::protocol::Value"* nocapture readnone, %"class.std::__1::vector.44"*) unnamed_addr #0 align 2 {
  %3 = tail call zeroext i8 @_ZN5crdtp4cbor10EncodeNullEv() #16
  %4 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ult i8* %5, %7
  %9 = ptrtoint i8* %7 to i64
  br i1 %8, label %10, label %14

10:                                               ; preds = %2
  store i8 %3, i8* %5, align 1
  %11 = getelementptr inbounds i8, i8* %5, i64 1
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast i8** %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %59

14:                                               ; preds = %2
  %15 = ptrtoint i8* %5 to i64
  %16 = bitcast i8** %4 to i64*
  %17 = bitcast %"class.std::__1::vector.44"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = add i64 %19, 1
  %21 = icmp slt i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %14
  %23 = bitcast %"class.std::__1::vector.44"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %23) #18
  unreachable

24:                                               ; preds = %14
  %25 = bitcast i8** %6 to i64*
  %26 = sub i64 %9, %18
  %27 = icmp ult i64 %26, 4611686018427387903
  br i1 %27, label %28, label %33

28:                                               ; preds = %24
  %29 = shl i64 %26, 1
  %30 = icmp ult i64 %29, %20
  %31 = select i1 %30, i64 %20, i64 %29
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28, %24
  %34 = phi i64 [ %31, %28 ], [ 9223372036854775807, %24 ]
  %35 = tail call i8* @_Znwm(i64 %34) #17
  br label %36

36:                                               ; preds = %33, %28
  %37 = phi i64 [ %34, %33 ], [ 0, %28 ]
  %38 = phi i8* [ %35, %33 ], [ null, %28 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %19
  %40 = getelementptr inbounds i8, i8* %38, i64 %37
  %41 = ptrtoint i8* %40 to i64
  store i8 %3, i8* %39, align 1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = ptrtoint i8* %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = load i64, i64* %16, align 8
  %47 = ptrtoint i8* %45 to i64
  %48 = sub i64 %46, %47
  %49 = sub i64 0, %48
  %50 = getelementptr inbounds i8, i8* %39, i64 %49
  %51 = ptrtoint i8* %50 to i64
  %52 = icmp sgt i64 %48, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %36
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %45, i64 %48, i1 false) #16
  %54 = load i8*, i8** %44, align 8
  br label %55

55:                                               ; preds = %53, %36
  %56 = phi i8* [ %45, %36 ], [ %54, %53 ]
  store i64 %51, i64* %17, align 8
  store i64 %43, i64* %16, align 8
  store i64 %41, i64* %25, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  tail call void @_ZdlPv(i8* nonnull %56) #17
  br label %59

59:                                               ; preds = %10, %55, %58
  ret void
}

declare zeroext i8 @_ZN5crdtp4cbor10EncodeNullEv() local_unnamed_addr #2

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %"class.headless::protocol::Value"* @_ZNK8headless8protocol5Value5cloneEv(%"class.headless::protocol::Value"* nocapture readnone) unnamed_addr #5 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #17
  %3 = bitcast i8* %2 to %"class.headless::protocol::Value"*
  %4 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol5ValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 8
  ret %"class.headless::protocol::Value"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8headless8protocol16FundamentalValue9asBooleanEPb(%"class.headless::protocol::FundamentalValue"* nocapture readonly, i8* nocapture) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::FundamentalValue", %"class.headless::protocol::FundamentalValue"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.headless::protocol::FundamentalValue", %"class.headless::protocol::FundamentalValue"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.51* %7 to i8*
  %9 = load i8, i8* %8, align 8, !range !2
  store i8 %9, i8* %1, align 1
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8headless8protocol16FundamentalValue8asDoubleEPd(%"class.headless::protocol::FundamentalValue"* nocapture readonly, double* nocapture) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::FundamentalValue", %"class.headless::protocol::FundamentalValue"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %15 [
    i32 3, label %5
    i32 2, label %10
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.headless::protocol::FundamentalValue", %"class.headless::protocol::FundamentalValue"* %0, i64 0, i32 1, i32 0
  %7 = bitcast double* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast double* %1 to i64*
  store i64 %8, i64* %9, align 8
  br label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.headless::protocol::FundamentalValue", %"class.headless::protocol::FundamentalValue"* %0, i64 0, i32 1
  %12 = bitcast %union.anon.51* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = sitofp i32 %13 to double
  store double %14, double* %1, align 8
  br label %15

15:                                               ; preds = %2, %10, %5
  %16 = phi i1 [ true, %5 ], [ true, %10 ], [ false, %2 ]
  ret i1 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8headless8protocol16FundamentalValue9asIntegerEPi(%"class.headless::protocol::FundamentalValue"* nocapture readonly, i32* nocapture) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::FundamentalValue", %"class.headless::protocol::FundamentalValue"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.headless::protocol::FundamentalValue", %"class.headless::protocol::FundamentalValue"* %0, i64 0, i32 1
  %8 = bitcast %union.anon.51* %7 to i32*
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %1, align 4
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8headless8protocol16FundamentalValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.headless::protocol::FundamentalValue"* nocapture readonly, %"class.std::__1::vector.44"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::FundamentalValue", %"class.headless::protocol::FundamentalValue"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %78 [
    i32 3, label %5
    i32 2, label %8
    i32 1, label %12
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.headless::protocol::FundamentalValue", %"class.headless::protocol::FundamentalValue"* %0, i64 0, i32 1, i32 0
  %7 = load double, double* %6, align 8
  tail call void @_ZN5crdtp4cbor12EncodeDoubleEdPNSt3__16vectorIhNS1_9allocatorIhEEEE(double %7, %"class.std::__1::vector.44"* %1) #16
  br label %78

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.headless::protocol::FundamentalValue", %"class.headless::protocol::FundamentalValue"* %0, i64 0, i32 1
  %10 = bitcast %union.anon.51* %9 to i32*
  %11 = load i32, i32* %10, align 8
  tail call void @_ZN5crdtp4cbor11EncodeInt32EiPNSt3__16vectorIhNS1_9allocatorIhEEEE(i32 %11, %"class.std::__1::vector.44"* %1) #16
  br label %78

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.headless::protocol::FundamentalValue", %"class.headless::protocol::FundamentalValue"* %0, i64 0, i32 1
  %14 = bitcast %union.anon.51* %13 to i8*
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = tail call zeroext i8 @_ZN5crdtp4cbor10EncodeTrueEv() #16
  br label %21

19:                                               ; preds = %12
  %20 = tail call zeroext i8 @_ZN5crdtp4cbor11EncodeFalseEv() #16
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi i8 [ %18, %17 ], [ %20, %19 ]
  %23 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = icmp ult i8* %24, %26
  %28 = ptrtoint i8* %26 to i64
  br i1 %27, label %29, label %33

29:                                               ; preds = %21
  store i8 %22, i8* %24, align 1
  %30 = getelementptr inbounds i8, i8* %24, i64 1
  %31 = ptrtoint i8* %30 to i64
  %32 = bitcast i8** %23 to i64*
  store i64 %31, i64* %32, align 8
  br label %78

33:                                               ; preds = %21
  %34 = ptrtoint i8* %24 to i64
  %35 = bitcast i8** %23 to i64*
  %36 = bitcast %"class.std::__1::vector.44"* %1 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %34, %37
  %39 = add i64 %38, 1
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %33
  %42 = bitcast %"class.std::__1::vector.44"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #18
  unreachable

43:                                               ; preds = %33
  %44 = bitcast i8** %25 to i64*
  %45 = sub i64 %28, %37
  %46 = icmp ult i64 %45, 4611686018427387903
  br i1 %46, label %47, label %52

47:                                               ; preds = %43
  %48 = shl i64 %45, 1
  %49 = icmp ult i64 %48, %39
  %50 = select i1 %49, i64 %39, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47, %43
  %53 = phi i64 [ %50, %47 ], [ 9223372036854775807, %43 ]
  %54 = tail call i8* @_Znwm(i64 %53) #17
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i64 [ %53, %52 ], [ 0, %47 ]
  %57 = phi i8* [ %54, %52 ], [ null, %47 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 %38
  %59 = getelementptr inbounds i8, i8* %57, i64 %56
  %60 = ptrtoint i8* %59 to i64
  store i8 %22, i8* %58, align 1
  %61 = getelementptr inbounds i8, i8* %58, i64 1
  %62 = ptrtoint i8* %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = load i64, i64* %35, align 8
  %66 = ptrtoint i8* %64 to i64
  %67 = sub i64 %65, %66
  %68 = sub i64 0, %67
  %69 = getelementptr inbounds i8, i8* %58, i64 %68
  %70 = ptrtoint i8* %69 to i64
  %71 = icmp sgt i64 %67, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %55
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* align 1 %64, i64 %67, i1 false) #16
  %73 = load i8*, i8** %63, align 8
  br label %74

74:                                               ; preds = %72, %55
  %75 = phi i8* [ %64, %55 ], [ %73, %72 ]
  store i64 %70, i64* %36, align 8
  store i64 %62, i64* %35, align 8
  store i64 %60, i64* %44, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %78, label %77

77:                                               ; preds = %74
  tail call void @_ZdlPv(i8* nonnull %75) #17
  br label %78

78:                                               ; preds = %77, %74, %29, %2, %5, %8
  ret void
}

declare void @_ZN5crdtp4cbor12EncodeDoubleEdPNSt3__16vectorIhNS1_9allocatorIhEEEE(double, %"class.std::__1::vector.44"*) local_unnamed_addr #2

declare void @_ZN5crdtp4cbor11EncodeInt32EiPNSt3__16vectorIhNS1_9allocatorIhEEEE(i32, %"class.std::__1::vector.44"*) local_unnamed_addr #2

declare zeroext i8 @_ZN5crdtp4cbor10EncodeTrueEv() local_unnamed_addr #2

declare zeroext i8 @_ZN5crdtp4cbor11EncodeFalseEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::protocol::Value"* @_ZNK8headless8protocol16FundamentalValue5cloneEv(%"class.headless::protocol::FundamentalValue"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::FundamentalValue", %"class.headless::protocol::FundamentalValue"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %36 [
    i32 3, label %4
    i32 2, label %15
    i32 1, label %26
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.headless::protocol::FundamentalValue", %"class.headless::protocol::FundamentalValue"* %0, i64 0, i32 1, i32 0
  %6 = bitcast double* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = tail call i8* @_Znwm(i64 24) #17
  %9 = bitcast i8* %8 to i32 (...)***
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 3, i32* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i64*
  store i64 %7, i64* %13, align 8
  %14 = ptrtoint i8* %8 to i64
  br label %36

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.headless::protocol::FundamentalValue", %"class.headless::protocol::FundamentalValue"* %0, i64 0, i32 1
  %17 = bitcast %union.anon.51* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = tail call i8* @_Znwm(i64 24) #17
  %20 = bitcast i8* %19 to i32 (...)***
  %21 = getelementptr inbounds i8, i8* %19, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 2, i32* %22, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %23 = getelementptr inbounds i8, i8* %19, i64 16
  %24 = bitcast i8* %23 to i32*
  store i32 %18, i32* %24, align 8
  %25 = ptrtoint i8* %19 to i64
  br label %36

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.headless::protocol::FundamentalValue", %"class.headless::protocol::FundamentalValue"* %0, i64 0, i32 1
  %28 = bitcast %union.anon.51* %27 to i8*
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = tail call i8* @_Znwm(i64 24) #17
  %31 = bitcast i8* %30 to i32 (...)***
  %32 = getelementptr inbounds i8, i8* %30, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 1, i32* %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 16
  store i8 %29, i8* %34, align 8
  %35 = ptrtoint i8* %30 to i64
  br label %36

36:                                               ; preds = %1, %26, %15, %4
  %37 = phi i64 [ %35, %26 ], [ %25, %15 ], [ %14, %4 ], [ 0, %1 ]
  %38 = inttoptr i64 %37 to %"class.headless::protocol::Value"*
  ret %"class.headless::protocol::Value"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8headless8protocol11StringValue8asStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.headless::protocol::StringValue"*, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::StringValue", %"class.headless::protocol::StringValue"* %0, i64 0, i32 1
  %4 = icmp eq %"class.std::__1::basic_string"* %3, %1
  br i1 %4, label %34, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #16
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.headless::protocol::StringValue", %"class.headless::protocol::StringValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %1, i8* %20, i64 %22) #16
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.headless::protocol::StringValue", %"class.headless::protocol::StringValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %1, i8* %31, i64 %32) #16
  br label %34

34:                                               ; preds = %2, %15, %18, %24
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8headless8protocol11StringValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.headless::protocol::StringValue"*, %"class.std::__1::vector.44"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::StringValue", %"class.headless::protocol::StringValue"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.headless::protocol::StringValue", %"class.headless::protocol::StringValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  tail call void @_ZN5crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* null, i64 0, %"class.std::__1::vector.44"* %1) #16
  br label %21

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %18 = select i1 %7, i8* %16, i8* %17
  %19 = icmp eq i8* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %14
  tail call void @_ZN5crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* nonnull %18, i64 %11, %"class.std::__1::vector.44"* %1) #16
  br label %21

21:                                               ; preds = %13, %14, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::protocol::Value"* @_ZNK8headless8protocol11StringValue5cloneEv(%"class.headless::protocol::StringValue"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::StringValue", %"class.headless::protocol::StringValue"* %0, i64 0, i32 1
  %3 = tail call i8* @_Znwm(i64 40) #17
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 4, i32* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  %8 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %13, i64 24, i1 false) #16
  br label %20

14:                                               ; preds = %1
  %15 = bitcast i8* %7 to %"class.std::__1::basic_string"*
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.headless::protocol::StringValue", %"class.headless::protocol::StringValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %15, i8* %17, i64 %19) #16
  br label %20

20:                                               ; preds = %14, %12
  %21 = bitcast i8* %3 to %"class.headless::protocol::Value"*
  ret %"class.headless::protocol::Value"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8headless8protocol11BinaryValue8asBinaryEPNS0_6BinaryE(%"class.headless::protocol::BinaryValue"* nocapture readonly, %"class.headless::protocol::Binary"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.headless::protocol::BinaryValue", %"class.headless::protocol::BinaryValue"* %0, i64 0, i32 1, i32 1, i32 0
  %5 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %4, align 8
  %6 = icmp eq %"class.base::RefCountedMemory"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %7, %2
  %11 = ptrtoint %"class.base::RefCountedMemory"* %5 to i64
  %12 = bitcast %class.scoped_refptr* %3 to i64*
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  store i64 %11, i64* %12, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %28

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe"* %22 to %"class.base::RefCountedMemory"*
  %24 = bitcast %"class.base::RefCountedThreadSafe"* %22 to void (%"class.base::RefCountedMemory"*)***
  %25 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %25, i64 3
  %27 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %26, align 8
  tail call void %27(%"class.base::RefCountedMemory"* nonnull %23) #16
  br label %28

28:                                               ; preds = %10, %16, %21
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8headless8protocol11BinaryValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.headless::protocol::BinaryValue"* nocapture readonly, %"class.std::__1::vector.44"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::BinaryValue", %"class.headless::protocol::BinaryValue"* %0, i64 0, i32 1, i32 1, i32 0
  %4 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %3, align 8
  %5 = bitcast %"class.base::RefCountedMemory"* %4 to i8* (%"class.base::RefCountedMemory"*)***
  %6 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %5, align 8
  %7 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %6, align 8
  %8 = tail call i8* %7(%"class.base::RefCountedMemory"* %4) #16
  %9 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %3, align 8
  %10 = bitcast %"class.base::RefCountedMemory"* %9 to i64 (%"class.base::RefCountedMemory"*)***
  %11 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %11, i64 1
  %13 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %12, align 8
  %14 = tail call i64 %13(%"class.base::RefCountedMemory"* %9) #16
  tail call void @_ZN5crdtp4cbor12EncodeBinaryENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* %8, i64 %14, %"class.std::__1::vector.44"* %1) #16
  ret void
}

declare void @_ZN5crdtp4cbor12EncodeBinaryENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector.44"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::protocol::Value"* @_ZNK8headless8protocol11BinaryValue5cloneEv(%"class.headless::protocol::BinaryValue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::BinaryValue", %"class.headless::protocol::BinaryValue"* %0, i64 0, i32 1
  %3 = tail call i8* @_Znwm(i64 32) #17
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 5, i32* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol11BinaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  %8 = bitcast i8* %7 to %"class.headless::protocol::Binary"*
  tail call void @_ZN8headless8protocol6BinaryC1ERKS1_(%"class.headless::protocol::Binary"* %8, %"class.headless::protocol::Binary"* dereferenceable(16) %2) #16
  %9 = bitcast i8* %3 to %"class.headless::protocol::Value"*
  ret %"class.headless::protocol::Value"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15DictionaryValueD2Ev(%"class.headless::protocol::DictionaryValue"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol15DictionaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %9 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.std::__1::basic_string"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 -1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #17
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.std::__1::basic_string"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.18"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #17
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %58, label %33

33:                                               ; preds = %29, %55
  %34 = phi %"struct.std::__1::__hash_node_base"* [ %36, %55 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 2
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 5
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %38 to %"class.headless::protocol::Value"**
  %40 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %39, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %39, align 8
  %41 = icmp eq %"class.headless::protocol::Value"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %33
  %43 = bitcast %"class.headless::protocol::Value"* %40 to void (%"class.headless::protocol::Value"*)***
  %44 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %44, i64 2
  %46 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %45, align 8
  tail call void %46(%"class.headless::protocol::Value"* nonnull %40) #16
  br label %47

47:                                               ; preds = %42, %33
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %37 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #17
  br label %55

55:                                               ; preds = %52, %47
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i8*
  tail call void @_ZdlPv(i8* %56) #17
  %57 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %57, label %58, label %33

58:                                               ; preds = %55, %29
  %59 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %59, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node_base"** %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = bitcast %"struct.std::__1::__hash_node_base"** %60 to i8*
  tail call void @_ZdlPv(i8* %63) #17
  br label %64

64:                                               ; preds = %58, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15DictionaryValueD0Ev(%"class.headless::protocol::DictionaryValue"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8headless8protocol15DictionaryValueD2Ev(%"class.headless::protocol::DictionaryValue"* %0) #16
  %2 = bitcast %"class.headless::protocol::DictionaryValue"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15DictionaryValue10setBooleanERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call i8* @_Znwm(i64 24) #17
  %6 = zext i1 %2 to i8
  %7 = bitcast i8* %5 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 16
  store i8 %6, i8* %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %5, i8** %13, align 8
  call void @_ZN8headless8protocol15DictionaryValue3setINS0_5ValueEEEvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERNS4_10unique_ptrIT_NS4_14default_deleteISE_EEEE(%"class.headless::protocol::DictionaryValue"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #16
  %14 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %12, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %12, align 8
  %15 = icmp eq %"class.headless::protocol::Value"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.headless::protocol::Value"* %14 to void (%"class.headless::protocol::Value"*)***
  %18 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %18, i64 2
  %20 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %19, align 8
  call void %20(%"class.headless::protocol::Value"* nonnull %14) #16
  br label %21

21:                                               ; preds = %16, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15DictionaryValue8setValueERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS2_10unique_ptrINS0_5ValueENS2_14default_deleteISC_EEEE(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.headless::protocol::Value"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::protocol::Value"* %2, %"class.headless::protocol::Value"** %5, align 8
  call void @_ZN8headless8protocol15DictionaryValue3setINS0_5ValueEEEvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERNS4_10unique_ptrIT_NS4_14default_deleteISE_EEEE(%"class.headless::protocol::DictionaryValue"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4)
  %6 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %5, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %5, align 8
  %7 = icmp eq %"class.headless::protocol::Value"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.headless::protocol::Value"* %6 to void (%"class.headless::protocol::Value"*)***
  %10 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %10, i64 2
  %12 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %11, align 8
  call void %12(%"class.headless::protocol::Value"* nonnull %6) #16
  br label %13

13:                                               ; preds = %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15DictionaryValue10setIntegerERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEi(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call i8* @_Znwm(i64 24) #17
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 2, i32* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 16
  %10 = bitcast i8* %9 to i32*
  store i32 %2, i32* %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %5, i8** %13, align 8
  call void @_ZN8headless8protocol15DictionaryValue3setINS0_5ValueEEEvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERNS4_10unique_ptrIT_NS4_14default_deleteISE_EEEE(%"class.headless::protocol::DictionaryValue"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #16
  %14 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %12, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %12, align 8
  %15 = icmp eq %"class.headless::protocol::Value"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.headless::protocol::Value"* %14 to void (%"class.headless::protocol::Value"*)***
  %18 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %18, i64 2
  %20 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %19, align 8
  call void %20(%"class.headless::protocol::Value"* nonnull %14) #16
  br label %21

21:                                               ; preds = %16, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15DictionaryValue9setDoubleERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEd(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), double) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call i8* @_Znwm(i64 24) #17
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 3, i32* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 16
  %10 = bitcast i8* %9 to double*
  store double %2, double* %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %5, i8** %13, align 8
  call void @_ZN8headless8protocol15DictionaryValue3setINS0_5ValueEEEvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERNS4_10unique_ptrIT_NS4_14default_deleteISE_EEEE(%"class.headless::protocol::DictionaryValue"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #16
  %14 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %12, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %12, align 8
  %15 = icmp eq %"class.headless::protocol::Value"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.headless::protocol::Value"* %14 to void (%"class.headless::protocol::Value"*)***
  %18 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %18, i64 2
  %20 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %19, align 8
  call void %20(%"class.headless::protocol::Value"* nonnull %14) #16
  br label %21

21:                                               ; preds = %16, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15DictionaryValue9setStringERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call i8* @_Znwm(i64 40) #17
  %6 = bitcast i8* %5 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 4, i32* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 16
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %15, i64 24, i1 false) #16
  br label %22

16:                                               ; preds = %3
  %17 = bitcast i8* %9 to %"class.std::__1::basic_string"*
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %17, i8* %19, i64 %21) #16
  br label %22

22:                                               ; preds = %14, %16
  %23 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %5, i8** %25, align 8
  call void @_ZN8headless8protocol15DictionaryValue3setINS0_5ValueEEEvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERNS4_10unique_ptrIT_NS4_14default_deleteISE_EEEE(%"class.headless::protocol::DictionaryValue"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #16
  %26 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %24, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %24, align 8
  %27 = icmp eq %"class.headless::protocol::Value"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.headless::protocol::Value"* %26 to void (%"class.headless::protocol::Value"*)***
  %30 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %30, i64 2
  %32 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %31, align 8
  call void %32(%"class.headless::protocol::Value"* nonnull %26) #16
  br label %33

33:                                               ; preds = %28, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless8protocol15DictionaryValue3setINS0_5ValueEEEvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERNS4_10unique_ptrIT_NS4_14default_deleteISE_EEEE(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.116", align 1
  %6 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %7 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %8 = icmp eq %"struct.std::__1::__hash_node_base"* %7, null
  %9 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::tuple.116", %"class.std::__1::tuple.116"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #16
  %12 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSU_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.116"* nonnull dereferenceable(1) %5) #16
  %13 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %12, 0
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %13, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %15, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base"* %14 to %"class.headless::protocol::Value"**
  %19 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %18, align 8
  %20 = bitcast %"struct.std::__1::__hash_node_base"* %14 to i64*
  store i64 %17, i64* %20, align 8
  %21 = icmp eq %"class.headless::protocol::Value"* %19, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %3
  %23 = bitcast %"class.headless::protocol::Value"* %19 to void (%"class.headless::protocol::Value"*)***
  %24 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %24, i64 2
  %26 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %25, align 8
  call void %26(%"class.headless::protocol::Value"* nonnull %19) #16
  br label %27

27:                                               ; preds = %3, %22
  br i1 %8, label %28, label %53

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 1
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %32 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %33 = icmp eq %"class.std::__1::basic_string"* %30, %32
  br i1 %33, label %51, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #16
  br label %47

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %30, i8* %44, i64 %46) #16
  br label %47

47:                                               ; preds = %42, %39
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 1
  %49 = ptrtoint %"class.std::__1::basic_string"* %48 to i64
  %50 = bitcast %"class.std::__1::basic_string"** %29 to i64*
  store i64 %49, i64* %50, align 8
  br label %53

51:                                               ; preds = %28
  %52 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.18"* %52, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  br label %53

53:                                               ; preds = %51, %47, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15DictionaryValue9setObjectERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS2_10unique_ptrIS1_NS2_14default_deleteIS1_EEEE(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.headless::protocol::DictionaryValue"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.70", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::protocol::DictionaryValue"* %2, %"class.headless::protocol::DictionaryValue"** %5, align 8
  call void @_ZN8headless8protocol15DictionaryValue3setIS1_EEvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS3_10unique_ptrIT_NS3_14default_deleteISD_EEEE(%"class.headless::protocol::DictionaryValue"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::unique_ptr.70"* nonnull dereferenceable(8) %4)
  %6 = load %"class.headless::protocol::DictionaryValue"*, %"class.headless::protocol::DictionaryValue"** %5, align 8
  store %"class.headless::protocol::DictionaryValue"* null, %"class.headless::protocol::DictionaryValue"** %5, align 8
  %7 = icmp eq %"class.headless::protocol::DictionaryValue"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.headless::protocol::DictionaryValue"* %6 to void (%"class.headless::protocol::DictionaryValue"*)***
  %10 = load void (%"class.headless::protocol::DictionaryValue"*)**, void (%"class.headless::protocol::DictionaryValue"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.headless::protocol::DictionaryValue"*)*, void (%"class.headless::protocol::DictionaryValue"*)** %10, i64 2
  %12 = load void (%"class.headless::protocol::DictionaryValue"*)*, void (%"class.headless::protocol::DictionaryValue"*)** %11, align 8
  call void %12(%"class.headless::protocol::DictionaryValue"* nonnull %6) #16
  br label %13

13:                                               ; preds = %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless8protocol15DictionaryValue3setIS1_EEvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERNS3_10unique_ptrIT_NS3_14default_deleteISD_EEEE(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::unique_ptr.70"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.116", align 1
  %6 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %7 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %8 = icmp eq %"struct.std::__1::__hash_node_base"* %7, null
  %9 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::tuple.116", %"class.std::__1::tuple.116"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #16
  %12 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSU_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.116"* nonnull dereferenceable(1) %5) #16
  %13 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %12, 0
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %13, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.70"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  store %"class.headless::protocol::DictionaryValue"* null, %"class.headless::protocol::DictionaryValue"** %15, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base"* %14 to %"class.headless::protocol::Value"**
  %19 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %18, align 8
  %20 = bitcast %"struct.std::__1::__hash_node_base"* %14 to i64*
  store i64 %17, i64* %20, align 8
  %21 = icmp eq %"class.headless::protocol::Value"* %19, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %3
  %23 = bitcast %"class.headless::protocol::Value"* %19 to void (%"class.headless::protocol::Value"*)***
  %24 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %24, i64 2
  %26 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %25, align 8
  call void %26(%"class.headless::protocol::Value"* nonnull %19) #16
  br label %27

27:                                               ; preds = %3, %22
  br i1 %8, label %28, label %53

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 1
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %32 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %33 = icmp eq %"class.std::__1::basic_string"* %30, %32
  br i1 %33, label %51, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #16
  br label %47

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %30, i8* %44, i64 %46) #16
  br label %47

47:                                               ; preds = %42, %39
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 1
  %49 = ptrtoint %"class.std::__1::basic_string"* %48 to i64
  %50 = bitcast %"class.std::__1::basic_string"** %29 to i64*
  store i64 %49, i64* %50, align 8
  br label %53

51:                                               ; preds = %28
  %52 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.18"* %52, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  br label %53

53:                                               ; preds = %51, %47, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15DictionaryValue8setArrayERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS2_10unique_ptrINS0_9ListValueENS2_14default_deleteISC_EEEE(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.headless::protocol::ListValue"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.76", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.76"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::protocol::ListValue"* %2, %"class.headless::protocol::ListValue"** %5, align 8
  call void @_ZN8headless8protocol15DictionaryValue3setINS0_9ListValueEEEvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERNS4_10unique_ptrIT_NS4_14default_deleteISE_EEEE(%"class.headless::protocol::DictionaryValue"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::unique_ptr.76"* nonnull dereferenceable(8) %4)
  %6 = load %"class.headless::protocol::ListValue"*, %"class.headless::protocol::ListValue"** %5, align 8
  store %"class.headless::protocol::ListValue"* null, %"class.headless::protocol::ListValue"** %5, align 8
  %7 = icmp eq %"class.headless::protocol::ListValue"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.headless::protocol::ListValue"* %6 to void (%"class.headless::protocol::ListValue"*)***
  %10 = load void (%"class.headless::protocol::ListValue"*)**, void (%"class.headless::protocol::ListValue"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.headless::protocol::ListValue"*)*, void (%"class.headless::protocol::ListValue"*)** %10, i64 2
  %12 = load void (%"class.headless::protocol::ListValue"*)*, void (%"class.headless::protocol::ListValue"*)** %11, align 8
  call void %12(%"class.headless::protocol::ListValue"* nonnull %6) #16
  br label %13

13:                                               ; preds = %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless8protocol15DictionaryValue3setINS0_9ListValueEEEvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERNS4_10unique_ptrIT_NS4_14default_deleteISE_EEEE(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::unique_ptr.76"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.116", align 1
  %6 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %7 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %8 = icmp eq %"struct.std::__1::__hash_node_base"* %7, null
  %9 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::tuple.116", %"class.std::__1::tuple.116"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #16
  %12 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSU_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.116"* nonnull dereferenceable(1) %5) #16
  %13 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %12, 0
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %13, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.76"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.76"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  store %"class.headless::protocol::ListValue"* null, %"class.headless::protocol::ListValue"** %15, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base"* %14 to %"class.headless::protocol::Value"**
  %19 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %18, align 8
  %20 = bitcast %"struct.std::__1::__hash_node_base"* %14 to i64*
  store i64 %17, i64* %20, align 8
  %21 = icmp eq %"class.headless::protocol::Value"* %19, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %3
  %23 = bitcast %"class.headless::protocol::Value"* %19 to void (%"class.headless::protocol::Value"*)***
  %24 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %24, i64 2
  %26 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %25, align 8
  call void %26(%"class.headless::protocol::Value"* nonnull %19) #16
  br label %27

27:                                               ; preds = %3, %22
  br i1 %8, label %28, label %53

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 1
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %32 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %33 = icmp eq %"class.std::__1::basic_string"* %30, %32
  br i1 %33, label %51, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #16
  br label %47

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %30, i8* %44, i64 %46) #16
  br label %47

47:                                               ; preds = %42, %39
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 1
  %49 = ptrtoint %"class.std::__1::basic_string"* %48 to i64
  %50 = bitcast %"class.std::__1::basic_string"** %29 to i64*
  store i64 %49, i64* %50, align 8
  br label %53

51:                                               ; preds = %28
  %52 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.18"* %52, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  br label %53

53:                                               ; preds = %51, %47, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8headless8protocol15DictionaryValue10getBooleanERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPb(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %5 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %5, i64 5
  %9 = bitcast %"struct.std::__1::__hash_node_base"* %8 to %"class.headless::protocol::Value"**
  %10 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %9, align 8
  %11 = icmp eq %"class.headless::protocol::Value"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.headless::protocol::Value"* %10 to i1 (%"class.headless::protocol::Value"*, i8*)***
  %14 = load i1 (%"class.headless::protocol::Value"*, i8*)**, i1 (%"class.headless::protocol::Value"*, i8*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.headless::protocol::Value"*, i8*)*, i1 (%"class.headless::protocol::Value"*, i8*)** %14, i64 3
  %16 = load i1 (%"class.headless::protocol::Value"*, i8*)*, i1 (%"class.headless::protocol::Value"*, i8*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.headless::protocol::Value"* nonnull %10, i8* %2) #16
  br label %18

18:                                               ; preds = %3, %7, %12
  %19 = phi i1 [ %17, %12 ], [ false, %7 ], [ false, %3 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::protocol::Value"* @_ZNK8headless8protocol15DictionaryValue3getERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %4 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %4, i64 5
  %8 = bitcast %"struct.std::__1::__hash_node_base"* %7 to %"class.headless::protocol::Value"**
  %9 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %8, align 8
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi %"class.headless::protocol::Value"* [ %9, %6 ], [ null, %2 ]
  ret %"class.headless::protocol::Value"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8headless8protocol15DictionaryValue10getIntegerERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPi(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), i32*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %5 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %5, i64 5
  %9 = bitcast %"struct.std::__1::__hash_node_base"* %8 to %"class.headless::protocol::Value"**
  %10 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %9, align 8
  %11 = icmp eq %"class.headless::protocol::Value"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.headless::protocol::Value"* %10 to i1 (%"class.headless::protocol::Value"*, i32*)***
  %14 = load i1 (%"class.headless::protocol::Value"*, i32*)**, i1 (%"class.headless::protocol::Value"*, i32*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.headless::protocol::Value"*, i32*)*, i1 (%"class.headless::protocol::Value"*, i32*)** %14, i64 5
  %16 = load i1 (%"class.headless::protocol::Value"*, i32*)*, i1 (%"class.headless::protocol::Value"*, i32*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.headless::protocol::Value"* nonnull %10, i32* %2) #16
  br label %18

18:                                               ; preds = %3, %7, %12
  %19 = phi i1 [ %17, %12 ], [ false, %7 ], [ false, %3 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8headless8protocol15DictionaryValue9getDoubleERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPd(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), double*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %5 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %5, i64 5
  %9 = bitcast %"struct.std::__1::__hash_node_base"* %8 to %"class.headless::protocol::Value"**
  %10 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %9, align 8
  %11 = icmp eq %"class.headless::protocol::Value"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.headless::protocol::Value"* %10 to i1 (%"class.headless::protocol::Value"*, double*)***
  %14 = load i1 (%"class.headless::protocol::Value"*, double*)**, i1 (%"class.headless::protocol::Value"*, double*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.headless::protocol::Value"*, double*)*, i1 (%"class.headless::protocol::Value"*, double*)** %14, i64 4
  %16 = load i1 (%"class.headless::protocol::Value"*, double*)*, i1 (%"class.headless::protocol::Value"*, double*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.headless::protocol::Value"* nonnull %10, double* %2) #16
  br label %18

18:                                               ; preds = %3, %7, %12
  %19 = phi i1 [ %17, %12 ], [ false, %7 ], [ false, %3 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8headless8protocol15DictionaryValue9getStringERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPS8_(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %5 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %5, i64 5
  %9 = bitcast %"struct.std::__1::__hash_node_base"* %8 to %"class.headless::protocol::Value"**
  %10 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %9, align 8
  %11 = icmp eq %"class.headless::protocol::Value"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.headless::protocol::Value"* %10 to i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)***
  %14 = load i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)**, i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)*, i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)** %14, i64 6
  %16 = load i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)*, i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.headless::protocol::Value"* nonnull %10, %"class.std::__1::basic_string"* %2) #16
  br label %18

18:                                               ; preds = %3, %7, %12
  %19 = phi i1 [ %17, %12 ], [ false, %7 ], [ false, %3 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::protocol::DictionaryValue"* @_ZNK8headless8protocol15DictionaryValue9getObjectERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %4 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %4, i64 5
  %8 = bitcast %"struct.std::__1::__hash_node_base"* %7 to %"class.headless::protocol::Value"**
  %9 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %8, align 8
  %10 = icmp eq %"class.headless::protocol::Value"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.headless::protocol::Value", %"class.headless::protocol::Value"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 6
  %15 = bitcast %"class.headless::protocol::Value"* %9 to %"class.headless::protocol::DictionaryValue"*
  %16 = select i1 %14, %"class.headless::protocol::DictionaryValue"* %15, %"class.headless::protocol::DictionaryValue"* null
  br label %17

17:                                               ; preds = %2, %6, %11
  %18 = phi %"class.headless::protocol::DictionaryValue"* [ %16, %11 ], [ null, %6 ], [ null, %2 ]
  ret %"class.headless::protocol::DictionaryValue"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::protocol::ListValue"* @_ZNK8headless8protocol15DictionaryValue8getArrayERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %4 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %4, i64 5
  %8 = bitcast %"struct.std::__1::__hash_node_base"* %7 to %"class.headless::protocol::Value"**
  %9 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %8, align 8
  %10 = icmp eq %"class.headless::protocol::Value"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.headless::protocol::Value", %"class.headless::protocol::Value"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 7
  %15 = bitcast %"class.headless::protocol::Value"* %9 to %"class.headless::protocol::ListValue"*
  %16 = select i1 %14, %"class.headless::protocol::ListValue"* %15, %"class.headless::protocol::ListValue"* null
  br label %17

17:                                               ; preds = %2, %6, %11
  %18 = phi %"class.headless::protocol::ListValue"* [ %16, %11 ], [ null, %6 ], [ null, %2 ]
  ret %"class.headless::protocol::ListValue"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8headless8protocol15DictionaryValue2atEm(%"struct.std::__1::pair.82"* noalias sret, %"class.headless::protocol::DictionaryValue"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %1, i64 0, i32 3, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 %2
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %17, i64 24, i1 false) #16
  br label %23

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 %2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %20, i64 %22) #16
  br label %23

23:                                               ; preds = %16, %18
  %24 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %1, i64 0, i32 2, i32 0
  %25 = call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %24, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #16
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 5
  %27 = bitcast %"struct.std::__1::__hash_node_base"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %23
  %34 = bitcast %"struct.std::__1::pair.82"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* nonnull align 8 %5, i64 24, i1 false) #16
  %35 = getelementptr inbounds %"struct.std::__1::pair.82", %"struct.std::__1::pair.82"* %0, i64 0, i32 1
  %36 = bitcast %"class.headless::protocol::Value"** %35 to i64*
  store i64 %28, i64* %36, align 8, !alias.scope !3
  br label %47

37:                                               ; preds = %23
  %38 = getelementptr inbounds %"struct.std::__1::pair.82", %"struct.std::__1::pair.82"* %0, i64 0, i32 0
  %39 = load i8*, i8** %6, align 8, !noalias !3
  %40 = load i64, i64* %7, align 8, !noalias !3
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %38, i8* %39, i64 %40) #16
  %41 = load i8, i8* %30, align 1
  %42 = getelementptr inbounds %"struct.std::__1::pair.82", %"struct.std::__1::pair.82"* %0, i64 0, i32 1
  %43 = bitcast %"class.headless::protocol::Value"** %42 to i64*
  store i64 %28, i64* %43, align 8, !alias.scope !3
  %44 = icmp slt i8 %41, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %37
  %46 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %46) #17
  br label %47

47:                                               ; preds = %33, %37, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8headless8protocol15DictionaryValue15booleanPropertyERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = zext i1 %2 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 %5, i8* %4, align 1
  %6 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %7 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %8 = icmp eq %"struct.std::__1::__hash_node_base"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 5
  %11 = bitcast %"struct.std::__1::__hash_node_base"* %10 to %"class.headless::protocol::Value"**
  %12 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %11, align 8
  %13 = icmp eq %"class.headless::protocol::Value"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.headless::protocol::Value"* %12 to i1 (%"class.headless::protocol::Value"*, i8*)***
  %16 = load i1 (%"class.headless::protocol::Value"*, i8*)**, i1 (%"class.headless::protocol::Value"*, i8*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.headless::protocol::Value"*, i8*)*, i1 (%"class.headless::protocol::Value"*, i8*)** %16, i64 3
  %18 = load i1 (%"class.headless::protocol::Value"*, i8*)*, i1 (%"class.headless::protocol::Value"*, i8*)** %17, align 8
  %19 = call zeroext i1 %18(%"class.headless::protocol::Value"* nonnull %12, i8* nonnull %4) #16
  %20 = load i8, i8* %4, align 1, !range !2
  br label %21

21:                                               ; preds = %3, %9, %14
  %22 = phi i8 [ %5, %3 ], [ %5, %9 ], [ %20, %14 ]
  %23 = icmp ne i8 %22, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8headless8protocol15DictionaryValue15integerPropertyERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEi(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #16
  store i32 %2, i32* %4, align 4
  %6 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %7 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %8 = icmp eq %"struct.std::__1::__hash_node_base"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 5
  %11 = bitcast %"struct.std::__1::__hash_node_base"* %10 to %"class.headless::protocol::Value"**
  %12 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %11, align 8
  %13 = icmp eq %"class.headless::protocol::Value"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.headless::protocol::Value"* %12 to i1 (%"class.headless::protocol::Value"*, i32*)***
  %16 = load i1 (%"class.headless::protocol::Value"*, i32*)**, i1 (%"class.headless::protocol::Value"*, i32*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.headless::protocol::Value"*, i32*)*, i1 (%"class.headless::protocol::Value"*, i32*)** %16, i64 5
  %18 = load i1 (%"class.headless::protocol::Value"*, i32*)*, i1 (%"class.headless::protocol::Value"*, i32*)** %17, align 8
  %19 = call zeroext i1 %18(%"class.headless::protocol::Value"* nonnull %12, i32* nonnull %4) #16
  %20 = load i32, i32* %4, align 4
  br label %21

21:                                               ; preds = %3, %9, %14
  %22 = phi i32 [ %2, %3 ], [ %2, %9 ], [ %20, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #16
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK8headless8protocol15DictionaryValue14doublePropertyERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEd(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), double) local_unnamed_addr #0 align 2 {
  %4 = alloca double, align 8
  %5 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  store double %2, double* %4, align 8
  %6 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %7 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %8 = icmp eq %"struct.std::__1::__hash_node_base"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 5
  %11 = bitcast %"struct.std::__1::__hash_node_base"* %10 to %"class.headless::protocol::Value"**
  %12 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %11, align 8
  %13 = icmp eq %"class.headless::protocol::Value"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.headless::protocol::Value"* %12 to i1 (%"class.headless::protocol::Value"*, double*)***
  %16 = load i1 (%"class.headless::protocol::Value"*, double*)**, i1 (%"class.headless::protocol::Value"*, double*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.headless::protocol::Value"*, double*)*, i1 (%"class.headless::protocol::Value"*, double*)** %16, i64 4
  %18 = load i1 (%"class.headless::protocol::Value"*, double*)*, i1 (%"class.headless::protocol::Value"*, double*)** %17, align 8
  %19 = call zeroext i1 %18(%"class.headless::protocol::Value"* nonnull %12, double* nonnull %4) #16
  %20 = load double, double* %4, align 8
  br label %21

21:                                               ; preds = %3, %9, %14
  %22 = phi double [ %2, %3 ], [ %2, %9 ], [ %20, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  ret double %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15DictionaryValue6removeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.117", align 8
  %4 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %5 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %37, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::unique_ptr.117"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEE(%"class.std::__1::unique_ptr.117"* nonnull sret %3, %"class.std::__1::__hash_table"* %4, %"struct.std::__1::__hash_node_base"* nonnull %5) #16
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %9, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %9, align 8
  %11 = icmp eq %"struct.std::__1::__hash_node"* %10, null
  br i1 %11, label %36, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %34, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %10, i64 0, i32 2, i32 0
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %10, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %18, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %18, align 8
  %20 = icmp eq %"class.headless::protocol::Value"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.headless::protocol::Value"* %19 to void (%"class.headless::protocol::Value"*)***
  %23 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %23, i64 2
  %25 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %24, align 8
  call void %25(%"class.headless::protocol::Value"* nonnull %19) #16
  br label %26

26:                                               ; preds = %21, %16
  %27 = bitcast %"struct.std::__1::pair"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #17
  br label %34

34:                                               ; preds = %31, %26, %12
  %35 = bitcast %"struct.std::__1::__hash_node"* %10 to i8*
  call void @_ZdlPv(i8* %35) #17
  br label %36

36:                                               ; preds = %7, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8)
  br label %37

37:                                               ; preds = %2, %36
  %38 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 0
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8
  %40 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 1
  %41 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %40, align 8
  %42 = call %"class.std::__1::basic_string"* @_ZNSt3__16removeINS_11__wrap_iterIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEES7_EET_SA_SA_RKT0_(%"class.std::__1::basic_string"* %39, %"class.std::__1::basic_string"* %41, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %40, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %42, %43
  br i1 %44, label %58, label %45

45:                                               ; preds = %37, %55
  %46 = phi %"class.std::__1::basic_string"* [ %47, %55 ], [ %43, %37 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #17
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string"* %47, %42
  br i1 %56, label %57, label %45

57:                                               ; preds = %55
  store %"class.std::__1::basic_string"* %42, %"class.std::__1::basic_string"** %40, align 8
  br label %58

58:                                               ; preds = %37, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_string"* @_ZNSt3__16removeINS_11__wrap_iterIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEES7_EET_SA_SA_RKT0_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %62, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %17 = select i1 %9, i8* %15, i8* %16
  %18 = icmp eq i64 %13, 0
  br label %19

19:                                               ; preds = %57, %5
  %20 = phi %"class.std::__1::basic_string"* [ %0, %5 ], [ %58, %57 ]
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i64 %26, i64 %27
  %29 = icmp eq i64 %28, %13
  br i1 %29, label %30, label %57

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %34 = select i1 %24, i8* %32, i8* %33
  br i1 %24, label %41, label %35

35:                                               ; preds = %30
  br i1 %18, label %62, label %36

36:                                               ; preds = %35
  %37 = ptrtoint i8* %32 to i64
  %38 = trunc i64 %37 to i8
  %39 = load i8, i8* %17, align 1
  %40 = icmp eq i8 %39, %38
  br i1 %40, label %42, label %57

41:                                               ; preds = %30
  br i1 %18, label %62, label %54

42:                                               ; preds = %36, %49
  %43 = phi i64 [ %46, %49 ], [ %27, %36 ]
  %44 = phi i8* [ %47, %49 ], [ %33, %36 ]
  %45 = phi i8* [ %50, %49 ], [ %17, %36 ]
  %46 = add i64 %43, -1
  %47 = getelementptr inbounds i8, i8* %44, i64 1
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %62, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds i8, i8* %45, i64 1
  %51 = load i8, i8* %47, align 1
  %52 = load i8, i8* %50, align 1
  %53 = icmp eq i8 %51, %52
  br i1 %53, label %42, label %57

54:                                               ; preds = %41
  %55 = tail call i32 @bcmp(i8* %34, i8* %17, i64 %13) #16
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %49, %36, %54, %19
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %59 = icmp eq %"class.std::__1::basic_string"* %58, %1
  br i1 %59, label %60, label %19

60:                                               ; preds = %57
  %61 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %141

62:                                               ; preds = %35, %41, %54, %42, %3
  %63 = phi %"class.std::__1::basic_string"* [ %0, %3 ], [ %20, %42 ], [ %20, %54 ], [ %20, %41 ], [ %20, %35 ]
  %64 = ptrtoint %"class.std::__1::basic_string"* %63 to i64
  %65 = icmp eq %"class.std::__1::basic_string"* %63, %1
  br i1 %65, label %141, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 1
  %68 = icmp eq %"class.std::__1::basic_string"* %67, %1
  br i1 %68, label %141, label %69

69:                                               ; preds = %66
  %70 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %75

75:                                               ; preds = %69, %137
  %76 = phi %"class.std::__1::basic_string"* [ %67, %69 ], [ %139, %137 ]
  %77 = phi %"class.std::__1::basic_string"* [ %63, %69 ], [ %76, %137 ]
  %78 = phi i64 [ %64, %69 ], [ %138, %137 ]
  %79 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = zext i8 %81 to i64
  %86 = select i1 %82, i64 %84, i64 %85
  %87 = load i8, i8* %71, align 1
  %88 = icmp slt i8 %87, 0
  %89 = load i64, i64* %72, align 8
  %90 = zext i8 %87 to i64
  %91 = select i1 %88, i64 %89, i64 %90
  %92 = icmp eq i64 %86, %91
  br i1 %92, label %93, label %123

93:                                               ; preds = %75
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %97 = select i1 %82, i8* %95, i8* %96
  %98 = load i8*, i8** %73, align 8
  %99 = select i1 %88, i8* %98, i8* %74
  %100 = icmp eq i64 %86, 0
  br i1 %82, label %107, label %101

101:                                              ; preds = %93
  br i1 %100, label %137, label %102

102:                                              ; preds = %101
  %103 = ptrtoint i8* %95 to i64
  %104 = trunc i64 %103 to i8
  %105 = load i8, i8* %99, align 1
  %106 = icmp eq i8 %105, %104
  br i1 %106, label %108, label %123

107:                                              ; preds = %93
  br i1 %100, label %137, label %120

108:                                              ; preds = %102, %115
  %109 = phi i64 [ %112, %115 ], [ %85, %102 ]
  %110 = phi i8* [ %113, %115 ], [ %96, %102 ]
  %111 = phi i8* [ %116, %115 ], [ %99, %102 ]
  %112 = add i64 %109, -1
  %113 = getelementptr inbounds i8, i8* %110, i64 1
  %114 = icmp eq i64 %112, 0
  br i1 %114, label %137, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds i8, i8* %111, i64 1
  %117 = load i8, i8* %113, align 1
  %118 = load i8, i8* %116, align 1
  %119 = icmp eq i8 %117, %118
  br i1 %119, label %108, label %123

120:                                              ; preds = %107
  %121 = tail call i32 @bcmp(i8* %97, i8* %99, i64 %86) #16
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %137, label %123

123:                                              ; preds = %115, %102, %75, %120
  %124 = inttoptr i64 %78 to %"class.std::__1::basic_string"*
  %125 = inttoptr i64 %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  tail call void @_ZdlPv(i8* %131) #17
  br label %132

132:                                              ; preds = %123, %129
  %133 = inttoptr i64 %78 to i8*
  %134 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %134, i64 24, i1 false) #16
  store i8 0, i8* %80, align 1
  store i8 0, i8* %134, align 1
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %124, i64 1
  %136 = ptrtoint %"class.std::__1::basic_string"* %135 to i64
  br label %137

137:                                              ; preds = %108, %101, %107, %132, %120
  %138 = phi i64 [ %78, %120 ], [ %136, %132 ], [ %78, %107 ], [ %78, %101 ], [ %78, %108 ]
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 1
  %140 = icmp eq %"class.std::__1::basic_string"* %139, %1
  br i1 %140, label %141, label %75

141:                                              ; preds = %137, %66, %62, %60
  %142 = phi i64 [ %64, %62 ], [ %61, %60 ], [ %64, %66 ], [ %138, %137 ]
  %143 = inttoptr i64 %142 to %"class.std::__1::basic_string"*
  ret %"class.std::__1::basic_string"* %143
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8headless8protocol15DictionaryValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::vector.44"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.crdtp::cbor::EnvelopeEncoder", align 8
  %4 = bitcast %"class.crdtp::cbor::EnvelopeEncoder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.crdtp::cbor::EnvelopeEncoder", %"class.crdtp::cbor::EnvelopeEncoder"* %3, i64 0, i32 0
  store i64 0, i64* %5, align 8
  call void @_ZN5crdtp4cbor15EnvelopeEncoder11EncodeStartEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.crdtp::cbor::EnvelopeEncoder"* nonnull %3, %"class.std::__1::vector.44"* %1) #16
  %6 = call zeroext i8 @_ZN5crdtp4cbor30EncodeIndefiniteLengthMapStartEv() #16
  %7 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %8, %10
  %12 = ptrtoint i8* %10 to i64
  br i1 %11, label %13, label %17

13:                                               ; preds = %2
  store i8 %6, i8* %8, align 1
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast i8** %7 to i64*
  store i64 %15, i64* %16, align 8
  br label %62

17:                                               ; preds = %2
  %18 = ptrtoint i8* %8 to i64
  %19 = bitcast i8** %7 to i64*
  %20 = bitcast %"class.std::__1::vector.44"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = add i64 %22, 1
  %24 = icmp slt i64 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  %26 = bitcast %"class.std::__1::vector.44"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #18
  unreachable

27:                                               ; preds = %17
  %28 = bitcast i8** %9 to i64*
  %29 = sub i64 %12, %21
  %30 = icmp ult i64 %29, 4611686018427387903
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  %32 = shl i64 %29, 1
  %33 = icmp ult i64 %32, %23
  %34 = select i1 %33, i64 %23, i64 %32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31, %27
  %37 = phi i64 [ %34, %31 ], [ 9223372036854775807, %27 ]
  %38 = call i8* @_Znwm(i64 %37) #17
  br label %39

39:                                               ; preds = %36, %31
  %40 = phi i64 [ %37, %36 ], [ 0, %31 ]
  %41 = phi i8* [ %38, %36 ], [ null, %31 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %22
  %43 = getelementptr inbounds i8, i8* %41, i64 %40
  %44 = ptrtoint i8* %43 to i64
  store i8 %6, i8* %42, align 1
  %45 = getelementptr inbounds i8, i8* %42, i64 1
  %46 = ptrtoint i8* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = load i64, i64* %19, align 8
  %50 = ptrtoint i8* %48 to i64
  %51 = sub i64 %49, %50
  %52 = sub i64 0, %51
  %53 = getelementptr inbounds i8, i8* %42, i64 %52
  %54 = ptrtoint i8* %53 to i64
  %55 = icmp sgt i64 %51, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %39
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %48, i64 %51, i1 false) #16
  %57 = load i8*, i8** %47, align 8
  br label %58

58:                                               ; preds = %56, %39
  %59 = phi i8* [ %48, %39 ], [ %57, %56 ]
  store i64 %54, i64* %20, align 8
  store i64 %46, i64* %19, align 8
  store i64 %44, i64* %28, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  call void @_ZdlPv(i8* nonnull %59) #17
  br label %62

62:                                               ; preds = %13, %58, %61
  %63 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3
  %64 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 1
  %65 = bitcast %"class.std::__1::basic_string"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector.18"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %66, %68
  br i1 %69, label %72, label %70

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  br label %129

72:                                               ; preds = %152, %62
  %73 = call zeroext i8 @_ZN5crdtp4cbor10EncodeStopEv() #16
  %74 = load i8*, i8** %7, align 8
  %75 = load i8*, i8** %9, align 8
  %76 = icmp ult i8* %74, %75
  %77 = ptrtoint i8* %75 to i64
  br i1 %76, label %78, label %82

78:                                               ; preds = %72
  store i8 %73, i8* %74, align 1
  %79 = getelementptr inbounds i8, i8* %74, i64 1
  %80 = ptrtoint i8* %79 to i64
  %81 = bitcast i8** %7 to i64*
  store i64 %80, i64* %81, align 8
  br label %127

82:                                               ; preds = %72
  %83 = ptrtoint i8* %74 to i64
  %84 = bitcast i8** %7 to i64*
  %85 = bitcast %"class.std::__1::vector.44"* %1 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %83, %86
  %88 = add i64 %87, 1
  %89 = icmp slt i64 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %82
  %91 = bitcast %"class.std::__1::vector.44"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %91) #18
  unreachable

92:                                               ; preds = %82
  %93 = bitcast i8** %9 to i64*
  %94 = sub i64 %77, %86
  %95 = icmp ult i64 %94, 4611686018427387903
  br i1 %95, label %96, label %101

96:                                               ; preds = %92
  %97 = shl i64 %94, 1
  %98 = icmp ult i64 %97, %88
  %99 = select i1 %98, i64 %88, i64 %97
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %96, %92
  %102 = phi i64 [ %99, %96 ], [ 9223372036854775807, %92 ]
  %103 = call i8* @_Znwm(i64 %102) #17
  br label %104

104:                                              ; preds = %101, %96
  %105 = phi i64 [ %102, %101 ], [ 0, %96 ]
  %106 = phi i8* [ %103, %101 ], [ null, %96 ]
  %107 = getelementptr inbounds i8, i8* %106, i64 %87
  %108 = getelementptr inbounds i8, i8* %106, i64 %105
  %109 = ptrtoint i8* %108 to i64
  store i8 %73, i8* %107, align 1
  %110 = getelementptr inbounds i8, i8* %107, i64 1
  %111 = ptrtoint i8* %110 to i64
  %112 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = load i64, i64* %84, align 8
  %115 = ptrtoint i8* %113 to i64
  %116 = sub i64 %114, %115
  %117 = sub i64 0, %116
  %118 = getelementptr inbounds i8, i8* %107, i64 %117
  %119 = ptrtoint i8* %118 to i64
  %120 = icmp sgt i64 %116, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %118, i8* align 1 %113, i64 %116, i1 false) #16
  %122 = load i8*, i8** %112, align 8
  br label %123

123:                                              ; preds = %121, %104
  %124 = phi i8* [ %113, %104 ], [ %122, %121 ]
  store i64 %119, i64* %85, align 8
  store i64 %111, i64* %84, align 8
  store i64 %109, i64* %93, align 8
  %125 = icmp eq i8* %124, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %123
  call void @_ZdlPv(i8* nonnull %124) #17
  br label %127

127:                                              ; preds = %78, %123, %126
  %128 = call zeroext i1 @_ZN5crdtp4cbor15EnvelopeEncoder10EncodeStopEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.crdtp::cbor::EnvelopeEncoder"* nonnull %3, %"class.std::__1::vector.44"* %1) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  ret void

129:                                              ; preds = %70, %152
  %130 = phi i64 [ %68, %70 ], [ %161, %152 ]
  %131 = phi i64 [ 0, %70 ], [ %159, %152 ]
  %132 = inttoptr i64 %130 to %"class.std::__1::basic_string"*
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %132, i64 %131
  %134 = call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %71, %"class.std::__1::basic_string"* dereferenceable(24) %133) #16
  %135 = bitcast %"class.std::__1::basic_string"* %133 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %132, i64 %131, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = zext i8 %137 to i64
  %142 = select i1 %138, i64 %140, i64 %141
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %129
  call void @_ZN5crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* null, i64 0, %"class.std::__1::vector.44"* %1) #16
  br label %152

145:                                              ; preds = %129
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = bitcast %"class.std::__1::basic_string"* %133 to i8*
  %149 = select i1 %138, i8* %147, i8* %148
  %150 = icmp eq i8* %149, null
  br i1 %150, label %152, label %151

151:                                              ; preds = %145
  call void @_ZN5crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* nonnull %149, i64 %142, %"class.std::__1::vector.44"* %1) #16
  br label %152

152:                                              ; preds = %144, %145, %151
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %134, i64 5
  %154 = bitcast %"struct.std::__1::__hash_node_base"* %153 to %"class.headless::protocol::Value"**
  %155 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %154, align 8
  %156 = bitcast %"class.headless::protocol::Value"* %155 to void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)***
  %157 = load void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)**, void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)*** %156, align 8
  %158 = load void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)*, void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)** %157, align 8
  call void %158(%"class.headless::protocol::Value"* %155, %"class.std::__1::vector.44"* %1) #16
  %159 = add nuw i64 %131, 1
  %160 = load i64, i64* %65, align 8
  %161 = load i64, i64* %67, align 8
  %162 = sub i64 %160, %161
  %163 = sdiv exact i64 %162, 24
  %164 = icmp ult i64 %159, %163
  br i1 %164, label %129, label %72
}

declare void @_ZN5crdtp4cbor15EnvelopeEncoder11EncodeStartEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.crdtp::cbor::EnvelopeEncoder"*, %"class.std::__1::vector.44"*) local_unnamed_addr #2

declare zeroext i8 @_ZN5crdtp4cbor30EncodeIndefiniteLengthMapStartEv() local_unnamed_addr #2

declare zeroext i8 @_ZN5crdtp4cbor10EncodeStopEv() local_unnamed_addr #2

declare zeroext i1 @_ZN5crdtp4cbor15EnvelopeEncoder10EncodeStopEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.crdtp::cbor::EnvelopeEncoder"*, %"class.std::__1::vector.44"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::protocol::Value"* @_ZNK8headless8protocol15DictionaryValue5cloneEv(%"class.headless::protocol::DictionaryValue"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = tail call i8* @_Znwm(i64 80) #17
  %5 = bitcast i8* %4 to %"class.headless::protocol::DictionaryValue"*
  %6 = bitcast i8* %4 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 6, i32* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol15DictionaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  %10 = getelementptr inbounds i8, i8* %4, i64 48
  %11 = bitcast i8* %10 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %4, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #16
  %13 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = bitcast %"class.std::__1::basic_string"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.18"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %29, label %20

20:                                               ; preds = %1
  %21 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0
  %24 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %31

29:                                               ; preds = %69, %1
  %30 = bitcast i8* %4 to %"class.headless::protocol::Value"*
  ret %"class.headless::protocol::Value"* %30

31:                                               ; preds = %20, %69
  %32 = phi i64 [ %18, %20 ], [ %72, %69 ]
  %33 = phi i64 [ 0, %20 ], [ %70, %69 ]
  %34 = inttoptr i64 %32 to %"class.std::__1::basic_string"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #16
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %33
  %36 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %31
  %41 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %41, i64 24, i1 false) #16
  br label %47

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %33, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %44, i64 %46) #16
  br label %47

47:                                               ; preds = %40, %42
  %48 = call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"* %23, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #16
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 5
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to %"class.headless::protocol::Value"**
  %51 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %50, align 8
  %52 = bitcast %"class.headless::protocol::Value"* %51 to %"class.headless::protocol::Value"* (%"class.headless::protocol::Value"*)***
  %53 = load %"class.headless::protocol::Value"* (%"class.headless::protocol::Value"*)**, %"class.headless::protocol::Value"* (%"class.headless::protocol::Value"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.headless::protocol::Value"* (%"class.headless::protocol::Value"*)*, %"class.headless::protocol::Value"* (%"class.headless::protocol::Value"*)** %53, i64 8
  %55 = load %"class.headless::protocol::Value"* (%"class.headless::protocol::Value"*)*, %"class.headless::protocol::Value"* (%"class.headless::protocol::Value"*)** %54, align 8
  %56 = call %"class.headless::protocol::Value"* %55(%"class.headless::protocol::Value"* %51) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  store %"class.headless::protocol::Value"* %56, %"class.headless::protocol::Value"** %25, align 8
  call void @_ZN8headless8protocol15DictionaryValue3setINS0_5ValueEEEvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERNS4_10unique_ptrIT_NS4_14default_deleteISE_EEEE(%"class.headless::protocol::DictionaryValue"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %2) #16
  %57 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %25, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %25, align 8
  %58 = icmp eq %"class.headless::protocol::Value"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %47
  %60 = bitcast %"class.headless::protocol::Value"* %57 to void (%"class.headless::protocol::Value"*)***
  %61 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %61, i64 2
  %63 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %62, align 8
  call void %63(%"class.headless::protocol::Value"* nonnull %57) #16
  br label %64

64:                                               ; preds = %47, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  %65 = load i8, i8* %27, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %64
  %68 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %68) #17
  br label %69

69:                                               ; preds = %64, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #16
  %70 = add nuw i64 %33, 1
  %71 = load i64, i64* %15, align 8
  %72 = load i64, i64* %17, align 8
  %73 = sub i64 %71, %72
  %74 = sdiv exact i64 %73, 24
  %75 = icmp ult i64 %70, %74
  br i1 %75, label %31, label %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15DictionaryValueC2Ev(%"class.headless::protocol::DictionaryValue"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 0, i32 1
  store i32 6, i32* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol15DictionaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 2, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.15"* %5 to i32*
  %7 = bitcast %"class.std::__1::unordered_map"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %6, align 4
  %8 = getelementptr inbounds %"class.headless::protocol::DictionaryValue", %"class.headless::protocol::DictionaryValue"* %0, i64 0, i32 3
  %9 = bitcast %"class.std::__1::vector.18"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol9ListValueD2Ev(%"class.headless::protocol::ListValue"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol9ListValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %15, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %15, align 8
  %17 = icmp eq %"class.headless::protocol::Value"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.headless::protocol::Value"* %16 to void (%"class.headless::protocol::Value"*)***
  %20 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %20, i64 2
  %22 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %21, align 8
  tail call void %22(%"class.headless::protocol::Value"* nonnull %16) #16
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.31"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #17
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol9ListValueD0Ev(%"class.headless::protocol::ListValue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol9ListValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %15, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %15, align 8
  %17 = icmp eq %"class.headless::protocol::Value"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.headless::protocol::Value"* %16 to void (%"class.headless::protocol::Value"*)***
  %20 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %20, i64 2
  %22 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %21, align 8
  tail call void %22(%"class.headless::protocol::Value"* nonnull %16) #16
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.31"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #17
  br label %30

30:                                               ; preds = %1, %28
  %31 = bitcast %"class.headless::protocol::ListValue"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8headless8protocol9ListValue16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.headless::protocol::ListValue"* nocapture readonly, %"class.std::__1::vector.44"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.crdtp::cbor::EnvelopeEncoder", align 8
  %4 = bitcast %"class.crdtp::cbor::EnvelopeEncoder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.crdtp::cbor::EnvelopeEncoder", %"class.crdtp::cbor::EnvelopeEncoder"* %3, i64 0, i32 0
  store i64 0, i64* %5, align 8
  call void @_ZN5crdtp4cbor15EnvelopeEncoder11EncodeStartEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.crdtp::cbor::EnvelopeEncoder"* nonnull %3, %"class.std::__1::vector.44"* %1) #16
  %6 = call zeroext i8 @_ZN5crdtp4cbor32EncodeIndefiniteLengthArrayStartEv() #16
  %7 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %8, %10
  %12 = ptrtoint i8* %10 to i64
  br i1 %11, label %13, label %17

13:                                               ; preds = %2
  store i8 %6, i8* %8, align 1
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast i8** %7 to i64*
  store i64 %15, i64* %16, align 8
  br label %62

17:                                               ; preds = %2
  %18 = ptrtoint i8* %8 to i64
  %19 = bitcast i8** %7 to i64*
  %20 = bitcast %"class.std::__1::vector.44"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = add i64 %22, 1
  %24 = icmp slt i64 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  %26 = bitcast %"class.std::__1::vector.44"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #18
  unreachable

27:                                               ; preds = %17
  %28 = bitcast i8** %9 to i64*
  %29 = sub i64 %12, %21
  %30 = icmp ult i64 %29, 4611686018427387903
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  %32 = shl i64 %29, 1
  %33 = icmp ult i64 %32, %23
  %34 = select i1 %33, i64 %23, i64 %32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31, %27
  %37 = phi i64 [ %34, %31 ], [ 9223372036854775807, %27 ]
  %38 = call i8* @_Znwm(i64 %37) #17
  br label %39

39:                                               ; preds = %36, %31
  %40 = phi i64 [ %37, %36 ], [ 0, %31 ]
  %41 = phi i8* [ %38, %36 ], [ null, %31 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %22
  %43 = getelementptr inbounds i8, i8* %41, i64 %40
  %44 = ptrtoint i8* %43 to i64
  store i8 %6, i8* %42, align 1
  %45 = getelementptr inbounds i8, i8* %42, i64 1
  %46 = ptrtoint i8* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = load i64, i64* %19, align 8
  %50 = ptrtoint i8* %48 to i64
  %51 = sub i64 %49, %50
  %52 = sub i64 0, %51
  %53 = getelementptr inbounds i8, i8* %42, i64 %52
  %54 = ptrtoint i8* %53 to i64
  %55 = icmp sgt i64 %51, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %39
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %48, i64 %51, i1 false) #16
  %57 = load i8*, i8** %47, align 8
  br label %58

58:                                               ; preds = %56, %39
  %59 = phi i8* [ %48, %39 ], [ %57, %56 ]
  store i64 %54, i64* %20, align 8
  store i64 %46, i64* %19, align 8
  store i64 %44, i64* %28, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  call void @_ZdlPv(i8* nonnull %59) #17
  br label %62

62:                                               ; preds = %13, %58, %61
  %63 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 1
  %64 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 1
  %65 = bitcast %"class.std::__1::unique_ptr"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector.31"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %66, %68
  br i1 %69, label %70, label %127

70:                                               ; preds = %127, %62
  %71 = call zeroext i8 @_ZN5crdtp4cbor10EncodeStopEv() #16
  %72 = load i8*, i8** %7, align 8
  %73 = load i8*, i8** %9, align 8
  %74 = icmp ult i8* %72, %73
  %75 = ptrtoint i8* %73 to i64
  br i1 %74, label %76, label %80

76:                                               ; preds = %70
  store i8 %71, i8* %72, align 1
  %77 = getelementptr inbounds i8, i8* %72, i64 1
  %78 = ptrtoint i8* %77 to i64
  %79 = bitcast i8** %7 to i64*
  store i64 %78, i64* %79, align 8
  br label %125

80:                                               ; preds = %70
  %81 = ptrtoint i8* %72 to i64
  %82 = bitcast i8** %7 to i64*
  %83 = bitcast %"class.std::__1::vector.44"* %1 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %81, %84
  %86 = add i64 %85, 1
  %87 = icmp slt i64 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %80
  %89 = bitcast %"class.std::__1::vector.44"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %89) #18
  unreachable

90:                                               ; preds = %80
  %91 = bitcast i8** %9 to i64*
  %92 = sub i64 %75, %84
  %93 = icmp ult i64 %92, 4611686018427387903
  br i1 %93, label %94, label %99

94:                                               ; preds = %90
  %95 = shl i64 %92, 1
  %96 = icmp ult i64 %95, %86
  %97 = select i1 %96, i64 %86, i64 %95
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %94, %90
  %100 = phi i64 [ %97, %94 ], [ 9223372036854775807, %90 ]
  %101 = call i8* @_Znwm(i64 %100) #17
  br label %102

102:                                              ; preds = %99, %94
  %103 = phi i64 [ %100, %99 ], [ 0, %94 ]
  %104 = phi i8* [ %101, %99 ], [ null, %94 ]
  %105 = getelementptr inbounds i8, i8* %104, i64 %85
  %106 = getelementptr inbounds i8, i8* %104, i64 %103
  %107 = ptrtoint i8* %106 to i64
  store i8 %71, i8* %105, align 1
  %108 = getelementptr inbounds i8, i8* %105, i64 1
  %109 = ptrtoint i8* %108 to i64
  %110 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = load i64, i64* %82, align 8
  %113 = ptrtoint i8* %111 to i64
  %114 = sub i64 %112, %113
  %115 = sub i64 0, %114
  %116 = getelementptr inbounds i8, i8* %105, i64 %115
  %117 = ptrtoint i8* %116 to i64
  %118 = icmp sgt i64 %114, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %111, i64 %114, i1 false) #16
  %120 = load i8*, i8** %110, align 8
  br label %121

121:                                              ; preds = %119, %102
  %122 = phi i8* [ %111, %102 ], [ %120, %119 ]
  store i64 %117, i64* %83, align 8
  store i64 %109, i64* %82, align 8
  store i64 %107, i64* %91, align 8
  %123 = icmp eq i8* %122, null
  br i1 %123, label %125, label %124

124:                                              ; preds = %121
  call void @_ZdlPv(i8* nonnull %122) #17
  br label %125

125:                                              ; preds = %76, %121, %124
  %126 = call zeroext i1 @_ZN5crdtp4cbor15EnvelopeEncoder10EncodeStopEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.crdtp::cbor::EnvelopeEncoder"* nonnull %3, %"class.std::__1::vector.44"* %1) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  ret void

127:                                              ; preds = %62, %127
  %128 = phi i64 [ %138, %127 ], [ %68, %62 ]
  %129 = phi i64 [ %136, %127 ], [ 0, %62 ]
  %130 = inttoptr i64 %128 to %"class.std::__1::unique_ptr"*
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %130, i64 %129, i32 0, i32 0, i32 0
  %132 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %131, align 8
  %133 = bitcast %"class.headless::protocol::Value"* %132 to void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)***
  %134 = load void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)**, void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)*** %133, align 8
  %135 = load void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)*, void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)** %134, align 8
  call void %135(%"class.headless::protocol::Value"* %132, %"class.std::__1::vector.44"* %1) #16
  %136 = add nuw i64 %129, 1
  %137 = load i64, i64* %65, align 8
  %138 = load i64, i64* %67, align 8
  %139 = sub i64 %137, %138
  %140 = ashr exact i64 %139, 3
  %141 = icmp ult i64 %136, %140
  br i1 %141, label %127, label %70
}

declare zeroext i8 @_ZN5crdtp4cbor32EncodeIndefiniteLengthArrayStartEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::protocol::Value"* @_ZNK8headless8protocol9ListValue5cloneEv(%"class.headless::protocol::ListValue"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr", align 8
  %3 = tail call i8* @_Znwm(i64 40) #17
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 7, i32* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol9ListValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #16
  %8 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr"* %9, %11
  br i1 %12, label %22, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds i8, i8* %3, i64 24
  %17 = bitcast i8* %16 to %"class.std::__1::unique_ptr"**
  %18 = getelementptr inbounds i8, i8* %3, i64 32
  %19 = bitcast i8* %18 to %"class.std::__1::unique_ptr"**
  %20 = bitcast i8* %7 to %"class.std::__1::vector.31"*
  %21 = bitcast i8* %16 to i64*
  br label %24

22:                                               ; preds = %50, %1
  %23 = bitcast i8* %3 to %"class.headless::protocol::Value"*
  ret %"class.headless::protocol::Value"* %23

24:                                               ; preds = %13, %50
  %25 = phi %"class.std::__1::unique_ptr"* [ %9, %13 ], [ %51, %50 ]
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %26, align 8
  %28 = bitcast %"class.headless::protocol::Value"* %27 to %"class.headless::protocol::Value"* (%"class.headless::protocol::Value"*)***
  %29 = load %"class.headless::protocol::Value"* (%"class.headless::protocol::Value"*)**, %"class.headless::protocol::Value"* (%"class.headless::protocol::Value"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.headless::protocol::Value"* (%"class.headless::protocol::Value"*)*, %"class.headless::protocol::Value"* (%"class.headless::protocol::Value"*)** %29, i64 8
  %31 = load %"class.headless::protocol::Value"* (%"class.headless::protocol::Value"*)*, %"class.headless::protocol::Value"* (%"class.headless::protocol::Value"*)** %30, align 8
  %32 = call %"class.headless::protocol::Value"* %31(%"class.headless::protocol::Value"* %27) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  store %"class.headless::protocol::Value"* %32, %"class.headless::protocol::Value"** %15, align 8
  %33 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %34 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %19, align 8
  %35 = icmp ult %"class.std::__1::unique_ptr"* %33, %34
  br i1 %35, label %36, label %41

36:                                               ; preds = %24
  %37 = ptrtoint %"class.headless::protocol::Value"* %32 to i64
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %15, align 8
  %38 = bitcast %"class.std::__1::unique_ptr"* %33 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 1
  %40 = ptrtoint %"class.std::__1::unique_ptr"* %39 to i64
  store i64 %40, i64* %21, align 8
  br label %42

41:                                               ; preds = %24
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %20, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %2) #16
  br label %42

42:                                               ; preds = %41, %36
  %43 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %15, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %15, align 8
  %44 = icmp eq %"class.headless::protocol::Value"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.headless::protocol::Value"* %43 to void (%"class.headless::protocol::Value"*)***
  %47 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %47, i64 2
  %49 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %48, align 8
  call void %49(%"class.headless::protocol::Value"* nonnull %43) #16
  br label %50

50:                                               ; preds = %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 1
  %52 = icmp eq %"class.std::__1::unique_ptr"* %51, %11
  br i1 %52, label %22, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.headless::protocol::ListValue"*, %"class.headless::protocol::Value"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::protocol::Value"* %1, %"class.headless::protocol::Value"** %4, align 8
  %5 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp ult %"class.std::__1::unique_ptr"* %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = ptrtoint %"class.headless::protocol::Value"* %1 to i64
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %4, align 8
  %12 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 1
  %14 = ptrtoint %"class.std::__1::unique_ptr"* %13 to i64
  %15 = bitcast %"class.std::__1::unique_ptr"** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %17, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #16
  br label %18

18:                                               ; preds = %10, %16
  %19 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %4, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %4, align 8
  %20 = icmp eq %"class.headless::protocol::Value"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.headless::protocol::Value"* %19 to void (%"class.headless::protocol::Value"*)***
  %23 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %23, i64 2
  %25 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %24, align 8
  call void %25(%"class.headless::protocol::Value"* nonnull %19) #16
  br label %26

26:                                               ; preds = %18, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol9ListValueC2Ev(%"class.headless::protocol::ListValue"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 0, i32 1
  store i32 7, i32* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol9ListValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector.31"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.headless::protocol::Value"* @_ZN8headless8protocol9ListValue2atEm(%"class.headless::protocol::ListValue"* nocapture readonly, i64) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %1, i32 0, i32 0, i32 0
  %6 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %5, align 8
  ret %"class.headless::protocol::Value"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::protocol::Object"* @_ZN8headless8protocol6Object9fromValueEPNS0_5ValueEPN5crdtp12ErrorSupportE(%"class.headless::protocol::Value"*, %"class.crdtp::ErrorSupport"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.headless::protocol::Value"* %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.headless::protocol::Value", %"class.headless::protocol::Value"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 6
  br i1 %7, label %9, label %8

8:                                                ; preds = %4, %2
  tail call void @_ZN5crdtp12ErrorSupport8AddErrorEPKc(%"class.crdtp::ErrorSupport"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #16
  br label %22

9:                                                ; preds = %4
  %10 = bitcast %"class.headless::protocol::Value"* %0 to %"class.headless::protocol::DictionaryValue"*
  %11 = bitcast %"class.headless::protocol::Value"* %0 to %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)***
  %12 = load %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)**, %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)*, %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)** %12, i64 8
  %14 = load %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)*, %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)** %13, align 8
  %15 = tail call %"class.headless::protocol::Value"* %14(%"class.headless::protocol::DictionaryValue"* nonnull %10) #16
  %16 = tail call i8* @_Znwm(i64 16) #17
  %17 = ptrtoint %"class.headless::protocol::Value"* %15 to i64
  %18 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6ObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %16, i64 8
  %20 = bitcast i8* %19 to i64*
  store i64 %17, i64* %20, align 8
  %21 = bitcast i8* %16 to %"class.headless::protocol::Object"*
  br label %22

22:                                               ; preds = %9, %8
  %23 = phi %"class.headless::protocol::Object"* [ null, %8 ], [ %21, %9 ]
  ret %"class.headless::protocol::Object"* %23
}

declare void @_ZN5crdtp12ErrorSupport8AddErrorEPKc(%"class.crdtp::ErrorSupport"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8headless8protocol6Object16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.headless::protocol::Object"* nocapture readonly, %"class.std::__1::vector.44"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::Object", %"class.headless::protocol::Object"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.headless::protocol::DictionaryValue"*, %"class.headless::protocol::DictionaryValue"** %3, align 8
  %5 = bitcast %"class.headless::protocol::DictionaryValue"* %4 to void (%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::vector.44"*)***
  %6 = load void (%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::vector.44"*)**, void (%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::vector.44"*)*** %5, align 8
  %7 = load void (%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::vector.44"*)*, void (%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::vector.44"*)** %6, align 8
  tail call void %7(%"class.headless::protocol::DictionaryValue"* %4, %"class.std::__1::vector.44"* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::protocol::DictionaryValue"* @_ZNK8headless8protocol6Object7toValueEv(%"class.headless::protocol::Object"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::Object", %"class.headless::protocol::Object"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.headless::protocol::DictionaryValue"*, %"class.headless::protocol::DictionaryValue"** %2, align 8
  %4 = bitcast %"class.headless::protocol::DictionaryValue"* %3 to %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)***
  %5 = load %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)**, %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)*, %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)** %5, i64 8
  %7 = load %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)*, %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)** %6, align 8
  %8 = tail call %"class.headless::protocol::Value"* %7(%"class.headless::protocol::DictionaryValue"* %3) #16
  %9 = icmp eq %"class.headless::protocol::Value"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.headless::protocol::Value", %"class.headless::protocol::Value"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 6
  %14 = bitcast %"class.headless::protocol::Value"* %8 to %"class.headless::protocol::DictionaryValue"*
  %15 = select i1 %13, %"class.headless::protocol::DictionaryValue"* %14, %"class.headless::protocol::DictionaryValue"* null
  br label %16

16:                                               ; preds = %1, %10
  %17 = phi %"class.headless::protocol::DictionaryValue"* [ %15, %10 ], [ null, %1 ]
  ret %"class.headless::protocol::DictionaryValue"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::protocol::Object"* @_ZNK8headless8protocol6Object5cloneEv(%"class.headless::protocol::Object"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #17
  %3 = bitcast i8* %2 to %"class.headless::protocol::Object"*
  %4 = getelementptr inbounds %"class.headless::protocol::Object", %"class.headless::protocol::Object"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.headless::protocol::DictionaryValue"*, %"class.headless::protocol::DictionaryValue"** %4, align 8
  %6 = bitcast %"class.headless::protocol::DictionaryValue"* %5 to %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)***
  %7 = load %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)**, %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)*, %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)** %7, i64 8
  %9 = load %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)*, %"class.headless::protocol::Value"* (%"class.headless::protocol::DictionaryValue"*)** %8, align 8
  %10 = tail call %"class.headless::protocol::Value"* %9(%"class.headless::protocol::DictionaryValue"* %5) #16
  %11 = icmp eq %"class.headless::protocol::Value"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.headless::protocol::Value", %"class.headless::protocol::Value"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 6
  %16 = ptrtoint %"class.headless::protocol::Value"* %10 to i64
  %17 = select i1 %15, i64 %16, i64 0
  br label %18

18:                                               ; preds = %1, %12
  %19 = phi i64 [ %17, %12 ], [ 0, %1 ]
  %20 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6ObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %2, i64 8
  %22 = bitcast i8* %21 to i64*
  store i64 %19, i64* %22, align 8
  ret %"class.headless::protocol::Object"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol6ObjectC2ENSt3__110unique_ptrINS0_15DictionaryValueENS2_14default_deleteIS4_EEEE(%"class.headless::protocol::Object"* nocapture, %"class.headless::protocol::DictionaryValue"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.headless::protocol::DictionaryValue"* %1 to i64
  %4 = getelementptr inbounds %"class.headless::protocol::Object", %"class.headless::protocol::Object"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6ObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.headless::protocol::Object", %"class.headless::protocol::Object"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.70"* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol6ObjectD2Ev(%"class.headless::protocol::Object"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::Object", %"class.headless::protocol::Object"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6ObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::protocol::Object", %"class.headless::protocol::Object"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.headless::protocol::DictionaryValue"*, %"class.headless::protocol::DictionaryValue"** %3, align 8
  store %"class.headless::protocol::DictionaryValue"* null, %"class.headless::protocol::DictionaryValue"** %3, align 8
  %5 = icmp eq %"class.headless::protocol::DictionaryValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.headless::protocol::DictionaryValue"* %4 to void (%"class.headless::protocol::DictionaryValue"*)***
  %8 = load void (%"class.headless::protocol::DictionaryValue"*)**, void (%"class.headless::protocol::DictionaryValue"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.headless::protocol::DictionaryValue"*)*, void (%"class.headless::protocol::DictionaryValue"*)** %8, i64 2
  %10 = load void (%"class.headless::protocol::DictionaryValue"*)*, void (%"class.headless::protocol::DictionaryValue"*)** %9, align 8
  tail call void %10(%"class.headless::protocol::DictionaryValue"* nonnull %4) #16
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol6ObjectD0Ev(%"class.headless::protocol::Object"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::Object", %"class.headless::protocol::Object"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6ObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::protocol::Object", %"class.headless::protocol::Object"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.headless::protocol::DictionaryValue"*, %"class.headless::protocol::DictionaryValue"** %3, align 8
  store %"class.headless::protocol::DictionaryValue"* null, %"class.headless::protocol::DictionaryValue"** %3, align 8
  %5 = icmp eq %"class.headless::protocol::DictionaryValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.headless::protocol::DictionaryValue"* %4 to void (%"class.headless::protocol::DictionaryValue"*)***
  %8 = load void (%"class.headless::protocol::DictionaryValue"*)**, void (%"class.headless::protocol::DictionaryValue"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.headless::protocol::DictionaryValue"*)*, void (%"class.headless::protocol::DictionaryValue"*)** %8, i64 2
  %10 = load void (%"class.headless::protocol::DictionaryValue"*)*, void (%"class.headless::protocol::DictionaryValue"*)** %9, align 8
  tail call void %10(%"class.headless::protocol::DictionaryValue"* nonnull %4) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.headless::protocol::Object"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN8headless8protocol5ValueENS1_14default_deleteIS5_EEEEvE11DeserializeEPNS_17DeserializerStateEPS8_(%"class.crdtp::DeserializerState"*, %"class.std::__1::unique_ptr"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %0, i64 0, i32 1
  %7 = tail call i32 @_ZNK5crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.crdtp::cbor::CBORTokenizer"* %6) #16
  switch i32 %7, label %171 [
    i32 1, label %8
    i32 2, label %15
    i32 3, label %22
    i32 4, label %28
    i32 5, label %37
    i32 6, label %46
    i32 7, label %94
    i32 12, label %125
  ]

8:                                                ; preds = %2
  %9 = tail call i8* @_Znwm(i64 24) #17
  %10 = bitcast i8* %9 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  store i8 1, i8* %13, align 8
  %14 = ptrtoint i8* %9 to i64
  br label %174

15:                                               ; preds = %2
  %16 = tail call i8* @_Znwm(i64 24) #17
  %17 = bitcast i8* %16 to i32 (...)***
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 1, i32* %19, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %20 = getelementptr inbounds i8, i8* %16, i64 16
  store i8 0, i8* %20, align 8
  %21 = ptrtoint i8* %16 to i64
  br label %174

22:                                               ; preds = %2
  %23 = tail call i8* @_Znwm(i64 16) #17
  %24 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol5ValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 8
  %27 = ptrtoint i8* %23 to i64
  br label %174

28:                                               ; preds = %2
  %29 = tail call i32 @_ZNK5crdtp4cbor13CBORTokenizer8GetInt32Ev(%"class.crdtp::cbor::CBORTokenizer"* %6) #16
  %30 = tail call i8* @_Znwm(i64 24) #17
  %31 = bitcast i8* %30 to i32 (...)***
  %32 = getelementptr inbounds i8, i8* %30, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 2, i32* %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 16
  %35 = bitcast i8* %34 to i32*
  store i32 %29, i32* %35, align 8
  %36 = ptrtoint i8* %30 to i64
  br label %174

37:                                               ; preds = %2
  %38 = tail call double @_ZNK5crdtp4cbor13CBORTokenizer9GetDoubleEv(%"class.crdtp::cbor::CBORTokenizer"* %6) #16
  %39 = tail call i8* @_Znwm(i64 24) #17
  %40 = bitcast i8* %39 to i32 (...)***
  %41 = getelementptr inbounds i8, i8* %39, i64 8
  %42 = bitcast i8* %41 to i32*
  store i32 3, i32* %42, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %43 = getelementptr inbounds i8, i8* %39, i64 16
  %44 = bitcast i8* %43 to double*
  store double %38, double* %44, align 8
  %45 = ptrtoint i8* %39 to i64
  br label %174

46:                                               ; preds = %2
  %47 = tail call { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer10GetString8Ev(%"class.crdtp::cbor::CBORTokenizer"* %6) #16
  %48 = extractvalue { i8*, i64 } %47, 0
  %49 = extractvalue { i8*, i64 } %47, 1
  %50 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #16
  %51 = icmp ugt i64 %49, -17
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %53) #18
  unreachable

54:                                               ; preds = %46
  %55 = icmp ult i64 %49, 23
  br i1 %55, label %65, label %56

56:                                               ; preds = %54
  %57 = add nuw i64 %49, 16
  %58 = and i64 %57, -16
  %59 = tail call i8* @_Znwm(i64 %58) #17
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %59, i8** %60, align 8, !alias.scope !6
  %61 = or i64 %58, -9223372036854775808
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %61, i64* %62, align 8, !alias.scope !6
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %49, i64* %63, align 8, !alias.scope !6
  %64 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %70

65:                                               ; preds = %54
  %66 = trunc i64 %49 to i8
  %67 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  store i8 %66, i8* %68, align 1, !alias.scope !6
  %69 = icmp eq i64 %49, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %65, %56
  %71 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %67, %65 ], [ %64, %56 ]
  %72 = phi i8* [ %50, %65 ], [ %59, %56 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %72, i8* align 1 %48, i64 %49, i1 false) #16
  br label %73

73:                                               ; preds = %70, %65
  %74 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %67, %65 ], [ %71, %70 ]
  %75 = phi i8* [ %50, %65 ], [ %72, %70 ]
  %76 = getelementptr inbounds i8, i8* %75, i64 %49
  store i8 0, i8* %76, align 1
  %77 = tail call i8* @_Znwm(i64 40) #17
  %78 = bitcast i8* %77 to i32 (...)***
  %79 = getelementptr inbounds i8, i8* %77, i64 8
  %80 = bitcast i8* %79 to i32*
  store i32 4, i32* %80, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8
  %81 = getelementptr inbounds i8, i8* %77, i64 16
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %86, label %85

85:                                               ; preds = %73
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* nonnull align 8 %50, i64 24, i1 false) #16
  br label %92

86:                                               ; preds = %73
  %87 = bitcast i8* %81 to %"class.std::__1::basic_string"*
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %87, i8* %89, i64 %91) #16
  tail call void @_ZdlPv(i8* %89) #17
  br label %92

92:                                               ; preds = %86, %85
  %93 = ptrtoint i8* %77 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #16
  br label %174

94:                                               ; preds = %2
  %95 = tail call { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer18GetString16WireRepEv(%"class.crdtp::cbor::CBORTokenizer"* %6) #16
  %96 = extractvalue { i8*, i64 } %95, 0
  %97 = extractvalue { i8*, i64 } %95, 1
  %98 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #16
  %99 = bitcast i8* %96 to i16*
  %100 = lshr i64 %97, 1
  call void @_ZN8headless8protocol10StringUtil11fromUTF16LEEPKtm(%"class.std::__1::basic_string"* nonnull sret %5, i16* %99, i64 %100) #16
  %101 = call i8* @_Znwm(i64 40) #17
  %102 = bitcast i8* %101 to i32 (...)***
  %103 = getelementptr inbounds i8, i8* %101, i64 8
  %104 = bitcast i8* %103 to i32*
  store i32 4, i32* %104, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %105 = getelementptr inbounds i8, i8* %101, i64 16
  %106 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %94
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* nonnull align 8 %98, i64 24, i1 false) #16
  %111 = ptrtoint i8* %101 to i64
  br label %123

112:                                              ; preds = %94
  %113 = bitcast i8* %105 to %"class.std::__1::basic_string"*
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %117 = load i64, i64* %116, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %113, i8* %115, i64 %117) #16
  %118 = load i8, i8* %107, align 1
  %119 = ptrtoint i8* %101 to i64
  %120 = icmp slt i8 %118, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %112
  %122 = load i8*, i8** %114, align 8
  call void @_ZdlPv(i8* %122) #17
  br label %123

123:                                              ; preds = %121, %112, %110
  %124 = phi i64 [ %111, %110 ], [ %119, %112 ], [ %119, %121 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #16
  br label %174

125:                                              ; preds = %2
  %126 = tail call { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer11GetEnvelopeEv(%"class.crdtp::cbor::CBORTokenizer"* %6) #16
  %127 = extractvalue { i8*, i64 } %126, 0
  %128 = extractvalue { i8*, i64 } %126, 1
  %129 = bitcast %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %129) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 -86, i64 64, i1 false) #16
  %130 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN8headless8protocol12_GLOBAL__N_118ValueParserHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %130, align 8
  %131 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 1, i32 0
  store i32 0, i32* %131, align 8
  %132 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 1, i32 1
  store i64 -1, i64* %132, align 8
  %133 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 2
  %134 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 5
  %135 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 24, i1 false) #16
  %136 = bitcast %"class.std::__1::unique_ptr"* %133 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 33, i1 false) #16
  %137 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 0
  call void @_ZN5crdtp4cbor9ParseCBORENS_4spanIhEEPNS_13ParserHandlerE(i8* %127, i64 %128, %"class.crdtp::ParserHandler"* nonnull %137) #16
  %138 = load i32, i32* %131, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %144

140:                                              ; preds = %125
  %141 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %142 = bitcast %"class.headless::protocol::Value"** %141 to i64*
  %143 = load i64, i64* %142, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %141, align 8
  br label %144

144:                                              ; preds = %140, %125
  %145 = phi i64 [ %143, %140 ], [ 0, %125 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN8headless8protocol12_GLOBAL__N_118ValueParserHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %130, align 8
  %146 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %144
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  call void @_ZdlPv(i8* %152) #17
  br label %153

153:                                              ; preds = %150, %144
  %154 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 3, i32 0, i32 0
  %155 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %154, align 8
  %156 = icmp eq %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %155, null
  br i1 %156, label %162, label %157

157:                                              ; preds = %153
  %158 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %155 to i64
  %159 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 3, i32 0, i32 1
  %160 = bitcast %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %159 to i64*
  store i64 %158, i64* %160, align 8
  %161 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %155, i64 0, i32 0
  call void @_ZdlPv(i8* %161) #17
  br label %162

162:                                              ; preds = %157, %153
  %163 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %164 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %163, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %163, align 8
  %165 = icmp eq %"class.headless::protocol::Value"* %164, null
  br i1 %165, label %172, label %166

166:                                              ; preds = %162
  %167 = bitcast %"class.headless::protocol::Value"* %164 to void (%"class.headless::protocol::Value"*)***
  %168 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %168, i64 2
  %170 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %169, align 8
  call void %170(%"class.headless::protocol::Value"* nonnull %164) #16
  br label %172

171:                                              ; preds = %2
  tail call void @_ZN5crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.crdtp::DeserializerState"* %0, i32 22) #16
  br label %185

172:                                              ; preds = %162, %166
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %129) #16
  %173 = icmp eq i64 %145, 0
  br i1 %173, label %185, label %174

174:                                              ; preds = %8, %15, %22, %28, %37, %92, %123, %172
  %175 = phi i64 [ %145, %172 ], [ %14, %8 ], [ %21, %15 ], [ %27, %22 ], [ %36, %28 ], [ %45, %37 ], [ %93, %92 ], [ %124, %123 ]
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %177 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %176, align 8
  %178 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  store i64 %175, i64* %178, align 8
  %179 = icmp eq %"class.headless::protocol::Value"* %177, null
  br i1 %179, label %185, label %180

180:                                              ; preds = %174
  %181 = bitcast %"class.headless::protocol::Value"* %177 to void (%"class.headless::protocol::Value"*)***
  %182 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %182, i64 2
  %184 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %183, align 8
  call void %184(%"class.headless::protocol::Value"* nonnull %177) #16
  br label %185

185:                                              ; preds = %172, %180, %174, %171
  %186 = phi i1 [ true, %180 ], [ true, %174 ], [ false, %171 ], [ false, %172 ]
  ret i1 %186
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN8headless8protocol5ValueENS1_14default_deleteIS5_EEEEvE9SerializeERKS8_PNS1_6vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::unique_ptr"* nocapture readonly dereferenceable(8), %"class.std::__1::vector.44"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %3, align 8
  %5 = bitcast %"class.headless::protocol::Value"* %4 to void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)***
  %6 = load void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)**, void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)*** %5, align 8
  %7 = load void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)*, void (%"class.headless::protocol::Value"*, %"class.std::__1::vector.44"*)** %6, align 8
  tail call void %7(%"class.headless::protocol::Value"* %4, %"class.std::__1::vector.44"* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN8headless8protocol15DictionaryValueENS1_14default_deleteIS5_EEEEvE11DeserializeEPNS_17DeserializerStateEPS8_(%"class.crdtp::DeserializerState"*, %"class.std::__1::unique_ptr.70"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 0, i64* %6, align 8
  %7 = call zeroext i1 @_ZN5crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN8headless8protocol5ValueENS1_14default_deleteIS5_EEEEvE11DeserializeEPNS_17DeserializerStateEPS8_(%"class.crdtp::DeserializerState"* %0, %"class.std::__1::unique_ptr"* nonnull %3)
  %8 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %5, align 8
  br i1 %7, label %9, label %26

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.headless::protocol::Value", %"class.headless::protocol::Value"* %8, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 6
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZN5crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.crdtp::DeserializerState"* %0, i32 55) #16
  br label %26

14:                                               ; preds = %9
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %5, align 8
  %15 = ptrtoint %"class.headless::protocol::Value"* %8 to i64
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.headless::protocol::DictionaryValue"*, %"class.headless::protocol::DictionaryValue"** %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr.70"* %1 to i64*
  store i64 %15, i64* %18, align 8
  %19 = icmp eq %"class.headless::protocol::DictionaryValue"* %17, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.headless::protocol::DictionaryValue"* %17 to void (%"class.headless::protocol::DictionaryValue"*)***
  %22 = load void (%"class.headless::protocol::DictionaryValue"*)**, void (%"class.headless::protocol::DictionaryValue"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.headless::protocol::DictionaryValue"*)*, void (%"class.headless::protocol::DictionaryValue"*)** %22, i64 2
  %24 = load void (%"class.headless::protocol::DictionaryValue"*)*, void (%"class.headless::protocol::DictionaryValue"*)** %23, align 8
  tail call void %24(%"class.headless::protocol::DictionaryValue"* nonnull %17) #16
  br label %25

25:                                               ; preds = %20, %14
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %5, align 8
  br label %33

26:                                               ; preds = %2, %13
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %5, align 8
  %27 = icmp eq %"class.headless::protocol::Value"* %8, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %26
  %29 = bitcast %"class.headless::protocol::Value"* %8 to void (%"class.headless::protocol::Value"*)***
  %30 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %30, i64 2
  %32 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %31, align 8
  tail call void %32(%"class.headless::protocol::Value"* nonnull %8) #16
  br label %33

33:                                               ; preds = %25, %26, %28
  %34 = phi i1 [ true, %25 ], [ false, %26 ], [ false, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  ret i1 %34
}

declare void @_ZN5crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.crdtp::DeserializerState"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN8headless8protocol15DictionaryValueENS1_14default_deleteIS5_EEEEvE9SerializeERKS8_PNS1_6vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::unique_ptr.70"* nocapture readonly dereferenceable(8), %"class.std::__1::vector.44"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.headless::protocol::DictionaryValue"*, %"class.headless::protocol::DictionaryValue"** %3, align 8
  %5 = bitcast %"class.headless::protocol::DictionaryValue"* %4 to void (%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::vector.44"*)***
  %6 = load void (%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::vector.44"*)**, void (%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::vector.44"*)*** %5, align 8
  %7 = load void (%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::vector.44"*)*, void (%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::vector.44"*)** %6, align 8
  tail call void %7(%"class.headless::protocol::DictionaryValue"* %4, %"class.std::__1::vector.44"* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN8headless8protocol6ObjectENS1_14default_deleteIS5_EEEEvE11DeserializeEPNS_17DeserializerStateEPS8_(%"class.crdtp::DeserializerState"*, %"class.std::__1::unique_ptr.85"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = tail call i8* @_Znwm(i64 80) #17
  %5 = bitcast i8* %4 to %"class.headless::protocol::DictionaryValue"*
  %6 = bitcast i8* %4 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 6, i32* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol15DictionaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  %10 = getelementptr inbounds i8, i8* %4, i64 48
  %11 = bitcast i8* %10 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %4, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #16
  %13 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 0, i64* %15, align 8
  %16 = call zeroext i1 @_ZN5crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN8headless8protocol5ValueENS1_14default_deleteIS5_EEEEvE11DeserializeEPNS_17DeserializerStateEPS8_(%"class.crdtp::DeserializerState"* %0, %"class.std::__1::unique_ptr"* nonnull %3) #16
  %17 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %14, align 8
  br i1 %16, label %18, label %23

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.headless::protocol::Value", %"class.headless::protocol::Value"* %17, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 6
  br i1 %21, label %30, label %22

22:                                               ; preds = %18
  tail call void @_ZN5crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.crdtp::DeserializerState"* %0, i32 55) #16
  br label %23

23:                                               ; preds = %22, %2
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %14, align 8
  %24 = icmp eq %"class.headless::protocol::Value"* %17, null
  br i1 %24, label %46, label %25

25:                                               ; preds = %23
  %26 = bitcast %"class.headless::protocol::Value"* %17 to void (%"class.headless::protocol::Value"*)***
  %27 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %27, i64 2
  %29 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %28, align 8
  tail call void %29(%"class.headless::protocol::Value"* nonnull %17) #16
  br label %46

30:                                               ; preds = %18
  %31 = ptrtoint %"class.headless::protocol::Value"* %17 to i64
  tail call void @_ZN8headless8protocol15DictionaryValueD2Ev(%"class.headless::protocol::DictionaryValue"* nonnull %5) #16
  tail call void @_ZdlPv(i8* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  %32 = tail call i8* @_Znwm(i64 16) #17
  %33 = bitcast i8* %32 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6ObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds i8, i8* %32, i64 8
  %35 = bitcast i8* %34 to i64*
  store i64 %31, i64* %35, align 8
  %36 = ptrtoint i8* %32 to i64
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85"* %1, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.headless::protocol::Object"*, %"class.headless::protocol::Object"** %37, align 8
  %39 = bitcast %"class.std::__1::unique_ptr.85"* %1 to i64*
  store i64 %36, i64* %39, align 8
  %40 = icmp eq %"class.headless::protocol::Object"* %38, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %30
  %42 = bitcast %"class.headless::protocol::Object"* %38 to void (%"class.headless::protocol::Object"*)***
  %43 = load void (%"class.headless::protocol::Object"*)**, void (%"class.headless::protocol::Object"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.headless::protocol::Object"*)*, void (%"class.headless::protocol::Object"*)** %43, i64 2
  %45 = load void (%"class.headless::protocol::Object"*)*, void (%"class.headless::protocol::Object"*)** %44, align 8
  tail call void %45(%"class.headless::protocol::Object"* nonnull %38) #16
  br label %51

46:                                               ; preds = %25, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  %47 = bitcast i8* %4 to void (%"class.headless::protocol::DictionaryValue"*)***
  %48 = load void (%"class.headless::protocol::DictionaryValue"*)**, void (%"class.headless::protocol::DictionaryValue"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.headless::protocol::DictionaryValue"*)*, void (%"class.headless::protocol::DictionaryValue"*)** %48, i64 2
  %50 = load void (%"class.headless::protocol::DictionaryValue"*)*, void (%"class.headless::protocol::DictionaryValue"*)** %49, align 8
  tail call void %50(%"class.headless::protocol::DictionaryValue"* nonnull %5) #16
  br label %51

51:                                               ; preds = %30, %41, %46
  %52 = phi i1 [ false, %46 ], [ true, %41 ], [ true, %30 ]
  ret i1 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5crdtp18ProtocolTypeTraitsINSt3__110unique_ptrIN8headless8protocol6ObjectENS1_14default_deleteIS5_EEEEvE9SerializeERKS8_PNS1_6vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::unique_ptr.85"* nocapture readonly dereferenceable(8), %"class.std::__1::vector.44"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.headless::protocol::Object"*, %"class.headless::protocol::Object"** %3, align 8
  %5 = bitcast %"class.headless::protocol::Object"* %4 to void (%"class.headless::protocol::Object"*, %"class.std::__1::vector.44"*)***
  %6 = load void (%"class.headless::protocol::Object"*, %"class.std::__1::vector.44"*)**, void (%"class.headless::protocol::Object"*, %"class.std::__1::vector.44"*)*** %5, align 8
  %7 = load void (%"class.headless::protocol::Object"*, %"class.std::__1::vector.44"*)*, void (%"class.headless::protocol::Object"*, %"class.std::__1::vector.44"*)** %6, align 8
  tail call void %7(%"class.headless::protocol::Object"* %4, %"class.std::__1::vector.44"* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless8protocol5ValueD0Ev(%"class.headless::protocol::Value"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.headless::protocol::Value"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5crdtp12SerializableD2Ev(%"class.crdtp::Serializable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless8protocol16FundamentalValueD0Ev(%"class.headless::protocol::FundamentalValue"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.headless::protocol::FundamentalValue"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless8protocol11StringValueD2Ev(%"class.headless::protocol::StringValue"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::StringValue", %"class.headless::protocol::StringValue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::protocol::StringValue", %"class.headless::protocol::StringValue"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #17
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless8protocol11StringValueD0Ev(%"class.headless::protocol::StringValue"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::StringValue", %"class.headless::protocol::StringValue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::protocol::StringValue", %"class.headless::protocol::StringValue"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #17
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.headless::protocol::StringValue"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless8protocol11BinaryValueD2Ev(%"class.headless::protocol::BinaryValue"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::BinaryValue", %"class.headless::protocol::BinaryValue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol11BinaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::protocol::BinaryValue", %"class.headless::protocol::BinaryValue"* %0, i64 0, i32 1
  tail call void @_ZN8headless8protocol6BinaryD1Ev(%"class.headless::protocol::Binary"* %3) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless8protocol11BinaryValueD0Ev(%"class.headless::protocol::BinaryValue"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::BinaryValue", %"class.headless::protocol::BinaryValue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol11BinaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::protocol::BinaryValue", %"class.headless::protocol::BinaryValue"* %0, i64 0, i32 1
  tail call void @_ZN8headless8protocol6BinaryD1Ev(%"class.headless::protocol::Binary"* %3) #16
  %4 = bitcast %"class.headless::protocol::BinaryValue"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandlerD0Ev(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN8headless8protocol12_GLOBAL__N_118ValueParserHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #17
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %12, align 8
  %14 = icmp eq %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %13 to i64
  %17 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = bitcast %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %13, i64 0, i32 0
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %21, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %21, align 8
  %23 = icmp eq %"class.headless::protocol::Value"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.headless::protocol::Value"* %22 to void (%"class.headless::protocol::Value"*)***
  %26 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %26, i64 2
  %28 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %27, align 8
  tail call void %28(%"class.headless::protocol::Value"* nonnull %22) #16
  br label %29

29:                                               ; preds = %20, %24
  %30 = bitcast %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler14HandleMapBeginEv(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %89

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 80) #17
  %7 = bitcast i8* %6 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 6, i32* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol15DictionaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  %11 = getelementptr inbounds i8, i8* %6, i64 48
  %12 = bitcast i8* %11 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #16
  %14 = ptrtoint i8* %6 to i64
  %15 = bitcast i8* %6 to %"class.headless::protocol::Value"*
  tail call fastcc void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler16AddValueToParentENSt3__110unique_ptrINS0_5ValueENS3_14default_deleteIS5_EEEE(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, %"class.headless::protocol::Value"* nonnull %15)
  %16 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %17, align 8
  %19 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %20 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %19, align 8
  %21 = icmp ult %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %18, %20
  %22 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %20 to i64
  br i1 %21, label %23, label %30

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %18, i64 0, i32 0
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %18, i64 0, i32 1, i32 0
  %26 = bitcast %"class.headless::protocol::DictionaryValue"** %25 to i64*
  store i64 %14, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %18, i64 1
  %28 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %27 to i64
  %29 = bitcast %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %17 to i64*
  store i64 %28, i64* %29, align 8
  br label %89

30:                                               ; preds = %5
  %31 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %18 to i64
  %32 = bitcast %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %17 to i64*
  %33 = bitcast %"class.std::__1::vector"* %16 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %31, %34
  %36 = ashr exact i64 %35, 4
  %37 = add nsw i64 %36, 1
  %38 = icmp ugt i64 %37, 1152921504606846975
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  %40 = bitcast %"class.std::__1::vector"* %16 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #18
  unreachable

41:                                               ; preds = %30
  %42 = bitcast %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %19 to i64*
  %43 = sub i64 %22, %34
  %44 = ashr exact i64 %43, 4
  %45 = icmp ult i64 %44, 576460752303423487
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = ashr exact i64 %43, 3
  %48 = icmp ult i64 %47, %37
  %49 = select i1 %48, i64 %37, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = icmp ugt i64 %49, 1152921504606846975
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void @abort() #18
  unreachable

54:                                               ; preds = %51, %41
  %55 = phi i64 [ %49, %51 ], [ 1152921504606846975, %41 ]
  %56 = shl i64 %55, 4
  %57 = tail call i8* @_Znwm(i64 %56) #17
  %58 = bitcast i8* %57 to %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*
  br label %59

59:                                               ; preds = %54, %46
  %60 = phi i64 [ %55, %54 ], [ 0, %46 ]
  %61 = phi %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* [ %58, %54 ], [ null, %46 ]
  %62 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %61, i64 %36
  %63 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %61, i64 %60
  %64 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %63 to i64
  %65 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %62, i64 0, i32 0
  store i8 1, i8* %65, align 8
  %66 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %61, i64 %36, i32 1, i32 0
  %67 = bitcast %"class.headless::protocol::DictionaryValue"** %66 to i64*
  store i64 %14, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %62, i64 1
  %69 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %68 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 0
  %71 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %70, align 8
  %72 = load i64, i64* %32, align 8
  %73 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %71 to i64
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 4
  %76 = sub nsw i64 0, %75
  %77 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %62, i64 %76
  %78 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %77 to i64
  %79 = icmp sgt i64 %74, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %59
  %81 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %77, i64 0, i32 0
  %82 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %71, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 %74, i1 false) #16
  %83 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %70, align 8
  br label %84

84:                                               ; preds = %80, %59
  %85 = phi %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* [ %71, %59 ], [ %83, %80 ]
  store i64 %78, i64* %33, align 8
  store i64 %69, i64* %32, align 8
  store i64 %64, i64* %42, align 8
  %86 = icmp eq %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %85, i64 0, i32 0
  tail call void @_ZdlPv(i8* %88) #17
  br label %89

89:                                               ; preds = %23, %84, %87, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler12HandleMapEndEv(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %6, align 8
  %8 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %7, i64 -1
  store %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %8, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %6, align 8
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler16HandleArrayBeginEv(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %86

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 40) #17
  %7 = bitcast i8* %6 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 7, i32* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol9ListValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #16
  %11 = ptrtoint i8* %6 to i64
  %12 = bitcast i8* %6 to %"class.headless::protocol::Value"*
  tail call fastcc void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler16AddValueToParentENSt3__110unique_ptrINS0_5ValueENS3_14default_deleteIS5_EEEE(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, %"class.headless::protocol::Value"* nonnull %12)
  %13 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %14, align 8
  %16 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %17 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %16, align 8
  %18 = icmp ult %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %15, %17
  %19 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %17 to i64
  br i1 %18, label %20, label %27

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %15, i64 0, i32 0
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %15, i64 0, i32 1
  %23 = bitcast %union.anon* %22 to i64*
  store i64 %11, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %15, i64 1
  %25 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %24 to i64
  %26 = bitcast %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %14 to i64*
  store i64 %25, i64* %26, align 8
  br label %86

27:                                               ; preds = %5
  %28 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %15 to i64
  %29 = bitcast %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %14 to i64*
  %30 = bitcast %"class.std::__1::vector"* %13 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %28, %31
  %33 = ashr exact i64 %32, 4
  %34 = add nsw i64 %33, 1
  %35 = icmp ugt i64 %34, 1152921504606846975
  br i1 %35, label %36, label %38

36:                                               ; preds = %27
  %37 = bitcast %"class.std::__1::vector"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #18
  unreachable

38:                                               ; preds = %27
  %39 = bitcast %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %16 to i64*
  %40 = sub i64 %19, %31
  %41 = ashr exact i64 %40, 4
  %42 = icmp ult i64 %41, 576460752303423487
  br i1 %42, label %43, label %51

43:                                               ; preds = %38
  %44 = ashr exact i64 %40, 3
  %45 = icmp ult i64 %44, %34
  %46 = select i1 %45, i64 %34, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %56, label %48

48:                                               ; preds = %43
  %49 = icmp ugt i64 %46, 1152921504606846975
  br i1 %49, label %50, label %51

50:                                               ; preds = %48
  tail call void @abort() #18
  unreachable

51:                                               ; preds = %48, %38
  %52 = phi i64 [ %46, %48 ], [ 1152921504606846975, %38 ]
  %53 = shl i64 %52, 4
  %54 = tail call i8* @_Znwm(i64 %53) #17
  %55 = bitcast i8* %54 to %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*
  br label %56

56:                                               ; preds = %51, %43
  %57 = phi i64 [ %52, %51 ], [ 0, %43 ]
  %58 = phi %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* [ %55, %51 ], [ null, %43 ]
  %59 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %58, i64 %33
  %60 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %58, i64 %57
  %61 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %60 to i64
  %62 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %59, i64 0, i32 0
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %58, i64 %33, i32 1
  %64 = bitcast %union.anon* %63 to i64*
  store i64 %11, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %59, i64 1
  %66 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %65 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %68 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %67, align 8
  %69 = load i64, i64* %29, align 8
  %70 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %68 to i64
  %71 = sub i64 %69, %70
  %72 = ashr exact i64 %71, 4
  %73 = sub nsw i64 0, %72
  %74 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %59, i64 %73
  %75 = ptrtoint %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %74 to i64
  %76 = icmp sgt i64 %71, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %56
  %78 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %74, i64 0, i32 0
  %79 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %68, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 %71, i1 false) #16
  %80 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %67, align 8
  br label %81

81:                                               ; preds = %77, %56
  %82 = phi %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* [ %68, %56 ], [ %80, %77 ]
  store i64 %75, i64* %30, align 8
  store i64 %66, i64* %29, align 8
  store i64 %61, i64* %39, align 8
  %83 = icmp eq %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %82, i64 0, i32 0
  tail call void @_ZdlPv(i8* %85) #17
  br label %86

86:                                               ; preds = %20, %81, %84, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler14HandleArrayEndEv(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %6, align 8
  %8 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %7, i64 -1
  store %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %8, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %6, align 8
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler13HandleString8EN5crdtp4spanIhEE(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = icmp ugt i64 %2, -17
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %7) #18
  unreachable

8:                                                ; preds = %3
  %9 = icmp ult i64 %2, 23
  br i1 %9, label %19, label %10

10:                                               ; preds = %8
  %11 = add nuw i64 %2, 16
  %12 = and i64 %11, -16
  %13 = tail call i8* @_Znwm(i64 %12) #17
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8, !alias.scope !9
  %15 = or i64 %12, -9223372036854775808
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %15, i64* %16, align 8, !alias.scope !9
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %17, align 8, !alias.scope !9
  %18 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %25

19:                                               ; preds = %8
  %20 = trunc i64 %2 to i8
  %21 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 %20, i8* %22, align 1, !alias.scope !9
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %24 = icmp eq i64 %2, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %19, %10
  %26 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %21, %19 ], [ %18, %10 ]
  %27 = phi i8* [ %23, %19 ], [ %13, %10 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* align 1 %1, i64 %2, i1 false) #16
  br label %28

28:                                               ; preds = %19, %25
  %29 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %21, %19 ], [ %26, %25 ]
  %30 = phi i8* [ %23, %19 ], [ %27, %25 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 %2
  store i8 0, i8* %31, align 1
  call fastcc void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler17AddStringToParentENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, %"class.std::__1::basic_string"* nonnull %4)
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #17
  br label %38

38:                                               ; preds = %28, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler14HandleString16EN5crdtp4spanItEE(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*, i16*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  call void @_ZN8headless8protocol10StringUtil11fromUTF16LEEPKtm(%"class.std::__1::basic_string"* nonnull sret %4, i16* %1, i64 %2) #16
  call fastcc void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler17AddStringToParentENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, %"class.std::__1::basic_string"* nonnull %4)
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %11) #17
  br label %12

12:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler12HandleBinaryEN5crdtp4spanIhEE(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.headless::protocol::Binary", align 8
  %5 = bitcast %"class.headless::protocol::Binary"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #16
  call void @_ZN8headless8protocol6Binary8fromSpanEPKhm(%"class.headless::protocol::Binary"* nonnull sret %4, i8* %1, i64 %2) #16
  %6 = call i8* @_Znwm(i64 32) #17
  %7 = bitcast i8* %6 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 5, i32* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol11BinaryValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  %11 = bitcast i8* %10 to %"class.headless::protocol::Binary"*
  call void @_ZN8headless8protocol6BinaryC1ERKS1_(%"class.headless::protocol::Binary"* %11, %"class.headless::protocol::Binary"* nonnull dereferenceable(16) %4) #16
  %12 = bitcast i8* %6 to %"class.headless::protocol::Value"*
  call fastcc void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler16AddValueToParentENSt3__110unique_ptrINS0_5ValueENS3_14default_deleteIS5_EEEE(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, %"class.headless::protocol::Value"* nonnull %12)
  call void @_ZN8headless8protocol6BinaryD1Ev(%"class.headless::protocol::Binary"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler12HandleDoubleEd(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*, double) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 24) #17
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 3, i32* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  %8 = bitcast i8* %7 to double*
  store double %1, double* %8, align 8
  %9 = bitcast i8* %3 to %"class.headless::protocol::Value"*
  tail call fastcc void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler16AddValueToParentENSt3__110unique_ptrINS0_5ValueENS3_14default_deleteIS5_EEEE(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, %"class.headless::protocol::Value"* nonnull %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler11HandleInt32Ei(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*, i32) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 24) #17
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 2, i32* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  %8 = bitcast i8* %7 to i32*
  store i32 %1, i32* %8, align 8
  %9 = bitcast i8* %3 to %"class.headless::protocol::Value"*
  tail call fastcc void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler16AddValueToParentENSt3__110unique_ptrINS0_5ValueENS3_14default_deleteIS5_EEEE(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, %"class.headless::protocol::Value"* nonnull %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler10HandleBoolEb(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 24) #17
  %4 = zext i1 %1 to i8
  %5 = bitcast i8* %3 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 1, i32* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 16
  store i8 %4, i8* %8, align 8
  %9 = bitcast i8* %3 to %"class.headless::protocol::Value"*
  tail call fastcc void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler16AddValueToParentENSt3__110unique_ptrINS0_5ValueENS3_14default_deleteIS5_EEEE(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, %"class.headless::protocol::Value"* nonnull %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler10HandleNullEv(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #17
  %3 = bitcast i8* %2 to %"class.headless::protocol::Value"*
  %4 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol5ValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 8
  tail call fastcc void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler16AddValueToParentENSt3__110unique_ptrINS0_5ValueENS3_14default_deleteIS5_EEEE(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, %"class.headless::protocol::Value"* nonnull %3)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler11HandleErrorEN5crdtp6StatusE(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* nocapture, i32, i64) unnamed_addr #10 align 2 {
  %4 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 1
  store i64 %2, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler16AddValueToParentENSt3__110unique_ptrINS0_5ValueENS3_14default_deleteIS5_EEEE(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*, %"class.headless::protocol::Value"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = ptrtoint %"class.headless::protocol::Value"* %1 to i64
  %6 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %64

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %11, align 8
  %13 = icmp eq %"class.headless::protocol::Value"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  %15 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %5, i64* %15, align 8
  br label %71

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %17, align 8
  %19 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %18, i64 -1, i32 0
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %18, i64 -1, i32 1
  br i1 %21, label %38, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %25 = load %"class.headless::protocol::DictionaryValue"*, %"class.headless::protocol::DictionaryValue"** %24, align 8
  %26 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  %27 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::protocol::Value"* %1, %"class.headless::protocol::Value"** %28, align 8
  call void @_ZN8headless8protocol15DictionaryValue3setINS0_5ValueEEEvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERNS4_10unique_ptrIT_NS4_14default_deleteISE_EEEE(%"class.headless::protocol::DictionaryValue"* %25, %"class.std::__1::basic_string"* dereferenceable(24) %26, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #16
  %29 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %28, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %28, align 8
  %30 = icmp eq %"class.headless::protocol::Value"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %23
  %32 = bitcast %"class.headless::protocol::Value"* %29 to void (%"class.headless::protocol::Value"*)***
  %33 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %33, i64 2
  %35 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %34, align 8
  call void %35(%"class.headless::protocol::Value"* nonnull %29) #16
  br label %36

36:                                               ; preds = %23, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  %37 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 4
  store i8 0, i8* %37, align 8
  br label %71

38:                                               ; preds = %16
  %39 = bitcast %union.anon* %22 to %"class.headless::protocol::ListValue"**
  %40 = load %"class.headless::protocol::ListValue"*, %"class.headless::protocol::ListValue"** %39, align 8
  %41 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::protocol::Value"* %1, %"class.headless::protocol::Value"** %42, align 8
  %43 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %40, i64 0, i32 1, i32 0, i32 1
  %44 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %43, align 8
  %45 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %40, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %46 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %45, align 8
  %47 = icmp ult %"class.std::__1::unique_ptr"* %44, %46
  br i1 %47, label %48, label %53

48:                                               ; preds = %38
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %42, align 8
  %49 = bitcast %"class.std::__1::unique_ptr"* %44 to i64*
  store i64 %5, i64* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 1
  %51 = ptrtoint %"class.std::__1::unique_ptr"* %50 to i64
  %52 = bitcast %"class.std::__1::unique_ptr"** %43 to i64*
  store i64 %51, i64* %52, align 8
  br label %55

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %40, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %54, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #16
  br label %55

55:                                               ; preds = %53, %48
  %56 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %42, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %42, align 8
  %57 = icmp eq %"class.headless::protocol::Value"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.headless::protocol::Value"* %56 to void (%"class.headless::protocol::Value"*)***
  %60 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %60, i64 2
  %62 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %61, align 8
  call void %62(%"class.headless::protocol::Value"* nonnull %56) #16
  br label %63

63:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  br label %71

64:                                               ; preds = %2
  %65 = icmp eq %"class.headless::protocol::Value"* %1, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %64
  %67 = bitcast %"class.headless::protocol::Value"* %1 to void (%"class.headless::protocol::Value"*)***
  %68 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %68, i64 2
  %70 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %69, align 8
  tail call void %70(%"class.headless::protocol::Value"* nonnull %1) #16
  br label %71

71:                                               ; preds = %14, %36, %63, %64, %66
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8headless8protocol12_GLOBAL__N_118ValueParserHandler17AddStringToParentENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.headless::protocol::(anonymous namespace)::ValueParserHandler"*, %"class.std::__1::basic_string"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %146

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %10, align 8
  %12 = icmp eq %"class.headless::protocol::Value"* %11, null
  br i1 %12, label %13, label %42

13:                                               ; preds = %8
  %14 = tail call i8* @_Znwm(i64 40) #17
  %15 = bitcast i8* %14 to i32 (...)***
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 4, i32* %17, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %18 = getelementptr inbounds i8, i8* %14, i64 16
  %19 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %24, i64 24, i1 false) #16
  %25 = ptrtoint i8* %14 to i64
  %26 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 %25, i64* %26, align 8
  br label %146

27:                                               ; preds = %13
  %28 = bitcast i8* %18 to %"class.std::__1::basic_string"*
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %28, i8* %30, i64 %32) #16
  %33 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %10, align 8
  %34 = ptrtoint i8* %14 to i64
  %35 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 %34, i64* %35, align 8
  %36 = icmp eq %"class.headless::protocol::Value"* %33, null
  br i1 %36, label %146, label %37

37:                                               ; preds = %27
  %38 = bitcast %"class.headless::protocol::Value"* %33 to void (%"class.headless::protocol::Value"*)***
  %39 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %39, i64 2
  %41 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %40, align 8
  tail call void %41(%"class.headless::protocol::Value"* nonnull %33) #16
  br label %146

42:                                               ; preds = %8
  %43 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 3, i32 0, i32 1
  %44 = load %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"*, %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"** %43, align 8
  %45 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %44, i64 -1, i32 0
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %99, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 4
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %85, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %44, i64 -1, i32 1, i32 0
  %54 = load %"class.headless::protocol::DictionaryValue"*, %"class.headless::protocol::DictionaryValue"** %53, align 8
  %55 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  %56 = tail call i8* @_Znwm(i64 40) #17
  %57 = bitcast i8* %56 to i32 (...)***
  %58 = getelementptr inbounds i8, i8* %56, i64 8
  %59 = bitcast i8* %58 to i32*
  store i32 4, i32* %59, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %60 = getelementptr inbounds i8, i8* %56, i64 16
  %61 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %52
  %66 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %66, i64 24, i1 false) #16
  br label %73

67:                                               ; preds = %52
  %68 = bitcast i8* %60 to %"class.std::__1::basic_string"*
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %68, i8* %70, i64 %72) #16
  br label %73

73:                                               ; preds = %67, %65
  %74 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #16
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  store i8* %56, i8** %76, align 8
  call void @_ZN8headless8protocol15DictionaryValue3setINS0_5ValueEEEvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERNS4_10unique_ptrIT_NS4_14default_deleteISE_EEEE(%"class.headless::protocol::DictionaryValue"* %54, %"class.std::__1::basic_string"* dereferenceable(24) %55, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #16
  %77 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %75, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %75, align 8
  %78 = icmp eq %"class.headless::protocol::Value"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %73
  %80 = bitcast %"class.headless::protocol::Value"* %77 to void (%"class.headless::protocol::Value"*)***
  %81 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %81, i64 2
  %83 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %82, align 8
  call void %83(%"class.headless::protocol::Value"* nonnull %77) #16
  br label %84

84:                                               ; preds = %73, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #16
  store i8 0, i8* %49, align 8
  br label %146

85:                                               ; preds = %48
  %86 = getelementptr inbounds %"class.headless::protocol::(anonymous namespace)::ValueParserHandler", %"class.headless::protocol::(anonymous namespace)::ValueParserHandler"* %0, i64 0, i32 5
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  tail call void @_ZdlPv(i8* %93) #17
  br label %94

94:                                               ; preds = %85, %91
  %95 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  %96 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 24, i1 false) #16
  %97 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  store i8 0, i8* %98, align 1
  store i8 0, i8* %96, align 1
  store i8 1, i8* %49, align 8
  br label %146

99:                                               ; preds = %42
  %100 = getelementptr inbounds %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState", %"struct.headless::protocol::(anonymous namespace)::ValueParserHandler::ContainerState"* %44, i64 -1, i32 1
  %101 = bitcast %union.anon* %100 to %"class.headless::protocol::ListValue"**
  %102 = load %"class.headless::protocol::ListValue"*, %"class.headless::protocol::ListValue"** %101, align 8
  %103 = tail call i8* @_Znwm(i64 40) #17
  %104 = bitcast i8* %103 to i32 (...)***
  %105 = getelementptr inbounds i8, i8* %103, i64 8
  %106 = bitcast i8* %105 to i32*
  store i32 4, i32* %106, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %104, align 8
  %107 = getelementptr inbounds i8, i8* %103, i64 16
  %108 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %99
  %113 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %113, i64 24, i1 false) #16
  br label %120

114:                                              ; preds = %99
  %115 = bitcast i8* %107 to %"class.std::__1::basic_string"*
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %115, i8* %117, i64 %119) #16
  br label %120

120:                                              ; preds = %112, %114
  %121 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121)
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %103, i8** %123, align 8
  %124 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %102, i64 0, i32 1, i32 0, i32 1
  %125 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %124, align 8
  %126 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %102, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %127 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %126, align 8
  %128 = icmp ult %"class.std::__1::unique_ptr"* %125, %127
  br i1 %128, label %129, label %135

129:                                              ; preds = %120
  %130 = ptrtoint i8* %103 to i64
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %122, align 8
  %131 = bitcast %"class.std::__1::unique_ptr"* %125 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %125, i64 1
  %133 = ptrtoint %"class.std::__1::unique_ptr"* %132 to i64
  %134 = bitcast %"class.std::__1::unique_ptr"** %124 to i64*
  store i64 %133, i64* %134, align 8
  br label %137

135:                                              ; preds = %120
  %136 = getelementptr inbounds %"class.headless::protocol::ListValue", %"class.headless::protocol::ListValue"* %102, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"* %136, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #16
  br label %137

137:                                              ; preds = %135, %129
  %138 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %122, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %122, align 8
  %139 = icmp eq %"class.headless::protocol::Value"* %138, null
  br i1 %139, label %145, label %140

140:                                              ; preds = %137
  %141 = bitcast %"class.headless::protocol::Value"* %138 to void (%"class.headless::protocol::Value"*)***
  %142 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %142, i64 2
  %144 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %143, align 8
  call void %144(%"class.headless::protocol::Value"* nonnull %138) #16
  br label %145

145:                                              ; preds = %140, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121)
  br label %146

146:                                              ; preds = %23, %27, %37, %145, %94, %84, %2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

declare void @_ZN8headless8protocol10StringUtil11fromUTF16LEEPKtm(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #2

declare void @_ZN8headless8protocol6Binary8fromSpanEPKhm(%"class.headless::protocol::Binary"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8headless8protocol6BinaryD1Ev(%"class.headless::protocol::Binary"*) unnamed_addr #13

declare void @_ZN5crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector.44"*) local_unnamed_addr #2

declare void @_ZN8headless8protocol6BinaryC1ERKS1_(%"class.headless::protocol::Binary"*, %"class.headless::protocol::Binary"* dereferenceable(16)) unnamed_addr #2

declare i32 @_ZNK5crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare i32 @_ZNK5crdtp4cbor13CBORTokenizer8GetInt32Ev(%"class.crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare double @_ZNK5crdtp4cbor13CBORTokenizer9GetDoubleEv(%"class.crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer10GetString8Ev(%"class.crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer18GetString16WireRepEv(%"class.crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer11GetEnvelopeEv(%"class.crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #16
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #16
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #16, !range !12
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %17
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #16
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base"* %112
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSU_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISF_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.116"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #16
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %17, i64 %18) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #16
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %114, label %24

24:                                               ; preds = %5
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #16, !range !12
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %114, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %114, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  %47 = load i8, i8* %8, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %13, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = load i8*, i8** %11, align 8
  %53 = select i1 %48, i8* %52, i8* %15
  %54 = icmp eq i64 %51, 0
  br label %55

55:                                               ; preds = %45, %98
  %56 = phi %"struct.std::__1::__hash_node_base"* [ %43, %45 ], [ %100, %98 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %20
  br i1 %60, label %71, label %61

61:                                               ; preds = %55
  br i1 %26, label %64, label %62

62:                                               ; preds = %61
  %63 = and i64 %59, %46
  br label %68

64:                                               ; preds = %61
  %65 = icmp ult i64 %59, %22
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %59, %22
  br label %68

68:                                               ; preds = %62, %64, %66
  %69 = phi i64 [ %63, %62 ], [ %67, %66 ], [ %59, %64 ]
  %70 = icmp eq i64 %69, %35
  br i1 %70, label %71, label %114

71:                                               ; preds = %55, %68
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 2
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  %82 = icmp eq i64 %81, %51
  br i1 %82, label %83, label %98

83:                                               ; preds = %71
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i8*
  %87 = select i1 %76, i8* %85, i8* %86
  br i1 %76, label %94, label %88

88:                                               ; preds = %83
  br i1 %54, label %216, label %89

89:                                               ; preds = %88
  %90 = ptrtoint i8* %85 to i64
  %91 = trunc i64 %90 to i8
  %92 = load i8, i8* %53, align 1
  %93 = icmp eq i8 %92, %91
  br i1 %93, label %102, label %98

94:                                               ; preds = %83
  br i1 %54, label %216, label %95

95:                                               ; preds = %94
  %96 = call i32 @bcmp(i8* %87, i8* %53, i64 %51) #16
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %216, label %98

98:                                               ; preds = %109, %89, %71, %95
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %114, label %55

102:                                              ; preds = %89, %109
  %103 = phi i64 [ %106, %109 ], [ %80, %89 ]
  %104 = phi i8* [ %107, %109 ], [ %86, %89 ]
  %105 = phi i8* [ %110, %109 ], [ %53, %89 ]
  %106 = add i64 %103, -1
  %107 = getelementptr inbounds i8, i8* %104, i64 1
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %216, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds i8, i8* %105, i64 1
  %111 = load i8, i8* %107, align 1
  %112 = load i8, i8* %110, align 1
  %113 = icmp eq i8 %111, %112
  br i1 %113, label %102, label %98

114:                                              ; preds = %68, %98, %41, %34, %5
  %115 = phi i64 [ %35, %34 ], [ -6148914691236517206, %5 ], [ %35, %41 ], [ %35, %98 ], [ %35, %68 ]
  %116 = call i8* @_Znwm(i64 48) #17, !noalias !13
  %117 = getelementptr inbounds i8, i8* %116, i64 16
  %118 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %118, align 8, !noalias !13
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1, !noalias !13
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %114
  %125 = bitcast %"class.std::__1::basic_string"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %125, i64 24, i1 false) #16, !noalias !13
  br label %132

126:                                              ; preds = %114
  %127 = bitcast i8* %117 to %"class.std::__1::basic_string"*
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8, !noalias !13
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8, !noalias !13
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %127, i8* %129, i64 %131) #16, !noalias !13
  br label %132

132:                                              ; preds = %124, %126
  %133 = getelementptr inbounds i8, i8* %116, i64 40
  %134 = bitcast i8* %133 to i64*
  store i64 0, i64* %134, align 8, !noalias !13
  %135 = getelementptr inbounds i8, i8* %116, i64 8
  %136 = bitcast i8* %135 to i64*
  store i64 %20, i64* %136, align 8, !noalias !13
  %137 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %137, align 8, !noalias !13
  %138 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, 1
  %141 = uitofp i64 %140 to float
  %142 = uitofp i64 %22 to float
  %143 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %144 = load float, float* %143, align 4
  %145 = fmul float %144, %142
  %146 = fcmp olt float %145, %141
  %147 = or i1 %23, %146
  br i1 %147, label %148, label %171

148:                                              ; preds = %132
  %149 = shl i64 %22, 1
  %150 = icmp ult i64 %22, 3
  %151 = call i64 @llvm.ctpop.i64(i64 %22) #16, !range !12
  %152 = icmp ugt i64 %151, 1
  %153 = or i1 %150, %152
  %154 = zext i1 %153 to i64
  %155 = or i64 %149, %154
  %156 = fdiv float %141, %144
  %157 = call float @llvm.ceil.f32(float %156) #16
  %158 = fptoui float %157 to i64
  %159 = icmp ult i64 %155, %158
  %160 = select i1 %159, i64 %158, i64 %155
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %160)
  %161 = load i64, i64* %21, align 8
  %162 = call i64 @llvm.ctpop.i64(i64 %161) #16, !range !12
  %163 = icmp ugt i64 %162, 1
  br i1 %163, label %167, label %164

164:                                              ; preds = %148
  %165 = add i64 %161, -1
  %166 = and i64 %165, %20
  br label %171

167:                                              ; preds = %148
  %168 = icmp ult i64 %20, %161
  br i1 %168, label %171, label %169

169:                                              ; preds = %167
  %170 = urem i64 %20, %161
  br label %171

171:                                              ; preds = %169, %167, %164, %132
  %172 = phi i64 [ %22, %132 ], [ %161, %164 ], [ %161, %167 ], [ %161, %169 ]
  %173 = phi i64 [ %115, %132 ], [ %166, %164 ], [ %20, %167 ], [ %170, %169 ]
  %174 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %175 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %174, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %175, i64 %173
  %177 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base"* %177, null
  br i1 %178, label %179, label %205

179:                                              ; preds = %171
  %180 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %181 = bitcast %"struct.std::__1::__hash_node_base"* %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast i8* %116 to i64*
  store i64 %182, i64* %183, align 8
  %184 = bitcast %"struct.std::__1::__hash_node_base"* %180 to i8**
  store i8* %116, i8** %184, align 8
  store %"struct.std::__1::__hash_node_base"* %180, %"struct.std::__1::__hash_node_base"** %176, align 8
  %185 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %137, align 8
  %186 = icmp eq %"struct.std::__1::__hash_node_base"* %185, null
  br i1 %186, label %212, label %187

187:                                              ; preds = %179
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %185, i64 1
  %189 = bitcast %"struct.std::__1::__hash_node_base"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = call i64 @llvm.ctpop.i64(i64 %172) #16, !range !12
  %192 = icmp ugt i64 %191, 1
  br i1 %192, label %196, label %193

193:                                              ; preds = %187
  %194 = add i64 %172, -1
  %195 = and i64 %190, %194
  br label %200

196:                                              ; preds = %187
  %197 = icmp ult i64 %190, %172
  br i1 %197, label %200, label %198

198:                                              ; preds = %196
  %199 = urem i64 %190, %172
  br label %200

200:                                              ; preds = %193, %196, %198
  %201 = phi i64 [ %195, %193 ], [ %199, %198 ], [ %190, %196 ]
  %202 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %174, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %202, i64 %201
  %204 = bitcast %"struct.std::__1::__hash_node_base"** %203 to i8**
  br label %210

205:                                              ; preds = %171
  %206 = bitcast %"struct.std::__1::__hash_node_base"* %177 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast i8* %116 to i64*
  store i64 %207, i64* %208, align 8
  %209 = bitcast %"struct.std::__1::__hash_node_base"* %177 to i8**
  br label %210

210:                                              ; preds = %200, %205
  %211 = phi i8** [ %209, %205 ], [ %204, %200 ]
  store i8* %116, i8** %211, align 8
  br label %212

212:                                              ; preds = %210, %179
  %213 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base"*
  %214 = load i64, i64* %138, align 8
  %215 = add i64 %214, 1
  store i64 %215, i64* %138, align 8
  br label %216

216:                                              ; preds = %88, %94, %95, %102, %212
  %217 = phi i8 [ 1, %212 ], [ 0, %102 ], [ 0, %95 ], [ 0, %94 ], [ 0, %88 ]
  %218 = phi %"struct.std::__1::__hash_node_base"* [ %213, %212 ], [ %56, %102 ], [ %56, %95 ], [ %56, %94 ], [ %56, %88 ]
  %219 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %218, 0
  %220 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %219, i8 %217, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %220
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !12
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !12
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !12
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #18
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !16

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !12
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #16
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %154 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ], [ %121, %141 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %187, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #17
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.18"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.18"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.18"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #17
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #16
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #16
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #16
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #17
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #17
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #16
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #16
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #16, !range !12
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %17, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #16
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base"* %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISF_PvEEEE(%"class.std::__1::unique_ptr.117"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #16, !range !12
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.8"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.117"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.11"** %98 to %"class.std::__1::__compressed_pair.8"**
  store %"class.std::__1::__compressed_pair.8"* %30, %"class.std::__1::__compressed_pair.8"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.31"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.31"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.31"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.headless::protocol::Value"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !18

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %142, align 8
  store %"class.headless::protocol::Value"* null, %"class.headless::protocol::Value"** %142, align 8
  %144 = icmp eq %"class.headless::protocol::Value"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.headless::protocol::Value"* %143 to void (%"class.headless::protocol::Value"*)***
  %147 = load void (%"class.headless::protocol::Value"*)**, void (%"class.headless::protocol::Value"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %147, i64 2
  %149 = load void (%"class.headless::protocol::Value"*)*, void (%"class.headless::protocol::Value"*)** %148, align 8
  tail call void %149(%"class.headless::protocol::Value"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #17
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__19make_pairIRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8headless8protocol5ValueEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSE_IT0_E4typeEEEOSF_OSI_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__19make_pairIRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8headless8protocol5ValueEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSE_IT0_E4typeEEEOSF_OSI_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN8headless8protocol10StringUtil8fromUTF8EPKhm: argument 0"}
!8 = distinct !{!8, !"_ZN8headless8protocol10StringUtil8fromUTF8EPKhm"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN8headless8protocol10StringUtil8fromUTF8EPKhm: argument 0"}
!11 = distinct !{!11, !"_ZN8headless8protocol10StringUtil8fromUTF8EPKhm"}
!12 = !{i64 0, i64 65}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSU_IJEEEEEENS8_INS_11__hash_nodeISF_PvEENS_22__hash_node_destructorINS5_IS11_EEEEEEmOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN8headless8protocol5ValueENS_14default_deleteISB_EEEEEENS_22__unordered_map_hasherIS7_SF_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SF_SK_SI_Lb1EEENS5_ISF_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSU_IJEEEEEENS8_INS_11__hash_nodeISF_PvEENS_22__hash_node_destructorINS5_IS11_EEEEEEmOT_DpOT0_"}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !17}
