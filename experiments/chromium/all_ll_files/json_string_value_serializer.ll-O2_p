; ModuleID = '../../base/json/json_string_value_serializer.cc'
source_filename = "../../base/json/json_string_value_serializer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.JSONStringValueSerializer = type <{ %"class.base::ValueSerializer", %"class.std::__1::basic_string"*, i8, [7 x i8] }>
%"class.base::ValueSerializer" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.JSONStringValueDeserializer = type <{ %"class.base::ValueDeserializer", %"class.base::BasicStringPiece", i32, [4 x i8] }>
%"class.base::ValueDeserializer" = type { i32 (...)** }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"struct.base::JSONReader::ValueWithError" = type { %"class.absl::optional", %"class.std::__1::basic_string", i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.30 }
%union.anon.30 = type { %"class.base::Value" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTV25JSONStringValueSerializer = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.JSONStringValueSerializer*)* @_ZN25JSONStringValueSerializerD2Ev to i8*), i8* bitcast (void (%class.JSONStringValueSerializer*)* @_ZN25JSONStringValueSerializerD0Ev to i8*), i8* bitcast (i1 (%class.JSONStringValueSerializer*, %"class.base::Value"*)* @_ZN25JSONStringValueSerializer9SerializeERKN4base5ValueE to i8*)] }, align 8
@_ZTV27JSONStringValueDeserializer = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.JSONStringValueDeserializer*)* @_ZN27JSONStringValueDeserializerD2Ev to i8*), i8* bitcast (void (%class.JSONStringValueDeserializer*)* @_ZN27JSONStringValueDeserializerD0Ev to i8*), i8* bitcast (%"class.base::Value"* (%class.JSONStringValueDeserializer*, i32*, %"class.std::__1::basic_string"*)* @_ZN27JSONStringValueDeserializer11DeserializeEPiPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*)] }, align 8

@_ZN25JSONStringValueSerializerC1EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE = hidden unnamed_addr alias void (%class.JSONStringValueSerializer*, %"class.std::__1::basic_string"*), void (%class.JSONStringValueSerializer*, %"class.std::__1::basic_string"*)* @_ZN25JSONStringValueSerializerC2EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
@_ZN25JSONStringValueSerializerD1Ev = hidden unnamed_addr alias void (%class.JSONStringValueSerializer*), void (%class.JSONStringValueSerializer*)* @_ZN25JSONStringValueSerializerD2Ev
@_ZN27JSONStringValueDeserializerC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEi = hidden unnamed_addr alias void (%class.JSONStringValueDeserializer*, %"class.base::BasicStringPiece"*, i32), void (%class.JSONStringValueDeserializer*, %"class.base::BasicStringPiece"*, i32)* @_ZN27JSONStringValueDeserializerC2ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEi
@_ZN27JSONStringValueDeserializerD1Ev = hidden unnamed_addr alias void (%class.JSONStringValueDeserializer*), void (%class.JSONStringValueDeserializer*)* @_ZN27JSONStringValueDeserializerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN25JSONStringValueSerializerC2EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.JSONStringValueSerializer* nocapture, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.JSONStringValueSerializer, %class.JSONStringValueSerializer* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV25JSONStringValueSerializer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.JSONStringValueSerializer, %class.JSONStringValueSerializer* %0, i64 0, i32 1
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %4, align 8
  %5 = getelementptr inbounds %class.JSONStringValueSerializer, %class.JSONStringValueSerializer* %0, i64 0, i32 2
  store i8 0, i8* %5, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base15ValueSerializerD2Ev(%"class.base::ValueSerializer"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25JSONStringValueSerializerD2Ev(%class.JSONStringValueSerializer*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.JSONStringValueSerializer, %class.JSONStringValueSerializer* %0, i64 0, i32 0
  tail call void @_ZN4base15ValueSerializerD2Ev(%"class.base::ValueSerializer"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25JSONStringValueSerializerD0Ev(%class.JSONStringValueSerializer*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.JSONStringValueSerializer, %class.JSONStringValueSerializer* %0, i64 0, i32 0
  tail call void @_ZN4base15ValueSerializerD2Ev(%"class.base::ValueSerializer"* %2) #6
  %3 = bitcast %class.JSONStringValueSerializer* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN25JSONStringValueSerializer9SerializeERKN4base5ValueE(%class.JSONStringValueSerializer* nocapture readonly, %"class.base::Value"* dereferenceable(32)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.JSONStringValueSerializer, %class.JSONStringValueSerializer* %0, i64 0, i32 1
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.JSONStringValueSerializer, %class.JSONStringValueSerializer* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %9, i32 0, i32 4
  %11 = tail call zeroext i1 @_ZN4base10JSONWriter16WriteWithOptionsERKNS_5ValueEiPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* dereferenceable(32) %1, i32 %10, %"class.std::__1::basic_string"* nonnull %4, i64 200) #6
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i1 [ %11, %6 ], [ false, %2 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN25JSONStringValueSerializer17SerializeInternalERKN4base5ValueEb(%class.JSONStringValueSerializer* nocapture readonly, %"class.base::Value"* dereferenceable(32), i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.JSONStringValueSerializer, %class.JSONStringValueSerializer* %0, i64 0, i32 1
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = zext i1 %2 to i32
  %9 = getelementptr inbounds %class.JSONStringValueSerializer, %class.JSONStringValueSerializer* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = or i32 %8, 4
  %13 = select i1 %11, i32 %8, i32 %12
  %14 = tail call zeroext i1 @_ZN4base10JSONWriter16WriteWithOptionsERKNS_5ValueEiPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* dereferenceable(32) %1, i32 %13, %"class.std::__1::basic_string"* nonnull %5, i64 200) #6
  br label %15

15:                                               ; preds = %3, %7
  %16 = phi i1 [ %14, %7 ], [ false, %3 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN25JSONStringValueSerializer28SerializeAndOmitBinaryValuesERKN4base5ValueE(%class.JSONStringValueSerializer* nocapture readonly, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.JSONStringValueSerializer, %class.JSONStringValueSerializer* %0, i64 0, i32 1
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.JSONStringValueSerializer, %class.JSONStringValueSerializer* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %9, i32 1, i32 5
  %11 = tail call zeroext i1 @_ZN4base10JSONWriter16WriteWithOptionsERKNS_5ValueEiPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* dereferenceable(32) %1, i32 %10, %"class.std::__1::basic_string"* nonnull %4, i64 200) #6
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i1 [ %11, %6 ], [ false, %2 ]
  ret i1 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZN4base10JSONWriter16WriteWithOptionsERKNS_5ValueEiPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* dereferenceable(32), i32, %"class.std::__1::basic_string"*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27JSONStringValueDeserializerC2ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%class.JSONStringValueDeserializer* nocapture, %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), i32) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.JSONStringValueDeserializer, %class.JSONStringValueDeserializer* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV27JSONStringValueDeserializer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.JSONStringValueDeserializer, %class.JSONStringValueDeserializer* %0, i64 0, i32 1
  %6 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  %7 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false)
  %8 = getelementptr inbounds %class.JSONStringValueDeserializer, %class.JSONStringValueDeserializer* %0, i64 0, i32 2
  store i32 %2, i32* %8, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZN4base17ValueDeserializerD2Ev(%"class.base::ValueDeserializer"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27JSONStringValueDeserializerD2Ev(%class.JSONStringValueDeserializer*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.JSONStringValueDeserializer, %class.JSONStringValueDeserializer* %0, i64 0, i32 0
  tail call void @_ZN4base17ValueDeserializerD2Ev(%"class.base::ValueDeserializer"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27JSONStringValueDeserializerD0Ev(%class.JSONStringValueDeserializer*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.JSONStringValueDeserializer, %class.JSONStringValueDeserializer* %0, i64 0, i32 0
  tail call void @_ZN4base17ValueDeserializerD2Ev(%"class.base::ValueDeserializer"* %2) #6
  %3 = bitcast %class.JSONStringValueDeserializer* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::Value"* @_ZN27JSONStringValueDeserializer11DeserializeEPiPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%class.JSONStringValueDeserializer* nocapture readonly, i32*, %"class.std::__1::basic_string"*) unnamed_addr #2 align 2 {
  %4 = alloca %"struct.base::JSONReader::ValueWithError", align 8
  %5 = alloca %"class.base::Value", align 8
  %6 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 72, i1 false)
  %7 = getelementptr inbounds %class.JSONStringValueDeserializer, %class.JSONStringValueDeserializer* %0, i64 0, i32 1, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %class.JSONStringValueDeserializer, %class.JSONStringValueDeserializer* %0, i64 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %class.JSONStringValueDeserializer, %class.JSONStringValueDeserializer* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  call void @_ZN4base10JSONReader27ReadAndReturnValueWithErrorENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"struct.base::JSONReader::ValueWithError"* nonnull sret %4, i8* %8, i64 %10, i32 %12) #6
  %13 = load i8, i8* %6, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %5, %"class.base::Value"* dereferenceable(32) %16) #6
  %17 = call %"class.base::Value"* @_ZN4base5Value16ToUniquePtrValueES0_(%"class.base::Value"* nonnull %5) #6
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #6
  br label %37

18:                                               ; preds = %3
  %19 = icmp eq i32* %1, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %18
  store i32 1, i32* %1, align 4
  br label %21

21:                                               ; preds = %18, %20
  %22 = icmp eq %"class.std::__1::basic_string"* %2, null
  br i1 %22, label %37, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %4, i64 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #7
  br label %32

32:                                               ; preds = %23, %29
  %33 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %34 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 %34, i64 24, i1 false) #6
  %35 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 0, i8* %36, align 1
  store i8 0, i8* %34, align 8
  br label %37

37:                                               ; preds = %32, %21, %15
  %38 = phi %"class.base::Value"* [ %17, %15 ], [ null, %21 ], [ null, %32 ]
  call void @_ZN4base10JSONReader14ValueWithErrorD1Ev(%"struct.base::JSONReader::ValueWithError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #6
  ret %"class.base::Value"* %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base10JSONReader27ReadAndReturnValueWithErrorENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"struct.base::JSONReader::ValueWithError"* sret, i8*, i64, i32) local_unnamed_addr #5

declare %"class.base::Value"* @_ZN4base5Value16ToUniquePtrValueES0_(%"class.base::Value"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base10JSONReader14ValueWithErrorD1Ev(%"struct.base::JSONReader::ValueWithError"*) unnamed_addr #1

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
