; ModuleID = '../../third_party/blink/renderer/platform/scheduler/common/dummy_schedulers.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/common/dummy_schedulers.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.blink::AgentGroupScheduler" = type { %"class.blink::scheduler::WebAgentGroupScheduler" }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.blink::scheduler::WebThreadScheduler" = type { i32 (...)** }
%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler" = type { %"class.blink::FrameScheduler", %"class.std::__1::unique_ptr.10", %"class.base::WeakPtrFactory.16" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::PageScheduler"* }
%"class.base::WeakPtrFactory.16" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WebSchedulingTaskQueue" = type { i32 (...)** }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.74 }
%class.scoped_refptr.74 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.WTF::String" = type { %class.scoped_refptr.75 }
%class.scoped_refptr.75 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.76" }
%"struct.std::__1::atomic.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i32 }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.82" }>
%"class.base::RefCountedThreadSafe.82" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.81 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.blink::scheduler::WebResourceLoadingTaskRunnerHandle" = type { i32 (...)** }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type { %"class.blink::scheduler::ThreadSchedulerImpl", %"class.blink::scheduler::AgentSchedulingStrategy::Delegate", %"class.blink::scheduler::IdleHelper::Delegate", %"class.blink::scheduler::SchedulerHelper::Observer", %"class.blink::scheduler::RenderWidgetSignals::Observer", %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8, i8, [6 x i8], %"class.blink::scheduler::TraceableVariableController", %"struct.blink::scheduler::MainThreadSchedulerImpl::SchedulingSettings", %"class.std::__1::unique_ptr.106", %"class.blink::scheduler::MainThreadSchedulerHelper", %class.scoped_refptr.112, %"class.blink::scheduler::IdleHelper", %"class.std::__1::unique_ptr.293", %"class.blink::scheduler::RenderWidgetSignals", %"class.std::__1::unique_ptr.317", %class.scoped_refptr.112, %class.scoped_refptr.112, %class.scoped_refptr.112, %class.scoped_refptr.112, %"class.std::__1::map", %class.scoped_refptr.112, %class.scoped_refptr.112, %class.scoped_refptr.112, %class.scoped_refptr.81, %class.scoped_refptr.81, %class.scoped_refptr.81, %class.scoped_refptr.81, %class.scoped_refptr.81, %"class.blink::MemoryPurgeManager", %"class.std::__1::unique_ptr.340", %"class.blink::scheduler::NonWakingTimeDomain", %"class.base::RepeatingCallback.241", %"class.blink::scheduler::DeadlineTaskRunner", %"class.blink::scheduler::CancelableClosureHolder", %"class.base::RepeatingCallback.241", %"class.base::RepeatingCallback.353", %"class.std::__1::unique_ptr.354", %"struct.blink::scheduler::MainThreadSchedulerImpl::MainThreadOnly", %"class.base::Lock", %"struct.blink::scheduler::MainThreadSchedulerImpl::AnyThread", %"struct.blink::scheduler::MainThreadSchedulerImpl::CompositorThreadOnly", %class.PollableThreadSafeFlag, %class.PollableThreadSafeFlag, %"class.WTF::HashSet.513", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.base::WeakPtrFactory.517" }
%"class.blink::scheduler::ThreadSchedulerImpl" = type { %"class.blink::ThreadScheduler", %"class.blink::scheduler::WebThreadScheduler", %"class.v8::Isolate"* }
%"class.v8::Isolate" = type opaque
%"class.blink::scheduler::AgentSchedulingStrategy::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::IdleHelper::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::SchedulerHelper::Observer" = type { i32 (...)** }
%"class.blink::scheduler::RenderWidgetSignals::Observer" = type { i32 (...)** }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.blink::scheduler::TraceableVariableController" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.89", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.103", [4 x i8] }>
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91", %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64 }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { float }
%"struct.blink::scheduler::MainThreadSchedulerImpl::SchedulingSettings" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.std::__1::array", i8, i8 }
%"struct.std::__1::array" = type { [6 x i8] }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.base::sequence_manager::SequenceManager"* }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%"class.blink::scheduler::MainThreadSchedulerHelper" = type { %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %class.scoped_refptr.112, %class.scoped_refptr.112 }
%"class.blink::scheduler::SchedulerHelper" = type { %"class.base::sequence_manager::SequenceManager::Observer", %"class.base::sequence_manager::SequenceManager"*, %class.scoped_refptr.81, %"class.blink::scheduler::SchedulerHelper::Observer"*, %"class.blink::scheduler::UkmTaskSampler", %"class.absl::optional" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%"class.blink::scheduler::UkmTaskSampler" = type { double, double, %"class.std::__1::mersenne_twister_engine" }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::SimpleTaskExecutor" }
%"class.base::SimpleTaskExecutor" = type { %"class.base::TaskExecutor", %class.scoped_refptr.81, %"class.base::TaskExecutor"* }
%"class.base::TaskExecutor" = type { i32 (...)** }
%"class.blink::scheduler::IdleHelper" = type { %"class.base::TaskObserver", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate", %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, %class.scoped_refptr.114, %class.scoped_refptr.278, %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::IdleHelper::State", %"class.base::TimeDelta", i8, %"class.base::WeakPtr.291", %"class.base::WeakPtrFactory.292" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate" = type { i32 (...)** }
%class.scoped_refptr.114 = type { %"class.base::sequence_manager::TaskQueue"* }
%"class.base::sequence_manager::TaskQueue" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.115", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.116", %"class.base::WeakPtr.189", %class.scoped_refptr.119, %class.scoped_refptr.81, i32, i32, i8*, %"class.base::WeakPtrFactory.190" }
%"class.base::RefCountedThreadSafe.115" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr.119, %class.scoped_refptr.121, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%class.scoped_refptr.121 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.122", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.122" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.76", [4 x i8], %"class.base::WaitableEvent" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.123, i8, [7 x i8] }>
%class.scoped_refptr.123 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.124", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.124" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.125" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TimeDomain" = type { i32 (...)**, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::internal::IntrusiveHeap", i32, %class.scoped_refptr.119 }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"class.std::__1::__compressed_pair.129" }
%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp" = type { %"struct.base::sequence_manager::internal::DelayedWakeUp", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* }
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.134", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.140 }
%class.scoped_refptr.140 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.141", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.141" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional.142", i8, [7 x i8] }>
%"class.absl::optional.142" = type { %"class.absl::optional_internal::optional_data.143" }
%"class.absl::optional_internal::optional_data.143" = type { %"class.absl::optional_internal::optional_data_base.144" }
%"class.absl::optional_internal::optional_data_base.144" = type { %"class.absl::optional_internal::optional_data_dtor_base.145" }
%"class.absl::optional_internal::optional_data_dtor_base.145" = type { i8, %union.anon.146 }
%union.anon.146 = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional.142", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.173", %"class.base::RepeatingCallback.174", %"class.absl::optional.175", i8, [7 x i8], %"class.absl::optional.142", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type opaque
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.155", %"struct.std::__1::less" }>
%"class.std::__1::vector.155" = type { %"class.std::__1::__vector_base.156" }
%"class.std::__1::__vector_base.156" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.159" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.158, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array.157", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array.157" = type { [4 x i8*] }
%class.scoped_refptr.158 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.165", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.167" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory.172" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory.172" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::RepeatingCallback.173" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.174" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.175" = type { %"class.absl::optional_internal::optional_data.176" }
%"class.absl::optional_internal::optional_data.176" = type { %"class.absl::optional_internal::optional_data_base.177" }
%"class.absl::optional_internal::optional_data_base.177" = type { %"class.absl::optional_internal::optional_data_dtor_base.178" }
%"class.absl::optional_internal::optional_data_dtor_base.178" = type { i8, %union.anon.179 }
%union.anon.179 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr.119, %"class.std::__1::unique_ptr.180", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.697", i64, [64 x %"class.base::RepeatingCallback.241"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.180", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.std::__1::atomic.697" = type { %"struct.std::__1::__atomic_base.698" }
%"struct.std::__1::__atomic_base.698" = type { %"struct.std::__1::__atomic_base.699" }
%"struct.std::__1::__atomic_base.699" = type { %"struct.std::__1::__cxx_atomic_impl.700" }
%"struct.std::__1::__cxx_atomic_impl.700" = type { %"struct.std::__1::__cxx_atomic_base_impl.701" }
%"struct.std::__1::__cxx_atomic_base_impl.701" = type { i64 }
%"class.base::WeakPtr.189" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.119 = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe.120", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe.120" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.190" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.278 = type { %"class.blink::scheduler::SingleThreadIdleTaskRunner"* }
%"class.blink::scheduler::SingleThreadIdleTaskRunner" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.279", %class.scoped_refptr.81, %"class.std::__1::multimap", %"class.blink::scheduler::SingleThreadIdleTaskRunner::Delegate"*, %"class.base::trace_event::BlameContext"*, %"class.base::WeakPtr.289", %"class.base::WeakPtrFactory.290" }
%"class.base::RefCountedThreadSafe.279" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.base::WeakPtr.289" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.290" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::IdleHelper::State" = type { i32 (...)**, %"class.blink::scheduler::SchedulerHelper"*, %"class.blink::scheduler::IdleHelper::Delegate"*, i32, %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, i8*, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::WeakPtr.291" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.292" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::scheduler::TaskQueueThrottler"* }
%"class.blink::scheduler::TaskQueueThrottler" = type { %"class.blink::scheduler::BudgetPoolController", %"class.WTF::HashMap.296", %"class.base::RepeatingCallback.301", %class.scoped_refptr.81, %"class.blink::scheduler::ThreadSchedulerImpl"*, %"class.blink::scheduler::TraceableVariableController"*, %"class.base::TickClock"*, %"class.std::__1::unique_ptr.302", %"class.blink::scheduler::CancelableClosureHolder", %"class.absl::optional.142", i8, [7 x i8], %"class.WTF::HashMap.308", %"class.base::WeakPtrFactory.313" }
%"class.blink::scheduler::BudgetPoolController" = type { i32 (...)** }
%"class.WTF::HashMap.296" = type { %"class.WTF::HashTable.297" }
%"class.WTF::HashTable.297" = type <{ %"struct.WTF::KeyValuePair.300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.300" = type opaque
%"class.base::RepeatingCallback.301" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::scheduler::ThrottledTimeDomain"* }
%"class.blink::scheduler::ThrottledTimeDomain" = type opaque
%"class.WTF::HashMap.308" = type { %"class.WTF::HashTable.309" }
%"class.WTF::HashTable.309" = type <{ %"struct.WTF::KeyValuePair.312"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.312" = type opaque
%"class.base::WeakPtrFactory.313" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::scheduler::RenderWidgetSignals" = type { %"class.blink::scheduler::RenderWidgetSignals::Observer"*, i32, i32 }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.blink::scheduler::FindInPageBudgetPoolController"* }
%"class.blink::scheduler::FindInPageBudgetPoolController" = type <{ %"class.blink::scheduler::BudgetPoolController", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.std::__1::unique_ptr.320", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.blink::scheduler::CPUTimeBudgetPool"* }
%"class.blink::scheduler::CPUTimeBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.absl::optional.235", %"class.absl::optional.235", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter", %"class.base::TimeTicks", double, %"class.base::RepeatingCallback.240" }
%"class.blink::scheduler::BudgetPool.base" = type <{ i32 (...)**, i8*, %"class.blink::scheduler::BudgetPoolController"*, %"class.WTF::HashSet.231", i8 }>
%"class.WTF::HashSet.231" = type { %"class.WTF::HashTable.232" }
%"class.WTF::HashTable.232" = type <{ %"class.base::sequence_manager::TaskQueue"**, i32, i32, i32, [4 x i8] }>
%"class.absl::optional.235" = type { %"class.absl::optional_internal::optional_data.236" }
%"class.absl::optional_internal::optional_data.236" = type { %"class.absl::optional_internal::optional_data_base.237" }
%"class.absl::optional_internal::optional_data_base.237" = type { %"class.absl::optional_internal::optional_data_dtor_base.238" }
%"class.absl::optional_internal::optional_data_dtor_base.238" = type { i8, %union.anon.239 }
%union.anon.239 = type { %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableCounter" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableVariable" = type { i32 (...)**, %"class.blink::scheduler::TraceableVariableController"* }
%"class.base::RepeatingCallback.240" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.329" }
%"class.std::__1::__tree.329" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.330", %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%class.scoped_refptr.112 = type { %"class.blink::scheduler::MainThreadTaskQueue"* }
%"class.blink::scheduler::MainThreadTaskQueue" = type { %"class.base::RefCountedThreadSafe.113", %class.scoped_refptr.114, i32, %"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits", i8, %"class.absl::optional.191", %"class.absl::optional.196", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::AgentGroupSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.base::WeakPtrFactory.277" }
%"class.base::RefCountedThreadSafe.113" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.blink::scheduler::MainThreadTaskQueue::QueueTraits" = type { i8, i32 }
%"class.absl::optional.191" = type { %"class.absl::optional_internal::optional_data.192" }
%"class.absl::optional_internal::optional_data.192" = type { %"class.absl::optional_internal::optional_data_base.193" }
%"class.absl::optional_internal::optional_data_base.193" = type { %"class.absl::optional_internal::optional_data_dtor_base.194" }
%"class.absl::optional_internal::optional_data_dtor_base.194" = type { i8, %union.anon.195 }
%union.anon.195 = type { i32 }
%"class.absl::optional.196" = type { %"class.absl::optional_internal::optional_data.197" }
%"class.absl::optional_internal::optional_data.197" = type { %"class.absl::optional_internal::optional_data_base.198" }
%"class.absl::optional_internal::optional_data_base.198" = type { %"class.absl::optional_internal::optional_data_dtor_base.199" }
%"class.absl::optional_internal::optional_data_dtor_base.199" = type { i8, %union.anon.200 }
%union.anon.200 = type { i32 }
%"class.blink::scheduler::AgentGroupSchedulerImpl" = type { %"class.blink::AgentGroupScheduler", %class.scoped_refptr.112, %class.scoped_refptr.81, %class.scoped_refptr.112, %class.scoped_refptr.81, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::BrowserInterfaceBrokerProxy" }
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote", %"class.std::__1::map.685" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.679" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.518, %"class.std::__1::unique_ptr.636", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.158, i32 }>
%class.scoped_refptr.518 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.158, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.600", %"class.absl::optional.605", %"class.absl::optional.559", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque.624", %"class.std::__1::map.627", i8, [7 x i8], %class.scoped_refptr.158, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.519" }>
%"class.base::RefCountedThreadSafe.519" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.522 }
%union.anon.522 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.526", %"class.std::__1::unique_ptr.532", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.538" }
%"class.std::__1::unique_ptr.526" = type { %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.538" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.158, %"class.std::__1::unique_ptr.539", %"class.absl::optional.549", %"struct.std::__1::atomic.555", i8, i8, i8, i8, i32, i32, %"class.absl::optional.559", %"class.std::__1::unique_ptr.564", i8, i64, %class.scoped_refptr.596, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.598", %"class.base::WeakPtrFactory.599" }
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.158, i8, %"class.mojo::ScopedHandleBase.542", %class.scoped_refptr.543, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.544", i8*, %"class.base::WeakPtrFactory.545" }
%"class.mojo::ScopedHandleBase.542" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.543 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.544" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.545" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.549" = type { %"class.absl::optional_internal::optional_data.550" }
%"class.absl::optional_internal::optional_data.550" = type { %"class.absl::optional_internal::optional_data_base.551" }
%"class.absl::optional_internal::optional_data_base.551" = type { %"class.absl::optional_internal::optional_data_dtor_base.552" }
%"class.absl::optional_internal::optional_data_dtor_base.552" = type { i8, %union.anon.553 }
%union.anon.553 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.554", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.554" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.555" = type { %"struct.std::__1::__atomic_base.556" }
%"struct.std::__1::__atomic_base.556" = type { %"struct.std::__1::__cxx_atomic_impl.557" }
%"struct.std::__1::__cxx_atomic_impl.557" = type { %"struct.std::__1::__cxx_atomic_base_impl.558" }
%"struct.std::__1::__cxx_atomic_base_impl.558" = type { i8 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.567", i8, i64, %class.scoped_refptr.568, %class.scoped_refptr.592 }
%"class.base::RepeatingCallback.567" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.568 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.570", %"class.std::__1::map.581", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.569 }
%class.scoped_refptr.569 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.570" = type { %"class.std::__1::__tree.571" }
%"class.std::__1::__tree.571" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.572", %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.std::__1::map.581" = type { %"class.std::__1::__tree.582" }
%"class.std::__1::__tree.582" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%class.scoped_refptr.592 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.596 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.597 }
%class.scoped_refptr.597 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.696", [4 x i8], %"class.base::RepeatingCallback.241", %class.scoped_refptr.158, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.76", [4 x i8] }>
%"class.base::RefCountedThreadSafe.696" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.598" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.599" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.600" = type { %"class.absl::optional_internal::optional_data.601" }
%"class.absl::optional_internal::optional_data.601" = type { %"class.absl::optional_internal::optional_data_base.602" }
%"class.absl::optional_internal::optional_data_base.602" = type { %"class.absl::optional_internal::optional_data_dtor_base.603" }
%"class.absl::optional_internal::optional_data_dtor_base.603" = type { i8, %union.anon.604 }
%union.anon.604 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.605" = type { %"class.absl::optional_internal::optional_data.606" }
%"class.absl::optional_internal::optional_data.606" = type { %"class.absl::optional_internal::optional_data_base.607" }
%"class.absl::optional_internal::optional_data_base.607" = type { %"class.absl::optional_internal::optional_data_dtor_base.608" }
%"class.absl::optional_internal::optional_data_dtor_base.608" = type { i8, [7 x i8], %union.anon.609 }
%union.anon.609 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.559" = type { %"class.absl::optional_internal::optional_data.560" }
%"class.absl::optional_internal::optional_data.560" = type { %"class.absl::optional_internal::optional_data_base.561" }
%"class.absl::optional_internal::optional_data_base.561" = type { %"class.absl::optional_internal::optional_data_dtor_base.562" }
%"class.absl::optional_internal::optional_data_dtor_base.562" = type { i8, %union.anon.563 }
%union.anon.563 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.610 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.610 = type { %"class.std::__1::map.613" }
%"class.std::__1::map.613" = type { %"class.std::__1::__tree.614" }
%"class.std::__1::__tree.614" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.615", %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.base::circular_deque.624" = type { %"class.base::internal::VectorBuffer.625", i64, i64 }
%"class.base::internal::VectorBuffer.625" = type { %"class.std::__1::unique_ptr.626"*, i64 }
%"class.std::__1::unique_ptr.626" = type opaque
%"class.std::__1::map.627" = type { %"class.std::__1::__tree.628" }
%"class.std::__1::__tree.628" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.629", %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.std::__1::unique_ptr.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.241", %"class.base::OnceCallback.639", %"class.absl::optional.235", %"class.absl::optional.640", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.646", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.654", %"class.std::__1::map.665", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.674", i8, %class.scoped_refptr.158, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.675" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.639" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.640" = type { %"class.absl::optional_internal::optional_data.641" }
%"class.absl::optional_internal::optional_data.641" = type { %"class.absl::optional_internal::optional_data_base.642" }
%"class.absl::optional_internal::optional_data_base.642" = type { %"class.absl::optional_internal::optional_data_dtor_base.643" }
%"class.absl::optional_internal::optional_data_dtor_base.643" = type { i8, %union.anon.644 }
%union.anon.644 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.158, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.339" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::WeakPtrFactory.339" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.645 }
%class.scoped_refptr.645 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.649", %class.scoped_refptr.650 }
%"class.base::RepeatingCallback.649" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.650 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.519", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.654" = type { %"class.std::__1::__tree.655" }
%"class.std::__1::__tree.655" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.656", %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.std::__1::map.665" = type { %"class.std::__1::__tree.666" }
%"class.std::__1::__tree.666" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.667", %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.base::OnceCallback.674" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.675" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.679" = type { %"class.std::__1::__compressed_pair.680" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.685" = type { %"class.std::__1::__tree.686" }
%"class.std::__1::__tree.686" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.687", %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.blink::scheduler::FrameSchedulerImpl" = type { %"class.blink::FrameScheduler", %"class.blink::scheduler::FrameTaskQueueController::Delegate", i32, i8, %"class.base::TimeDelta", %"class.blink::scheduler::TraceableVariableController", %"class.std::__1::unique_ptr.201", %"class.WTF::HashMap.222", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::PageSchedulerImpl"*, %"class.blink::FrameScheduler::Delegate"*, %"class.base::trace_event::BlameContext"*, i32, [4 x i8], %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.251", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::StateTracer", %"class.blink::scheduler::TraceableState", %"class.WTF::Vector.253", %"class.blink::scheduler::TraceableState", i32, [4 x i8], %"class.blink::scheduler::TraceableState", i64, %"class.base::flat_map", %"class.std::__1::bitset", %"class.blink::scheduler::TraceableState", i64, i8, i8, [6 x i8], %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.268", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.std::__1::unique_ptr.270", %"class.base::WeakPtrFactory.276", %"class.base::WeakPtrFactory.276", %"class.base::WeakPtrFactory.276" }
%"class.blink::scheduler::FrameTaskQueueController::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::scheduler::FrameTaskQueueController"* }
%"class.blink::scheduler::FrameTaskQueueController" = type { %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::FrameSchedulerImpl"*, %"class.blink::scheduler::FrameTaskQueueController::Delegate"*, %"class.WTF::HashMap.204", %"class.WTF::HashSet", %"class.WTF::HashMap.212", %"class.WTF::Vector" }
%"class.WTF::HashMap.204" = type { %"class.WTF::HashTable.205" }
%"class.WTF::HashTable.205" = type <{ %"struct.WTF::KeyValuePair.208"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.208" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.209" }
%"class.WTF::HashTable.209" = type <{ %class.scoped_refptr.112*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.212" = type { %"class.WTF::HashTable.213" }
%"class.WTF::HashTable.213" = type <{ %"struct.WTF::KeyValuePair.216"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.216" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.WTF::HashMap.222" = type { %"class.WTF::HashTable.223" }
%"class.WTF::HashTable.223" = type <{ %"struct.WTF::KeyValuePair.226"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.226" = type opaque
%"class.blink::scheduler::PageSchedulerImpl" = type { %"class.blink::PageScheduler", i8, [7 x i8], %"class.blink::scheduler::TraceableVariableController", %"class.WTF::HashSet.227", %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::scheduler::AgentGroupSchedulerImpl"*, i32, %"class.base::TimeTicks", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::scheduler::CPUTimeBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::scheduler::WakeUpBudgetPool"*, %"class.blink::PageScheduler::Delegate"*, %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.blink::scheduler::CancelableClosureHolder", %"class.base::TimeDelta", i8, %"class.base::TimeDelta", i8, %"class.blink::TaskHandle", %"class.base::TimeTicks", %"class.std::__1::unique_ptr.244", %"class.base::WeakPtrFactory.250" }
%"class.WTF::HashSet.227" = type { %"class.WTF::HashTable.228" }
%"class.WTF::HashTable.228" = type <{ %"class.blink::scheduler::FrameSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.blink::scheduler::WakeUpBudgetPool" = type { %"class.blink::scheduler::BudgetPool.base", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, %"class.absl::optional.142" }
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.243 }
%class.scoped_refptr.243 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::scheduler::PageSchedulerImpl::PageLifecycleStateTracker"* }
%"class.blink::scheduler::PageSchedulerImpl::PageLifecycleStateTracker" = type <{ %"class.blink::scheduler::PageSchedulerImpl"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.250" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::TraceableState.251" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::StateTracer.base" = type <{ i8*, i8 }>
%"class.blink::scheduler::StateTracer" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::Vector.253" = type { %"class.WTF::VectorBuffer.254" }
%"class.WTF::VectorBuffer.254" = type { %"class.WTF::VectorBufferBase.255" }
%"class.WTF::VectorBufferBase.255" = type { %"class.blink::scheduler::MainThreadTaskQueue::ThrottleHandle"*, i32, i32 }
%"class.blink::scheduler::MainThreadTaskQueue::ThrottleHandle" = type { %"class.base::WeakPtr.256", %"class.base::WeakPtr.257" }
%"class.base::WeakPtr.256" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.257" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.260" }
%"class.std::__1::vector.260" = type { %"class.std::__1::__vector_base.261" }
%"class.std::__1::__vector_base.261" = type { %"struct.std::__1::pair.262"*, %"struct.std::__1::pair.262"*, %"class.std::__1::__compressed_pair.263" }
%"struct.std::__1::pair.262" = type opaque
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::pair.262"* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::scheduler::TraceableState.268" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableState" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.power_scheduler::PowerModeVoter"* }
%"class.power_scheduler::PowerModeVoter" = type { %"class.power_scheduler::PowerModeVoter::Delegate"* }
%"class.power_scheduler::PowerModeVoter::Delegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory.276" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.277" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::MemoryPurgeManager" = type { i8, i8, i32, i32, %"class.base::OneShotTimer" }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.blink::scheduler::AutoAdvancingVirtualTimeDomain"* }
%"class.blink::scheduler::AutoAdvancingVirtualTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.base::TaskObserver", i32, i32, i8, %"class.blink::scheduler::SchedulerHelper"*, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::Lock", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::Time", %"class.base::Time", %"class.std::__1::unique_ptr.344" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.343" }
%"class.base::time_internal::TimeBase.343" = type { i64 }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.base::subtle::ScopedTimeClockOverrides"* }
%"class.base::subtle::ScopedTimeClockOverrides" = type { i8 }
%"class.blink::scheduler::NonWakingTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.base::TickClock"* }
%"class.blink::scheduler::DeadlineTaskRunner" = type { %"class.blink::scheduler::CancelableClosureHolder", %"class.base::RepeatingCallback.241", %"class.base::TimeTicks", %class.scoped_refptr.81 }
%"class.blink::scheduler::CancelableClosureHolder" = type { %"class.base::RepeatingCallback.241", %"class.base::internal::CancelableCallbackImpl" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::RepeatingCallback.241", %"class.base::WeakPtrFactory.242" }
%"class.base::WeakPtrFactory.242" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback.241" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.353" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.blink::scheduler::AgentSchedulingStrategy"* }
%"class.blink::scheduler::AgentSchedulingStrategy" = type { i32 (...)** }
%"struct.blink::scheduler::MainThreadSchedulerImpl::MainThreadOnly" = type { %"class.blink::scheduler::IdleTimeEstimator", %"class.blink::scheduler::TraceableState.379", %"class.blink::scheduler::MainThreadSchedulerImpl::Policy", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.blink::scheduler::TraceableCounter.383", %"class.blink::scheduler::TraceableCounter.384", %"class.blink::scheduler::TraceableObjectState", %"class.blink::scheduler::TraceableState.392", %"class.absl::optional.396", %"class.blink::scheduler::TraceableState.392", %"class.blink::scheduler::TraceableState.408", %"class.blink::scheduler::TraceableState.408", %"class.blink::scheduler::TraceableState.410", %"class.blink::scheduler::TraceableState.410", %"class.blink::scheduler::TraceableState.410", %"class.blink::scheduler::TraceableState.410", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState.392", %"class.blink::scheduler::TraceableState.410", %"class.blink::scheduler::TraceableState.410", %"class.blink::scheduler::TraceableState.410", %"class.base::TimeTicks", %"class.WTF::HashSet.414", %"class.base::ObserverList.418", %"class.blink::scheduler::MainThreadMetricsHelper", %"class.blink::scheduler::TraceableState.439", %"class.blink::scheduler::TraceableState.441", %"class.blink::scheduler::TraceableState.452", %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeDelta", i32, i32, i32, i8, %"class.std::__1::stack", i32, [4 x i8], %"class.blink::scheduler::TraceableState.408", %"class.WTF::Vector.466", %"class.blink::scheduler::CompositorPriorityExperiments", i8, [7 x i8], %"class.blink::scheduler::TraceableState.477", %"class.WTF::Vector.479", %"class.std::__1::unique_ptr.270" }
%"class.blink::scheduler::IdleTimeEstimator" = type <{ %"class.base::TaskObserver", %"class.cc::RollingTimeDeltaHistory", %"class.base::TickClock"*, double, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", i32, i8, [3 x i8] }>
%"class.cc::RollingTimeDeltaHistory" = type { %"class.std::__1::multiset", %"class.base::circular_deque", i64, %"class.base::flat_map.369" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.360" }
%"class.std::__1::__tree.360" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.361", %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::__tree_const_iterator"*, i64 }
%"class.std::__1::__tree_const_iterator" = type opaque
%"class.base::flat_map.369" = type { %"class.base::internal::flat_tree.370" }
%"class.base::internal::flat_tree.370" = type { %"class.std::__1::vector.371" }
%"class.std::__1::vector.371" = type { %"class.std::__1::__vector_base.372" }
%"class.std::__1::__vector_base.372" = type { %"struct.std::__1::pair.373"*, %"struct.std::__1::pair.373"*, %"class.std::__1::__compressed_pair.374" }
%"struct.std::__1::pair.373" = type opaque
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::pair.373"* }
%"class.blink::scheduler::TraceableState.379" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.381", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::StateTracer.base.381" = type <{ i8*, i8 }>
%"class.blink::scheduler::MainThreadSchedulerImpl::Policy" = type { i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32 }
%"class.blink::scheduler::TraceableCounter.383" = type { %"class.blink::scheduler::TraceableVariable", i8*, double (%"class.base::TimeDelta"*)*, %"class.base::TimeDelta" }
%"class.blink::scheduler::TraceableCounter.384" = type <{ %"class.blink::scheduler::TraceableVariable", i8*, double (i32*)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableObjectState" = type { %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::ProtoStateTracer.base", i32, void (%"class.perfetto::protos::pbzero::TrackEvent"*, i32)* }
%"class.blink::scheduler::ProtoStateTracer.base" = type <{ i8*, i8 }>
%"class.perfetto::protos::pbzero::TrackEvent" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list.385" }
%"class.std::__1::list.385" = type { %"class.std::__1::__list_imp.386" }
%"class.std::__1::__list_imp.386" = type { %"struct.std::__1::__list_node_base.387", %"class.std::__1::__compressed_pair.388" }
%"struct.std::__1::__list_node_base.387" = type { %"struct.std::__1::__list_node_base.387"*, %"struct.std::__1::__list_node_base.387"* }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.absl::optional.396" = type { %"class.absl::optional_internal::optional_data.397" }
%"class.absl::optional_internal::optional_data.397" = type { %"class.absl::optional_internal::optional_data_base.398" }
%"class.absl::optional_internal::optional_data_base.398" = type { %"class.absl::optional_internal::optional_data_dtor_base.399" }
%"class.absl::optional_internal::optional_data_dtor_base.399" = type { i8, %union.anon.400 }
%union.anon.400 = type { %"class.base::ScopedSampleMetadata" }
%"class.base::ScopedSampleMetadata" = type { i64, %"class.absl::optional.401" }
%"class.absl::optional.401" = type { %"class.absl::optional_internal::optional_data.402" }
%"class.absl::optional_internal::optional_data.402" = type { %"class.absl::optional_internal::optional_data_base.403" }
%"class.absl::optional_internal::optional_data_base.403" = type { %"class.absl::optional_internal::optional_data_dtor_base.404" }
%"class.absl::optional_internal::optional_data_dtor_base.404" = type { i8, %union.anon.405 }
%union.anon.405 = type { i64 }
%"class.blink::scheduler::TraceableState.392" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.394", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.blink::scheduler::StateTracer.base.394" = type <{ i8*, i8 }>
%"class.blink::scheduler::TraceableState.410" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.412", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.blink::scheduler::StateTracer.base.412" = type <{ i8*, i8 }>
%"class.WTF::HashSet.414" = type { %"class.WTF::HashTable.415" }
%"class.WTF::HashTable.415" = type <{ %"class.blink::scheduler::PageSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.base::ObserverList.418" = type <{ %"class.std::__1::vector.165", %"class.base::LinkedList.419", i64, i32, [4 x i8] }>
%"class.base::LinkedList.419" = type { %"class.base::LinkNode.420" }
%"class.base::LinkNode.420" = type { %"class.base::internal::LinkNodeBase" }
%"class.blink::scheduler::MainThreadMetricsHelper" = type <{ %"class.blink::scheduler::MetricsHelper", %"class.blink::scheduler::MainThreadSchedulerImpl"*, i8, [7 x i8], %"class.absl::optional.142", %"class.blink::scheduler::ThreadLoadTracker", %"class.blink::scheduler::ThreadLoadTracker", %"class.blink::scheduler::ThreadLoadTracker", %"class.scheduling_metrics::TaskDurationMetricReporter.438", %"class.scheduling_metrics::TaskDurationMetricReporter.438", %"class.scheduling_metrics::TaskDurationMetricReporter.438", %"class.scheduling_metrics::TaskDurationMetricReporter.438", %"class.scheduling_metrics::TaskDurationMetricReporter.438", %"class.scheduling_metrics::TaskDurationMetricReporter.438", %"class.scheduling_metrics::TaskDurationMetricReporter.438", %"class.scheduling_metrics::TaskDurationMetricReporter.438", %"class.scheduling_metrics::TotalDurationMetricReporter", i32, [4 x i8], %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.blink::scheduler::MetricsHelper" = type { i32, %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::TaskDurationMetricReporter.436", %"class.scheduling_metrics::TaskDurationMetricReporter.436", %"class.scheduling_metrics::TaskDurationMetricReporter.436", %"class.scheduling_metrics::TaskDurationMetricReporter.436", %"class.scheduling_metrics::TaskDurationMetricReporter.436", %"class.scheduling_metrics::TaskDurationMetricReporter.436" }
%"class.scheduling_metrics::ThreadMetrics" = type { i32, i8, %"class.base::ThreadTicks", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.422" }
%"class.base::time_internal::TimeBase.422" = type { i64 }
%"class.scheduling_metrics::TaskDurationMetricReporter" = type { %"class.std::__1::unique_ptr.423" }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.base::ScaledLinearHistogram"* }
%"class.base::ScaledLinearHistogram" = type { %"class.base::HistogramBase"*, i32, %"class.std::__1::vector.426" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.76", [4 x i8] }>
%"class.std::__1::vector.426" = type { %"class.std::__1::__vector_base.427" }
%"class.std::__1::__vector_base.427" = type { i32*, i32*, %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { i32* }
%"class.scheduling_metrics::TaskDurationMetricReporter.436" = type { %"class.std::__1::unique_ptr.423" }
%"class.blink::scheduler::ThreadLoadTracker" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", i32, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::RepeatingCallback.437" }
%"class.base::RepeatingCallback.437" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.scheduling_metrics::TaskDurationMetricReporter.438" = type { %"class.std::__1::unique_ptr.423" }
%"class.scheduling_metrics::TotalDurationMetricReporter" = type { %"class.absl::optional.235", %"class.base::HistogramBase"*, %"class.base::HistogramBase"* }
%"class.blink::scheduler::TraceableState.439" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.394", [7 x i8], void (i8*)*, i8* (i32)*, i32, [4 x i8] }>
%"class.blink::scheduler::TraceableState.441" = type { %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", void (i8*)*, i8* (i64, i64)*, %"class.absl::optional.442" }
%"class.absl::optional.442" = type { %"class.absl::optional_internal::optional_data.443" }
%"class.absl::optional_internal::optional_data.443" = type { %"class.absl::optional_internal::optional_data_base.444" }
%"class.absl::optional_internal::optional_data_base.444" = type { %"class.absl::optional_internal::optional_data_dtor_base.445" }
%"class.absl::optional_internal::optional_data_dtor_base.445" = type { i8, %union.anon.446 }
%union.anon.446 = type { %"struct.blink::scheduler::MainThreadSchedulerImpl::TaskDescriptionForTracing" }
%"struct.blink::scheduler::MainThreadSchedulerImpl::TaskDescriptionForTracing" = type { i8, %"class.absl::optional.447" }
%"class.absl::optional.447" = type { %"class.absl::optional_internal::optional_data.448" }
%"class.absl::optional_internal::optional_data.448" = type { %"class.absl::optional_internal::optional_data_base.449" }
%"class.absl::optional_internal::optional_data_base.449" = type { %"class.absl::optional_internal::optional_data_dtor_base.450" }
%"class.absl::optional_internal::optional_data_dtor_base.450" = type { i8, %union.anon.451 }
%union.anon.451 = type { i32 }
%"class.blink::scheduler::TraceableState.452" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base", [7 x i8], void (i8*)*, i8* (i16)*, %"class.absl::optional.453", [6 x i8] }>
%"class.absl::optional.453" = type { %"class.absl::optional_internal::optional_data.454" }
%"class.absl::optional_internal::optional_data.454" = type { %"class.absl::optional_internal::optional_data_base.455" }
%"class.absl::optional_internal::optional_data_base.455" = type { %"class.absl::optional_internal::optional_data_dtor_base.456" }
%"class.absl::optional_internal::optional_data_dtor_base.456" = type { i8, %union.anon.457 }
%union.anon.457 = type { i8 }
%"class.std::__1::stack" = type { %"class.std::__1::vector.459" }
%"class.std::__1::vector.459" = type { %"class.std::__1::__vector_base.460" }
%"class.std::__1::__vector_base.460" = type { %class.scoped_refptr.112*, %class.scoped_refptr.112*, %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %class.scoped_refptr.112* }
%"class.blink::scheduler::TraceableState.408" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.381", [7 x i8], void (i8*)*, i8* (i1)*, i8, [7 x i8] }>
%"class.WTF::Vector.466" = type { %"class.WTF::VectorBuffer.467" }
%"class.WTF::VectorBuffer.467" = type { %"class.WTF::VectorBufferBase.468" }
%"class.WTF::VectorBufferBase.468" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::scheduler::CompositorPriorityExperiments" = type <{ %"class.blink::scheduler::MainThreadSchedulerImpl"*, i32, i8, i8, [2 x i8], %"class.base::TimeTicks", %"class.base::TimeDelta", i8, [7 x i8], %"class.std::__1::unique_ptr.471", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController"* }
%"class.blink::scheduler::CompositorPriorityExperiments::CompositorBudgetPoolController" = type <{ %"class.blink::scheduler::BudgetPoolController", %"class.blink::scheduler::CompositorPriorityExperiments"*, %"class.std::__1::unique_ptr.320", i8, [7 x i8] }>
%"class.blink::scheduler::TraceableState.477" = type <{ %"class.blink::scheduler::TraceableVariable", %"class.blink::scheduler::StateTracer.base.381", [7 x i8], void (i8*)*, i8* (i8)*, i8, [7 x i8] }>
%"class.WTF::Vector.479" = type { %"class.WTF::VectorBuffer.480" }
%"class.WTF::VectorBuffer.480" = type { %"class.WTF::VectorBufferBase.481" }
%"class.WTF::VectorBufferBase.481" = type { %"struct.blink::scheduler::MainThreadSchedulerImpl::AgentGroupSchedulerScope"*, i32, i32 }
%"struct.blink::scheduler::MainThreadSchedulerImpl::AgentGroupSchedulerScope" = type { %"class.std::__1::unique_ptr.482", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::scheduler::WebAgentGroupScheduler"*, %class.scoped_refptr.81, %class.scoped_refptr.81, i8*, i8* }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.base::ThreadTaskRunnerHandleOverride"* }
%"class.base::ThreadTaskRunnerHandleOverride" = type <{ %"class.absl::optional.485", %class.scoped_refptr.81, %"class.absl::optional.490", [6 x i8] }>
%"class.absl::optional.485" = type { %"class.absl::optional_internal::optional_data.486" }
%"class.absl::optional_internal::optional_data.486" = type { %"class.absl::optional_internal::optional_data_base.487" }
%"class.absl::optional_internal::optional_data_base.487" = type { %"class.absl::optional_internal::optional_data_dtor_base.488" }
%"class.absl::optional_internal::optional_data_dtor_base.488" = type { i8, %union.anon.489 }
%union.anon.489 = type { %"class.base::ThreadTaskRunnerHandle" }
%"class.base::ThreadTaskRunnerHandle" = type { %class.scoped_refptr.81, %"class.base::SequencedTaskRunnerHandle" }
%"class.base::SequencedTaskRunnerHandle" = type { %class.scoped_refptr.158 }
%"class.absl::optional.490" = type { %"class.absl::optional_internal::optional_data.491" }
%"class.absl::optional_internal::optional_data.491" = type { %"class.absl::optional_internal::optional_data_base.492" }
%"class.absl::optional_internal::optional_data_base.492" = type { %"class.absl::optional_internal::optional_data_dtor_base.493" }
%"class.absl::optional_internal::optional_data_dtor_base.493" = type { i8, %union.anon.494 }
%union.anon.494 = type { %"class.base::RunLoop::ScopedDisallowRunning" }
%"class.base::RunLoop::ScopedDisallowRunning" = type { i8 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.blink::scheduler::MainThreadSchedulerImpl::AnyThread" = type { %"class.blink::scheduler::PendingUserInput::Monitor", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::scheduler::UserModel", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableState", %"class.blink::scheduler::TraceableCounter.505" }
%"class.blink::scheduler::PendingUserInput::Monitor" = type { %"class.WTF::HashMap.500" }
%"class.WTF::HashMap.500" = type { %"class.WTF::HashTable.501" }
%"class.WTF::HashTable.501" = type <{ %"struct.WTF::KeyValuePair.504"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.504" = type opaque
%"class.blink::scheduler::UserModel" = type <{ i32, [4 x i8], %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.blink::scheduler::TraceableCounter.505" = type <{ %"class.blink::scheduler::TraceableVariable", i8*, double (i32*)*, i32, [4 x i8] }>
%"struct.blink::scheduler::MainThreadSchedulerImpl::CompositorThreadOnly" = type { i32, %"class.std::__1::unique_ptr.507" }
%"class.std::__1::unique_ptr.507" = type { %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.base::ThreadChecker"* }
%class.PollableThreadSafeFlag = type { i32, %"class.base::Lock"* }
%"class.WTF::HashSet.513" = type { %"class.WTF::HashTable.514" }
%"class.WTF::HashTable.514" = type <{ %"class.blink::scheduler::AgentGroupSchedulerImpl"**, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.517" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.75 }
%"class.blink::mojom::blink::PauseSubresourceLoadingHandle" = type { i32 (...)** }
%"class.WTF::HashSet.708" = type { %"class.WTF::HashTable.709" }
%"class.WTF::HashTable.709" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr.712" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler" = type { %"class.blink::PageScheduler", %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::scheduler::WebAgentGroupScheduler"* }
%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler" = type { %"class.blink::AgentGroupScheduler", %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::scheduler::WebThreadScheduler"* }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler" = type { %"class.blink::ThreadScheduler" }
%"class.base::OnceCallback.713" = type { %"class.base::internal::CallbackBase" }
%"class.blink::RAILModeObserver" = type { i32 (...)** }
%"class.blink::scheduler::WebThreadScheduler::RendererPauseHandle" = type { i32 (...)** }
%"class.WTF::Vector.720" = type { %"class.WTF::VectorBuffer.721" }
%"class.WTF::VectorBuffer.721" = type { %"class.WTF::VectorBufferBase.722" }
%"class.WTF::VectorBufferBase.722" = type { %"class.blink::WebInputEventAttribution"*, i32, i32 }
%"class.blink::WebInputEventAttribution" = type { i32, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.blink::scheduler::NonMainThreadSchedulerImpl" = type opaque
%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler" = type { %"class.blink::scheduler::WebThreadScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler" }
%"class.blink::Thread" = type { i32 (...)** }
%"struct.viz::BeginFrameArgs" = type opaque
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.blink::scheduler::(anonymous namespace)::SimpleThread" = type { %"class.blink::Thread", %"class.blink::ThreadScheduler"* }
%"class.base::sequence_manager::TaskTimeObserver" = type { i32 (...)** }

$_ZN5blink14FrameScheduler16ToFrameSchedulerEv = comdat any

$_ZNK5blink22FrameOrWorkerScheduler23CalculateLifecycleStateENS0_12ObserverTypeE = comdat any

$_ZN5blink15ThreadSchedulerD2Ev = comdat any

$_ZNK5blink15ThreadScheduler23GetPendingUserInputInfoEb = comdat any

$_ZNK5blink15ThreadScheduler25IsBeginMainFrameScheduledEv = comdat any

$_ZN5blink15ThreadScheduler18OnSafepointEnteredEv = comdat any

$_ZN5blink15ThreadScheduler17OnSafepointExitedEv = comdat any

$_ZN5blink15ThreadScheduler32GetWebMainThreadSchedulerForTestEv = comdat any

$_ZN5blink6Thread4InitEv = comdat any

$_ZN5blink6Thread19AddTaskTimeObserverEPN4base16sequence_manager16TaskTimeObserverE = comdat any

$_ZN5blink6Thread22RemoveTaskTimeObserverEPN4base16sequence_manager16TaskTimeObserverE = comdat any

$_ZN5blink6Thread16ShutdownOnThreadEv = comdat any

$_ZNK5blink6Thread18IsSimpleMainThreadEv = comdat any

@_ZTVN5blink9scheduler12_GLOBAL__N_119DummyFrameSchedulerE = internal unnamed_addr constant { [40 x i8*] } { [40 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameSchedulerD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameSchedulerD0Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*, i8)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler36SetPreemptedForCooperativeSchedulingEN4base11StrongAliasINS_12PreemptedTagEbEE to i8*), i8* bitcast (%"class.blink::WebSchedulingTaskQueue"* (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*, i32)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler28CreateWebSchedulingTaskQueueENS_21WebSchedulingPriorityE to i8*), i8* bitcast (%"class.blink::FrameScheduler"* (%"class.blink::FrameScheduler"*)* @_ZN5blink14FrameScheduler16ToFrameSchedulerEv to i8*), i8* bitcast (i32 (%"class.blink::FrameOrWorkerScheduler"*, i32)* @_ZNK5blink22FrameOrWorkerScheduler23CalculateLifecycleStateENS0_12ObserverTypeE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler21OnStartedUsingFeatureENS0_26WebSchedulerTrackedFeatureERKNS_16SchedulingPolicyE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*, i32, %"struct.blink::SchedulingPolicy"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler21OnStoppedUsingFeatureENS0_26WebSchedulerTrackedFeatureERKNS_16SchedulingPolicyE to i8*), i8* bitcast (void (%"class.base::WeakPtr"*, %"class.blink::FrameOrWorkerScheduler"*)* @_ZN5blink22FrameOrWorkerScheduler23GetDocumentBoundWeakPtrEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*, i1)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler15SetFrameVisibleEb to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZNK5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler14IsFrameVisibleEv to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZNK5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler13IsPageVisibleEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*, i1)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler9SetPausedEb to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*, i1)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler38SetShouldReportPostedTasksWhenDisabledEb to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*, i1)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler25SetCrossOriginToMainFrameEb to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZNK5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler24IsCrossOriginToMainFrameEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*, i1)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler12SetIsAdFrameEb to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZNK5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler9IsAdFrameEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*, %"class.WTF::String"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler14TraceUrlChangeERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*, i64)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler11AddTaskTimeEN4base9TimeDeltaE to i8*), i8* bitcast (i32 (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZNK5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler12GetFrameTypeEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*, i8)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler13GetTaskRunnerENS_8TaskTypeE to i8*), i8* bitcast (%"class.blink::scheduler::WebResourceLoadingTaskRunnerHandle"* (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler37CreateResourceLoadingTaskRunnerHandleEv to i8*), i8* bitcast (%"class.blink::scheduler::WebResourceLoadingTaskRunnerHandle"* (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler53CreateResourceLoadingMaybeUnfreezableTaskRunnerHandleEv to i8*), i8* bitcast (%"class.blink::PageScheduler"* (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZNK5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler16GetPageSchedulerEv to i8*), i8* bitcast (%"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler22GetAgentGroupSchedulerEv to i8*), i8* bitcast (void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*, %"class.WTF::String"*, i32)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler32CreateWebScopedVirtualTimePauserERKN3WTF6StringENS_26WebScopedVirtualTimePauser19VirtualTaskDurationE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*, i1)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler23DidStartProvisionalLoadEb to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*, i1, i32)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler24DidCommitProvisionalLoadEbNS_14FrameScheduler14NavigationTypeE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler33OnFirstContentfulPaintInMainFrameEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler22OnFirstMeaningfulPaintEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler6OnLoadEv to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZNK5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler33IsExemptFromBudgetBasedThrottlingEv to i8*), i8* bitcast (i64 (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler14GetUkmSourceIdEv to i8*), i8* bitcast (%"class.blink::mojom::blink::PauseSubresourceLoadingHandle"* (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler32GetPauseSubresourceLoadingHandleEv to i8*), i8* bitcast (void (%"class.WTF::HashSet.708"*, %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler50GetActiveFeaturesTrackedForBackForwardCacheMetricsEv to i8*), i8* bitcast (void (%"class.base::WeakPtr.712"*, %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler10GetWeakPtrEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler36ReportActiveSchedulerTrackedFeaturesEv to i8*)] }, align 8
@_ZTVN5blink9scheduler12_GLOBAL__N_118DummyPageSchedulerE = internal unnamed_addr constant { [30 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageSchedulerD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageSchedulerD0Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler23OnTitleOrFaviconUpdatedEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*, i1)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler14SetPageVisibleEb to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*, i1)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler13SetPageFrozenEb to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*, i1)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler24SetPageBackForwardCachedEb to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*, i1)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler14OnFocusChangedEb to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*, i1)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler13SetKeepActiveEb to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*)* @_ZNK5blink9scheduler12_GLOBAL__N_118DummyPageScheduler16IsMainFrameLocalEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*, i1)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler19SetIsMainFrameLocalEb to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler33OnLocalMainFrameNetworkAlmostIdleEv to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*)* @_ZNK5blink9scheduler12_GLOBAL__N_118DummyPageScheduler20IsInBackForwardCacheEv to i8*), i8* bitcast (%"class.blink::FrameScheduler"* (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*, %"class.blink::FrameScheduler::Delegate"*, %"class.base::trace_event::BlameContext"*, i32)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler20CreateFrameSchedulerEPNS_14FrameScheduler8DelegateEPN4base11trace_event12BlameContextENS3_9FrameTypeE to i8*), i8* bitcast (i64 (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler17EnableVirtualTimeEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler28DisableVirtualTimeForTestingEv to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*)* @_ZNK5blink9scheduler12_GLOBAL__N_118DummyPageScheduler27VirtualTimeAllowedToAdvanceEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*, i64)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler21SetInitialVirtualTimeEN4base4TimeE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*, i64)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler27SetInitialVirtualTimeOffsetEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*, i32)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler20SetVirtualTimePolicyENS_13PageScheduler17VirtualTimePolicyE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*, i64, %"class.base::OnceCallback"*)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler22GrantVirtualTimeBudgetEN4base9TimeDeltaENS3_12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*, i32)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler36SetMaxVirtualTimeTaskStarvationCountEi to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*, i1)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler17AudioStateChangedEb to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*)* @_ZNK5blink9scheduler12_GLOBAL__N_118DummyPageScheduler14IsAudioPlayingEv to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*)* @_ZNK5blink9scheduler12_GLOBAL__N_118DummyPageScheduler33IsExemptFromBudgetBasedThrottlingEv to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*)* @_ZNK5blink9scheduler12_GLOBAL__N_118DummyPageScheduler39OptedOutFromAggressiveThrottlingForTestEv to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*, i1)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler32RequestBeginMainFrameNotExpectedEb to i8*), i8* bitcast (void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*, %"class.WTF::String"*, i32)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler32CreateWebScopedVirtualTimePauserERKN3WTF6StringENS_26WebScopedVirtualTimePauser19VirtualTaskDurationE to i8*), i8* bitcast (%"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler22GetAgentGroupSchedulerEv to i8*)] }, align 8
@_ZTVN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupSchedulerE = internal unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupSchedulerD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupSchedulerD0Ev to i8*), i8* bitcast (%"class.blink::AgentGroupScheduler"* (%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupScheduler21AsAgentGroupSchedulerEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"*, %"class.mojo::PendingRemote"*)* @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupScheduler19BindInterfaceBrokerEN4mojo13PendingRemoteINS_5mojom22BrowserInterfaceBrokerEEE to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupScheduler17DefaultTaskRunnerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupScheduler20CompositorTaskRunnerEv to i8*), i8* bitcast (%"class.blink::scheduler::WebThreadScheduler"* (%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupScheduler22GetMainThreadSchedulerEv to i8*), i8* bitcast (%"class.blink::PageScheduler"* (%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"*, %"class.blink::PageScheduler::Delegate"*)* @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupScheduler19CreatePageSchedulerEPNS_13PageScheduler8DelegateE to i8*), i8* bitcast (%"class.blink::BrowserInterfaceBrokerProxy"* (%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupScheduler25GetBrowserInterfaceBrokerEv to i8*)] }, align 8
@_ZTVN5blink9scheduler12_GLOBAL__N_120DummyThreadSchedulerE = internal unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ThreadScheduler"*)* @_ZN5blink15ThreadSchedulerD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadSchedulerD0Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler8ShutdownEv to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler30ShouldYieldForHighPriorityWorkEv to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZNK5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler31CanExceedIdleDeadlineIfRequiredEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.base::Location"*, %"class.base::OnceCallback.713"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler12PostIdleTaskERKN4base8LocationENS3_12OnceCallbackIFvNS3_9TimeTicksEEEE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.base::Location"*, i64, %"class.base::OnceCallback.713"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler19PostDelayedIdleTaskERKN4base8LocationENS3_9TimeDeltaENS3_12OnceCallbackIFvNS3_9TimeTicksEEEE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.base::Location"*, %"class.base::OnceCallback.713"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler23PostNonNestableIdleTaskERKN4base8LocationENS3_12OnceCallbackIFvNS3_9TimeTicksEEEE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.blink::RAILModeObserver"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler19AddRAILModeObserverEPNS_16RAILModeObserverE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.blink::RAILModeObserver"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler22RemoveRAILModeObserverEPKNS_16RAILModeObserverE to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler12V8TaskRunnerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler19NonWakingTaskRunnerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler20CompositorTaskRunnerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler27DeprecatedDefaultTaskRunnerEv to i8*), i8* bitcast (%"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler25CreateAgentGroupSchedulerEv to i8*), i8* bitcast (%"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler29GetCurrentAgentGroupSchedulerEv to i8*), i8* bitcast (%"class.blink::scheduler::WebThreadScheduler::RendererPauseHandle"* (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler14PauseSchedulerEv to i8*), i8* bitcast (i64 (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler34MonotonicallyIncreasingVirtualTimeEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.base::TaskObserver"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler15AddTaskObserverEPN4base12TaskObserverE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.base::TaskObserver"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler18RemoveTaskObserverEPN4base12TaskObserverE to i8*), i8* bitcast (void (%"class.WTF::Vector.720"*, %"class.blink::ThreadScheduler"*, i1)* @_ZNK5blink15ThreadScheduler23GetPendingUserInputInfoEb to i8*), i8* bitcast (i1 (%"class.blink::ThreadScheduler"*)* @_ZNK5blink15ThreadScheduler25IsBeginMainFrameScheduledEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.v8::Isolate"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler12SetV8IsolateEPN2v87IsolateE to i8*), i8* bitcast (void (%"class.blink::ThreadScheduler"*)* @_ZN5blink15ThreadScheduler18OnSafepointEnteredEv to i8*), i8* bitcast (void (%"class.blink::ThreadScheduler"*)* @_ZN5blink15ThreadScheduler17OnSafepointExitedEv to i8*), i8* bitcast (%"class.blink::scheduler::WebThreadScheduler"* (%"class.blink::ThreadScheduler"*)* @_ZN5blink15ThreadScheduler32GetWebMainThreadSchedulerForTestEv to i8*), i8* bitcast (%"class.blink::scheduler::NonMainThreadSchedulerImpl"* (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler24AsNonMainThreadSchedulerEv to i8*)] }, align 8
@_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE = internal unnamed_addr constant { [33 x i8*], [29 x i8*] } { [33 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerD0Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler8ShutdownEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler17DefaultTaskRunnerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler20CompositorTaskRunnerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler27DeprecatedDefaultTaskRunnerEv to i8*), i8* bitcast (%"class.blink::Thread"* (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler16CreateMainThreadEv to i8*), i8* bitcast (%"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler25CreateAgentGroupSchedulerEv to i8*), i8* bitcast (void ()* @_ZN5blink9scheduler18WebThreadScheduler21CreateWidgetSchedulerEv to i8*), i8* bitcast (%"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler29GetCurrentAgentGroupSchedulerEv to i8*), i8* bitcast (void ()* @_ZN5blink9scheduler18WebThreadScheduler30NewRenderWidgetSchedulingStateEv to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler25BeginFrameNotExpectedSoonEv to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, i64)* @_ZN5blink9scheduler18WebThreadScheduler30BeginMainFrameNotExpectedUntilEN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, %"struct.viz::BeginFrameArgs"*)* @_ZN5blink9scheduler18WebThreadScheduler14WillBeginFrameERKN3viz14BeginFrameArgsE to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler26DidCommitFrameToCompositorEv to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, %"class.blink::WebInputEvent"*, i32)* @_ZN5blink9scheduler18WebThreadScheduler37DidHandleInputEventOnCompositorThreadERKNS_13WebInputEventENS1_15InputEventStateE to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, i32, %"class.blink::WebInputEventAttribution"*)* @_ZN5blink9scheduler18WebThreadScheduler30WillPostInputEventToMainThreadENS_5mojom9EventTypeERKNS_24WebInputEventAttributionE to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, i32, %"class.blink::WebInputEventAttribution"*)* @_ZN5blink9scheduler18WebThreadScheduler32WillHandleInputEventOnMainThreadENS_5mojom9EventTypeERKNS_24WebInputEventAttributionE to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, %"class.blink::WebInputEvent"*, i32)* @_ZN5blink9scheduler18WebThreadScheduler31DidHandleInputEventOnMainThreadERKNS_13WebInputEventENS_19WebInputEventResultE to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler36DidAnimateForInputOnCompositorThreadEv to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler25DidScheduleBeginMainFrameEv to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler20DidRunBeginMainFrameEv to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, i1)* @_ZN5blink9scheduler18WebThreadScheduler17SetRendererHiddenEb to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, i1)* @_ZN5blink9scheduler18WebThreadScheduler23SetRendererBackgroundedEb to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, i1)* @_ZN5blink9scheduler18WebThreadScheduler22SetSchedulerKeepActiveEb to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler28OnMainFrameRequestedForInputEv to i8*), i8* bitcast (%"class.blink::scheduler::WebThreadScheduler::RendererPauseHandle"* (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler13PauseRendererEv to i8*), i8* bitcast (i1 (%"class.blink::scheduler::WebThreadScheduler"*)* @_ZN5blink9scheduler18WebThreadScheduler29IsHighPriorityWorkAnticipatedEv to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, %"class.base::trace_event::BlameContext"*)* @_ZN5blink9scheduler18WebThreadScheduler23SetTopLevelBlameContextEPN4base11trace_event12BlameContextE to i8*), i8* bitcast (void (%"class.blink::scheduler::WebThreadScheduler"*, i32)* @_ZN5blink9scheduler18WebThreadScheduler22SetRendererProcessTypeENS0_22WebRendererProcessTypeE to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler12V8TaskRunnerEv to i8*)], [29 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerD1Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerD0Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler8ShutdownEv to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler30ShouldYieldForHighPriorityWorkEv to i8*), i8* bitcast (i1 (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZNK5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler31CanExceedIdleDeadlineIfRequiredEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.base::Location"*, %"class.base::OnceCallback.713"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler12PostIdleTaskERKN4base8LocationENS3_12OnceCallbackIFvNS3_9TimeTicksEEEE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.base::Location"*, i64, %"class.base::OnceCallback.713"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler19PostDelayedIdleTaskERKN4base8LocationENS3_9TimeDeltaENS3_12OnceCallbackIFvNS3_9TimeTicksEEEE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.base::Location"*, %"class.base::OnceCallback.713"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler23PostNonNestableIdleTaskERKN4base8LocationENS3_12OnceCallbackIFvNS3_9TimeTicksEEEE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.blink::RAILModeObserver"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler19AddRAILModeObserverEPNS_16RAILModeObserverE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.blink::RAILModeObserver"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler22RemoveRAILModeObserverEPKNS_16RAILModeObserverE to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler12V8TaskRunnerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler19NonWakingTaskRunnerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler20CompositorTaskRunnerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler27DeprecatedDefaultTaskRunnerEv to i8*), i8* bitcast (%"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler25CreateAgentGroupSchedulerEv to i8*), i8* bitcast (%"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*)* @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler29GetCurrentAgentGroupSchedulerEv to i8*), i8* bitcast (%"class.blink::scheduler::WebThreadScheduler::RendererPauseHandle"* (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler14PauseSchedulerEv to i8*), i8* bitcast (i64 (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler34MonotonicallyIncreasingVirtualTimeEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.base::TaskObserver"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler15AddTaskObserverEPN4base12TaskObserverE to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.base::TaskObserver"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler18RemoveTaskObserverEPN4base12TaskObserverE to i8*), i8* bitcast (void (%"class.WTF::Vector.720"*, %"class.blink::ThreadScheduler"*, i1)* @_ZNK5blink15ThreadScheduler23GetPendingUserInputInfoEb to i8*), i8* bitcast (i1 (%"class.blink::ThreadScheduler"*)* @_ZNK5blink15ThreadScheduler25IsBeginMainFrameScheduledEv to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*, %"class.v8::Isolate"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler12SetV8IsolateEPN2v87IsolateE to i8*), i8* bitcast (void (%"class.blink::ThreadScheduler"*)* @_ZN5blink15ThreadScheduler18OnSafepointEnteredEv to i8*), i8* bitcast (void (%"class.blink::ThreadScheduler"*)* @_ZN5blink15ThreadScheduler17OnSafepointExitedEv to i8*), i8* bitcast (%"class.blink::scheduler::WebThreadScheduler"* (%"class.blink::ThreadScheduler"*)* @_ZN5blink15ThreadScheduler32GetWebMainThreadSchedulerForTestEv to i8*), i8* bitcast (%"class.blink::scheduler::NonMainThreadSchedulerImpl"* (%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*)* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler24AsNonMainThreadSchedulerEv to i8*)] }, align 8
@_ZTVN5blink9scheduler12_GLOBAL__N_112SimpleThreadE = internal unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::Thread"*)* @_ZN5blink6ThreadD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::(anonymous namespace)::SimpleThread"*)* @_ZN5blink9scheduler12_GLOBAL__N_112SimpleThreadD0Ev to i8*), i8* bitcast (void (%"class.blink::Thread"*)* @_ZN5blink6Thread4InitEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::(anonymous namespace)::SimpleThread"*)* @_ZNK5blink9scheduler12_GLOBAL__N_112SimpleThread13GetTaskRunnerEv to i8*), i8* bitcast (void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)* @_ZN5blink6Thread19AddTaskTimeObserverEPN4base16sequence_manager16TaskTimeObserverE to i8*), i8* bitcast (void (%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*)* @_ZN5blink6Thread22RemoveTaskTimeObserverEPN4base16sequence_manager16TaskTimeObserverE to i8*), i8* bitcast (%"class.blink::ThreadScheduler"* (%"class.blink::scheduler::(anonymous namespace)::SimpleThread"*)* @_ZN5blink9scheduler12_GLOBAL__N_112SimpleThread9SchedulerEv to i8*), i8* bitcast (void (%"class.blink::Thread"*)* @_ZN5blink6Thread16ShutdownOnThreadEv to i8*), i8* bitcast (i1 (%"class.blink::Thread"*)* @_ZNK5blink6Thread18IsSimpleMainThreadEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FrameScheduler"* @_ZN5blink9scheduler25CreateDummyFrameSchedulerEv() local_unnamed_addr #0 {
  %1 = tail call noalias i8* @malloc(i64 72) #10
  %2 = bitcast i8* %1 to %"class.blink::FrameOrWorkerScheduler"*
  tail call void @_ZN5blink22FrameOrWorkerSchedulerC2Ev(%"class.blink::FrameOrWorkerScheduler"* %2) #10
  %3 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*] }, { [40 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_119DummyFrameSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = tail call i8* @_Znwm(i64 16) #11
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_118DummyPageSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = tail call i8* @_Znwm(i64 16) #11
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = tail call i8* @_Znwm(i64 16) #11
  %10 = bitcast i8* %9 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 8
  %12 = bitcast i8* %11 to i8**
  store i8* %9, i8** %12, align 8
  %13 = ptrtoint i8* %7 to i64
  %14 = bitcast i8* %6 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %1, i64 48
  %16 = bitcast i8* %15 to i8**
  store i8* %4, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %1, i64 56
  %18 = bitcast i8* %17 to %"class.base::internal::WeakPtrFactoryBase"*
  %19 = ptrtoint i8* %1 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %18, i64 %19) #10
  %20 = bitcast i8* %1 to %"class.blink::FrameScheduler"*
  ret %"class.blink::FrameScheduler"* %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PageScheduler"* @_ZN5blink9scheduler24CreateDummyPageSchedulerEv() local_unnamed_addr #0 {
  %1 = tail call i8* @_Znwm(i64 16) #11
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_118DummyPageSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = tail call i8* @_Znwm(i64 16) #11
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = tail call i8* @_Znwm(i64 16) #11
  %7 = bitcast i8* %6 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 8
  %9 = bitcast i8* %8 to i8**
  store i8* %6, i8** %9, align 8
  %10 = ptrtoint i8* %4 to i64
  %11 = bitcast i8* %3 to i64*
  store i64 %10, i64* %11, align 8
  %12 = bitcast i8* %1 to %"class.blink::PageScheduler"*
  ret %"class.blink::PageScheduler"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AgentGroupScheduler"* @_ZN5blink9scheduler30CreateDummyAgentGroupSchedulerEv() local_unnamed_addr #0 {
  %1 = tail call i8* @_Znwm(i64 16) #11
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call i8* @_Znwm(i64 16) #11
  %4 = bitcast i8* %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds i8, i8* %1, i64 8
  %6 = bitcast i8* %5 to i8**
  store i8* %3, i8** %6, align 8
  %7 = bitcast i8* %1 to %"class.blink::AgentGroupScheduler"*
  ret %"class.blink::AgentGroupScheduler"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ThreadScheduler"* @_ZN5blink9scheduler26CreateDummyThreadSchedulerEv() local_unnamed_addr #0 {
  %1 = tail call i8* @_Znwm(i64 8) #11
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_120DummyThreadSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast i8* %1 to %"class.blink::ThreadScheduler"*
  ret %"class.blink::ThreadScheduler"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::scheduler::WebThreadScheduler"* @_ZN5blink9scheduler29CreateDummyWebThreadSchedulerEv() local_unnamed_addr #0 {
  %1 = tail call i8* @_Znwm(i64 16) #11
  %2 = bitcast i8* %1 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = bitcast i8* %1 to %"class.blink::scheduler::WebThreadScheduler"*
  ret %"class.blink::scheduler::WebThreadScheduler"* %3
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameSchedulerD2Ev(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*] }, { [40 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_119DummyFrameSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.blink::PageScheduler"*, %"class.blink::PageScheduler"** %4, align 8
  store %"class.blink::PageScheduler"* null, %"class.blink::PageScheduler"** %4, align 8
  %6 = icmp eq %"class.blink::PageScheduler"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::PageScheduler"* %5 to void (%"class.blink::PageScheduler"*)***
  %9 = load void (%"class.blink::PageScheduler"*)**, void (%"class.blink::PageScheduler"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::PageScheduler"*)*, void (%"class.blink::PageScheduler"*)** %9, i64 1
  %11 = load void (%"class.blink::PageScheduler"*)*, void (%"class.blink::PageScheduler"*)** %10, align 8
  tail call void %11(%"class.blink::PageScheduler"* nonnull %5) #10
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink22FrameOrWorkerSchedulerD2Ev(%"class.blink::FrameOrWorkerScheduler"* %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameSchedulerD0Ev(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*] }, { [40 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_119DummyFrameSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.blink::PageScheduler"*, %"class.blink::PageScheduler"** %4, align 8
  store %"class.blink::PageScheduler"* null, %"class.blink::PageScheduler"** %4, align 8
  %6 = icmp eq %"class.blink::PageScheduler"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::PageScheduler"* %5 to void (%"class.blink::PageScheduler"*)***
  %9 = load void (%"class.blink::PageScheduler"*)**, void (%"class.blink::PageScheduler"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::PageScheduler"*)*, void (%"class.blink::PageScheduler"*)** %9, i64 1
  %11 = load void (%"class.blink::PageScheduler"*)*, void (%"class.blink::PageScheduler"*)** %10, align 8
  tail call void %11(%"class.blink::PageScheduler"* nonnull %5) #10
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink22FrameOrWorkerSchedulerD2Ev(%"class.blink::FrameOrWorkerScheduler"* %13) #10
  %14 = bitcast %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* %0 to i8*
  tail call void @free(i8* %14) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler36SetPreemptedForCooperativeSchedulingEN4base11StrongAliasINS_12PreemptedTagEbEE(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture, i8) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.blink::WebSchedulingTaskQueue"* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler28CreateWebSchedulingTaskQueueENS_21WebSchedulingPriorityE(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readnone, i32) unnamed_addr #3 align 2 {
  ret %"class.blink::WebSchedulingTaskQueue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FrameScheduler"* @_ZN5blink14FrameScheduler16ToFrameSchedulerEv(%"class.blink::FrameScheduler"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::FrameScheduler"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink22FrameOrWorkerScheduler23CalculateLifecycleStateENS0_12ObserverTypeE(%"class.blink::FrameOrWorkerScheduler"*, i32) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler21OnStartedUsingFeatureENS0_26WebSchedulerTrackedFeatureERKNS_16SchedulingPolicyE(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture, i32, %"struct.blink::SchedulingPolicy"* nocapture dereferenceable(2)) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler21OnStoppedUsingFeatureENS0_26WebSchedulerTrackedFeatureERKNS_16SchedulingPolicyE(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture, i32, %"struct.blink::SchedulingPolicy"* nocapture dereferenceable(2)) unnamed_addr #3 align 2 {
  ret void
}

declare void @_ZN5blink22FrameOrWorkerScheduler23GetDocumentBoundWeakPtrEv(%"class.base::WeakPtr"* sret, %"class.blink::FrameOrWorkerScheduler"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler15SetFrameVisibleEb(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture, i1 zeroext) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler14IsFrameVisibleEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler13IsPageVisibleEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler9SetPausedEb(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture, i1 zeroext) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler38SetShouldReportPostedTasksWhenDisabledEb(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture, i1 zeroext) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler25SetCrossOriginToMainFrameEb(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture, i1 zeroext) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler24IsCrossOriginToMainFrameEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler12SetIsAdFrameEb(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture, i1 zeroext) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler9IsAdFrameEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler14TraceUrlChangeERKN3WTF6StringE(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture, %"class.WTF::String"* nocapture dereferenceable(8)) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler11AddTaskTimeEN4base9TimeDeltaE(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture, i64) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZNK5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler12GetFrameTypeEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler13GetTaskRunnerENS_8TaskTypeE(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readnone, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %4 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %3, i64 0, i32 0
  %5 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  ret %"class.base::SingleThreadTaskRunner"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::scheduler::WebResourceLoadingTaskRunnerHandle"* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler37CreateResourceLoadingTaskRunnerHandleEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  %10 = tail call %"class.blink::scheduler::WebResourceLoadingTaskRunnerHandle"* @_ZN5blink9scheduler34WebResourceLoadingTaskRunnerHandle19CreateUnprioritizedE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.base::SingleThreadTaskRunner"* %4) #10
  ret %"class.blink::scheduler::WebResourceLoadingTaskRunnerHandle"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::scheduler::WebResourceLoadingTaskRunnerHandle"* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler53CreateResourceLoadingMaybeUnfreezableTaskRunnerHandleEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  %10 = tail call %"class.blink::scheduler::WebResourceLoadingTaskRunnerHandle"* @_ZN5blink9scheduler34WebResourceLoadingTaskRunnerHandle19CreateUnprioritizedE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.base::SingleThreadTaskRunner"* %4) #10
  ret %"class.blink::scheduler::WebResourceLoadingTaskRunnerHandle"* %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.blink::PageScheduler"* @_ZNK5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler16GetPageSchedulerEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::PageScheduler"*, %"class.blink::PageScheduler"** %2, align 8
  ret %"class.blink::PageScheduler"* %3
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::scheduler::WebAgentGroupScheduler"* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler22GetAgentGroupSchedulerEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::PageScheduler"*, %"class.blink::PageScheduler"** %2, align 8
  %4 = bitcast %"class.blink::PageScheduler"* %3 to %"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::PageScheduler"*)***
  %5 = load %"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::PageScheduler"*)**, %"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::PageScheduler"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::PageScheduler"*)*, %"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::PageScheduler"*)** %5, i64 27
  %7 = load %"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::PageScheduler"*)*, %"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::PageScheduler"*)** %6, align 8
  %8 = tail call dereferenceable(8) %"class.blink::scheduler::WebAgentGroupScheduler"* %7(%"class.blink::PageScheduler"* %3) #10
  ret %"class.blink::scheduler::WebAgentGroupScheduler"* %8
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler32CreateWebScopedVirtualTimePauserERKN3WTF6StringENS_26WebScopedVirtualTimePauser19VirtualTaskDurationE(%"class.blink::WebScopedVirtualTimePauser"* noalias sret, %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readnone, %"class.WTF::String"* nocapture readnone dereferenceable(8), i32) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink26WebScopedVirtualTimePauserC1Ev(%"class.blink::WebScopedVirtualTimePauser"* %0) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler23DidStartProvisionalLoadEb(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture, i1 zeroext) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler24DidCommitProvisionalLoadEbNS_14FrameScheduler14NavigationTypeE(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture, i1 zeroext, i32) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler33OnFirstContentfulPaintInMainFrameEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler22OnFirstMeaningfulPaintEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler6OnLoadEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler33IsExemptFromBudgetBasedThrottlingEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler14GetUkmSourceIdEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.blink::mojom::blink::PauseSubresourceLoadingHandle"* @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler32GetPauseSubresourceLoadingHandleEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.blink::mojom::blink::PauseSubresourceLoadingHandle"* null
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler50GetActiveFeaturesTrackedForBackForwardCacheMetricsEv(%"class.WTF::HashSet.708"* noalias nocapture sret, %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.WTF::HashSet.708"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 20, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler10GetWeakPtrEv(%"class.base::WeakPtr.712"* noalias sret, %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10, !noalias !2
  %5 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* %1, i64 0, i32 2, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %5) #10, !noalias !2
  %6 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* %1, i64 0, i32 2, i32 0, i32 1
  %7 = load i64, i64* %6, align 8, !noalias !2
  %8 = getelementptr inbounds %"class.base::WeakPtr.712", %"class.base::WeakPtr.712"* %0, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* %8, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %7) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10, !noalias !2
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_119DummyFrameScheduler36ReportActiveSchedulerTrackedFeaturesEv(%"class.blink::scheduler::(anonymous namespace)::DummyFrameScheduler"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

declare void @_ZN5blink22FrameOrWorkerSchedulerC2Ev(%"class.blink::FrameOrWorkerScheduler"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink22FrameOrWorkerSchedulerD2Ev(%"class.blink::FrameOrWorkerScheduler"*) unnamed_addr #6

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #4

declare %"class.blink::scheduler::WebResourceLoadingTaskRunnerHandle"* @_ZN5blink9scheduler34WebResourceLoadingTaskRunnerHandle19CreateUnprioritizedE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #4

declare void @_ZN5blink26WebScopedVirtualTimePauserC1Ev(%"class.blink::WebScopedVirtualTimePauser"*) unnamed_addr #4

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #6

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageSchedulerD2Ev(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_118DummyPageSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::scheduler::WebAgentGroupScheduler"** %3, align 8
  store %"class.blink::scheduler::WebAgentGroupScheduler"* null, %"class.blink::scheduler::WebAgentGroupScheduler"** %3, align 8
  %5 = icmp eq %"class.blink::scheduler::WebAgentGroupScheduler"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::scheduler::WebAgentGroupScheduler"* %4 to void (%"class.blink::scheduler::WebAgentGroupScheduler"*)***
  %8 = load void (%"class.blink::scheduler::WebAgentGroupScheduler"*)**, void (%"class.blink::scheduler::WebAgentGroupScheduler"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::scheduler::WebAgentGroupScheduler"*)*, void (%"class.blink::scheduler::WebAgentGroupScheduler"*)** %8, i64 1
  %10 = load void (%"class.blink::scheduler::WebAgentGroupScheduler"*)*, void (%"class.blink::scheduler::WebAgentGroupScheduler"*)** %9, align 8
  tail call void %10(%"class.blink::scheduler::WebAgentGroupScheduler"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageSchedulerD0Ev(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_118DummyPageSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::scheduler::WebAgentGroupScheduler"** %3, align 8
  store %"class.blink::scheduler::WebAgentGroupScheduler"* null, %"class.blink::scheduler::WebAgentGroupScheduler"** %3, align 8
  %5 = icmp eq %"class.blink::scheduler::WebAgentGroupScheduler"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::scheduler::WebAgentGroupScheduler"* %4 to void (%"class.blink::scheduler::WebAgentGroupScheduler"*)***
  %8 = load void (%"class.blink::scheduler::WebAgentGroupScheduler"*)**, void (%"class.blink::scheduler::WebAgentGroupScheduler"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::scheduler::WebAgentGroupScheduler"*)*, void (%"class.blink::scheduler::WebAgentGroupScheduler"*)** %8, i64 1
  %10 = load void (%"class.blink::scheduler::WebAgentGroupScheduler"*)*, void (%"class.blink::scheduler::WebAgentGroupScheduler"*)** %9, align 8
  tail call void %10(%"class.blink::scheduler::WebAgentGroupScheduler"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler23OnTitleOrFaviconUpdatedEv(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler14SetPageVisibleEb(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture, i1 zeroext) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler13SetPageFrozenEb(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture, i1 zeroext) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler24SetPageBackForwardCachedEb(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture, i1 zeroext) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler14OnFocusChangedEb(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture, i1 zeroext) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler13SetKeepActiveEb(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture, i1 zeroext) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_118DummyPageScheduler16IsMainFrameLocalEv(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler19SetIsMainFrameLocalEb(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture, i1 zeroext) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler33OnLocalMainFrameNetworkAlmostIdleEv(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_118DummyPageScheduler20IsInBackForwardCacheEv(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::FrameScheduler"* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler20CreateFrameSchedulerEPNS_14FrameScheduler8DelegateEPN4base11trace_event12BlameContextENS3_9FrameTypeE(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture readnone, %"class.blink::FrameScheduler::Delegate"* nocapture readnone, %"class.base::trace_event::BlameContext"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %5 = tail call noalias i8* @malloc(i64 72) #10
  %6 = bitcast i8* %5 to %"class.blink::FrameOrWorkerScheduler"*
  tail call void @_ZN5blink22FrameOrWorkerSchedulerC2Ev(%"class.blink::FrameOrWorkerScheduler"* %6) #10
  %7 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*] }, { [40 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_119DummyFrameSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = tail call i8* @_Znwm(i64 16) #11
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_118DummyPageSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = tail call i8* @_Znwm(i64 16) #11
  %12 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = tail call i8* @_Znwm(i64 16) #11
  %14 = bitcast i8* %13 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 8
  %16 = bitcast i8* %15 to i8**
  store i8* %13, i8** %16, align 8
  %17 = ptrtoint i8* %11 to i64
  %18 = bitcast i8* %10 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %5, i64 48
  %20 = bitcast i8* %19 to i8**
  store i8* %8, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 56
  %22 = bitcast i8* %21 to %"class.base::internal::WeakPtrFactoryBase"*
  %23 = ptrtoint i8* %5 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %22, i64 %23) #10
  %24 = bitcast i8* %5 to %"class.blink::FrameScheduler"*
  ret %"class.blink::FrameScheduler"* %24
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler17EnableVirtualTimeEv(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler28DisableVirtualTimeForTestingEv(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_118DummyPageScheduler27VirtualTimeAllowedToAdvanceEv(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler21SetInitialVirtualTimeEN4base4TimeE(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture, i64) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler27SetInitialVirtualTimeOffsetEN4base9TimeDeltaE(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture, i64) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler20SetVirtualTimePolicyENS_13PageScheduler17VirtualTimePolicyE(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture, i32) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler22GrantVirtualTimeBudgetEN4base9TimeDeltaENS3_12OnceCallbackIFvvEEE(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture, i64, %"class.base::OnceCallback"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler36SetMaxVirtualTimeTaskStarvationCountEi(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture, i32) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler17AudioStateChangedEb(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture, i1 zeroext) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_118DummyPageScheduler14IsAudioPlayingEv(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_118DummyPageScheduler33IsExemptFromBudgetBasedThrottlingEv(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_118DummyPageScheduler39OptedOutFromAggressiveThrottlingForTestEv(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler32RequestBeginMainFrameNotExpectedEb(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture readnone, i1 zeroext) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler32CreateWebScopedVirtualTimePauserERKN3WTF6StringENS_26WebScopedVirtualTimePauser19VirtualTaskDurationE(%"class.blink::WebScopedVirtualTimePauser"* noalias sret, %"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture readnone, %"class.WTF::String"* nocapture readnone dereferenceable(8), i32) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink26WebScopedVirtualTimePauserC1Ev(%"class.blink::WebScopedVirtualTimePauser"* %0) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal dereferenceable(8) %"class.blink::scheduler::WebAgentGroupScheduler"* @_ZN5blink9scheduler12_GLOBAL__N_118DummyPageScheduler22GetAgentGroupSchedulerEv(%"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyPageScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::scheduler::WebAgentGroupScheduler"** %2, align 8
  ret %"class.blink::scheduler::WebAgentGroupScheduler"* %3
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupSchedulerD2Ev(%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::scheduler::WebThreadScheduler"*, %"class.blink::scheduler::WebThreadScheduler"** %3, align 8
  store %"class.blink::scheduler::WebThreadScheduler"* null, %"class.blink::scheduler::WebThreadScheduler"** %3, align 8
  %5 = icmp eq %"class.blink::scheduler::WebThreadScheduler"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::scheduler::WebThreadScheduler"* %4 to void (%"class.blink::scheduler::WebThreadScheduler"*)***
  %8 = load void (%"class.blink::scheduler::WebThreadScheduler"*)**, void (%"class.blink::scheduler::WebThreadScheduler"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::scheduler::WebThreadScheduler"*)*, void (%"class.blink::scheduler::WebThreadScheduler"*)** %8, i64 1
  %10 = load void (%"class.blink::scheduler::WebThreadScheduler"*)*, void (%"class.blink::scheduler::WebThreadScheduler"*)** %9, align 8
  tail call void %10(%"class.blink::scheduler::WebThreadScheduler"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupSchedulerD0Ev(%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::scheduler::WebThreadScheduler"*, %"class.blink::scheduler::WebThreadScheduler"** %3, align 8
  store %"class.blink::scheduler::WebThreadScheduler"* null, %"class.blink::scheduler::WebThreadScheduler"** %3, align 8
  %5 = icmp eq %"class.blink::scheduler::WebThreadScheduler"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::scheduler::WebThreadScheduler"* %4 to void (%"class.blink::scheduler::WebThreadScheduler"*)***
  %8 = load void (%"class.blink::scheduler::WebThreadScheduler"*)**, void (%"class.blink::scheduler::WebThreadScheduler"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::scheduler::WebThreadScheduler"*)*, void (%"class.blink::scheduler::WebThreadScheduler"*)** %8, i64 1
  %10 = load void (%"class.blink::scheduler::WebThreadScheduler"*)*, void (%"class.blink::scheduler::WebThreadScheduler"*)** %9, align 8
  tail call void %10(%"class.blink::scheduler::WebThreadScheduler"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal dereferenceable(8) %"class.blink::AgentGroupScheduler"* @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupScheduler21AsAgentGroupSchedulerEv(%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"* readnone) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"* %0, i64 0, i32 0
  ret %"class.blink::AgentGroupScheduler"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupScheduler19BindInterfaceBrokerEN4mojo13PendingRemoteINS_5mojom22BrowserInterfaceBrokerEEE(%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"* nocapture, %"class.mojo::PendingRemote"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupScheduler17DefaultTaskRunnerEv(%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupScheduler20CompositorTaskRunnerEv(%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal dereferenceable(8) %"class.blink::scheduler::WebThreadScheduler"* @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupScheduler22GetMainThreadSchedulerEv(%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::scheduler::WebThreadScheduler"*, %"class.blink::scheduler::WebThreadScheduler"** %2, align 8
  ret %"class.blink::scheduler::WebThreadScheduler"* %3
}

; Function Attrs: nofree nounwind ssp uwtable
define internal noalias nonnull %"class.blink::PageScheduler"* @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupScheduler19CreatePageSchedulerEPNS_13PageScheduler8DelegateE(%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"* nocapture readnone, %"class.blink::PageScheduler::Delegate"* nocapture readnone) unnamed_addr #9 align 2 {
  %3 = tail call i8* @_Znwm(i64 16) #11
  %4 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_118DummyPageSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = tail call i8* @_Znwm(i64 16) #11
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = tail call i8* @_Znwm(i64 16) #11
  %9 = bitcast i8* %8 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 8
  %11 = bitcast i8* %10 to i8**
  store i8* %8, i8** %11, align 8
  %12 = ptrtoint i8* %6 to i64
  %13 = bitcast i8* %5 to i64*
  store i64 %12, i64* %13, align 8
  %14 = bitcast i8* %3 to %"class.blink::PageScheduler"*
  ret %"class.blink::PageScheduler"* %14
}

; Function Attrs: nounwind ssp uwtable
define internal dereferenceable(72) %"class.blink::BrowserInterfaceBrokerProxy"* @_ZN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupScheduler25GetBrowserInterfaceBrokerEv(%"class.blink::scheduler::(anonymous namespace)::DummyAgentGroupScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(72) %"class.blink::BrowserInterfaceBrokerProxy"* @_ZN5blink30GetEmptyBrowserInterfaceBrokerEv() #10
  ret %"class.blink::BrowserInterfaceBrokerProxy"* %2
}

declare dereferenceable(72) %"class.blink::BrowserInterfaceBrokerProxy"* @_ZN5blink30GetEmptyBrowserInterfaceBrokerEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ThreadSchedulerD2Ev(%"class.blink::ThreadScheduler"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadSchedulerD0Ev(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler8ShutdownEv(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler30ShouldYieldForHighPriorityWorkEv(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler31CanExceedIdleDeadlineIfRequiredEv(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler12PostIdleTaskERKN4base8LocationENS3_12OnceCallbackIFvNS3_9TimeTicksEEEE(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture, %"class.base::Location"* nocapture dereferenceable(32), %"class.base::OnceCallback.713"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler19PostDelayedIdleTaskERKN4base8LocationENS3_9TimeDeltaENS3_12OnceCallbackIFvNS3_9TimeTicksEEEE(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture, %"class.base::Location"* nocapture dereferenceable(32), i64, %"class.base::OnceCallback.713"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler23PostNonNestableIdleTaskERKN4base8LocationENS3_12OnceCallbackIFvNS3_9TimeTicksEEEE(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture, %"class.base::Location"* nocapture dereferenceable(32), %"class.base::OnceCallback.713"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler19AddRAILModeObserverEPNS_16RAILModeObserverE(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture, %"class.blink::RAILModeObserver"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler22RemoveRAILModeObserverEPKNS_16RAILModeObserverE(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture, %"class.blink::RAILModeObserver"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler12V8TaskRunnerEv(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler19NonWakingTaskRunnerEv(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler20CompositorTaskRunnerEv(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler27DeprecatedDefaultTaskRunnerEv(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::scheduler::WebAgentGroupScheduler"* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler25CreateAgentGroupSchedulerEv(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #11
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = tail call i8* @_Znwm(i64 16) #11
  %5 = bitcast i8* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to i8**
  store i8* %4, i8** %7, align 8
  %8 = bitcast i8* %2 to %"class.blink::scheduler::WebAgentGroupScheduler"*
  ret %"class.blink::scheduler::WebAgentGroupScheduler"* %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias %"class.blink::scheduler::WebAgentGroupScheduler"* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler29GetCurrentAgentGroupSchedulerEv(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.blink::scheduler::WebAgentGroupScheduler"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.blink::scheduler::WebThreadScheduler::RendererPauseHandle"* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler14PauseSchedulerEv(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.blink::scheduler::WebThreadScheduler::RendererPauseHandle"* null
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler34MonotonicallyIncreasingVirtualTimeEv(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  ret i64 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler15AddTaskObserverEPN4base12TaskObserverE(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture, %"class.base::TaskObserver"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler18RemoveTaskObserverEPN4base12TaskObserverE(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture, %"class.base::TaskObserver"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15ThreadScheduler23GetPendingUserInputInfoEb(%"class.WTF::Vector.720"* noalias sret, %"class.blink::ThreadScheduler"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::Vector.720"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ThreadScheduler25IsBeginMainFrameScheduledEv(%"class.blink::ThreadScheduler"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler12SetV8IsolateEPN2v87IsolateE(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture, %"class.v8::Isolate"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ThreadScheduler18OnSafepointEnteredEv(%"class.blink::ThreadScheduler"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ThreadScheduler17OnSafepointExitedEv(%"class.blink::ThreadScheduler"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::scheduler::WebThreadScheduler"* @_ZN5blink15ThreadScheduler32GetWebMainThreadSchedulerForTestEv(%"class.blink::ThreadScheduler"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::scheduler::WebThreadScheduler"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias %"class.blink::scheduler::NonMainThreadSchedulerImpl"* @_ZN5blink9scheduler12_GLOBAL__N_120DummyThreadScheduler24AsNonMainThreadSchedulerEv(%"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.blink::scheduler::NonMainThreadSchedulerImpl"* null
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerD2Ev(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* %0, i64 0, i32 0
  tail call void @_ZN5blink9scheduler18WebThreadSchedulerD2Ev(%"class.blink::scheduler::WebThreadScheduler"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerD0Ev(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* %0, i64 0, i32 0
  tail call void @_ZN5blink9scheduler18WebThreadSchedulerD2Ev(%"class.blink::scheduler::WebThreadScheduler"* %2) #10
  %3 = bitcast %"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler8ShutdownEv(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler17DefaultTaskRunnerEv(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler20CompositorTaskRunnerEv(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler27DeprecatedDefaultTaskRunnerEv(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::Thread"* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler16CreateMainThreadEv(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*) unnamed_addr #0 align 2 {
  %2 = tail call noalias i8* @malloc(i64 16) #10
  %3 = icmp eq %"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* %0, null
  %4 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* %0, i64 0, i32 1, i32 0
  %5 = select i1 %3, %"class.blink::ThreadScheduler"* null, %"class.blink::ThreadScheduler"* %4
  %6 = bitcast i8* %2 to %"class.blink::Thread"*
  tail call void @_ZN5blink6ThreadC2Ev(%"class.blink::Thread"* %6) #10
  %7 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_112SimpleThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to %"class.blink::ThreadScheduler"**
  store %"class.blink::ThreadScheduler"* %5, %"class.blink::ThreadScheduler"** %9, align 8
  ret %"class.blink::Thread"* %6
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::scheduler::WebAgentGroupScheduler"* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler25CreateAgentGroupSchedulerEv(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #11
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = tail call i8* @_Znwm(i64 16) #11
  %5 = bitcast i8* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to i8**
  store i8* %4, i8** %7, align 8
  %8 = bitcast i8* %2 to %"class.blink::scheduler::WebAgentGroupScheduler"*
  ret %"class.blink::scheduler::WebAgentGroupScheduler"* %8
}

declare void @_ZN5blink9scheduler18WebThreadScheduler21CreateWidgetSchedulerEv() unnamed_addr

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias %"class.blink::scheduler::WebAgentGroupScheduler"* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler29GetCurrentAgentGroupSchedulerEv(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.blink::scheduler::WebAgentGroupScheduler"* null
}

declare void @_ZN5blink9scheduler18WebThreadScheduler30NewRenderWidgetSchedulingStateEv() unnamed_addr

declare void @_ZN5blink9scheduler18WebThreadScheduler25BeginFrameNotExpectedSoonEv(%"class.blink::scheduler::WebThreadScheduler"*) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler30BeginMainFrameNotExpectedUntilEN4base9TimeTicksE(%"class.blink::scheduler::WebThreadScheduler"*, i64) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler14WillBeginFrameERKN3viz14BeginFrameArgsE(%"class.blink::scheduler::WebThreadScheduler"*, %"struct.viz::BeginFrameArgs"*) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler26DidCommitFrameToCompositorEv(%"class.blink::scheduler::WebThreadScheduler"*) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler37DidHandleInputEventOnCompositorThreadERKNS_13WebInputEventENS1_15InputEventStateE(%"class.blink::scheduler::WebThreadScheduler"*, %"class.blink::WebInputEvent"* dereferenceable(40), i32) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler30WillPostInputEventToMainThreadENS_5mojom9EventTypeERKNS_24WebInputEventAttributionE(%"class.blink::scheduler::WebThreadScheduler"*, i32, %"class.blink::WebInputEventAttribution"* dereferenceable(16)) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler32WillHandleInputEventOnMainThreadENS_5mojom9EventTypeERKNS_24WebInputEventAttributionE(%"class.blink::scheduler::WebThreadScheduler"*, i32, %"class.blink::WebInputEventAttribution"* dereferenceable(16)) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler31DidHandleInputEventOnMainThreadERKNS_13WebInputEventENS_19WebInputEventResultE(%"class.blink::scheduler::WebThreadScheduler"*, %"class.blink::WebInputEvent"* dereferenceable(40), i32) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler36DidAnimateForInputOnCompositorThreadEv(%"class.blink::scheduler::WebThreadScheduler"*) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler25DidScheduleBeginMainFrameEv(%"class.blink::scheduler::WebThreadScheduler"*) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler20DidRunBeginMainFrameEv(%"class.blink::scheduler::WebThreadScheduler"*) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler17SetRendererHiddenEb(%"class.blink::scheduler::WebThreadScheduler"*, i1 zeroext) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler23SetRendererBackgroundedEb(%"class.blink::scheduler::WebThreadScheduler"*, i1 zeroext) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler22SetSchedulerKeepActiveEb(%"class.blink::scheduler::WebThreadScheduler"*, i1 zeroext) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler28OnMainFrameRequestedForInputEv(%"class.blink::scheduler::WebThreadScheduler"*) unnamed_addr #4

declare %"class.blink::scheduler::WebThreadScheduler::RendererPauseHandle"* @_ZN5blink9scheduler18WebThreadScheduler13PauseRendererEv(%"class.blink::scheduler::WebThreadScheduler"*) unnamed_addr #4

declare zeroext i1 @_ZN5blink9scheduler18WebThreadScheduler29IsHighPriorityWorkAnticipatedEv(%"class.blink::scheduler::WebThreadScheduler"*) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler23SetTopLevelBlameContextEPN4base11trace_event12BlameContextE(%"class.blink::scheduler::WebThreadScheduler"*, %"class.base::trace_event::BlameContext"*) unnamed_addr #4

declare void @_ZN5blink9scheduler18WebThreadScheduler22SetRendererProcessTypeENS0_22WebRendererProcessTypeE(%"class.blink::scheduler::WebThreadScheduler"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler12V8TaskRunnerEv(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerD1Ev(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* %0, i64 -1, i32 1
  %3 = bitcast %"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* %2 to %"class.blink::scheduler::WebThreadScheduler"*
  tail call void @_ZN5blink9scheduler18WebThreadSchedulerD2Ev(%"class.blink::scheduler::WebThreadScheduler"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerD0Ev(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler", %"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* %0, i64 -1, i32 1
  %3 = bitcast %"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* %2 to %"class.blink::scheduler::WebThreadScheduler"*
  tail call void @_ZN5blink9scheduler18WebThreadSchedulerD2Ev(%"class.blink::scheduler::WebThreadScheduler"* %3) #10
  %4 = bitcast %"class.blink::scheduler::(anonymous namespace)::DummyThreadScheduler"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler8ShutdownEv(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler12V8TaskRunnerEv(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler20CompositorTaskRunnerEv(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler27DeprecatedDefaultTaskRunnerEv(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: nofree nounwind ssp uwtable
define internal noalias nonnull %"class.blink::scheduler::WebAgentGroupScheduler"* @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler25CreateAgentGroupSchedulerEv(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* nocapture readnone) unnamed_addr #9 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #11
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_124DummyAgentGroupSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = tail call i8* @_Znwm(i64 16) #11
  %5 = bitcast i8* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*], [29 x i8*] }, { [33 x i8*], [29 x i8*] }* @_ZTVN5blink9scheduler12_GLOBAL__N_123DummyWebThreadSchedulerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to i8**
  store i8* %4, i8** %7, align 8
  %8 = bitcast i8* %2 to %"class.blink::scheduler::WebAgentGroupScheduler"*
  ret %"class.blink::scheduler::WebAgentGroupScheduler"* %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias %"class.blink::scheduler::WebAgentGroupScheduler"* @_ZThn8_N5blink9scheduler12_GLOBAL__N_123DummyWebThreadScheduler29GetCurrentAgentGroupSchedulerEv(%"class.blink::scheduler::(anonymous namespace)::DummyWebThreadScheduler"* nocapture readnone) unnamed_addr #3 align 2 {
  ret %"class.blink::scheduler::WebAgentGroupScheduler"* null
}

; Function Attrs: nounwind
declare void @_ZN5blink9scheduler18WebThreadSchedulerD2Ev(%"class.blink::scheduler::WebThreadScheduler"*) unnamed_addr #6

declare void @_ZN5blink6ThreadC2Ev(%"class.blink::Thread"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink6ThreadD2Ev(%"class.blink::Thread"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink9scheduler12_GLOBAL__N_112SimpleThreadD0Ev(%"class.blink::scheduler::(anonymous namespace)::SimpleThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::SimpleThread", %"class.blink::scheduler::(anonymous namespace)::SimpleThread"* %0, i64 0, i32 0
  tail call void @_ZN5blink6ThreadD2Ev(%"class.blink::Thread"* %2) #10
  %3 = bitcast %"class.blink::scheduler::(anonymous namespace)::SimpleThread"* %0 to i8*
  tail call void @free(i8* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink6Thread4InitEv(%"class.blink::Thread"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZNK5blink9scheduler12_GLOBAL__N_112SimpleThread13GetTaskRunnerEv(%"class.blink::scheduler::(anonymous namespace)::SimpleThread"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.81* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %3 = getelementptr inbounds %class.scoped_refptr.81, %class.scoped_refptr.81* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink6Thread19AddTaskTimeObserverEPN4base16sequence_manager16TaskTimeObserverE(%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink6Thread22RemoveTaskTimeObserverEPN4base16sequence_manager16TaskTimeObserverE(%"class.blink::Thread"*, %"class.base::sequence_manager::TaskTimeObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.blink::ThreadScheduler"* @_ZN5blink9scheduler12_GLOBAL__N_112SimpleThread9SchedulerEv(%"class.blink::scheduler::(anonymous namespace)::SimpleThread"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::(anonymous namespace)::SimpleThread", %"class.blink::scheduler::(anonymous namespace)::SimpleThread"* %0, i64 0, i32 1
  %3 = load %"class.blink::ThreadScheduler"*, %"class.blink::ThreadScheduler"** %2, align 8
  ret %"class.blink::ThreadScheduler"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink6Thread16ShutdownOnThreadEv(%"class.blink::Thread"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink6Thread18IsSimpleMainThreadEv(%"class.blink::Thread"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN5blink14FrameSchedulerEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN5blink14FrameSchedulerEE10GetWeakPtrEv"}
