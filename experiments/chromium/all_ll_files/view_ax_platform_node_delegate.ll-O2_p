; ModuleID = '../../ui/views/accessibility/view_ax_platform_node_delegate.cc'
source_filename = "../../ui/views/accessibility/view_ax_platform_node_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [24 x i8] }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { %"struct.std::__1::pair.244"*, %"struct.std::__1::pair.244"*, %"class.std::__1::__compressed_pair.245" }
%"struct.std::__1::pair.244" = type opaque
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"struct.std::__1::pair.244"* }
%"class.std::__1::vector.250" = type { %"class.std::__1::__vector_base.251" }
%"class.std::__1::__vector_base.251" = type { %"struct.std::__1::pair.252"*, %"struct.std::__1::pair.252"*, %"class.std::__1::__compressed_pair.253" }
%"struct.std::__1::pair.252" = type opaque
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.std::__1::pair.252"* }
%"class.std::__1::vector.258" = type { %"class.std::__1::__vector_base.259" }
%"class.std::__1::__vector_base.259" = type { %"struct.std::__1::pair.260"*, %"struct.std::__1::pair.260"*, %"class.std::__1::__compressed_pair.261" }
%"struct.std::__1::pair.260" = type opaque
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::pair.260"* }
%"class.std::__1::vector.266" = type { %"class.std::__1::__vector_base.267" }
%"class.std::__1::__vector_base.267" = type { %"struct.std::__1::pair.268"*, %"struct.std::__1::pair.268"*, %"class.std::__1::__compressed_pair.269" }
%"struct.std::__1::pair.268" = type opaque
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::pair.268"* }
%"class.std::__1::vector.274" = type { %"class.std::__1::__vector_base.275" }
%"class.std::__1::__vector_base.275" = type { %"struct.std::__1::pair.276"*, %"struct.std::__1::pair.276"*, %"class.std::__1::__compressed_pair.277" }
%"struct.std::__1::pair.276" = type opaque
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"struct.std::__1::pair.276"* }
%"class.std::__1::vector.282" = type { %"class.std::__1::__vector_base.283" }
%"class.std::__1::__vector_base.283" = type { %"struct.std::__1::pair.284"*, %"struct.std::__1::pair.284"*, %"class.std::__1::__compressed_pair.285" }
%"struct.std::__1::pair.284" = type opaque
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.std::__1::pair.284"* }
%"class.std::__1::vector.290" = type { %"class.std::__1::__vector_base.291" }
%"class.std::__1::__vector_base.291" = type { %"struct.std::__1::pair.292"*, %"struct.std::__1::pair.292"*, %"class.std::__1::__compressed_pair.293" }
%"struct.std::__1::pair.292" = type opaque
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::pair.292"* }
%"class.std::__1::vector.298" = type { %"class.std::__1::__vector_base.299" }
%"class.std::__1::__vector_base.299" = type { i32*, i32*, %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { i32* }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult" = type <{ i32 (...)**, %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.views::Widget"**, %"class.views::Widget"**, %"class.std::__1::__compressed_pair.384" }
%"class.views::Widget" = type { %"class.views::internal::NativeWidgetDelegate", %"class.ui::EventSource", %"class.views::FocusTraversable", %"class.ui::NativeThemeObserver", %"class.ui::metadata::MetaDataProvider", %"class.views::internal::NativeWidgetPrivate"*, %"class.base::ObserverList", %"class.base::ObserverList.21", %"class.base::RepeatingCallbackList", %"class.views::WidgetDelegate"*, %"class.views::Widget"*, %"class.std::__1::unique_ptr.365", %"class.views::NonClientView"*, %"class.std::__1::unique_ptr.377", %"class.views::View"*, i32, i8, i32, i8, i64, i8, i32, i32, %"class.gfx::Rect", i8, i8, i8, i8, i8, i8, i8, %"class.gfx::Point", i8, %"class.std::__1::vector.93", i8, i8, i8, %"class.ui::NativeTheme"*, %"class.base::ScopedObservation", %"class.base::WeakPtrFactory.383" }
%"class.views::internal::NativeWidgetDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.views::FocusTraversable" = type { i32 (...)** }
%"class.ui::NativeThemeObserver" = type { i32 (...)** }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.views::internal::NativeWidgetPrivate" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.8", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.16" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.21" = type <{ %"class.std::__1::vector.22", %"class.base::LinkedList.29", i64, i32, [4 x i8] }>
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.24" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.29" = type { %"class.base::LinkNode.30" }
%"class.base::LinkNode.30" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list.32", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory" }
%"class.std::__1::list.32" = type { %"class.std::__1::__list_imp.33" }
%"class.std::__1::__list_imp.33" = type { %"struct.std::__1::__list_node_base.34", %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::__list_node_base.34" = type { %"struct.std::__1::__list_node_base.34"*, %"struct.std::__1::__list_node_base.34"* }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.39 }
%class.scoped_refptr.39 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.40", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.40" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.41 }
%class.scoped_refptr.41 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.views::WidgetDelegate" = type { i32 (...)**, %"class.views::Widget"*, %"struct.views::WidgetDelegate::Params", %"class.views::View"*, i8, i8, %"class.views::View"*, %"class.std::__1::unique_ptr.343", i8, i8*, %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.349", %"class.std::__1::vector.352", %"class.std::__1::vector.352", %"class.std::__1::vector.352", %"class.base::OnceCallback.362", %"class.base::RepeatingCallback.363", %"class.base::OnceCallback.364" }
%"struct.views::WidgetDelegate::Params" = type { i32, %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, %"class.gfx::ImageSkia", %"class.gfx::ImageSkia", %"class.absl::optional", %"class.std::__1::basic_string.334", i32, i8, i8, i8, i8, %"class.std::__1::basic_string" }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.47 }
%class.scoped_refptr.47 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.48 }
%union.anon.48 = type { %"class.views::View"* }
%"class.std::__1::basic_string.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.337 }
%union.anon.337 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.views::View"* }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.std::__1::vector.352"* }
%"class.std::__1::vector.352" = type { %"class.std::__1::__vector_base.353" }
%"class.std::__1::__vector_base.353" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.354" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.base::OnceCallback"* }
%"class.base::OnceCallback.362" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.363" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::OnceCallback.364" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.views::internal::RootView"* }
%"class.views::internal::RootView" = type opaque
%"class.views::NonClientView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate", %"class.views::ClientView"*, %"class.std::__1::unique_ptr.371", %"class.views::View"*, %"class.std::__1::basic_string" }
%"class.views::View.base" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.93", i8, [3 x i8], %"class.absl::optional.100", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.105", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.118", %"class.absl::optional.124", i8, [7 x i8], %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.135", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.161", i8, i8, [3 x i8], %"class.std::__1::vector.166", %"class.std::__1::unique_ptr.173", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.206", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.225", %"class.base::ObserverList.330", i32 }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList.52" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList.52" = type <{ %"class.std::__1::vector.22", %"class.base::LinkedList.53", i64, i32, [4 x i8] }>
%"class.base::LinkedList.53" = type { %"class.base::LinkNode.54" }
%"class.base::LinkNode.54" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.56", %"class.std::__1::vector.72", %"class.ui::EventHandler"* }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.79" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.72" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.65" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.58" }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.60" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.base::flat_map.68"* }
%"class.base::flat_map.68" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map.84" }
%"class.std::__1::map.84" = type { %"class.std::__1::__tree.85" }
%"class.std::__1::__tree.85" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.86", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.absl::optional.100" = type { %"class.absl::optional_internal::optional_data.101" }
%"class.absl::optional_internal::optional_data.101" = type { %"class.absl::optional_internal::optional_data_base.102" }
%"class.absl::optional_internal::optional_data_base.102" = type { %"class.absl::optional_internal::optional_data_dtor_base.103" }
%"class.absl::optional_internal::optional_data_dtor_base.103" = type { i8, %union.anon.104 }
%union.anon.104 = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.std::__1::vector.93"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.111, %class.SkTDArray.112, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.111 = type { i8*, i32, i32 }
%class.SkTDArray.112 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.113 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.11" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.113 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.114", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__cxx_atomic_impl.116" }
%"struct.std::__1::__cxx_atomic_impl.116" = type { %"struct.std::__1::__cxx_atomic_base_impl.117" }
%"struct.std::__1::__cxx_atomic_base_impl.117" = type { i8 }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.124" = type { %"class.absl::optional_internal::optional_data.125" }
%"class.absl::optional_internal::optional_data.125" = type { %"class.absl::optional_internal::optional_data_base.126" }
%"class.absl::optional_internal::optional_data_base.126" = type { %"class.absl::optional_internal::optional_data_dtor_base.127" }
%"class.absl::optional_internal::optional_data_dtor_base.127" = type { i8, %union.anon.128 }
%union.anon.128 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.views::Border"* }
%"class.views::Border" = type opaque
%"class.ui::PaintCache" = type <{ %class.sk_sp.141, float, [4 x i8] }>
%class.sk_sp.141 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.142", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { i8* }
%"class.absl::optional.161" = type { %"class.absl::optional_internal::optional_data.162" }
%"class.absl::optional_internal::optional_data.162" = type { %"class.absl::optional_internal::optional_data_base.163" }
%"class.absl::optional_internal::optional_data_base.163" = type { %"class.absl::optional_internal::optional_data_dtor_base.164" }
%"class.absl::optional_internal::optional_data_dtor_base.164" = type { i8, %union.anon.165 }
%union.anon.165 = type { i8 }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type { %"class.views::ViewObserver", %"class.views::Widget"*, %"class.std::__1::unique_ptr.179", %"class.views::View"*, %"class.ui::AcceleratorManager", i8, %"class.std::__1::unique_ptr.196", i32, [4 x i8], %"class.base::ObserverList.202", i8, i8, i32 }
%"class.views::ViewObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.views::FocusManagerDelegate"* }
%"class.views::FocusManagerDelegate" = type opaque
%"class.ui::AcceleratorManager" = type { %"class.ui::AcceleratorMap" }
%"class.ui::AcceleratorMap" = type { %"class.std::__1::map.185" }
%"class.std::__1::map.185" = type { %"class.std::__1::__tree.186" }
%"class.std::__1::__tree.186" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.187", %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.views::ViewTracker"* }
%"class.views::ViewTracker" = type opaque
%"class.base::ObserverList.202" = type <{ %"class.std::__1::vector.22", %"class.base::LinkedList.203", i64, i32, [4 x i8] }>
%"class.base::LinkedList.203" = type { %"class.base::LinkNode.204" }
%"class.base::LinkNode.204" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.std::__1::vector.209"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"class.ui::Accelerator"*, %"class.ui::Accelerator"*, %"class.std::__1::__compressed_pair.211" }
%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.ui::Accelerator"* }
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type { i32 (...)**, %"class.base::RepeatingCallback.228", %"class.views::View"*, %"class.std::__1::vector.229", %"class.views::AXVirtualView"*, %"class.ui::AXUniqueId", %"struct.ui::AXNodeData", i8, i8, %"class.absl::optional.161", %"class.views::Widget"*, %"class.views::Widget"*, %"class.absl::optional.311", %"class.std::__1::unique_ptr.321" }
%"class.base::RepeatingCallback.228" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.229" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"*, %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.views::AXVirtualView"* }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.std::__1::unique_ptr.231"* }
%"class.views::AXVirtualView" = type { %"class.ui::AXPlatformNodeDelegateBase", %"class.ui::AXPlatformNode"*, %"class.views::ViewAccessibility"*, %"class.views::AXVirtualView"*, %"class.std::__1::vector.229", %"class.views::AXAuraObjCache"*, %"class.ui::AXUniqueId", %"struct.ui::AXNodeData", %"class.base::RepeatingCallback.457" }
%"class.ui::AXPlatformNodeDelegateBase" = type { %"class.ui::AXPlatformNodeDelegate" }
%"class.ui::AXPlatformNodeDelegate" = type { i32 (...)** }
%"class.ui::AXPlatformNode" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.views::AXAuraObjCache" = type { %"class.aura::client::FocusChangeObserver", %"class.aura::Window"*, %"class.std::__1::unique_ptr.389", %"class.std::__1::map.395", %"class.std::__1::map.406", %"class.std::__1::map.417", %"class.std::__1::map.428", %"class.std::__1::map.439", %"class.views::AXAuraObjCache::Delegate"*, %"class.std::__1::set", %"class.aura::Window"*, %"class.views::Widget"* }
%"class.aura::client::FocusChangeObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.views::AXAuraObjCache::A11yOverrideWindowObserver"* }
%"class.views::AXAuraObjCache::A11yOverrideWindowObserver" = type opaque
%"class.std::__1::map.395" = type { %"class.std::__1::__tree.396" }
%"class.std::__1::__tree.396" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.397", %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::map.406" = type { %"class.std::__1::__tree.407" }
%"class.std::__1::__tree.407" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.408", %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::map.417" = type { %"class.std::__1::__tree.418" }
%"class.std::__1::__tree.418" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::map.428" = type { %"class.std::__1::__tree.429" }
%"class.std::__1::__tree.429" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.430", %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::map.439" = type { %"class.std::__1::__tree.440" }
%"class.std::__1::__tree.440" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.441", %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.views::AXAuraObjCache::Delegate" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree.450" }
%"class.std::__1::__tree.450" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.451", %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.aura::Window" = type opaque
%"class.base::RepeatingCallback.457" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.ui::AXUniqueId" = type <{ i32 (...)**, i32, [4 x i8] }>
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.242", %"class.std::__1::vector.250", %"class.std::__1::vector.258", %"class.std::__1::vector.266", %"class.std::__1::vector.274", %"class.std::__1::vector.282", %"class.std::__1::vector.290", %"class.std::__1::vector.298", %"struct.ui::AXRelativeBounds" }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.305" }
%"class.absl::optional.311" = type { %"class.absl::optional_internal::optional_data.312" }
%"class.absl::optional_internal::optional_data.312" = type { %"class.absl::optional_internal::optional_data_base.313" }
%"class.absl::optional_internal::optional_data_base.313" = type { %"class.absl::optional_internal::optional_data_dtor_base.314" }
%"class.absl::optional_internal::optional_data_dtor_base.314" = type { i8, %union.anon.315 }
%union.anon.315 = type { %"class.ui::AXTreeID" }
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional.316" }
%"class.absl::optional.316" = type { %"class.absl::optional_internal::optional_data.317" }
%"class.absl::optional_internal::optional_data.317" = type { %"class.absl::optional_internal::optional_data_base.318" }
%"class.absl::optional_internal::optional_data_base.318" = type { %"class.absl::optional_internal::optional_data_dtor_base.319" }
%"class.absl::optional_internal::optional_data_dtor_base.319" = type { i8, %union.anon.320 }
%union.anon.320 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.views::ViewsAXTreeManager"* }
%"class.views::ViewsAXTreeManager" = type opaque
%"class.base::ObserverList.330" = type <{ %"class.std::__1::vector.22", %"class.base::LinkedList.331", i64, i32, [4 x i8] }>
%"class.base::LinkedList.331" = type { %"class.base::LinkNode.332" }
%"class.base::LinkNode.332" = type { %"class.base::internal::LinkNodeBase" }
%"class.views::ViewTargeterDelegate" = type { i32 (...)** }
%"class.views::ClientView" = type { %"class.views::View.base", %"class.views::View"* }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.views::NonClientFrameView"* }
%"class.views::NonClientFrameView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate" }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.views::FocusManager"* }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.93", i8, [3 x i8], %"class.absl::optional.100", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.105", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.118", %"class.absl::optional.124", i8, [7 x i8], %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.135", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.161", i8, i8, [3 x i8], %"class.std::__1::vector.166", %"class.std::__1::unique_ptr.173", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.206", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.225", %"class.base::ObserverList.330", i32, [4 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.views::View"** }
%"class.ui::NativeTheme" = type <{ i32 (...)**, %"class.std::__1::map.146", %"class.base::ObserverList.157", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::map.146" = type { %"class.std::__1::__tree.147" }
%"class.std::__1::__tree.147" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.base::ObserverList.157" = type <{ %"class.std::__1::vector.22", %"class.base::LinkedList.158", i64, i32, [4 x i8] }>
%"class.base::LinkedList.158" = type { %"class.base::LinkNode.159" }
%"class.base::LinkNode.159" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ScopedObservation" = type { %"class.ui::NativeThemeObserver"*, %"class.ui::NativeTheme"* }
%"class.base::WeakPtrFactory.383" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.views::Widget"** }
%"class.views::ViewAXPlatformNodeDelegate" = type { %"class.views::ViewAccessibility", %"class.ui::AXPlatformNodeDelegateBase", %"class.ui::AXPlatformNode"*, %"struct.ui::AXNodeData" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::RepeatingCallback.458" = type { %"class.base::internal::CallbackBaseCopyable" }
%struct._AtkObject = type { %struct._GObject, i8*, i8*, %struct._AtkObject*, i32, %struct._AtkRelationSet*, i32 }
%struct._GObject = type { %struct._GTypeInstance, i32, %struct._GData* }
%struct._GTypeInstance = type { %struct._GTypeClass* }
%struct._GTypeClass = type { i64 }
%struct._GData = type opaque
%struct._AtkRelationSet = type { %struct._GObject, %struct._GPtrArray* }
%struct._GPtrArray = type { i8**, i32 }
%"class.ui::AXPlatformNodeBase" = type { %"class.ui::AXPlatformNode.base", %"class.ui::AXPlatformNodeDelegate"*, %"struct.ui::AXLegacyHypertext" }
%"class.ui::AXPlatformNode.base" = type <{ i32 (...)**, i8 }>
%"struct.ui::AXLegacyHypertext" = type { i8, %"class.std::__1::map.459", %"class.std::__1::vector.298", %"class.std::__1::basic_string" }
%"class.std::__1::map.459" = type { %"class.std::__1::__tree.460" }
%"class.std::__1::__tree.460" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.461", %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::vector.468" = type { %"class.std::__1::__vector_base.469" }
%"class.std::__1::__vector_base.469" = type { %"struct.views::(anonymous namespace)::QueuedEvent"*, %"struct.views::(anonymous namespace)::QueuedEvent"*, %"class.std::__1::__compressed_pair.470" }
%"struct.views::(anonymous namespace)::QueuedEvent" = type { i32, i32 }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"struct.views::(anonymous namespace)::QueuedEvent"* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.524 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.525" }>
%"class.base::RefCountedThreadSafe.525" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.525", [4 x i8] }>
%"class.std::__1::back_insert_iterator" = type { %"class.std::__1::vector"* }
%"class.std::__1::set.510" = type { %"class.std::__1::__tree.511" }
%"class.std::__1::__tree.511" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.512", %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.views::Widget"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.ui::AXActionData" = type { i32, %"class.ui::AXTreeID", %"class.std::__1::basic_string.334", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.gfx::Rect", %"class.gfx::Point", %"class.std::__1::basic_string.334", i32, i32, i32, i32 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.views::TableView" = type { %"class.views::View.base", %"class.ui::TableModelObserver", %"class.ui::TableModel"*, %"class.std::__1::vector.479", %"class.std::__1::vector.486", i32, %"class.views::FocusRing"*, %"class.views::TableHeader"*, i32, i8, i8, %"class.views::TableViewObserver"*, i8, %"class.ui::ListSelectionModel", %"class.gfx::FontList", i32, i32, i32, %"class.std::__1::vector.495", %"class.std::__1::vector.298", %"class.std::__1::vector.298", %"class.views::TableGrouper"*, i8, i8, %"class.base::WeakPtrFactory.502" }
%"class.ui::TableModelObserver" = type { i32 (...)** }
%"class.ui::TableModel" = type { i32 (...)** }
%"class.std::__1::vector.479" = type { %"class.std::__1::__vector_base.480" }
%"class.std::__1::__vector_base.480" = type { %"struct.ui::TableColumn"*, %"struct.ui::TableColumn"*, %"class.std::__1::__compressed_pair.481" }
%"struct.ui::TableColumn" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i32, float, i32, i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"struct.ui::TableColumn"* }
%"class.std::__1::vector.486" = type { %"class.std::__1::__vector_base.487" }
%"class.std::__1::__vector_base.487" = type { %"struct.views::TableView::VisibleColumn"*, %"struct.views::TableView::VisibleColumn"*, %"class.std::__1::__compressed_pair.488" }
%"struct.views::TableView::VisibleColumn" = type { %"struct.ui::TableColumn", i32, i32 }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"struct.views::TableView::VisibleColumn"* }
%"class.views::FocusRing" = type opaque
%"class.views::TableHeader" = type opaque
%"class.views::TableViewObserver" = type opaque
%"class.ui::ListSelectionModel" = type { %"class.base::internal::flat_tree.493", i32, i32 }
%"class.base::internal::flat_tree.493" = type { %"class.std::__1::vector.298" }
%"class.gfx::FontList" = type { %class.scoped_refptr.494 }
%class.scoped_refptr.494 = type { %"class.gfx::FontListImpl"* }
%"class.gfx::FontListImpl" = type opaque
%"class.std::__1::vector.495" = type { %"class.std::__1::__vector_base.496" }
%"class.std::__1::__vector_base.496" = type { %"struct.views::TableView::SortDescriptor"*, %"struct.views::TableView::SortDescriptor"*, %"class.std::__1::__compressed_pair.497" }
%"struct.views::TableView::SortDescriptor" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"struct.views::TableView::SortDescriptor"* }
%"class.views::TableGrouper" = type opaque
%"class.base::WeakPtrFactory.502" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.ui::AXTreeData" = type <{ i32 (...)**, %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.std::__1::basic_string.334", i8, [3 x i8], float, %"class.std::__1::basic_string.334", %"class.std::__1::basic_string.334", %"class.std::__1::basic_string.334", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.ui::AXNode::OwnerTree::Selection" = type { i8, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN4base8internal7InvokerINS0_9BindStateIPFvvEJEEES3_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvvEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorIPN5views6WidgetENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFPN2ui14AXPlatformNodeEPN4aura6WindowEEJEEES9_E3RunEPNS0_13BindStateBaseES8_ = comdat any

$_ZN4base8internal9BindStateIPFPN2ui14AXPlatformNodeEPN4aura6WindowEEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16__treeIPN5views6WidgetENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__120back_insert_iteratorINS_6vectorIPN5views6WidgetENS_9allocatorIS4_EEEEEaSERKS4_ = comdat any

@_ZTVN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"*)* @_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultD2Ev to i8*), i8* bitcast (void (%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"*)* @_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultD0Ev to i8*)] }, align 8
@_ZTVN5views26ViewAXPlatformNodeDelegateE = hidden unnamed_addr constant { [47 x i8*], [100 x i8*] } { [47 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZN5views26ViewAXPlatformNodeDelegateD2Ev to i8*), i8* bitcast (void (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZN5views26ViewAXPlatformNodeDelegateD0Ev to i8*), i8* bitcast (void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)* @_ZNK5views17ViewAccessibility21GetAccessibleNodeDataEPN2ui10AXNodeDataE to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate24IsAccessibilityFocusableEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate19IsFocusedForTestingEv to i8*), i8* bitcast (void (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZN5views26ViewAXPlatformNodeDelegate21SetPopupFocusOverrideEv to i8*), i8* bitcast (void (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZN5views26ViewAXPlatformNodeDelegate21EndPopupFocusOverrideEv to i8*), i8* bitcast (void (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZN5views26ViewAXPlatformNodeDelegate23FireFocusAfterMenuCloseEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate6IsLeafEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate13IsChildOfLeafEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate9IsIgnoredEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate22IsAccessibilityEnabledEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate15GetNativeObjectEv to i8*), i8* bitcast (void (%"class.views::ViewAXPlatformNodeDelegate"*, i32)* @_ZN5views26ViewAXPlatformNodeDelegate24NotifyAccessibilityEventEN2ax5mojom5EventE to i8*), i8* bitcast (void (%"class.views::ViewAccessibility"*, %"class.std::__1::basic_string"*)* @_ZN5views17ViewAccessibility12AnnounceTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE to i8*), i8* bitcast (%"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate11GetUniqueIdEv to i8*), i8* bitcast (%"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate7GetDataEv to i8*), i8* bitcast (i32 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate13GetChildCountEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*, i32)* @_ZN5views26ViewAXPlatformNodeDelegate12ChildAtIndexEi to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate14HasModalDialogEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZN5views26ViewAXPlatformNodeDelegate11GetNSWindowEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZN5views26ViewAXPlatformNodeDelegate23GetNativeViewAccessibleEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZN5views26ViewAXPlatformNodeDelegate9GetParentEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate20IsInvisibleOrIgnoredEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate9IsFocusedEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZN5views26ViewAXPlatformNodeDelegate23IsToplevelBrowserWindowEv to i8*), i8* bitcast ({ i64, i64 } (%"class.views::ViewAXPlatformNodeDelegate"*, i32, i32, i32*)* @_ZNK5views26ViewAXPlatformNodeDelegate13GetBoundsRectEN2ui18AXCoordinateSystemENS1_18AXClippingBehaviorEPNS1_17AXOffscreenResultE to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*, i32, i32)* @_ZNK5views26ViewAXPlatformNodeDelegate11HitTestSyncEii to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate8GetFocusEv to i8*), i8* bitcast (%"class.ui::AXPlatformNode"* (%"class.views::ViewAXPlatformNodeDelegate"*, i32)* @_ZN5views26ViewAXPlatformNodeDelegate13GetFromNodeIDEi to i8*), i8* bitcast (%"class.ui::AXPlatformNode"* (%"class.views::ViewAXPlatformNodeDelegate"*, %"class.ui::AXTreeID"*, i32)* @_ZN5views26ViewAXPlatformNodeDelegate22GetFromTreeIDAndNodeIDERKN2ui8AXTreeIDEi to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*, %"struct.ui::AXActionData"*)* @_ZN5views26ViewAXPlatformNodeDelegate26AccessibilityPerformActionERKN2ui12AXActionDataE to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZN5views26ViewAXPlatformNodeDelegate34ShouldIgnoreHoveredStateForTestingEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate11IsOffscreenEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate17GetAuthorUniqueIdEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate11IsMinimizedEv to i8*), i8* bitcast (i16 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate32GetTableHasColumnOrRowHeaderNodeEv to i8*), i8* bitcast (void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate19GetColHeaderNodeIdsEv to i8*), i8* bitcast (void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*, i32)* @_ZNK5views26ViewAXPlatformNodeDelegate19GetColHeaderNodeIdsEi to i8*), i8* bitcast (i64 (%"class.views::ViewAXPlatformNodeDelegate"*, i32, i32)* @_ZNK5views26ViewAXPlatformNodeDelegate9GetCellIdEii to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate16IsOrderedSetItemEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate12IsOrderedSetEv to i8*), i8* bitcast (i64 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate11GetPosInSetEv to i8*), i8* bitcast (i64 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZNK5views26ViewAXPlatformNodeDelegate10GetSetSizeEv to i8*), i8* bitcast (void (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZN5views26ViewAXPlatformNodeDelegate4InitEv to i8*)], [100 x i8*] [i8* inttoptr (i64 -408 to i8*), i8* null, i8* bitcast (void (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_N5views26ViewAXPlatformNodeDelegateD1Ev to i8*), i8* bitcast (void (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_N5views26ViewAXPlatformNodeDelegateD0Ev to i8*), i8* bitcast (%"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate7GetDataEv to i8*), i8* bitcast (%"struct.ui::AXTreeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase11GetTreeDataEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase12GetInnerTextEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase18GetValueForControlEv to i8*), i8* bitcast (void (%"struct.ui::AXNode::OwnerTree::Selection"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase21GetUnignoredSelectionEv to i8*), i8* bitcast (void ()* @_ZNK2ui26AXPlatformNodeDelegateBase20CreateTextPositionAtEi to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_N5views26ViewAXPlatformNodeDelegate11GetNSWindowEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_N5views26ViewAXPlatformNodeDelegate23GetNativeViewAccessibleEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_N5views26ViewAXPlatformNodeDelegate9GetParentEv to i8*), i8* bitcast (i32 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase16GetIndexInParentEv to i8*), i8* bitcast (i32 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate13GetChildCountEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*, i32)* @_ZThn408_N5views26ViewAXPlatformNodeDelegate12ChildAtIndexEi to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate14HasModalDialogEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase13GetFirstChildEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase12GetLastChildEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase14GetNextSiblingEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase18GetPreviousSiblingEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate13IsChildOfLeafEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase29IsDescendantOfAtomicTextFieldEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate9IsIgnoredEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate6IsLeafEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate20IsInvisibleOrIgnoredEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate9IsFocusedEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_N5views26ViewAXPlatformNodeDelegate23IsToplevelBrowserWindowEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase25GetLowestPlatformAncestorEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTextFieldAncestorEv to i8*), i8* bitcast (void ()* @_ZN2ui26AXPlatformNodeDelegateBase13ChildrenBeginEv to i8*), i8* bitcast (void ()* @_ZN2ui26AXPlatformNodeDelegateBase11ChildrenEndEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.334"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase7GetNameEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase12GetHypertextEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32)* @_ZN2ui26AXPlatformNodeDelegateBase21SetHypertextSelectionEii to i8*), i8* bitcast (void ()* @_ZNK2ui26AXPlatformNodeDelegateBase23ComputeTextAttributeMapERKNSt3__16vectorINS1_4pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_EENS7_ISA_EEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string.334"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase26GetInheritedFontFamilyNameEv to i8*), i8* bitcast ({ i64, i64 } (%"class.views::ViewAXPlatformNodeDelegate"*, i32, i32, i32*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate13GetBoundsRectEN2ui18AXCoordinateSystemENS1_18AXClippingBehaviorEPNS1_17AXOffscreenResultE to i8*), i8* bitcast ({ i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32*)* @_ZNK2ui26AXPlatformNodeDelegateBase26GetClippedScreenBoundsRectEPNS_17AXOffscreenResultE to i8*), i8* bitcast ({ i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32, i32, i32*)* @_ZNK2ui26AXPlatformNodeDelegateBase27GetHypertextRangeBoundsRectEiiNS_18AXCoordinateSystemENS_18AXClippingBehaviorEPNS_17AXOffscreenResultE to i8*), i8* bitcast ({ i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32, i32, i32*)* @_ZNK2ui26AXPlatformNodeDelegateBase27GetInnerTextRangeBoundsRectEiiNS_18AXCoordinateSystemENS_18AXClippingBehaviorEPNS_17AXOffscreenResultE to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*, i32, i32)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate11HitTestSyncEii to i8*), i8* bitcast (%struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate8GetFocusEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate11IsOffscreenEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate11IsMinimizedEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase6IsTextEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase12IsWebContentEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase26HasVisibleCaretOrSelectionEv to i8*), i8* bitcast (%"class.ui::AXPlatformNode"* (%"class.views::ViewAXPlatformNodeDelegate"*, i32)* @_ZThn408_N5views26ViewAXPlatformNodeDelegate13GetFromNodeIDEi to i8*), i8* bitcast (%"class.ui::AXPlatformNode"* (%"class.views::ViewAXPlatformNodeDelegate"*, %"class.ui::AXTreeID"*, i32)* @_ZThn408_N5views26ViewAXPlatformNodeDelegate22GetFromTreeIDAndNodeIDERKN2ui8AXTreeIDEi to i8*), i8* bitcast (%"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZN2ui26AXPlatformNodeDelegateBase24GetTargetNodeForRelationEN2ax5mojom12IntAttributeE to i8*), i8* bitcast (void ()* @_ZN2ui26AXPlatformNodeDelegateBase25GetTargetNodesForRelationEN2ax5mojom16IntListAttributeE to i8*), i8* bitcast (void ()* @_ZN2ui26AXPlatformNodeDelegateBase19GetReverseRelationsEN2ax5mojom12IntAttributeE to i8*), i8* bitcast (void ()* @_ZN2ui26AXPlatformNodeDelegateBase19GetReverseRelationsEN2ax5mojom16IntListAttributeE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate17GetAuthorUniqueIdEv to i8*), i8* bitcast (%"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate11GetUniqueIdEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase16FindTextBoundaryEN2ax5mojom12TextBoundaryEiNS2_13MoveDirectionENS2_12TextAffinityE to i8*), i8* bitcast (void ()* @_ZNK2ui26AXPlatformNodeDelegateBase17GetUIADescendantsEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.334"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase11GetLanguageEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase7IsTableEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase16GetTableColCountEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase16GetTableRowCountEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableAriaColCountEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableAriaRowCountEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase17GetTableCellCountEv to i8*), i8* bitcast (i16 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate32GetTableHasColumnOrRowHeaderNodeEv to i8*), i8* bitcast (void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate19GetColHeaderNodeIdsEv to i8*), i8* bitcast (void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*, i32)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate19GetColHeaderNodeIdsEi to i8*), i8* bitcast (void (%"class.std::__1::vector.298"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetRowHeaderNodeIdsEv to i8*), i8* bitcast (void (%"class.std::__1::vector.298"*, %"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetRowHeaderNodeIdsEi to i8*), i8* bitcast (%"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase15GetTableCaptionEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase10IsTableRowEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableRowRowIndexEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19IsTableCellOrHeaderEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase17GetTableCellIndexEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableCellColIndexEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableCellRowIndexEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableCellColSpanEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableCellRowSpanEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase24GetTableCellAriaColIndexEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase24GetTableCellAriaRowIndexEv to i8*), i8* bitcast (i64 (%"class.views::ViewAXPlatformNodeDelegate"*, i32, i32)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate9GetCellIdEii to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase13CellIndexToIdEi to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase25IsCellOrHeaderOfARIATableEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase24IsCellOrHeaderOfARIAGridEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate16IsOrderedSetItemEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate12IsOrderedSetEv to i8*), i8* bitcast (i64 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate11GetPosInSetEv to i8*), i8* bitcast (i64 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate10GetSetSizeEv to i8*), i8* bitcast (i32 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase8GetColorEv to i8*), i8* bitcast (i32 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase18GetBackgroundColorEv to i8*), i8* bitcast (i32 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase36GetTargetForNativeAccessibilityEventEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*, %"struct.ui::AXActionData"*)* @_ZThn408_N5views26ViewAXPlatformNodeDelegate26AccessibilityPerformActionERKN2ui12AXActionDataE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase44GetLocalizedRoleDescriptionForUnlabeledImageEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase42GetLocalizedStringForImageAnnotationStatusEN2ax5mojom21ImageAnnotationStatusE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase33GetLocalizedStringForLandmarkTypeEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase36GetLocalizedStringForRoleDescriptionEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase38GetStyleNameAttributeAsLocalizedStringEv to i8*), i8* bitcast (i1 (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZThn408_N5views26ViewAXPlatformNodeDelegate34ShouldIgnoreHoveredStateForTestingEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.334"*, %"class.ui::AXPlatformNodeDelegateBase"*, i64)* @_ZN2ui26AXPlatformNodeDelegateBase21SubtreeToStringHelperEm to i8*)] }, align 8
@_ZZN5views26ViewAXPlatformNodeDelegate4InitEvE10first_time = internal unnamed_addr global i1 false, align 1
@_ZN5views12_GLOBAL__N_120g_is_queueing_eventsE = internal unnamed_addr global i1 false, align 1
@_ZN5views12_GLOBAL__N_113g_event_queueE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@.str = private unnamed_addr constant [6 x i16] [i16 118, i16 105, i16 101, i16 119, i16 95, i16 0], align 2
@.str.1 = private unnamed_addr constant [35 x i8] c"PostFlushEventQueueTaskIfNecessary\00", align 1
@.str.2 = private unnamed_addr constant [63 x i8] c"../../ui/views/accessibility/view_ax_platform_node_delegate.cc\00", align 1
@"__const._ZZNK5views26ViewAXPlatformNodeDelegate11HitTestSyncEiiENK3$_0clEPNS_4ViewE.child_data" = private unnamed_addr constant { i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.242", %"class.std::__1::vector.250", %"class.std::__1::vector.258", %"class.std::__1::vector.266", %"class.std::__1::vector.274", %"class.std::__1::vector.282", %"class.std::__1::vector.290", %"class.std::__1::vector.298", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.305" } } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, %"class.std::__1::vector.242" { %"class.std::__1::__vector_base.243" { %"struct.std::__1::pair.244"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.244"*), %"struct.std::__1::pair.244"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.244"*), %"class.std::__1::__compressed_pair.245" { %"struct.std::__1::__compressed_pair_elem.246" { %"struct.std::__1::pair.244"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.244"*) } } } }, %"class.std::__1::vector.250" { %"class.std::__1::__vector_base.251" { %"struct.std::__1::pair.252"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.252"*), %"struct.std::__1::pair.252"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.252"*), %"class.std::__1::__compressed_pair.253" { %"struct.std::__1::__compressed_pair_elem.254" { %"struct.std::__1::pair.252"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.252"*) } } } }, %"class.std::__1::vector.258" { %"class.std::__1::__vector_base.259" { %"struct.std::__1::pair.260"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.260"*), %"struct.std::__1::pair.260"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.260"*), %"class.std::__1::__compressed_pair.261" { %"struct.std::__1::__compressed_pair_elem.262" { %"struct.std::__1::pair.260"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.260"*) } } } }, %"class.std::__1::vector.266" { %"class.std::__1::__vector_base.267" { %"struct.std::__1::pair.268"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.268"*), %"struct.std::__1::pair.268"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.268"*), %"class.std::__1::__compressed_pair.269" { %"struct.std::__1::__compressed_pair_elem.270" { %"struct.std::__1::pair.268"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.268"*) } } } }, %"class.std::__1::vector.274" { %"class.std::__1::__vector_base.275" { %"struct.std::__1::pair.276"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.276"*), %"struct.std::__1::pair.276"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.276"*), %"class.std::__1::__compressed_pair.277" { %"struct.std::__1::__compressed_pair_elem.278" { %"struct.std::__1::pair.276"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.276"*) } } } }, %"class.std::__1::vector.282" { %"class.std::__1::__vector_base.283" { %"struct.std::__1::pair.284"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.284"*), %"struct.std::__1::pair.284"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.284"*), %"class.std::__1::__compressed_pair.285" { %"struct.std::__1::__compressed_pair_elem.286" { %"struct.std::__1::pair.284"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.284"*) } } } }, %"class.std::__1::vector.290" { %"class.std::__1::__vector_base.291" { %"struct.std::__1::pair.292"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.292"*), %"struct.std::__1::pair.292"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.292"*), %"class.std::__1::__compressed_pair.293" { %"struct.std::__1::__compressed_pair_elem.294" { %"struct.std::__1::pair.292"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.292"*) } } } }, %"class.std::__1::vector.298" { %"class.std::__1::__vector_base.299" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.300" { %"struct.std::__1::__compressed_pair_elem.301" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.305" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, %"class.gfx::RectF" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.305" { %"class.std::__1::__compressed_pair.306" { %"struct.std::__1::__compressed_pair_elem.307" { %"class.gfx::Transform"* inttoptr (i64 -6148914691236517206 to %"class.gfx::Transform"*) } } } } }, align 8

@_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultC1Ev = hidden unnamed_addr alias void (%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"*), void (%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"*)* @_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultC2Ev
@_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultC1ENSt3__16vectorIPNS_6WidgetENS2_9allocatorIS5_EEEEb = hidden unnamed_addr alias void (%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"*, %"class.std::__1::vector"*, i1), void (%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"*, %"class.std::__1::vector"*, i1)* @_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultC2ENSt3__16vectorIPNS_6WidgetENS2_9allocatorIS5_EEEEb
@_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultC1ERKS1_ = hidden unnamed_addr alias void (%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"*, %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"*), void (%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"*, %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"*)* @_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultC2ERKS1_
@_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultD1Ev = hidden unnamed_addr alias void (%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"*), void (%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"*)* @_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultD2Ev
@_ZN5views26ViewAXPlatformNodeDelegateC1EPNS_4ViewE = hidden unnamed_addr alias void (%"class.views::ViewAXPlatformNodeDelegate"*, %"class.views::View"*), void (%"class.views::ViewAXPlatformNodeDelegate"*, %"class.views::View"*)* @_ZN5views26ViewAXPlatformNodeDelegateC2EPNS_4ViewE
@_ZN5views26ViewAXPlatformNodeDelegateD1Ev = hidden unnamed_addr alias void (%"class.views::ViewAXPlatformNodeDelegate"*), void (%"class.views::ViewAXPlatformNodeDelegate"*)* @_ZN5views26ViewAXPlatformNodeDelegateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultC2Ev(%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultC2ENSt3__16vectorIPNS_6WidgetENS2_9allocatorIS5_EEEEb(%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"*, %"class.std::__1::vector"* nocapture readonly, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #10
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %9 = bitcast %"class.views::Widget"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %3
  %17 = icmp ugt i64 %14, 2305843009213693951
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #11
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #12
  %22 = bitcast i8* %21 to %"class.views::Widget"**
  %23 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = bitcast %"class.views::Widget"*** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %22, i64 %14
  %27 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.views::Widget"** %26, %"class.views::Widget"*** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %29 = load %"class.views::Widget"**, %"class.views::Widget"*** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast %"class.views::Widget"*** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint %"class.views::Widget"** %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = lshr exact i64 %34, 3
  %38 = bitcast %"class.views::Widget"** %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %38, i64 %34, i1 false) #10
  %39 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %22, i64 %37
  %40 = ptrtoint %"class.views::Widget"** %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %3, %41
  %44 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 2
  store i8 %4, i8* %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultC2ERKS1_(%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"*, %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %1, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  %7 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %1, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.views::Widget"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %5 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %42, label %15

15:                                               ; preds = %2
  %16 = icmp ugt i64 %13, 2305843009213693951
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #11
  unreachable

19:                                               ; preds = %15
  %20 = tail call i8* @_Znwm(i64 %12) #12
  %21 = bitcast i8* %20 to %"class.views::Widget"**
  %22 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = bitcast %"class.views::Widget"*** %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %20, i8** %24, align 8
  %25 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %21, i64 %13
  %26 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.views::Widget"** %25, %"class.views::Widget"*** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %28 = load %"class.views::Widget"**, %"class.views::Widget"*** %27, align 8
  %29 = load i64, i64* %8, align 8
  %30 = bitcast %"class.views::Widget"*** %22 to i64*
  %31 = ptrtoint i8* %20 to i64
  %32 = ptrtoint %"class.views::Widget"** %28 to i64
  %33 = sub i64 %29, %32
  %34 = icmp sgt i64 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %19
  %36 = lshr exact i64 %33, 3
  %37 = bitcast %"class.views::Widget"** %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %37, i64 %33, i1 false) #10
  %38 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %21, i64 %36
  %39 = ptrtoint %"class.views::Widget"** %38 to i64
  br label %40

40:                                               ; preds = %35, %19
  %41 = phi i64 [ %39, %35 ], [ %31, %19 ]
  store i64 %41, i64* %30, align 8
  br label %42

42:                                               ; preds = %2, %40
  %43 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 2
  %44 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %1, i64 0, i32 2
  %45 = load i8, i8* %44, align 8, !range !2
  store i8 %45, i8* %43, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultD2Ev(%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.views::Widget"**, %"class.views::Widget"*** %3, align 8
  %5 = icmp eq %"class.views::Widget"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.views::Widget"** %4 to i64
  %8 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.views::Widget"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.views::Widget"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultD0Ev(%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.views::Widget"**, %"class.views::Widget"*** %3, align 8
  %5 = icmp eq %"class.views::Widget"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.views::Widget"** %4 to i64
  %8 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.views::Widget"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.views::Widget"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* @_ZN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultaSERKS1_(%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* returned, %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, %1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.views::Widget"**, %"class.views::Widget"*** %6, align 8
  %8 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %1, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.views::Widget"**, %"class.views::Widget"*** %8, align 8
  tail call void @_ZNSt3__16vectorIPN5views6WidgetENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"* %5, %"class.views::Widget"** %7, %"class.views::Widget"** %9) #10
  br label %10

10:                                               ; preds = %2, %4
  %11 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 2
  store i8 %12, i8* %13, align 8
  ret %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views26ViewAXPlatformNodeDelegateC2EPNS_4ViewE(%"class.views::ViewAXPlatformNodeDelegate"*, %"class.views::View"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0
  tail call void @_ZN5views17ViewAccessibilityC2EPNS_4ViewE(%"class.views::ViewAccessibility"* %3, %"class.views::View"* %1) #10
  %4 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 1
  tail call void @_ZN2ui26AXPlatformNodeDelegateBaseC2Ev(%"class.ui::AXPlatformNodeDelegateBase"* %4) #10
  %5 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [100 x i8*] }, { [47 x i8*], [100 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase", %"class.ui::AXPlatformNodeDelegateBase"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [100 x i8*] }, { [47 x i8*], [100 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegateE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 2
  store %"class.ui::AXPlatformNode"* null, %"class.ui::AXPlatformNode"** %7, align 8
  %8 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 3
  tail call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* %8) #10
  ret void
}

declare void @_ZN5views17ViewAccessibilityC2EPNS_4ViewE(%"class.views::ViewAccessibility"*, %"class.views::View"*) unnamed_addr #2

declare void @_ZN2ui26AXPlatformNodeDelegateBaseC2Ev(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views26ViewAXPlatformNodeDelegate4InitEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::RepeatingCallback.458", align 8
  %3 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 1, i32 0
  %4 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode6CreateEPNS_22AXPlatformNodeDelegateE(%"class.ui::AXPlatformNodeDelegate"* %3) #10
  %5 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 2
  store %"class.ui::AXPlatformNode"* %4, %"class.ui::AXPlatformNode"** %5, align 8
  %6 = load i1, i1* @_ZZN5views26ViewAXPlatformNodeDelegate4InitEvE10first_time, align 1
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = tail call i8* @_Znwm(i64 48) #12, !noalias !3
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (%"class.ui::AXPlatformNode"* (%"class.base::internal::BindStateBase"*, %"class.aura::Window"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFPN2ui14AXPlatformNodeEPN4aura6WindowEEJEEES9_E3RunEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFPN2ui14AXPlatformNodeEPN4aura6WindowEEJEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !3
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (%"class.ui::AXPlatformNode"* (%"class.aura::Window"*)* @_ZN5views12_GLOBAL__N_116FromNativeWindowEPN4aura6WindowE to i64), i64* %11, align 8, !noalias !3
  %12 = bitcast %"class.base::RepeatingCallback.458"* %2 to i8**
  store i8* %8, i8** %12, align 8, !alias.scope !3
  call void @_ZN2ui14AXPlatformNode27RegisterNativeWindowHandlerEN4base17RepeatingCallbackIFPS0_PN4aura6WindowEEEE(%"class.base::RepeatingCallback.458"* nonnull %2) #10
  %13 = getelementptr inbounds %"class.base::RepeatingCallback.458", %"class.base::RepeatingCallback.458"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #10
  store i1 true, i1* @_ZZN5views26ViewAXPlatformNodeDelegate4InitEvE10first_time, align 1
  br label %14

14:                                               ; preds = %1, %7
  ret void
}

declare %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode6CreateEPNS_22AXPlatformNodeDelegateE(%"class.ui::AXPlatformNodeDelegate"*) local_unnamed_addr #2

declare void @_ZN2ui14AXPlatformNode27RegisterNativeWindowHandlerEN4base17RepeatingCallbackIFPS0_PN4aura6WindowEEEE(%"class.base::RepeatingCallback.458"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define internal %"class.ui::AXPlatformNode"* @_ZN5views12_GLOBAL__N_116FromNativeWindowEPN4aura6WindowE(%"class.aura::Window"*) #0 {
  %2 = tail call %"class.views::Widget"* @_ZN5views6Widget24GetWidgetForNativeWindowEPN4aura6WindowE(%"class.aura::Window"* %0) #10
  %3 = icmp eq %"class.views::Widget"* %2, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %1
  %5 = tail call %"class.views::View"* @_ZN5views6Widget11GetRootViewEv(%"class.views::Widget"* nonnull %2) #10
  %6 = icmp eq %"class.views::View"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.views::View"* %5 to %struct._AtkObject* (%"class.views::View"*)***
  %9 = load %struct._AtkObject* (%"class.views::View"*)**, %struct._AtkObject* (%"class.views::View"*)*** %8, align 8
  %10 = getelementptr inbounds %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %9, i64 83
  %11 = load %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %10, align 8
  %12 = tail call %struct._AtkObject* %11(%"class.views::View"* nonnull %5) #10
  %13 = icmp eq %struct._AtkObject* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %7
  %15 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* nonnull %12) #10
  br label %16

16:                                               ; preds = %4, %7, %14, %1
  %17 = phi %"class.ui::AXPlatformNode"* [ null, %1 ], [ null, %4 ], [ %15, %14 ], [ null, %7 ]
  ret %"class.ui::AXPlatformNode"* %17
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views26ViewAXPlatformNodeDelegateD2Ev(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [100 x i8*] }, { [47 x i8*], [100 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase", %"class.ui::AXPlatformNodeDelegateBase"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [100 x i8*] }, { [47 x i8*], [100 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegateE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = tail call %struct._AtkObject* @_ZN2ui14AXPlatformNode21GetPopupFocusOverrideEv() #10
  %6 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 2
  %7 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %6, align 8
  %8 = bitcast %"class.ui::AXPlatformNode"* %7 to %struct._AtkObject* (%"class.ui::AXPlatformNode"*)***
  %9 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*** %8, align 8
  %10 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %9, i64 1
  %11 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %10, align 8
  %12 = tail call %struct._AtkObject* %11(%"class.ui::AXPlatformNode"* %7) #10
  %13 = icmp eq %struct._AtkObject* %5, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  tail call void @_ZN2ui14AXPlatformNode21SetPopupFocusOverrideEP10_AtkObject(%struct._AtkObject* null) #10
  br label %15

15:                                               ; preds = %14, %1
  %16 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %6, align 8
  %17 = bitcast %"class.ui::AXPlatformNode"* %16 to void (%"class.ui::AXPlatformNode"*)***
  %18 = load void (%"class.ui::AXPlatformNode"*)**, void (%"class.ui::AXPlatformNode"*)*** %17, align 8
  %19 = load void (%"class.ui::AXPlatformNode"*)*, void (%"class.ui::AXPlatformNode"*)** %18, align 8
  tail call void %19(%"class.ui::AXPlatformNode"* %16) #10
  %20 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 3
  tail call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* %20) #10
  tail call void @_ZN2ui26AXPlatformNodeDelegateBaseD2Ev(%"class.ui::AXPlatformNodeDelegateBase"* %3) #10
  %21 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0
  tail call void @_ZN5views17ViewAccessibilityD2Ev(%"class.views::ViewAccessibility"* %21) #10
  ret void
}

declare %struct._AtkObject* @_ZN2ui14AXPlatformNode21GetPopupFocusOverrideEv() local_unnamed_addr #2

declare void @_ZN2ui14AXPlatformNode21SetPopupFocusOverrideEP10_AtkObject(%struct._AtkObject*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2ui26AXPlatformNodeDelegateBaseD2Ev(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5views17ViewAccessibilityD2Ev(%"class.views::ViewAccessibility"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn408_N5views26ViewAXPlatformNodeDelegateD1Ev(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = bitcast i32** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [100 x i8*] }, { [47 x i8*], [100 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32*, i32** %2, i64 51
  %5 = bitcast i32** %4 to %"class.ui::AXPlatformNodeDelegateBase"*
  %6 = bitcast i32** %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [100 x i8*] }, { [47 x i8*], [100 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegateE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = tail call %struct._AtkObject* @_ZN2ui14AXPlatformNode21GetPopupFocusOverrideEv() #10
  %8 = getelementptr inbounds i32*, i32** %2, i64 52
  %9 = bitcast i32** %8 to %"class.ui::AXPlatformNode"**
  %10 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %9, align 8
  %11 = bitcast %"class.ui::AXPlatformNode"* %10 to %struct._AtkObject* (%"class.ui::AXPlatformNode"*)***
  %12 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*** %11, align 8
  %13 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %12, i64 1
  %14 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %13, align 8
  %15 = tail call %struct._AtkObject* %14(%"class.ui::AXPlatformNode"* %10) #10
  %16 = icmp eq %struct._AtkObject* %7, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %1
  tail call void @_ZN2ui14AXPlatformNode21SetPopupFocusOverrideEP10_AtkObject(%struct._AtkObject* null) #10
  br label %18

18:                                               ; preds = %1, %17
  %19 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %9, align 8
  %20 = bitcast %"class.ui::AXPlatformNode"* %19 to void (%"class.ui::AXPlatformNode"*)***
  %21 = load void (%"class.ui::AXPlatformNode"*)**, void (%"class.ui::AXPlatformNode"*)*** %20, align 8
  %22 = load void (%"class.ui::AXPlatformNode"*)*, void (%"class.ui::AXPlatformNode"*)** %21, align 8
  tail call void %22(%"class.ui::AXPlatformNode"* %19) #10
  %23 = getelementptr inbounds i32*, i32** %2, i64 53
  %24 = bitcast i32** %23 to %"struct.ui::AXNodeData"*
  tail call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* %24) #10
  tail call void @_ZN2ui26AXPlatformNodeDelegateBaseD2Ev(%"class.ui::AXPlatformNodeDelegateBase"* %5) #10
  %25 = bitcast i32** %2 to %"class.views::ViewAccessibility"*
  tail call void @_ZN5views17ViewAccessibilityD2Ev(%"class.views::ViewAccessibility"* %25) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views26ViewAXPlatformNodeDelegateD0Ev(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [100 x i8*] }, { [47 x i8*], [100 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase", %"class.ui::AXPlatformNodeDelegateBase"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [47 x i8*], [100 x i8*] }, { [47 x i8*], [100 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegateE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = tail call %struct._AtkObject* @_ZN2ui14AXPlatformNode21GetPopupFocusOverrideEv() #10
  %6 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 2
  %7 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %6, align 8
  %8 = bitcast %"class.ui::AXPlatformNode"* %7 to %struct._AtkObject* (%"class.ui::AXPlatformNode"*)***
  %9 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*** %8, align 8
  %10 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %9, i64 1
  %11 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %10, align 8
  %12 = tail call %struct._AtkObject* %11(%"class.ui::AXPlatformNode"* %7) #10
  %13 = icmp eq %struct._AtkObject* %5, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  tail call void @_ZN2ui14AXPlatformNode21SetPopupFocusOverrideEP10_AtkObject(%struct._AtkObject* null) #10
  br label %15

15:                                               ; preds = %1, %14
  %16 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %6, align 8
  %17 = bitcast %"class.ui::AXPlatformNode"* %16 to void (%"class.ui::AXPlatformNode"*)***
  %18 = load void (%"class.ui::AXPlatformNode"*)**, void (%"class.ui::AXPlatformNode"*)*** %17, align 8
  %19 = load void (%"class.ui::AXPlatformNode"*)*, void (%"class.ui::AXPlatformNode"*)** %18, align 8
  tail call void %19(%"class.ui::AXPlatformNode"* %16) #10
  %20 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 3
  tail call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* %20) #10
  tail call void @_ZN2ui26AXPlatformNodeDelegateBaseD2Ev(%"class.ui::AXPlatformNodeDelegateBase"* %3) #10
  %21 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0
  tail call void @_ZN5views17ViewAccessibilityD2Ev(%"class.views::ViewAccessibility"* %21) #10
  %22 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn408_N5views26ViewAXPlatformNodeDelegateD0Ev(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = bitcast i32** %2 to %"class.views::ViewAXPlatformNodeDelegate"*
  tail call void @_ZN5views26ViewAXPlatformNodeDelegateD0Ev(%"class.views::ViewAXPlatformNodeDelegate"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views26ViewAXPlatformNodeDelegate24IsAccessibilityFocusableEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %3, i64 16
  %5 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  %7 = tail call zeroext i1 @_ZNK2ui10AXNodeData8HasStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %6, i32 6) #10
  ret i1 %7
}

declare zeroext i1 @_ZNK2ui10AXNodeData8HasStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views26ViewAXPlatformNodeDelegate19IsFocusedForTestingEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = tail call %struct._AtkObject* @_ZN2ui14AXPlatformNode21GetPopupFocusOverrideEv() #10
  %3 = icmp eq %struct._AtkObject* %2, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = tail call %struct._AtkObject* @_ZN2ui14AXPlatformNode21GetPopupFocusOverrideEv() #10
  %6 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %7 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %6, align 8
  %8 = getelementptr inbounds %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %7, i64 21
  %9 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %8, align 8
  %10 = tail call %struct._AtkObject* %9(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  %11 = icmp eq %struct._AtkObject* %5, %10
  br label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0
  %14 = tail call zeroext i1 @_ZNK5views17ViewAccessibility19IsFocusedForTestingEv(%"class.views::ViewAccessibility"* %13) #10
  br label %15

15:                                               ; preds = %12, %4
  %16 = phi i1 [ %11, %4 ], [ %14, %12 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZNK5views26ViewAXPlatformNodeDelegate23GetNativeViewAccessibleEv(%"class.views::ViewAXPlatformNodeDelegate"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %3 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %2, align 8
  %4 = getelementptr inbounds %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %3, i64 21
  %5 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %4, align 8
  %6 = tail call %struct._AtkObject* %5(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  ret %struct._AtkObject* %6
}

declare zeroext i1 @_ZNK5views17ViewAccessibility19IsFocusedForTestingEv(%"class.views::ViewAccessibility"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views26ViewAXPlatformNodeDelegate21SetPopupFocusOverrideEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %3 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %2, align 8
  %4 = getelementptr inbounds %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %3, i64 21
  %5 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %4, align 8
  %6 = tail call %struct._AtkObject* %5(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  tail call void @_ZN2ui14AXPlatformNode21SetPopupFocusOverrideEP10_AtkObject(%struct._AtkObject* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views26ViewAXPlatformNodeDelegate21EndPopupFocusOverrideEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN2ui14AXPlatformNode21SetPopupFocusOverrideEP10_AtkObject(%struct._AtkObject* null) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views26ViewAXPlatformNodeDelegate23FireFocusAfterMenuCloseEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 2
  %3 = bitcast %"class.ui::AXPlatformNode"** %2 to %"class.ui::AXPlatformNodeBase"**
  %4 = load %"class.ui::AXPlatformNodeBase"*, %"class.ui::AXPlatformNodeBase"** %3, align 8
  br label %5

5:                                                ; preds = %8, %1
  %6 = phi %"class.ui::AXPlatformNodeBase"* [ %4, %1 ], [ %11, %8 ]
  %7 = icmp eq %"class.ui::AXPlatformNodeBase"* %6, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %5
  %9 = tail call %struct._AtkObject* @_ZNK2ui18AXPlatformNodeBase8GetFocusEv(%"class.ui::AXPlatformNodeBase"* nonnull %6) #10
  %10 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* %9) #10
  %11 = bitcast %"class.ui::AXPlatformNode"* %10 to %"class.ui::AXPlatformNodeBase"*
  %12 = icmp eq %"class.ui::AXPlatformNode"* %10, null
  %13 = icmp eq %"class.ui::AXPlatformNodeBase"* %6, %11
  %14 = or i1 %12, %13
  br i1 %14, label %15, label %5

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %16, align 8
  %18 = icmp eq %"class.base::internal::BindStateBase"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %17, i64 0, i32 1
  %22 = bitcast void ()** %21 to void (%"class.base::internal::BindStateBase"*, %"class.ui::AXPlatformNodeDelegate"*, i32)**
  %23 = load void (%"class.base::internal::BindStateBase"*, %"class.ui::AXPlatformNodeDelegate"*, i32)*, void (%"class.base::internal::BindStateBase"*, %"class.ui::AXPlatformNodeDelegate"*, i32)** %22, align 8
  tail call void %23(%"class.base::internal::BindStateBase"* nonnull %17, %"class.ui::AXPlatformNodeDelegate"* %20, i32 15) #10
  br label %24

24:                                               ; preds = %15, %19
  %25 = bitcast %"class.ui::AXPlatformNodeBase"* %6 to void (%"class.ui::AXPlatformNodeBase"*, i32)***
  %26 = load void (%"class.ui::AXPlatformNodeBase"*, i32)**, void (%"class.ui::AXPlatformNodeBase"*, i32)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.ui::AXPlatformNodeBase"*, i32)*, void (%"class.ui::AXPlatformNodeBase"*, i32)** %26, i64 2
  %28 = load void (%"class.ui::AXPlatformNodeBase"*, i32)*, void (%"class.ui::AXPlatformNodeBase"*, i32)** %27, align 8
  tail call void %28(%"class.ui::AXPlatformNodeBase"* nonnull %6, i32 15) #10
  br label %29

29:                                               ; preds = %5, %24
  ret void
}

declare %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject*) local_unnamed_addr #2

declare %struct._AtkObject* @_ZNK2ui18AXPlatformNodeBase8GetFocusEv(%"class.ui::AXPlatformNodeBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views26ViewAXPlatformNodeDelegate9IsIgnoredEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %3, i64 16
  %5 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  %7 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %6) #10
  ret i1 %7
}

declare zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn408_NK5views26ViewAXPlatformNodeDelegate9IsIgnoredEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = bitcast i32** %2 to %"class.views::ViewAXPlatformNodeDelegate"*
  %4 = bitcast i32** %2 to %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %5 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %4, align 8
  %6 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %5, i64 16
  %7 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %6, align 8
  %8 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %7(%"class.views::ViewAXPlatformNodeDelegate"* %3) #10
  %9 = tail call zeroext i1 @_ZNK2ui10AXNodeData9IsIgnoredEv(%"struct.ui::AXNodeData"* %8) #10
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZNK5views26ViewAXPlatformNodeDelegate15GetNativeObjectEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 2
  %3 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %2, align 8
  %4 = bitcast %"class.ui::AXPlatformNode"* %3 to %struct._AtkObject* (%"class.ui::AXPlatformNode"*)***
  %5 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*** %4, align 8
  %6 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %5, i64 1
  %7 = load %struct._AtkObject* (%"class.ui::AXPlatformNode"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNode"*)** %6, align 8
  %8 = tail call %struct._AtkObject* %7(%"class.ui::AXPlatformNode"* %3) #10
  ret %struct._AtkObject* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views26ViewAXPlatformNodeDelegate24NotifyAccessibilityEventEN2ax5mojom5EventE(%"class.views::ViewAXPlatformNodeDelegate"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %4, i64 0, i32 1
  %9 = bitcast void ()** %8 to void (%"class.base::internal::BindStateBase"*, %"class.ui::AXPlatformNodeDelegate"*, i32)**
  %10 = load void (%"class.base::internal::BindStateBase"*, %"class.ui::AXPlatformNodeDelegate"*, i32)*, void (%"class.base::internal::BindStateBase"*, %"class.ui::AXPlatformNodeDelegate"*, i32)** %9, align 8
  tail call void %10(%"class.base::internal::BindStateBase"* nonnull %4, %"class.ui::AXPlatformNodeDelegate"* %7, i32 %1) #10
  br label %11

11:                                               ; preds = %2, %6
  %12 = load i1, i1* @_ZN5views12_GLOBAL__N_120g_is_queueing_eventsE, align 1
  br i1 %12, label %13, label %103

13:                                               ; preds = %11
  %14 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0) acquire, align 8
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  %17 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0)) #10
  br i1 %17, label %18, label %19

18:                                               ; preds = %16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 1, i64 0), i8 0, i64 24, i1 false) #10
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE to i8*)) #10
  br label %21

19:                                               ; preds = %16
  %20 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0) acquire, align 8
  br label %21

21:                                               ; preds = %13, %18, %19
  %22 = phi i64 [ %14, %13 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 1, i64 0) to i64), %18 ], [ %20, %19 ]
  %23 = inttoptr i64 %22 to %"class.std::__1::vector.468"*
  %24 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %25 = load %"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %25, i64 15
  %27 = load %"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %26, align 8
  %28 = tail call dereferenceable(16) %"class.ui::AXUniqueId"* %27(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  %29 = getelementptr inbounds %"class.std::__1::vector.468", %"class.std::__1::vector.468"* %23, i64 0, i32 0, i32 1
  %30 = load %"struct.views::(anonymous namespace)::QueuedEvent"*, %"struct.views::(anonymous namespace)::QueuedEvent"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector.468", %"class.std::__1::vector.468"* %23, i64 0, i32 0, i32 2, i32 0, i32 0
  %32 = load %"struct.views::(anonymous namespace)::QueuedEvent"*, %"struct.views::(anonymous namespace)::QueuedEvent"** %31, align 8
  %33 = icmp ult %"struct.views::(anonymous namespace)::QueuedEvent"* %30, %32
  %34 = ptrtoint %"struct.views::(anonymous namespace)::QueuedEvent"* %32 to i64
  br i1 %33, label %35, label %43

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.ui::AXUniqueId", %"class.ui::AXUniqueId"* %28, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %30, i64 0, i32 0
  store i32 %1, i32* %38, align 4
  %39 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %30, i64 0, i32 1
  store i32 %37, i32* %39, align 4
  %40 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %30, i64 1
  %41 = ptrtoint %"struct.views::(anonymous namespace)::QueuedEvent"* %40 to i64
  %42 = bitcast %"struct.views::(anonymous namespace)::QueuedEvent"** %29 to i64*
  store i64 %41, i64* %42, align 8
  br label %204

43:                                               ; preds = %21
  %44 = ptrtoint %"struct.views::(anonymous namespace)::QueuedEvent"* %30 to i64
  %45 = bitcast %"struct.views::(anonymous namespace)::QueuedEvent"** %29 to i64*
  %46 = inttoptr i64 %22 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %44, %47
  %49 = ashr exact i64 %48, 3
  %50 = add nsw i64 %49, 1
  %51 = icmp ugt i64 %50, 2305843009213693951
  br i1 %51, label %52, label %54

52:                                               ; preds = %43
  %53 = inttoptr i64 %22 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #11
  unreachable

54:                                               ; preds = %43
  %55 = bitcast %"struct.views::(anonymous namespace)::QueuedEvent"** %31 to i64*
  %56 = sub i64 %34, %47
  %57 = ashr exact i64 %56, 3
  %58 = icmp ult i64 %57, 1152921504606846975
  br i1 %58, label %59, label %67

59:                                               ; preds = %54
  %60 = ashr exact i64 %56, 2
  %61 = icmp ult i64 %60, %50
  %62 = select i1 %61, i64 %50, i64 %60
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %72, label %64

64:                                               ; preds = %59
  %65 = icmp ugt i64 %62, 2305843009213693951
  br i1 %65, label %66, label %67

66:                                               ; preds = %64
  tail call void @abort() #11
  unreachable

67:                                               ; preds = %64, %54
  %68 = phi i64 [ %62, %64 ], [ 2305843009213693951, %54 ]
  %69 = shl i64 %68, 3
  %70 = tail call i8* @_Znwm(i64 %69) #12
  %71 = bitcast i8* %70 to %"struct.views::(anonymous namespace)::QueuedEvent"*
  br label %72

72:                                               ; preds = %67, %59
  %73 = phi i64 [ %68, %67 ], [ 0, %59 ]
  %74 = phi %"struct.views::(anonymous namespace)::QueuedEvent"* [ %71, %67 ], [ null, %59 ]
  %75 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %74, i64 %49
  %76 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %74, i64 %73
  %77 = ptrtoint %"struct.views::(anonymous namespace)::QueuedEvent"* %76 to i64
  %78 = getelementptr inbounds %"class.ui::AXUniqueId", %"class.ui::AXUniqueId"* %28, i64 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %75, i64 0, i32 0
  store i32 %1, i32* %80, align 4
  %81 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %74, i64 %49, i32 1
  store i32 %79, i32* %81, align 4
  %82 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %75, i64 1
  %83 = ptrtoint %"struct.views::(anonymous namespace)::QueuedEvent"* %82 to i64
  %84 = getelementptr inbounds %"class.std::__1::vector.468", %"class.std::__1::vector.468"* %23, i64 0, i32 0, i32 0
  %85 = load %"struct.views::(anonymous namespace)::QueuedEvent"*, %"struct.views::(anonymous namespace)::QueuedEvent"** %84, align 8
  %86 = load i64, i64* %45, align 8
  %87 = ptrtoint %"struct.views::(anonymous namespace)::QueuedEvent"* %85 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = sub nsw i64 0, %89
  %91 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %75, i64 %90
  %92 = ptrtoint %"struct.views::(anonymous namespace)::QueuedEvent"* %91 to i64
  %93 = icmp sgt i64 %88, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %72
  %95 = bitcast %"struct.views::(anonymous namespace)::QueuedEvent"* %91 to i8*
  %96 = bitcast %"struct.views::(anonymous namespace)::QueuedEvent"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %96, i64 %88, i1 false) #10
  %97 = load %"struct.views::(anonymous namespace)::QueuedEvent"*, %"struct.views::(anonymous namespace)::QueuedEvent"** %84, align 8
  br label %98

98:                                               ; preds = %94, %72
  %99 = phi %"struct.views::(anonymous namespace)::QueuedEvent"* [ %85, %72 ], [ %97, %94 ]
  store i64 %92, i64* %46, align 8
  store i64 %83, i64* %45, align 8
  store i64 %77, i64* %55, align 8
  %100 = icmp eq %"struct.views::(anonymous namespace)::QueuedEvent"* %99, null
  br i1 %100, label %204, label %101

101:                                              ; preds = %98
  %102 = bitcast %"struct.views::(anonymous namespace)::QueuedEvent"* %99 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %204

103:                                              ; preds = %11
  switch i32 %1, label %197 [
    i32 23, label %107
    i32 14, label %104
    i32 16, label %106
  ]

104:                                              ; preds = %103
  %105 = tail call %struct._AtkObject* @_ZN2ui14AXPlatformNode21GetPopupFocusOverrideEv() #10
  br label %197

106:                                              ; preds = %103
  tail call fastcc void @_ZN5views12_GLOBAL__N_134PostFlushEventQueueTaskIfNecessaryEv()
  br label %197

107:                                              ; preds = %103
  tail call fastcc void @_ZN5views12_GLOBAL__N_134PostFlushEventQueueTaskIfNecessaryEv()
  %108 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0) acquire, align 8
  %109 = icmp ugt i64 %108, 1
  br i1 %109, label %115, label %110

110:                                              ; preds = %107
  %111 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0)) #10
  br i1 %111, label %112, label %113

112:                                              ; preds = %110
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 1, i64 0), i8 0, i64 24, i1 false) #10
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE to i8*)) #10
  br label %115

113:                                              ; preds = %110
  %114 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0) acquire, align 8
  br label %115

115:                                              ; preds = %107, %112, %113
  %116 = phi i64 [ %108, %107 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 1, i64 0) to i64), %112 ], [ %114, %113 ]
  %117 = inttoptr i64 %116 to %"class.std::__1::vector.468"*
  %118 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %119 = load %"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %118, align 8
  %120 = getelementptr inbounds %"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %119, i64 15
  %121 = load %"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"class.ui::AXUniqueId"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %120, align 8
  %122 = tail call dereferenceable(16) %"class.ui::AXUniqueId"* %121(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  %123 = getelementptr inbounds %"class.std::__1::vector.468", %"class.std::__1::vector.468"* %117, i64 0, i32 0, i32 1
  %124 = load %"struct.views::(anonymous namespace)::QueuedEvent"*, %"struct.views::(anonymous namespace)::QueuedEvent"** %123, align 8
  %125 = getelementptr inbounds %"class.std::__1::vector.468", %"class.std::__1::vector.468"* %117, i64 0, i32 0, i32 2, i32 0, i32 0
  %126 = load %"struct.views::(anonymous namespace)::QueuedEvent"*, %"struct.views::(anonymous namespace)::QueuedEvent"** %125, align 8
  %127 = icmp ult %"struct.views::(anonymous namespace)::QueuedEvent"* %124, %126
  %128 = ptrtoint %"struct.views::(anonymous namespace)::QueuedEvent"* %126 to i64
  br i1 %127, label %129, label %137

129:                                              ; preds = %115
  %130 = getelementptr inbounds %"class.ui::AXUniqueId", %"class.ui::AXUniqueId"* %122, i64 0, i32 1
  %131 = load i32, i32* %130, align 8
  %132 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %124, i64 0, i32 0
  store i32 23, i32* %132, align 4
  %133 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %124, i64 0, i32 1
  store i32 %131, i32* %133, align 4
  %134 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %124, i64 1
  %135 = ptrtoint %"struct.views::(anonymous namespace)::QueuedEvent"* %134 to i64
  %136 = bitcast %"struct.views::(anonymous namespace)::QueuedEvent"** %123 to i64*
  store i64 %135, i64* %136, align 8
  br label %204

137:                                              ; preds = %115
  %138 = ptrtoint %"struct.views::(anonymous namespace)::QueuedEvent"* %124 to i64
  %139 = bitcast %"struct.views::(anonymous namespace)::QueuedEvent"** %123 to i64*
  %140 = inttoptr i64 %116 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %138, %141
  %143 = ashr exact i64 %142, 3
  %144 = add nsw i64 %143, 1
  %145 = icmp ugt i64 %144, 2305843009213693951
  br i1 %145, label %146, label %148

146:                                              ; preds = %137
  %147 = inttoptr i64 %116 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %147) #11
  unreachable

148:                                              ; preds = %137
  %149 = bitcast %"struct.views::(anonymous namespace)::QueuedEvent"** %125 to i64*
  %150 = sub i64 %128, %141
  %151 = ashr exact i64 %150, 3
  %152 = icmp ult i64 %151, 1152921504606846975
  br i1 %152, label %153, label %161

153:                                              ; preds = %148
  %154 = ashr exact i64 %150, 2
  %155 = icmp ult i64 %154, %144
  %156 = select i1 %155, i64 %144, i64 %154
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %166, label %158

158:                                              ; preds = %153
  %159 = icmp ugt i64 %156, 2305843009213693951
  br i1 %159, label %160, label %161

160:                                              ; preds = %158
  tail call void @abort() #11
  unreachable

161:                                              ; preds = %158, %148
  %162 = phi i64 [ %156, %158 ], [ 2305843009213693951, %148 ]
  %163 = shl i64 %162, 3
  %164 = tail call i8* @_Znwm(i64 %163) #12
  %165 = bitcast i8* %164 to %"struct.views::(anonymous namespace)::QueuedEvent"*
  br label %166

166:                                              ; preds = %161, %153
  %167 = phi i64 [ %162, %161 ], [ 0, %153 ]
  %168 = phi %"struct.views::(anonymous namespace)::QueuedEvent"* [ %165, %161 ], [ null, %153 ]
  %169 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %168, i64 %143
  %170 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %168, i64 %167
  %171 = ptrtoint %"struct.views::(anonymous namespace)::QueuedEvent"* %170 to i64
  %172 = getelementptr inbounds %"class.ui::AXUniqueId", %"class.ui::AXUniqueId"* %122, i64 0, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %169, i64 0, i32 0
  store i32 23, i32* %174, align 4
  %175 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %168, i64 %143, i32 1
  store i32 %173, i32* %175, align 4
  %176 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %169, i64 1
  %177 = ptrtoint %"struct.views::(anonymous namespace)::QueuedEvent"* %176 to i64
  %178 = getelementptr inbounds %"class.std::__1::vector.468", %"class.std::__1::vector.468"* %117, i64 0, i32 0, i32 0
  %179 = load %"struct.views::(anonymous namespace)::QueuedEvent"*, %"struct.views::(anonymous namespace)::QueuedEvent"** %178, align 8
  %180 = load i64, i64* %139, align 8
  %181 = ptrtoint %"struct.views::(anonymous namespace)::QueuedEvent"* %179 to i64
  %182 = sub i64 %180, %181
  %183 = ashr exact i64 %182, 3
  %184 = sub nsw i64 0, %183
  %185 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %169, i64 %184
  %186 = ptrtoint %"struct.views::(anonymous namespace)::QueuedEvent"* %185 to i64
  %187 = icmp sgt i64 %182, 0
  br i1 %187, label %188, label %192

188:                                              ; preds = %166
  %189 = bitcast %"struct.views::(anonymous namespace)::QueuedEvent"* %185 to i8*
  %190 = bitcast %"struct.views::(anonymous namespace)::QueuedEvent"* %179 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %189, i8* align 4 %190, i64 %182, i1 false) #10
  %191 = load %"struct.views::(anonymous namespace)::QueuedEvent"*, %"struct.views::(anonymous namespace)::QueuedEvent"** %178, align 8
  br label %192

192:                                              ; preds = %188, %166
  %193 = phi %"struct.views::(anonymous namespace)::QueuedEvent"* [ %179, %166 ], [ %191, %188 ]
  store i64 %186, i64* %140, align 8
  store i64 %177, i64* %139, align 8
  store i64 %171, i64* %149, align 8
  %194 = icmp eq %"struct.views::(anonymous namespace)::QueuedEvent"* %193, null
  br i1 %194, label %204, label %195

195:                                              ; preds = %192
  %196 = bitcast %"struct.views::(anonymous namespace)::QueuedEvent"* %193 to i8*
  tail call void @_ZdlPv(i8* %196) #12
  br label %204

197:                                              ; preds = %103, %106, %104
  %198 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 2
  %199 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %198, align 8
  %200 = bitcast %"class.ui::AXPlatformNode"* %199 to void (%"class.ui::AXPlatformNode"*, i32)***
  %201 = load void (%"class.ui::AXPlatformNode"*, i32)**, void (%"class.ui::AXPlatformNode"*, i32)*** %200, align 8
  %202 = getelementptr inbounds void (%"class.ui::AXPlatformNode"*, i32)*, void (%"class.ui::AXPlatformNode"*, i32)** %201, i64 2
  %203 = load void (%"class.ui::AXPlatformNode"*, i32)*, void (%"class.ui::AXPlatformNode"*, i32)** %202, align 8
  tail call void %203(%"class.ui::AXPlatformNode"* %199, i32 %1) #10
  br label %204

204:                                              ; preds = %195, %192, %129, %101, %98, %35, %197
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5views12_GLOBAL__N_134PostFlushEventQueueTaskIfNecessaryEv() unnamed_addr #0 {
  %1 = alloca %"class.base::OnceCallback", align 8
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = load i1, i1* @_ZN5views12_GLOBAL__N_120g_is_queueing_eventsE, align 1
  br i1 %4, label %22, label %5

5:                                                ; preds = %0
  store i1 true, i1* @_ZN5views12_GLOBAL__N_120g_is_queueing_eventsE, align 1
  %6 = bitcast %"class.base::OnceCallback"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = tail call i8* @_Znwm(i64 48) #12, !noalias !8
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvvEJEEES3_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvvEJEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !8
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void ()* @_ZN5views12_GLOBAL__N_110FlushQueueEv to i64), i64* %11, align 8, !noalias !8
  %12 = bitcast %"class.base::OnceCallback"* %1 to i8**
  store i8* %8, i8** %12, align 8, !alias.scope !8
  %13 = tail call dereferenceable(8) %class.scoped_refptr.524* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #10
  %14 = bitcast %class.scoped_refptr.524* %13 to %"class.base::TaskRunner"**
  %15 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %14, align 8
  %16 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.2, i64 0, i64 0), i32 110) #10
  %17 = ptrtoint i8* %8 to i64
  %18 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %19 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %15, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #10
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #10
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  br label %22

22:                                               ; preds = %5, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(264) %"struct.ui::AXNodeData"* @_ZNK5views26ViewAXPlatformNodeDelegate7GetDataEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.ui::AXNodeData", align 8
  call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* nonnull %2) #10
  %3 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 3
  %4 = call dereferenceable(264) %"struct.ui::AXNodeData"* @_ZN2ui10AXNodeDataaSES0_(%"struct.ui::AXNodeData"* %3, %"struct.ui::AXNodeData"* nonnull %2) #10
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %2) #10
  %5 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0
  %6 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)***
  %7 = load void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)**, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)** %7, i64 2
  %9 = load void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)** %8, align 8
  call void %9(%"class.views::ViewAccessibility"* %5, %"struct.ui::AXNodeData"* %3) #10
  %10 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %11 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  %12 = bitcast %"class.views::View"* %11 to i1 (%"class.views::View"*)***
  %13 = load i1 (%"class.views::View"*)**, i1 (%"class.views::View"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %13, i64 22
  %15 = load i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %14, align 8
  %16 = call zeroext i1 %15(%"class.views::View"* %11) #10
  br i1 %16, label %18, label %17

17:                                               ; preds = %1
  call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %3, i32 10) #10
  br label %18

18:                                               ; preds = %17, %1
  %19 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  %20 = bitcast %"class.views::View"* %19 to i32 (%"class.views::View"*)***
  %21 = load i32 (%"class.views::View"*)**, i32 (%"class.views::View"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.views::View"*)*, i32 (%"class.views::View"*)** %21, i64 63
  %23 = load i32 (%"class.views::View"*)*, i32 (%"class.views::View"*)** %22, align 8
  %24 = call i32 %23(%"class.views::View"* %19) #10
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.views::View"* %19 to i1 (%"class.views::View"*)***
  %28 = load i1 (%"class.views::View"*)**, i1 (%"class.views::View"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %28, i64 22
  %30 = load i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %29, align 8
  %31 = call zeroext i1 %30(%"class.views::View"* %19) #10
  br i1 %31, label %55, label %32

32:                                               ; preds = %26, %18
  %33 = getelementptr inbounds %"class.views::View", %"class.views::View"* %19, i64 0, i32 13
  %34 = load %"class.views::View"*, %"class.views::View"** %33, align 8
  %35 = icmp eq %"class.views::View"* %34, null
  br i1 %35, label %55, label %36

36:                                               ; preds = %32, %50
  %37 = phi %"class.views::View"* [ %52, %50 ], [ %34, %32 ]
  %38 = bitcast %"class.views::View"* %37 to i32 (%"class.views::View"*)***
  %39 = load i32 (%"class.views::View"*)**, i32 (%"class.views::View"*)*** %38, align 8
  %40 = getelementptr inbounds i32 (%"class.views::View"*)*, i32 (%"class.views::View"*)** %39, i64 63
  %41 = load i32 (%"class.views::View"*)*, i32 (%"class.views::View"*)** %40, align 8
  %42 = call i32 %41(%"class.views::View"* nonnull %37) #10
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %36
  %45 = bitcast %"class.views::View"* %37 to i1 (%"class.views::View"*)***
  %46 = load i1 (%"class.views::View"*)**, i1 (%"class.views::View"*)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %46, i64 22
  %48 = load i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %47, align 8
  %49 = call zeroext i1 %48(%"class.views::View"* nonnull %37) #10
  br i1 %49, label %54, label %50

50:                                               ; preds = %44, %36
  %51 = getelementptr inbounds %"class.views::View", %"class.views::View"* %37, i64 0, i32 13
  %52 = load %"class.views::View"*, %"class.views::View"** %51, align 8
  %53 = icmp eq %"class.views::View"* %52, null
  br i1 %53, label %55, label %36

54:                                               ; preds = %44
  call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %3, i32 9) #10
  br label %55

55:                                               ; preds = %50, %32, %26, %54
  ret %"struct.ui::AXNodeData"* %3
}

declare dereferenceable(264) %"struct.ui::AXNodeData"* @_ZN2ui10AXNodeDataaSES0_(%"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"*) local_unnamed_addr #2

declare void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(264) %"struct.ui::AXNodeData"* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate7GetDataEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = bitcast i32** %2 to %"class.views::ViewAXPlatformNodeDelegate"*
  %4 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* @_ZNK5views26ViewAXPlatformNodeDelegate7GetDataEv(%"class.views::ViewAXPlatformNodeDelegate"* %3)
  ret %"struct.ui::AXNodeData"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5views26ViewAXPlatformNodeDelegate13GetChildCountEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", align 8
  %3 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5views17ViewAccessibility6IsLeafEv(%"class.views::ViewAccessibility"* %3) #10
  br i1 %4, label %96, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %6, align 8
  %8 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.231"* %7, %9
  br i1 %10, label %34, label %11

11:                                               ; preds = %5, %29
  %12 = phi i32 [ %31, %29 ], [ 0, %5 ]
  %13 = phi %"class.std::__1::unique_ptr.231"* [ %32, %29 ], [ %7, %5 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %14, align 8
  %16 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %15, i64 0, i32 0
  %17 = bitcast %"class.views::AXVirtualView"* %15 to i1 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %18 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %18, i64 21
  %20 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.ui::AXPlatformNodeDelegateBase"* %16) #10
  br i1 %21, label %22, label %29

22:                                               ; preds = %11
  %23 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %14, align 8
  %24 = bitcast %"class.views::AXVirtualView"* %23 to i32 (%"class.views::AXVirtualView"*)***
  %25 = load i32 (%"class.views::AXVirtualView"*)**, i32 (%"class.views::AXVirtualView"*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.views::AXVirtualView"*)*, i32 (%"class.views::AXVirtualView"*)** %25, i64 12
  %27 = load i32 (%"class.views::AXVirtualView"*)*, i32 (%"class.views::AXVirtualView"*)** %26, align 8
  %28 = tail call i32 %27(%"class.views::AXVirtualView"* %23) #10
  br label %29

29:                                               ; preds = %11, %22
  %30 = phi i32 [ %28, %22 ], [ 1, %11 ]
  %31 = add nsw i32 %30, %12
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %13, i64 1
  %33 = icmp eq %"class.std::__1::unique_ptr.231"* %32, %9
  br i1 %33, label %96, label %11

34:                                               ; preds = %5
  %35 = bitcast %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 40, i1 false)
  call void @_ZNK5views26ViewAXPlatformNodeDelegate15GetChildWidgetsEv(%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* nonnull sret %2, %"class.views::ViewAXPlatformNodeDelegate"* %0)
  %36 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2, i64 0, i32 2
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.views::Widget"**, %"class.views::Widget"*** %40, align 8
  br label %85

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %44 = load %"class.views::View"*, %"class.views::View"** %43, align 8
  %45 = getelementptr inbounds %"class.views::View", %"class.views::View"* %44, i64 0, i32 14, i32 0, i32 0
  %46 = load %"class.views::View"**, %"class.views::View"*** %45, align 8
  %47 = getelementptr inbounds %"class.views::View", %"class.views::View"* %44, i64 0, i32 14, i32 0, i32 1
  %48 = load %"class.views::View"**, %"class.views::View"*** %47, align 8
  %49 = icmp eq %"class.views::View"** %46, %48
  br i1 %49, label %50, label %63

50:                                               ; preds = %80, %42
  %51 = phi i32 [ 0, %42 ], [ %82, %80 ]
  %52 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2, i64 0, i32 1, i32 0, i32 1
  %54 = bitcast %"class.views::Widget"*** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.std::__1::vector"* %52 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %55, %57
  %59 = lshr exact i64 %58, 3
  %60 = trunc i64 %59 to i32
  %61 = add nsw i32 %51, %60
  %62 = inttoptr i64 %57 to %"class.views::Widget"**
  br label %85

63:                                               ; preds = %42, %80
  %64 = phi i32 [ %82, %80 ], [ 0, %42 ]
  %65 = phi %"class.views::View"** [ %83, %80 ], [ %46, %42 ]
  %66 = load %"class.views::View"*, %"class.views::View"** %65, align 8
  %67 = call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %66) #10
  %68 = bitcast %"class.views::ViewAccessibility"* %67 to i1 (%"class.views::ViewAccessibility"*)***
  %69 = load i1 (%"class.views::ViewAccessibility"*)**, i1 (%"class.views::ViewAccessibility"*)*** %68, align 8
  %70 = getelementptr inbounds i1 (%"class.views::ViewAccessibility"*)*, i1 (%"class.views::ViewAccessibility"*)** %69, i64 10
  %71 = load i1 (%"class.views::ViewAccessibility"*)*, i1 (%"class.views::ViewAccessibility"*)** %70, align 8
  %72 = call zeroext i1 %71(%"class.views::ViewAccessibility"* %67) #10
  br i1 %72, label %73, label %80

73:                                               ; preds = %63
  %74 = bitcast %"class.views::ViewAccessibility"* %67 to %"class.views::ViewAXPlatformNodeDelegate"*
  %75 = bitcast %"class.views::ViewAccessibility"* %67 to i32 (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %76 = load i32 (%"class.views::ViewAXPlatformNodeDelegate"*)**, i32 (%"class.views::ViewAXPlatformNodeDelegate"*)*** %75, align 8
  %77 = getelementptr inbounds i32 (%"class.views::ViewAXPlatformNodeDelegate"*)*, i32 (%"class.views::ViewAXPlatformNodeDelegate"*)** %76, i64 17
  %78 = load i32 (%"class.views::ViewAXPlatformNodeDelegate"*)*, i32 (%"class.views::ViewAXPlatformNodeDelegate"*)** %77, align 8
  %79 = call i32 %78(%"class.views::ViewAXPlatformNodeDelegate"* %74) #10
  br label %80

80:                                               ; preds = %63, %73
  %81 = phi i32 [ %79, %73 ], [ 1, %63 ]
  %82 = add nsw i32 %81, %64
  %83 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %65, i64 1
  %84 = icmp eq %"class.views::View"** %83, %48
  br i1 %84, label %50, label %63

85:                                               ; preds = %39, %50
  %86 = phi %"class.views::Widget"** [ %62, %50 ], [ %41, %39 ]
  %87 = phi i32 [ %61, %50 ], [ 1, %39 ]
  %88 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %88, align 8
  %89 = icmp eq %"class.views::Widget"** %86, null
  br i1 %89, label %95, label %90

90:                                               ; preds = %85
  %91 = ptrtoint %"class.views::Widget"** %86 to i64
  %92 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2, i64 0, i32 1, i32 0, i32 1
  %93 = bitcast %"class.views::Widget"*** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = bitcast %"class.views::Widget"** %86 to i8*
  call void @_ZdlPv(i8* %94) #12
  br label %95

95:                                               ; preds = %85, %90
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #10
  br label %96

96:                                               ; preds = %29, %1, %95
  %97 = phi i32 [ %87, %95 ], [ 0, %1 ], [ %31, %29 ]
  ret i32 %97
}

declare zeroext i1 @_ZNK5views17ViewAccessibility6IsLeafEv(%"class.views::ViewAccessibility"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views26ViewAXPlatformNodeDelegate15GetChildWidgetsEv(%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* noalias sret, %"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::set.510", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %1, i64 0, i32 0, i32 2
  %8 = load %"class.views::View"*, %"class.views::View"** %7, align 8
  %9 = bitcast %"class.views::View"* %8 to %"class.views::Widget"* (%"class.views::View"*)***
  %10 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %10, i64 13
  %12 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %11, align 8
  %13 = tail call %"class.views::Widget"* %12(%"class.views::View"* %8) #10
  %14 = icmp eq %"class.views::Widget"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %2
  %16 = tail call %"class.aura::Window"* @_ZNK5views6Widget13GetNativeViewEv(%"class.views::Widget"* nonnull %13) #10
  %17 = icmp eq %"class.aura::Window"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %15
  %19 = tail call %"class.views::View"* @_ZN5views6Widget11GetRootViewEv(%"class.views::Widget"* nonnull %13) #10
  %20 = load %"class.views::View"*, %"class.views::View"** %7, align 8
  %21 = icmp eq %"class.views::View"* %19, %20
  br i1 %21, label %26, label %22

22:                                               ; preds = %18, %15, %2
  %23 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1
  %25 = bitcast %"class.std::__1::vector"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 25, i1 false) #10
  br label %205

26:                                               ; preds = %18
  %27 = bitcast %"class.std::__1::set.510"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.std::__1::set.510", %"class.std::__1::set.510"* %4, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::set.510", %"class.std::__1::set.510"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::set.510", %"class.std::__1::set.510"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = bitcast %"class.std::__1::__tree_node_base"** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %30, %"class.std::__1::__tree_end_node"** %28, align 8
  %32 = call %"class.aura::Window"* @_ZNK5views6Widget13GetNativeViewEv(%"class.views::Widget"* nonnull %13) #10
  call void @_ZN5views6Widget18GetAllOwnedWidgetsEPN4aura6WindowEPNSt3__13setIPS0_NS4_4lessIS6_EENS4_9allocatorIS6_EEEE(%"class.aura::Window"* %32, %"class.std::__1::set.510"* nonnull %4) #10
  %33 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #10
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %28, align 8
  %37 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector"* %5, %"class.std::__1::vector"** %38, align 8
  %39 = icmp eq %"class.std::__1::__tree_end_node"* %36, %30
  br i1 %39, label %83, label %40

40:                                               ; preds = %26, %80
  %41 = phi %"class.std::__1::__tree_end_node"* [ %81, %80 ], [ %36, %26 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 4
  %43 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.views::Widget"**
  %44 = load %"class.views::Widget"*, %"class.views::Widget"** %43, align 8
  %45 = bitcast %"class.views::Widget"* %44 to i1 (%"class.views::Widget"*)***
  %46 = load i1 (%"class.views::Widget"*)**, i1 (%"class.views::Widget"*)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %46, i64 45
  %48 = load i1 (%"class.views::Widget"*)*, i1 (%"class.views::Widget"*)** %47, align 8
  %49 = call zeroext i1 %48(%"class.views::Widget"* %44) #10
  br i1 %49, label %50, label %52

50:                                               ; preds = %40
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIPN5views6WidgetENS_9allocatorIS4_EEEEEaSERKS4_(%"class.std::__1::back_insert_iterator"* nonnull %3, %"class.views::Widget"** dereferenceable(8) %43) #10
  br label %52

52:                                               ; preds = %50, %40
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 1, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, null
  br i1 %55, label %56, label %64

56:                                               ; preds = %52
  %57 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.std::__1::__tree_node_base"*
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 2
  %59 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_end_node"**
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, %57
  br i1 %63, label %80, label %71

64:                                               ; preds = %52, %64
  %65 = phi %"class.std::__1::__tree_node_base"* [ %67, %64 ], [ %54, %52 ]
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %69, label %64

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %65, i64 0, i32 0
  br label %80

71:                                               ; preds = %56, %71
  %72 = phi %"class.std::__1::__tree_end_node"** [ %75, %71 ], [ %59, %56 ]
  %73 = bitcast %"class.std::__1::__tree_end_node"** %72 to %"class.std::__1::__tree_node_base"**
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %74, i64 0, i32 2
  %76 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %76, i64 0, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, %74
  br i1 %79, label %80, label %71

80:                                               ; preds = %71, %69, %56
  %81 = phi %"class.std::__1::__tree_end_node"* [ %70, %69 ], [ %60, %56 ], [ %76, %71 ]
  %82 = icmp eq %"class.std::__1::__tree_end_node"* %81, %30
  br i1 %82, label %83, label %40

83:                                               ; preds = %80, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  %84 = load %"class.views::View"*, %"class.views::View"** %7, align 8
  %85 = call %"class.views::FocusManager"* @_ZN5views4View15GetFocusManagerEv(%"class.views::View"* %84) #10
  %86 = icmp eq %"class.views::FocusManager"* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.views::FocusManager", %"class.views::FocusManager"* %85, i64 0, i32 3
  %89 = load %"class.views::View"*, %"class.views::View"** %88, align 8
  br label %90

90:                                               ; preds = %83, %87
  %91 = phi %"class.views::View"* [ %89, %87 ], [ null, %83 ]
  %92 = load %"class.views::Widget"**, %"class.views::Widget"*** %34, align 8
  %93 = load %"class.views::Widget"**, %"class.views::Widget"*** %35, align 8
  %94 = icmp eq %"class.views::Widget"** %92, %93
  br i1 %94, label %121, label %95

95:                                               ; preds = %90, %99
  %96 = phi %"class.views::Widget"** [ %100, %99 ], [ %92, %90 ]
  %97 = load %"class.views::Widget"*, %"class.views::Widget"** %96, align 8
  %98 = call zeroext i1 @_ZN5views22ViewAccessibilityUtils20IsFocusedChildWidgetEPNS_6WidgetEPKNS_4ViewE(%"class.views::Widget"* %97, %"class.views::View"* %91) #10
  br i1 %98, label %102, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %96, i64 1
  %101 = icmp eq %"class.views::Widget"** %100, %93
  br i1 %101, label %102, label %95

102:                                              ; preds = %95, %99
  %103 = phi %"class.views::Widget"** [ %93, %99 ], [ %96, %95 ]
  %104 = load %"class.views::Widget"**, %"class.views::Widget"*** %35, align 8
  %105 = icmp eq %"class.views::Widget"** %103, %104
  br i1 %105, label %121, label %106

106:                                              ; preds = %102
  %107 = bitcast %"class.views::Widget"** %103 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1
  %111 = call i8* @_Znwm(i64 8) #12
  %112 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1, i32 0, i32 1
  %113 = bitcast %"class.std::__1::vector"* %110 to i8**
  store i8* %111, i8** %113, align 8
  %114 = getelementptr inbounds i8, i8* %111, i64 8
  %115 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %116 = bitcast %"class.views::Widget"*** %115 to i8**
  store i8* %114, i8** %116, align 8
  %117 = bitcast %"class.views::Widget"*** %112 to i64*
  %118 = bitcast i8* %111 to i64*
  store i64 %108, i64* %118, align 8
  %119 = ptrtoint i8* %114 to i64
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 2
  store i8 1, i8* %120, align 8
  br label %194

121:                                              ; preds = %90, %102
  %122 = phi %"class.views::Widget"** [ %104, %102 ], [ %93, %90 ]
  %123 = ptrtoint %"class.views::Widget"** %122 to i64
  %124 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 0, i64 24, i1 false) #10
  %125 = bitcast %"class.std::__1::vector"* %5 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %123, %126
  %128 = ashr exact i64 %127, 3
  %129 = icmp eq i64 %127, 0
  br i1 %129, label %153, label %130

130:                                              ; preds = %121
  %131 = icmp ugt i64 %128, 2305843009213693951
  br i1 %131, label %132, label %134

132:                                              ; preds = %130
  %133 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %133) #11
  unreachable

134:                                              ; preds = %130
  %135 = call i8* @_Znwm(i64 %127) #12
  %136 = bitcast i8* %135 to %"class.views::Widget"**
  %137 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %138 = bitcast %"class.views::Widget"*** %137 to i8**
  store i8* %135, i8** %138, align 8
  %139 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %135, i8** %139, align 8
  %140 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %136, i64 %128
  %141 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.views::Widget"** %140, %"class.views::Widget"*** %141, align 8
  %142 = bitcast %"class.views::Widget"*** %137 to i64*
  %143 = ptrtoint i8* %135 to i64
  %144 = icmp sgt i64 %127, 0
  br i1 %144, label %145, label %150

145:                                              ; preds = %134
  %146 = lshr exact i64 %127, 3
  %147 = inttoptr i64 %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %135, i8* align 8 %147, i64 %127, i1 false) #10
  %148 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %136, i64 %146
  %149 = ptrtoint %"class.views::Widget"** %148 to i64
  br label %150

150:                                              ; preds = %145, %134
  %151 = phi i64 [ %149, %145 ], [ %143, %134 ]
  store i64 %151, i64* %142, align 8
  %152 = ptrtoint i8* %135 to i64
  br label %153

153:                                              ; preds = %121, %150
  %154 = phi i8* [ %135, %150 ], [ null, %121 ]
  %155 = phi %"class.views::Widget"** [ %136, %150 ], [ null, %121 ]
  %156 = phi i64 [ %152, %150 ], [ 0, %121 ]
  %157 = phi i64 [ %143, %150 ], [ 0, %121 ]
  %158 = phi i64 [ %151, %150 ], [ 0, %121 ]
  %159 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %159, align 8
  %160 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1
  %161 = bitcast %"class.std::__1::vector"* %160 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 24, i1 false) #10
  %162 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %163 = bitcast %"class.views::Widget"*** %162 to i64*
  %164 = sub i64 %158, %157
  %165 = ashr exact i64 %164, 3
  %166 = icmp eq i64 %164, 0
  br i1 %166, label %189, label %167

167:                                              ; preds = %153
  %168 = icmp ugt i64 %165, 2305843009213693951
  br i1 %168, label %169, label %171

169:                                              ; preds = %167
  %170 = bitcast %"class.std::__1::vector"* %160 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %170) #11
  unreachable

171:                                              ; preds = %167
  %172 = call i8* @_Znwm(i64 %164) #12
  %173 = bitcast i8* %172 to %"class.views::Widget"**
  %174 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1, i32 0, i32 1
  %175 = bitcast %"class.views::Widget"*** %174 to i8**
  store i8* %172, i8** %175, align 8
  %176 = bitcast %"class.std::__1::vector"* %160 to i8**
  store i8* %172, i8** %176, align 8
  %177 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %173, i64 %165
  %178 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.views::Widget"** %177, %"class.views::Widget"*** %178, align 8
  %179 = bitcast %"class.views::Widget"*** %174 to i64*
  %180 = ptrtoint i8* %172 to i64
  %181 = sub i64 %158, %156
  %182 = icmp sgt i64 %181, 0
  br i1 %182, label %183, label %187

183:                                              ; preds = %171
  %184 = lshr exact i64 %181, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %172, i8* align 8 %154, i64 %181, i1 false) #10
  %185 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %173, i64 %184
  %186 = ptrtoint %"class.views::Widget"** %185 to i64
  br label %187

187:                                              ; preds = %183, %171
  %188 = phi i64 [ %186, %183 ], [ %180, %171 ]
  store i64 %188, i64* %179, align 8
  br label %189

189:                                              ; preds = %153, %187
  %190 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %0, i64 0, i32 2
  store i8 0, i8* %190, align 8
  %191 = icmp eq %"class.views::Widget"** %155, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %189
  %193 = ptrtoint %"class.views::Widget"** %155 to i64
  store i64 %193, i64* %163, align 8
  call void @_ZdlPv(i8* %154) #12
  br label %194

194:                                              ; preds = %192, %189, %106
  %195 = load %"class.views::Widget"**, %"class.views::Widget"*** %34, align 8
  %196 = icmp eq %"class.views::Widget"** %195, null
  br i1 %196, label %201, label %197

197:                                              ; preds = %194
  %198 = ptrtoint %"class.views::Widget"** %195 to i64
  %199 = bitcast %"class.views::Widget"*** %35 to i64*
  store i64 %198, i64* %199, align 8
  %200 = bitcast %"class.views::Widget"** %195 to i8*
  call void @_ZdlPv(i8* %200) #12
  br label %201

201:                                              ; preds = %194, %197
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #10
  %202 = getelementptr inbounds %"class.std::__1::set.510", %"class.std::__1::set.510"* %4, i64 0, i32 0
  %203 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node"**
  %204 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %203, align 8
  call void @_ZNSt3__16__treeIPN5views6WidgetENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.511"* nonnull %202, %"class.std::__1::__tree_node"* %204) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  br label %205

205:                                              ; preds = %201, %22
  ret void
}

declare dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn408_NK5views26ViewAXPlatformNodeDelegate13GetChildCountEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = bitcast i32** %2 to %"class.views::ViewAXPlatformNodeDelegate"*
  %4 = tail call i32 @_ZNK5views26ViewAXPlatformNodeDelegate13GetChildCountEv(%"class.views::ViewAXPlatformNodeDelegate"* %3)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZN5views26ViewAXPlatformNodeDelegate12ChildAtIndexEi(%"class.views::ViewAXPlatformNodeDelegate"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", align 8
  %4 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to i1 (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %5 = load i1 (%"class.views::ViewAXPlatformNodeDelegate"*)**, i1 (%"class.views::ViewAXPlatformNodeDelegate"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.views::ViewAXPlatformNodeDelegate"*)*, i1 (%"class.views::ViewAXPlatformNodeDelegate"*)** %5, i64 8
  %7 = load i1 (%"class.views::ViewAXPlatformNodeDelegate"*)*, i1 (%"class.views::ViewAXPlatformNodeDelegate"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  br i1 %8, label %54, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %10, align 8
  %12 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.231"* %11, %13
  br i1 %14, label %56, label %15

15:                                               ; preds = %9, %50
  %16 = phi i32 [ %51, %50 ], [ %1, %9 ]
  %17 = phi %"class.std::__1::unique_ptr.231"* [ %52, %50 ], [ %11, %9 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %18, align 8
  %20 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %19, i64 0, i32 0
  %21 = bitcast %"class.views::AXVirtualView"* %19 to i1 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %22 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %22, i64 21
  %24 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.ui::AXPlatformNodeDelegateBase"* %20) #10
  br i1 %25, label %26, label %43

26:                                               ; preds = %15
  %27 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %18, align 8
  %28 = bitcast %"class.views::AXVirtualView"* %27 to i32 (%"class.views::AXVirtualView"*)***
  %29 = load i32 (%"class.views::AXVirtualView"*)**, i32 (%"class.views::AXVirtualView"*)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.views::AXVirtualView"*)*, i32 (%"class.views::AXVirtualView"*)** %29, i64 12
  %31 = load i32 (%"class.views::AXVirtualView"*)*, i32 (%"class.views::AXVirtualView"*)** %30, align 8
  %32 = tail call i32 %31(%"class.views::AXVirtualView"* %27) #10
  %33 = icmp slt i32 %16, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %26
  %35 = sub nsw i32 %16, %32
  br label %50

36:                                               ; preds = %26
  %37 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %18, align 8
  %38 = bitcast %"class.views::AXVirtualView"* %37 to %struct._AtkObject* (%"class.views::AXVirtualView"*, i32)***
  %39 = load %struct._AtkObject* (%"class.views::AXVirtualView"*, i32)**, %struct._AtkObject* (%"class.views::AXVirtualView"*, i32)*** %38, align 8
  %40 = getelementptr inbounds %struct._AtkObject* (%"class.views::AXVirtualView"*, i32)*, %struct._AtkObject* (%"class.views::AXVirtualView"*, i32)** %39, i64 13
  %41 = load %struct._AtkObject* (%"class.views::AXVirtualView"*, i32)*, %struct._AtkObject* (%"class.views::AXVirtualView"*, i32)** %40, align 8
  %42 = tail call %struct._AtkObject* %41(%"class.views::AXVirtualView"* %37, i32 %16) #10
  br label %54

43:                                               ; preds = %15
  %44 = icmp eq i32 %16, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %43
  %46 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %18, align 8
  %47 = tail call %struct._AtkObject* @_ZNK5views13AXVirtualView15GetNativeObjectEv(%"class.views::AXVirtualView"* %46) #10
  br label %54

48:                                               ; preds = %43
  %49 = add nsw i32 %16, -1
  br label %50

50:                                               ; preds = %34, %48
  %51 = phi i32 [ %35, %34 ], [ %49, %48 ]
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %17, i64 1
  %53 = icmp eq %"class.std::__1::unique_ptr.231"* %52, %13
  br i1 %53, label %54, label %15

54:                                               ; preds = %50, %156, %2, %45, %36
  %55 = phi %struct._AtkObject* [ %47, %45 ], [ %42, %36 ], [ %146, %156 ], [ null, %2 ], [ null, %50 ]
  ret %struct._AtkObject* %55

56:                                               ; preds = %9
  %57 = bitcast %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %57) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 40, i1 false)
  call void @_ZNK5views26ViewAXPlatformNodeDelegate15GetChildWidgetsEv(%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* nonnull sret %3, %"class.views::ViewAXPlatformNodeDelegate"* %0)
  %58 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %3, i64 0, i32 1
  %59 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %3, i64 0, i32 2
  %60 = load i8, i8* %59, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %58, i64 0, i32 0, i32 0
  %64 = load %"class.views::Widget"**, %"class.views::Widget"*** %63, align 8
  %65 = load %"class.views::Widget"*, %"class.views::Widget"** %64, align 8
  %66 = call %"class.views::View"* @_ZN5views6Widget11GetRootViewEv(%"class.views::Widget"* %65) #10
  %67 = bitcast %"class.views::View"* %66 to %struct._AtkObject* (%"class.views::View"*)***
  %68 = load %struct._AtkObject* (%"class.views::View"*)**, %struct._AtkObject* (%"class.views::View"*)*** %67, align 8
  %69 = getelementptr inbounds %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %68, i64 83
  %70 = load %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %69, align 8
  %71 = call %struct._AtkObject* %70(%"class.views::View"* %66) #10
  br label %145

72:                                               ; preds = %56
  %73 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %74 = load %"class.views::View"*, %"class.views::View"** %73, align 8
  %75 = getelementptr inbounds %"class.views::View", %"class.views::View"* %74, i64 0, i32 14, i32 0, i32 0
  %76 = load %"class.views::View"**, %"class.views::View"*** %75, align 8
  %77 = getelementptr inbounds %"class.views::View", %"class.views::View"* %74, i64 0, i32 14, i32 0, i32 1
  %78 = load %"class.views::View"**, %"class.views::View"*** %77, align 8
  %79 = icmp eq %"class.views::View"** %76, %78
  br i1 %79, label %123, label %80

80:                                               ; preds = %72, %119
  %81 = phi i32 [ %120, %119 ], [ %1, %72 ]
  %82 = phi %"class.views::View"** [ %121, %119 ], [ %76, %72 ]
  %83 = load %"class.views::View"*, %"class.views::View"** %82, align 8
  %84 = call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %83) #10
  %85 = bitcast %"class.views::ViewAccessibility"* %84 to i1 (%"class.views::ViewAccessibility"*)***
  %86 = load i1 (%"class.views::ViewAccessibility"*)**, i1 (%"class.views::ViewAccessibility"*)*** %85, align 8
  %87 = getelementptr inbounds i1 (%"class.views::ViewAccessibility"*)*, i1 (%"class.views::ViewAccessibility"*)** %86, i64 10
  %88 = load i1 (%"class.views::ViewAccessibility"*)*, i1 (%"class.views::ViewAccessibility"*)** %87, align 8
  %89 = call zeroext i1 %88(%"class.views::ViewAccessibility"* %84) #10
  br i1 %89, label %90, label %107

90:                                               ; preds = %80
  %91 = bitcast %"class.views::ViewAccessibility"* %84 to %"class.views::ViewAXPlatformNodeDelegate"*
  %92 = bitcast %"class.views::ViewAccessibility"* %84 to i32 (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %93 = load i32 (%"class.views::ViewAXPlatformNodeDelegate"*)**, i32 (%"class.views::ViewAXPlatformNodeDelegate"*)*** %92, align 8
  %94 = getelementptr inbounds i32 (%"class.views::ViewAXPlatformNodeDelegate"*)*, i32 (%"class.views::ViewAXPlatformNodeDelegate"*)** %93, i64 17
  %95 = load i32 (%"class.views::ViewAXPlatformNodeDelegate"*)*, i32 (%"class.views::ViewAXPlatformNodeDelegate"*)** %94, align 8
  %96 = call i32 %95(%"class.views::ViewAXPlatformNodeDelegate"* %91) #10
  %97 = icmp slt i32 %81, %96
  br i1 %97, label %100, label %98

98:                                               ; preds = %90
  %99 = sub nsw i32 %81, %96
  br label %119

100:                                              ; preds = %90
  %101 = bitcast %"class.views::ViewAccessibility"* %84 to %"class.views::ViewAXPlatformNodeDelegate"*
  %102 = bitcast %"class.views::ViewAccessibility"* %84 to %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*, i32)***
  %103 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*, i32)**, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*, i32)*** %102, align 8
  %104 = getelementptr inbounds %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*, i32)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*, i32)** %103, i64 18
  %105 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*, i32)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*, i32)** %104, align 8
  %106 = call %struct._AtkObject* %105(%"class.views::ViewAXPlatformNodeDelegate"* %101, i32 %81) #10
  br label %145

107:                                              ; preds = %80
  %108 = icmp eq i32 %81, 0
  br i1 %108, label %109, label %117

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.views::ViewAccessibility", %"class.views::ViewAccessibility"* %84, i64 0, i32 2
  %111 = load %"class.views::View"*, %"class.views::View"** %110, align 8
  %112 = bitcast %"class.views::View"* %111 to %struct._AtkObject* (%"class.views::View"*)***
  %113 = load %struct._AtkObject* (%"class.views::View"*)**, %struct._AtkObject* (%"class.views::View"*)*** %112, align 8
  %114 = getelementptr inbounds %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %113, i64 83
  %115 = load %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %114, align 8
  %116 = call %struct._AtkObject* %115(%"class.views::View"* %111) #10
  br label %145

117:                                              ; preds = %107
  %118 = add nsw i32 %81, -1
  br label %119

119:                                              ; preds = %98, %117
  %120 = phi i32 [ %99, %98 ], [ %118, %117 ]
  %121 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %82, i64 1
  %122 = icmp eq %"class.views::View"** %121, %78
  br i1 %122, label %123, label %80

123:                                              ; preds = %119, %72
  %124 = phi i32 [ %1, %72 ], [ %120, %119 ]
  %125 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %3, i64 0, i32 1, i32 0, i32 1
  %126 = bitcast %"class.views::Widget"*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.std::__1::vector"* %58 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %127, %129
  %131 = lshr exact i64 %130, 3
  %132 = trunc i64 %131 to i32
  %133 = icmp slt i32 %124, %132
  br i1 %133, label %134, label %145

134:                                              ; preds = %123
  %135 = inttoptr i64 %129 to %"class.views::Widget"**
  %136 = sext i32 %124 to i64
  %137 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %135, i64 %136
  %138 = load %"class.views::Widget"*, %"class.views::Widget"** %137, align 8
  %139 = call %"class.views::View"* @_ZN5views6Widget11GetRootViewEv(%"class.views::Widget"* %138) #10
  %140 = bitcast %"class.views::View"* %139 to %struct._AtkObject* (%"class.views::View"*)***
  %141 = load %struct._AtkObject* (%"class.views::View"*)**, %struct._AtkObject* (%"class.views::View"*)*** %140, align 8
  %142 = getelementptr inbounds %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %141, i64 83
  %143 = load %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %142, align 8
  %144 = call %struct._AtkObject* %143(%"class.views::View"* %139) #10
  br label %145

145:                                              ; preds = %109, %100, %123, %134, %62
  %146 = phi %struct._AtkObject* [ %71, %62 ], [ %144, %134 ], [ null, %123 ], [ %116, %109 ], [ %106, %100 ]
  %147 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %147, align 8
  %148 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %3, i64 0, i32 1, i32 0, i32 0
  %149 = load %"class.views::Widget"**, %"class.views::Widget"*** %148, align 8
  %150 = icmp eq %"class.views::Widget"** %149, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %145
  %152 = ptrtoint %"class.views::Widget"** %149 to i64
  %153 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %3, i64 0, i32 1, i32 0, i32 1
  %154 = bitcast %"class.views::Widget"*** %153 to i64*
  store i64 %152, i64* %154, align 8
  %155 = bitcast %"class.views::Widget"** %149 to i8*
  call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %145, %151
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %57) #10
  br label %54
}

declare %struct._AtkObject* @_ZNK5views13AXVirtualView15GetNativeObjectEv(%"class.views::AXVirtualView"*) local_unnamed_addr #2

declare %"class.views::View"* @_ZN5views6Widget11GetRootViewEv(%"class.views::Widget"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZThn408_N5views26ViewAXPlatformNodeDelegate12ChildAtIndexEi(%"class.views::ViewAXPlatformNodeDelegate"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %4 = bitcast i32** %3 to %"class.views::ViewAXPlatformNodeDelegate"*
  %5 = tail call %struct._AtkObject* @_ZN5views26ViewAXPlatformNodeDelegate12ChildAtIndexEi(%"class.views::ViewAXPlatformNodeDelegate"* %4, i32 %1)
  ret %struct._AtkObject* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views26ViewAXPlatformNodeDelegate14HasModalDialogEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", align 8
  %3 = bitcast %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #10
  call void @_ZNK5views26ViewAXPlatformNodeDelegate15GetChildWidgetsEv(%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* nonnull sret %2, %"class.views::ViewAXPlatformNodeDelegate"* %0)
  %4 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.views::Widget"**, %"class.views::Widget"*** %8, align 8
  %10 = icmp eq %"class.views::Widget"** %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %1
  %12 = ptrtoint %"class.views::Widget"** %9 to i64
  %13 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast %"class.views::Widget"*** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = bitcast %"class.views::Widget"** %9 to i8*
  call void @_ZdlPv(i8* %15) #12
  br label %16

16:                                               ; preds = %1, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #10
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn408_NK5views26ViewAXPlatformNodeDelegate14HasModalDialogEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", align 8
  %3 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %4 = bitcast i32** %3 to %"class.views::ViewAXPlatformNodeDelegate"*
  %5 = bitcast %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #10
  call void @_ZNK5views26ViewAXPlatformNodeDelegate15GetChildWidgetsEv(%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* nonnull sret %2, %"class.views::ViewAXPlatformNodeDelegate"* %4) #10
  %6 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.views::Widget"**, %"class.views::Widget"*** %10, align 8
  %12 = icmp eq %"class.views::Widget"** %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = ptrtoint %"class.views::Widget"** %11 to i64
  %15 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %2, i64 0, i32 1, i32 0, i32 1
  %16 = bitcast %"class.views::Widget"*** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.views::Widget"** %11 to i8*
  call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %1, %13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #10
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views26ViewAXPlatformNodeDelegate13IsChildOfLeafEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 1
  %3 = tail call zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase13IsChildOfLeafEv(%"class.ui::AXPlatformNodeDelegateBase"* %2) #10
  ret i1 %3
}

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase13IsChildOfLeafEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn408_NK5views26ViewAXPlatformNodeDelegate13IsChildOfLeafEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = getelementptr inbounds i32*, i32** %2, i64 51
  %4 = bitcast i32** %3 to %"class.ui::AXPlatformNodeDelegateBase"*
  %5 = tail call zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase13IsChildOfLeafEv(%"class.ui::AXPlatformNodeDelegateBase"* %4) #10
  ret i1 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %struct._AtkObject* @_ZN5views26ViewAXPlatformNodeDelegate11GetNSWindowEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readnone) unnamed_addr #5 align 2 {
  ret %struct._AtkObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %struct._AtkObject* @_ZThn408_N5views26ViewAXPlatformNodeDelegate11GetNSWindowEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readnone) unnamed_addr #5 align 2 {
  ret %struct._AtkObject* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZN5views26ViewAXPlatformNodeDelegate23GetNativeViewAccessibleEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.views::View"*, %"class.views::View"** %2, align 8
  %4 = bitcast %"class.views::View"* %3 to %struct._AtkObject* (%"class.views::View"*)***
  %5 = load %struct._AtkObject* (%"class.views::View"*)**, %struct._AtkObject* (%"class.views::View"*)*** %4, align 8
  %6 = getelementptr inbounds %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %5, i64 83
  %7 = load %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %6, align 8
  %8 = tail call %struct._AtkObject* %7(%"class.views::View"* %3) #10
  ret %struct._AtkObject* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZThn408_N5views26ViewAXPlatformNodeDelegate23GetNativeViewAccessibleEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = getelementptr inbounds i32*, i32** %2, i64 2
  %4 = bitcast i32** %3 to %"class.views::View"**
  %5 = load %"class.views::View"*, %"class.views::View"** %4, align 8
  %6 = bitcast %"class.views::View"* %5 to %struct._AtkObject* (%"class.views::View"*)***
  %7 = load %struct._AtkObject* (%"class.views::View"*)**, %struct._AtkObject* (%"class.views::View"*)*** %6, align 8
  %8 = getelementptr inbounds %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %7, i64 83
  %9 = load %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %8, align 8
  %10 = tail call %struct._AtkObject* %9(%"class.views::View"* %5) #10
  ret %struct._AtkObject* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZN5views26ViewAXPlatformNodeDelegate9GetParentEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.views::View"*, %"class.views::View"** %2, align 8
  %4 = getelementptr inbounds %"class.views::View", %"class.views::View"* %3, i64 0, i32 13
  %5 = load %"class.views::View"*, %"class.views::View"** %4, align 8
  %6 = icmp eq %"class.views::View"* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  %8 = tail call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* nonnull %5) #10
  %9 = bitcast %"class.views::ViewAccessibility"* %8 to i1 (%"class.views::ViewAccessibility"*)***
  %10 = load i1 (%"class.views::ViewAccessibility"*)**, i1 (%"class.views::ViewAccessibility"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.views::ViewAccessibility"*)*, i1 (%"class.views::ViewAccessibility"*)** %10, i64 10
  %12 = load i1 (%"class.views::ViewAccessibility"*)*, i1 (%"class.views::ViewAccessibility"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.views::ViewAccessibility"* %8) #10
  br i1 %13, label %20, label %14

14:                                               ; preds = %7
  %15 = bitcast %"class.views::View"* %5 to %struct._AtkObject* (%"class.views::View"*)***
  %16 = load %struct._AtkObject* (%"class.views::View"*)**, %struct._AtkObject* (%"class.views::View"*)*** %15, align 8
  %17 = getelementptr inbounds %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %16, i64 83
  %18 = load %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %17, align 8
  %19 = tail call %struct._AtkObject* %18(%"class.views::View"* nonnull %5) #10
  br label %49

20:                                               ; preds = %7
  %21 = bitcast %"class.views::ViewAccessibility"* %8 to %"class.views::ViewAXPlatformNodeDelegate"*
  %22 = bitcast %"class.views::ViewAccessibility"* %8 to %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %23 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %22, align 8
  %24 = getelementptr inbounds %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %23, i64 22
  %25 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %24, align 8
  %26 = tail call %struct._AtkObject* %25(%"class.views::ViewAXPlatformNodeDelegate"* %21) #10
  br label %49

27:                                               ; preds = %1
  %28 = bitcast %"class.views::View"* %3 to %"class.views::Widget"* (%"class.views::View"*)***
  %29 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %29, i64 13
  %31 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %30, align 8
  %32 = tail call %"class.views::Widget"* %31(%"class.views::View"* %3) #10
  %33 = icmp eq %"class.views::Widget"* %32, null
  br i1 %33, label %49, label %34

34:                                               ; preds = %27
  %35 = tail call %"class.views::Widget"* @_ZN5views6Widget17GetTopLevelWidgetEv(%"class.views::Widget"* nonnull %32) #10
  %36 = icmp eq %"class.views::Widget"* %35, null
  %37 = icmp eq %"class.views::Widget"* %32, %35
  %38 = or i1 %36, %37
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  %40 = tail call %"class.views::View"* @_ZN5views6Widget11GetRootViewEv(%"class.views::Widget"* nonnull %35) #10
  %41 = icmp eq %"class.views::View"* %40, null
  br i1 %41, label %49, label %42

42:                                               ; preds = %39
  %43 = tail call %"class.views::View"* @_ZN5views6Widget11GetRootViewEv(%"class.views::Widget"* nonnull %35) #10
  %44 = bitcast %"class.views::View"* %43 to %struct._AtkObject* (%"class.views::View"*)***
  %45 = load %struct._AtkObject* (%"class.views::View"*)**, %struct._AtkObject* (%"class.views::View"*)*** %44, align 8
  %46 = getelementptr inbounds %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %45, i64 83
  %47 = load %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %46, align 8
  %48 = tail call %struct._AtkObject* %47(%"class.views::View"* %43) #10
  br label %49

49:                                               ; preds = %14, %20, %34, %39, %27, %42
  %50 = phi %struct._AtkObject* [ %48, %42 ], [ null, %27 ], [ null, %39 ], [ null, %34 ], [ %19, %14 ], [ %26, %20 ]
  ret %struct._AtkObject* %50
}

declare %"class.views::Widget"* @_ZN5views6Widget17GetTopLevelWidgetEv(%"class.views::Widget"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZThn408_N5views26ViewAXPlatformNodeDelegate9GetParentEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = bitcast i32** %2 to %"class.views::ViewAXPlatformNodeDelegate"*
  %4 = tail call %struct._AtkObject* @_ZN5views26ViewAXPlatformNodeDelegate9GetParentEv(%"class.views::ViewAXPlatformNodeDelegate"* %3)
  ret %struct._AtkObject* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views26ViewAXPlatformNodeDelegate6IsLeafEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5views17ViewAccessibility6IsLeafEv(%"class.views::ViewAccessibility"* %2) #10
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 1
  %6 = tail call zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase6IsLeafEv(%"class.ui::AXPlatformNodeDelegateBase"* %5) #10
  br label %7

7:                                                ; preds = %4, %1
  %8 = phi i1 [ true, %1 ], [ %6, %4 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase6IsLeafEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn408_NK5views26ViewAXPlatformNodeDelegate6IsLeafEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = bitcast i32** %2 to %"class.views::ViewAccessibility"*
  %4 = tail call zeroext i1 @_ZNK5views17ViewAccessibility6IsLeafEv(%"class.views::ViewAccessibility"* %3) #10
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds i32*, i32** %2, i64 51
  %7 = bitcast i32** %6 to %"class.ui::AXPlatformNodeDelegateBase"*
  %8 = tail call zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase6IsLeafEv(%"class.ui::AXPlatformNodeDelegateBase"* %7) #10
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views26ViewAXPlatformNodeDelegate20IsInvisibleOrIgnoredEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to i1 (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %3 = load i1 (%"class.views::ViewAXPlatformNodeDelegate"*)**, i1 (%"class.views::ViewAXPlatformNodeDelegate"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.views::ViewAXPlatformNodeDelegate"*)*, i1 (%"class.views::ViewAXPlatformNodeDelegate"*)** %3, i64 10
  %5 = load i1 (%"class.views::ViewAXPlatformNodeDelegate"*)*, i1 (%"class.views::ViewAXPlatformNodeDelegate"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.views::View"*, %"class.views::View"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %9) #10
  %11 = xor i1 %10, true
  br label %12

12:                                               ; preds = %7, %1
  %13 = phi i1 [ true, %1 ], [ %11, %7 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn408_NK5views26ViewAXPlatformNodeDelegate20IsInvisibleOrIgnoredEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = bitcast i32** %2 to %"class.views::ViewAXPlatformNodeDelegate"*
  %4 = bitcast i32** %2 to i1 (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %5 = load i1 (%"class.views::ViewAXPlatformNodeDelegate"*)**, i1 (%"class.views::ViewAXPlatformNodeDelegate"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.views::ViewAXPlatformNodeDelegate"*)*, i1 (%"class.views::ViewAXPlatformNodeDelegate"*)** %5, i64 10
  %7 = load i1 (%"class.views::ViewAXPlatformNodeDelegate"*)*, i1 (%"class.views::ViewAXPlatformNodeDelegate"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.views::ViewAXPlatformNodeDelegate"* %3) #10
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds i32*, i32** %2, i64 2
  %11 = bitcast i32** %10 to %"class.views::View"**
  %12 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %13 = tail call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %12) #10
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %1, %9
  %16 = phi i1 [ true, %1 ], [ %14, %9 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views26ViewAXPlatformNodeDelegate22IsAccessibilityEnabledEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %3, i64 16
  %5 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  %7 = tail call i32 @_ZNK2ui10AXNodeData14GetRestrictionEv(%"struct.ui::AXNodeData"* %6) #10
  %8 = icmp ne i32 %7, 2
  ret i1 %8
}

declare i32 @_ZNK2ui10AXNodeData14GetRestrictionEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views26ViewAXPlatformNodeDelegate9IsFocusedEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %3 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %2, align 8
  %4 = getelementptr inbounds %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %3, i64 28
  %5 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %4, align 8
  %6 = tail call %struct._AtkObject* %5(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  %7 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %2, align 8
  %8 = getelementptr inbounds %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %7, i64 12
  %9 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %8, align 8
  %10 = tail call %struct._AtkObject* %9(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  %11 = icmp eq %struct._AtkObject* %6, %10
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn408_NK5views26ViewAXPlatformNodeDelegate9IsFocusedEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = bitcast i32** %2 to %"class.views::ViewAXPlatformNodeDelegate"*
  %4 = bitcast i32** %2 to %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %5 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %4, align 8
  %6 = getelementptr inbounds %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %5, i64 28
  %7 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %6, align 8
  %8 = tail call %struct._AtkObject* %7(%"class.views::ViewAXPlatformNodeDelegate"* %3) #10
  %9 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %4, align 8
  %10 = getelementptr inbounds %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %9, i64 12
  %11 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %10, align 8
  %12 = tail call %struct._AtkObject* %11(%"class.views::ViewAXPlatformNodeDelegate"* %3) #10
  %13 = icmp eq %struct._AtkObject* %8, %12
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views26ViewAXPlatformNodeDelegate23IsToplevelBrowserWindowEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.ui::AXNodeData", align 8
  %3 = bitcast %"struct.ui::AXNodeData"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %3) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.242", %"class.std::__1::vector.250", %"class.std::__1::vector.258", %"class.std::__1::vector.266", %"class.std::__1::vector.274", %"class.std::__1::vector.282", %"class.std::__1::vector.290", %"class.std::__1::vector.298", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.305" } }* @"__const._ZZNK5views26ViewAXPlatformNodeDelegate11HitTestSyncEiiENK3$_0clEPNS_4ViewE.child_data" to i8*), i64 264, i1 false)
  %4 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %5 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %4, align 8
  %6 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %5, i64 16
  %7 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %6, align 8
  %8 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %7(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  call void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"* nonnull %2, %"struct.ui::AXNodeData"* dereferenceable(264) %8) #10
  %9 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %2, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 185
  br i1 %11, label %12, label %25

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 1
  %14 = call %"class.ui::AXPlatformNodeDelegate"* @_ZN2ui26AXPlatformNodeDelegateBase17GetParentDelegateEv(%"class.ui::AXPlatformNodeDelegateBase"* %13) #10
  %15 = icmp eq %"class.ui::AXPlatformNodeDelegate"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.ui::AXPlatformNodeDelegate"* %14 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)***
  %18 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*** %17, align 8
  %19 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)** %18, i64 2
  %20 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)** %19, align 8
  %21 = call dereferenceable(264) %"struct.ui::AXNodeData"* %20(%"class.ui::AXPlatformNodeDelegate"* nonnull %14) #10
  %22 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %21, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 5
  br label %25

25:                                               ; preds = %16, %12, %1
  %26 = phi i1 [ false, %1 ], [ false, %12 ], [ %24, %16 ]
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %3) #10
  ret i1 %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"* dereferenceable(264)) unnamed_addr #2

declare %"class.ui::AXPlatformNodeDelegate"* @_ZN2ui26AXPlatformNodeDelegateBase17GetParentDelegateEv(%"class.ui::AXPlatformNodeDelegateBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn408_N5views26ViewAXPlatformNodeDelegate23IsToplevelBrowserWindowEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.ui::AXNodeData", align 8
  %3 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %4 = bitcast i32** %3 to %"class.views::ViewAXPlatformNodeDelegate"*
  %5 = bitcast %"struct.ui::AXNodeData"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %5) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.242", %"class.std::__1::vector.250", %"class.std::__1::vector.258", %"class.std::__1::vector.266", %"class.std::__1::vector.274", %"class.std::__1::vector.282", %"class.std::__1::vector.290", %"class.std::__1::vector.298", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.305" } }* @"__const._ZZNK5views26ViewAXPlatformNodeDelegate11HitTestSyncEiiENK3$_0clEPNS_4ViewE.child_data" to i8*), i64 264, i1 false) #10
  %6 = bitcast i32** %3 to %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %7 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %6, align 8
  %8 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %7, i64 16
  %9 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %8, align 8
  %10 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %9(%"class.views::ViewAXPlatformNodeDelegate"* %4) #10
  call void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"* nonnull %2, %"struct.ui::AXNodeData"* dereferenceable(264) %10) #10
  %11 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %2, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 185
  br i1 %13, label %14, label %28

14:                                               ; preds = %1
  %15 = getelementptr inbounds i32*, i32** %3, i64 51
  %16 = bitcast i32** %15 to %"class.ui::AXPlatformNodeDelegateBase"*
  %17 = call %"class.ui::AXPlatformNodeDelegate"* @_ZN2ui26AXPlatformNodeDelegateBase17GetParentDelegateEv(%"class.ui::AXPlatformNodeDelegateBase"* %16) #10
  %18 = icmp eq %"class.ui::AXPlatformNodeDelegate"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.ui::AXPlatformNodeDelegate"* %17 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)***
  %21 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*** %20, align 8
  %22 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)** %21, i64 2
  %23 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)** %22, align 8
  %24 = call dereferenceable(264) %"struct.ui::AXNodeData"* %23(%"class.ui::AXPlatformNodeDelegate"* nonnull %17) #10
  %25 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %24, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 5
  br label %28

28:                                               ; preds = %1, %14, %19
  %29 = phi i1 [ false, %1 ], [ false, %14 ], [ %27, %19 ]
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %5) #10
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5views26ViewAXPlatformNodeDelegate13GetBoundsRectEN2ui18AXCoordinateSystemENS1_18AXClippingBehaviorEPNS1_17AXOffscreenResultE(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly, i32, i32, i32* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %1, 1
  br i1 %5, label %6, label %12

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %8 = load %"class.views::View"*, %"class.views::View"** %7, align 8
  %9 = tail call { i64, i64 } @_ZNK5views4View17GetBoundsInScreenEv(%"class.views::View"* %8) #10
  %10 = extractvalue { i64, i64 } %9, 0
  %11 = extractvalue { i64, i64 } %9, 1
  br label %12

12:                                               ; preds = %4, %6
  %13 = phi i64 [ %10, %6 ], [ 0, %4 ]
  %14 = phi i64 [ %11, %6 ], [ 0, %4 ]
  %15 = insertvalue { i64, i64 } undef, i64 %13, 0
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1
  ret { i64, i64 } %16
}

declare { i64, i64 } @_ZNK5views4View17GetBoundsInScreenEv(%"class.views::View"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZThn408_NK5views26ViewAXPlatformNodeDelegate13GetBoundsRectEN2ui18AXCoordinateSystemENS1_18AXClippingBehaviorEPNS1_17AXOffscreenResultE(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly, i32, i32, i32* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %1, 1
  br i1 %5, label %6, label %14

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %8 = getelementptr inbounds i32*, i32** %7, i64 2
  %9 = bitcast i32** %8 to %"class.views::View"**
  %10 = load %"class.views::View"*, %"class.views::View"** %9, align 8
  %11 = tail call { i64, i64 } @_ZNK5views4View17GetBoundsInScreenEv(%"class.views::View"* %10) #10
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = extractvalue { i64, i64 } %11, 1
  br label %14

14:                                               ; preds = %4, %6
  %15 = phi i64 [ %12, %6 ], [ 0, %4 ]
  %16 = phi i64 [ %13, %6 ], [ 0, %4 ]
  %17 = insertvalue { i64, i64 } undef, i64 %15, 0
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1
  ret { i64, i64 } %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZNK5views26ViewAXPlatformNodeDelegate11HitTestSyncEii(%"class.views::ViewAXPlatformNodeDelegate"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.ui::AXNodeData", align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", align 8
  %7 = alloca %"class.gfx::Point", align 4
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.gfx::Point"*
  %10 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %11 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  %12 = icmp eq %"class.views::View"* %11, null
  br i1 %12, label %174, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.views::View"* %11 to %"class.views::Widget"* (%"class.views::View"*)***
  %15 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %15, i64 13
  %17 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %16, align 8
  %18 = tail call %"class.views::Widget"* %17(%"class.views::View"* nonnull %11) #10
  %19 = icmp eq %"class.views::Widget"* %18, null
  br i1 %19, label %174, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to i1 (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %22 = load i1 (%"class.views::ViewAXPlatformNodeDelegate"*)**, i1 (%"class.views::ViewAXPlatformNodeDelegate"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.views::ViewAXPlatformNodeDelegate"*)*, i1 (%"class.views::ViewAXPlatformNodeDelegate"*)** %22, i64 8
  %24 = load i1 (%"class.views::ViewAXPlatformNodeDelegate"*)*, i1 (%"class.views::ViewAXPlatformNodeDelegate"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  br i1 %25, label %26, label %32

26:                                               ; preds = %20
  %27 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %28 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %27, align 8
  %29 = getelementptr inbounds %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %28, i64 21
  %30 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %29, align 8
  %31 = tail call %struct._AtkObject* %30(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  br label %174

32:                                               ; preds = %20
  %33 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  %34 = bitcast %"class.views::View"* %33 to %"class.views::Widget"* (%"class.views::View"*)***
  %35 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %35, i64 13
  %37 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %36, align 8
  %38 = tail call %"class.views::Widget"* %37(%"class.views::View"* %33) #10
  %39 = tail call %"class.aura::Window"* @_ZNK5views6Widget13GetNativeViewEv(%"class.views::Widget"* %38) #10
  %40 = icmp eq %"class.aura::Window"* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %32
  %42 = tail call float @_ZN2ui27GetScaleFactorForNativeViewEPN4aura6WindowE(%"class.aura::Window"* nonnull %39) #10
  %43 = fcmp ole float %42, 0.000000e+00
  %44 = select i1 %43, float 1.000000e+00, float %42
  br label %45

45:                                               ; preds = %32, %41
  %46 = phi float [ %44, %41 ], [ 1.000000e+00, %32 ]
  %47 = sitofp i32 %1 to float
  %48 = fdiv float %47, %46
  %49 = fptosi float %48 to i32
  %50 = sitofp i32 %2 to float
  %51 = fdiv float %50, %46
  %52 = fptosi float %51 to i32
  %53 = bitcast %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %53) #10
  call void @_ZNK5views26ViewAXPlatformNodeDelegate15GetChildWidgetsEv(%"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* nonnull sret %6, %"class.views::ViewAXPlatformNodeDelegate"* %0)
  %54 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %6, i64 0, i32 1, i32 0, i32 0
  %55 = load %"class.views::Widget"**, %"class.views::Widget"*** %54, align 8
  %56 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %6, i64 0, i32 1, i32 0, i32 1
  %57 = load %"class.views::Widget"**, %"class.views::Widget"*** %56, align 8
  %58 = icmp eq %"class.views::Widget"** %55, %57
  br i1 %58, label %81, label %59

59:                                               ; preds = %45
  %60 = bitcast %"class.gfx::Point"* %7 to i8*
  %61 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %7, i64 0, i32 0
  %62 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %7, i64 0, i32 1
  br label %63

63:                                               ; preds = %59, %74
  %64 = phi %"class.views::Widget"** [ %55, %59 ], [ %75, %74 ]
  %65 = load %"class.views::Widget"*, %"class.views::Widget"** %64, align 8
  %66 = call %"class.views::View"* @_ZN5views6Widget11GetRootViewEv(%"class.views::Widget"* %65) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #10
  store i32 %49, i32* %61, align 4
  store i32 %52, i32* %62, align 4
  call void @_ZN5views4View22ConvertPointFromScreenEPKS0_PN3gfx5PointE(%"class.views::View"* %66, %"class.gfx::Point"* nonnull %7) #10
  %67 = call zeroext i1 @_ZNK5views4View12HitTestPointERKN3gfx5PointE(%"class.views::View"* %66, %"class.gfx::Point"* nonnull dereferenceable(8) %7) #10
  br i1 %67, label %68, label %74

68:                                               ; preds = %63
  %69 = bitcast %"class.views::View"* %66 to %struct._AtkObject* (%"class.views::View"*)***
  %70 = load %struct._AtkObject* (%"class.views::View"*)**, %struct._AtkObject* (%"class.views::View"*)*** %69, align 8
  %71 = getelementptr inbounds %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %70, i64 83
  %72 = load %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %71, align 8
  %73 = call %struct._AtkObject* %72(%"class.views::View"* %66) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #10
  br label %77

74:                                               ; preds = %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #10
  %75 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %64, i64 1
  %76 = icmp eq %"class.views::Widget"** %75, %57
  br i1 %76, label %77, label %63

77:                                               ; preds = %74, %68
  %78 = phi i32 [ 1, %68 ], [ 2, %74 ]
  %79 = phi %struct._AtkObject* [ %73, %68 ], [ undef, %74 ]
  %80 = load %"class.views::Widget"**, %"class.views::Widget"*** %54, align 8
  br label %81

81:                                               ; preds = %77, %45
  %82 = phi %"class.views::Widget"** [ %80, %77 ], [ %55, %45 ]
  %83 = phi i32 [ %78, %77 ], [ 2, %45 ]
  %84 = phi %struct._AtkObject* [ %79, %77 ], [ undef, %45 ]
  %85 = getelementptr inbounds %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult", %"struct.views::ViewAXPlatformNodeDelegate::ChildWidgetsResult"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5views26ViewAXPlatformNodeDelegate18ChildWidgetsResultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %86 = icmp eq %"class.views::Widget"** %82, null
  br i1 %86, label %91, label %87

87:                                               ; preds = %81
  %88 = ptrtoint %"class.views::Widget"** %82 to i64
  %89 = bitcast %"class.views::Widget"*** %56 to i64*
  store i64 %88, i64* %89, align 8
  %90 = bitcast %"class.views::Widget"** %82 to i8*
  call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %81, %87
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %53) #10
  %92 = icmp eq i32 %83, 2
  br i1 %92, label %93, label %174

93:                                               ; preds = %91
  %94 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #10
  %95 = bitcast i64* %8 to i32*
  %96 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %9, i64 0, i32 1
  store i32 %49, i32* %95, align 8
  store i32 %52, i32* %96, align 4
  %97 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  call void @_ZN5views4View22ConvertPointFromScreenEPKS0_PN3gfx5PointE(%"class.views::View"* %97, %"class.gfx::Point"* nonnull %9) #10
  %98 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  %99 = call zeroext i1 @_ZNK5views4View12HitTestPointERKN3gfx5PointE(%"class.views::View"* %98, %"class.gfx::Point"* nonnull dereferenceable(8) %9) #10
  br i1 %99, label %100, label %172

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %102 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %101, align 8
  %103 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %104 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %103, align 8
  %105 = icmp eq %"class.std::__1::unique_ptr.231"* %102, %104
  br i1 %105, label %125, label %106

106:                                              ; preds = %100, %109
  %107 = phi %"class.std::__1::unique_ptr.231"* [ %110, %109 ], [ %104, %100 ]
  %108 = icmp eq %"class.std::__1::unique_ptr.231"* %107, %102
  br i1 %108, label %119, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %107, i64 -1
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %111, align 8
  %113 = bitcast %"class.views::AXVirtualView"* %112 to %struct._AtkObject* (%"class.views::AXVirtualView"*, i32, i32)***
  %114 = load %struct._AtkObject* (%"class.views::AXVirtualView"*, i32, i32)**, %struct._AtkObject* (%"class.views::AXVirtualView"*, i32, i32)*** %113, align 8
  %115 = getelementptr inbounds %struct._AtkObject* (%"class.views::AXVirtualView"*, i32, i32)*, %struct._AtkObject* (%"class.views::AXVirtualView"*, i32, i32)** %114, i64 39
  %116 = load %struct._AtkObject* (%"class.views::AXVirtualView"*, i32, i32)*, %struct._AtkObject* (%"class.views::AXVirtualView"*, i32, i32)** %115, align 8
  %117 = call %struct._AtkObject* %116(%"class.views::AXVirtualView"* %112, i32 %1, i32 %2) #10
  %118 = icmp eq %struct._AtkObject* %117, null
  br i1 %118, label %106, label %172

119:                                              ; preds = %106
  %120 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %121 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %120, align 8
  %122 = getelementptr inbounds %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %121, i64 21
  %123 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %122, align 8
  %124 = call %struct._AtkObject* %123(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  br label %172

125:                                              ; preds = %100
  %126 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  %127 = load i64, i64* %8, align 8
  %128 = getelementptr inbounds %"class.views::View", %"class.views::View"* %126, i64 0, i32 14, i32 0, i32 1
  %129 = load %"class.views::View"**, %"class.views::View"*** %128, align 8
  %130 = getelementptr inbounds %"class.views::View", %"class.views::View"* %126, i64 0, i32 14, i32 0, i32 0
  %131 = load %"class.views::View"**, %"class.views::View"*** %130, align 8
  %132 = icmp eq %"class.views::View"** %129, %131
  br i1 %132, label %158, label %133

133:                                              ; preds = %125
  %134 = bitcast i64* %5 to %"class.gfx::Point"*
  %135 = bitcast %"struct.ui::AXNodeData"* %4 to i8*
  %136 = bitcast i64* %5 to i8*
  br label %137

137:                                              ; preds = %152, %133
  %138 = phi %"class.views::View"** [ %129, %133 ], [ %139, %152 ]
  %139 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %138, i64 -1
  %140 = load %"class.views::View"*, %"class.views::View"** %139, align 8
  %141 = call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %140) #10
  br i1 %141, label %142, label %152

142:                                              ; preds = %137
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %135) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %135, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.242", %"class.std::__1::vector.250", %"class.std::__1::vector.258", %"class.std::__1::vector.266", %"class.std::__1::vector.274", %"class.std::__1::vector.282", %"class.std::__1::vector.290", %"class.std::__1::vector.298", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.305" } }* @"__const._ZZNK5views26ViewAXPlatformNodeDelegate11HitTestSyncEiiENK3$_0clEPNS_4ViewE.child_data" to i8*), i64 264, i1 false) #10
  call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* nonnull %4) #10
  %143 = call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %140) #10
  %144 = bitcast %"class.views::ViewAccessibility"* %143 to void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)***
  %145 = load void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)**, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)** %145, i64 2
  %147 = load void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)** %146, align 8
  call void %147(%"class.views::ViewAccessibility"* %143, %"struct.ui::AXNodeData"* nonnull %4) #10
  %148 = call zeroext i1 @_ZNK2ui10AXNodeData11IsInvisibleEv(%"struct.ui::AXNodeData"* nonnull %4) #10
  br i1 %148, label %149, label %150

149:                                              ; preds = %142
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %135) #10
  br label %152

150:                                              ; preds = %142
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #10
  store i64 %127, i64* %5, align 8
  call void @_ZN5views4View20ConvertPointToTargetEPKS0_S2_PN3gfx5PointE(%"class.views::View"* %126, %"class.views::View"* %140, %"class.gfx::Point"* nonnull %134) #10
  %151 = call zeroext i1 @_ZNK5views4View12HitTestPointERKN3gfx5PointE(%"class.views::View"* %140, %"class.gfx::Point"* nonnull dereferenceable(8) %134) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #10
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %135) #10
  br i1 %151, label %154, label %152

152:                                              ; preds = %150, %149, %137
  %153 = icmp eq %"class.views::View"** %139, %131
  br i1 %153, label %154, label %137

154:                                              ; preds = %150, %152
  %155 = phi %"class.views::View"** [ %131, %152 ], [ %138, %150 ]
  %156 = load %"class.views::View"**, %"class.views::View"*** %130, align 8
  %157 = icmp eq %"class.views::View"** %155, %156
  br i1 %157, label %158, label %164

158:                                              ; preds = %125, %154
  %159 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %160 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %159, align 8
  %161 = getelementptr inbounds %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %160, i64 21
  %162 = load %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %struct._AtkObject* (%"class.views::ViewAXPlatformNodeDelegate"*)** %161, align 8
  %163 = call %struct._AtkObject* %162(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  br label %172

164:                                              ; preds = %154
  %165 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %155, i64 -1
  %166 = load %"class.views::View"*, %"class.views::View"** %165, align 8
  %167 = bitcast %"class.views::View"* %166 to %struct._AtkObject* (%"class.views::View"*)***
  %168 = load %struct._AtkObject* (%"class.views::View"*)**, %struct._AtkObject* (%"class.views::View"*)*** %167, align 8
  %169 = getelementptr inbounds %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %168, i64 83
  %170 = load %struct._AtkObject* (%"class.views::View"*)*, %struct._AtkObject* (%"class.views::View"*)** %169, align 8
  %171 = call %struct._AtkObject* %170(%"class.views::View"* %166) #10
  br label %172

172:                                              ; preds = %109, %158, %164, %93, %119
  %173 = phi %struct._AtkObject* [ %124, %119 ], [ null, %93 ], [ %163, %158 ], [ %171, %164 ], [ %117, %109 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #10
  br label %174

174:                                              ; preds = %172, %91, %3, %13, %26
  %175 = phi %struct._AtkObject* [ %31, %26 ], [ null, %13 ], [ null, %3 ], [ %173, %172 ], [ %84, %91 ]
  ret %struct._AtkObject* %175
}

declare %"class.aura::Window"* @_ZNK5views6Widget13GetNativeViewEv(%"class.views::Widget"*) local_unnamed_addr #2

declare float @_ZN2ui27GetScaleFactorForNativeViewEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #2

declare void @_ZN5views4View22ConvertPointFromScreenEPKS0_PN3gfx5PointE(%"class.views::View"*, %"class.gfx::Point"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5views4View12HitTestPointERKN3gfx5PointE(%"class.views::View"*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate11HitTestSyncEii(%"class.views::ViewAXPlatformNodeDelegate"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %5 = bitcast i32** %4 to %"class.views::ViewAXPlatformNodeDelegate"*
  %6 = tail call %struct._AtkObject* @_ZNK5views26ViewAXPlatformNodeDelegate11HitTestSyncEii(%"class.views::ViewAXPlatformNodeDelegate"* %5, i32 %1, i32 %2)
  ret %struct._AtkObject* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZNK5views26ViewAXPlatformNodeDelegate8GetFocusEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call %struct._AtkObject* @_ZN2ui14AXPlatformNode21GetPopupFocusOverrideEv() #10
  %3 = icmp eq %struct._AtkObject* %2, null
  br i1 %3, label %4, label %16

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.views::View"*, %"class.views::View"** %5, align 8
  %7 = tail call %"class.views::FocusManager"* @_ZN5views4View15GetFocusManagerEv(%"class.views::View"* %6) #10
  %8 = icmp eq %"class.views::FocusManager"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.views::FocusManager", %"class.views::FocusManager"* %7, i64 0, i32 3
  %11 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  %12 = icmp eq %"class.views::View"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = tail call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* nonnull %11) #10
  %15 = tail call %struct._AtkObject* @_ZN5views17ViewAccessibility20GetFocusedDescendantEv(%"class.views::ViewAccessibility"* %14) #10
  br label %16

16:                                               ; preds = %4, %13, %9, %1
  %17 = phi %struct._AtkObject* [ %2, %1 ], [ %15, %13 ], [ null, %9 ], [ null, %4 ]
  ret %struct._AtkObject* %17
}

declare %"class.views::FocusManager"* @_ZN5views4View15GetFocusManagerEv(%"class.views::View"*) local_unnamed_addr #2

declare %struct._AtkObject* @_ZN5views17ViewAccessibility20GetFocusedDescendantEv(%"class.views::ViewAccessibility"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate8GetFocusEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call %struct._AtkObject* @_ZN2ui14AXPlatformNode21GetPopupFocusOverrideEv() #10
  %3 = icmp eq %struct._AtkObject* %2, null
  br i1 %3, label %4, label %18

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %6 = getelementptr inbounds i32*, i32** %5, i64 2
  %7 = bitcast i32** %6 to %"class.views::View"**
  %8 = load %"class.views::View"*, %"class.views::View"** %7, align 8
  %9 = tail call %"class.views::FocusManager"* @_ZN5views4View15GetFocusManagerEv(%"class.views::View"* %8) #10
  %10 = icmp eq %"class.views::FocusManager"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.views::FocusManager", %"class.views::FocusManager"* %9, i64 0, i32 3
  %13 = load %"class.views::View"*, %"class.views::View"** %12, align 8
  %14 = icmp eq %"class.views::View"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = tail call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* nonnull %13) #10
  %17 = tail call %struct._AtkObject* @_ZN5views17ViewAccessibility20GetFocusedDescendantEv(%"class.views::ViewAccessibility"* %16) #10
  br label %18

18:                                               ; preds = %1, %4, %11, %15
  %19 = phi %struct._AtkObject* [ %2, %1 ], [ %17, %15 ], [ null, %11 ], [ null, %4 ]
  ret %struct._AtkObject* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXPlatformNode"* @_ZN5views26ViewAXPlatformNodeDelegate13GetFromNodeIDEi(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %3 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui18AXPlatformNodeBase15GetFromUniqueIdEi(i32 %1) #10
  ret %"class.ui::AXPlatformNode"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXPlatformNode"* @_ZThn408_N5views26ViewAXPlatformNodeDelegate13GetFromNodeIDEi(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %3 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui18AXPlatformNodeBase15GetFromUniqueIdEi(i32 %1) #10
  ret %"class.ui::AXPlatformNode"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.ui::AXPlatformNode"* @_ZN5views26ViewAXPlatformNodeDelegate22GetFromTreeIDAndNodeIDERKN2ui8AXTreeIDEi(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readnone, %"class.ui::AXTreeID"* nocapture readnone dereferenceable(32), i32) unnamed_addr #5 align 2 {
  ret %"class.ui::AXPlatformNode"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.ui::AXPlatformNode"* @_ZThn408_N5views26ViewAXPlatformNodeDelegate22GetFromTreeIDAndNodeIDERKN2ui8AXTreeIDEi(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readnone, %"class.ui::AXTreeID"* nocapture readnone dereferenceable(32), i32) unnamed_addr #5 align 2 {
  ret %"class.ui::AXPlatformNode"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views26ViewAXPlatformNodeDelegate26AccessibilityPerformActionERKN2ui12AXActionDataE(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly, %"struct.ui::AXActionData"* dereferenceable(168)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.views::View"*, %"class.views::View"** %3, align 8
  %5 = bitcast %"class.views::View"* %4 to i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)***
  %6 = load i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)**, i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)** %6, i64 82
  %8 = load i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.views::View"* %4, %"struct.ui::AXActionData"* dereferenceable(168) %1) #10
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn408_N5views26ViewAXPlatformNodeDelegate26AccessibilityPerformActionERKN2ui12AXActionDataE(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly, %"struct.ui::AXActionData"* dereferenceable(168)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %4 = getelementptr inbounds i32*, i32** %3, i64 2
  %5 = bitcast i32** %4 to %"class.views::View"**
  %6 = load %"class.views::View"*, %"class.views::View"** %5, align 8
  %7 = bitcast %"class.views::View"* %6 to i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)***
  %8 = load i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)**, i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)** %8, i64 82
  %10 = load i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)*, i1 (%"class.views::View"*, %"struct.ui::AXActionData"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.views::View"* %6, %"struct.ui::AXActionData"* dereferenceable(168) %1) #10
  ret i1 %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5views26ViewAXPlatformNodeDelegate34ShouldIgnoreHoveredStateForTestingEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZThn408_N5views26ViewAXPlatformNodeDelegate34ShouldIgnoreHoveredStateForTestingEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5views26ViewAXPlatformNodeDelegate11IsOffscreenEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZThn408_NK5views26ViewAXPlatformNodeDelegate11IsOffscreenEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views26ViewAXPlatformNodeDelegate17GetAuthorUniqueIdEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %1, i64 0, i32 0, i32 2
  %5 = load %"class.views::View"*, %"class.views::View"** %4, align 8
  %6 = icmp eq %"class.views::View"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.views::View", %"class.views::View"* %5, i64 0, i32 10
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  call void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string"* nonnull sret %3, i32 %9) #10
  %13 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @.str, i64 0, i64 0), i64 5) #10, !noalias !13
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #10, !noalias !13
  %16 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %11
  %21 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %11, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  br label %26

24:                                               ; preds = %7, %2
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #10
  br label %26

26:                                               ; preds = %23, %24
  ret void
}

declare void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn408_NK5views26ViewAXPlatformNodeDelegate17GetAuthorUniqueIdEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %1, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %5 = getelementptr inbounds i32*, i32** %4, i64 2
  %6 = bitcast i32** %5 to %"class.views::View"**
  %7 = load %"class.views::View"*, %"class.views::View"** %6, align 8, !noalias !16
  %8 = icmp eq %"class.views::View"* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.views::View", %"class.views::View"* %7, i64 0, i32 10
  %11 = load i32, i32* %10, align 4, !noalias !16
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10, !noalias !16
  call void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string"* nonnull sret %3, i32 %11) #10, !noalias !16
  %15 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @.str, i64 0, i64 0), i64 5) #10, !noalias !19
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10, !noalias !19
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1, !noalias !16
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %13
  %23 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %24 = load i8*, i8** %23, align 8, !noalias !16
  call void @_ZdlPv(i8* %24) #12, !noalias !16
  br label %25

25:                                               ; preds = %22, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10, !noalias !16
  br label %28

26:                                               ; preds = %9, %2
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #10, !alias.scope !16
  br label %28

28:                                               ; preds = %25, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views26ViewAXPlatformNodeDelegate11IsMinimizedEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.views::View"*, %"class.views::View"** %2, align 8
  %4 = bitcast %"class.views::View"* %3 to %"class.views::Widget"* (%"class.views::View"*)***
  %5 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %5, i64 13
  %7 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %6, align 8
  %8 = tail call %"class.views::Widget"* %7(%"class.views::View"* %3) #10
  %9 = icmp eq %"class.views::Widget"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = tail call zeroext i1 @_ZNK5views6Widget11IsMinimizedEv(%"class.views::Widget"* nonnull %8) #10
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi i1 [ false, %1 ], [ %11, %10 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5views6Widget11IsMinimizedEv(%"class.views::Widget"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn408_NK5views26ViewAXPlatformNodeDelegate11IsMinimizedEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = getelementptr inbounds i32*, i32** %2, i64 2
  %4 = bitcast i32** %3 to %"class.views::View"**
  %5 = load %"class.views::View"*, %"class.views::View"** %4, align 8
  %6 = bitcast %"class.views::View"* %5 to %"class.views::Widget"* (%"class.views::View"*)***
  %7 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %7, i64 13
  %9 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %8, align 8
  %10 = tail call %"class.views::Widget"* %9(%"class.views::View"* %5) #10
  %11 = icmp eq %"class.views::Widget"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = tail call zeroext i1 @_ZNK5views6Widget11IsMinimizedEv(%"class.views::Widget"* nonnull %10) #10
  br label %14

14:                                               ; preds = %1, %12
  %15 = phi i1 [ false, %1 ], [ %13, %12 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.ui::AXUniqueId"* @_ZNK5views26ViewAXPlatformNodeDelegate11GetUniqueIdEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0
  %3 = tail call dereferenceable(16) %"class.ui::AXUniqueId"* @_ZNK5views17ViewAccessibility11GetUniqueIdEv(%"class.views::ViewAccessibility"* %2) #10
  ret %"class.ui::AXUniqueId"* %3
}

declare dereferenceable(16) %"class.ui::AXUniqueId"* @_ZNK5views17ViewAccessibility11GetUniqueIdEv(%"class.views::ViewAccessibility"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.ui::AXUniqueId"* @_ZThn408_NK5views26ViewAXPlatformNodeDelegate11GetUniqueIdEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = bitcast i32** %2 to %"class.views::ViewAccessibility"*
  %4 = tail call dereferenceable(16) %"class.ui::AXUniqueId"* @_ZNK5views17ViewAccessibility11GetUniqueIdEv(%"class.views::ViewAccessibility"* %3) #10
  ret %"class.ui::AXUniqueId"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZNK5views26ViewAXPlatformNodeDelegate32GetTableHasColumnOrRowHeaderNodeEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.ui::AXNodeData", align 8
  %3 = alloca %"struct.ui::AXNodeData", align 8
  %4 = bitcast %"struct.ui::AXNodeData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %4) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.242", %"class.std::__1::vector.250", %"class.std::__1::vector.258", %"class.std::__1::vector.266", %"class.std::__1::vector.274", %"class.std::__1::vector.282", %"class.std::__1::vector.290", %"class.std::__1::vector.298", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.305" } }* @"__const._ZZNK5views26ViewAXPlatformNodeDelegate11HitTestSyncEiiENK3$_0clEPNS_4ViewE.child_data" to i8*), i64 264, i1 false) #10
  call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* nonnull %3) #10
  %5 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.views::View"*, %"class.views::View"** %5, align 8
  %7 = call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %6) #10
  %8 = bitcast %"class.views::ViewAccessibility"* %7 to void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)***
  %9 = load void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)**, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)** %9, i64 2
  %11 = load void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)** %10, align 8
  call void %11(%"class.views::ViewAccessibility"* %7, %"struct.ui::AXNodeData"* nonnull %3) #10
  %12 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %3, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %13) #10
  br i1 %14, label %15, label %42

15:                                               ; preds = %1
  %16 = bitcast %"class.views::View"** %5 to %"class.views::TableView"**
  %17 = load %"class.views::TableView"*, %"class.views::TableView"** %16, align 8
  %18 = icmp eq %"class.views::TableView"* %17, null
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %4) #10
  br i1 %18, label %43, label %19

19:                                               ; preds = %15
  %20 = bitcast %"struct.ui::AXNodeData"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %20) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.242", %"class.std::__1::vector.250", %"class.std::__1::vector.258", %"class.std::__1::vector.266", %"class.std::__1::vector.274", %"class.std::__1::vector.282", %"class.std::__1::vector.290", %"class.std::__1::vector.298", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.305" } }* @"__const._ZZNK5views26ViewAXPlatformNodeDelegate11HitTestSyncEiiENK3$_0clEPNS_4ViewE.child_data" to i8*), i64 264, i1 false) #10
  call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* nonnull %2) #10
  %21 = load %"class.views::View"*, %"class.views::View"** %5, align 8
  %22 = call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %21) #10
  %23 = bitcast %"class.views::ViewAccessibility"* %22 to void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)***
  %24 = load void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)**, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)** %24, i64 2
  %26 = load void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)** %25, align 8
  call void %26(%"class.views::ViewAccessibility"* %22, %"struct.ui::AXNodeData"* nonnull %2) #10
  %27 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %2, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %28) #10
  br i1 %29, label %30, label %32

30:                                               ; preds = %19
  %31 = load %"class.views::TableView"*, %"class.views::TableView"** %16, align 8
  br label %32

32:                                               ; preds = %19, %30
  %33 = phi %"class.views::TableView"* [ %31, %30 ], [ null, %19 ]
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %20) #10
  %34 = getelementptr inbounds %"class.views::TableView", %"class.views::TableView"* %33, i64 0, i32 4, i32 0, i32 0
  %35 = load %"struct.views::TableView::VisibleColumn"*, %"struct.views::TableView::VisibleColumn"** %34, align 8
  %36 = getelementptr inbounds %"class.views::TableView", %"class.views::TableView"* %33, i64 0, i32 4, i32 0, i32 1
  %37 = load %"struct.views::TableView::VisibleColumn"*, %"struct.views::TableView::VisibleColumn"** %36, align 8
  %38 = icmp ne %"struct.views::TableView::VisibleColumn"* %35, %37
  %39 = zext i1 %38 to i16
  %40 = shl nuw nsw i16 %39, 8
  %41 = or i16 %40, 1
  br label %43

42:                                               ; preds = %1
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %4) #10
  br label %43

43:                                               ; preds = %42, %15, %32
  %44 = phi i16 [ %41, %32 ], [ 1, %15 ], [ 1, %42 ]
  ret i16 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::TableView"* @_ZNK5views26ViewAXPlatformNodeDelegate20GetAncestorTableViewEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.ui::AXNodeData", align 8
  %3 = bitcast %"struct.ui::AXNodeData"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %3) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.242", %"class.std::__1::vector.250", %"class.std::__1::vector.258", %"class.std::__1::vector.266", %"class.std::__1::vector.274", %"class.std::__1::vector.282", %"class.std::__1::vector.290", %"class.std::__1::vector.298", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.305" } }* @"__const._ZZNK5views26ViewAXPlatformNodeDelegate11HitTestSyncEiiENK3$_0clEPNS_4ViewE.child_data" to i8*), i64 264, i1 false)
  call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* nonnull %2) #10
  %4 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.views::View"*, %"class.views::View"** %4, align 8
  %6 = call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %5) #10
  %7 = bitcast %"class.views::ViewAccessibility"* %6 to void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)***
  %8 = load void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)**, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)** %8, i64 2
  %10 = load void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)** %9, align 8
  call void %10(%"class.views::ViewAccessibility"* %6, %"struct.ui::AXNodeData"* nonnull %2) #10
  %11 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %2, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %12) #10
  br i1 %13, label %14, label %17

14:                                               ; preds = %1
  %15 = bitcast %"class.views::View"** %4 to %"class.views::TableView"**
  %16 = load %"class.views::TableView"*, %"class.views::TableView"** %15, align 8
  br label %17

17:                                               ; preds = %1, %14
  %18 = phi %"class.views::TableView"* [ %16, %14 ], [ null, %1 ]
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %3) #10
  ret %"class.views::TableView"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZThn408_NK5views26ViewAXPlatformNodeDelegate32GetTableHasColumnOrRowHeaderNodeEv(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = bitcast i32** %2 to %"class.views::ViewAXPlatformNodeDelegate"*
  %4 = tail call i16 @_ZNK5views26ViewAXPlatformNodeDelegate32GetTableHasColumnOrRowHeaderNodeEv(%"class.views::ViewAXPlatformNodeDelegate"* %3)
  ret i16 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views26ViewAXPlatformNodeDelegate19GetColHeaderNodeIdsEv(%"class.std::__1::vector.298"* noalias sret, %"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector.298"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %6, align 8
  %8 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %1, i64 0, i32 0, i32 3, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.231"* %7, %9
  br i1 %10, label %92, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %7, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %12, align 8
  %14 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %13, i64 0, i32 4, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %14, align 8
  %16 = getelementptr inbounds %"class.views::AXVirtualView", %"class.views::AXVirtualView"* %13, i64 0, i32 4, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %16, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr.231"* %15, %17
  br i1 %18, label %92, label %19

19:                                               ; preds = %11
  %20 = bitcast i32** %3 to i64*
  %21 = bitcast %"class.std::__1::vector.298"* %0 to i64*
  %22 = bitcast i32** %4 to i64*
  br label %23

23:                                               ; preds = %19, %89
  %24 = phi %"class.std::__1::unique_ptr.231"* [ %15, %19 ], [ %90, %89 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.views::AXVirtualView"*, %"class.views::AXVirtualView"** %25, align 8
  %27 = bitcast %"class.views::AXVirtualView"* %26 to %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)***
  %28 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)**, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*** %27, align 8
  %29 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %28, i64 2
  %30 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %29, align 8
  %31 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %30(%"class.views::AXVirtualView"* %26) #10
  %32 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %31, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 20
  br i1 %34, label %35, label %89

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %31, i64 0, i32 1
  %37 = load i32*, i32** %3, align 8
  %38 = load i32*, i32** %4, align 8
  %39 = icmp eq i32* %37, %38
  %40 = ptrtoint i32* %38 to i64
  br i1 %39, label %45, label %41

41:                                               ; preds = %35
  %42 = load i32, i32* %36, align 4
  store i32 %42, i32* %37, align 4
  %43 = getelementptr inbounds i32, i32* %37, i64 1
  %44 = ptrtoint i32* %43 to i64
  store i64 %44, i64* %20, align 8
  br label %89

45:                                               ; preds = %35
  %46 = ptrtoint i32* %37 to i64
  %47 = load i64, i64* %21, align 8
  %48 = sub i64 %46, %47
  %49 = ashr exact i64 %48, 2
  %50 = add nsw i64 %49, 1
  %51 = icmp ugt i64 %50, 4611686018427387903
  br i1 %51, label %52, label %54

52:                                               ; preds = %45
  %53 = bitcast %"class.std::__1::vector.298"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #11
  unreachable

54:                                               ; preds = %45
  %55 = sub i64 %40, %47
  %56 = ashr exact i64 %55, 2
  %57 = icmp ult i64 %56, 2305843009213693951
  br i1 %57, label %58, label %66

58:                                               ; preds = %54
  %59 = ashr exact i64 %55, 1
  %60 = icmp ult i64 %59, %50
  %61 = select i1 %60, i64 %50, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 4611686018427387903
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #11
  unreachable

66:                                               ; preds = %63, %54
  %67 = phi i64 [ %61, %63 ], [ 4611686018427387903, %54 ]
  %68 = shl i64 %67, 2
  %69 = tail call i8* @_Znwm(i64 %68) #12
  %70 = bitcast i8* %69 to i32*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi i8* [ %69, %66 ], [ null, %58 ]
  %74 = phi i32* [ %70, %66 ], [ null, %58 ]
  %75 = getelementptr inbounds i32, i32* %74, i64 %49
  %76 = getelementptr inbounds i32, i32* %74, i64 %72
  %77 = ptrtoint i32* %76 to i64
  %78 = load i32, i32* %36, align 4
  store i32 %78, i32* %75, align 4
  %79 = getelementptr inbounds i32, i32* %75, i64 1
  %80 = ptrtoint i32* %79 to i64
  %81 = ptrtoint i32* %74 to i64
  %82 = icmp sgt i64 %48, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %71
  %84 = inttoptr i64 %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %84, i64 %48, i1 false) #10
  br label %85

85:                                               ; preds = %83, %71
  store i64 %81, i64* %21, align 8
  store i64 %80, i64* %20, align 8
  store i64 %77, i64* %22, align 8
  %86 = icmp eq i64 %47, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %85
  %88 = inttoptr i64 %47 to i8*
  tail call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %87, %85, %41, %23
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231"* %24, i64 1
  %91 = icmp eq %"class.std::__1::unique_ptr.231"* %90, %17
  br i1 %91, label %92, label %23

92:                                               ; preds = %89, %11, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn408_NK5views26ViewAXPlatformNodeDelegate19GetColHeaderNodeIdsEv(%"class.std::__1::vector.298"* noalias sret, %"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %1, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %4 = bitcast i32** %3 to %"class.views::ViewAXPlatformNodeDelegate"*
  tail call void @_ZNK5views26ViewAXPlatformNodeDelegate19GetColHeaderNodeIdsEv(%"class.std::__1::vector.298"* sret %0, %"class.views::ViewAXPlatformNodeDelegate"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views26ViewAXPlatformNodeDelegate19GetColHeaderNodeIdsEi(%"class.std::__1::vector.298"* noalias nocapture sret, %"class.views::ViewAXPlatformNodeDelegate"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.298", align 8
  %5 = bitcast %"class.std::__1::vector.298"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %4, i64 0, i32 0, i32 1
  %7 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %1 to void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)***
  %8 = bitcast %"class.std::__1::vector.298"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = load void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)**, void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)*** %7, align 8
  %10 = getelementptr inbounds void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)*, void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)** %9, i64 37
  %11 = load void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)*, void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)** %10, align 8
  call void %11(%"class.std::__1::vector.298"* nonnull sret %4, %"class.views::ViewAXPlatformNodeDelegate"* %1) #10
  %12 = bitcast i32** %6 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.298"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 2
  %18 = sext i32 %2 to i64
  %19 = icmp ugt i64 %17, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %3
  %21 = bitcast %"class.std::__1::vector.298"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #10
  br label %35

22:                                               ; preds = %3
  %23 = inttoptr i64 %15 to i32*
  %24 = getelementptr inbounds i32, i32* %23, i64 %18
  %25 = load i32, i32* %24, align 4
  %26 = call i8* @_Znwm(i64 4) #12
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::vector.298"* %0 to i8**
  store i8* %26, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %26, i64 4
  %31 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %32 = bitcast i32** %31 to i8**
  store i8* %30, i8** %32, align 8
  %33 = bitcast i32** %28 to i64*
  store i32 %25, i32* %27, align 4
  %34 = ptrtoint i8* %30 to i64
  store i64 %34, i64* %33, align 8
  br label %35

35:                                               ; preds = %22, %20
  %36 = icmp eq i64 %15, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %35
  store i64 %15, i64* %12, align 8
  %38 = inttoptr i64 %15 to i8*
  call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %35, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn408_NK5views26ViewAXPlatformNodeDelegate19GetColHeaderNodeIdsEi(%"class.std::__1::vector.298"* noalias nocapture sret, %"class.views::ViewAXPlatformNodeDelegate"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.298", align 8
  %5 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %1, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %6 = bitcast i32** %5 to %"class.views::ViewAXPlatformNodeDelegate"*
  %7 = bitcast %"class.std::__1::vector.298"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10, !noalias !22
  %8 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %4, i64 0, i32 0, i32 1
  %9 = bitcast i32** %5 to void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false) #10, !noalias !22
  %10 = load void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)**, void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)*** %9, align 8, !noalias !22
  %11 = getelementptr inbounds void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)*, void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)** %10, i64 37
  %12 = load void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)*, void (%"class.std::__1::vector.298"*, %"class.views::ViewAXPlatformNodeDelegate"*)** %11, align 8, !noalias !22
  call void %12(%"class.std::__1::vector.298"* nonnull sret %4, %"class.views::ViewAXPlatformNodeDelegate"* %6) #10, !noalias !22
  %13 = bitcast i32** %8 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !22
  %15 = bitcast %"class.std::__1::vector.298"* %4 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !22
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 2
  %19 = sext i32 %2 to i64
  %20 = icmp ugt i64 %18, %19
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = bitcast %"class.std::__1::vector.298"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #10, !alias.scope !22
  br label %36

23:                                               ; preds = %3
  %24 = inttoptr i64 %16 to i32*
  %25 = getelementptr inbounds i32, i32* %24, i64 %19
  %26 = load i32, i32* %25, align 4, !noalias !22
  %27 = call i8* @_Znwm(i64 4) #12, !noalias !22
  %28 = bitcast i8* %27 to i32*
  %29 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::vector.298"* %0 to i8**
  store i8* %27, i8** %30, align 8, !alias.scope !22
  %31 = getelementptr inbounds i8, i8* %27, i64 4
  %32 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast i32** %32 to i8**
  store i8* %31, i8** %33, align 8, !alias.scope !22
  %34 = bitcast i32** %29 to i64*
  store i32 %26, i32* %28, align 4, !noalias !22
  %35 = ptrtoint i8* %31 to i64
  store i64 %35, i64* %34, align 8, !alias.scope !22
  br label %36

36:                                               ; preds = %23, %21
  %37 = icmp eq i64 %16, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %36
  store i64 %16, i64* %13, align 8, !noalias !22
  %39 = inttoptr i64 %16 to i8*
  call void @_ZdlPv(i8* %39) #12, !noalias !22
  br label %40

40:                                               ; preds = %36, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10, !noalias !22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5views26ViewAXPlatformNodeDelegate9GetCellIdEii(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.ui::AXNodeData", align 8
  %5 = alloca %"struct.ui::AXNodeData", align 8
  %6 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %6, align 8
  %8 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.231"*, %"class.std::__1::unique_ptr.231"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.231"* %7, %9
  br i1 %10, label %59, label %11

11:                                               ; preds = %3
  %12 = bitcast %"struct.ui::AXNodeData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %12) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.242", %"class.std::__1::vector.250", %"class.std::__1::vector.258", %"class.std::__1::vector.266", %"class.std::__1::vector.274", %"class.std::__1::vector.282", %"class.std::__1::vector.290", %"class.std::__1::vector.298", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.305" } }* @"__const._ZZNK5views26ViewAXPlatformNodeDelegate11HitTestSyncEiiENK3$_0clEPNS_4ViewE.child_data" to i8*), i64 264, i1 false) #10
  call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* nonnull %4) #10
  %13 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %14 = load %"class.views::View"*, %"class.views::View"** %13, align 8
  %15 = call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %14) #10
  %16 = bitcast %"class.views::ViewAccessibility"* %15 to void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)***
  %17 = load void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)**, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)** %17, i64 2
  %19 = load void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)** %18, align 8
  call void %19(%"class.views::ViewAccessibility"* %15, %"struct.ui::AXNodeData"* nonnull %4) #10
  %20 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %4, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %21) #10
  br i1 %22, label %23, label %58

23:                                               ; preds = %11
  %24 = bitcast %"class.views::View"** %13 to %"class.views::TableView"**
  %25 = load %"class.views::TableView"*, %"class.views::TableView"** %24, align 8
  %26 = icmp eq %"class.views::TableView"* %25, null
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %12) #10
  br i1 %26, label %59, label %27

27:                                               ; preds = %23
  %28 = bitcast %"struct.ui::AXNodeData"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %28) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.242", %"class.std::__1::vector.250", %"class.std::__1::vector.258", %"class.std::__1::vector.266", %"class.std::__1::vector.274", %"class.std::__1::vector.282", %"class.std::__1::vector.290", %"class.std::__1::vector.298", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr.305" } }* @"__const._ZZNK5views26ViewAXPlatformNodeDelegate11HitTestSyncEiiENK3$_0clEPNS_4ViewE.child_data" to i8*), i64 264, i1 false) #10
  call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* nonnull %5) #10
  %29 = load %"class.views::View"*, %"class.views::View"** %13, align 8
  %30 = call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %29) #10
  %31 = bitcast %"class.views::ViewAccessibility"* %30 to void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)***
  %32 = load void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)**, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)** %32, i64 2
  %34 = load void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)*, void (%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*)** %33, align 8
  call void %34(%"class.views::ViewAccessibility"* %30, %"struct.ui::AXNodeData"* nonnull %5) #10
  %35 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %5, i64 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %36) #10
  br i1 %37, label %38, label %40

38:                                               ; preds = %27
  %39 = load %"class.views::TableView"*, %"class.views::TableView"** %24, align 8
  br label %40

40:                                               ; preds = %27, %38
  %41 = phi %"class.views::TableView"* [ %39, %38 ], [ null, %27 ]
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %28) #10
  %42 = call %"class.views::AXVirtualView"* @_ZN5views9TableView27GetVirtualAccessibilityCellEii(%"class.views::TableView"* %41, i32 %1, i32 %2) #10
  %43 = icmp eq %"class.views::AXVirtualView"* %42, null
  br i1 %43, label %59, label %44

44:                                               ; preds = %40
  %45 = bitcast %"class.views::AXVirtualView"* %42 to %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)***
  %46 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)**, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*** %45, align 8
  %47 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %46, i64 2
  %48 = load %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)*, %"struct.ui::AXNodeData"* (%"class.views::AXVirtualView"*)** %47, align 8
  %49 = call dereferenceable(264) %"struct.ui::AXNodeData"* %48(%"class.views::AXVirtualView"* nonnull %42) #10
  %50 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %49, i64 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 14
  br i1 %52, label %53, label %59

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %49, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  %57 = shl nuw i64 %56, 32
  br label %59

58:                                               ; preds = %11
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %12) #10
  br label %59

59:                                               ; preds = %58, %44, %40, %3, %23, %53
  %60 = phi i64 [ %57, %53 ], [ 0, %23 ], [ 0, %3 ], [ 0, %40 ], [ 0, %44 ], [ 0, %58 ]
  %61 = phi i64 [ 1, %53 ], [ 0, %23 ], [ 0, %3 ], [ 0, %40 ], [ 0, %44 ], [ 0, %58 ]
  %62 = or i64 %61, %60
  ret i64 %62
}

declare %"class.views::AXVirtualView"* @_ZN5views9TableView27GetVirtualAccessibilityCellEii(%"class.views::TableView"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZThn408_NK5views26ViewAXPlatformNodeDelegate9GetCellIdEii(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %5 = bitcast i32** %4 to %"class.views::ViewAXPlatformNodeDelegate"*
  %6 = tail call i64 @_ZNK5views26ViewAXPlatformNodeDelegate9GetCellIdEii(%"class.views::ViewAXPlatformNodeDelegate"* %5, i32 %1, i32 %2)
  ret i64 %6
}

declare zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views26ViewAXPlatformNodeDelegate16IsOrderedSetItemEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %3, i64 16
  %5 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  %7 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %8 = load %"class.views::View"*, %"class.views::View"** %7, align 8
  %9 = tail call i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"* %8) #10
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %15, label %11

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZNK2ui10AXNodeData15HasIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %6, i32 40) #10
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = tail call zeroext i1 @_ZNK2ui10AXNodeData15HasIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %6, i32 39) #10
  br label %15

15:                                               ; preds = %11, %13, %1
  %16 = phi i1 [ true, %1 ], [ false, %11 ], [ %14, %13 ]
  ret i1 %16
}

declare i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2ui10AXNodeData15HasIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn408_NK5views26ViewAXPlatformNodeDelegate16IsOrderedSetItemEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = bitcast i32** %2 to %"class.views::ViewAXPlatformNodeDelegate"*
  %4 = bitcast i32** %2 to %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %5 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %4, align 8
  %6 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %5, i64 16
  %7 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %6, align 8
  %8 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %7(%"class.views::ViewAXPlatformNodeDelegate"* %3) #10
  %9 = getelementptr inbounds i32*, i32** %2, i64 2
  %10 = bitcast i32** %9 to %"class.views::View"**
  %11 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  %12 = tail call i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"* %11) #10
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %18, label %14

14:                                               ; preds = %1
  %15 = tail call zeroext i1 @_ZNK2ui10AXNodeData15HasIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %8, i32 40) #10
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = tail call zeroext i1 @_ZNK2ui10AXNodeData15HasIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %8, i32 39) #10
  br label %18

18:                                               ; preds = %1, %14, %16
  %19 = phi i1 [ true, %1 ], [ false, %14 ], [ %17, %16 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views26ViewAXPlatformNodeDelegate12IsOrderedSetEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.views::View"*, %"class.views::View"** %2, align 8
  %4 = tail call i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"* %3) #10
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %8 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %7, align 8
  %9 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %8, i64 16
  %10 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %9, align 8
  %11 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %10(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  %12 = tail call zeroext i1 @_ZNK2ui10AXNodeData15HasIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %11, i32 39) #10
  br label %13

13:                                               ; preds = %6, %1
  %14 = phi i1 [ true, %1 ], [ %12, %6 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn408_NK5views26ViewAXPlatformNodeDelegate12IsOrderedSetEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = getelementptr inbounds i32*, i32** %2, i64 2
  %4 = bitcast i32** %3 to %"class.views::View"**
  %5 = load %"class.views::View"*, %"class.views::View"** %4, align 8
  %6 = tail call i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"* %5) #10
  %7 = icmp sgt i32 %6, -1
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = bitcast i32** %2 to %"class.views::ViewAXPlatformNodeDelegate"*
  %10 = bitcast i32** %2 to %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %11 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %10, align 8
  %12 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %11, i64 16
  %13 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %12, align 8
  %14 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %13(%"class.views::ViewAXPlatformNodeDelegate"* %9) #10
  %15 = tail call zeroext i1 @_ZNK2ui10AXNodeData15HasIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %14, i32 39) #10
  br label %16

16:                                               ; preds = %1, %8
  %17 = phi i1 [ true, %1 ], [ %15, %8 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5views26ViewAXPlatformNodeDelegate11GetPosInSetEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.93", align 8
  %3 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %4 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %4, i64 16
  %6 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %5, align 8
  %7 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %6(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  %8 = tail call zeroext i1 @_ZNK2ui10AXNodeData15HasIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %7, i32 40) #10
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %7, i32 40) #10
  br label %46

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::vector.93"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %2, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #10
  call void @_ZNK5views26ViewAXPlatformNodeDelegate21GetViewsInGroupForSetEPNSt3__16vectorIPNS_4ViewENS1_9allocatorIS4_EEEE(%"class.views::ViewAXPlatformNodeDelegate"* %0, %"class.std::__1::vector.93"* nonnull %2)
  %15 = load %"class.views::View"**, %"class.views::View"*** %13, align 8
  %16 = load %"class.views::View"**, %"class.views::View"*** %14, align 8
  %17 = icmp eq %"class.views::View"** %15, %16
  br i1 %17, label %37, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %20 = load %"class.views::View"*, %"class.views::View"** %19, align 8
  br label %21

21:                                               ; preds = %25, %18
  %22 = phi %"class.views::View"** [ %15, %18 ], [ %26, %25 ]
  %23 = load %"class.views::View"*, %"class.views::View"** %22, align 8
  %24 = icmp eq %"class.views::View"* %23, %20
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %22, i64 1
  %27 = icmp eq %"class.views::View"** %26, %16
  br i1 %27, label %37, label %21

28:                                               ; preds = %21
  %29 = icmp eq %"class.views::View"** %22, %16
  br i1 %29, label %37, label %30

30:                                               ; preds = %28
  %31 = ptrtoint %"class.views::View"** %15 to i64
  %32 = ptrtoint %"class.views::View"** %22 to i64
  %33 = sub i64 %32, %31
  %34 = lshr exact i64 %33, 3
  %35 = trunc i64 %34 to i32
  %36 = add nsw i32 %35, 1
  br label %37

37:                                               ; preds = %25, %30, %28, %11
  %38 = phi i64 [ 0, %11 ], [ 1, %30 ], [ 0, %28 ], [ 0, %25 ]
  %39 = phi i32 [ undef, %11 ], [ %36, %30 ], [ undef, %28 ], [ undef, %25 ]
  %40 = icmp eq %"class.views::View"** %15, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = ptrtoint %"class.views::View"** %15 to i64
  %43 = bitcast %"class.views::View"*** %14 to i64*
  store i64 %42, i64* %43, align 8
  %44 = bitcast %"class.views::View"** %15 to i8*
  call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %37, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  br label %46

46:                                               ; preds = %45, %9
  %47 = phi i64 [ 1, %9 ], [ %38, %45 ]
  %48 = phi i32 [ %10, %9 ], [ %39, %45 ]
  %49 = zext i32 %48 to i64
  %50 = shl nuw i64 %49, 32
  %51 = and i64 %47, 255
  %52 = or i64 %50, %51
  ret i64 %52
}

declare i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views26ViewAXPlatformNodeDelegate21GetViewsInGroupForSetEPNSt3__16vectorIPNS_4ViewENS1_9allocatorIS4_EEEE(%"class.views::ViewAXPlatformNodeDelegate"* nocapture readonly, %"class.std::__1::vector.93"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.views::View"*, %"class.views::View"** %3, align 8
  %5 = tail call i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"* %4) #10
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %66, label %7

7:                                                ; preds = %2
  %8 = load %"class.views::View"*, %"class.views::View"** %3, align 8
  %9 = getelementptr inbounds %"class.views::View", %"class.views::View"* %8, i64 0, i32 13
  %10 = load %"class.views::View"*, %"class.views::View"** %9, align 8
  %11 = icmp eq %"class.views::View"* %10, null
  %12 = select i1 %11, %"class.views::View"* %8, %"class.views::View"* %10
  tail call void @_ZN5views4View15GetViewsInGroupEiPNSt3__16vectorIPS0_NS1_9allocatorIS3_EEEE(%"class.views::View"* %12, i32 %5, %"class.std::__1::vector.93"* %1) #10
  %13 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.views::View"**, %"class.views::View"*** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %1, i64 0, i32 0, i32 1
  %16 = load %"class.views::View"**, %"class.views::View"*** %15, align 8
  %17 = icmp eq %"class.views::View"** %14, %16
  br i1 %17, label %30, label %18

18:                                               ; preds = %7, %27
  %19 = phi %"class.views::View"** [ %28, %27 ], [ %14, %7 ]
  %20 = load %"class.views::View"*, %"class.views::View"** %19, align 8
  %21 = tail call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %20) #10
  %22 = bitcast %"class.views::ViewAccessibility"* %21 to i1 (%"class.views::ViewAccessibility"*)***
  %23 = load i1 (%"class.views::ViewAccessibility"*)**, i1 (%"class.views::ViewAccessibility"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.views::ViewAccessibility"*)*, i1 (%"class.views::ViewAccessibility"*)** %23, i64 10
  %25 = load i1 (%"class.views::ViewAccessibility"*)*, i1 (%"class.views::ViewAccessibility"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.views::ViewAccessibility"* %21) #10
  br i1 %26, label %30, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %19, i64 1
  %29 = icmp eq %"class.views::View"** %28, %16
  br i1 %29, label %61, label %18

30:                                               ; preds = %18, %7
  %31 = phi %"class.views::View"** [ %14, %7 ], [ %19, %18 ]
  %32 = icmp eq %"class.views::View"** %31, %16
  br i1 %32, label %61, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %31, i64 1
  %35 = icmp eq %"class.views::View"** %34, %16
  br i1 %35, label %61, label %36

36:                                               ; preds = %33
  %37 = ptrtoint %"class.views::View"** %31 to i64
  br label %38

38:                                               ; preds = %36, %55
  %39 = phi %"class.views::View"** [ %57, %55 ], [ %34, %36 ]
  %40 = phi i64 [ %56, %55 ], [ %37, %36 ]
  %41 = load %"class.views::View"*, %"class.views::View"** %39, align 8
  %42 = tail call dereferenceable(408) %"class.views::ViewAccessibility"* @_ZNK5views4View20GetViewAccessibilityEv(%"class.views::View"* %41) #10
  %43 = bitcast %"class.views::ViewAccessibility"* %42 to i1 (%"class.views::ViewAccessibility"*)***
  %44 = load i1 (%"class.views::ViewAccessibility"*)**, i1 (%"class.views::ViewAccessibility"*)*** %43, align 8
  %45 = getelementptr inbounds i1 (%"class.views::ViewAccessibility"*)*, i1 (%"class.views::ViewAccessibility"*)** %44, i64 10
  %46 = load i1 (%"class.views::ViewAccessibility"*)*, i1 (%"class.views::ViewAccessibility"*)** %45, align 8
  %47 = tail call zeroext i1 %46(%"class.views::ViewAccessibility"* %42) #10
  br i1 %47, label %55, label %48

48:                                               ; preds = %38
  %49 = bitcast %"class.views::View"** %39 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = inttoptr i64 %40 to %"class.views::View"**
  %52 = inttoptr i64 %40 to i64*
  store i64 %50, i64* %52, align 8
  %53 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %51, i64 1
  %54 = ptrtoint %"class.views::View"** %53 to i64
  br label %55

55:                                               ; preds = %48, %38
  %56 = phi i64 [ %40, %38 ], [ %54, %48 ]
  %57 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %39, i64 1
  %58 = icmp eq %"class.views::View"** %57, %16
  br i1 %58, label %59, label %38

59:                                               ; preds = %55
  %60 = inttoptr i64 %56 to %"class.views::View"**
  br label %61

61:                                               ; preds = %27, %59, %30, %33
  %62 = phi %"class.views::View"** [ %16, %30 ], [ %31, %33 ], [ %60, %59 ], [ %16, %27 ]
  %63 = load %"class.views::View"**, %"class.views::View"*** %15, align 8
  %64 = icmp eq %"class.views::View"** %62, %63
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  store %"class.views::View"** %62, %"class.views::View"*** %15, align 8
  br label %66

66:                                               ; preds = %65, %61, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZThn408_NK5views26ViewAXPlatformNodeDelegate11GetPosInSetEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = bitcast i32** %2 to %"class.views::ViewAXPlatformNodeDelegate"*
  %4 = tail call i64 @_ZNK5views26ViewAXPlatformNodeDelegate11GetPosInSetEv(%"class.views::ViewAXPlatformNodeDelegate"* %3)
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5views26ViewAXPlatformNodeDelegate10GetSetSizeEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.93", align 8
  %3 = bitcast %"class.views::ViewAXPlatformNodeDelegate"* %0 to %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)***
  %4 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %4, i64 16
  %6 = load %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.views::ViewAXPlatformNodeDelegate"*)** %5, align 8
  %7 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %6(%"class.views::ViewAXPlatformNodeDelegate"* %0) #10
  %8 = tail call zeroext i1 @_ZNK2ui10AXNodeData15HasIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %7, i32 39) #10
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %7, i32 39) #10
  br label %44

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::vector.93"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %2, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #10
  call void @_ZNK5views26ViewAXPlatformNodeDelegate21GetViewsInGroupForSetEPNSt3__16vectorIPNS_4ViewENS1_9allocatorIS4_EEEE(%"class.views::ViewAXPlatformNodeDelegate"* %0, %"class.std::__1::vector.93"* nonnull %2)
  %15 = load %"class.views::View"**, %"class.views::View"*** %13, align 8
  %16 = load %"class.views::View"**, %"class.views::View"*** %14, align 8
  %17 = icmp eq %"class.views::View"** %15, %16
  %18 = ptrtoint %"class.views::View"** %16 to i64
  %19 = ptrtoint %"class.views::View"** %15 to i64
  br i1 %17, label %36, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 0, i32 0, i32 2
  %22 = load %"class.views::View"*, %"class.views::View"** %21, align 8
  br label %23

23:                                               ; preds = %27, %20
  %24 = phi %"class.views::View"** [ %15, %20 ], [ %28, %27 ]
  %25 = load %"class.views::View"*, %"class.views::View"** %24, align 8
  %26 = icmp eq %"class.views::View"* %25, %22
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %24, i64 1
  %29 = icmp eq %"class.views::View"** %28, %16
  br i1 %29, label %36, label %23

30:                                               ; preds = %23
  %31 = icmp eq %"class.views::View"** %24, %16
  br i1 %31, label %36, label %32

32:                                               ; preds = %30
  %33 = sub i64 %18, %19
  %34 = lshr exact i64 %33, 3
  %35 = trunc i64 %34 to i32
  br label %36

36:                                               ; preds = %27, %32, %30, %11
  %37 = phi i64 [ 0, %11 ], [ 1, %32 ], [ 0, %30 ], [ 0, %27 ]
  %38 = phi i32 [ undef, %11 ], [ %35, %32 ], [ undef, %30 ], [ undef, %27 ]
  %39 = icmp eq %"class.views::View"** %15, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.views::View"*** %14 to i64*
  store i64 %19, i64* %41, align 8
  %42 = bitcast %"class.views::View"** %15 to i8*
  call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %36, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  br label %44

44:                                               ; preds = %43, %9
  %45 = phi i64 [ 1, %9 ], [ %37, %43 ]
  %46 = phi i32 [ %10, %9 ], [ %38, %43 ]
  %47 = zext i32 %46 to i64
  %48 = shl nuw i64 %47, 32
  %49 = and i64 %45, 255
  %50 = or i64 %48, %49
  ret i64 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZThn408_NK5views26ViewAXPlatformNodeDelegate10GetSetSizeEv(%"class.views::ViewAXPlatformNodeDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ViewAXPlatformNodeDelegate", %"class.views::ViewAXPlatformNodeDelegate"* %0, i64 -1, i32 0, i32 6, i32 12, i32 0, i32 1
  %3 = bitcast i32** %2 to %"class.views::ViewAXPlatformNodeDelegate"*
  %4 = tail call i64 @_ZNK5views26ViewAXPlatformNodeDelegate10GetSetSizeEv(%"class.views::ViewAXPlatformNodeDelegate"* %3)
  ret i64 %4
}

declare void @_ZN5views4View15GetViewsInGroupEiPNSt3__16vectorIPS0_NS1_9allocatorIS3_EEEE(%"class.views::View"*, i32, %"class.std::__1::vector.93"*) local_unnamed_addr #2

declare void @_ZN5views6Widget18GetAllOwnedWidgetsEPN4aura6WindowEPNSt3__13setIPS0_NS4_4lessIS6_EENS4_9allocatorIS6_EEEE(%"class.aura::Window"*, %"class.std::__1::set.510"*) local_unnamed_addr #2

declare void @_ZNK5views17ViewAccessibility21GetAccessibleNodeDataEPN2ui10AXNodeDataE(%"class.views::ViewAccessibility"*, %"struct.ui::AXNodeData"*) unnamed_addr #2

declare void @_ZN5views17ViewAccessibility12AnnounceTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.views::ViewAccessibility"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

declare dereferenceable(248) %"struct.ui::AXTreeData"* @_ZNK2ui26AXPlatformNodeDelegateBase11GetTreeDataEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare void @_ZNK2ui26AXPlatformNodeDelegateBase12GetInnerTextEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare void @_ZNK2ui26AXPlatformNodeDelegateBase18GetValueForControlEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare void @_ZNK2ui26AXPlatformNodeDelegateBase21GetUnignoredSelectionEv(%"struct.ui::AXNode::OwnerTree::Selection"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare void @_ZNK2ui26AXPlatformNodeDelegateBase20CreateTextPositionAtEi() unnamed_addr

declare i32 @_ZN2ui26AXPlatformNodeDelegateBase16GetIndexInParentEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase13GetFirstChildEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase12GetLastChildEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase14GetNextSiblingEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase18GetPreviousSiblingEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase29IsDescendantOfAtomicTextFieldEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare %struct._AtkObject* @_ZNK2ui26AXPlatformNodeDelegateBase25GetLowestPlatformAncestorEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare %struct._AtkObject* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTextFieldAncestorEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare void @_ZN2ui26AXPlatformNodeDelegateBase13ChildrenBeginEv() unnamed_addr

declare void @_ZN2ui26AXPlatformNodeDelegateBase11ChildrenEndEv() unnamed_addr

declare void @_ZNK2ui26AXPlatformNodeDelegateBase7GetNameEv(%"class.std::__1::basic_string.334"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare void @_ZNK2ui26AXPlatformNodeDelegateBase12GetHypertextEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare zeroext i1 @_ZN2ui26AXPlatformNodeDelegateBase21SetHypertextSelectionEii(%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32) unnamed_addr #2

declare void @_ZNK2ui26AXPlatformNodeDelegateBase23ComputeTextAttributeMapERKNSt3__16vectorINS1_4pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_EENS7_ISA_EEEE() unnamed_addr

declare void @_ZNK2ui26AXPlatformNodeDelegateBase26GetInheritedFontFamilyNameEv(%"class.std::__1::basic_string.334"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare { i64, i64 } @_ZNK2ui26AXPlatformNodeDelegateBase26GetClippedScreenBoundsRectEPNS_17AXOffscreenResultE(%"class.ui::AXPlatformNodeDelegateBase"*, i32*) unnamed_addr #2

declare { i64, i64 } @_ZNK2ui26AXPlatformNodeDelegateBase27GetHypertextRangeBoundsRectEiiNS_18AXCoordinateSystemENS_18AXClippingBehaviorEPNS_17AXOffscreenResultE(%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32, i32, i32*) unnamed_addr #2

declare { i64, i64 } @_ZNK2ui26AXPlatformNodeDelegateBase27GetInnerTextRangeBoundsRectEiiNS_18AXCoordinateSystemENS_18AXClippingBehaviorEPNS_17AXOffscreenResultE(%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32, i32, i32*) unnamed_addr #2

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase6IsTextEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase12IsWebContentEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase26HasVisibleCaretOrSelectionEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare %"class.ui::AXPlatformNode"* @_ZN2ui26AXPlatformNodeDelegateBase24GetTargetNodeForRelationEN2ax5mojom12IntAttributeE(%"class.ui::AXPlatformNodeDelegateBase"*, i32) unnamed_addr #2

declare void @_ZN2ui26AXPlatformNodeDelegateBase25GetTargetNodesForRelationEN2ax5mojom16IntListAttributeE() unnamed_addr

declare void @_ZN2ui26AXPlatformNodeDelegateBase19GetReverseRelationsEN2ax5mojom12IntAttributeE() unnamed_addr

declare void @_ZN2ui26AXPlatformNodeDelegateBase19GetReverseRelationsEN2ax5mojom16IntListAttributeE() unnamed_addr

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase16FindTextBoundaryEN2ax5mojom12TextBoundaryEiNS2_13MoveDirectionENS2_12TextAffinityE(%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32, i32) unnamed_addr #2

declare void @_ZNK2ui26AXPlatformNodeDelegateBase17GetUIADescendantsEv() unnamed_addr

declare void @_ZNK2ui26AXPlatformNodeDelegateBase11GetLanguageEv(%"class.std::__1::basic_string.334"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase7IsTableEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase16GetTableColCountEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase16GetTableRowCountEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableAriaColCountEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableAriaRowCountEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase17GetTableCellCountEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare void @_ZNK2ui26AXPlatformNodeDelegateBase19GetRowHeaderNodeIdsEv(%"class.std::__1::vector.298"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare void @_ZNK2ui26AXPlatformNodeDelegateBase19GetRowHeaderNodeIdsEi(%"class.std::__1::vector.298"* sret, %"class.ui::AXPlatformNodeDelegateBase"*, i32) unnamed_addr #2

declare %"class.ui::AXPlatformNode"* @_ZNK2ui26AXPlatformNodeDelegateBase15GetTableCaptionEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase10IsTableRowEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableRowRowIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase19IsTableCellOrHeaderEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase17GetTableCellIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableCellColIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableCellRowIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableCellColSpanEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableCellRowSpanEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase24GetTableCellAriaColIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase24GetTableCellAriaRowIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i64 @_ZNK2ui26AXPlatformNodeDelegateBase13CellIndexToIdEi(%"class.ui::AXPlatformNodeDelegateBase"*, i32) unnamed_addr #2

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase25IsCellOrHeaderOfARIATableEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase24IsCellOrHeaderOfARIAGridEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i32 @_ZNK2ui26AXPlatformNodeDelegateBase8GetColorEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i32 @_ZNK2ui26AXPlatformNodeDelegateBase18GetBackgroundColorEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare i32 @_ZN2ui26AXPlatformNodeDelegateBase36GetTargetForNativeAccessibilityEventEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare void @_ZNK2ui26AXPlatformNodeDelegateBase44GetLocalizedRoleDescriptionForUnlabeledImageEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare void @_ZNK2ui26AXPlatformNodeDelegateBase42GetLocalizedStringForImageAnnotationStatusEN2ax5mojom21ImageAnnotationStatusE(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*, i32) unnamed_addr #2

declare void @_ZNK2ui26AXPlatformNodeDelegateBase33GetLocalizedStringForLandmarkTypeEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare void @_ZNK2ui26AXPlatformNodeDelegateBase36GetLocalizedStringForRoleDescriptionEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare void @_ZNK2ui26AXPlatformNodeDelegateBase38GetStyleNameAttributeAsLocalizedStringEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2

declare void @_ZN2ui26AXPlatformNodeDelegateBase21SubtreeToStringHelperEm(%"class.std::__1::basic_string.334"* sret, %"class.ui::AXPlatformNodeDelegateBase"*, i64) unnamed_addr #2

declare %"class.views::Widget"* @_ZN5views6Widget24GetWidgetForNativeWindowEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5views12_GLOBAL__N_110FlushQueueEv() #0 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0)) #10
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 1, i64 0), i8 0, i64 24, i1 false) #10
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE to i8*)) #10
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %"class.std::__1::vector.468"*
  %11 = getelementptr inbounds %"class.std::__1::vector.468", %"class.std::__1::vector.468"* %10, i64 0, i32 0, i32 0
  %12 = load %"struct.views::(anonymous namespace)::QueuedEvent"*, %"struct.views::(anonymous namespace)::QueuedEvent"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.468", %"class.std::__1::vector.468"* %10, i64 0, i32 0, i32 1
  %14 = load %"struct.views::(anonymous namespace)::QueuedEvent"*, %"struct.views::(anonymous namespace)::QueuedEvent"** %13, align 8
  %15 = icmp eq %"struct.views::(anonymous namespace)::QueuedEvent"* %12, %14
  br i1 %15, label %16, label %31

16:                                               ; preds = %44, %8
  store i1 false, i1* @_ZN5views12_GLOBAL__N_120g_is_queueing_eventsE, align 1
  %17 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0) acquire, align 8
  %18 = icmp ugt i64 %17, 1
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0)) #10
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 1, i64 0), i8 0, i64 24, i1 false) #10
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE to i8*)) #10
  br label %24

22:                                               ; preds = %19
  %23 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 0) acquire, align 8
  br label %24

24:                                               ; preds = %16, %21, %22
  %25 = phi i64 [ %17, %16 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5views12_GLOBAL__N_113g_event_queueE, i64 0, i32 1, i64 0) to i64), %21 ], [ %23, %22 ]
  %26 = inttoptr i64 %25 to %"class.std::__1::vector.468"*
  %27 = inttoptr i64 %25 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector.468", %"class.std::__1::vector.468"* %26, i64 0, i32 0, i32 1
  %30 = bitcast %"struct.views::(anonymous namespace)::QueuedEvent"** %29 to i64*
  store i64 %28, i64* %30, align 8
  ret void

31:                                               ; preds = %8, %44
  %32 = phi %"struct.views::(anonymous namespace)::QueuedEvent"* [ %45, %44 ], [ %12, %8 ]
  %33 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %32, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui18AXPlatformNodeBase15GetFromUniqueIdEi(i32 %36) #10
  %38 = icmp eq %"class.ui::AXPlatformNode"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %31
  %40 = bitcast %"class.ui::AXPlatformNode"* %37 to void (%"class.ui::AXPlatformNode"*, i32)***
  %41 = load void (%"class.ui::AXPlatformNode"*, i32)**, void (%"class.ui::AXPlatformNode"*, i32)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.ui::AXPlatformNode"*, i32)*, void (%"class.ui::AXPlatformNode"*, i32)** %41, i64 2
  %43 = load void (%"class.ui::AXPlatformNode"*, i32)*, void (%"class.ui::AXPlatformNode"*, i32)** %42, align 8
  tail call void %43(%"class.ui::AXPlatformNode"* nonnull %37, i32 %34) #10
  br label %44

44:                                               ; preds = %31, %39
  %45 = getelementptr inbounds %"struct.views::(anonymous namespace)::QueuedEvent", %"struct.views::(anonymous namespace)::QueuedEvent"* %32, i64 1
  %46 = icmp eq %"struct.views::(anonymous namespace)::QueuedEvent"* %45, %14
  br i1 %46, label %16, label %31
}

declare dereferenceable(8) %class.scoped_refptr.524* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #2

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvvEJEEES3_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void ()**
  %4 = load void ()*, void ()** %3, align 8
  tail call void %4() #10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvvEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

declare %"class.ui::AXPlatformNode"* @_ZN2ui18AXPlatformNodeBase15GetFromUniqueIdEi(i32) local_unnamed_addr #2

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN5views6WidgetENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"*, %"class.views::Widget"**, %"class.views::Widget"**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.views::Widget"** %2 to i64
  %5 = ptrtoint %"class.views::Widget"** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.views::Widget"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.views::Widget"**
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.views::Widget"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %1, i64 %22
  %25 = select i1 %23, %"class.views::Widget"** %24, %"class.views::Widget"** %2
  %26 = ptrtoint %"class.views::Widget"** %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.views::Widget"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #10
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.views::Widget"** %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #10
  %42 = inttoptr i64 %35 to %"class.views::Widget"**
  %43 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %42, i64 %39
  %44 = ptrtoint %"class.views::Widget"** %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %16, i64 %28
  store %"class.views::Widget"** %48, %"class.views::Widget"*** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.views::Widget"*** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #10
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #11
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #11
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to %"class.views::Widget"**
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.views::Widget"*** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %75, i64 %72
  store %"class.views::Widget"** %79, %"class.views::Widget"*** %8, align 8
  %80 = bitcast %"class.views::Widget"*** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"class.views::Widget"** %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #10
  %86 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %75, i64 %84
  %87 = ptrtoint %"class.views::Widget"** %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.ui::AXPlatformNode"* @_ZN4base8internal7InvokerINS0_9BindStateIPFPN2ui14AXPlatformNodeEPN4aura6WindowEEJEEES9_E3RunEPNS0_13BindStateBaseES8_(%"class.base::internal::BindStateBase"*, %"class.aura::Window"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.ui::AXPlatformNode"* (%"class.aura::Window"*)**
  %5 = load %"class.ui::AXPlatformNode"* (%"class.aura::Window"*)*, %"class.ui::AXPlatformNode"* (%"class.aura::Window"*)** %4, align 8
  %6 = tail call %"class.ui::AXPlatformNode"* %5(%"class.aura::Window"* %1) #10
  ret %"class.ui::AXPlatformNode"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFPN2ui14AXPlatformNodeEPN4aura6WindowEEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZNK2ui10AXNodeData11IsInvisibleEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #2

declare void @_ZN5views4View20ConvertPointToTargetEPKS0_S2_PN3gfx5PointE(%"class.views::View"*, %"class.views::View"*, %"class.gfx::Point"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string"*, i64, i16*, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %4
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp ult i64 %15, %1
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %18) #11
  unreachable

19:                                               ; preds = %14
  br i1 %8, label %20, label %25

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 9223372036854775807
  %24 = add nsw i64 %23, -1
  br label %25

25:                                               ; preds = %19, %20
  %26 = phi i64 [ %24, %20 ], [ 10, %19 ]
  %27 = sub i64 %26, %15
  %28 = icmp ult i64 %27, %3
  br i1 %28, label %658, label %29

29:                                               ; preds = %25
  %30 = icmp eq i64 %3, 0
  br i1 %30, label %661, label %31

31:                                               ; preds = %29
  br i1 %8, label %32, label %35

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  br label %37

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %37

37:                                               ; preds = %32, %35
  %38 = phi i16* [ %34, %32 ], [ %36, %35 ]
  %39 = sub i64 %15, %1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %357, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds i16, i16* %38, i64 %1
  %43 = icmp ule i16* %42, %2
  %44 = getelementptr inbounds i16, i16* %38, i64 %15
  %45 = icmp ugt i16* %44, %2
  %46 = and i1 %43, %45
  %47 = getelementptr inbounds i16, i16* %2, i64 %3
  %48 = select i1 %46, i16* %47, i16* %2
  %49 = getelementptr inbounds i16, i16* %42, i64 %3
  %50 = icmp slt i64 %3, 0
  br i1 %50, label %51, label %194

51:                                               ; preds = %41
  %52 = icmp ult i64 %39, 16
  br i1 %52, label %141, label %53

53:                                               ; preds = %51
  %54 = add i64 %15, %3
  %55 = getelementptr i16, i16* %38, i64 %54
  %56 = icmp ult i16* %49, %44
  %57 = icmp ult i16* %42, %55
  %58 = and i1 %56, %57
  br i1 %58, label %141, label %59

59:                                               ; preds = %53
  %60 = and i64 %39, -16
  %61 = sub i64 %39, %60
  %62 = getelementptr i16, i16* %42, i64 %60
  %63 = getelementptr i16, i16* %49, i64 %60
  %64 = add i64 %60, -16
  %65 = lshr exact i64 %64, 4
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 48
  br i1 %68, label %120, label %69

69:                                               ; preds = %59
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr i16, i16* %42, i64 %72
  %75 = getelementptr i16, i16* %49, i64 %72
  %76 = bitcast i16* %74 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !25
  %78 = getelementptr i16, i16* %74, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !25
  %81 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %81, align 2, !alias.scope !28, !noalias !25
  %82 = getelementptr i16, i16* %75, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %83, align 2, !alias.scope !28, !noalias !25
  %84 = or i64 %72, 16
  %85 = getelementptr i16, i16* %42, i64 %84
  %86 = getelementptr i16, i16* %49, i64 %84
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !25
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !25
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !28, !noalias !25
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !28, !noalias !25
  %95 = or i64 %72, 32
  %96 = getelementptr i16, i16* %42, i64 %95
  %97 = getelementptr i16, i16* %49, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !25
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !25
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !28, !noalias !25
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !28, !noalias !25
  %106 = or i64 %72, 48
  %107 = getelementptr i16, i16* %42, i64 %106
  %108 = getelementptr i16, i16* %49, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !25
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !25
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !28, !noalias !25
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !28, !noalias !25
  %117 = add i64 %72, 64
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !30

120:                                              ; preds = %71, %59
  %121 = phi i64 [ 0, %59 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr i16, i16* %42, i64 %124
  %127 = getelementptr i16, i16* %49, i64 %124
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !25
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !25
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !28, !noalias !25
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !28, !noalias !25
  %136 = add i64 %124, 16
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !32

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %60
  br i1 %140, label %357, label %141

141:                                              ; preds = %139, %53, %51
  %142 = phi i64 [ %39, %53 ], [ %39, %51 ], [ %61, %139 ]
  %143 = phi i16* [ %42, %53 ], [ %42, %51 ], [ %62, %139 ]
  %144 = phi i16* [ %49, %53 ], [ %49, %51 ], [ %63, %139 ]
  %145 = add i64 %142, -1
  %146 = and i64 %142, 7
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %141, %148
  %149 = phi i64 [ %154, %148 ], [ %142, %141 ]
  %150 = phi i16* [ %156, %148 ], [ %143, %141 ]
  %151 = phi i16* [ %155, %148 ], [ %144, %141 ]
  %152 = phi i64 [ %157, %148 ], [ %146, %141 ]
  %153 = load i16, i16* %150, align 2
  store i16 %153, i16* %151, align 2
  %154 = add i64 %149, -1
  %155 = getelementptr inbounds i16, i16* %151, i64 1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = add i64 %152, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %148, !llvm.loop !34

159:                                              ; preds = %148, %141
  %160 = phi i64 [ %142, %141 ], [ %154, %148 ]
  %161 = phi i16* [ %143, %141 ], [ %156, %148 ]
  %162 = phi i16* [ %144, %141 ], [ %155, %148 ]
  %163 = icmp ult i64 %145, 7
  br i1 %163, label %357, label %164

164:                                              ; preds = %159, %164
  %165 = phi i64 [ %190, %164 ], [ %160, %159 ]
  %166 = phi i16* [ %192, %164 ], [ %161, %159 ]
  %167 = phi i16* [ %191, %164 ], [ %162, %159 ]
  %168 = load i16, i16* %166, align 2
  store i16 %168, i16* %167, align 2
  %169 = getelementptr inbounds i16, i16* %167, i64 1
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %167, i64 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %167, i64 3
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %167, i64 4
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %167, i64 5
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %167, i64 6
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %167, i64 7
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %165, -8
  %191 = getelementptr inbounds i16, i16* %167, i64 8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = icmp eq i64 %190, 0
  br i1 %193, label %357, label %164, !llvm.loop !35

194:                                              ; preds = %41
  %195 = getelementptr inbounds i16, i16* %49, i64 %39
  %196 = icmp ult i64 %39, 16
  br i1 %196, label %304, label %197

197:                                              ; preds = %194
  %198 = xor i64 %1, -1
  %199 = add i64 %15, %198
  %200 = add i64 %15, %3
  %201 = add i64 %200, -1
  %202 = getelementptr i16, i16* %38, i64 %201
  %203 = ptrtoint i16* %202 to i64
  %204 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %205 = extractvalue { i64, i1 } %204, 0
  %206 = extractvalue { i64, i1 } %204, 1
  %207 = icmp ugt i64 %205, %203
  %208 = or i1 %207, %206
  %209 = add i64 %15, -1
  %210 = getelementptr i16, i16* %38, i64 %209
  %211 = ptrtoint i16* %210 to i64
  %212 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %213 = extractvalue { i64, i1 } %212, 0
  %214 = extractvalue { i64, i1 } %212, 1
  %215 = icmp ugt i64 %213, %211
  %216 = or i1 %215, %214
  %217 = or i1 %208, %216
  br i1 %217, label %304, label %218

218:                                              ; preds = %197
  %219 = add i64 %3, %1
  %220 = getelementptr i16, i16* %38, i64 %219
  %221 = icmp ult i16* %220, %44
  %222 = icmp ult i16* %42, %195
  %223 = and i1 %221, %222
  br i1 %223, label %304, label %224

224:                                              ; preds = %218
  %225 = and i64 %39, -16
  %226 = sub i64 %39, %225
  %227 = sub i64 0, %225
  %228 = getelementptr i16, i16* %44, i64 %227
  %229 = sub i64 0, %225
  %230 = getelementptr i16, i16* %195, i64 %229
  %231 = add i64 %225, -16
  %232 = lshr exact i64 %231, 4
  %233 = add nuw nsw i64 %232, 1
  %234 = and i64 %233, 1
  %235 = icmp eq i64 %231, 0
  br i1 %235, label %280, label %236

236:                                              ; preds = %224
  %237 = sub nuw nsw i64 %233, %234
  %238 = getelementptr i16, i16* %44, i64 -1
  %239 = getelementptr i16, i16* %195, i64 -1
  %240 = getelementptr i16, i16* %44, i64 -1
  %241 = getelementptr i16, i16* %195, i64 -1
  br label %242

242:                                              ; preds = %242, %236
  %243 = phi i64 [ 0, %236 ], [ %277, %242 ]
  %244 = phi i64 [ %237, %236 ], [ %278, %242 ]
  %245 = sub i64 0, %243
  %246 = sub i64 0, %243
  %247 = getelementptr inbounds i16, i16* %239, i64 %246
  %248 = getelementptr inbounds i16, i16* %238, i64 %245
  %249 = getelementptr inbounds i16, i16* %248, i64 -7
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !36
  %252 = getelementptr inbounds i16, i16* %248, i64 -8
  %253 = getelementptr inbounds i16, i16* %252, i64 -7
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !36
  %256 = getelementptr inbounds i16, i16* %247, i64 -7
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %257, align 2, !alias.scope !39, !noalias !36
  %258 = getelementptr inbounds i16, i16* %247, i64 -8
  %259 = getelementptr inbounds i16, i16* %258, i64 -7
  %260 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %260, align 2, !alias.scope !39, !noalias !36
  %261 = sub nuw nsw i64 -16, %243
  %262 = sub nuw nsw i64 -16, %243
  %263 = getelementptr inbounds i16, i16* %241, i64 %262
  %264 = getelementptr inbounds i16, i16* %240, i64 %261
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !36
  %268 = getelementptr inbounds i16, i16* %264, i64 -8
  %269 = getelementptr inbounds i16, i16* %268, i64 -7
  %270 = bitcast i16* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !36
  %272 = getelementptr inbounds i16, i16* %263, i64 -7
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %273, align 2, !alias.scope !39, !noalias !36
  %274 = getelementptr inbounds i16, i16* %263, i64 -8
  %275 = getelementptr inbounds i16, i16* %274, i64 -7
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %276, align 2, !alias.scope !39, !noalias !36
  %277 = add i64 %243, 32
  %278 = add i64 %244, -2
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %242, !llvm.loop !41

280:                                              ; preds = %242, %224
  %281 = phi i64 [ 0, %224 ], [ %277, %242 ]
  %282 = icmp eq i64 %234, 0
  br i1 %282, label %302, label %283

283:                                              ; preds = %280
  %284 = sub i64 0, %281
  %285 = getelementptr i16, i16* %44, i64 -1
  %286 = sub i64 0, %281
  %287 = getelementptr i16, i16* %195, i64 -1
  %288 = getelementptr inbounds i16, i16* %287, i64 %286
  %289 = getelementptr inbounds i16, i16* %285, i64 %284
  %290 = getelementptr inbounds i16, i16* %289, i64 -7
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !36
  %293 = getelementptr inbounds i16, i16* %289, i64 -8
  %294 = getelementptr inbounds i16, i16* %293, i64 -7
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !36
  %297 = getelementptr inbounds i16, i16* %288, i64 -7
  %298 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %298, align 2, !alias.scope !39, !noalias !36
  %299 = getelementptr inbounds i16, i16* %288, i64 -8
  %300 = getelementptr inbounds i16, i16* %299, i64 -7
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %301, align 2, !alias.scope !39, !noalias !36
  br label %302

302:                                              ; preds = %280, %283
  %303 = icmp eq i64 %39, %225
  br i1 %303, label %357, label %304

304:                                              ; preds = %302, %218, %197, %194
  %305 = phi i64 [ %39, %218 ], [ %39, %197 ], [ %39, %194 ], [ %226, %302 ]
  %306 = phi i16* [ %44, %218 ], [ %44, %197 ], [ %44, %194 ], [ %228, %302 ]
  %307 = phi i16* [ %195, %218 ], [ %195, %197 ], [ %195, %194 ], [ %230, %302 ]
  %308 = add i64 %305, -1
  %309 = and i64 %305, 7
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %322, label %311

311:                                              ; preds = %304, %311
  %312 = phi i64 [ %319, %311 ], [ %305, %304 ]
  %313 = phi i16* [ %317, %311 ], [ %306, %304 ]
  %314 = phi i16* [ %316, %311 ], [ %307, %304 ]
  %315 = phi i64 [ %320, %311 ], [ %309, %304 ]
  %316 = getelementptr inbounds i16, i16* %314, i64 -1
  %317 = getelementptr inbounds i16, i16* %313, i64 -1
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = add i64 %312, -1
  %320 = add i64 %315, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %311, !llvm.loop !42

322:                                              ; preds = %311, %304
  %323 = phi i64 [ %305, %304 ], [ %319, %311 ]
  %324 = phi i16* [ %306, %304 ], [ %317, %311 ]
  %325 = phi i16* [ %307, %304 ], [ %316, %311 ]
  %326 = icmp ult i64 %308, 7
  br i1 %326, label %357, label %327

327:                                              ; preds = %322, %327
  %328 = phi i64 [ %355, %327 ], [ %323, %322 ]
  %329 = phi i16* [ %353, %327 ], [ %324, %322 ]
  %330 = phi i16* [ %352, %327 ], [ %325, %322 ]
  %331 = getelementptr inbounds i16, i16* %330, i64 -1
  %332 = getelementptr inbounds i16, i16* %329, i64 -1
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %330, i64 -2
  %335 = getelementptr inbounds i16, i16* %329, i64 -2
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %330, i64 -3
  %338 = getelementptr inbounds i16, i16* %329, i64 -3
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %330, i64 -4
  %341 = getelementptr inbounds i16, i16* %329, i64 -4
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = getelementptr inbounds i16, i16* %330, i64 -5
  %344 = getelementptr inbounds i16, i16* %329, i64 -5
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %343, align 2
  %346 = getelementptr inbounds i16, i16* %330, i64 -6
  %347 = getelementptr inbounds i16, i16* %329, i64 -6
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %346, align 2
  %349 = getelementptr inbounds i16, i16* %330, i64 -7
  %350 = getelementptr inbounds i16, i16* %329, i64 -7
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %349, align 2
  %352 = getelementptr inbounds i16, i16* %330, i64 -8
  %353 = getelementptr inbounds i16, i16* %329, i64 -8
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = add i64 %328, -8
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %327, !llvm.loop !43

357:                                              ; preds = %322, %327, %159, %164, %302, %139, %37
  %358 = phi i16* [ %2, %37 ], [ %48, %139 ], [ %48, %302 ], [ %48, %164 ], [ %48, %159 ], [ %48, %327 ], [ %48, %322 ]
  %359 = getelementptr inbounds i16, i16* %38, i64 %1
  %360 = icmp ult i16* %359, %358
  br i1 %360, label %361, label %505

361:                                              ; preds = %357
  %362 = icmp ult i64 %3, 16
  br i1 %362, label %452, label %363

363:                                              ; preds = %361
  %364 = add i64 %3, %1
  %365 = getelementptr i16, i16* %38, i64 %364
  %366 = getelementptr i16, i16* %358, i64 %3
  %367 = icmp ult i16* %359, %366
  %368 = icmp ult i16* %358, %365
  %369 = and i1 %367, %368
  br i1 %369, label %452, label %370

370:                                              ; preds = %363
  %371 = and i64 %3, -16
  %372 = sub i64 %3, %371
  %373 = getelementptr i16, i16* %358, i64 %371
  %374 = getelementptr i16, i16* %359, i64 %371
  %375 = add i64 %371, -16
  %376 = lshr exact i64 %375, 4
  %377 = add nuw nsw i64 %376, 1
  %378 = and i64 %377, 3
  %379 = icmp ult i64 %375, 48
  br i1 %379, label %431, label %380

380:                                              ; preds = %370
  %381 = sub nsw i64 %377, %378
  br label %382

382:                                              ; preds = %382, %380
  %383 = phi i64 [ 0, %380 ], [ %428, %382 ]
  %384 = phi i64 [ %381, %380 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %358, i64 %383
  %386 = getelementptr i16, i16* %359, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !44
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !44
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !47, !noalias !44
  %393 = getelementptr i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !47, !noalias !44
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %358, i64 %395
  %397 = getelementptr i16, i16* %359, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !44
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !44
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !47, !noalias !44
  %404 = getelementptr i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !47, !noalias !44
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %358, i64 %406
  %408 = getelementptr i16, i16* %359, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !44
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !44
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !47, !noalias !44
  %415 = getelementptr i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !47, !noalias !44
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %358, i64 %417
  %419 = getelementptr i16, i16* %359, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !44
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !44
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !47, !noalias !44
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !47, !noalias !44
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !49

431:                                              ; preds = %382, %370
  %432 = phi i64 [ 0, %370 ], [ %428, %382 ]
  %433 = icmp eq i64 %378, 0
  br i1 %433, label %450, label %434

434:                                              ; preds = %431, %434
  %435 = phi i64 [ %447, %434 ], [ %432, %431 ]
  %436 = phi i64 [ %448, %434 ], [ %378, %431 ]
  %437 = getelementptr i16, i16* %358, i64 %435
  %438 = getelementptr i16, i16* %359, i64 %435
  %439 = bitcast i16* %437 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !44
  %441 = getelementptr i16, i16* %437, i64 8
  %442 = bitcast i16* %441 to <8 x i16>*
  %443 = load <8 x i16>, <8 x i16>* %442, align 2, !alias.scope !44
  %444 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %444, align 2, !alias.scope !47, !noalias !44
  %445 = getelementptr i16, i16* %438, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %443, <8 x i16>* %446, align 2, !alias.scope !47, !noalias !44
  %447 = add i64 %435, 16
  %448 = add i64 %436, -1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %434, !llvm.loop !50

450:                                              ; preds = %434, %431
  %451 = icmp eq i64 %371, %3
  br i1 %451, label %648, label %452

452:                                              ; preds = %450, %363, %361
  %453 = phi i64 [ %3, %363 ], [ %3, %361 ], [ %372, %450 ]
  %454 = phi i16* [ %358, %363 ], [ %358, %361 ], [ %373, %450 ]
  %455 = phi i16* [ %359, %363 ], [ %359, %361 ], [ %374, %450 ]
  %456 = add i64 %453, -1
  %457 = and i64 %453, 7
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %470, label %459

459:                                              ; preds = %452, %459
  %460 = phi i64 [ %465, %459 ], [ %453, %452 ]
  %461 = phi i16* [ %467, %459 ], [ %454, %452 ]
  %462 = phi i16* [ %466, %459 ], [ %455, %452 ]
  %463 = phi i64 [ %468, %459 ], [ %457, %452 ]
  %464 = load i16, i16* %461, align 2
  store i16 %464, i16* %462, align 2
  %465 = add i64 %460, -1
  %466 = getelementptr inbounds i16, i16* %462, i64 1
  %467 = getelementptr inbounds i16, i16* %461, i64 1
  %468 = add i64 %463, -1
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %459, !llvm.loop !51

470:                                              ; preds = %459, %452
  %471 = phi i64 [ %453, %452 ], [ %465, %459 ]
  %472 = phi i16* [ %454, %452 ], [ %467, %459 ]
  %473 = phi i16* [ %455, %452 ], [ %466, %459 ]
  %474 = icmp ult i64 %456, 7
  br i1 %474, label %648, label %475

475:                                              ; preds = %470, %475
  %476 = phi i64 [ %501, %475 ], [ %471, %470 ]
  %477 = phi i16* [ %503, %475 ], [ %472, %470 ]
  %478 = phi i16* [ %502, %475 ], [ %473, %470 ]
  %479 = load i16, i16* %477, align 2
  store i16 %479, i16* %478, align 2
  %480 = getelementptr inbounds i16, i16* %478, i64 1
  %481 = getelementptr inbounds i16, i16* %477, i64 1
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 2
  %484 = getelementptr inbounds i16, i16* %477, i64 2
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 3
  %487 = getelementptr inbounds i16, i16* %477, i64 3
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 4
  %490 = getelementptr inbounds i16, i16* %477, i64 4
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 5
  %493 = getelementptr inbounds i16, i16* %477, i64 5
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 6
  %496 = getelementptr inbounds i16, i16* %477, i64 6
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 7
  %499 = getelementptr inbounds i16, i16* %477, i64 7
  %500 = load i16, i16* %499, align 2
  store i16 %500, i16* %498, align 2
  %501 = add i64 %476, -8
  %502 = getelementptr inbounds i16, i16* %478, i64 8
  %503 = getelementptr inbounds i16, i16* %477, i64 8
  %504 = icmp eq i64 %501, 0
  br i1 %504, label %648, label %475, !llvm.loop !52

505:                                              ; preds = %357
  %506 = icmp ult i16* %358, %359
  br i1 %506, label %507, label %648

507:                                              ; preds = %505
  %508 = getelementptr inbounds i16, i16* %358, i64 %3
  %509 = getelementptr inbounds i16, i16* %359, i64 %3
  %510 = icmp ult i64 %3, 16
  br i1 %510, label %595, label %511

511:                                              ; preds = %507
  %512 = icmp ult i16* %359, %508
  %513 = icmp ult i16* %358, %509
  %514 = and i1 %512, %513
  br i1 %514, label %595, label %515

515:                                              ; preds = %511
  %516 = and i64 %3, -16
  %517 = sub i64 %3, %516
  %518 = sub i64 0, %516
  %519 = getelementptr i16, i16* %508, i64 %518
  %520 = sub i64 0, %516
  %521 = getelementptr i16, i16* %509, i64 %520
  %522 = add i64 %516, -16
  %523 = lshr exact i64 %522, 4
  %524 = add nuw nsw i64 %523, 1
  %525 = and i64 %524, 1
  %526 = icmp eq i64 %522, 0
  br i1 %526, label %573, label %527

527:                                              ; preds = %515
  %528 = sub nuw nsw i64 %524, %525
  %529 = getelementptr i16, i16* %508, i64 -1
  %530 = getelementptr i16, i16* %509, i64 -1
  %531 = getelementptr i16, i16* %508, i64 -1
  %532 = getelementptr i16, i16* %509, i64 -1
  br label %533

533:                                              ; preds = %533, %527
  %534 = phi i64 [ 0, %527 ], [ %568, %533 ]
  %535 = phi i64 [ %528, %527 ], [ %569, %533 ]
  %536 = sub i64 0, %534
  %537 = sub i64 0, %534
  %538 = getelementptr inbounds i16, i16* %530, i64 %537
  %539 = getelementptr inbounds i16, i16* %529, i64 %536
  %540 = getelementptr inbounds i16, i16* %539, i64 -7
  %541 = bitcast i16* %540 to <8 x i16>*
  %542 = load <8 x i16>, <8 x i16>* %541, align 2, !alias.scope !53
  %543 = getelementptr inbounds i16, i16* %539, i64 -8
  %544 = getelementptr inbounds i16, i16* %543, i64 -7
  %545 = bitcast i16* %544 to <8 x i16>*
  %546 = load <8 x i16>, <8 x i16>* %545, align 2, !alias.scope !53
  %547 = getelementptr inbounds i16, i16* %538, i64 -7
  %548 = bitcast i16* %547 to <8 x i16>*
  store <8 x i16> %542, <8 x i16>* %548, align 2, !alias.scope !56, !noalias !53
  %549 = getelementptr inbounds i16, i16* %538, i64 -8
  %550 = getelementptr inbounds i16, i16* %549, i64 -7
  %551 = bitcast i16* %550 to <8 x i16>*
  store <8 x i16> %546, <8 x i16>* %551, align 2, !alias.scope !56, !noalias !53
  %552 = sub nuw nsw i64 -16, %534
  %553 = sub nuw nsw i64 -16, %534
  %554 = getelementptr inbounds i16, i16* %532, i64 %553
  %555 = getelementptr inbounds i16, i16* %531, i64 %552
  %556 = getelementptr inbounds i16, i16* %555, i64 -7
  %557 = bitcast i16* %556 to <8 x i16>*
  %558 = load <8 x i16>, <8 x i16>* %557, align 2, !alias.scope !53
  %559 = getelementptr inbounds i16, i16* %555, i64 -8
  %560 = getelementptr inbounds i16, i16* %559, i64 -7
  %561 = bitcast i16* %560 to <8 x i16>*
  %562 = load <8 x i16>, <8 x i16>* %561, align 2, !alias.scope !53
  %563 = getelementptr inbounds i16, i16* %554, i64 -7
  %564 = bitcast i16* %563 to <8 x i16>*
  store <8 x i16> %558, <8 x i16>* %564, align 2, !alias.scope !56, !noalias !53
  %565 = getelementptr inbounds i16, i16* %554, i64 -8
  %566 = getelementptr inbounds i16, i16* %565, i64 -7
  %567 = bitcast i16* %566 to <8 x i16>*
  store <8 x i16> %562, <8 x i16>* %567, align 2, !alias.scope !56, !noalias !53
  %568 = add i64 %534, 32
  %569 = add i64 %535, -2
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %571, label %533, !llvm.loop !58

571:                                              ; preds = %533
  %572 = sub nuw nsw i64 -32, %534
  br label %573

573:                                              ; preds = %571, %515
  %574 = phi i64 [ 0, %515 ], [ %572, %571 ]
  %575 = icmp eq i64 %525, 0
  br i1 %575, label %593, label %576

576:                                              ; preds = %573
  %577 = getelementptr i16, i16* %508, i64 -1
  %578 = getelementptr i16, i16* %509, i64 -1
  %579 = getelementptr inbounds i16, i16* %578, i64 %574
  %580 = getelementptr inbounds i16, i16* %577, i64 %574
  %581 = getelementptr inbounds i16, i16* %580, i64 -7
  %582 = bitcast i16* %581 to <8 x i16>*
  %583 = load <8 x i16>, <8 x i16>* %582, align 2, !alias.scope !53
  %584 = getelementptr inbounds i16, i16* %580, i64 -8
  %585 = getelementptr inbounds i16, i16* %584, i64 -7
  %586 = bitcast i16* %585 to <8 x i16>*
  %587 = load <8 x i16>, <8 x i16>* %586, align 2, !alias.scope !53
  %588 = getelementptr inbounds i16, i16* %579, i64 -7
  %589 = bitcast i16* %588 to <8 x i16>*
  store <8 x i16> %583, <8 x i16>* %589, align 2, !alias.scope !56, !noalias !53
  %590 = getelementptr inbounds i16, i16* %579, i64 -8
  %591 = getelementptr inbounds i16, i16* %590, i64 -7
  %592 = bitcast i16* %591 to <8 x i16>*
  store <8 x i16> %587, <8 x i16>* %592, align 2, !alias.scope !56, !noalias !53
  br label %593

593:                                              ; preds = %573, %576
  %594 = icmp eq i64 %516, %3
  br i1 %594, label %648, label %595

595:                                              ; preds = %593, %511, %507
  %596 = phi i64 [ %3, %511 ], [ %3, %507 ], [ %517, %593 ]
  %597 = phi i16* [ %508, %511 ], [ %508, %507 ], [ %519, %593 ]
  %598 = phi i16* [ %509, %511 ], [ %509, %507 ], [ %521, %593 ]
  %599 = add i64 %596, -1
  %600 = and i64 %596, 7
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %613, label %602

602:                                              ; preds = %595, %602
  %603 = phi i64 [ %610, %602 ], [ %596, %595 ]
  %604 = phi i16* [ %608, %602 ], [ %597, %595 ]
  %605 = phi i16* [ %607, %602 ], [ %598, %595 ]
  %606 = phi i64 [ %611, %602 ], [ %600, %595 ]
  %607 = getelementptr inbounds i16, i16* %605, i64 -1
  %608 = getelementptr inbounds i16, i16* %604, i64 -1
  %609 = load i16, i16* %608, align 2
  store i16 %609, i16* %607, align 2
  %610 = add i64 %603, -1
  %611 = add i64 %606, -1
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %613, label %602, !llvm.loop !59

613:                                              ; preds = %602, %595
  %614 = phi i64 [ %596, %595 ], [ %610, %602 ]
  %615 = phi i16* [ %597, %595 ], [ %608, %602 ]
  %616 = phi i16* [ %598, %595 ], [ %607, %602 ]
  %617 = icmp ult i64 %599, 7
  br i1 %617, label %648, label %618

618:                                              ; preds = %613, %618
  %619 = phi i64 [ %646, %618 ], [ %614, %613 ]
  %620 = phi i16* [ %644, %618 ], [ %615, %613 ]
  %621 = phi i16* [ %643, %618 ], [ %616, %613 ]
  %622 = getelementptr inbounds i16, i16* %621, i64 -1
  %623 = getelementptr inbounds i16, i16* %620, i64 -1
  %624 = load i16, i16* %623, align 2
  store i16 %624, i16* %622, align 2
  %625 = getelementptr inbounds i16, i16* %621, i64 -2
  %626 = getelementptr inbounds i16, i16* %620, i64 -2
  %627 = load i16, i16* %626, align 2
  store i16 %627, i16* %625, align 2
  %628 = getelementptr inbounds i16, i16* %621, i64 -3
  %629 = getelementptr inbounds i16, i16* %620, i64 -3
  %630 = load i16, i16* %629, align 2
  store i16 %630, i16* %628, align 2
  %631 = getelementptr inbounds i16, i16* %621, i64 -4
  %632 = getelementptr inbounds i16, i16* %620, i64 -4
  %633 = load i16, i16* %632, align 2
  store i16 %633, i16* %631, align 2
  %634 = getelementptr inbounds i16, i16* %621, i64 -5
  %635 = getelementptr inbounds i16, i16* %620, i64 -5
  %636 = load i16, i16* %635, align 2
  store i16 %636, i16* %634, align 2
  %637 = getelementptr inbounds i16, i16* %621, i64 -6
  %638 = getelementptr inbounds i16, i16* %620, i64 -6
  %639 = load i16, i16* %638, align 2
  store i16 %639, i16* %637, align 2
  %640 = getelementptr inbounds i16, i16* %621, i64 -7
  %641 = getelementptr inbounds i16, i16* %620, i64 -7
  %642 = load i16, i16* %641, align 2
  store i16 %642, i16* %640, align 2
  %643 = getelementptr inbounds i16, i16* %621, i64 -8
  %644 = getelementptr inbounds i16, i16* %620, i64 -8
  %645 = load i16, i16* %644, align 2
  store i16 %645, i16* %643, align 2
  %646 = add i64 %619, -8
  %647 = icmp eq i64 %646, 0
  br i1 %647, label %648, label %618, !llvm.loop !60

648:                                              ; preds = %613, %618, %470, %475, %593, %450, %505
  %649 = add i64 %15, %3
  %650 = load i8, i8* %6, align 1
  %651 = icmp slt i8 %650, 0
  br i1 %651, label %652, label %654

652:                                              ; preds = %648
  %653 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %649, i64* %653, align 8
  br label %656

654:                                              ; preds = %648
  %655 = trunc i64 %649 to i8
  store i8 %655, i8* %6, align 1
  br label %656

656:                                              ; preds = %652, %654
  %657 = getelementptr inbounds i16, i16* %38, i64 %649
  store i16 0, i16* %657, align 2
  br label %661

658:                                              ; preds = %25
  %659 = add i64 %15, %3
  %660 = sub i64 %659, %26
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %26, i64 %660, i64 %15, i64 %1, i64 0, i64 %3, i16* %2)
  br label %661

661:                                              ; preds = %29, %656, %658
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #11
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #11
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !61
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !61
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !64, !noalias !61
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !64, !noalias !61
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !61
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !61
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !64, !noalias !61
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !64, !noalias !61
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !61
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !61
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !64, !noalias !61
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !64, !noalias !61
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !61
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !61
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !64, !noalias !61
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !64, !noalias !61
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !66

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !61
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !61
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !64, !noalias !61
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !64, !noalias !61
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !67

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !68

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !69

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !70

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !71

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !72

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !74
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !74
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !77, !noalias !74
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !77, !noalias !74
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !74
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !74
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !77, !noalias !74
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !77, !noalias !74
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !74
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !74
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !77, !noalias !74
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !77, !noalias !74
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !74
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !74
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !77, !noalias !74
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !77, !noalias !74
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !79

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !74
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !74
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !77, !noalias !74
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !77, !noalias !74
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !80

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !81

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !82

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN5views6WidgetENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.511"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPN5views6WidgetENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.511"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPN5views6WidgetENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.511"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIPN5views6WidgetENS_9allocatorIS4_EEEEEaSERKS4_(%"class.std::__1::back_insert_iterator"*, %"class.views::Widget"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %6 = load %"class.views::Widget"**, %"class.views::Widget"*** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.views::Widget"**, %"class.views::Widget"*** %7, align 8
  %9 = icmp eq %"class.views::Widget"** %6, %8
  %10 = ptrtoint %"class.views::Widget"** %8 to i64
  br i1 %9, label %18, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.views::Widget"** %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.views::Widget"** %6 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %6, i64 1
  %16 = ptrtoint %"class.views::Widget"** %15 to i64
  %17 = bitcast %"class.views::Widget"*** %5 to i64*
  store i64 %16, i64* %17, align 8
  br label %77

18:                                               ; preds = %2
  %19 = ptrtoint %"class.views::Widget"** %6 to i64
  %20 = bitcast %"class.views::Widget"*** %5 to i64*
  %21 = bitcast %"class.std::__1::vector"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #11
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"class.views::Widget"*** %7 to i64*
  %31 = sub i64 %10, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 1152921504606846975
  br i1 %33, label %34, label %42

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = icmp ugt i64 %37, 2305843009213693951
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @abort() #11
  unreachable

42:                                               ; preds = %39, %29
  %43 = phi i64 [ %37, %39 ], [ 2305843009213693951, %29 ]
  %44 = shl i64 %43, 3
  %45 = tail call i8* @_Znwm(i64 %44) #12
  %46 = bitcast i8* %45 to %"class.views::Widget"**
  br label %47

47:                                               ; preds = %42, %34
  %48 = phi i64 [ %43, %42 ], [ 0, %34 ]
  %49 = phi %"class.views::Widget"** [ %46, %42 ], [ null, %34 ]
  %50 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %49, i64 %24
  %51 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %49, i64 %48
  %52 = ptrtoint %"class.views::Widget"** %51 to i64
  %53 = bitcast %"class.views::Widget"** %1 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.views::Widget"** %50 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %50, i64 1
  %57 = ptrtoint %"class.views::Widget"** %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %59 = load %"class.views::Widget"**, %"class.views::Widget"*** %58, align 8
  %60 = load i64, i64* %20, align 8
  %61 = ptrtoint %"class.views::Widget"** %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 3
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds %"class.views::Widget"*, %"class.views::Widget"** %50, i64 %64
  %66 = ptrtoint %"class.views::Widget"** %65 to i64
  %67 = icmp sgt i64 %62, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %47
  %69 = bitcast %"class.views::Widget"** %65 to i8*
  %70 = bitcast %"class.views::Widget"** %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 %62, i1 false) #10
  %71 = load %"class.views::Widget"**, %"class.views::Widget"*** %58, align 8
  br label %72

72:                                               ; preds = %68, %47
  %73 = phi %"class.views::Widget"** [ %59, %47 ], [ %71, %68 ]
  store i64 %66, i64* %21, align 8
  store i64 %57, i64* %20, align 8
  store i64 %52, i64* %30, align 8
  %74 = icmp eq %"class.views::Widget"** %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.views::Widget"** %73 to i8*
  tail call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %11, %72, %75
  ret %"class.std::__1::back_insert_iterator"* %0
}

declare zeroext i1 @_ZN5views22ViewAccessibilityUtils20IsFocusedChildWidgetEPNS_6WidgetEPKNS_4ViewE(%"class.views::Widget"*, %"class.views::View"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFPN2ui14AXPlatformNodeEPN4aura6WindowEEJEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFPN2ui14AXPlatformNodeEPN4aura6WindowEEJEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base13BindRepeatingIPFPN2ui14AXPlatformNodeEPN4aura6WindowEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!7 = distinct !{!7, !"_ZN4base13BindRepeatingIPFPN2ui14AXPlatformNodeEPN4aura6WindowEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvvEJEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvvEJEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIPFvvEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS6_DpOS7_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIPFvvEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS6_DpOS7_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5views26ViewAXPlatformNodeDelegate17GetAuthorUniqueIdEv: argument 0"}
!18 = distinct !{!18, !"_ZNK5views26ViewAXPlatformNodeDelegate17GetAuthorUniqueIdEv"}
!19 = !{!20, !17}
!20 = distinct !{!20, !21, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK5views26ViewAXPlatformNodeDelegate19GetColHeaderNodeIdsEi: argument 0"}
!24 = distinct !{!24, !"_ZNK5views26ViewAXPlatformNodeDelegate19GetColHeaderNodeIdsEi"}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.isvectorized", i32 1}
!32 = distinct !{!32, !33}
!33 = !{!"llvm.loop.unroll.disable"}
!34 = distinct !{!34, !33}
!35 = distinct !{!35, !31}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !31}
!42 = distinct !{!42, !33}
!43 = distinct !{!43, !31}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !31}
!50 = distinct !{!50, !33}
!51 = distinct !{!51, !33}
!52 = distinct !{!52, !31}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !31}
!59 = distinct !{!59, !33}
!60 = distinct !{!60, !31}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !31}
!67 = distinct !{!67, !33}
!68 = distinct !{!68, !33}
!69 = distinct !{!69, !31}
!70 = distinct !{!70, !31}
!71 = distinct !{!71, !33}
!72 = distinct !{!72, !73, !31}
!73 = !{!"llvm.loop.unroll.runtime.disable"}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !31}
!80 = distinct !{!80, !33}
!81 = distinct !{!81, !33}
!82 = distinct !{!82, !31}
