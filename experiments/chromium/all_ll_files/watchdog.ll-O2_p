; ModuleID = '../../base/threading/watchdog.cc'
source_filename = "../../base/threading/watchdog.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [56 x i8] }
%"class.base::Watchdog" = type { i32 (...)**, i8, %"class.base::Lock", %"class.base::ConditionVariable", i32, %"class.base::TimeDelta", %"class.std::__1::basic_string", %"class.base::PlatformThreadHandle", %"class.base::Watchdog::ThreadDelegate", %"class.base::TimeTicks" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.2 }
%union.anon.2 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::PlatformThreadHandle" = type { i64 }
%"class.base::Watchdog::ThreadDelegate" = type { %"class.base::PlatformThread::Delegate", %"class.base::Watchdog"* }
%"class.base::PlatformThread::Delegate" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.3 }
%struct.anon.3 = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN4base14PlatformThread8DelegateD2Ev = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN4base8Watchdog14ThreadDelegateD0Ev = comdat any

@_ZTVN4base8WatchdogE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::Watchdog"*)* @_ZN4base8WatchdogD2Ev to i8*), i8* bitcast (void (%"class.base::Watchdog"*)* @_ZN4base8WatchdogD0Ev to i8*), i8* bitcast (void (%"class.base::Watchdog"*)* @_ZN4base8Watchdog5AlarmEv to i8*)] }, align 8
@.str = private unnamed_addr constant [10 x i8] c" Watchdog\00", align 1
@_ZTVN4base8Watchdog14ThreadDelegateE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i64 (%"class.base::PlatformThread::Delegate"*)* @_ZN4base14PlatformThread8Delegate17GetRealtimePeriodEv to i8*), i8* bitcast (void (%"class.base::Watchdog::ThreadDelegate"*)* @_ZN4base8Watchdog14ThreadDelegate10ThreadMainEv to i8*), i8* bitcast (void (%"class.base::PlatformThread::Delegate"*)* @_ZN4base14PlatformThread8DelegateD2Ev to i8*), i8* bitcast (void (%"class.base::Watchdog::ThreadDelegate"*)* @_ZN4base8Watchdog14ThreadDelegateD0Ev to i8*)] }, align 8
@_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN4base8WatchdogC1ERKNS_9TimeDeltaERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEb = hidden unnamed_addr alias void (%"class.base::Watchdog"*, %"class.base::TimeDelta"*, %"class.std::__1::basic_string"*, i1), void (%"class.base::Watchdog"*, %"class.base::TimeDelta"*, %"class.std::__1::basic_string"*, i1)* @_ZN4base8WatchdogC2ERKNS_9TimeDeltaERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEb
@_ZN4base8WatchdogD1Ev = hidden unnamed_addr alias void (%"class.base::Watchdog"*), void (%"class.base::Watchdog"*)* @_ZN4base8WatchdogD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8WatchdogC2ERKNS_9TimeDeltaERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEb(%"class.base::Watchdog"*, %"class.base::TimeDelta"* nocapture readonly dereferenceable(8), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8WatchdogE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 1
  store i8 %5, i8* %7, align 8
  %8 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %8, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %9) #11
  %10 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 3
  tail call void @_ZN4base17ConditionVariableC1EPNS_4LockE(%"class.base::ConditionVariable"* %10, %"class.base::Lock"* %8) #11
  %11 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 4
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 0, i32 0
  %13 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 5, i32 0
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 6
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %4
  %21 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #11
  br label %28

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %15, i8* %25, i64 %27) #11
  br label %28

28:                                               ; preds = %20, %23
  %29 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 7
  %30 = getelementptr inbounds %"class.base::PlatformThreadHandle", %"class.base::PlatformThreadHandle"* %29, i64 0, i32 0
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 8
  %32 = getelementptr inbounds %"class.base::Watchdog::ThreadDelegate", %"class.base::Watchdog::ThreadDelegate"* %31, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4base8Watchdog14ThreadDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 8, i32 1
  store %"class.base::Watchdog"* %0, %"class.base::Watchdog"** %33, align 8
  %34 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 9, i32 0, i32 0
  store i64 0, i64* %34, align 8
  %35 = load i8, i8* %7, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.base::Watchdog::ThreadDelegate", %"class.base::Watchdog::ThreadDelegate"* %31, i64 0, i32 0
  %39 = tail call zeroext i1 @_ZN4base14PlatformThread18CreateWithPriorityEmPNS0_8DelegateEPNS_20PlatformThreadHandleENS_14ThreadPriorityE(i64 0, %"class.base::PlatformThread::Delegate"* %38, %"class.base::PlatformThreadHandle"* %29, i32 1) #11
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %7, align 8
  br label %41

41:                                               ; preds = %28, %37
  ret void
}

declare void @_ZN4base17ConditionVariableC1EPNS_4LockE(%"class.base::ConditionVariable"*, %"class.base::Lock"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8WatchdogD2Ev(%"class.base::Watchdog"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8WatchdogE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %32, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #11
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !3

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #11
  br label %13

13:                                               ; preds = %6, %11
  %14 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 3
  %17 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #11
  br i1 %16, label %29, label %18

18:                                               ; preds = %13
  %19 = load i8, i8* %3, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %18
  %22 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #11
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24, !prof !3

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %25) #11
  br label %26

26:                                               ; preds = %24, %21
  store i32 2, i32* %14, align 8
  %27 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 3
  tail call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %27) #11
  %28 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #11
  br label %29

29:                                               ; preds = %26, %18, %13
  %30 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 7, i32 0
  %31 = load i64, i64* %30, align 8
  tail call void @_ZN4base14PlatformThread4JoinENS_20PlatformThreadHandleE(i64 %31) #11
  br label %32

32:                                               ; preds = %1, %29
  %33 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 6
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  tail call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %32, %38
  %42 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 3
  tail call void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"* %42) #11
  %43 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %43) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8Watchdog10IsJoinableEv(%"class.base::Watchdog"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %7) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !3

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %11) #11
  br label %12

12:                                               ; preds = %5, %10
  %13 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 3
  %16 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #11
  br label %17

17:                                               ; preds = %1, %12
  %18 = phi i1 [ %15, %12 ], [ true, %1 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8Watchdog7CleanupEv(%"class.base::Watchdog"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %7) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !3

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %11) #11
  br label %12

12:                                               ; preds = %5, %10
  %13 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 4
  store i32 2, i32* %13, align 8
  %14 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 3
  tail call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %14) #11
  %15 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #11
  br label %16

16:                                               ; preds = %1, %12
  ret void
}

declare void @_ZN4base14PlatformThread4JoinENS_20PlatformThreadHandleE(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14PlatformThread8DelegateD2Ev(%"class.base::PlatformThread::Delegate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8WatchdogD0Ev(%"class.base::Watchdog"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4base8WatchdogD2Ev(%"class.base::Watchdog"* %0) #11
  %2 = bitcast %"class.base::Watchdog"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8Watchdog3ArmEv(%"class.base::Watchdog"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %3 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #11
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 9, i32 0, i32 0
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 4
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 3
  tail call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %12) #11
  %13 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8Watchdog14ArmAtStartTimeENS_9TimeTicksE(%"class.base::Watchdog"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #11
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 9, i32 0, i32 0
  store i64 %1, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 4
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 3
  tail call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %12) #11
  %13 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #11
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8Watchdog19ArmSomeTimeDeltaAgoERKNS_9TimeDeltaE(%"class.base::Watchdog"*, %"class.base::TimeDelta"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %4, i64* %8, align 8
  %9 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %10 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0, i32 0
  %12 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !3

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #11
  br label %16

16:                                               ; preds = %2, %14
  %17 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 9, i32 0, i32 0
  store i64 %9, i64* %17, align 8
  %18 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 3
  call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %19) #11
  %20 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8Watchdog6DisarmEv(%"class.base::Watchdog"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %0, i64 0, i32 4
  store i32 1, i32* %9, align 8
  %10 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base8Watchdog5AlarmEv(%"class.base::Watchdog"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8Watchdog14ThreadDelegate10ThreadMainEv(%"class.base::Watchdog::ThreadDelegate"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  tail call void @_ZNK4base8Watchdog14ThreadDelegate13SetThreadNameEv(%"class.base::Watchdog::ThreadDelegate"* %0)
  %4 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %12, !prof !4

8:                                                ; preds = %1
  %9 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data) #11
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data, i64 0, i32 0, i64 0), i8 0, i64 56, i1 false) #11
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data to %"class.base::internal::LockImpl"*)) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data, i64 0, i32 0, i64 40), i8 0, i64 16, i1 false) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data) #11
  br label %12

12:                                               ; preds = %1, %8, %11
  %13 = getelementptr inbounds %"class.base::Watchdog::ThreadDelegate", %"class.base::Watchdog::ThreadDelegate"* %0, i64 0, i32 1
  %14 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %15

15:                                               ; preds = %111, %12
  %16 = load %"class.base::Watchdog"*, %"class.base::Watchdog"** %13, align 8
  %17 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %16, i64 0, i32 2
  %18 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %17, i64 0, i32 0, i32 0
  %19 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %18) #11
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21, !prof !3

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %17, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %22) #11
  br label %23

23:                                               ; preds = %15, %21
  br label %24

24:                                               ; preds = %23, %28
  %25 = load %"class.base::Watchdog"*, %"class.base::Watchdog"** %13, align 8
  %26 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %25, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  switch i32 %27, label %30 [
    i32 1, label %28
    i32 2, label %113
  ]

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %25, i64 0, i32 3
  notail call void @_ZN4base17ConditionVariable4WaitEv(%"class.base::ConditionVariable"* %29) #11
  br label %24

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %25, i64 0, i32 5
  %32 = call i64 @_ZN4base9TimeTicks3NowEv() #11
  %33 = load %"class.base::Watchdog"*, %"class.base::Watchdog"** %13, align 8
  %34 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %33, i64 0, i32 9, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = sub nsw i64 %32, %35
  %37 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* %31, i64 %36)
  store i64 %37, i64* %5, align 8
  %38 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %3) #11
  %39 = icmp sgt i64 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %30
  %41 = load %"class.base::Watchdog"*, %"class.base::Watchdog"** %13, align 8
  %42 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %41, i64 0, i32 3
  notail call void @_ZN4base17ConditionVariable9TimedWaitERKNS_9TimeDeltaE(%"class.base::ConditionVariable"* %42, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #11
  br label %111

43:                                               ; preds = %30
  %44 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data to %union.pthread_mutex_t*)) #11
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !3

46:                                               ; preds = %43
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data to %"class.base::internal::LockImpl"*)) #11
  br label %47

47:                                               ; preds = %43, %46
  %48 = load %"class.base::Watchdog"*, %"class.base::Watchdog"** %13, align 8
  %49 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %48, i64 0, i32 9, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data, i64 0, i32 0, i64 40) to i64*), align 8
  %52 = icmp sgt i64 %51, %50
  br i1 %52, label %53, label %83

53:                                               ; preds = %47
  %54 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data, i64 0, i32 0, i64 48) to i64*), align 8
  %55 = add i64 %54, -9223372036854775807
  %56 = icmp ult i64 %55, 2
  br i1 %56, label %64, label %57

57:                                               ; preds = %53
  %58 = icmp slt i64 %54, 0
  %59 = select i1 %58, i64 -9223372036854775808, i64 9223372036854775807
  %60 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %50, i64 %54) #11
  %61 = extractvalue { i64, i1 } %60, 1
  %62 = extractvalue { i64, i1 } %60, 0
  %63 = select i1 %61, i64 %59, i64 %62, !prof !5
  br label %72

64:                                               ; preds = %53
  %65 = add i64 %50, -9223372036854775807
  %66 = icmp ugt i64 %65, 1
  %67 = icmp eq i64 %50, %54
  %68 = or i1 %67, %66
  br i1 %68, label %72, label %69

69:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #11
  %70 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %71 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data, i64 0, i32 0, i64 40) to i64*), align 8
  br label %72

72:                                               ; preds = %57, %64, %69
  %73 = phi i64 [ %51, %57 ], [ %51, %64 ], [ %71, %69 ]
  %74 = phi i64 [ %63, %57 ], [ %54, %64 ], [ %54, %69 ]
  store i64 %74, i64* %49, align 8
  %75 = load %"class.base::Watchdog"*, %"class.base::Watchdog"** %13, align 8
  %76 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %75, i64 0, i32 9, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = icmp sgt i64 %73, %77
  br i1 %78, label %79, label %81

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %75, i64 0, i32 4
  store i32 1, i32* %80, align 8
  br label %81

81:                                               ; preds = %79, %72
  %82 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data to %union.pthread_mutex_t*)) #11
  br label %111

83:                                               ; preds = %47
  %84 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data to %union.pthread_mutex_t*)) #11
  %85 = load %"class.base::Watchdog"*, %"class.base::Watchdog"** %13, align 8
  %86 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %85, i64 0, i32 4
  store i32 1, i32* %86, align 8
  %87 = call i64 @_ZN4base9TimeTicks3NowEv() #11
  %88 = load %"class.base::Watchdog"*, %"class.base::Watchdog"** %13, align 8
  %89 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %88, i64 0, i32 2
  %90 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %89, i64 0, i32 0, i32 0
  %91 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %90) #11
  %92 = load %"class.base::Watchdog"*, %"class.base::Watchdog"** %13, align 8
  %93 = bitcast %"class.base::Watchdog"* %92 to void (%"class.base::Watchdog"*)***
  %94 = load void (%"class.base::Watchdog"*)**, void (%"class.base::Watchdog"*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.base::Watchdog"*)*, void (%"class.base::Watchdog"*)** %94, i64 2
  %96 = load void (%"class.base::Watchdog"*)*, void (%"class.base::Watchdog"*)** %95, align 8
  call void %96(%"class.base::Watchdog"* %92) #11
  %97 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %90) #11
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %101, label %99, !prof !3

99:                                               ; preds = %83
  %100 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %89, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %100) #11
  br label %101

101:                                              ; preds = %83, %99
  %102 = call i64 @_ZN4base9TimeTicks3NowEv() #11
  %103 = sub nsw i64 %102, %87
  %104 = icmp slt i64 %103, 2001
  br i1 %104, label %111, label %105

105:                                              ; preds = %101
  %106 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data to %union.pthread_mutex_t*)) #11
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %105
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data to %"class.base::internal::LockImpl"*)) #11
  br label %109

109:                                              ; preds = %105, %108
  store i64 %87, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data, i64 0, i32 0, i64 40) to i64*), align 8
  store i64 %103, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data, i64 0, i32 0, i64 48) to i64*), align 8
  %110 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data to %union.pthread_mutex_t*)) #11
  br label %111

111:                                              ; preds = %109, %101, %81, %40
  %112 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %18) #11
  br label %15

113:                                              ; preds = %24
  %114 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %25, i64 0, i32 4
  store i32 3, i32* %114, align 8
  %115 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base8Watchdog14ThreadDelegate13SetThreadNameEv(%"class.base::Watchdog::ThreadDelegate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = getelementptr inbounds %"class.base::Watchdog::ThreadDelegate", %"class.base::Watchdog::ThreadDelegate"* %0, i64 0, i32 1
  %8 = load %"class.base::Watchdog"*, %"class.base::Watchdog"** %7, align 8
  %9 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %8, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #11, !alias.scope !6
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1, !noalias !6
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.base::Watchdog", %"class.base::Watchdog"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8, !noalias !6
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8, !noalias !6
  br label %22

19:                                               ; preds = %1
  %20 = zext i8 %12 to i64
  %21 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  br label %22

22:                                               ; preds = %19, %14
  %23 = phi i64 [ %16, %14 ], [ %20, %19 ]
  %24 = phi i8* [ %18, %14 ], [ %21, %19 ]
  %25 = add i64 %23, 9
  %26 = icmp ugt i64 %25, -17
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  %28 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %28) #13
  unreachable

29:                                               ; preds = %22
  %30 = icmp ult i64 %25, 23
  br i1 %30, label %36, label %31

31:                                               ; preds = %29
  %32 = add nuw i64 %23, 25
  %33 = and i64 %32, -16
  %34 = tail call i8* @_Znwm(i64 %33) #12
  store i8* %34, i8** %4, align 8, !alias.scope !6
  %35 = or i64 %33, -9223372036854775808
  store i64 %35, i64* %6, align 8, !alias.scope !6
  store i64 %23, i64* %5, align 8, !alias.scope !6
  br label %41

36:                                               ; preds = %29
  %37 = trunc i64 %23 to i8
  %38 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  store i8 %37, i8* %39, align 1, !alias.scope !6
  %40 = icmp eq i64 %23, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %31, %36
  %42 = phi i8* [ %34, %31 ], [ %3, %36 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* align 1 %24, i64 %23, i1 false) #11
  br label %43

43:                                               ; preds = %36, %41
  %44 = phi i8* [ %3, %36 ], [ %42, %41 ]
  %45 = getelementptr inbounds i8, i8* %44, i64 %23
  store i8 0, i8* %45, align 1
  %46 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 9) #11
  call void @_ZN4base14PlatformThread7SetNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #11
  %47 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %43
  %52 = load i8*, i8** %4, align 8
  call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %43, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #11
  ret void
}

declare void @_ZN4base17ConditionVariable4WaitEv(%"class.base::ConditionVariable"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #11
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !5
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #11
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %26, i8* %27) #11
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #11
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

declare void @_ZN4base17ConditionVariable9TimedWaitERKNS_9TimeDeltaE(%"class.base::ConditionVariable"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN4base14PlatformThread7SetNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8Watchdog15ResetStaticDataEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !4

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data, i64 0, i32 0, i64 0), i8 0, i64 56, i1 false) #11
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data to %"class.base::internal::LockImpl"*)) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data, i64 0, i32 0, i64 40), i8 0, i64 16, i1 false) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data) #11
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data to %union.pthread_mutex_t*)) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %7
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data to %"class.base::internal::LockImpl"*)) #11
  br label %11

11:                                               ; preds = %7, %10
  store <2 x i64> <i64 -9223372036854775808, i64 0>, <2 x i64>* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data, i64 0, i32 0, i64 40) to <2 x i64>*), align 8
  %12 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_113GetStaticDataEvE11static_data to %union.pthread_mutex_t*)) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64 @_ZN4base14PlatformThread8Delegate17GetRealtimePeriodEv(%"class.base::PlatformThread::Delegate"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8Watchdog14ThreadDelegateD0Ev(%"class.base::Watchdog::ThreadDelegate"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.base::Watchdog::ThreadDelegate"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

declare zeroext i1 @_ZN4base14PlatformThread18CreateWithPriorityEmPNS0_8DelegateEPNS_20PlatformThreadHandleENS_14ThreadPriorityE(i64, %"class.base::PlatformThread::Delegate"*, %"class.base::PlatformThreadHandle"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #8

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
