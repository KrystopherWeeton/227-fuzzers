; ModuleID = '../../third_party/libzip/src/lib/zip_source_open.c'
source_filename = "../../third_party/libzip/src/lib/zip_source_open.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip_source = type { %struct.zip_source*, %union.anon, i8*, %struct.zip_error, i64, i32, i32, i8, %struct.zip*, i32, i8, i8 }
%union.anon = type { i64 (i8*, i8*, i64, i32)* }
%struct.zip_error = type { i32, i32, i8* }
%struct.zip = type { %struct.zip_source*, i32, %struct.zip_error, i32, i32, i8*, %struct.zip_string*, %struct.zip_string*, i8, i64, i64, %struct.zip_entry*, i32, i32, %struct.zip_source**, %struct.zip_hash*, %struct.zip_progress* }
%struct.zip_string = type { i8*, i16, i32, i8*, i32 }
%struct.zip_entry = type { %struct.zip_dirent*, %struct.zip_dirent*, %struct.zip_source*, i8 }
%struct.zip_dirent = type { i32, i8, i8, i8, i16, i16, i16, i32, i64, i32, i64, i64, %struct.zip_string*, %struct.zip_extra_field*, %struct.zip_string*, i32, i16, i32, i64, i16, i16, i8* }
%struct.zip_extra_field = type { %struct.zip_extra_field*, i32, i16, i16, i8* }
%struct.zip_hash = type opaque
%struct.zip_progress = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zip_source_open(%struct.zip_source*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %45

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 3
  tail call void @zip_error_set(%struct.zip_error* %10, i32 23, i32 0) #2
  br label %45

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = tail call i64 @zip_source_supports(%struct.zip_source* %0) #2
  %17 = and i64 %16, 64
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %39

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 3
  tail call void @zip_error_set(%struct.zip_error* %20, i32 29, i32 0) #2
  br label %45

21:                                               ; preds = %11
  %22 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 0
  %23 = load %struct.zip_source*, %struct.zip_source** %22, align 8
  %24 = icmp eq %struct.zip_source* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = tail call i32 @zip_source_open(%struct.zip_source* nonnull %23)
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 3
  %30 = load %struct.zip_source*, %struct.zip_source** %22, align 8
  tail call void @_zip_error_set_from_source(%struct.zip_error* %29, %struct.zip_source* %30) #2
  br label %45

31:                                               ; preds = %21, %25
  %32 = tail call i64 @_zip_source_call(%struct.zip_source* %0, i8* null, i64 0, i32 0) #2
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %39

34:                                               ; preds = %31
  %35 = load %struct.zip_source*, %struct.zip_source** %22, align 8
  %36 = icmp eq %struct.zip_source* %35, null
  br i1 %36, label %45, label %37

37:                                               ; preds = %34
  %38 = tail call i32 @zip_source_close(%struct.zip_source* nonnull %35) #2
  br label %45

39:                                               ; preds = %31, %15
  %40 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 10
  store i8 0, i8* %40, align 4
  %41 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 11
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 3
  tail call void @_zip_error_clear(%struct.zip_error* %42) #2
  %43 = load i32, i32* %12, align 8
  %44 = add i32 %43, 1
  store i32 %44, i32* %12, align 8
  br label %45

45:                                               ; preds = %37, %34, %1, %39, %28, %19, %9
  %46 = phi i32 [ -1, %9 ], [ -1, %19 ], [ 0, %39 ], [ -1, %28 ], [ -1, %1 ], [ -1, %34 ], [ -1, %37 ]
  ret i32 %46
}

declare void @zip_error_set(%struct.zip_error*, i32, i32) local_unnamed_addr #1

declare i64 @zip_source_supports(%struct.zip_source*) local_unnamed_addr #1

declare void @_zip_error_set_from_source(%struct.zip_error*, %struct.zip_source*) local_unnamed_addr #1

declare i64 @_zip_source_call(%struct.zip_source*, i8*, i64, i32) local_unnamed_addr #1

declare i32 @zip_source_close(%struct.zip_source*) local_unnamed_addr #1

declare void @_zip_error_clear(%struct.zip_error*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
