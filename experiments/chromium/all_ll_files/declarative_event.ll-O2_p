; ModuleID = '../../extensions/renderer/bindings/declarative_event.cc'
source_filename = "../../extensions/renderer/bindings/declarative_event.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gin::WrapperInfo" = type { i16 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.extensions::DeclarativeEvent" = type <{ %"class.gin::Wrappable", %"class.std::__1::basic_string", %"class.extensions::APITypeReferenceMap"*, %"class.extensions::APIRequestHandler"*, i32, [4 x i8] }>
%"class.gin::Wrappable" = type { %"class.gin::WrappableBase" }
%"class.gin::WrappableBase" = type { i32 (...)**, i8, %"class.v8::Global" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Object"* }
%"class.v8::Object" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.extensions::APITypeReferenceMap" = type { %"class.base::RepeatingCallback", %"class.std::__1::map", %"class.std::__1::map.10", %"class.std::__1::map.10", %"class.std::__1::map.10", %"class.std::__1::map.10" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::map.10" = type { %"class.std::__1::__tree.11" }
%"class.std::__1::__tree.11" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.extensions::APIRequestHandler" = type { i32, i32, %"class.std::__1::map.19", %"class.base::RepeatingCallback.30", %"class.extensions::APILastError", %"class.extensions::ExceptionHandler"*, %"class.std::__1::unique_ptr", %"class.extensions::InteractionProvider"* }
%"class.std::__1::map.19" = type { %"class.std::__1::__tree.20" }
%"class.std::__1::__tree.20" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::RepeatingCallback.30" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.extensions::APILastError" = type { %"class.base::RepeatingCallback.31", %"class.base::RepeatingCallback.32" }
%"class.base::RepeatingCallback.31" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.32" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.extensions::ExceptionHandler" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.extensions::APIResponseValidator"* }
%"class.extensions::APIResponseValidator" = type opaque
%"class.extensions::InteractionProvider" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.extensions::ArgumentSpec"* }
%"class.extensions::ArgumentSpec" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", i8, i8, i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.48", %"class.absl::optional.48", %"class.absl::optional.53", %"class.absl::optional.53", %"class.std::__1::map", %"class.std::__1::unique_ptr.41", %"class.std::__1::vector.58", %"class.std::__1::set", %"class.std::__1::unique_ptr.41" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.47 }
%union.anon.47 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.48" = type { %"class.absl::optional_internal::optional_data.49" }
%"class.absl::optional_internal::optional_data.49" = type { %"class.absl::optional_internal::optional_data_base.50" }
%"class.absl::optional_internal::optional_data_base.50" = type { %"class.absl::optional_internal::optional_data_dtor_base.51" }
%"class.absl::optional_internal::optional_data_dtor_base.51" = type { i8, %union.anon.52 }
%union.anon.52 = type { i32 }
%"class.absl::optional.53" = type { %"class.absl::optional_internal::optional_data.54" }
%"class.absl::optional_internal::optional_data.54" = type { %"class.absl::optional_internal::optional_data_base.55" }
%"class.absl::optional_internal::optional_data_base.55" = type { %"class.absl::optional_internal::optional_data_dtor_base.56" }
%"class.absl::optional_internal::optional_data_dtor_base.56" = type { i8, %union.anon.57 }
%union.anon.57 = type { i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.65" }
%"class.std::__1::__tree.65" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.std::__1::unique_ptr.41"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.128" }
%"struct.std::__1::pair.128" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.41" }
%"class.extensions::APISignature" = type { %"class.std::__1::vector.58", i32, %"class.extensions::BindingAccessChecker"*, i8, %"class.std::__1::basic_string" }
%"class.extensions::BindingAccessChecker" = type opaque
%"class.gin::ObjectTemplateBuilder" = type { %"class.v8::Isolate"*, i8*, %"class.v8::Local" }
%"class.v8::Local" = type { %"class.v8::ObjectTemplate"* }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.base::RepeatingCallback.141" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.gin::internal::CallbackHolderBase" = type { i32 (...)**, %"class.v8::Global.142" }
%"class.v8::Global.142" = type { %"class.v8::PersistentBase.143" }
%"class.v8::PersistentBase.143" = type { %"class.v8::External"* }
%"class.v8::External" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.v8::CFunction" = type opaque
%"class.v8::Data" = type { i8 }
%"class.gin::Arguments" = type <{ %"class.v8::Isolate"*, %union.anon.78, i32, i8, i8, [2 x i8] }>
%union.anon.78 = type { %"class.v8::FunctionCallbackInfo"* }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { %"class.v8::Local.82"*, %"class.v8::Local.82"*, %"class.std::__1::__compressed_pair.83" }
%"class.v8::Local.82" = type { %"class.v8::Value"* }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.v8::Local.82"* }
%"struct.extensions::APISignature::JSONParseResult" = type { %"class.std::__1::unique_ptr.91", %"class.v8::Local.97", i32, %"class.absl::optional" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.base::Value"* }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.98" }
%"union.absl::variant_internal::DestructibleUnionImpl.98" = type { %"union.absl::variant_internal::DestructibleUnionImpl.99" }
%"union.absl::variant_internal::DestructibleUnionImpl.99" = type { %"union.absl::variant_internal::DestructibleUnionImpl.100" }
%"union.absl::variant_internal::DestructibleUnionImpl.100" = type { %"union.absl::variant_internal::DestructibleUnionImpl.101" }
%"union.absl::variant_internal::DestructibleUnionImpl.101" = type { %"class.std::__1::basic_string" }
%"class.v8::Local.97" = type { %"class.v8::Function"* }
%"class.v8::Function" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Integer" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.gin::internal::CallbackHolder" = type { %"class.gin::internal::CallbackHolderBase", %"class.base::RepeatingCallback.141", %"struct.gin::InvokerOptions" }
%"struct.gin::InvokerOptions" = type { i8, i8* }
%"class.v8::Local.145" = type { %"class.v8::External"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.v8::PropertyCallbackInfo" = type { i64* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN3gin21ObjectTemplateBuilder9SetMethodIMN10extensions16DeclarativeEventEFvPNS_9ArgumentsEEEERS0_RKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE7reserveEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE = comdat any

$_ZN3gin8internal10DispatcherIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEE18DispatchToCallbackERKN2v820FunctionCallbackInfoINS9_5ValueEEE = comdat any

$_ZN3gin8internal14CallbackHolderIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEED2Ev = comdat any

$_ZN3gin8internal14CallbackHolderIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEED0Ev = comdat any

$_ZN3gin8internal10DispatcherIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEE22DispatchToCallbackImplES6_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions16DeclarativeEventEFvPN3gin9ArgumentsEEJEEEFvPS4_S7_EE3RunEPNS0_13BindStateBaseESB_S7_ = comdat any

$_ZN4base8internal9BindStateIMN10extensions16DeclarativeEventEFvPN3gin9ArgumentsEEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorIN2v85LocalINS1_5ValueEEENS_9allocatorIS4_EEE6insertIPKS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISC_E9referenceEEE5valueENS_11__wrap_iterIPS4_EEE4typeENSG_ISA_EESC_SC_ = comdat any

$_ZTVN3gin8internal14CallbackHolderIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEEE = comdat any

@_ZN10extensions16DeclarativeEvent12kWrapperInfoE = hidden global %"struct.gin::WrapperInfo" zeroinitializer, align 2
@_ZTVN10extensions16DeclarativeEventE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::DeclarativeEvent"*)* @_ZN10extensions16DeclarativeEventD2Ev to i8*), i8* bitcast (void (%"class.extensions::DeclarativeEvent"*)* @_ZN10extensions16DeclarativeEventD0Ev to i8*), i8* bitcast (void (%"class.gin::ObjectTemplateBuilder"*, %"class.extensions::DeclarativeEvent"*, %"class.v8::Isolate"*)* @_ZN10extensions16DeclarativeEvent24GetObjectTemplateBuilderEPN2v87IsolateE to i8*), i8* bitcast (i8* (%"class.extensions::DeclarativeEvent"*)* @_ZN10extensions16DeclarativeEvent11GetTypeNameEv to i8*)] }, align 8
@.str = private unnamed_addr constant [10 x i8] c".addRules\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c".Rule\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"addRules\00", align 1
@.ref.tmp = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), i64 8 }, align 8
@.str.3 = private unnamed_addr constant [12 x i8] c"removeRules\00", align 1
@.ref.tmp.4 = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i64 11 }, align 8
@.str.5 = private unnamed_addr constant [9 x i8] c"getRules\00", align 1
@.ref.tmp.6 = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i64 8 }, align 8
@.str.7 = private unnamed_addr constant [6 x i8] c"Event\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"events.addRules\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"events.Event.removeRules\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"events.removeRules\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"events.Event.getRules\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"events.getRules\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"Invalid invocation\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"actions\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"conditions\00", align 1
@_ZTVN3gin8internal14CallbackHolderIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gin::internal::CallbackHolder"*)* @_ZN3gin8internal14CallbackHolderIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEED2Ev to i8*), i8* bitcast (void (%"class.gin::internal::CallbackHolder"*)* @_ZN3gin8internal14CallbackHolderIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEED0Ev to i8*)] }, comdat, align 8
@.str.20 = private unnamed_addr constant [30 x i8] c"../../gin/function_template.h\00", align 1
@.str.21 = private unnamed_addr constant [26 x i8] c"args->GetData(&v8_holder)\00", align 1

@_ZN10extensions16DeclarativeEventC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_19APITypeReferenceMapEPNS_17APIRequestHandlerERKNS1_6vectorIS7_NS5_IS7_EEEESI_i = hidden unnamed_addr alias void (%"class.extensions::DeclarativeEvent"*, %"class.std::__1::basic_string"*, %"class.extensions::APITypeReferenceMap"*, %"class.extensions::APIRequestHandler"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, i32), void (%"class.extensions::DeclarativeEvent"*, %"class.std::__1::basic_string"*, %"class.extensions::APITypeReferenceMap"*, %"class.extensions::APIRequestHandler"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, i32)* @_ZN10extensions16DeclarativeEventC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_19APITypeReferenceMapEPNS_17APIRequestHandlerERKNS1_6vectorIS7_NS5_IS7_EEEESI_i
@_ZN10extensions16DeclarativeEventD1Ev = hidden unnamed_addr alias void (%"class.extensions::DeclarativeEvent"*), void (%"class.extensions::DeclarativeEvent"*)* @_ZN10extensions16DeclarativeEventD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16DeclarativeEventC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_19APITypeReferenceMapEPNS_17APIRequestHandlerERKNS1_6vectorIS7_NS5_IS7_EEEESI_i(%"class.extensions::DeclarativeEvent"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.extensions::APITypeReferenceMap"*, %"class.extensions::APIRequestHandler"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::vector.58", align 16
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::vector.58", align 16
  %11 = alloca %"class.std::__1::unique_ptr.41", align 8
  %12 = alloca %"class.std::__1::unique_ptr.41", align 8
  %13 = alloca %"class.std::__1::unique_ptr.41", align 8
  %14 = alloca %"class.std::__1::unique_ptr.41", align 8
  %15 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %16 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %17 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %18 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %19 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %20 = alloca %"class.std::__1::map", align 16
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::map", align 16
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gin13WrappableBaseC2Ev(%"class.gin::WrappableBase"* %29) #11
  %30 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10extensions16DeclarativeEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %7
  %37 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #11
  br label %45

39:                                               ; preds = %7
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %31, i8* %41, i64 %43) #11
  %44 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %45

45:                                               ; preds = %36, %39
  %46 = phi i8* [ %38, %36 ], [ %44, %39 ]
  %47 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 2
  store %"class.extensions::APITypeReferenceMap"* %2, %"class.extensions::APITypeReferenceMap"** %47, align 8
  %48 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 3
  store %"class.extensions::APIRequestHandler"* %3, %"class.extensions::APIRequestHandler"** %48, align 8
  %49 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 4
  store i32 %6, i32* %49, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #11
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 24, i1 false) #11, !alias.scope !2
  %54 = load i8, i8* %33, align 1, !noalias !2
  %55 = icmp slt i8 %54, 0
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = zext i8 %54 to i64
  %61 = select i1 %55, i64 %57, i64 %60
  %62 = select i1 %55, i8* %59, i8* %46
  %63 = add i64 %61, 9
  %64 = icmp ugt i64 %63, -17
  br i1 %64, label %65, label %67

65:                                               ; preds = %45
  %66 = bitcast %"class.std::__1::basic_string"* %27 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %66) #12
  unreachable

67:                                               ; preds = %45
  %68 = icmp ult i64 %63, 23
  br i1 %68, label %74, label %69

69:                                               ; preds = %67
  %70 = add nuw i64 %61, 25
  %71 = and i64 %70, -16
  %72 = tail call i8* @_Znwm(i64 %71) #13
  store i8* %72, i8** %51, align 8, !alias.scope !2
  %73 = or i64 %71, -9223372036854775808
  store i64 %73, i64* %53, align 8, !alias.scope !2
  store i64 %61, i64* %52, align 8, !alias.scope !2
  br label %79

74:                                               ; preds = %67
  %75 = trunc i64 %61 to i8
  %76 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  store i8 %75, i8* %77, align 1, !alias.scope !2
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %69, %74
  %80 = phi i8* [ %72, %69 ], [ %50, %74 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %80, i8* align 1 %62, i64 %61, i1 false) #11
  br label %81

81:                                               ; preds = %74, %79
  %82 = phi i8* [ %50, %74 ], [ %80, %79 ]
  %83 = getelementptr inbounds i8, i8* %82, i64 %61
  store i8 0, i8* %83, align 1
  %84 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 9) #11
  %85 = call zeroext i1 @_ZNK10extensions19APITypeReferenceMap22HasTypeMethodSignatureERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::APITypeReferenceMap"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %27) #11
  br i1 %85, label %678, label %86

86:                                               ; preds = %81
  %87 = bitcast %"class.std::__1::map"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87)
  %88 = call i8* @_Znwm(i64 264) #13
  %89 = bitcast i8* %88 to %"class.extensions::ArgumentSpec"*
  call void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"* nonnull %89, i32 4) #11
  %90 = bitcast %"class.std::__1::map"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #11
  %91 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %20, i64 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %20, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %20, i64 0, i32 0, i32 2, i32 0, i32 0
  %94 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %20, i64 0, i32 0, i32 1, i32 0, i32 0
  %95 = bitcast %"class.std::__1::__tree_node_base"** %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %94, %"class.std::__1::__tree_end_node"** %91, align 16
  %96 = call i8* @_Znwm(i64 264) #13
  %97 = bitcast i8* %96 to %"class.extensions::ArgumentSpec"*
  call void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"* nonnull %97, i32 3) #11
  %98 = ptrtoint i8* %96 to i64
  %99 = getelementptr inbounds i8, i8* %96, i64 56
  store i8 1, i8* %99, align 8
  %100 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #11
  %101 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  store i8 2, i8* %102, align 1
  %103 = bitcast %"class.std::__1::basic_string"* %21 to i16*
  store i16 25705, i16* %103, align 8
  %104 = getelementptr inbounds i8, i8* %100, i64 2
  store i8 0, i8* %104, align 2
  %105 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %20, i64 0, i32 0
  %106 = bitcast %"class.std::__1::__tree_end_node"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #11
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %19, align 8
  %107 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_(%"class.std::__1::__tree"* nonnull %105, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %19, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21) #11
  %108 = bitcast %"class.std::__1::__tree_node_base"** %107 to %"class.std::__1::__tree_node"**
  %109 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %108, align 8
  %110 = icmp eq %"class.std::__1::__tree_node"* %109, null
  br i1 %110, label %111, label %136

111:                                              ; preds = %86
  %112 = call i8* @_Znwm(i64 64) #13, !noalias !5
  %113 = getelementptr inbounds i8, i8* %112, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* nonnull align 8 %100, i64 24, i1 false) #11, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 0, i64 24, i1 false) #11, !noalias !5
  %114 = getelementptr inbounds i8, i8* %112, i64 56
  %115 = bitcast i8* %114 to i64*
  store i64 0, i64* %115, align 8, !noalias !5
  %116 = bitcast %"class.std::__1::__tree_end_node"** %19 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast i8* %112 to %"class.std::__1::__tree_node"*
  %119 = bitcast i8* %112 to %"class.std::__1::__tree_node_base"*
  %120 = getelementptr inbounds i8, i8* %112, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 0, i64 16, i1 false) #11
  %121 = bitcast i8* %120 to i64*
  store i64 %117, i64* %121, align 8
  %122 = bitcast %"class.std::__1::__tree_node_base"** %107 to i8**
  store i8* %112, i8** %122, align 8
  %123 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 16
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %123, i64 0, i32 0
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  %126 = icmp eq %"class.std::__1::__tree_node_base"* %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %111
  %128 = ptrtoint %"class.std::__1::__tree_node_base"* %125 to i64
  %129 = bitcast %"class.std::__1::map"* %20 to i64*
  store i64 %128, i64* %129, align 16
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  br label %131

131:                                              ; preds = %127, %111
  %132 = phi %"class.std::__1::__tree_node_base"* [ %119, %111 ], [ %130, %127 ]
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %133, %"class.std::__1::__tree_node_base"* %132) #11
  %134 = load i64, i64* %93, align 16
  %135 = add i64 %134, 1
  store i64 %135, i64* %93, align 16
  br label %136

136:                                              ; preds = %131, %86
  %137 = phi %"class.std::__1::__tree_node"* [ %118, %131 ], [ %109, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #11
  %138 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %137, i64 0, i32 1, i32 0, i32 1
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %138, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %139, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.41"* %138 to i64*
  store i64 %98, i64* %141, align 8
  %142 = icmp eq %"class.extensions::ArgumentSpec"* %140, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %136
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %140) #11
  %144 = bitcast %"class.extensions::ArgumentSpec"* %140 to i8*
  call void @_ZdlPv(i8* %144) #13
  br label %145

145:                                              ; preds = %143, %136
  %146 = load i8, i8* %102, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %151

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  call void @_ZdlPv(i8* %150) #13
  br label %151

151:                                              ; preds = %148, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #11
  %152 = call i8* @_Znwm(i64 264) #13
  %153 = bitcast i8* %152 to %"class.extensions::ArgumentSpec"*
  call void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"* nonnull %153, i32 5) #11
  %154 = ptrtoint i8* %152 to i64
  %155 = call i8* @_Znwm(i64 264) #13
  %156 = bitcast i8* %155 to %"class.extensions::ArgumentSpec"*
  call void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"* nonnull %156, i32 3) #11
  %157 = ptrtoint i8* %155 to i64
  %158 = getelementptr inbounds i8, i8* %152, i64 200
  %159 = bitcast i8* %158 to %"class.extensions::ArgumentSpec"**
  %160 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %159, align 8
  %161 = bitcast i8* %158 to i64*
  store i64 %157, i64* %161, align 8
  %162 = icmp eq %"class.extensions::ArgumentSpec"* %160, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %151
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %160) #11
  %164 = bitcast %"class.extensions::ArgumentSpec"* %160 to i8*
  call void @_ZdlPv(i8* %164) #13
  br label %165

165:                                              ; preds = %163, %151
  %166 = getelementptr inbounds i8, i8* %152, i64 56
  store i8 1, i8* %166, align 8
  %167 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #11
  %168 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  store i8 4, i8* %169, align 1
  %170 = bitcast %"class.std::__1::basic_string"* %22 to i32*
  store i32 1936154996, i32* %170, align 8
  %171 = getelementptr inbounds i8, i8* %167, i64 4
  store i8 0, i8* %171, align 4
  %172 = bitcast %"class.std::__1::__tree_end_node"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #11
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %18, align 8
  %173 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_(%"class.std::__1::__tree"* nonnull %105, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %18, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %22) #11
  %174 = bitcast %"class.std::__1::__tree_node_base"** %173 to %"class.std::__1::__tree_node"**
  %175 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node"* %175, null
  br i1 %176, label %177, label %202

177:                                              ; preds = %165
  %178 = call i8* @_Znwm(i64 64) #13, !noalias !8
  %179 = getelementptr inbounds i8, i8* %178, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* nonnull align 8 %167, i64 24, i1 false) #11, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %167, i8 0, i64 24, i1 false) #11, !noalias !8
  %180 = getelementptr inbounds i8, i8* %178, i64 56
  %181 = bitcast i8* %180 to i64*
  store i64 0, i64* %181, align 8, !noalias !8
  %182 = bitcast %"class.std::__1::__tree_end_node"** %18 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = bitcast i8* %178 to %"class.std::__1::__tree_node"*
  %185 = bitcast i8* %178 to %"class.std::__1::__tree_node_base"*
  %186 = getelementptr inbounds i8, i8* %178, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %178, i8 0, i64 16, i1 false) #11
  %187 = bitcast i8* %186 to i64*
  store i64 %183, i64* %187, align 8
  %188 = bitcast %"class.std::__1::__tree_node_base"** %173 to i8**
  store i8* %178, i8** %188, align 8
  %189 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 16
  %190 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %189, i64 0, i32 0
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %197, label %193

193:                                              ; preds = %177
  %194 = ptrtoint %"class.std::__1::__tree_node_base"* %191 to i64
  %195 = bitcast %"class.std::__1::map"* %20 to i64*
  store i64 %194, i64* %195, align 16
  %196 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %173, align 8
  br label %197

197:                                              ; preds = %193, %177
  %198 = phi %"class.std::__1::__tree_node_base"* [ %185, %177 ], [ %196, %193 ]
  %199 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %199, %"class.std::__1::__tree_node_base"* %198) #11
  %200 = load i64, i64* %93, align 16
  %201 = add i64 %200, 1
  store i64 %201, i64* %93, align 16
  br label %202

202:                                              ; preds = %197, %165
  %203 = phi %"class.std::__1::__tree_node"* [ %184, %197 ], [ %175, %165 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #11
  %204 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %203, i64 0, i32 1, i32 0, i32 1
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %204, i64 0, i32 0, i32 0, i32 0
  %206 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %205, align 8
  %207 = bitcast %"class.std::__1::unique_ptr.41"* %204 to i64*
  store i64 %154, i64* %207, align 8
  %208 = icmp eq %"class.extensions::ArgumentSpec"* %206, null
  br i1 %208, label %211, label %209

209:                                              ; preds = %202
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %206) #11
  %210 = bitcast %"class.extensions::ArgumentSpec"* %206 to i8*
  call void @_ZdlPv(i8* %210) #13
  br label %211

211:                                              ; preds = %209, %202
  %212 = load i8, i8* %169, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  call void @_ZdlPv(i8* %216) #13
  br label %217

217:                                              ; preds = %214, %211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #11
  %218 = call i8* @_Znwm(i64 264) #13
  %219 = bitcast i8* %218 to %"class.extensions::ArgumentSpec"*
  call void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"* nonnull %219, i32 5) #11
  %220 = ptrtoint i8* %218 to i64
  %221 = call fastcc %"class.extensions::ArgumentSpec"* @_ZN10extensions12_GLOBAL__N_116BuildChoicesSpecERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.std::__1::vector"* dereferenceable(24) %4) #11
  %222 = ptrtoint %"class.extensions::ArgumentSpec"* %221 to i64
  %223 = getelementptr inbounds i8, i8* %218, i64 200
  %224 = bitcast i8* %223 to %"class.extensions::ArgumentSpec"**
  %225 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %224, align 8
  %226 = bitcast i8* %223 to i64*
  store i64 %222, i64* %226, align 8
  %227 = icmp eq %"class.extensions::ArgumentSpec"* %225, null
  br i1 %227, label %230, label %228

228:                                              ; preds = %217
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %225) #11
  %229 = bitcast %"class.extensions::ArgumentSpec"* %225 to i8*
  call void @_ZdlPv(i8* %229) #13
  br label %230

230:                                              ; preds = %228, %217
  %231 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %231) #11
  %232 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %233 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %232, i64 0, i32 1, i32 0
  store i8 7, i8* %233, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %231, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i64 7, i1 false) #11
  %234 = getelementptr inbounds i8, i8* %231, i64 7
  store i8 0, i8* %234, align 1
  %235 = bitcast %"class.std::__1::__tree_end_node"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #11
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %17, align 8
  %236 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_(%"class.std::__1::__tree"* nonnull %105, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %23) #11
  %237 = bitcast %"class.std::__1::__tree_node_base"** %236 to %"class.std::__1::__tree_node"**
  %238 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %237, align 8
  %239 = icmp eq %"class.std::__1::__tree_node"* %238, null
  br i1 %239, label %240, label %265

240:                                              ; preds = %230
  %241 = call i8* @_Znwm(i64 64) #13, !noalias !11
  %242 = getelementptr inbounds i8, i8* %241, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* nonnull align 8 %231, i64 24, i1 false) #11, !noalias !11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %231, i8 0, i64 24, i1 false) #11, !noalias !11
  %243 = getelementptr inbounds i8, i8* %241, i64 56
  %244 = bitcast i8* %243 to i64*
  store i64 0, i64* %244, align 8, !noalias !11
  %245 = bitcast %"class.std::__1::__tree_end_node"** %17 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast i8* %241 to %"class.std::__1::__tree_node"*
  %248 = bitcast i8* %241 to %"class.std::__1::__tree_node_base"*
  %249 = getelementptr inbounds i8, i8* %241, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %241, i8 0, i64 16, i1 false) #11
  %250 = bitcast i8* %249 to i64*
  store i64 %246, i64* %250, align 8
  %251 = bitcast %"class.std::__1::__tree_node_base"** %236 to i8**
  store i8* %241, i8** %251, align 8
  %252 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 16
  %253 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %252, i64 0, i32 0
  %254 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %253, align 8
  %255 = icmp eq %"class.std::__1::__tree_node_base"* %254, null
  br i1 %255, label %260, label %256

256:                                              ; preds = %240
  %257 = ptrtoint %"class.std::__1::__tree_node_base"* %254 to i64
  %258 = bitcast %"class.std::__1::map"* %20 to i64*
  store i64 %257, i64* %258, align 16
  %259 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  br label %260

260:                                              ; preds = %256, %240
  %261 = phi %"class.std::__1::__tree_node_base"* [ %248, %240 ], [ %259, %256 ]
  %262 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %262, %"class.std::__1::__tree_node_base"* %261) #11
  %263 = load i64, i64* %93, align 16
  %264 = add i64 %263, 1
  store i64 %264, i64* %93, align 16
  br label %265

265:                                              ; preds = %260, %230
  %266 = phi %"class.std::__1::__tree_node"* [ %247, %260 ], [ %238, %230 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #11
  %267 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %266, i64 0, i32 1, i32 0, i32 1
  %268 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %267, i64 0, i32 0, i32 0, i32 0
  %269 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %268, align 8
  %270 = bitcast %"class.std::__1::unique_ptr.41"* %267 to i64*
  store i64 %220, i64* %270, align 8
  %271 = icmp eq %"class.extensions::ArgumentSpec"* %269, null
  br i1 %271, label %274, label %272

272:                                              ; preds = %265
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %269) #11
  %273 = bitcast %"class.extensions::ArgumentSpec"* %269 to i8*
  call void @_ZdlPv(i8* %273) #13
  br label %274

274:                                              ; preds = %272, %265
  %275 = load i8, i8* %233, align 1
  %276 = icmp slt i8 %275, 0
  br i1 %276, label %277, label %280

277:                                              ; preds = %274
  %278 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load i8*, i8** %278, align 8
  call void @_ZdlPv(i8* %279) #13
  br label %280

280:                                              ; preds = %277, %274
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %231) #11
  %281 = call i8* @_Znwm(i64 264) #13
  %282 = bitcast i8* %281 to %"class.extensions::ArgumentSpec"*
  call void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"* nonnull %282, i32 5) #11
  %283 = ptrtoint i8* %281 to i64
  %284 = call fastcc %"class.extensions::ArgumentSpec"* @_ZN10extensions12_GLOBAL__N_116BuildChoicesSpecERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.std::__1::vector"* dereferenceable(24) %5) #11
  %285 = ptrtoint %"class.extensions::ArgumentSpec"* %284 to i64
  %286 = getelementptr inbounds i8, i8* %281, i64 200
  %287 = bitcast i8* %286 to %"class.extensions::ArgumentSpec"**
  %288 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %287, align 8
  %289 = bitcast i8* %286 to i64*
  store i64 %285, i64* %289, align 8
  %290 = icmp eq %"class.extensions::ArgumentSpec"* %288, null
  br i1 %290, label %293, label %291

291:                                              ; preds = %280
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %288) #11
  %292 = bitcast %"class.extensions::ArgumentSpec"* %288 to i8*
  call void @_ZdlPv(i8* %292) #13
  br label %293

293:                                              ; preds = %291, %280
  %294 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %294) #11
  %295 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %296 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %295, i64 0, i32 1, i32 0
  store i8 10, i8* %296, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %294, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i64 10, i1 false) #11
  %297 = getelementptr inbounds i8, i8* %294, i64 10
  store i8 0, i8* %297, align 2
  %298 = bitcast %"class.std::__1::__tree_end_node"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %298) #11
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %16, align 8
  %299 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_(%"class.std::__1::__tree"* nonnull %105, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %16, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %24) #11
  %300 = bitcast %"class.std::__1::__tree_node_base"** %299 to %"class.std::__1::__tree_node"**
  %301 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %300, align 8
  %302 = icmp eq %"class.std::__1::__tree_node"* %301, null
  br i1 %302, label %303, label %328

303:                                              ; preds = %293
  %304 = call i8* @_Znwm(i64 64) #13, !noalias !14
  %305 = getelementptr inbounds i8, i8* %304, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %305, i8* nonnull align 8 %294, i64 24, i1 false) #11, !noalias !14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %294, i8 0, i64 24, i1 false) #11, !noalias !14
  %306 = getelementptr inbounds i8, i8* %304, i64 56
  %307 = bitcast i8* %306 to i64*
  store i64 0, i64* %307, align 8, !noalias !14
  %308 = bitcast %"class.std::__1::__tree_end_node"** %16 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast i8* %304 to %"class.std::__1::__tree_node"*
  %311 = bitcast i8* %304 to %"class.std::__1::__tree_node_base"*
  %312 = getelementptr inbounds i8, i8* %304, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %304, i8 0, i64 16, i1 false) #11
  %313 = bitcast i8* %312 to i64*
  store i64 %309, i64* %313, align 8
  %314 = bitcast %"class.std::__1::__tree_node_base"** %299 to i8**
  store i8* %304, i8** %314, align 8
  %315 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 16
  %316 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %315, i64 0, i32 0
  %317 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %316, align 8
  %318 = icmp eq %"class.std::__1::__tree_node_base"* %317, null
  br i1 %318, label %323, label %319

319:                                              ; preds = %303
  %320 = ptrtoint %"class.std::__1::__tree_node_base"* %317 to i64
  %321 = bitcast %"class.std::__1::map"* %20 to i64*
  store i64 %320, i64* %321, align 16
  %322 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %299, align 8
  br label %323

323:                                              ; preds = %319, %303
  %324 = phi %"class.std::__1::__tree_node_base"* [ %311, %303 ], [ %322, %319 ]
  %325 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %325, %"class.std::__1::__tree_node_base"* %324) #11
  %326 = load i64, i64* %93, align 16
  %327 = add i64 %326, 1
  store i64 %327, i64* %93, align 16
  br label %328

328:                                              ; preds = %323, %293
  %329 = phi %"class.std::__1::__tree_node"* [ %310, %323 ], [ %301, %293 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %298) #11
  %330 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %329, i64 0, i32 1, i32 0, i32 1
  %331 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %330, i64 0, i32 0, i32 0, i32 0
  %332 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %331, align 8
  %333 = bitcast %"class.std::__1::unique_ptr.41"* %330 to i64*
  store i64 %283, i64* %333, align 8
  %334 = icmp eq %"class.extensions::ArgumentSpec"* %332, null
  br i1 %334, label %337, label %335

335:                                              ; preds = %328
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %332) #11
  %336 = bitcast %"class.extensions::ArgumentSpec"* %332 to i8*
  call void @_ZdlPv(i8* %336) #13
  br label %337

337:                                              ; preds = %335, %328
  %338 = load i8, i8* %296, align 1
  %339 = icmp slt i8 %338, 0
  br i1 %339, label %340, label %343

340:                                              ; preds = %337
  %341 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = load i8*, i8** %341, align 8
  call void @_ZdlPv(i8* %342) #13
  br label %343

343:                                              ; preds = %340, %337
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %294) #11
  %344 = call i8* @_Znwm(i64 264) #13
  %345 = bitcast i8* %344 to %"class.extensions::ArgumentSpec"*
  call void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"* nonnull %345, i32 0) #11
  %346 = ptrtoint i8* %344 to i64
  %347 = getelementptr inbounds i8, i8* %344, i64 56
  store i8 1, i8* %347, align 8
  %348 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %348) #11
  %349 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %350 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %349, i64 0, i32 1, i32 0
  store i8 8, i8* %350, align 1
  %351 = bitcast %"class.std::__1::basic_string"* %25 to i64*
  store i64 8751735916104086128, i64* %351, align 8
  %352 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %353 = bitcast i64* %352 to i8*
  store i8 0, i8* %353, align 8
  %354 = bitcast %"class.std::__1::__tree_end_node"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %354) #11
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %15, align 8
  %355 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_(%"class.std::__1::__tree"* nonnull %105, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %25) #11
  %356 = bitcast %"class.std::__1::__tree_node_base"** %355 to %"class.std::__1::__tree_node"**
  %357 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %356, align 8
  %358 = icmp eq %"class.std::__1::__tree_node"* %357, null
  br i1 %358, label %359, label %384

359:                                              ; preds = %343
  %360 = call i8* @_Znwm(i64 64) #13, !noalias !17
  %361 = getelementptr inbounds i8, i8* %360, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %361, i8* nonnull align 8 %348, i64 24, i1 false) #11, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %348, i8 0, i64 24, i1 false) #11, !noalias !17
  %362 = getelementptr inbounds i8, i8* %360, i64 56
  %363 = bitcast i8* %362 to i64*
  store i64 0, i64* %363, align 8, !noalias !17
  %364 = bitcast %"class.std::__1::__tree_end_node"** %15 to i64*
  %365 = load i64, i64* %364, align 8
  %366 = bitcast i8* %360 to %"class.std::__1::__tree_node"*
  %367 = bitcast i8* %360 to %"class.std::__1::__tree_node_base"*
  %368 = getelementptr inbounds i8, i8* %360, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %360, i8 0, i64 16, i1 false) #11
  %369 = bitcast i8* %368 to i64*
  store i64 %365, i64* %369, align 8
  %370 = bitcast %"class.std::__1::__tree_node_base"** %355 to i8**
  store i8* %360, i8** %370, align 8
  %371 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 16
  %372 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %371, i64 0, i32 0
  %373 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %372, align 8
  %374 = icmp eq %"class.std::__1::__tree_node_base"* %373, null
  br i1 %374, label %379, label %375

375:                                              ; preds = %359
  %376 = ptrtoint %"class.std::__1::__tree_node_base"* %373 to i64
  %377 = bitcast %"class.std::__1::map"* %20 to i64*
  store i64 %376, i64* %377, align 16
  %378 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %355, align 8
  br label %379

379:                                              ; preds = %375, %359
  %380 = phi %"class.std::__1::__tree_node_base"* [ %367, %359 ], [ %378, %375 ]
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %381, %"class.std::__1::__tree_node_base"* %380) #11
  %382 = load i64, i64* %93, align 16
  %383 = add i64 %382, 1
  store i64 %383, i64* %93, align 16
  br label %384

384:                                              ; preds = %379, %343
  %385 = phi %"class.std::__1::__tree_node"* [ %366, %379 ], [ %357, %343 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %354) #11
  %386 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %385, i64 0, i32 1, i32 0, i32 1
  %387 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %386, i64 0, i32 0, i32 0, i32 0
  %388 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %387, align 8
  %389 = bitcast %"class.std::__1::unique_ptr.41"* %386 to i64*
  store i64 %346, i64* %389, align 8
  %390 = icmp eq %"class.extensions::ArgumentSpec"* %388, null
  br i1 %390, label %393, label %391

391:                                              ; preds = %384
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %388) #11
  %392 = bitcast %"class.extensions::ArgumentSpec"* %388 to i8*
  call void @_ZdlPv(i8* %392) #13
  br label %393

393:                                              ; preds = %391, %384
  %394 = load i8, i8* %350, align 1
  %395 = icmp slt i8 %394, 0
  br i1 %395, label %396, label %399

396:                                              ; preds = %393
  %397 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %398 = load i8*, i8** %397, align 8
  call void @_ZdlPv(i8* %398) #13
  br label %399

399:                                              ; preds = %396, %393
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %348) #11
  %400 = bitcast %"class.std::__1::map"* %20 to <2 x i64>*
  %401 = load <2 x i64>, <2 x i64>* %400, align 16
  %402 = bitcast %"class.std::__1::map"* %26 to <2 x i64>*
  store <2 x i64> %401, <2 x i64>* %402, align 16
  %403 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0, i32 2, i32 0, i32 0
  %404 = load i64, i64* %93, align 16
  store i64 %404, i64* %403, align 16
  %405 = icmp eq i64 %404, 0
  %406 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %405, label %407, label %409

407:                                              ; preds = %399
  %408 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %406, %"class.std::__1::__tree_end_node"** %408, align 16
  br label %414

409:                                              ; preds = %399
  %410 = extractelement <2 x i64> %401, i32 1
  %411 = inttoptr i64 %410 to %"class.std::__1::__tree_node_base"*
  %412 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %411, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %406, %"class.std::__1::__tree_end_node"** %412, align 8
  store %"class.std::__1::__tree_end_node"* %94, %"class.std::__1::__tree_end_node"** %91, align 16
  %413 = bitcast %"class.std::__1::__tree_end_node"* %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %413, i8 0, i64 16, i1 false) #11
  br label %414

414:                                              ; preds = %409, %407
  %415 = getelementptr inbounds i8, i8* %88, i64 176
  %416 = bitcast i8* %415 to %"class.std::__1::__tree"*
  %417 = getelementptr inbounds i8, i8* %88, i64 184
  %418 = bitcast i8* %417 to %"class.std::__1::__tree_node"**
  %419 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %418, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree"* %416, %"class.std::__1::__tree_node"* %419) #11
  %420 = bitcast %"class.std::__1::map"* %26 to <2 x i64>*
  %421 = load <2 x i64>, <2 x i64>* %420, align 16
  %422 = bitcast i8* %415 to <2 x i64>*
  store <2 x i64> %421, <2 x i64>* %422, align 8
  %423 = getelementptr inbounds i8, i8* %88, i64 192
  %424 = bitcast i8* %423 to i64*
  %425 = load i64, i64* %403, align 16
  store i64 %425, i64* %424, align 8
  %426 = icmp eq i64 %425, 0
  %427 = extractelement <2 x i64> %421, i32 1
  br i1 %426, label %428, label %431

428:                                              ; preds = %414
  %429 = inttoptr i64 %427 to %"class.std::__1::__tree_node"*
  %430 = bitcast i8* %415 to i8**
  store i8* %417, i8** %430, align 8
  br label %437

431:                                              ; preds = %414
  %432 = inttoptr i64 %427 to %"class.std::__1::__tree_node_base"*
  %433 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %432, i64 0, i32 2
  %434 = bitcast %"class.std::__1::__tree_end_node"** %433 to i8**
  store i8* %417, i8** %434, align 8
  %435 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %406, %"class.std::__1::__tree_end_node"** %435, align 16
  %436 = bitcast %"class.std::__1::__tree_end_node"* %406 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %436, i8 0, i64 16, i1 false) #11
  br label %437

437:                                              ; preds = %428, %431
  %438 = phi %"class.std::__1::__tree_node"* [ %429, %428 ], [ null, %431 ]
  %439 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %26, i64 0, i32 0
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree"* nonnull %439, %"class.std::__1::__tree_node"* %438) #11
  %440 = bitcast %"class.std::__1::__tree_end_node"* %94 to %"class.std::__1::__tree_node"**
  %441 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %440, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree"* nonnull %105, %"class.std::__1::__tree_node"* %441) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87)
  %442 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %442) #11
  %443 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %444 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %445 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %442, i8 0, i64 24, i1 false) #11, !alias.scope !20
  %446 = load i8, i8* %33, align 1, !noalias !20
  %447 = icmp slt i8 %446, 0
  %448 = load i64, i64* %56, align 8
  %449 = load i8*, i8** %58, align 8
  %450 = zext i8 %446 to i64
  %451 = select i1 %447, i64 %448, i64 %450
  %452 = select i1 %447, i8* %449, i8* %46
  %453 = add i64 %451, 5
  %454 = icmp ugt i64 %453, -17
  br i1 %454, label %455, label %457

455:                                              ; preds = %437
  %456 = bitcast %"class.std::__1::basic_string"* %28 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %456) #12
  unreachable

457:                                              ; preds = %437
  %458 = icmp ult i64 %453, 23
  br i1 %458, label %464, label %459

459:                                              ; preds = %457
  %460 = add nuw i64 %451, 21
  %461 = and i64 %460, -16
  %462 = call i8* @_Znwm(i64 %461) #13
  store i8* %462, i8** %443, align 8, !alias.scope !20
  %463 = or i64 %461, -9223372036854775808
  store i64 %463, i64* %445, align 8, !alias.scope !20
  store i64 %451, i64* %444, align 8, !alias.scope !20
  br label %469

464:                                              ; preds = %457
  %465 = trunc i64 %451 to i8
  %466 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %467 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %466, i64 0, i32 1, i32 0
  store i8 %465, i8* %467, align 1, !alias.scope !20
  %468 = icmp eq i64 %451, 0
  br i1 %468, label %471, label %469

469:                                              ; preds = %459, %464
  %470 = phi i8* [ %462, %459 ], [ %442, %464 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %470, i8* align 1 %452, i64 %451, i1 false) #11
  br label %471

471:                                              ; preds = %464, %469
  %472 = phi i8* [ %442, %464 ], [ %470, %469 ]
  %473 = getelementptr inbounds i8, i8* %472, i64 %451
  store i8 0, i8* %473, align 1
  %474 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5) #11
  call void @_ZN10extensions19APITypeReferenceMap7AddSpecERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_12ArgumentSpecENS1_14default_deleteISB_EEEE(%"class.extensions::APITypeReferenceMap"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %28, %"class.extensions::ArgumentSpec"* nonnull %89) #11
  %475 = bitcast %"class.std::__1::vector.58"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %475) #11
  %476 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %10, i64 0, i32 0, i32 0
  %477 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %10, i64 0, i32 0, i32 1
  %478 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %475, i8 0, i64 24, i1 false) #11
  %479 = bitcast %"class.std::__1::unique_ptr.41"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %479) #11
  %480 = call i8* @_Znwm(i64 264) #13
  %481 = bitcast i8* %480 to %"class.extensions::ArgumentSpec"*
  call void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"* nonnull %481, i32 3) #11
  %482 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %11, i64 0, i32 0, i32 0, i32 0
  %483 = bitcast %"class.std::__1::unique_ptr.41"* %11 to i8**
  store i8* %480, i8** %483, align 8
  call void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.58"* nonnull %10, %"class.std::__1::unique_ptr.41"* nonnull dereferenceable(8) %11) #11
  %484 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %482, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %482, align 8
  %485 = icmp eq %"class.extensions::ArgumentSpec"* %484, null
  br i1 %485, label %488, label %486

486:                                              ; preds = %471
  %487 = bitcast %"class.extensions::ArgumentSpec"* %484 to i8*
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %484) #11
  call void @_ZdlPv(i8* %487) #13
  br label %488

488:                                              ; preds = %486, %471
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %479) #11
  %489 = bitcast %"class.std::__1::unique_ptr.41"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %489) #11
  %490 = call i8* @_Znwm(i64 264) #13
  %491 = bitcast i8* %490 to %"class.extensions::ArgumentSpec"*
  call void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"* nonnull %491, i32 0) #11
  %492 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %12, i64 0, i32 0, i32 0, i32 0
  %493 = bitcast %"class.std::__1::unique_ptr.41"* %12 to i8**
  store i8* %490, i8** %493, align 8
  %494 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %477, align 8
  %495 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %478, align 16
  %496 = icmp ult %"class.std::__1::unique_ptr.41"* %494, %495
  br i1 %496, label %497, label %503

497:                                              ; preds = %488
  %498 = ptrtoint i8* %490 to i64
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %492, align 8
  %499 = bitcast %"class.std::__1::unique_ptr.41"* %494 to i64*
  store i64 %498, i64* %499, align 8
  %500 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %494, i64 1
  %501 = ptrtoint %"class.std::__1::unique_ptr.41"* %500 to i64
  %502 = bitcast %"class.std::__1::unique_ptr.41"** %477 to i64*
  store i64 %501, i64* %502, align 8
  br label %504

503:                                              ; preds = %488
  call void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.58"* nonnull %10, %"class.std::__1::unique_ptr.41"* nonnull dereferenceable(8) %12) #11
  br label %504

504:                                              ; preds = %503, %497
  %505 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %492, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %492, align 8
  %506 = icmp eq %"class.extensions::ArgumentSpec"* %505, null
  br i1 %506, label %509, label %507

507:                                              ; preds = %504
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %505) #11
  %508 = bitcast %"class.extensions::ArgumentSpec"* %505 to i8*
  call void @_ZdlPv(i8* %508) #13
  br label %509

509:                                              ; preds = %507, %504
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %489) #11
  %510 = bitcast %"class.std::__1::unique_ptr.41"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %510) #11
  %511 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %13, i64 0, i32 0, i32 0, i32 0
  %512 = call i8* @_Znwm(i64 264) #13
  %513 = bitcast i8* %512 to %"class.extensions::ArgumentSpec"*
  call void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"* nonnull %513, i32 5) #11
  %514 = bitcast %"class.std::__1::unique_ptr.41"* %13 to i8**
  store i8* %512, i8** %514, align 8
  %515 = call i8* @_Znwm(i64 264) #13
  %516 = bitcast i8* %515 to %"class.extensions::ArgumentSpec"*
  call void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"* nonnull %516, i32 9) #11
  %517 = ptrtoint i8* %515 to i64
  %518 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %519 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %518, i64 0, i32 1, i32 0
  %520 = load i8, i8* %519, align 1
  %521 = icmp slt i8 %520, 0
  %522 = load i8*, i8** %443, align 8
  %523 = select i1 %521, i8* %522, i8* %442
  %524 = load i64, i64* %444, align 8
  %525 = zext i8 %520 to i64
  %526 = select i1 %521, i64 %524, i64 %525
  %527 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %527) #11
  %528 = icmp ugt i64 %526, -17
  br i1 %528, label %529, label %531

529:                                              ; preds = %509
  %530 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %530) #12
  unreachable

531:                                              ; preds = %509
  %532 = icmp ult i64 %526, 23
  br i1 %532, label %541, label %533

533:                                              ; preds = %531
  %534 = add nuw i64 %526, 16
  %535 = and i64 %534, -16
  %536 = call i8* @_Znwm(i64 %535) #13
  %537 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %536, i8** %537, align 8, !alias.scope !23
  %538 = or i64 %535, -9223372036854775808
  %539 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %538, i64* %539, align 8, !alias.scope !23
  %540 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %526, i64* %540, align 8, !alias.scope !23
  br label %546

541:                                              ; preds = %531
  %542 = trunc i64 %526 to i8
  %543 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %544 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %543, i64 0, i32 1, i32 0
  store i8 %542, i8* %544, align 1, !alias.scope !23
  %545 = icmp eq i64 %526, 0
  br i1 %545, label %548, label %546

546:                                              ; preds = %541, %533
  %547 = phi i8* [ %536, %533 ], [ %527, %541 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %547, i8* align 1 %523, i64 %526, i1 false) #11
  br label %548

548:                                              ; preds = %546, %541
  %549 = phi i8* [ %527, %541 ], [ %547, %546 ]
  %550 = getelementptr inbounds i8, i8* %549, i64 %526
  store i8 0, i8* %550, align 1
  %551 = getelementptr inbounds i8, i8* %515, i64 64
  %552 = load i8, i8* %551, align 8, !range !26
  %553 = icmp eq i8 %552, 0
  %554 = getelementptr inbounds i8, i8* %515, i64 72
  br i1 %553, label %567, label %555

555:                                              ; preds = %548
  %556 = getelementptr inbounds i8, i8* %515, i64 95
  %557 = load i8, i8* %556, align 1
  %558 = icmp slt i8 %557, 0
  br i1 %558, label %559, label %563

559:                                              ; preds = %555
  %560 = bitcast i8* %554 to i8**
  %561 = load i8*, i8** %560, align 8
  call void @_ZdlPv(i8* %561) #13
  %562 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %511, align 8
  br label %563

563:                                              ; preds = %559, %555
  %564 = phi %"class.extensions::ArgumentSpec"* [ %562, %559 ], [ %513, %555 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %554, i8* nonnull align 8 %527, i64 24, i1 false) #11
  %565 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %566 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %565, i64 0, i32 1, i32 0
  store i8 0, i8* %566, align 1
  store i8 0, i8* %527, align 8
  br label %568

567:                                              ; preds = %548
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %554, i8* nonnull align 8 %527, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %527, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %551, align 8
  br label %568

568:                                              ; preds = %567, %563
  %569 = phi %"class.extensions::ArgumentSpec"* [ %564, %563 ], [ %513, %567 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %527) #11
  %570 = getelementptr inbounds %"class.extensions::ArgumentSpec", %"class.extensions::ArgumentSpec"* %569, i64 0, i32 13
  %571 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %570, i64 0, i32 0, i32 0, i32 0
  %572 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %571, align 8
  %573 = bitcast %"class.std::__1::unique_ptr.41"* %570 to i64*
  store i64 %517, i64* %573, align 8
  %574 = icmp eq %"class.extensions::ArgumentSpec"* %572, null
  br i1 %574, label %577, label %575

575:                                              ; preds = %568
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %572) #11
  %576 = bitcast %"class.extensions::ArgumentSpec"* %572 to i8*
  call void @_ZdlPv(i8* %576) #13
  br label %577

577:                                              ; preds = %575, %568
  %578 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %477, align 8
  %579 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %478, align 16
  %580 = icmp ult %"class.std::__1::unique_ptr.41"* %578, %579
  br i1 %580, label %581, label %588

581:                                              ; preds = %577
  %582 = bitcast %"class.std::__1::unique_ptr.41"* %13 to i64*
  %583 = load i64, i64* %582, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %511, align 8
  %584 = bitcast %"class.std::__1::unique_ptr.41"* %578 to i64*
  store i64 %583, i64* %584, align 8
  %585 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %578, i64 1
  %586 = ptrtoint %"class.std::__1::unique_ptr.41"* %585 to i64
  %587 = bitcast %"class.std::__1::unique_ptr.41"** %477 to i64*
  store i64 %586, i64* %587, align 8
  br label %589

588:                                              ; preds = %577
  call void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.58"* nonnull %10, %"class.std::__1::unique_ptr.41"* nonnull dereferenceable(8) %13) #11
  br label %589

589:                                              ; preds = %588, %581
  %590 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %511, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %511, align 8
  %591 = icmp eq %"class.extensions::ArgumentSpec"* %590, null
  br i1 %591, label %594, label %592

592:                                              ; preds = %589
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %590) #11
  %593 = bitcast %"class.extensions::ArgumentSpec"* %590 to i8*
  call void @_ZdlPv(i8* %593) #13
  br label %594

594:                                              ; preds = %592, %589
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %510) #11
  %595 = bitcast %"class.std::__1::unique_ptr.41"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %595) #11
  %596 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %14, i64 0, i32 0, i32 0, i32 0
  %597 = call i8* @_Znwm(i64 264) #13
  %598 = bitcast i8* %597 to %"class.extensions::ArgumentSpec"*
  call void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"* nonnull %598, i32 7) #11
  %599 = bitcast %"class.std::__1::unique_ptr.41"* %14 to i8**
  store i8* %597, i8** %599, align 8
  %600 = getelementptr inbounds i8, i8* %597, i64 56
  store i8 1, i8* %600, align 8
  %601 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %477, align 8
  %602 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %478, align 16
  %603 = icmp ult %"class.std::__1::unique_ptr.41"* %601, %602
  br i1 %603, label %604, label %610

604:                                              ; preds = %594
  %605 = ptrtoint i8* %597 to i64
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %596, align 8
  %606 = bitcast %"class.std::__1::unique_ptr.41"* %601 to i64*
  store i64 %605, i64* %606, align 8
  %607 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %601, i64 1
  %608 = ptrtoint %"class.std::__1::unique_ptr.41"* %607 to i64
  %609 = bitcast %"class.std::__1::unique_ptr.41"** %477 to i64*
  store i64 %608, i64* %609, align 8
  br label %611

610:                                              ; preds = %594
  call void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.58"* nonnull %10, %"class.std::__1::unique_ptr.41"* nonnull dereferenceable(8) %14) #11
  br label %611

611:                                              ; preds = %610, %604
  %612 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %596, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %596, align 8
  %613 = icmp eq %"class.extensions::ArgumentSpec"* %612, null
  br i1 %613, label %616, label %614

614:                                              ; preds = %611
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %612) #11
  %615 = bitcast %"class.extensions::ArgumentSpec"* %612 to i8*
  call void @_ZdlPv(i8* %615) #13
  br label %616

616:                                              ; preds = %614, %611
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %595) #11
  %617 = bitcast %"class.std::__1::vector.58"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %617) #11
  %618 = call i8* @_Znwm(i64 72) #13
  %619 = bitcast i8* %618 to %"class.extensions::APISignature"*
  %620 = bitcast %"class.std::__1::vector.58"* %10 to <2 x i64>*
  %621 = load <2 x i64>, <2 x i64>* %620, align 16
  %622 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %8, i64 0, i32 0, i32 1
  %623 = bitcast %"class.std::__1::vector.58"* %8 to <2 x i64>*
  store <2 x i64> %621, <2 x i64>* %623, align 16
  %624 = bitcast %"class.std::__1::unique_ptr.41"** %478 to i64*
  %625 = load i64, i64* %624, align 16
  %626 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %627 = bitcast %"class.std::__1::unique_ptr.41"** %626 to i64*
  store i64 %625, i64* %627, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %475, i8 0, i64 24, i1 false) #11
  call void @_ZN10extensions12APISignatureC1ENSt3__16vectorINS1_10unique_ptrINS_12ArgumentSpecENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"class.extensions::APISignature"* nonnull %619, %"class.std::__1::vector.58"* nonnull %8) #11
  %628 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %8, i64 0, i32 0, i32 0
  %629 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %628, align 16
  %630 = icmp eq %"class.std::__1::unique_ptr.41"* %629, null
  br i1 %630, label %650, label %631

631:                                              ; preds = %616
  %632 = bitcast %"class.std::__1::unique_ptr.41"* %629 to i8*
  %633 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %622, align 8
  %634 = icmp eq %"class.std::__1::unique_ptr.41"* %633, %629
  br i1 %634, label %648, label %635

635:                                              ; preds = %631, %643
  %636 = phi %"class.std::__1::unique_ptr.41"* [ %637, %643 ], [ %633, %631 ]
  %637 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %636, i64 -1
  %638 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %637, i64 0, i32 0, i32 0, i32 0
  %639 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %638, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %638, align 8
  %640 = icmp eq %"class.extensions::ArgumentSpec"* %639, null
  br i1 %640, label %643, label %641

641:                                              ; preds = %635
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %639) #11
  %642 = bitcast %"class.extensions::ArgumentSpec"* %639 to i8*
  call void @_ZdlPv(i8* %642) #13
  br label %643

643:                                              ; preds = %641, %635
  %644 = icmp eq %"class.std::__1::unique_ptr.41"* %637, %629
  br i1 %644, label %645, label %635

645:                                              ; preds = %643
  %646 = bitcast %"class.std::__1::vector.58"* %8 to i8**
  %647 = load i8*, i8** %646, align 16
  br label %648

648:                                              ; preds = %645, %631
  %649 = phi i8* [ %647, %645 ], [ %632, %631 ]
  store %"class.std::__1::unique_ptr.41"* %629, %"class.std::__1::unique_ptr.41"** %622, align 8
  call void @_ZdlPv(i8* %649) #13
  br label %650

650:                                              ; preds = %648, %616
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %617) #11
  %651 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %476, align 16
  %652 = icmp eq %"class.std::__1::unique_ptr.41"* %651, null
  br i1 %652, label %672, label %653

653:                                              ; preds = %650
  %654 = bitcast %"class.std::__1::unique_ptr.41"* %651 to i8*
  %655 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %477, align 8
  %656 = icmp eq %"class.std::__1::unique_ptr.41"* %655, %651
  br i1 %656, label %670, label %657

657:                                              ; preds = %653, %665
  %658 = phi %"class.std::__1::unique_ptr.41"* [ %659, %665 ], [ %655, %653 ]
  %659 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %658, i64 -1
  %660 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %659, i64 0, i32 0, i32 0, i32 0
  %661 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %660, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %660, align 8
  %662 = icmp eq %"class.extensions::ArgumentSpec"* %661, null
  br i1 %662, label %665, label %663

663:                                              ; preds = %657
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %661) #11
  %664 = bitcast %"class.extensions::ArgumentSpec"* %661 to i8*
  call void @_ZdlPv(i8* %664) #13
  br label %665

665:                                              ; preds = %663, %657
  %666 = icmp eq %"class.std::__1::unique_ptr.41"* %659, %651
  br i1 %666, label %667, label %657

667:                                              ; preds = %665
  %668 = bitcast %"class.std::__1::vector.58"* %10 to i8**
  %669 = load i8*, i8** %668, align 16
  br label %670

670:                                              ; preds = %667, %653
  %671 = phi i8* [ %669, %667 ], [ %654, %653 ]
  store %"class.std::__1::unique_ptr.41"* %651, %"class.std::__1::unique_ptr.41"** %477, align 8
  call void @_ZdlPv(i8* %671) #13
  br label %672

672:                                              ; preds = %670, %650
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %475) #11
  call void @_ZN10extensions19APITypeReferenceMap22AddTypeMethodSignatureERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_12APISignatureENS1_14default_deleteISB_EEEE(%"class.extensions::APITypeReferenceMap"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %27, %"class.extensions::APISignature"* nonnull %619) #11
  %673 = load i8, i8* %519, align 1
  %674 = icmp slt i8 %673, 0
  br i1 %674, label %675, label %677

675:                                              ; preds = %672
  %676 = load i8*, i8** %443, align 8
  call void @_ZdlPv(i8* %676) #13
  br label %677

677:                                              ; preds = %675, %672
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %442) #11
  br label %678

678:                                              ; preds = %677, %81
  %679 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %680 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %679, i64 0, i32 1, i32 0
  %681 = load i8, i8* %680, align 1
  %682 = icmp slt i8 %681, 0
  br i1 %682, label %683, label %685

683:                                              ; preds = %678
  %684 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %684) #13
  br label %685

685:                                              ; preds = %678, %683
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK10extensions19APITypeReferenceMap22HasTypeMethodSignatureERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::APITypeReferenceMap"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN10extensions19APITypeReferenceMap7AddSpecERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_12ArgumentSpecENS1_14default_deleteISB_EEEE(%"class.extensions::APITypeReferenceMap"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.extensions::ArgumentSpec"*) local_unnamed_addr #2

declare void @_ZN10extensions19APITypeReferenceMap22AddTypeMethodSignatureERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_12APISignatureENS1_14default_deleteISB_EEEE(%"class.extensions::APITypeReferenceMap"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.extensions::APISignature"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16DeclarativeEventD2Ev(%"class.extensions::DeclarativeEvent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10extensions16DeclarativeEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gin13WrappableBaseD2Ev(%"class.gin::WrappableBase"* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16DeclarativeEventD0Ev(%"class.extensions::DeclarativeEvent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10extensions16DeclarativeEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gin13WrappableBaseD2Ev(%"class.gin::WrappableBase"* %12) #11
  %13 = bitcast %"class.extensions::DeclarativeEvent"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16DeclarativeEvent24GetObjectTemplateBuilderEPN2v87IsolateE(%"class.gin::ObjectTemplateBuilder"* noalias sret, %"class.extensions::DeclarativeEvent"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.gin::ObjectTemplateBuilder", align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to { i64, i64 }*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to { i64, i64 }*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to { i64, i64 }*
  %11 = bitcast %"class.gin::ObjectTemplateBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %1, i64 0, i32 0, i32 0
  call void @_ZN3gin13WrappableBase24GetObjectTemplateBuilderEPN2v87IsolateE(%"class.gin::ObjectTemplateBuilder"* nonnull sret %4, %"class.gin::WrappableBase"* %12, %"class.v8::Isolate"* %2) #11
  %13 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  store <2 x i64> <i64 ptrtoint (void (%"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*)* @_ZN10extensions16DeclarativeEvent8AddRulesEPN3gin9ArgumentsE to i64), i64 0>, <2 x i64>* %5, align 16
  %14 = call dereferenceable(24) %"class.gin::ObjectTemplateBuilder"* @_ZN3gin21ObjectTemplateBuilder9SetMethodIMN10extensions16DeclarativeEventEFvPNS_9ArgumentsEEEERS0_RKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKT_(%"class.gin::ObjectTemplateBuilder"* nonnull %4, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp, { i64, i64 }* nonnull dereferenceable(16) %6)
  %15 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  store <2 x i64> <i64 ptrtoint (void (%"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*)* @_ZN10extensions16DeclarativeEvent11RemoveRulesEPN3gin9ArgumentsE to i64), i64 0>, <2 x i64>* %7, align 16
  %16 = call dereferenceable(24) %"class.gin::ObjectTemplateBuilder"* @_ZN3gin21ObjectTemplateBuilder9SetMethodIMN10extensions16DeclarativeEventEFvPNS_9ArgumentsEEEERS0_RKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKT_(%"class.gin::ObjectTemplateBuilder"* %14, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp.4, { i64, i64 }* nonnull dereferenceable(16) %8)
  %17 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  store <2 x i64> <i64 ptrtoint (void (%"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*)* @_ZN10extensions16DeclarativeEvent8GetRulesEPN3gin9ArgumentsE to i64), i64 0>, <2 x i64>* %9, align 16
  %18 = call dereferenceable(24) %"class.gin::ObjectTemplateBuilder"* @_ZN3gin21ObjectTemplateBuilder9SetMethodIMN10extensions16DeclarativeEventEFvPNS_9ArgumentsEEEERS0_RKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKT_(%"class.gin::ObjectTemplateBuilder"* %16, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp.6, { i64, i64 }* nonnull dereferenceable(16) %10)
  call void @_ZN3gin21ObjectTemplateBuilderC1ERKS0_(%"class.gin::ObjectTemplateBuilder"* %0, %"class.gin::ObjectTemplateBuilder"* dereferenceable(24) %18) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  call void @_ZN3gin21ObjectTemplateBuilderD1Ev(%"class.gin::ObjectTemplateBuilder"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  ret void
}

declare void @_ZN3gin13WrappableBase24GetObjectTemplateBuilderEPN2v87IsolateE(%"class.gin::ObjectTemplateBuilder"* sret, %"class.gin::WrappableBase"*, %"class.v8::Isolate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.gin::ObjectTemplateBuilder"* @_ZN3gin21ObjectTemplateBuilder9SetMethodIMN10extensions16DeclarativeEventEFvPNS_9ArgumentsEEEERS0_RKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKT_(%"class.gin::ObjectTemplateBuilder"*, %"class.base::BasicStringPiece"* dereferenceable(16), { i64, i64 }* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.base::RepeatingCallback.141", align 8
  %5 = alloca %"class.base::RepeatingCallback.141", align 8
  %6 = getelementptr inbounds %"class.gin::ObjectTemplateBuilder", %"class.gin::ObjectTemplateBuilder"* %0, i64 0, i32 0
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = getelementptr inbounds %"class.gin::ObjectTemplateBuilder", %"class.gin::ObjectTemplateBuilder"* %0, i64 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::RepeatingCallback.141"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = tail call i8* @_Znwm(i64 56) #13, !noalias !27
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions16DeclarativeEventEFvPN3gin9ArgumentsEEJEEEFvPS4_S7_EE3RunEPNS0_13BindStateBaseESB_S7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN10extensions16DeclarativeEventEFvPN3gin9ArgumentsEEJEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !27
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %17, align 8, !noalias !27
  %18 = bitcast %"class.base::RepeatingCallback.141"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = tail call i8* @_Znwm(i64 40) #13
  %20 = getelementptr inbounds %"class.base::RepeatingCallback.141", %"class.base::RepeatingCallback.141"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = ptrtoint i8* %14 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %22 = bitcast i8* %19 to %"class.gin::internal::CallbackHolderBase"*
  tail call void @_ZN3gin8internal18CallbackHolderBaseC2EPN2v87IsolateE(%"class.gin::internal::CallbackHolderBase"* nonnull %22, %"class.v8::Isolate"* %7) #11
  %23 = bitcast i8* %19 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3gin8internal14CallbackHolderIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %19, i64 16
  %25 = getelementptr inbounds %"class.base::RepeatingCallback.141", %"class.base::RepeatingCallback.141"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast i8* %24 to i64*
  store i64 %21, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %27 = getelementptr inbounds i8, i8* %19, i64 24
  store i8 1, i8* %27, align 8
  %28 = getelementptr inbounds i8, i8* %19, i64 32
  %29 = bitcast i8* %28 to i64*
  store i64 %12, i64* %29, align 8
  %30 = getelementptr inbounds %"class.base::RepeatingCallback.141", %"class.base::RepeatingCallback.141"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #11
  %31 = call %"class.v8::External"* @_ZN3gin8internal18CallbackHolderBase9GetHandleEPN2v87IsolateE(%"class.gin::internal::CallbackHolderBase"* nonnull %22, %"class.v8::Isolate"* %7) #11
  %32 = call %"class.v8::Value"* @_ZN3gin9ConverterIN2v85LocalINS1_8ExternalEEEvE4ToV8EPNS1_7IsolateES4_(%"class.v8::Isolate"* %7, %"class.v8::External"* %31) #11
  %33 = call %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"* %7, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN3gin8internal10DispatcherIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEE18DispatchToCallbackERKN2v820FunctionCallbackInfoINS9_5ValueEEE, %"class.v8::Value"* %32, %"class.v8::Signature"* null, i32 0, i32 0, i32 0, %"class.v8::CFunction"* null) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %34 = getelementptr inbounds %"class.base::RepeatingCallback.141", %"class.base::RepeatingCallback.141"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  %35 = bitcast %"class.v8::FunctionTemplate"* %33 to %"class.v8::Data"*
  %36 = call dereferenceable(24) %"class.gin::ObjectTemplateBuilder"* @_ZN3gin21ObjectTemplateBuilder7SetImplERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEN2v85LocalINS9_4DataEEE(%"class.gin::ObjectTemplateBuilder"* %0, %"class.base::BasicStringPiece"* dereferenceable(16) %1, %"class.v8::Data"* %35) #11
  ret %"class.gin::ObjectTemplateBuilder"* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16DeclarativeEvent8AddRulesEPN3gin9ArgumentsE(%"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*) #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #11, !alias.scope !32
  %10 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1, !noalias !32
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8, !noalias !32
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8, !noalias !32
  br label %22

19:                                               ; preds = %2
  %20 = zext i8 %12 to i64
  %21 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  br label %22

22:                                               ; preds = %19, %14
  %23 = phi i64 [ %16, %14 ], [ %20, %19 ]
  %24 = phi i8* [ %18, %14 ], [ %21, %19 ]
  %25 = add i64 %23, 9
  %26 = icmp ugt i64 %25, -17
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %28) #12
  unreachable

29:                                               ; preds = %22
  %30 = icmp ult i64 %25, 23
  br i1 %30, label %36, label %31

31:                                               ; preds = %29
  %32 = add nuw i64 %23, 25
  %33 = and i64 %32, -16
  %34 = tail call i8* @_Znwm(i64 %33) #13
  store i8* %34, i8** %7, align 8, !alias.scope !32
  %35 = or i64 %33, -9223372036854775808
  store i64 %35, i64* %9, align 8, !alias.scope !32
  store i64 %23, i64* %8, align 8, !alias.scope !32
  br label %41

36:                                               ; preds = %29
  %37 = trunc i64 %23 to i8
  %38 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  store i8 %37, i8* %39, align 1, !alias.scope !32
  %40 = icmp eq i64 %23, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %31, %36
  %42 = phi i8* [ %34, %31 ], [ %5, %36 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* align 1 %24, i64 %23, i1 false) #11
  br label %43

43:                                               ; preds = %36, %41
  %44 = phi i8* [ %5, %36 ], [ %42, %41 ]
  %45 = getelementptr inbounds i8, i8* %44, i64 %23
  store i8 0, i8* %45, align 1
  %46 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 9) #11
  %47 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #11
  %48 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  store i8 15, i8* %49, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i64 15, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %47, i64 15
  store i8 0, i8* %50, align 1
  call void @_ZN10extensions16DeclarativeEvent14HandleFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PN3gin9ArgumentsE(%"class.extensions::DeclarativeEvent"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.gin::Arguments"* %1)
  %51 = load i8, i8* %49, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %43
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #13
  br label %56

56:                                               ; preds = %43, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #11
  %57 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %62) #13
  br label %63

63:                                               ; preds = %56, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16DeclarativeEvent11RemoveRulesEPN3gin9ArgumentsE(%"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*) #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = tail call i8* @_Znwm(i64 32) #13
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %6, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i64 24, i1 false) #11
  %10 = getelementptr inbounds i8, i8* %6, i64 24
  store i8 0, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  store i8 18, i8* %13, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i64 18, i1 false) #11
  %14 = getelementptr inbounds i8, i8* %11, i64 18
  store i8 0, i8* %14, align 2
  call void @_ZN10extensions16DeclarativeEvent14HandleFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PN3gin9ArgumentsE(%"class.extensions::DeclarativeEvent"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.gin::Arguments"* %1)
  %15 = load i8, i8* %13, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %2, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %21 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %20, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16DeclarativeEvent8GetRulesEPN3gin9ArgumentsE(%"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*) #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  store i8 21, i8* %7, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0), i64 21, i1 false) #11
  %8 = getelementptr inbounds i8, i8* %5, i64 21
  store i8 0, i8* %8, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 15, i8* %11, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i64 15, i1 false) #11
  %12 = getelementptr inbounds i8, i8* %9, i64 15
  store i8 0, i8* %12, align 1
  call void @_ZN10extensions16DeclarativeEvent14HandleFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PN3gin9ArgumentsE(%"class.extensions::DeclarativeEvent"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.gin::Arguments"* %1)
  %13 = load i8, i8* %11, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %2, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  %19 = load i8, i8* %7, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #13
  br label %24

24:                                               ; preds = %18, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret void
}

declare void @_ZN3gin21ObjectTemplateBuilderC1ERKS0_(%"class.gin::ObjectTemplateBuilder"*, %"class.gin::ObjectTemplateBuilder"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gin21ObjectTemplateBuilderD1Ev(%"class.gin::ObjectTemplateBuilder"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN10extensions16DeclarativeEvent11GetTypeNameEv(%"class.extensions::DeclarativeEvent"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions16DeclarativeEvent14HandleFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PN3gin9ArgumentsE(%"class.extensions::DeclarativeEvent"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.gin::Arguments"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::HandleScope", align 8
  %6 = alloca %"class.std::__1::vector.80", align 8
  %7 = alloca [2 x %"class.v8::Local.82"], align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca %"struct.extensions::APISignature::JSONParseResult", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %3, i64 0, i32 0
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = bitcast %"class.v8::HandleScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  %14 = bitcast %"class.v8::HandleScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %5, %"class.v8::Isolate"* %12) #11
  %15 = call %"class.v8::Context"* @_ZNK3gin9Arguments24GetHolderCreationContextEv(%"class.gin::Arguments"* %3) #11
  %16 = bitcast %"class.std::__1::vector.80"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %6, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %6, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::vector.80"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call void @_ZNK3gin9Arguments6GetAllEv(%"class.std::__1::vector.80"* nonnull sret %6, %"class.gin::Arguments"* %3) #11
  %20 = load %"class.v8::Local.82"*, %"class.v8::Local.82"** %17, align 8
  %21 = bitcast [2 x %"class.v8::Local.82"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #11
  %22 = getelementptr inbounds [2 x %"class.v8::Local.82"], [2 x %"class.v8::Local.82"]* %7, i64 0, i64 0
  %23 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %33 = select i1 %29, i8* %31, i8* %32
  store i8* %33, i8** %25, align 8
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  %35 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %28 to i64
  %38 = select i1 %29, i64 %36, i64 %37
  store i64 %38, i64* %34, align 8
  %39 = call %"class.v8::String"* @_ZN3gin14StringToSymbolEPN2v87IsolateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.v8::Isolate"* %12, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %8) #11
  %40 = bitcast [2 x %"class.v8::Local.82"]* %7 to %"class.v8::String"**
  store %"class.v8::String"* %39, %"class.v8::String"** %40, align 8
  %41 = getelementptr inbounds [2 x %"class.v8::Local.82"], [2 x %"class.v8::Local.82"]* %7, i64 0, i64 1
  %42 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %12, i32 %43) #11
  %45 = bitcast %"class.v8::Local.82"* %41 to %"class.v8::Integer"**
  store %"class.v8::Integer"* %44, %"class.v8::Integer"** %45, align 8
  %46 = getelementptr inbounds [2 x %"class.v8::Local.82"], [2 x %"class.v8::Local.82"]* %7, i64 0, i64 2
  %47 = call %"class.v8::Local.82"* @_ZNSt3__16vectorIN2v85LocalINS1_5ValueEEENS_9allocatorIS4_EEE6insertIPKS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISC_E9referenceEEE5valueENS_11__wrap_iterIPS4_EEE4typeENSG_ISA_EESC_SC_(%"class.std::__1::vector.80"* nonnull %6, %"class.v8::Local.82"* %20, %"class.v8::Local.82"* nonnull %22, %"class.v8::Local.82"* %46) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  %48 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 2
  %49 = load %"class.extensions::APITypeReferenceMap"*, %"class.extensions::APITypeReferenceMap"** %48, align 8
  %50 = call %"class.extensions::APISignature"* @_ZNK10extensions19APITypeReferenceMap22GetTypeMethodSignatureERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::APITypeReferenceMap"* %49, %"class.std::__1::basic_string"* dereferenceable(24) %1) #11
  %51 = bitcast %"struct.extensions::APISignature::JSONParseResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %51) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 56, i1 false)
  %52 = load %"class.extensions::APITypeReferenceMap"*, %"class.extensions::APITypeReferenceMap"** %48, align 8
  call void @_ZNK10extensions12APISignature20ParseArgumentsToJSONEN2v85LocalINS1_7ContextEEERKNSt3__16vectorINS2_INS1_5ValueEEENS5_9allocatorIS8_EEEERKNS_19APITypeReferenceMapE(%"struct.extensions::APISignature::JSONParseResult"* nonnull sret %9, %"class.extensions::APISignature"* %50, %"class.v8::Context"* %15, %"class.std::__1::vector.80"* nonnull dereferenceable(24) %6, %"class.extensions::APITypeReferenceMap"* dereferenceable(128) %52) #11
  %53 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.base::Value"*, %"class.base::Value"** %53, align 8
  %55 = icmp eq %"class.base::Value"* %54, null
  br i1 %55, label %56, label %67

56:                                               ; preds = %4
  %57 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #11
  %58 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  store i8 18, i8* %59, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), i64 18, i1 false) #11
  %60 = getelementptr inbounds i8, i8* %57, i64 18
  store i8 0, i8* %60, align 2
  call void @_ZNK3gin9Arguments14ThrowTypeErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gin::Arguments"* %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #11
  %61 = load i8, i8* %59, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %56, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #11
  br label %73

67:                                               ; preds = %4
  %68 = getelementptr inbounds %"class.extensions::DeclarativeEvent", %"class.extensions::DeclarativeEvent"* %0, i64 0, i32 3
  %69 = load %"class.extensions::APIRequestHandler"*, %"class.extensions::APIRequestHandler"** %68, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %53, align 8
  %70 = getelementptr inbounds %"struct.extensions::APISignature::JSONParseResult", %"struct.extensions::APISignature::JSONParseResult"* %9, i64 0, i32 1, i32 0
  %71 = load %"class.v8::Function"*, %"class.v8::Function"** %70, align 8
  %72 = call i32 @_ZN10extensions17APIRequestHandler12StartRequestEN2v85LocalINS1_7ContextEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_10unique_ptrIN4base5ValueENS5_14default_deleteISG_EEEENS2_INS1_8FunctionEEESL_(%"class.extensions::APIRequestHandler"* %69, %"class.v8::Context"* %15, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.base::Value"* nonnull %54, %"class.v8::Function"* %71, %"class.v8::Function"* null) #11
  br label %73

73:                                               ; preds = %67, %66
  call void @_ZN10extensions12APISignature15JSONParseResultD1Ev(%"struct.extensions::APISignature::JSONParseResult"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %51) #11
  %74 = load %"class.v8::Local.82"*, %"class.v8::Local.82"** %17, align 8
  %75 = icmp eq %"class.v8::Local.82"* %74, null
  br i1 %75, label %80, label %76

76:                                               ; preds = %73
  %77 = ptrtoint %"class.v8::Local.82"* %74 to i64
  %78 = bitcast %"class.v8::Local.82"** %18 to i64*
  store i64 %77, i64* %78, align 8
  %79 = bitcast %"class.v8::Local.82"* %74 to i8*
  call void @_ZdlPv(i8* %79) #13
  br label %80

80:                                               ; preds = %73, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  ret void
}

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Context"* @_ZNK3gin9Arguments24GetHolderCreationContextEv(%"class.gin::Arguments"*) local_unnamed_addr #2

declare void @_ZNK3gin9Arguments6GetAllEv(%"class.std::__1::vector.80"* sret, %"class.gin::Arguments"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN3gin14StringToSymbolEPN2v87IsolateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.v8::Isolate"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare %"class.extensions::APISignature"* @_ZNK10extensions19APITypeReferenceMap22GetTypeMethodSignatureERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::APITypeReferenceMap"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK10extensions12APISignature20ParseArgumentsToJSONEN2v85LocalINS1_7ContextEEERKNSt3__16vectorINS2_INS1_5ValueEEENS5_9allocatorIS8_EEEERKNS_19APITypeReferenceMapE(%"struct.extensions::APISignature::JSONParseResult"* sret, %"class.extensions::APISignature"*, %"class.v8::Context"*, %"class.std::__1::vector.80"* dereferenceable(24), %"class.extensions::APITypeReferenceMap"* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK3gin9Arguments14ThrowTypeErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gin::Arguments"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare i32 @_ZN10extensions17APIRequestHandler12StartRequestEN2v85LocalINS1_7ContextEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS5_10unique_ptrIN4base5ValueENS5_14default_deleteISG_EEEENS2_INS1_8FunctionEEESL_(%"class.extensions::APIRequestHandler"*, %"class.v8::Context"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"*, %"class.v8::Function"*, %"class.v8::Function"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10extensions12APISignature15JSONParseResultD1Ev(%"struct.extensions::APISignature::JSONParseResult"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #4

declare void @_ZN3gin13WrappableBaseC2Ev(%"class.gin::WrappableBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gin13WrappableBaseD2Ev(%"class.gin::WrappableBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.extensions::ArgumentSpec"* @_ZN10extensions12_GLOBAL__N_116BuildChoicesSpecERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::vector.58", align 8
  %4 = alloca %"class.std::__1::unique_ptr.41", align 8
  %5 = tail call i8* @_Znwm(i64 264) #13
  %6 = bitcast i8* %5 to %"class.extensions::ArgumentSpec"*
  tail call void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"* nonnull %6, i32 10) #11
  %7 = bitcast %"class.std::__1::vector.58"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %3, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #11
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = sdiv exact i64 %16, 24
  call void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE7reserveEm(%"class.std::__1::vector.58"* nonnull %3, i64 %17)
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %19 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %21 = icmp eq %"class.std::__1::basic_string"* %19, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %1
  %23 = bitcast %"class.std::__1::unique_ptr.41"** %9 to i64*
  br label %36

24:                                               ; preds = %1
  %25 = bitcast %"class.std::__1::unique_ptr.41"* %4 to i8*
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %4, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::unique_ptr.41"* %4 to i8**
  %28 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = bitcast %"class.std::__1::unique_ptr.41"* %4 to i64*
  %35 = bitcast %"class.std::__1::unique_ptr.41"** %9 to i64*
  br label %101

36:                                               ; preds = %163, %22
  %37 = phi i64* [ %23, %22 ], [ %35, %163 ]
  %38 = bitcast %"class.std::__1::vector.58"* %3 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = load i64, i64* %37, align 8
  %41 = bitcast %"class.std::__1::unique_ptr.41"** %10 to i64*
  %42 = load i64, i64* %41, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #11
  %43 = getelementptr inbounds i8, i8* %5, i64 208
  %44 = bitcast i8* %43 to %"class.std::__1::unique_ptr.41"**
  %45 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %44, align 8
  %46 = icmp eq %"class.std::__1::unique_ptr.41"* %45, null
  br i1 %46, label %47, label %53

47:                                               ; preds = %36
  %48 = bitcast i8* %43 to i64*
  store i64 %39, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %5, i64 216
  %50 = bitcast i8* %49 to i64*
  store i64 %40, i64* %50, align 8
  %51 = getelementptr inbounds i8, i8* %5, i64 224
  %52 = bitcast i8* %51 to i64*
  store i64 %42, i64* %52, align 8
  br label %100

53:                                               ; preds = %36
  %54 = bitcast %"class.std::__1::unique_ptr.41"* %45 to i8*
  %55 = getelementptr inbounds i8, i8* %5, i64 216
  %56 = bitcast i8* %55 to %"class.std::__1::unique_ptr.41"**
  %57 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %56, align 8
  %58 = icmp eq %"class.std::__1::unique_ptr.41"* %57, %45
  br i1 %58, label %72, label %59

59:                                               ; preds = %53, %67
  %60 = phi %"class.std::__1::unique_ptr.41"* [ %61, %67 ], [ %57, %53 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %60, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %62, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %62, align 8
  %64 = icmp eq %"class.extensions::ArgumentSpec"* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %59
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %63) #11
  %66 = bitcast %"class.extensions::ArgumentSpec"* %63 to i8*
  call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %65, %59
  %68 = icmp eq %"class.std::__1::unique_ptr.41"* %61, %45
  br i1 %68, label %69, label %59

69:                                               ; preds = %67
  %70 = bitcast i8* %43 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %53, %69
  %73 = phi i8* [ %71, %69 ], [ %54, %53 ]
  store %"class.std::__1::unique_ptr.41"* %45, %"class.std::__1::unique_ptr.41"** %56, align 8
  call void @_ZdlPv(i8* %73) #13
  %74 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %8, align 8
  %75 = bitcast i8* %43 to i64*
  store i64 %39, i64* %75, align 8
  %76 = getelementptr inbounds i8, i8* %5, i64 216
  %77 = bitcast i8* %76 to i64*
  store i64 %40, i64* %77, align 8
  %78 = getelementptr inbounds i8, i8* %5, i64 224
  %79 = bitcast i8* %78 to i64*
  store i64 %42, i64* %79, align 8
  %80 = icmp eq %"class.std::__1::unique_ptr.41"* %74, null
  br i1 %80, label %100, label %81

81:                                               ; preds = %72
  %82 = bitcast %"class.std::__1::unique_ptr.41"* %74 to i8*
  %83 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %9, align 8
  %84 = icmp eq %"class.std::__1::unique_ptr.41"* %83, %74
  br i1 %84, label %98, label %85

85:                                               ; preds = %81, %93
  %86 = phi %"class.std::__1::unique_ptr.41"* [ %87, %93 ], [ %83, %81 ]
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %86, i64 -1
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %88, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %88, align 8
  %90 = icmp eq %"class.extensions::ArgumentSpec"* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %85
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %89) #11
  %92 = bitcast %"class.extensions::ArgumentSpec"* %89 to i8*
  call void @_ZdlPv(i8* %92) #13
  br label %93

93:                                               ; preds = %91, %85
  %94 = icmp eq %"class.std::__1::unique_ptr.41"* %87, %74
  br i1 %94, label %95, label %85

95:                                               ; preds = %93
  %96 = bitcast %"class.std::__1::vector.58"* %3 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %81
  %99 = phi i8* [ %97, %95 ], [ %82, %81 ]
  store %"class.std::__1::unique_ptr.41"* %74, %"class.std::__1::unique_ptr.41"** %9, align 8
  call void @_ZdlPv(i8* %99) #13
  br label %100

100:                                              ; preds = %47, %72, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret %"class.extensions::ArgumentSpec"* %6

101:                                              ; preds = %24, %163
  %102 = phi %"class.std::__1::basic_string"* [ %19, %24 ], [ %164, %163 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #11
  store %"class.extensions::ArgumentSpec"* inttoptr (i64 -6148914691236517206 to %"class.extensions::ArgumentSpec"*), %"class.extensions::ArgumentSpec"** %26, align 8
  %103 = call i8* @_Znwm(i64 264) #13
  %104 = bitcast i8* %103 to %"class.extensions::ArgumentSpec"*
  call void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"* nonnull %104, i32 9) #11
  store i8* %103, i8** %27, align 8
  %105 = bitcast %"class.std::__1::basic_string"* %102 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = bitcast %"class.std::__1::basic_string"* %102 to i8*
  %112 = select i1 %108, i8* %110, i8* %111
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = zext i8 %107 to i64
  %116 = select i1 %108, i64 %114, i64 %115
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  %117 = icmp ugt i64 %116, -17
  br i1 %117, label %118, label %120

118:                                              ; preds = %101
  %119 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %119) #12
  unreachable

120:                                              ; preds = %101
  %121 = icmp ult i64 %116, 23
  br i1 %121, label %127, label %122

122:                                              ; preds = %120
  %123 = add nuw i64 %116, 16
  %124 = and i64 %123, -16
  %125 = call i8* @_Znwm(i64 %124) #13
  store i8* %125, i8** %29, align 8, !alias.scope !35
  %126 = or i64 %124, -9223372036854775808
  store i64 %126, i64* %30, align 8, !alias.scope !35
  store i64 %116, i64* %31, align 8, !alias.scope !35
  br label %130

127:                                              ; preds = %120
  %128 = trunc i64 %116 to i8
  store i8 %128, i8* %33, align 1, !alias.scope !35
  %129 = icmp eq i64 %116, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %127, %122
  %131 = phi i8* [ %125, %122 ], [ %28, %127 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %131, i8* align 1 %112, i64 %116, i1 false) #11
  br label %132

132:                                              ; preds = %130, %127
  %133 = phi i8* [ %28, %127 ], [ %131, %130 ]
  %134 = getelementptr inbounds i8, i8* %133, i64 %116
  store i8 0, i8* %134, align 1
  %135 = getelementptr inbounds i8, i8* %103, i64 64
  %136 = load i8, i8* %135, align 8, !range !26
  %137 = icmp eq i8 %136, 0
  %138 = getelementptr inbounds i8, i8* %103, i64 72
  br i1 %137, label %147, label %139

139:                                              ; preds = %132
  %140 = getelementptr inbounds i8, i8* %103, i64 95
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %139
  %144 = bitcast i8* %138 to i8**
  %145 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %145) #13
  br label %146

146:                                              ; preds = %143, %139
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* nonnull align 8 %28, i64 24, i1 false) #11
  store i8 0, i8* %33, align 1
  store i8 0, i8* %28, align 8
  br label %148

147:                                              ; preds = %132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* nonnull align 8 %28, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %135, align 8
  br label %148

148:                                              ; preds = %146, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  %149 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %9, align 8
  %150 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %10, align 8
  %151 = icmp ult %"class.std::__1::unique_ptr.41"* %149, %150
  br i1 %151, label %152, label %157

152:                                              ; preds = %148
  %153 = load i64, i64* %34, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %26, align 8
  %154 = bitcast %"class.std::__1::unique_ptr.41"* %149 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %149, i64 1
  %156 = ptrtoint %"class.std::__1::unique_ptr.41"* %155 to i64
  store i64 %156, i64* %35, align 8
  br label %158

157:                                              ; preds = %148
  call void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.58"* nonnull %3, %"class.std::__1::unique_ptr.41"* nonnull dereferenceable(8) %4) #11
  br label %158

158:                                              ; preds = %152, %157
  %159 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %26, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %26, align 8
  %160 = icmp eq %"class.extensions::ArgumentSpec"* %159, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %158
  call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %159) #11
  %162 = bitcast %"class.extensions::ArgumentSpec"* %159 to i8*
  call void @_ZdlPv(i8* %162) #13
  br label %163

163:                                              ; preds = %158, %161
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 1
  %165 = icmp eq %"class.std::__1::basic_string"* %164, %20
  br i1 %165, label %36, label %101
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN10extensions12ArgumentSpecC1ENS_12ArgumentTypeE(%"class.extensions::ArgumentSpec"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISP_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #11
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #11
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !26
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !26
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !26
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE7reserveEm(%"class.std::__1::vector.58"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr.41"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.58"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::unique_ptr.41"*
  br i1 %10, label %12, label %132

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.41"** %13 to i64*
  %15 = icmp ugt i64 %1, 2305843009213693951
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #12
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 3
  %21 = shl i64 %1, 3
  %22 = tail call i8* @_Znwm(i64 %21) #13
  %23 = bitcast i8* %22 to %"class.std::__1::unique_ptr.41"*
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::unique_ptr.41"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::unique_ptr.41"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::unique_ptr.41"*
  %29 = icmp eq %"class.std::__1::unique_ptr.41"* %28, %11
  br i1 %29, label %57, label %30

30:                                               ; preds = %17
  %31 = getelementptr %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %28, i64 -1, i32 0, i32 0, i32 0
  %32 = bitcast %"class.extensions::ArgumentSpec"** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %30, %40
  %41 = phi %"class.std::__1::unique_ptr.41"* [ %44, %40 ], [ %24, %30 ]
  %42 = phi %"class.std::__1::unique_ptr.41"* [ %45, %40 ], [ %28, %30 ]
  %43 = phi i64 [ %50, %40 ], [ %38, %30 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %41, i64 -1
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %42, i64 -1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr.41"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %46, align 8
  %49 = bitcast %"class.std::__1::unique_ptr.41"* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = add i64 %43, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %40, !llvm.loop !38

52:                                               ; preds = %40, %30
  %53 = phi %"class.std::__1::unique_ptr.41"* [ undef, %30 ], [ %44, %40 ]
  %54 = phi %"class.std::__1::unique_ptr.41"* [ %24, %30 ], [ %44, %40 ]
  %55 = phi %"class.std::__1::unique_ptr.41"* [ %28, %30 ], [ %45, %40 ]
  %56 = icmp ult i8* %34, inttoptr (i64 56 to i8*)
  br i1 %56, label %110, label %58

57:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %127

58:                                               ; preds = %52, %58
  %59 = phi %"class.std::__1::unique_ptr.41"* [ %103, %58 ], [ %54, %52 ]
  %60 = phi %"class.std::__1::unique_ptr.41"* [ %104, %58 ], [ %55, %52 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %60, i64 -1
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::unique_ptr.41"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %63, align 8
  %66 = bitcast %"class.std::__1::unique_ptr.41"* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %59, i64 -2
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %60, i64 -2
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr.41"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %69, align 8
  %72 = bitcast %"class.std::__1::unique_ptr.41"* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %59, i64 -3
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %60, i64 -3
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr.41"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %75, align 8
  %78 = bitcast %"class.std::__1::unique_ptr.41"* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %59, i64 -4
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %60, i64 -4
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.41"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.41"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %59, i64 -5
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %60, i64 -5
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.41"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.41"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %59, i64 -6
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %60, i64 -6
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.41"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.41"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %59, i64 -7
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %60, i64 -7
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.41"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.41"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %59, i64 -8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %60, i64 -8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.41"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.41"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = icmp eq %"class.std::__1::unique_ptr.41"* %104, %11
  br i1 %109, label %110, label %58

110:                                              ; preds = %58, %52
  %111 = phi %"class.std::__1::unique_ptr.41"* [ %53, %52 ], [ %103, %58 ]
  %112 = ptrtoint %"class.std::__1::unique_ptr.41"* %111 to i64
  %113 = load i64, i64* %6, align 8
  %114 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %13, align 8
  %115 = inttoptr i64 %113 to %"class.std::__1::unique_ptr.41"*
  store i64 %112, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %116 = icmp eq %"class.std::__1::unique_ptr.41"* %114, %115
  br i1 %116, label %127, label %117

117:                                              ; preds = %110, %125
  %118 = phi %"class.std::__1::unique_ptr.41"* [ %119, %125 ], [ %114, %110 ]
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %118, i64 -1
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %120, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %120, align 8
  %122 = icmp eq %"class.extensions::ArgumentSpec"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %117
  tail call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %121) #11
  %124 = bitcast %"class.extensions::ArgumentSpec"* %121 to i8*
  tail call void @_ZdlPv(i8* %124) #13
  br label %125

125:                                              ; preds = %123, %117
  %126 = icmp eq %"class.std::__1::unique_ptr.41"* %119, %115
  br i1 %126, label %127, label %117

127:                                              ; preds = %125, %57, %110
  %128 = phi i64 [ %7, %57 ], [ %113, %110 ], [ %113, %125 ]
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = inttoptr i64 %128 to i8*
  tail call void @_ZdlPv(i8* %131) #13
  br label %132

132:                                              ; preds = %130, %127, %2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.58"*, %"class.std::__1::unique_ptr.41"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.41"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.58"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.58"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.41"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.41"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.41"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.41"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.41"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.41"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.41"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.41"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.41"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.extensions::ArgumentSpec"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.41"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.41"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.41"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.41"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !40

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.41"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.41"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.41"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.41"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.41"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.41"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.41"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.41"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.41"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.41"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.41"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.41"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.41"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.41"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.41"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.41"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.41"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.41"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.41"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.41"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.41"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.41"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.41"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.41"*, %"class.std::__1::unique_ptr.41"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.41"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.41"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.41"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.41"*
  %138 = icmp eq %"class.std::__1::unique_ptr.41"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.41"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.41"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %142, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %142, align 8
  %144 = icmp eq %"class.extensions::ArgumentSpec"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %143) #11
  %146 = bitcast %"class.extensions::ArgumentSpec"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #13
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.41"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #13
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE7destroyEPNS_11__tree_nodeISE_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.extensions::ArgumentSpec"*, %"class.extensions::ArgumentSpec"** %11, align 8
  store %"class.extensions::ArgumentSpec"* null, %"class.extensions::ArgumentSpec"** %11, align 8
  %13 = icmp eq %"class.extensions::ArgumentSpec"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %4
  tail call void @_ZN10extensions12ArgumentSpecD1Ev(%"class.extensions::ArgumentSpec"* nonnull %12) #11
  %15 = bitcast %"class.extensions::ArgumentSpec"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #13
  br label %16

16:                                               ; preds = %14, %4
  %17 = bitcast %"struct.std::__1::pair.128"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair.128", %"struct.std::__1::pair.128"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #13
  br label %24

24:                                               ; preds = %16, %21
  %25 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %25) #13
  br label %26

26:                                               ; preds = %2, %24
  ret void
}

declare void @_ZN10extensions12APISignatureC1ENSt3__16vectorINS1_10unique_ptrINS_12ArgumentSpecENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"class.extensions::APISignature"*, %"class.std::__1::vector.58"*) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.gin::ObjectTemplateBuilder"* @_ZN3gin21ObjectTemplateBuilder7SetImplERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEN2v85LocalINS9_4DataEEE(%"class.gin::ObjectTemplateBuilder"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.v8::Data"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare %"class.v8::FunctionTemplate"* @_ZN2v816FunctionTemplate3NewEPNS_7IsolateEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS4_EENSA_INS_9SignatureEEEiNS_19ConstructorBehaviorENS_14SideEffectTypeEPKNS_9CFunctionE(%"class.v8::Isolate"*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::Value"*, %"class.v8::Signature"*, i32, i32, i32, %"class.v8::CFunction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gin8internal10DispatcherIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEE18DispatchToCallbackERKN2v820FunctionCallbackInfoINS9_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 comdat align 2 {
  %2 = alloca %"class.gin::Arguments", align 8
  %3 = bitcast %"class.gin::Arguments"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #11
  %4 = bitcast %"class.gin::Arguments"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 24, i1 false)
  call void @_ZN3gin9ArgumentsC1ERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.gin::Arguments"* nonnull %2, %"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0) #11
  call void @_ZN3gin8internal10DispatcherIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEE22DispatchToCallbackImplES6_(%"class.gin::Arguments"* nonnull %2)
  call void @_ZN3gin9ArgumentsD1Ev(%"class.gin::Arguments"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #11
  ret void
}

declare %"class.v8::External"* @_ZN3gin8internal18CallbackHolderBase9GetHandleEPN2v87IsolateE(%"class.gin::internal::CallbackHolderBase"*, %"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN3gin8internal18CallbackHolderBaseC2EPN2v87IsolateE(%"class.gin::internal::CallbackHolderBase"*, %"class.v8::Isolate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gin8internal14CallbackHolderIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEED2Ev(%"class.gin::internal::CallbackHolder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gin::internal::CallbackHolder", %"class.gin::internal::CallbackHolder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3gin8internal14CallbackHolderIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gin::internal::CallbackHolder", %"class.gin::internal::CallbackHolder"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #11
  %4 = getelementptr inbounds %"class.gin::internal::CallbackHolder", %"class.gin::internal::CallbackHolder"* %0, i64 0, i32 0
  tail call void @_ZN3gin8internal18CallbackHolderBaseD2Ev(%"class.gin::internal::CallbackHolderBase"* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gin8internal14CallbackHolderIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEED0Ev(%"class.gin::internal::CallbackHolder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gin::internal::CallbackHolder", %"class.gin::internal::CallbackHolder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3gin8internal14CallbackHolderIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gin::internal::CallbackHolder", %"class.gin::internal::CallbackHolder"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #11
  %4 = getelementptr inbounds %"class.gin::internal::CallbackHolder", %"class.gin::internal::CallbackHolder"* %0, i64 0, i32 0
  tail call void @_ZN3gin8internal18CallbackHolderBaseD2Ev(%"class.gin::internal::CallbackHolderBase"* %4) #11
  %5 = bitcast %"class.gin::internal::CallbackHolder"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gin8internal18CallbackHolderBaseD2Ev(%"class.gin::internal::CallbackHolderBase"*) unnamed_addr #4

declare void @_ZN3gin9ArgumentsC1ERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.gin::Arguments"*, %"class.v8::FunctionCallbackInfo"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gin8internal10DispatcherIFvPN10extensions16DeclarativeEventEPNS_9ArgumentsEEE22DispatchToCallbackImplES6_(%"class.gin::Arguments"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::Local.145", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::RepeatingCallback.141", align 8
  %5 = bitcast %"class.v8::Local.145"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.v8::Local.145", %"class.v8::Local.145"* %2, i64 0, i32 0
  store %"class.v8::External"* null, %"class.v8::External"** %6, align 8
  %7 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 4
  %8 = load i8, i8* %7, align 1, !range !26
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 1
  br i1 %9, label %15, label %11

11:                                               ; preds = %1
  %12 = bitcast %union.anon.78* %10 to %"class.v8::PropertyCallbackInfo"**
  %13 = load %"class.v8::PropertyCallbackInfo"*, %"class.v8::PropertyCallbackInfo"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %13, i64 0, i32 0
  br label %19

15:                                               ; preds = %1
  %16 = getelementptr inbounds %union.anon.78, %union.anon.78* %10, i64 0, i32 0
  %17 = load %"class.v8::FunctionCallbackInfo"*, %"class.v8::FunctionCallbackInfo"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %17, i64 0, i32 0
  br label %19

19:                                               ; preds = %11, %15
  %20 = phi i64** [ %14, %11 ], [ %18, %15 ]
  %21 = phi i64 [ 5, %11 ], [ 4, %15 ]
  %22 = load i64*, i64** %20, align 8
  %23 = getelementptr inbounds i64, i64* %22, i64 %21
  %24 = bitcast i64* %23 to %"class.v8::Value"*
  %25 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 0
  %26 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %25, align 8
  %27 = call zeroext i1 @_ZN3gin9ConverterIN2v85LocalINS1_8ExternalEEEvE6FromV8EPNS1_7IsolateENS2_INS1_5ValueEEEPS4_(%"class.v8::Isolate"* %26, %"class.v8::Value"* %24, %"class.v8::Local.145"* nonnull %2) #11
  br i1 %27, label %31, label %28

28:                                               ; preds = %19
  %29 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.20, i64 0, i64 0), i32 199, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0)) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %19, %28
  %32 = load %"class.v8::External"*, %"class.v8::External"** %6, align 8
  %33 = call i8* @_ZNK2v88External5ValueEv(%"class.v8::External"* %32) #11
  %34 = getelementptr inbounds i8, i8* %33, i64 24
  %35 = bitcast i8* %34 to %"struct.gin::InvokerOptions"*
  %36 = load i8, i8* %34, align 8, !range !26
  %37 = icmp eq i8 %36, 0
  %38 = load i8, i8* %7, align 1, !range !26
  %39 = icmp eq i8 %38, 0
  br i1 %37, label %58, label %40

40:                                               ; preds = %31
  br i1 %39, label %48, label %41

41:                                               ; preds = %40
  %42 = bitcast %union.anon.78* %10 to %"class.v8::PropertyCallbackInfo"**
  %43 = load %"class.v8::PropertyCallbackInfo"*, %"class.v8::PropertyCallbackInfo"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %43, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 1
  %47 = bitcast i64* %46 to %"class.v8::Object"*
  br label %52

48:                                               ; preds = %40
  %49 = bitcast %union.anon.78* %10 to %"class.v8::Object"***
  %50 = load %"class.v8::Object"**, %"class.v8::Object"*** %49, align 8
  %51 = load %"class.v8::Object"*, %"class.v8::Object"** %50, align 8
  br label %52

52:                                               ; preds = %48, %41
  %53 = phi %"class.v8::Object"* [ %47, %41 ], [ %51, %48 ]
  %54 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %25, align 8
  %55 = bitcast %"class.v8::Object"* %53 to %"class.v8::Value"*
  %56 = call i8* @_ZN3gin8internal10FromV8ImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11WrapperInfoE(%"class.v8::Isolate"* %54, %"class.v8::Value"* %55, %"struct.gin::WrapperInfo"* nonnull @_ZN10extensions16DeclarativeEvent12kWrapperInfoE) #11
  %57 = icmp eq i8* %56, null
  br i1 %57, label %93, label %94

58:                                               ; preds = %31
  br i1 %39, label %59, label %67

59:                                               ; preds = %58
  %60 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 2
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 1, i32 0
  %63 = load %"class.v8::FunctionCallbackInfo"*, %"class.v8::FunctionCallbackInfo"** %62, align 8
  %64 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %63, i64 0, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = icmp slt i32 %61, %65
  br i1 %66, label %69, label %67

67:                                               ; preds = %58, %59
  %68 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 3
  store i8 1, i8* %68, align 4
  br label %93

69:                                               ; preds = %59
  %70 = add nsw i32 %61, 1
  store i32 %70, i32* %60, align 8
  %71 = icmp slt i32 %61, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %69
  %73 = load i32, i32* %64, align 8
  %74 = icmp sgt i32 %73, %61
  br i1 %74, label %82, label %75

75:                                               ; preds = %72, %69
  %76 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %63, i64 0, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds i64, i64* %77, i64 1
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 160
  %81 = inttoptr i64 %80 to %"class.v8::Value"*
  br label %88

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %63, i64 0, i32 1
  %84 = load i64*, i64** %83, align 8
  %85 = sext i32 %61 to i64
  %86 = getelementptr inbounds i64, i64* %84, i64 %85
  %87 = bitcast i64* %86 to %"class.v8::Value"*
  br label %88

88:                                               ; preds = %75, %82
  %89 = phi %"class.v8::Value"* [ %81, %75 ], [ %87, %82 ]
  %90 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %25, align 8
  %91 = call i8* @_ZN3gin8internal10FromV8ImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11WrapperInfoE(%"class.v8::Isolate"* %90, %"class.v8::Value"* %89, %"struct.gin::WrapperInfo"* nonnull @_ZN10extensions16DeclarativeEvent12kWrapperInfoE) #11
  %92 = icmp eq i8* %91, null
  br i1 %92, label %93, label %94

93:                                               ; preds = %88, %52, %67
  call void @_ZN3gin8internal20ThrowConversionErrorEPNS_9ArgumentsERKNS_14InvokerOptionsEm(%"class.gin::Arguments"* %0, %"struct.gin::InvokerOptions"* dereferenceable(16) %35, i64 0) #11
  br label %106

94:                                               ; preds = %88, %52
  %95 = phi i8* [ %56, %52 ], [ %91, %88 ]
  %96 = bitcast i8* %95 to %"class.extensions::DeclarativeEvent"*
  %97 = getelementptr inbounds i8, i8* %33, i64 16
  %98 = getelementptr inbounds %"class.base::RepeatingCallback.141", %"class.base::RepeatingCallback.141"* %4, i64 0, i32 0
  %99 = bitcast i8* %97 to %"class.base::internal::CallbackBaseCopyable"*
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %98, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %99) #11
  %100 = getelementptr inbounds %"class.base::RepeatingCallback.141", %"class.base::RepeatingCallback.141"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %100, align 8
  %102 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %101, i64 0, i32 1
  %103 = bitcast void ()** %102 to void (%"class.base::internal::BindStateBase"*, %"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*)**
  %104 = load void (%"class.base::internal::BindStateBase"*, %"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*)*, void (%"class.base::internal::BindStateBase"*, %"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*)** %103, align 8
  call void %104(%"class.base::internal::BindStateBase"* %101, %"class.extensions::DeclarativeEvent"* %96, %"class.gin::Arguments"* %0) #11
  %105 = getelementptr inbounds %"class.base::RepeatingCallback.141", %"class.base::RepeatingCallback.141"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %105) #11
  br label %106

106:                                              ; preds = %93, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gin9ArgumentsD1Ev(%"class.gin::Arguments"*) unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZNK2v88External5ValueEv(%"class.v8::External"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3gin9ConverterIN2v85LocalINS1_8ExternalEEEvE6FromV8EPNS1_7IsolateENS2_INS1_5ValueEEEPS4_(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.v8::Local.145"*) local_unnamed_addr #2

declare void @_ZN3gin8internal20ThrowConversionErrorEPNS_9ArgumentsERKNS_14InvokerOptionsEm(%"class.gin::Arguments"*, %"struct.gin::InvokerOptions"* dereferenceable(16), i64) local_unnamed_addr #2

declare i8* @_ZN3gin8internal10FromV8ImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11WrapperInfoE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.gin::WrapperInfo"*) local_unnamed_addr #2

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

declare %"class.v8::Value"* @_ZN3gin9ConverterIN2v85LocalINS1_8ExternalEEEvE4ToV8EPNS1_7IsolateES4_(%"class.v8::Isolate"*, %"class.v8::External"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions16DeclarativeEventEFvPN3gin9ArgumentsEEJEEEFvPS4_S7_EE3RunEPNS0_13BindStateBaseESB_S7_(%"class.base::internal::BindStateBase"*, %"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %8 = bitcast void ()** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.extensions::DeclarativeEvent"* %1 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 %9
  %12 = bitcast i8* %11 to %"class.extensions::DeclarativeEvent"*
  %13 = and i64 %6, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %3
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %6, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*)**
  %21 = load void (%"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*)*, void (%"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*)** %20, align 8
  br label %24

22:                                               ; preds = %3
  %23 = inttoptr i64 %6 to void (%"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.extensions::DeclarativeEvent"*, %"class.gin::Arguments"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.extensions::DeclarativeEvent"* %12, %"class.gin::Arguments"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN10extensions16DeclarativeEventEFvPN3gin9ArgumentsEEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Local.82"* @_ZNSt3__16vectorIN2v85LocalINS1_5ValueEEENS_9allocatorIS4_EEE6insertIPKS4_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISC_E9referenceEEE5valueENS_11__wrap_iterIPS4_EEE4typeENSG_ISA_EESC_SC_(%"class.std::__1::vector.80"*, %"class.v8::Local.82"*, %"class.v8::Local.82"*, %"class.v8::Local.82"*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::Local.82"* %2 to i8*
  %6 = bitcast %"class.v8::Local.82"* %1 to i8*
  %7 = ptrtoint %"class.v8::Local.82"* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %0, i64 0, i32 0, i32 0
  %9 = ptrtoint %"class.v8::Local.82"* %3 to i64
  %10 = ptrtoint %"class.v8::Local.82"* %2 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %603

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::Local.82"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.v8::Local.82"*, %"class.v8::Local.82"** %18, align 8
  %20 = ptrtoint %"class.v8::Local.82"* %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast %"class.v8::Local.82"** %18 to i64*
  br i1 %23, label %190, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %45

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %2, i64 %27
  %31 = ptrtoint %"class.v8::Local.82"* %30 to i64
  %32 = sub i64 %9, %31
  %33 = icmp sgt i64 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = lshr exact i64 %32, 3
  %36 = bitcast %"class.v8::Local.82"* %19 to i8*
  %37 = bitcast %"class.v8::Local.82"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 %32, i1 false) #11
  %38 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %19, i64 %35
  %39 = ptrtoint %"class.v8::Local.82"* %38 to i64
  br label %40

40:                                               ; preds = %34, %29
  %41 = phi i64 [ %39, %34 ], [ %20, %29 ]
  store i64 %41, i64* %24, align 8
  %42 = icmp sgt i64 %26, 0
  br i1 %42, label %43, label %603

43:                                               ; preds = %40
  %44 = inttoptr i64 %41 to %"class.v8::Local.82"*
  br label %45

45:                                               ; preds = %43, %25
  %46 = phi i64 [ %41, %43 ], [ %20, %25 ]
  %47 = phi %"class.v8::Local.82"* [ %44, %43 ], [ %19, %25 ]
  %48 = phi %"class.v8::Local.82"* [ %30, %43 ], [ %3, %25 ]
  %49 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %1, i64 %12
  %50 = ptrtoint %"class.v8::Local.82"* %49 to i64
  %51 = sub i64 %46, %50
  %52 = ashr exact i64 %51, 3
  %53 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %1, i64 %52
  %54 = icmp ult %"class.v8::Local.82"* %53, %19
  br i1 %54, label %55, label %168

55:                                               ; preds = %45
  %56 = sub nsw i64 0, %52
  %57 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %19, i64 %56, i32 0
  %58 = bitcast %"class.v8::Value"** %57 to i8*
  %59 = xor i64 %7, -1
  %60 = getelementptr i8, i8* %58, i64 %59
  %61 = ptrtoint i8* %60 to i64
  %62 = lshr i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 4
  br i1 %64, label %65, label %68

65:                                               ; preds = %163, %68, %55
  %66 = phi %"class.v8::Local.82"* [ %47, %68 ], [ %47, %55 ], [ %86, %163 ]
  %67 = phi %"class.v8::Local.82"* [ %53, %68 ], [ %53, %55 ], [ %87, %163 ]
  br label %176

68:                                               ; preds = %55
  %69 = sub nsw i64 0, %52
  %70 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %19, i64 %69, i32 0
  %71 = bitcast %"class.v8::Value"** %70 to i8*
  %72 = xor i64 %7, -1
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = lshr i64 %74, 3
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %47, i64 %76
  %78 = add nsw i64 %52, %75
  %79 = add nsw i64 %78, 1
  %80 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %1, i64 %79
  %81 = icmp ult %"class.v8::Local.82"* %47, %80
  %82 = icmp ult %"class.v8::Local.82"* %53, %77
  %83 = and i1 %81, %82
  br i1 %83, label %65, label %84

84:                                               ; preds = %68
  %85 = and i64 %63, 4611686018427387900
  %86 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %47, i64 %85
  %87 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %53, i64 %85
  %88 = add nsw i64 %85, -4
  %89 = lshr exact i64 %88, 2
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 12
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %47, i64 %96
  %99 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %53, i64 %96
  %100 = bitcast %"class.v8::Local.82"* %99 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 8, !alias.scope !41
  %102 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %99, i64 2
  %103 = bitcast %"class.v8::Local.82"* %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !41
  %105 = bitcast %"class.v8::Local.82"* %98 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %105, align 8, !alias.scope !44, !noalias !41
  %106 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %98, i64 2
  %107 = bitcast %"class.v8::Local.82"* %106 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %107, align 8, !alias.scope !44, !noalias !41
  %108 = or i64 %96, 4
  %109 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %47, i64 %108
  %110 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %53, i64 %108
  %111 = bitcast %"class.v8::Local.82"* %110 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 8, !alias.scope !41
  %113 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %110, i64 2
  %114 = bitcast %"class.v8::Local.82"* %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !41
  %116 = bitcast %"class.v8::Local.82"* %109 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %116, align 8, !alias.scope !44, !noalias !41
  %117 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %109, i64 2
  %118 = bitcast %"class.v8::Local.82"* %117 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %118, align 8, !alias.scope !44, !noalias !41
  %119 = or i64 %96, 8
  %120 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %47, i64 %119
  %121 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %53, i64 %119
  %122 = bitcast %"class.v8::Local.82"* %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !41
  %124 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %121, i64 2
  %125 = bitcast %"class.v8::Local.82"* %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !41
  %127 = bitcast %"class.v8::Local.82"* %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !44, !noalias !41
  %128 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %120, i64 2
  %129 = bitcast %"class.v8::Local.82"* %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !44, !noalias !41
  %130 = or i64 %96, 12
  %131 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %47, i64 %130
  %132 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %53, i64 %130
  %133 = bitcast %"class.v8::Local.82"* %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !41
  %135 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %132, i64 2
  %136 = bitcast %"class.v8::Local.82"* %135 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 8, !alias.scope !41
  %138 = bitcast %"class.v8::Local.82"* %131 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %138, align 8, !alias.scope !44, !noalias !41
  %139 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %131, i64 2
  %140 = bitcast %"class.v8::Local.82"* %139 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %140, align 8, !alias.scope !44, !noalias !41
  %141 = add i64 %96, 16
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !46

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %47, i64 %148
  %151 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %53, i64 %148
  %152 = bitcast %"class.v8::Local.82"* %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !41
  %154 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %151, i64 2
  %155 = bitcast %"class.v8::Local.82"* %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !41
  %157 = bitcast %"class.v8::Local.82"* %150 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %157, align 8, !alias.scope !44, !noalias !41
  %158 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %150, i64 2
  %159 = bitcast %"class.v8::Local.82"* %158 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %159, align 8, !alias.scope !44, !noalias !41
  %160 = add i64 %148, 4
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !48

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %63, %85
  br i1 %164, label %165, label %65

165:                                              ; preds = %176, %163
  %166 = phi %"class.v8::Local.82"* [ %86, %163 ], [ %183, %176 ]
  %167 = ptrtoint %"class.v8::Local.82"* %166 to i64
  br label %168

168:                                              ; preds = %165, %45
  %169 = phi i64 [ %167, %165 ], [ %46, %45 ]
  store i64 %169, i64* %24, align 8
  %170 = icmp eq i64 %51, 0
  br i1 %170, label %185, label %171

171:                                              ; preds = %168
  %172 = sub nsw i64 0, %52
  %173 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %47, i64 %172
  %174 = bitcast %"class.v8::Local.82"* %173 to i8*
  %175 = bitcast %"class.v8::Local.82"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %174, i8* align 8 %175, i64 %51, i1 false) #11
  br label %185

176:                                              ; preds = %65, %176
  %177 = phi %"class.v8::Local.82"* [ %183, %176 ], [ %66, %65 ]
  %178 = phi %"class.v8::Local.82"* [ %182, %176 ], [ %67, %65 ]
  %179 = bitcast %"class.v8::Local.82"* %178 to i64*
  %180 = bitcast %"class.v8::Local.82"* %177 to i64*
  %181 = load i64, i64* %179, align 8
  store i64 %181, i64* %180, align 8
  %182 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %178, i64 1
  %183 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %177, i64 1
  %184 = icmp ult %"class.v8::Local.82"* %182, %19
  br i1 %184, label %176, label %165, !llvm.loop !49

185:                                              ; preds = %168, %171
  %186 = ptrtoint %"class.v8::Local.82"* %48 to i64
  %187 = sub i64 %186, %10
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %603, label %189

189:                                              ; preds = %185
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %187, i1 false) #11
  br label %603

190:                                              ; preds = %14
  %191 = bitcast %"class.std::__1::vector.80"* %0 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %20, %192
  %194 = ashr exact i64 %193, 3
  %195 = add nsw i64 %194, %12
  %196 = icmp ugt i64 %195, 2305843009213693951
  br i1 %196, label %197, label %199

197:                                              ; preds = %190
  %198 = bitcast %"class.std::__1::vector.80"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %198) #12
  unreachable

199:                                              ; preds = %190
  %200 = sub i64 %17, %192
  %201 = ashr exact i64 %200, 3
  %202 = icmp ult i64 %201, 1152921504606846975
  br i1 %202, label %206, label %203

203:                                              ; preds = %199
  %204 = sub i64 %7, %192
  %205 = ashr exact i64 %204, 3
  br label %216

206:                                              ; preds = %199
  %207 = ashr exact i64 %200, 2
  %208 = icmp ult i64 %207, %195
  %209 = select i1 %208, i64 %195, i64 %207
  %210 = sub i64 %7, %192
  %211 = ashr exact i64 %210, 3
  %212 = icmp eq i64 %209, 0
  br i1 %212, label %222, label %213

213:                                              ; preds = %206
  %214 = icmp ugt i64 %209, 2305843009213693951
  br i1 %214, label %215, label %216

215:                                              ; preds = %213
  tail call void @abort() #12
  unreachable

216:                                              ; preds = %203, %213
  %217 = phi i64 [ 2305843009213693951, %203 ], [ %209, %213 ]
  %218 = phi i64 [ %205, %203 ], [ %211, %213 ]
  %219 = shl i64 %217, 3
  %220 = tail call i8* @_Znwm(i64 %219) #13
  %221 = bitcast i8* %220 to %"class.v8::Local.82"*
  br label %222

222:                                              ; preds = %216, %206
  %223 = phi i64 [ %218, %216 ], [ %211, %206 ]
  %224 = phi i64 [ %217, %216 ], [ 0, %206 ]
  %225 = phi %"class.v8::Local.82"* [ %221, %216 ], [ null, %206 ]
  %226 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %225, i64 %223
  %227 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %225, i64 %224
  %228 = ptrtoint %"class.v8::Local.82"* %227 to i64
  %229 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %226, i64 %12
  %230 = add i64 %11, -8
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = icmp ult i64 %232, 4
  br i1 %233, label %327, label %234

234:                                              ; preds = %222
  %235 = add i64 %11, -8
  %236 = lshr i64 %235, 3
  %237 = add nsw i64 %223, %236
  %238 = add nsw i64 %237, 1
  %239 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %225, i64 %238
  %240 = add nuw nsw i64 %236, 1
  %241 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %2, i64 %240
  %242 = icmp ult %"class.v8::Local.82"* %226, %241
  %243 = icmp ugt %"class.v8::Local.82"* %239, %2
  %244 = and i1 %242, %243
  br i1 %244, label %327, label %245

245:                                              ; preds = %234
  %246 = and i64 %232, 4611686018427387900
  %247 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %226, i64 %246
  %248 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %2, i64 %246
  %249 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %226, i64 %246
  %250 = add nsw i64 %246, -4
  %251 = lshr exact i64 %250, 2
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 3
  %254 = icmp ult i64 %250, 12
  br i1 %254, label %306, label %255

255:                                              ; preds = %245
  %256 = sub nsw i64 %252, %253
  br label %257

257:                                              ; preds = %257, %255
  %258 = phi i64 [ 0, %255 ], [ %303, %257 ]
  %259 = phi i64 [ %256, %255 ], [ %304, %257 ]
  %260 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %2, i64 %258
  %261 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %226, i64 %258
  %262 = bitcast %"class.v8::Local.82"* %260 to <2 x i64>*
  %263 = load <2 x i64>, <2 x i64>* %262, align 8, !alias.scope !50
  %264 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %260, i64 2
  %265 = bitcast %"class.v8::Local.82"* %264 to <2 x i64>*
  %266 = load <2 x i64>, <2 x i64>* %265, align 8, !alias.scope !50
  %267 = bitcast %"class.v8::Local.82"* %261 to <2 x i64>*
  store <2 x i64> %263, <2 x i64>* %267, align 8, !alias.scope !53, !noalias !50
  %268 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %261, i64 2
  %269 = bitcast %"class.v8::Local.82"* %268 to <2 x i64>*
  store <2 x i64> %266, <2 x i64>* %269, align 8, !alias.scope !53, !noalias !50
  %270 = or i64 %258, 4
  %271 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %2, i64 %270
  %272 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %226, i64 %270
  %273 = bitcast %"class.v8::Local.82"* %271 to <2 x i64>*
  %274 = load <2 x i64>, <2 x i64>* %273, align 8, !alias.scope !50
  %275 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %271, i64 2
  %276 = bitcast %"class.v8::Local.82"* %275 to <2 x i64>*
  %277 = load <2 x i64>, <2 x i64>* %276, align 8, !alias.scope !50
  %278 = bitcast %"class.v8::Local.82"* %272 to <2 x i64>*
  store <2 x i64> %274, <2 x i64>* %278, align 8, !alias.scope !53, !noalias !50
  %279 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %272, i64 2
  %280 = bitcast %"class.v8::Local.82"* %279 to <2 x i64>*
  store <2 x i64> %277, <2 x i64>* %280, align 8, !alias.scope !53, !noalias !50
  %281 = or i64 %258, 8
  %282 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %2, i64 %281
  %283 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %226, i64 %281
  %284 = bitcast %"class.v8::Local.82"* %282 to <2 x i64>*
  %285 = load <2 x i64>, <2 x i64>* %284, align 8, !alias.scope !50
  %286 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %282, i64 2
  %287 = bitcast %"class.v8::Local.82"* %286 to <2 x i64>*
  %288 = load <2 x i64>, <2 x i64>* %287, align 8, !alias.scope !50
  %289 = bitcast %"class.v8::Local.82"* %283 to <2 x i64>*
  store <2 x i64> %285, <2 x i64>* %289, align 8, !alias.scope !53, !noalias !50
  %290 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %283, i64 2
  %291 = bitcast %"class.v8::Local.82"* %290 to <2 x i64>*
  store <2 x i64> %288, <2 x i64>* %291, align 8, !alias.scope !53, !noalias !50
  %292 = or i64 %258, 12
  %293 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %2, i64 %292
  %294 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %226, i64 %292
  %295 = bitcast %"class.v8::Local.82"* %293 to <2 x i64>*
  %296 = load <2 x i64>, <2 x i64>* %295, align 8, !alias.scope !50
  %297 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %293, i64 2
  %298 = bitcast %"class.v8::Local.82"* %297 to <2 x i64>*
  %299 = load <2 x i64>, <2 x i64>* %298, align 8, !alias.scope !50
  %300 = bitcast %"class.v8::Local.82"* %294 to <2 x i64>*
  store <2 x i64> %296, <2 x i64>* %300, align 8, !alias.scope !53, !noalias !50
  %301 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %294, i64 2
  %302 = bitcast %"class.v8::Local.82"* %301 to <2 x i64>*
  store <2 x i64> %299, <2 x i64>* %302, align 8, !alias.scope !53, !noalias !50
  %303 = add i64 %258, 16
  %304 = add i64 %259, -4
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %306, label %257, !llvm.loop !55

306:                                              ; preds = %257, %245
  %307 = phi i64 [ 0, %245 ], [ %303, %257 ]
  %308 = icmp eq i64 %253, 0
  br i1 %308, label %325, label %309

309:                                              ; preds = %306, %309
  %310 = phi i64 [ %322, %309 ], [ %307, %306 ]
  %311 = phi i64 [ %323, %309 ], [ %253, %306 ]
  %312 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %2, i64 %310
  %313 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %226, i64 %310
  %314 = bitcast %"class.v8::Local.82"* %312 to <2 x i64>*
  %315 = load <2 x i64>, <2 x i64>* %314, align 8, !alias.scope !50
  %316 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %312, i64 2
  %317 = bitcast %"class.v8::Local.82"* %316 to <2 x i64>*
  %318 = load <2 x i64>, <2 x i64>* %317, align 8, !alias.scope !50
  %319 = bitcast %"class.v8::Local.82"* %313 to <2 x i64>*
  store <2 x i64> %315, <2 x i64>* %319, align 8, !alias.scope !53, !noalias !50
  %320 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %313, i64 2
  %321 = bitcast %"class.v8::Local.82"* %320 to <2 x i64>*
  store <2 x i64> %318, <2 x i64>* %321, align 8, !alias.scope !53, !noalias !50
  %322 = add i64 %310, 4
  %323 = add i64 %311, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %309, !llvm.loop !56

325:                                              ; preds = %309, %306
  %326 = icmp eq i64 %232, %246
  br i1 %326, label %403, label %327

327:                                              ; preds = %325, %234, %222
  %328 = phi %"class.v8::Local.82"* [ %226, %234 ], [ %226, %222 ], [ %247, %325 ]
  %329 = phi %"class.v8::Local.82"* [ %2, %234 ], [ %2, %222 ], [ %248, %325 ]
  %330 = phi %"class.v8::Local.82"* [ %226, %234 ], [ %226, %222 ], [ %249, %325 ]
  %331 = ptrtoint %"class.v8::Local.82"* %328 to i64
  %332 = add nsw i64 %223, %12
  %333 = add nsw i64 %332, -1
  %334 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %225, i64 %333, i32 0
  %335 = ptrtoint %"class.v8::Value"** %334 to i64
  %336 = sub i64 %335, %331
  %337 = lshr i64 %336, 3
  %338 = add nuw nsw i64 %337, 1
  %339 = and i64 %338, 7
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %353, label %341

341:                                              ; preds = %327, %341
  %342 = phi %"class.v8::Local.82"* [ %349, %341 ], [ %328, %327 ]
  %343 = phi %"class.v8::Local.82"* [ %350, %341 ], [ %329, %327 ]
  %344 = phi %"class.v8::Local.82"* [ %349, %341 ], [ %330, %327 ]
  %345 = phi i64 [ %351, %341 ], [ %339, %327 ]
  %346 = bitcast %"class.v8::Local.82"* %343 to i64*
  %347 = bitcast %"class.v8::Local.82"* %344 to i64*
  %348 = load i64, i64* %346, align 8
  store i64 %348, i64* %347, align 8
  %349 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %342, i64 1
  %350 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %343, i64 1
  %351 = add i64 %345, -1
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %353, label %341, !llvm.loop !57

353:                                              ; preds = %341, %327
  %354 = phi %"class.v8::Local.82"* [ %328, %327 ], [ %349, %341 ]
  %355 = phi %"class.v8::Local.82"* [ %329, %327 ], [ %350, %341 ]
  %356 = phi %"class.v8::Local.82"* [ %330, %327 ], [ %349, %341 ]
  %357 = icmp ult i64 %336, 56
  br i1 %357, label %403, label %358

358:                                              ; preds = %353, %358
  %359 = phi %"class.v8::Local.82"* [ %400, %358 ], [ %354, %353 ]
  %360 = phi %"class.v8::Local.82"* [ %401, %358 ], [ %355, %353 ]
  %361 = phi %"class.v8::Local.82"* [ %400, %358 ], [ %356, %353 ]
  %362 = bitcast %"class.v8::Local.82"* %360 to i64*
  %363 = bitcast %"class.v8::Local.82"* %361 to i64*
  %364 = load i64, i64* %362, align 8
  store i64 %364, i64* %363, align 8
  %365 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %359, i64 1
  %366 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %360, i64 1
  %367 = bitcast %"class.v8::Local.82"* %366 to i64*
  %368 = bitcast %"class.v8::Local.82"* %365 to i64*
  %369 = load i64, i64* %367, align 8
  store i64 %369, i64* %368, align 8
  %370 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %359, i64 2
  %371 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %360, i64 2
  %372 = bitcast %"class.v8::Local.82"* %371 to i64*
  %373 = bitcast %"class.v8::Local.82"* %370 to i64*
  %374 = load i64, i64* %372, align 8
  store i64 %374, i64* %373, align 8
  %375 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %359, i64 3
  %376 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %360, i64 3
  %377 = bitcast %"class.v8::Local.82"* %376 to i64*
  %378 = bitcast %"class.v8::Local.82"* %375 to i64*
  %379 = load i64, i64* %377, align 8
  store i64 %379, i64* %378, align 8
  %380 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %359, i64 4
  %381 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %360, i64 4
  %382 = bitcast %"class.v8::Local.82"* %381 to i64*
  %383 = bitcast %"class.v8::Local.82"* %380 to i64*
  %384 = load i64, i64* %382, align 8
  store i64 %384, i64* %383, align 8
  %385 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %359, i64 5
  %386 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %360, i64 5
  %387 = bitcast %"class.v8::Local.82"* %386 to i64*
  %388 = bitcast %"class.v8::Local.82"* %385 to i64*
  %389 = load i64, i64* %387, align 8
  store i64 %389, i64* %388, align 8
  %390 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %359, i64 6
  %391 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %360, i64 6
  %392 = bitcast %"class.v8::Local.82"* %391 to i64*
  %393 = bitcast %"class.v8::Local.82"* %390 to i64*
  %394 = load i64, i64* %392, align 8
  store i64 %394, i64* %393, align 8
  %395 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %359, i64 7
  %396 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %360, i64 7
  %397 = bitcast %"class.v8::Local.82"* %396 to i64*
  %398 = bitcast %"class.v8::Local.82"* %395 to i64*
  %399 = load i64, i64* %397, align 8
  store i64 %399, i64* %398, align 8
  %400 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %359, i64 8
  %401 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %360, i64 8
  %402 = icmp eq %"class.v8::Local.82"* %229, %400
  br i1 %402, label %403, label %358, !llvm.loop !58

403:                                              ; preds = %353, %358, %325
  %404 = load %"class.v8::Local.82"*, %"class.v8::Local.82"** %8, align 8
  %405 = ptrtoint %"class.v8::Local.82"* %404 to i64
  %406 = sub i64 %7, %405
  %407 = ashr exact i64 %406, 3
  %408 = sub nsw i64 0, %407
  %409 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %226, i64 %408
  %410 = ptrtoint %"class.v8::Local.82"* %409 to i64
  %411 = icmp sgt i64 %406, 0
  br i1 %411, label %412, label %415

412:                                              ; preds = %403
  %413 = bitcast %"class.v8::Local.82"* %409 to i8*
  %414 = bitcast %"class.v8::Local.82"* %404 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %413, i8* align 8 %414, i64 %406, i1 false) #11
  br label %415

415:                                              ; preds = %412, %403
  %416 = load %"class.v8::Local.82"*, %"class.v8::Local.82"** %18, align 8
  %417 = icmp eq %"class.v8::Local.82"* %416, %1
  br i1 %417, label %596, label %418

418:                                              ; preds = %415
  %419 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %416, i64 -1, i32 0
  %420 = ptrtoint %"class.v8::Value"** %419 to i64
  %421 = sub i64 %420, %7
  %422 = lshr i64 %421, 3
  %423 = add nuw nsw i64 %422, 1
  %424 = icmp ult i64 %423, 4
  br i1 %424, label %521, label %425

425:                                              ; preds = %418
  %426 = add nsw i64 %223, %12
  %427 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %416, i64 -1, i32 0
  %428 = ptrtoint %"class.v8::Value"** %427 to i64
  %429 = sub i64 %428, %7
  %430 = lshr i64 %429, 3
  %431 = add nsw i64 %426, %430
  %432 = add nsw i64 %431, 1
  %433 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %225, i64 %432
  %434 = add nuw nsw i64 %430, 1
  %435 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %1, i64 %434
  %436 = icmp ult %"class.v8::Local.82"* %229, %435
  %437 = icmp ugt %"class.v8::Local.82"* %433, %1
  %438 = and i1 %436, %437
  br i1 %438, label %521, label %439

439:                                              ; preds = %425
  %440 = and i64 %423, 4611686018427387900
  %441 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %229, i64 %440
  %442 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %229, i64 %440
  %443 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %1, i64 %440
  %444 = add nsw i64 %440, -4
  %445 = lshr exact i64 %444, 2
  %446 = add nuw nsw i64 %445, 1
  %447 = and i64 %446, 3
  %448 = icmp ult i64 %444, 12
  br i1 %448, label %500, label %449

449:                                              ; preds = %439
  %450 = sub nsw i64 %446, %447
  br label %451

451:                                              ; preds = %451, %449
  %452 = phi i64 [ 0, %449 ], [ %497, %451 ]
  %453 = phi i64 [ %450, %449 ], [ %498, %451 ]
  %454 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %229, i64 %452
  %455 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %1, i64 %452
  %456 = bitcast %"class.v8::Local.82"* %455 to <2 x i64>*
  %457 = load <2 x i64>, <2 x i64>* %456, align 8, !alias.scope !59
  %458 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %455, i64 2
  %459 = bitcast %"class.v8::Local.82"* %458 to <2 x i64>*
  %460 = load <2 x i64>, <2 x i64>* %459, align 8, !alias.scope !59
  %461 = bitcast %"class.v8::Local.82"* %454 to <2 x i64>*
  store <2 x i64> %457, <2 x i64>* %461, align 8, !alias.scope !62, !noalias !59
  %462 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %454, i64 2
  %463 = bitcast %"class.v8::Local.82"* %462 to <2 x i64>*
  store <2 x i64> %460, <2 x i64>* %463, align 8, !alias.scope !62, !noalias !59
  %464 = or i64 %452, 4
  %465 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %229, i64 %464
  %466 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %1, i64 %464
  %467 = bitcast %"class.v8::Local.82"* %466 to <2 x i64>*
  %468 = load <2 x i64>, <2 x i64>* %467, align 8, !alias.scope !59
  %469 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %466, i64 2
  %470 = bitcast %"class.v8::Local.82"* %469 to <2 x i64>*
  %471 = load <2 x i64>, <2 x i64>* %470, align 8, !alias.scope !59
  %472 = bitcast %"class.v8::Local.82"* %465 to <2 x i64>*
  store <2 x i64> %468, <2 x i64>* %472, align 8, !alias.scope !62, !noalias !59
  %473 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %465, i64 2
  %474 = bitcast %"class.v8::Local.82"* %473 to <2 x i64>*
  store <2 x i64> %471, <2 x i64>* %474, align 8, !alias.scope !62, !noalias !59
  %475 = or i64 %452, 8
  %476 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %229, i64 %475
  %477 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %1, i64 %475
  %478 = bitcast %"class.v8::Local.82"* %477 to <2 x i64>*
  %479 = load <2 x i64>, <2 x i64>* %478, align 8, !alias.scope !59
  %480 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %477, i64 2
  %481 = bitcast %"class.v8::Local.82"* %480 to <2 x i64>*
  %482 = load <2 x i64>, <2 x i64>* %481, align 8, !alias.scope !59
  %483 = bitcast %"class.v8::Local.82"* %476 to <2 x i64>*
  store <2 x i64> %479, <2 x i64>* %483, align 8, !alias.scope !62, !noalias !59
  %484 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %476, i64 2
  %485 = bitcast %"class.v8::Local.82"* %484 to <2 x i64>*
  store <2 x i64> %482, <2 x i64>* %485, align 8, !alias.scope !62, !noalias !59
  %486 = or i64 %452, 12
  %487 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %229, i64 %486
  %488 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %1, i64 %486
  %489 = bitcast %"class.v8::Local.82"* %488 to <2 x i64>*
  %490 = load <2 x i64>, <2 x i64>* %489, align 8, !alias.scope !59
  %491 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %488, i64 2
  %492 = bitcast %"class.v8::Local.82"* %491 to <2 x i64>*
  %493 = load <2 x i64>, <2 x i64>* %492, align 8, !alias.scope !59
  %494 = bitcast %"class.v8::Local.82"* %487 to <2 x i64>*
  store <2 x i64> %490, <2 x i64>* %494, align 8, !alias.scope !62, !noalias !59
  %495 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %487, i64 2
  %496 = bitcast %"class.v8::Local.82"* %495 to <2 x i64>*
  store <2 x i64> %493, <2 x i64>* %496, align 8, !alias.scope !62, !noalias !59
  %497 = add i64 %452, 16
  %498 = add i64 %453, -4
  %499 = icmp eq i64 %498, 0
  br i1 %499, label %500, label %451, !llvm.loop !64

500:                                              ; preds = %451, %439
  %501 = phi i64 [ 0, %439 ], [ %497, %451 ]
  %502 = icmp eq i64 %447, 0
  br i1 %502, label %519, label %503

503:                                              ; preds = %500, %503
  %504 = phi i64 [ %516, %503 ], [ %501, %500 ]
  %505 = phi i64 [ %517, %503 ], [ %447, %500 ]
  %506 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %229, i64 %504
  %507 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %1, i64 %504
  %508 = bitcast %"class.v8::Local.82"* %507 to <2 x i64>*
  %509 = load <2 x i64>, <2 x i64>* %508, align 8, !alias.scope !59
  %510 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %507, i64 2
  %511 = bitcast %"class.v8::Local.82"* %510 to <2 x i64>*
  %512 = load <2 x i64>, <2 x i64>* %511, align 8, !alias.scope !59
  %513 = bitcast %"class.v8::Local.82"* %506 to <2 x i64>*
  store <2 x i64> %509, <2 x i64>* %513, align 8, !alias.scope !62, !noalias !59
  %514 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %506, i64 2
  %515 = bitcast %"class.v8::Local.82"* %514 to <2 x i64>*
  store <2 x i64> %512, <2 x i64>* %515, align 8, !alias.scope !62, !noalias !59
  %516 = add i64 %504, 4
  %517 = add i64 %505, -1
  %518 = icmp eq i64 %517, 0
  br i1 %518, label %519, label %503, !llvm.loop !65

519:                                              ; preds = %503, %500
  %520 = icmp eq i64 %423, %440
  br i1 %520, label %596, label %521

521:                                              ; preds = %519, %425, %418
  %522 = phi %"class.v8::Local.82"* [ %229, %425 ], [ %229, %418 ], [ %441, %519 ]
  %523 = phi %"class.v8::Local.82"* [ %229, %425 ], [ %229, %418 ], [ %442, %519 ]
  %524 = phi %"class.v8::Local.82"* [ %1, %425 ], [ %1, %418 ], [ %443, %519 ]
  %525 = ptrtoint %"class.v8::Local.82"* %524 to i64
  %526 = getelementptr %"class.v8::Local.82", %"class.v8::Local.82"* %416, i64 -1, i32 0
  %527 = ptrtoint %"class.v8::Value"** %526 to i64
  %528 = sub i64 %527, %525
  %529 = lshr i64 %528, 3
  %530 = add nuw nsw i64 %529, 1
  %531 = and i64 %530, 7
  %532 = icmp eq i64 %531, 0
  br i1 %532, label %545, label %533

533:                                              ; preds = %521, %533
  %534 = phi %"class.v8::Local.82"* [ %542, %533 ], [ %522, %521 ]
  %535 = phi %"class.v8::Local.82"* [ %542, %533 ], [ %523, %521 ]
  %536 = phi %"class.v8::Local.82"* [ %541, %533 ], [ %524, %521 ]
  %537 = phi i64 [ %543, %533 ], [ %531, %521 ]
  %538 = bitcast %"class.v8::Local.82"* %535 to i64*
  %539 = bitcast %"class.v8::Local.82"* %536 to i64*
  %540 = load i64, i64* %539, align 8
  store i64 %540, i64* %538, align 8
  %541 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %536, i64 1
  %542 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %534, i64 1
  %543 = add i64 %537, -1
  %544 = icmp eq i64 %543, 0
  br i1 %544, label %545, label %533, !llvm.loop !66

545:                                              ; preds = %533, %521
  %546 = phi %"class.v8::Local.82"* [ undef, %521 ], [ %542, %533 ]
  %547 = phi %"class.v8::Local.82"* [ %522, %521 ], [ %542, %533 ]
  %548 = phi %"class.v8::Local.82"* [ %523, %521 ], [ %542, %533 ]
  %549 = phi %"class.v8::Local.82"* [ %524, %521 ], [ %541, %533 ]
  %550 = icmp ult i64 %528, 56
  br i1 %550, label %596, label %551

551:                                              ; preds = %545, %551
  %552 = phi %"class.v8::Local.82"* [ %594, %551 ], [ %547, %545 ]
  %553 = phi %"class.v8::Local.82"* [ %594, %551 ], [ %548, %545 ]
  %554 = phi %"class.v8::Local.82"* [ %593, %551 ], [ %549, %545 ]
  %555 = bitcast %"class.v8::Local.82"* %553 to i64*
  %556 = bitcast %"class.v8::Local.82"* %554 to i64*
  %557 = load i64, i64* %556, align 8
  store i64 %557, i64* %555, align 8
  %558 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %554, i64 1
  %559 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %552, i64 1
  %560 = bitcast %"class.v8::Local.82"* %559 to i64*
  %561 = bitcast %"class.v8::Local.82"* %558 to i64*
  %562 = load i64, i64* %561, align 8
  store i64 %562, i64* %560, align 8
  %563 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %554, i64 2
  %564 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %552, i64 2
  %565 = bitcast %"class.v8::Local.82"* %564 to i64*
  %566 = bitcast %"class.v8::Local.82"* %563 to i64*
  %567 = load i64, i64* %566, align 8
  store i64 %567, i64* %565, align 8
  %568 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %554, i64 3
  %569 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %552, i64 3
  %570 = bitcast %"class.v8::Local.82"* %569 to i64*
  %571 = bitcast %"class.v8::Local.82"* %568 to i64*
  %572 = load i64, i64* %571, align 8
  store i64 %572, i64* %570, align 8
  %573 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %554, i64 4
  %574 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %552, i64 4
  %575 = bitcast %"class.v8::Local.82"* %574 to i64*
  %576 = bitcast %"class.v8::Local.82"* %573 to i64*
  %577 = load i64, i64* %576, align 8
  store i64 %577, i64* %575, align 8
  %578 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %554, i64 5
  %579 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %552, i64 5
  %580 = bitcast %"class.v8::Local.82"* %579 to i64*
  %581 = bitcast %"class.v8::Local.82"* %578 to i64*
  %582 = load i64, i64* %581, align 8
  store i64 %582, i64* %580, align 8
  %583 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %554, i64 6
  %584 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %552, i64 6
  %585 = bitcast %"class.v8::Local.82"* %584 to i64*
  %586 = bitcast %"class.v8::Local.82"* %583 to i64*
  %587 = load i64, i64* %586, align 8
  store i64 %587, i64* %585, align 8
  %588 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %554, i64 7
  %589 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %552, i64 7
  %590 = bitcast %"class.v8::Local.82"* %589 to i64*
  %591 = bitcast %"class.v8::Local.82"* %588 to i64*
  %592 = load i64, i64* %591, align 8
  store i64 %592, i64* %590, align 8
  %593 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %554, i64 8
  %594 = getelementptr inbounds %"class.v8::Local.82", %"class.v8::Local.82"* %552, i64 8
  %595 = icmp eq %"class.v8::Local.82"* %593, %416
  br i1 %595, label %596, label %551, !llvm.loop !67

596:                                              ; preds = %545, %551, %519, %415
  %597 = phi %"class.v8::Local.82"* [ %229, %415 ], [ %441, %519 ], [ %546, %545 ], [ %594, %551 ]
  %598 = ptrtoint %"class.v8::Local.82"* %597 to i64
  %599 = load %"class.v8::Local.82"*, %"class.v8::Local.82"** %8, align 8
  store i64 %410, i64* %191, align 8
  store i64 %598, i64* %24, align 8
  store i64 %228, i64* %16, align 8
  %600 = icmp eq %"class.v8::Local.82"* %599, null
  br i1 %600, label %603, label %601

601:                                              ; preds = %596
  %602 = bitcast %"class.v8::Local.82"* %599 to i8*
  tail call void @_ZdlPv(i8* %602) #13
  br label %603

603:                                              ; preds = %601, %596, %40, %185, %189, %4
  %604 = phi %"class.v8::Local.82"* [ %1, %4 ], [ %1, %189 ], [ %1, %185 ], [ %1, %40 ], [ %226, %596 ], [ %226, %601 ]
  ret %"class.v8::Local.82"* %604
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS8_INS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISV_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS8_INS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISV_EEEEEEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS8_INS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISV_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS8_INS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISV_EEEEEEDpOT_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS8_INS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISV_EEEEEEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS8_INS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISV_EEEEEEDpOT_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS8_INS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISV_EEEEEEDpOT_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS8_INS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISV_EEEEEEDpOT_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS8_INS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISV_EEEEEEDpOT_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN10extensions12ArgumentSpecENS_14default_deleteISA_EEEEEENS_19__map_value_compareIS7_SE_NS_4lessIS7_EELb1EEENS5_ISE_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS8_INS_11__tree_nodeISE_PvEENS_22__tree_node_destructorINS5_ISV_EEEEEEDpOT_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!25 = distinct !{!25, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!26 = !{i8 0, i8 2}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10extensions16DeclarativeEventEFvPN3gin9ArgumentsEEJEEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10extensions16DeclarativeEventEFvPN3gin9ArgumentsEEJEEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base13BindRepeatingIMN10extensions16DeclarativeEventEFvPN3gin9ArgumentsEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!31 = distinct !{!31, !"_ZN4base13BindRepeatingIMN10extensions16DeclarativeEventEFvPN3gin9ArgumentsEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!37 = distinct !{!37, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!38 = distinct !{!38, !39}
!39 = !{!"llvm.loop.unroll.disable"}
!40 = distinct !{!40, !39}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !47}
!47 = !{!"llvm.loop.isvectorized", i32 1}
!48 = distinct !{!48, !39}
!49 = distinct !{!49, !47}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !47}
!56 = distinct !{!56, !39}
!57 = distinct !{!57, !39}
!58 = distinct !{!58, !47}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !47}
!65 = distinct !{!65, !39}
!66 = distinct !{!66, !39}
!67 = distinct !{!67, !47}
