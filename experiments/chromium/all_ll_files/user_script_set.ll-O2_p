; ModuleID = '../../extensions/renderer/user_script_set.cc'
source_filename = "../../extensions/renderer/user_script_set.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.extensions::UserScriptSet" = type { %"class.base::ReadOnlySharedMemoryMapping", %"class.std::__1::vector", %"class.std::__1::map", %"class.extensions::mojom::HostID", %"class.base::ObserverList" }
%"class.base::ReadOnlySharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.extensions::UserScript"* }
%"class.extensions::UserScript" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.3", %"class.std::__1::vector.3", %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet", %"class.std::__1::vector.18", %"class.std::__1::vector.18", %"class.extensions::mojom::HostID", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::basic_string"* }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i64 }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.extensions::UserScript::File"* }
%"class.extensions::UserScript::File" = type { %"class.base::FilePath", %"class.base::FilePath", %class.GURL, %"class.base::BasicStringPiece", %"class.std::__1::basic_string" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.23" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.GURL* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.std::__1::unique_ptr.20"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.43" }
%"class.std::__1::__tree.43" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.extensions::mojom::HostID" = type { i32, %"class.std::__1::basic_string" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.52", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.54" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.150" }
%"struct.std::__1::pair.150" = type { %class.GURL, %"class.blink::WebString" }
%"class.blink::WebString" = type { %class.scoped_refptr.149 }
%class.scoped_refptr.149 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"class.extensions::UserScriptSet::Observer" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"class.std::__1::unique_ptr.61"*, %"class.std::__1::unique_ptr.61"*, %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.extensions::ScriptInjection"* }
%"class.extensions::ScriptInjection" = type { %"class.std::__1::unique_ptr.64", %"class.content::RenderFrame"*, %"class.std::__1::unique_ptr.81", i32, i64, %"class.ukm::SourceIdObj", i8, i8, i8, %"class.std::__1::unique_ptr.87", %"class.base::OnceCallback", %"class.std::__1::unique_ptr.94", %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.extensions::ScriptInjector"* }
%"class.extensions::ScriptInjector" = type { i32 (...)** }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.InjectionHost* }
%class.InjectionHost = type { i32 (...)**, %"class.extensions::mojom::HostID" }
%"class.ukm::SourceIdObj" = type { i64 }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.base::Value"* }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.115" }
%"union.absl::variant_internal::DestructibleUnionImpl.115" = type { %"union.absl::variant_internal::DestructibleUnionImpl.116" }
%"union.absl::variant_internal::DestructibleUnionImpl.116" = type { %"union.absl::variant_internal::DestructibleUnionImpl.117" }
%"union.absl::variant_internal::DestructibleUnionImpl.117" = type { %"union.absl::variant_internal::DestructibleUnionImpl.118" }
%"union.absl::variant_internal::DestructibleUnionImpl.118" = type { %"class.std::__1::basic_string" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.extensions::ScriptInjection::FrameWatcher"* }
%"class.extensions::ScriptInjection::FrameWatcher" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.100 }
%class.scoped_refptr.100 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.101", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.101" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.102" }
%"struct.std::__1::atomic.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__cxx_atomic_impl.105" }
%"struct.std::__1::__cxx_atomic_impl.105" = type { %"struct.std::__1::__cxx_atomic_base_impl.106" }
%"struct.std::__1::__cxx_atomic_base_impl.106" = type { i8 }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.std::__1::unique_ptr.61"* }
%"class.content::RenderFrame" = type <{ %"class.IPC::Listener", %"class.IPC::Sender", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.70", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.70" = type { %"class.std::__1::__tree.71" }
%"class.std::__1::__tree.71" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.72", %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.blink::WebLocalFrame" = type { %"class.blink::WebFrame" }
%"class.blink::WebFrame" = type { i32 (...)**, i32, [4 x i8], %"class.blink::MultiToken" }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%class.WebUIInjectionHost = type { %class.InjectionHost, %class.GURL }
%"class.extensions::UserScriptInjector" = type { %"class.extensions::ScriptInjector", %"class.extensions::UserScriptSet::Observer", %"class.extensions::UserScript"*, %"class.extensions::UserScriptSet"*, %"class.std::__1::basic_string", %"class.extensions::mojom::HostID", i8, %"class.base::ScopedObservation" }
%"class.base::ScopedObservation" = type { %"class.extensions::UserScriptSet::Observer"*, %"class.extensions::UserScriptSet"* }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"class.base::PickleIterator" = type { i8*, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.extensions::ExtensionsRendererClient" = type { i32 (...)** }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %class.GURL* }
%"class.std::__1::tuple.172" = type { i8 }
%"struct.std::__1::pair.152" = type { %class.GURL, %"class.blink::WebString" }

$_ZNSt3__16vectorINS_10unique_ptrIN10extensions10UserScriptENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE7reserveEm = comdat any

$_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN10extensions15ScriptInjectionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN10extensions10UserScriptENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS2_JRKNS_21piecewise_construct_tENS_5tupleIJRKS2_EEENSH_IJEEEEEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS2_JNS_4pairIS2_S4_EEEEENSE_INS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_ = comdat any

@.str = private unnamed_addr constant [45 x i8] c"../../extensions/renderer/user_script_set.cc\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"iter.ReadUInt32(&num_scripts)\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"num_scripts < kNumScriptsArbitraryMax\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"iter.ReadData(&body, &body_length)\00", align 1
@_ZN10extensions12_GLOBAL__N_115kUserScriptHeadE = internal constant [28 x i8] c"(function (unsafeWindow) {\0A\00", align 16
@_ZN10extensions12_GLOBAL__N_115kUserScriptTailE = internal constant [13 x i8] c"\0A})(window);\00", align 1
@_ZN7content17kViewSourceSchemeE = external constant [0 x i8], align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN10extensions13UserScriptSetC1ENS_5mojom6HostIDE = hidden unnamed_addr alias void (%"class.extensions::UserScriptSet"*, %"class.extensions::mojom::HostID"*), void (%"class.extensions::UserScriptSet"*, %"class.extensions::mojom::HostID"*)* @_ZN10extensions13UserScriptSetC2ENS_5mojom6HostIDE
@_ZN10extensions13UserScriptSetD1Ev = hidden unnamed_addr alias void (%"class.extensions::UserScriptSet"*), void (%"class.extensions::UserScriptSet"*)* @_ZN10extensions13UserScriptSetD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13UserScriptSetC2ENS_5mojom6HostIDE(%"class.extensions::UserScriptSet"*, %"class.extensions::mojom::HostID"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 0
  tail call void @_ZN4base27ReadOnlySharedMemoryMappingC1Ev(%"class.base::ReadOnlySharedMemoryMapping"* %3) #10
  %4 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %8, align 8
  %10 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 3, i32 0
  %11 = getelementptr inbounds %"class.extensions::mojom::HostID", %"class.extensions::mojom::HostID"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %10, align 8
  %13 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 3, i32 1
  %14 = getelementptr inbounds %"class.extensions::mojom::HostID", %"class.extensions::mojom::HostID"* %1, i64 0, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %2
  %20 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #10
  br label %27

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.extensions::mojom::HostID", %"class.extensions::mojom::HostID"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %13, i8* %24, i64 %26) #10
  br label %27

27:                                               ; preds = %19, %22
  %28 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4
  %29 = bitcast %"class.base::ObserverList"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #10
  %30 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %30, %"class.base::internal::LinkNodeBase"* %30, %"class.base::internal::LinkNodeBase"* %30) #10
  %31 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 2
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 3
  store i32 0, i32* %32, align 8
  ret void
}

declare void @_ZN4base27ReadOnlySharedMemoryMappingC1Ev(%"class.base::ReadOnlySharedMemoryMapping"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13UserScriptSetD2Ev(%"class.extensions::UserScriptSet"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4
  %5 = bitcast %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  %11 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8, !noalias !2
  %12 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8, !noalias !2
  %14 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %11, %13
  %15 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %15) #10
  br i1 %14, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.base::ObserverList"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10, !alias.scope !2
  br label %58

18:                                               ; preds = %1
  store %"class.base::ObserverList"* %4, %"class.base::ObserverList"** %6, align 8
  %19 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %15, %"class.base::internal::LinkNodeBase"* %19) #10
  store i64 0, i64* %7, align 8
  %20 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %12 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::ObserverList"* %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 3
  br label %30

30:                                               ; preds = %23, %18
  %31 = phi i64 [ %29, %23 ], [ -1, %18 ]
  store i64 %31, i64* %8, align 8
  %32 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %33 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %32, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.base::ObserverList"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, %31
  %41 = select i1 %40, i64 %39, i64 %31
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %30
  %44 = inttoptr i64 %37 to %"class.base::internal::UncheckedObserverAdapter"*
  %45 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %32, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %44, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %58

49:                                               ; preds = %43, %53
  %50 = phi i64 [ %51, %53 ], [ 0, %43 ]
  %51 = add nuw i64 %50, 1
  store i64 %51, i64* %7, align 8
  %52 = icmp ult i64 %51, %41
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %45, align 8
  %55 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %54, i64 %51, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %49, label %58

58:                                               ; preds = %53, %49, %43, %30, %16
  %59 = bitcast %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59) #10
  %60 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %63 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %63) #10
  %65 = bitcast %"class.base::ObserverList"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #10, !alias.scope !5
  %66 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  br label %67

67:                                               ; preds = %363, %58
  %68 = phi %"class.base::ObserverList"* [ %66, %58 ], [ %361, %363 ]
  %69 = icmp eq %"class.base::ObserverList"* %68, null
  br i1 %69, label %85, label %70

70:                                               ; preds = %67
  %71 = load i64, i64* %7, align 8
  %72 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %68, i64 0, i32 0, i32 0, i32 1
  %73 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.base::ObserverList"* %68 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = ashr exact i64 %77, 3
  %79 = load i64, i64* %8, align 8
  %80 = icmp ult i64 %78, %79
  %81 = select i1 %80, i64 %78, i64 %79
  %82 = icmp eq i64 %71, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  br label %101

85:                                               ; preds = %70, %67
  %86 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  %87 = icmp eq %"class.base::ObserverList"* %86, null
  br i1 %87, label %201, label %88

88:                                               ; preds = %85
  %89 = load i64, i64* %61, align 8
  %90 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %86, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.base::ObserverList"* %86 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 3
  %97 = load i64, i64* %62, align 8
  %98 = icmp ult i64 %96, %97
  %99 = select i1 %98, i64 %96, i64 %97
  %100 = icmp eq i64 %89, %99
  br i1 %100, label %110, label %101

101:                                              ; preds = %88, %83
  %102 = phi %"class.base::ObserverList"* [ %84, %83 ], [ %86, %88 ]
  %103 = icmp eq %"class.base::ObserverList"* %68, %102
  %104 = load i64, i64* %7, align 8
  %105 = load i64, i64* %61, align 8
  %106 = icmp eq i64 %104, %105
  %107 = and i1 %103, %106
  br i1 %107, label %108, label %351

108:                                              ; preds = %101
  %109 = icmp eq %"class.base::ObserverList"* %68, null
  br i1 %109, label %201, label %110

110:                                              ; preds = %88, %108
  %111 = phi %"class.base::ObserverList"* [ %68, %108 ], [ %86, %88 ]
  %112 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 1
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 1, i32 0, i32 0, i32 1
  %114 = bitcast %"class.base::internal::LinkNodeBase"** %113 to %"class.base::LinkNode"**
  %115 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %114, align 8
  %116 = bitcast %"class.base::LinkedList"* %112 to %"class.base::LinkNode"**
  %117 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %116, align 8
  %118 = icmp eq %"class.base::LinkNode"* %115, %117
  br i1 %118, label %119, label %197

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %120, align 8
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 1
  %123 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  %124 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %121, %123
  br i1 %124, label %133, label %125

125:                                              ; preds = %119, %130
  %126 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %131, %130 ], [ %121, %119 ]
  %127 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = icmp eq i8* %128, null
  br i1 %129, label %133, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %126, i64 1
  %132 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %131, %123
  br i1 %132, label %197, label %125

133:                                              ; preds = %125, %119
  %134 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %121, %119 ], [ %126, %125 ]
  %135 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %134 to i64
  %136 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %134, %123
  br i1 %136, label %197, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %134, i64 1
  %139 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %138, %123
  br i1 %139, label %192, label %140

140:                                              ; preds = %137
  %141 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %123, i64 -2, i32 0
  %142 = ptrtoint i8** %141 to i64
  %143 = sub i64 %142, %135
  %144 = lshr i64 %143, 3
  %145 = add nuw nsw i64 %144, 1
  %146 = and i64 %145, 3
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %166, label %148

148:                                              ; preds = %140, %161
  %149 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %163, %161 ], [ %138, %140 ]
  %150 = phi i64 [ %162, %161 ], [ %135, %140 ]
  %151 = phi i64 [ %164, %161 ], [ %146, %140 ]
  %152 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = icmp eq i8* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %148
  %156 = ptrtoint i8* %153 to i64
  %157 = inttoptr i64 %150 to %"class.base::internal::UncheckedObserverAdapter"*
  %158 = inttoptr i64 %150 to i64*
  store i64 %156, i64* %158, align 8
  %159 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 1
  %160 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %159 to i64
  br label %161

161:                                              ; preds = %155, %148
  %162 = phi i64 [ %150, %148 ], [ %160, %155 ]
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %149, i64 1
  %164 = add i64 %151, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %148, !llvm.loop !8

166:                                              ; preds = %161, %140
  %167 = phi i64 [ undef, %140 ], [ %162, %161 ]
  %168 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %138, %140 ], [ %163, %161 ]
  %169 = phi i64 [ %135, %140 ], [ %162, %161 ]
  %170 = icmp ult i64 %143, 24
  br i1 %170, label %188, label %171

171:                                              ; preds = %166, %453
  %172 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %455, %453 ], [ %168, %166 ]
  %173 = phi i64 [ %454, %453 ], [ %169, %166 ]
  %174 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = icmp eq i8* %175, null
  br i1 %176, label %183, label %177

177:                                              ; preds = %171
  %178 = ptrtoint i8* %175 to i64
  %179 = inttoptr i64 %173 to %"class.base::internal::UncheckedObserverAdapter"*
  %180 = inttoptr i64 %173 to i64*
  store i64 %178, i64* %180, align 8
  %181 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %179, i64 1
  %182 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %181 to i64
  br label %183

183:                                              ; preds = %177, %171
  %184 = phi i64 [ %173, %171 ], [ %182, %177 ]
  %185 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 1, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %431, label %425

188:                                              ; preds = %453, %166
  %189 = phi i64 [ %167, %166 ], [ %454, %453 ]
  %190 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %191 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %192

192:                                              ; preds = %188, %137
  %193 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %123, %137 ], [ %191, %188 ]
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %134, %137 ], [ %190, %188 ]
  %195 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %194, %193
  br i1 %195, label %197, label %196

196:                                              ; preds = %192
  store %"class.base::internal::UncheckedObserverAdapter"* %194, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  br label %197

197:                                              ; preds = %130, %196, %192, %133, %110
  %198 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %60, align 8
  %199 = icmp eq %"class.base::ObserverList"* %198, null
  br i1 %199, label %201, label %200

200:                                              ; preds = %197
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %60, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %63) #10
  br label %201

201:                                              ; preds = %85, %108, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59) #10
  %202 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %203 = icmp eq %"class.base::ObserverList"* %202, null
  br i1 %203, label %294, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 1
  %206 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 1, i32 0, i32 0, i32 1
  %207 = bitcast %"class.base::internal::LinkNodeBase"** %206 to %"class.base::LinkNode"**
  %208 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %207, align 8
  %209 = bitcast %"class.base::LinkedList"* %205 to %"class.base::LinkNode"**
  %210 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %209, align 8
  %211 = icmp eq %"class.base::LinkNode"* %208, %210
  br i1 %211, label %212, label %290

212:                                              ; preds = %204
  %213 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %213, align 8
  %215 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %202, i64 0, i32 0, i32 0, i32 1
  %216 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  %217 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %214, %216
  br i1 %217, label %226, label %218

218:                                              ; preds = %212, %223
  %219 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %224, %223 ], [ %214, %212 ]
  %220 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = icmp eq i8* %221, null
  br i1 %222, label %226, label %223

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %219, i64 1
  %225 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %224, %216
  br i1 %225, label %290, label %218

226:                                              ; preds = %218, %212
  %227 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %214, %212 ], [ %219, %218 ]
  %228 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %227 to i64
  %229 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %227, %216
  br i1 %229, label %290, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %227, i64 1
  %232 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %231, %216
  br i1 %232, label %285, label %233

233:                                              ; preds = %230
  %234 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %216, i64 -2, i32 0
  %235 = ptrtoint i8** %234 to i64
  %236 = sub i64 %235, %228
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %259, label %241

241:                                              ; preds = %233, %254
  %242 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %256, %254 ], [ %231, %233 ]
  %243 = phi i64 [ %255, %254 ], [ %228, %233 ]
  %244 = phi i64 [ %257, %254 ], [ %239, %233 ]
  %245 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 0, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = icmp eq i8* %246, null
  br i1 %247, label %254, label %248

248:                                              ; preds = %241
  %249 = ptrtoint i8* %246 to i64
  %250 = inttoptr i64 %243 to %"class.base::internal::UncheckedObserverAdapter"*
  %251 = inttoptr i64 %243 to i64*
  store i64 %249, i64* %251, align 8
  %252 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %250, i64 1
  %253 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %252 to i64
  br label %254

254:                                              ; preds = %248, %241
  %255 = phi i64 [ %243, %241 ], [ %253, %248 ]
  %256 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %242, i64 1
  %257 = add i64 %244, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %241, !llvm.loop !10

259:                                              ; preds = %254, %233
  %260 = phi i64 [ undef, %233 ], [ %255, %254 ]
  %261 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %231, %233 ], [ %256, %254 ]
  %262 = phi i64 [ %228, %233 ], [ %255, %254 ]
  %263 = icmp ult i64 %236, 24
  br i1 %263, label %281, label %264

264:                                              ; preds = %259, %421
  %265 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %423, %421 ], [ %261, %259 ]
  %266 = phi i64 [ %422, %421 ], [ %262, %259 ]
  %267 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = icmp eq i8* %268, null
  br i1 %269, label %276, label %270

270:                                              ; preds = %264
  %271 = ptrtoint i8* %268 to i64
  %272 = inttoptr i64 %266 to %"class.base::internal::UncheckedObserverAdapter"*
  %273 = inttoptr i64 %266 to i64*
  store i64 %271, i64* %273, align 8
  %274 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %272, i64 1
  %275 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %274 to i64
  br label %276

276:                                              ; preds = %270, %264
  %277 = phi i64 [ %266, %264 ], [ %275, %270 ]
  %278 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 1, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = icmp eq i8* %279, null
  br i1 %280, label %399, label %393

281:                                              ; preds = %421, %259
  %282 = phi i64 [ %260, %259 ], [ %422, %421 ]
  %283 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %284 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %285

285:                                              ; preds = %281, %230
  %286 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %216, %230 ], [ %284, %281 ]
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %227, %230 ], [ %283, %281 ]
  %288 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %287, %286
  br i1 %288, label %290, label %289

289:                                              ; preds = %285
  store %"class.base::internal::UncheckedObserverAdapter"* %287, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  br label %290

290:                                              ; preds = %223, %289, %285, %226, %204
  %291 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %292 = icmp eq %"class.base::ObserverList"* %291, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %290
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %6, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %15) #10
  br label %294

294:                                              ; preds = %201, %290, %293
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #10
  %295 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  %296 = bitcast %"class.base::internal::LinkNodeBase"** %295 to %"class.base::LinkNode"**
  %297 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 1, i32 0
  %298 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %296, align 8
  %299 = icmp eq %"class.base::LinkNode"* %298, %297
  br i1 %299, label %312, label %300

300:                                              ; preds = %294, %309
  %301 = phi %"class.base::LinkNode"* [ %310, %309 ], [ %298, %294 ]
  %302 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %301, i64 1
  %303 = bitcast %"class.base::LinkNode"* %302 to %"class.base::ObserverList"**
  %304 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %303, align 8
  %305 = icmp eq %"class.base::ObserverList"* %304, null
  br i1 %305, label %309, label %306

306:                                              ; preds = %300
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %303, align 8
  %307 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %301, i64 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %307) #10
  %308 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %296, align 8
  br label %309

309:                                              ; preds = %306, %300
  %310 = phi %"class.base::LinkNode"* [ %301, %300 ], [ %308, %306 ]
  %311 = icmp eq %"class.base::LinkNode"* %310, %297
  br i1 %311, label %312, label %300

312:                                              ; preds = %309, %294
  %313 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %314 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %313, null
  br i1 %314, label %319, label %315

315:                                              ; preds = %312
  %316 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %313 to i64
  %317 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %12 to i64*
  store i64 %316, i64* %317, align 8
  %318 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %313 to i8*
  call void @_ZdlPv(i8* %318) #11
  br label %319

319:                                              ; preds = %312, %315
  %320 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 3
  call void @_ZN10extensions5mojom6HostIDD1Ev(%"class.extensions::mojom::HostID"* %320) #10
  %321 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 2, i32 0
  %322 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %323 = bitcast %"class.std::__1::__tree_end_node"* %322 to %"class.std::__1::__tree_node"**
  %324 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %323, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.43"* %321, %"class.std::__1::__tree_node"* %324) #10
  %325 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 1
  %326 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %325, i64 0, i32 0, i32 0
  %327 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %326, align 8
  %328 = icmp eq %"class.std::__1::unique_ptr"* %327, null
  br i1 %328, label %349, label %329

329:                                              ; preds = %319
  %330 = bitcast %"class.std::__1::unique_ptr"* %327 to i8*
  %331 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 1, i32 0, i32 1
  %332 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %331, align 8
  %333 = icmp eq %"class.std::__1::unique_ptr"* %332, %327
  br i1 %333, label %347, label %334

334:                                              ; preds = %329, %342
  %335 = phi %"class.std::__1::unique_ptr"* [ %336, %342 ], [ %332, %329 ]
  %336 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %335, i64 -1
  %337 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %336, i64 0, i32 0, i32 0, i32 0
  %338 = load %"class.extensions::UserScript"*, %"class.extensions::UserScript"** %337, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %337, align 8
  %339 = icmp eq %"class.extensions::UserScript"* %338, null
  br i1 %339, label %342, label %340

340:                                              ; preds = %334
  call void @_ZN10extensions10UserScriptD1Ev(%"class.extensions::UserScript"* nonnull %338) #10
  %341 = bitcast %"class.extensions::UserScript"* %338 to i8*
  call void @_ZdlPv(i8* %341) #11
  br label %342

342:                                              ; preds = %340, %334
  %343 = icmp eq %"class.std::__1::unique_ptr"* %336, %327
  br i1 %343, label %344, label %334

344:                                              ; preds = %342
  %345 = bitcast %"class.std::__1::vector"* %325 to i8**
  %346 = load i8*, i8** %345, align 8
  br label %347

347:                                              ; preds = %344, %329
  %348 = phi i8* [ %346, %344 ], [ %330, %329 ]
  store %"class.std::__1::unique_ptr"* %327, %"class.std::__1::unique_ptr"** %331, align 8
  call void @_ZdlPv(i8* %348) #11
  br label %349

349:                                              ; preds = %319, %347
  %350 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 0, i32 0
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %350) #10
  ret void

351:                                              ; preds = %101
  %352 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %68, i64 0, i32 0, i32 0, i32 0
  %353 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %352, align 8
  %354 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %353, i64 %104
  %355 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %354 to %"class.extensions::UserScriptSet::Observer"**
  %356 = load %"class.extensions::UserScriptSet::Observer"*, %"class.extensions::UserScriptSet::Observer"** %355, align 8
  %357 = bitcast %"class.extensions::UserScriptSet::Observer"* %356 to void (%"class.extensions::UserScriptSet::Observer"*)***
  %358 = load void (%"class.extensions::UserScriptSet::Observer"*)**, void (%"class.extensions::UserScriptSet::Observer"*)*** %357, align 8
  %359 = getelementptr inbounds void (%"class.extensions::UserScriptSet::Observer"*)*, void (%"class.extensions::UserScriptSet::Observer"*)** %358, i64 1
  %360 = load void (%"class.extensions::UserScriptSet::Observer"*)*, void (%"class.extensions::UserScriptSet::Observer"*)** %359, align 8
  call void %360(%"class.extensions::UserScriptSet::Observer"* %356) #10
  %361 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %362 = icmp eq %"class.base::ObserverList"* %361, null
  br i1 %362, label %363, label %364

363:                                              ; preds = %388, %384, %351, %364, %378
  br label %67

364:                                              ; preds = %351
  %365 = load i64, i64* %7, align 8
  %366 = add i64 %365, 1
  store i64 %366, i64* %7, align 8
  %367 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %361, i64 0, i32 0, i32 0, i32 1
  %368 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %367 to i64*
  %369 = load i64, i64* %368, align 8
  %370 = bitcast %"class.base::ObserverList"* %361 to i64*
  %371 = load i64, i64* %370, align 8
  %372 = sub i64 %369, %371
  %373 = ashr exact i64 %372, 3
  %374 = load i64, i64* %8, align 8
  %375 = icmp ult i64 %373, %374
  %376 = select i1 %375, i64 %373, i64 %374
  %377 = icmp ult i64 %366, %376
  br i1 %377, label %378, label %363

378:                                              ; preds = %364
  %379 = inttoptr i64 %371 to %"class.base::internal::UncheckedObserverAdapter"*
  %380 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %361, i64 0, i32 0, i32 0, i32 0
  %381 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %379, i64 %366, i32 0
  %382 = load i8*, i8** %381, align 8
  %383 = icmp eq i8* %382, null
  br i1 %383, label %384, label %363

384:                                              ; preds = %378, %388
  %385 = phi i64 [ %386, %388 ], [ %366, %378 ]
  %386 = add nuw i64 %385, 1
  store i64 %386, i64* %7, align 8
  %387 = icmp ult i64 %386, %376
  br i1 %387, label %388, label %363

388:                                              ; preds = %384
  %389 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %380, align 8
  %390 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %389, i64 %386, i32 0
  %391 = load i8*, i8** %390, align 8
  %392 = icmp eq i8* %391, null
  br i1 %392, label %384, label %363

393:                                              ; preds = %276
  %394 = ptrtoint i8* %279 to i64
  %395 = inttoptr i64 %277 to %"class.base::internal::UncheckedObserverAdapter"*
  %396 = inttoptr i64 %277 to i64*
  store i64 %394, i64* %396, align 8
  %397 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %395, i64 1
  %398 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %397 to i64
  br label %399

399:                                              ; preds = %393, %276
  %400 = phi i64 [ %277, %276 ], [ %398, %393 ]
  %401 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 2, i32 0
  %402 = load i8*, i8** %401, align 8
  %403 = icmp eq i8* %402, null
  br i1 %403, label %410, label %404

404:                                              ; preds = %399
  %405 = ptrtoint i8* %402 to i64
  %406 = inttoptr i64 %400 to %"class.base::internal::UncheckedObserverAdapter"*
  %407 = inttoptr i64 %400 to i64*
  store i64 %405, i64* %407, align 8
  %408 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %406, i64 1
  %409 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %408 to i64
  br label %410

410:                                              ; preds = %404, %399
  %411 = phi i64 [ %400, %399 ], [ %409, %404 ]
  %412 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 3, i32 0
  %413 = load i8*, i8** %412, align 8
  %414 = icmp eq i8* %413, null
  br i1 %414, label %421, label %415

415:                                              ; preds = %410
  %416 = ptrtoint i8* %413 to i64
  %417 = inttoptr i64 %411 to %"class.base::internal::UncheckedObserverAdapter"*
  %418 = inttoptr i64 %411 to i64*
  store i64 %416, i64* %418, align 8
  %419 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %417, i64 1
  %420 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %419 to i64
  br label %421

421:                                              ; preds = %415, %410
  %422 = phi i64 [ %411, %410 ], [ %420, %415 ]
  %423 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 4
  %424 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %423, %216
  br i1 %424, label %281, label %264

425:                                              ; preds = %183
  %426 = ptrtoint i8* %186 to i64
  %427 = inttoptr i64 %184 to %"class.base::internal::UncheckedObserverAdapter"*
  %428 = inttoptr i64 %184 to i64*
  store i64 %426, i64* %428, align 8
  %429 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %427, i64 1
  %430 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %429 to i64
  br label %431

431:                                              ; preds = %425, %183
  %432 = phi i64 [ %184, %183 ], [ %430, %425 ]
  %433 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 2, i32 0
  %434 = load i8*, i8** %433, align 8
  %435 = icmp eq i8* %434, null
  br i1 %435, label %442, label %436

436:                                              ; preds = %431
  %437 = ptrtoint i8* %434 to i64
  %438 = inttoptr i64 %432 to %"class.base::internal::UncheckedObserverAdapter"*
  %439 = inttoptr i64 %432 to i64*
  store i64 %437, i64* %439, align 8
  %440 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %438, i64 1
  %441 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %440 to i64
  br label %442

442:                                              ; preds = %436, %431
  %443 = phi i64 [ %432, %431 ], [ %441, %436 ]
  %444 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 3, i32 0
  %445 = load i8*, i8** %444, align 8
  %446 = icmp eq i8* %445, null
  br i1 %446, label %453, label %447

447:                                              ; preds = %442
  %448 = ptrtoint i8* %445 to i64
  %449 = inttoptr i64 %443 to %"class.base::internal::UncheckedObserverAdapter"*
  %450 = inttoptr i64 %443 to i64*
  store i64 %448, i64* %450, align 8
  %451 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %449, i64 1
  %452 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %451 to i64
  br label %453

453:                                              ; preds = %447, %442
  %454 = phi i64 [ %443, %442 ], [ %452, %447 ]
  %455 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 4
  %456 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %455, %123
  br i1 %456, label %188, label %171
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN10extensions5mojom6HostIDD1Ev(%"class.extensions::mojom::HostID"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13UserScriptSet11AddObserverEPNS0_8ObserverE(%"class.extensions::UserScriptSet"*, %"class.extensions::UserScriptSet::Observer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4
  %4 = icmp eq %"class.extensions::UserScriptSet::Observer"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.extensions::UserScriptSet::Observer"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.extensions::UserScriptSet::Observer"* %1 to i64
  %32 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #12
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #12
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #11
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #10
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #11
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13UserScriptSet14RemoveObserverEPNS0_8ObserverE(%"class.extensions::UserScriptSet"*, %"class.extensions::UserScriptSet::Observer"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.extensions::UserScriptSet::Observer"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #10
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13UserScriptSet13GetInjectionsEPNSt3__16vectorINS1_10unique_ptrINS_15ScriptInjectionENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEPN7content11RenderFrameEiNS_5mojom11RunLocationEb(%"class.extensions::UserScriptSet"*, %"class.std::__1::vector.59"*, %"class.content::RenderFrame"*, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.GURL, align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %class.GURL, align 8
  %12 = alloca %"class.std::__1::unique_ptr.61", align 8
  %13 = bitcast %class.GURL* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %13) #10
  %14 = bitcast %"class.content::RenderFrame"* %2 to %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)***
  %15 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)**, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %15, i64 15
  %17 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %16, align 8
  %18 = tail call %"class.blink::WebLocalFrame"* %17(%"class.content::RenderFrame"* %2) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 120, i1 false) #10, !alias.scope !11
  call void @_ZN10extensions13ScriptContext28GetDocumentLoaderURLForFrameEPKN5blink13WebLocalFrameE(%class.GURL* nonnull sret %11, %"class.blink::WebLocalFrame"* %18) #10
  %19 = bitcast %class.GURL* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1, !alias.scope !11
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %class.GURL, %class.GURL* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !alias.scope !11
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %90, label %28

28:                                               ; preds = %6
  %29 = bitcast %"class.blink::WebLocalFrame"* %18 to i1 (%"class.blink::WebLocalFrame"*)***
  %30 = load i1 (%"class.blink::WebLocalFrame"*)**, i1 (%"class.blink::WebLocalFrame"*)*** %29, align 8, !noalias !11
  %31 = getelementptr inbounds i1 (%"class.blink::WebLocalFrame"*)*, i1 (%"class.blink::WebLocalFrame"*)** %30, i64 32
  %32 = load i1 (%"class.blink::WebLocalFrame"*)*, i1 (%"class.blink::WebLocalFrame"*)** %31, align 8
  %33 = call zeroext i1 %32(%"class.blink::WebLocalFrame"* %18) #10
  br i1 %33, label %34, label %90

34:                                               ; preds = %28
  %35 = bitcast %class.GURL* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %35) #10, !noalias !11
  %36 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #10, !noalias !11
  %37 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #10, !noalias !11
  %38 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #10, !noalias !11
  %39 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 1, i8* %40, align 1, !noalias !11
  store i8 58, i8* %38, align 8, !noalias !11
  %41 = getelementptr inbounds i8, i8* %38, i64 1
  store i8 0, i8* %41, align 1, !noalias !11
  %42 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %10, i64 0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content17kViewSourceSchemeE, i64 0, i64 0)) #10, !noalias !14
  %43 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %43, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #10, !noalias !14
  %44 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %11) #10
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1, !noalias !17
  %48 = icmp slt i8 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8, !noalias !17
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8, !noalias !17
  %53 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  %54 = zext i8 %47 to i64
  %55 = select i1 %48, i8* %50, i8* %53
  %56 = select i1 %48, i64 %52, i64 %54
  %57 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %9, i8* %55, i64 %56) #10, !noalias !17
  %58 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %58, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #10, !noalias !17
  %59 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1, !noalias !11
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8, !noalias !11
  %65 = select i1 %62, i8* %64, i8* %36
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8, !noalias !11
  %68 = zext i8 %61 to i64
  %69 = select i1 %62, i64 %67, i64 %68
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %7, i8* %65, i64 %69) #10
  %70 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* nonnull %11, %class.GURL* nonnull dereferenceable(120) %7) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #10
  %71 = load i8, i8* %60, align 1, !noalias !11
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %34
  %74 = load i8*, i8** %63, align 8, !noalias !11
  call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %73, %34
  %76 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1, !noalias !11
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8, !noalias !11
  call void @_ZdlPv(i8* %82) #11
  br label %83

83:                                               ; preds = %80, %75
  %84 = load i8, i8* %40, align 1, !noalias !11
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8, !noalias !11
  call void @_ZdlPv(i8* %88) #11
  br label %89

89:                                               ; preds = %86, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #10, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #10, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #10, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %35) #10, !noalias !11
  br label %90

90:                                               ; preds = %6, %28, %89
  %91 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 1, i32 0, i32 0
  %92 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %91, align 8
  %93 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 1, i32 0, i32 1
  %94 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %93, align 8
  %95 = icmp eq %"class.std::__1::unique_ptr"* %92, %94
  br i1 %95, label %102, label %96

96:                                               ; preds = %90
  %97 = bitcast %"class.std::__1::unique_ptr.61"* %12 to i8*
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %12, i64 0, i32 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %1, i64 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %101 = bitcast %"class.std::__1::unique_ptr.61"** %99 to i64*
  br label %103

102:                                              ; preds = %125, %90
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %13) #10
  ret void

103:                                              ; preds = %96, %125
  %104 = phi %"class.std::__1::unique_ptr"* [ %92, %96 ], [ %126, %125 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #10
  store %"class.extensions::ScriptInjection"* inttoptr (i64 -6148914691236517206 to %"class.extensions::ScriptInjection"*), %"class.extensions::ScriptInjection"** %98, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.extensions::UserScript"*, %"class.extensions::UserScript"** %105, align 8
  %107 = call %"class.extensions::ScriptInjection"* @_ZN10extensions13UserScriptSet21GetInjectionForScriptEPKNS_10UserScriptEPN7content11RenderFrameEiNS_5mojom11RunLocationERK4GURLbb(%"class.extensions::UserScriptSet"* %0, %"class.extensions::UserScript"* %106, %"class.content::RenderFrame"* %2, i32 %3, i32 %4, %class.GURL* nonnull dereferenceable(120) %11, i1 zeroext false, i1 zeroext %5)
  store %"class.extensions::ScriptInjection"* %107, %"class.extensions::ScriptInjection"** %98, align 8
  %108 = icmp eq %"class.extensions::ScriptInjection"* %107, null
  %109 = ptrtoint %"class.extensions::ScriptInjection"* %107 to i64
  br i1 %108, label %110, label %111

110:                                              ; preds = %103
  store %"class.extensions::ScriptInjection"* null, %"class.extensions::ScriptInjection"** %98, align 8
  br label %125

111:                                              ; preds = %103
  %112 = load %"class.std::__1::unique_ptr.61"*, %"class.std::__1::unique_ptr.61"** %99, align 8
  %113 = load %"class.std::__1::unique_ptr.61"*, %"class.std::__1::unique_ptr.61"** %100, align 8
  %114 = icmp ult %"class.std::__1::unique_ptr.61"* %112, %113
  br i1 %114, label %115, label %119

115:                                              ; preds = %111
  store %"class.extensions::ScriptInjection"* null, %"class.extensions::ScriptInjection"** %98, align 8
  %116 = bitcast %"class.std::__1::unique_ptr.61"* %112 to i64*
  store i64 %109, i64* %116, align 8
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %112, i64 1
  %118 = ptrtoint %"class.std::__1::unique_ptr.61"* %117 to i64
  store i64 %118, i64* %101, align 8
  br label %120

119:                                              ; preds = %111
  call void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions15ScriptInjectionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.59"* %1, %"class.std::__1::unique_ptr.61"* nonnull dereferenceable(8) %12) #10
  br label %120

120:                                              ; preds = %119, %115
  %121 = load %"class.extensions::ScriptInjection"*, %"class.extensions::ScriptInjection"** %98, align 8
  store %"class.extensions::ScriptInjection"* null, %"class.extensions::ScriptInjection"** %98, align 8
  %122 = icmp eq %"class.extensions::ScriptInjection"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %120
  call void @_ZN10extensions15ScriptInjectionD1Ev(%"class.extensions::ScriptInjection"* nonnull %121) #10
  %124 = bitcast %"class.extensions::ScriptInjection"* %121 to i8*
  call void @_ZdlPv(i8* %124) #11
  br label %125

125:                                              ; preds = %110, %120, %123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #10
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 1
  %127 = icmp eq %"class.std::__1::unique_ptr"* %126, %94
  br i1 %127, label %102, label %103
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::ScriptInjection"* @_ZN10extensions13UserScriptSet21GetInjectionForScriptEPKNS_10UserScriptEPN7content11RenderFrameEiNS_5mojom11RunLocationERK4GURLbb(%"class.extensions::UserScriptSet"*, %"class.extensions::UserScript"*, %"class.content::RenderFrame"*, i32, i32, %class.GURL* dereferenceable(120), i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.GURL, align 8
  %10 = bitcast %"class.content::RenderFrame"* %2 to %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)***
  %11 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)**, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %11, i64 15
  %13 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %12, align 8
  %14 = tail call %"class.blink::WebLocalFrame"* %13(%"class.content::RenderFrame"* %2) #10
  %15 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.extensions::mojom::HostID", %"class.extensions::mojom::HostID"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 3, i32 1
  %21 = tail call %class.InjectionHost* @_ZN10extensions22ExtensionInjectionHost6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %20) #10
  %22 = ptrtoint %class.InjectionHost* %21 to i64
  %23 = icmp eq %class.InjectionHost* %21, null
  br i1 %23, label %80, label %28

24:                                               ; preds = %8
  %25 = tail call i8* @_Znwm(i64 160) #11
  %26 = bitcast i8* %25 to %class.WebUIInjectionHost*
  tail call void @_ZN18WebUIInjectionHostC1ERKN10extensions5mojom6HostIDE(%class.WebUIInjectionHost* nonnull %26, %"class.extensions::mojom::HostID"* dereferenceable(32) %15) #10
  %27 = ptrtoint i8* %25 to i64
  br label %28

28:                                               ; preds = %19, %24
  %29 = phi i64 [ %22, %19 ], [ %27, %24 ]
  %30 = bitcast %class.GURL* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %30) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 120, i1 false)
  %31 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %1, i64 0, i32 19
  %32 = load i32, i32* %31, align 4
  call void @_ZN10extensions13ScriptContext35GetEffectiveDocumentURLForInjectionEPN5blink13WebLocalFrameERK4GURLNS_29MatchOriginAsFallbackBehaviorE(%class.GURL* nonnull sret %9, %"class.blink::WebLocalFrame"* %14, %class.GURL* dereferenceable(120) %5, i32 %32) #10
  %33 = getelementptr inbounds %"class.blink::WebLocalFrame", %"class.blink::WebLocalFrame"* %14, i64 0, i32 0
  %34 = call %"class.blink::WebFrame"* @_ZNK5blink8WebFrame6ParentEv(%"class.blink::WebFrame"* %33) #10
  %35 = icmp ne %"class.blink::WebFrame"* %34, null
  %36 = call zeroext i1 @_ZNK10extensions10UserScript15MatchesDocumentERK4GURLb(%"class.extensions::UserScript"* %1, %class.GURL* nonnull dereferenceable(120) %9, i1 zeroext %35) #10
  br i1 %36, label %37, label %77

37:                                               ; preds = %28
  %38 = call i8* @_Znwm(i64 112) #11
  %39 = bitcast i8* %38 to %"class.extensions::UserScriptInjector"*
  call void @_ZN10extensions18UserScriptInjectorC1EPKNS_10UserScriptEPNS_13UserScriptSetEb(%"class.extensions::UserScriptInjector"* nonnull %39, %"class.extensions::UserScript"* %1, %"class.extensions::UserScriptSet"* %0, i1 zeroext %6) #10
  %40 = bitcast i8* %38 to %"class.extensions::ScriptInjector"*
  %41 = inttoptr i64 %29 to %class.InjectionHost*
  %42 = bitcast i8* %38 to i32 (%"class.extensions::ScriptInjector"*, %class.InjectionHost*, %"class.blink::WebLocalFrame"*, i32)***
  %43 = load i32 (%"class.extensions::ScriptInjector"*, %class.InjectionHost*, %"class.blink::WebLocalFrame"*, i32)**, i32 (%"class.extensions::ScriptInjector"*, %class.InjectionHost*, %"class.blink::WebLocalFrame"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i32 (%"class.extensions::ScriptInjector"*, %class.InjectionHost*, %"class.blink::WebLocalFrame"*, i32)*, i32 (%"class.extensions::ScriptInjector"*, %class.InjectionHost*, %"class.blink::WebLocalFrame"*, i32)** %43, i64 11
  %45 = load i32 (%"class.extensions::ScriptInjector"*, %class.InjectionHost*, %"class.blink::WebLocalFrame"*, i32)*, i32 (%"class.extensions::ScriptInjector"*, %class.InjectionHost*, %"class.blink::WebLocalFrame"*, i32)** %44, align 8
  %46 = call i32 %45(%"class.extensions::ScriptInjector"* nonnull %40, %class.InjectionHost* %41, %"class.blink::WebLocalFrame"* %14, i32 %3) #10
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %72, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %1, i64 0, i32 11, i32 0, i32 0
  %50 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %49, align 8
  %51 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %1, i64 0, i32 11, i32 0, i32 1
  %52 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %51, align 8
  %53 = icmp ne %"class.std::__1::unique_ptr.20"* %50, %52
  %54 = icmp eq i32 %4, 1
  %55 = and i1 %54, %53
  %56 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %1, i64 0, i32 10, i32 0, i32 0
  %57 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %56, align 8
  %58 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %1, i64 0, i32 10, i32 0, i32 1
  %59 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %58, align 8
  %60 = icmp eq %"class.std::__1::unique_ptr.20"* %57, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %48
  %62 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %1, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, %4
  br label %65

65:                                               ; preds = %61, %48
  %66 = phi i1 [ false, %48 ], [ %64, %61 ]
  %67 = or i1 %55, %66
  br i1 %67, label %68, label %72

68:                                               ; preds = %65
  %69 = call i8* @_Znwm(i64 96) #11
  %70 = bitcast i8* %69 to %"class.extensions::ScriptInjection"*
  call void @_ZN10extensions15ScriptInjectionC1ENSt3__110unique_ptrINS_14ScriptInjectorENS1_14default_deleteIS3_EEEEPN7content11RenderFrameENS2_IK13InjectionHostNS4_ISB_EEEENS_5mojom11RunLocationEb(%"class.extensions::ScriptInjection"* nonnull %70, %"class.extensions::ScriptInjector"* nonnull %40, %"class.content::RenderFrame"* %2, %class.InjectionHost* %41, i32 %4, i1 zeroext %7) #10
  %71 = ptrtoint i8* %69 to i64
  br label %77

72:                                               ; preds = %37, %65
  %73 = bitcast i8* %38 to void (%"class.extensions::ScriptInjector"*)***
  %74 = load void (%"class.extensions::ScriptInjector"*)**, void (%"class.extensions::ScriptInjector"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.extensions::ScriptInjector"*)*, void (%"class.extensions::ScriptInjector"*)** %74, i64 1
  %76 = load void (%"class.extensions::ScriptInjector"*)*, void (%"class.extensions::ScriptInjector"*)** %75, align 8
  call void %76(%"class.extensions::ScriptInjector"* nonnull %40) #10
  br label %77

77:                                               ; preds = %72, %68, %28
  %78 = phi i64 [ 0, %28 ], [ %71, %68 ], [ 0, %72 ]
  %79 = phi i64 [ %29, %28 ], [ 0, %68 ], [ %29, %72 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %30) #10
  br label %80

80:                                               ; preds = %19, %77
  %81 = phi i64 [ %78, %77 ], [ 0, %19 ]
  %82 = phi i64 [ %79, %77 ], [ %22, %19 ]
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %90, label %84

84:                                               ; preds = %80
  %85 = inttoptr i64 %82 to %class.InjectionHost*
  %86 = inttoptr i64 %82 to void (%class.InjectionHost*)***
  %87 = load void (%class.InjectionHost*)**, void (%class.InjectionHost*)*** %86, align 8
  %88 = getelementptr inbounds void (%class.InjectionHost*)*, void (%class.InjectionHost*)** %87, i64 1
  %89 = load void (%class.InjectionHost*)*, void (%class.InjectionHost*)** %88, align 8
  call void %89(%class.InjectionHost* nonnull %85) #10
  br label %90

90:                                               ; preds = %80, %84
  %91 = inttoptr i64 %81 to %"class.extensions::ScriptInjection"*
  ret %"class.extensions::ScriptInjection"* %91
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions13UserScriptSet17UpdateUserScriptsEN4base26ReadOnlySharedMemoryRegionE(%"class.extensions::UserScriptSet"*, %"class.base::ReadOnlySharedMemoryRegion"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.base::ReadOnlySharedMemoryMapping", align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.base::Pickle", align 8
  %8 = alloca %"class.base::PickleIterator", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.std::__1::unique_ptr", align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.logging::CheckError", align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %"class.logging::CheckError", align 8
  %19 = alloca %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %20 = alloca %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %21 = tail call %"class.extensions::ExtensionsRendererClient"* @_ZN10extensions24ExtensionsRendererClient3GetEv() #10
  %22 = bitcast %"class.extensions::ExtensionsRendererClient"* %21 to i1 (%"class.extensions::ExtensionsRendererClient"*)***
  %23 = load i1 (%"class.extensions::ExtensionsRendererClient"*)**, i1 (%"class.extensions::ExtensionsRendererClient"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.extensions::ExtensionsRendererClient"*)*, i1 (%"class.extensions::ExtensionsRendererClient"*)** %23, i64 2
  %25 = load i1 (%"class.extensions::ExtensionsRendererClient"*)*, i1 (%"class.extensions::ExtensionsRendererClient"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.extensions::ExtensionsRendererClient"* %21) #10
  %27 = bitcast %"class.base::ReadOnlySharedMemoryMapping"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #10
  call void @_ZNK4base26ReadOnlySharedMemoryRegion3MapEv(%"class.base::ReadOnlySharedMemoryMapping"* nonnull sret %4, %"class.base::ReadOnlySharedMemoryRegion"* %1) #10
  %28 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 0
  %29 = call dereferenceable(48) %"class.base::ReadOnlySharedMemoryMapping"* @_ZN4base27ReadOnlySharedMemoryMappingaSEOS0_(%"class.base::ReadOnlySharedMemoryMapping"* %28, %"class.base::ReadOnlySharedMemoryMapping"* nonnull dereferenceable(48) %4) #10
  %30 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %4, i64 0, i32 0
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #10
  %31 = call zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"* %1) #10
  br i1 %31, label %32, label %553

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 0, i32 0, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %553, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %553, label %40

40:                                               ; preds = %36
  %41 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #10
  store i64 -6148914691236517206, i64* %5, align 8
  %42 = bitcast i8* %34 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = add nuw nsw i64 %44, 4
  store i64 %45, i64* %5, align 8
  %46 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #10
  store i32 0, i32* %6, align 4
  %47 = icmp ult i64 %38, %45
  br i1 %47, label %551, label %48

48:                                               ; preds = %40
  %49 = bitcast %"class.base::Pickle"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %49) #10
  %50 = bitcast %"class.base::Pickle"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 40, i1 false)
  call void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"* nonnull %7, i8* nonnull %34, i64 %45) #10
  %51 = bitcast %"class.base::PickleIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #10
  %52 = bitcast %"class.base::PickleIterator"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 24, i1 false)
  call void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"* nonnull %8, %"class.base::Pickle"* nonnull dereferenceable(40) %7) #10
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %41) #10
  %53 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"* nonnull %8, i32* nonnull %6) #10
  br i1 %53, label %57, label %54

54:                                               ; preds = %48
  %55 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 119, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0)) #10
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  br label %57

57:                                               ; preds = %48, %54
  %58 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  %59 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %59, align 8
  %60 = load i32, i32* %6, align 4
  %61 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  %62 = icmp ult i32 %60, 100000
  br i1 %62, label %63, label %64

63:                                               ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  store i8* null, i8** %59, align 8
  br label %73

64:                                               ; preds = %57
  %65 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %60) #10
  %66 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 100000) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i8* %65, i8* %66) #10
  %67 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  store i8* %68, i8** %59, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 124, %"class.logging::CheckOpResult"* nonnull %10) #10
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #10
  br label %73

73:                                               ; preds = %63, %64, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #10
  %74 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 1
  %75 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %75, align 8
  %77 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 1, i32 0, i32 1
  %78 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %77, align 8
  %79 = icmp eq %"class.std::__1::unique_ptr"* %78, %76
  br i1 %79, label %90, label %80

80:                                               ; preds = %73, %88
  %81 = phi %"class.std::__1::unique_ptr"* [ %82, %88 ], [ %78, %73 ]
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 -1
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.extensions::UserScript"*, %"class.extensions::UserScript"** %83, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %83, align 8
  %85 = icmp eq %"class.extensions::UserScript"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %80
  call void @_ZN10extensions10UserScriptD1Ev(%"class.extensions::UserScript"* nonnull %84) #10
  %87 = bitcast %"class.extensions::UserScript"* %84 to i8*
  call void @_ZdlPv(i8* %87) #11
  br label %88

88:                                               ; preds = %86, %80
  %89 = icmp eq %"class.std::__1::unique_ptr"* %82, %76
  br i1 %89, label %90, label %80

90:                                               ; preds = %88, %73
  store %"class.std::__1::unique_ptr"* %76, %"class.std::__1::unique_ptr"** %77, align 8
  %91 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 2
  %92 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %91, i64 0, i32 0
  %93 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %94 = bitcast %"class.std::__1::__tree_end_node"* %93 to %"class.std::__1::__tree_node"**
  %95 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %94, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.43"* %92, %"class.std::__1::__tree_node"* %95) #10
  %96 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %91, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %93, %"class.std::__1::__tree_end_node"** %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %98, align 8
  %99 = load i32, i32* %6, align 4
  %100 = zext i32 %99 to i64
  call void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions10UserScriptENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE7reserveEm(%"class.std::__1::vector"* %74, i64 %100)
  %101 = load i32, i32* %6, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %117, label %103

103:                                              ; preds = %90
  %104 = bitcast %"class.std::__1::unique_ptr"* %12 to i8*
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  %107 = bitcast i8** %13 to i8*
  %108 = bitcast i32* %14 to i8*
  %109 = bitcast %"class.logging::CheckError"* %15 to i8*
  %110 = bitcast i8** %13 to i64*
  %111 = bitcast i8** %16 to i8*
  %112 = bitcast i32* %17 to i8*
  %113 = bitcast %"class.logging::CheckError"* %18 to i8*
  %114 = bitcast i8** %16 to i64*
  %115 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %116 = bitcast %"class.std::__1::unique_ptr"** %77 to i64*
  br label %181

117:                                              ; preds = %278, %90
  %118 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4
  %119 = bitcast %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %119) #10
  %120 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %19, i64 0, i32 0, i32 1
  %121 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %19, i64 0, i32 1
  %122 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %19, i64 0, i32 2
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %118, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 40, i1 false)
  %125 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8, !noalias !20
  %126 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %127 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %126, align 8, !noalias !20
  %128 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %125, %127
  %129 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %19, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %129) #10
  br i1 %128, label %130, label %132

130:                                              ; preds = %117
  %131 = bitcast %"class.base::ObserverList"** %120 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 24, i1 false) #10, !alias.scope !20
  br label %172

132:                                              ; preds = %117
  store %"class.base::ObserverList"* %118, %"class.base::ObserverList"** %120, align 8
  %133 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %129, %"class.base::internal::LinkNodeBase"* %133) #10
  store i64 0, i64* %121, align 8
  %134 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 3
  %135 = load i32, i32* %134, align 8
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %144, label %137

137:                                              ; preds = %132
  %138 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %126 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.base::ObserverList"* %118 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %139, %141
  %143 = ashr exact i64 %142, 3
  br label %144

144:                                              ; preds = %137, %132
  %145 = phi i64 [ %143, %137 ], [ -1, %132 ]
  store i64 %145, i64* %122, align 8
  %146 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %120, align 8
  %147 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %146, i64 0, i32 0, i32 0, i32 1
  %148 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.base::ObserverList"* %146 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = sub i64 %149, %151
  %153 = ashr exact i64 %152, 3
  %154 = icmp ult i64 %153, %145
  %155 = select i1 %154, i64 %153, i64 %145
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %172, label %157

157:                                              ; preds = %144
  %158 = inttoptr i64 %151 to %"class.base::internal::UncheckedObserverAdapter"*
  %159 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %146, i64 0, i32 0, i32 0, i32 0
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 0, i32 0
  %161 = load i8*, i8** %160, align 8
  %162 = icmp eq i8* %161, null
  br i1 %162, label %163, label %172

163:                                              ; preds = %157, %167
  %164 = phi i64 [ %165, %167 ], [ 0, %157 ]
  %165 = add nuw i64 %164, 1
  store i64 %165, i64* %121, align 8
  %166 = icmp ult i64 %165, %155
  br i1 %166, label %167, label %172

167:                                              ; preds = %163
  %168 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %159, align 8
  %169 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %168, i64 %165, i32 0
  %170 = load i8*, i8** %169, align 8
  %171 = icmp eq i8* %170, null
  br i1 %171, label %163, label %172

172:                                              ; preds = %167, %163, %157, %144, %130
  %173 = bitcast %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %173) #10
  %174 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %20, i64 0, i32 0, i32 1
  %175 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %20, i64 0, i32 1
  %176 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %20, i64 0, i32 2
  %177 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %20, i64 0, i32 0, i32 0, i32 0
  %178 = bitcast %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %178, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %177) #10
  %179 = bitcast %"class.base::ObserverList"** %174 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 24, i1 false) #10, !alias.scope !23
  %180 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %120, align 8
  br label %282

181:                                              ; preds = %103, %278
  %182 = phi i32 [ 0, %103 ], [ %279, %278 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #10
  store %"class.extensions::UserScript"* inttoptr (i64 -6148914691236517206 to %"class.extensions::UserScript"*), %"class.extensions::UserScript"** %105, align 8
  %183 = call i8* @_Znwm(i64 328) #11
  %184 = bitcast i8* %183 to %"class.extensions::UserScript"*
  call void @_ZN10extensions10UserScriptC1Ev(%"class.extensions::UserScript"* nonnull %184) #10
  %185 = ptrtoint i8* %183 to i64
  store i64 %185, i64* %106, align 8
  call void @_ZN10extensions10UserScript8UnpickleERKN4base6PickleEPNS1_14PickleIteratorE(%"class.extensions::UserScript"* nonnull %184, %"class.base::Pickle"* nonnull dereferenceable(40) %7, %"class.base::PickleIterator"* nonnull %8) #10
  %186 = load %"class.extensions::UserScript"*, %"class.extensions::UserScript"** %105, align 8
  %187 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %186, i64 0, i32 10
  %188 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %186, i64 0, i32 10, i32 0, i32 1
  %189 = bitcast %"class.std::__1::unique_ptr.20"** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.std::__1::vector.18"* %187 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = icmp eq i64 %190, %192
  br i1 %193, label %194, label %203

194:                                              ; preds = %208, %181
  %195 = phi %"class.extensions::UserScript"* [ %186, %181 ], [ %209, %208 ]
  %196 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %195, i64 0, i32 11
  %197 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %195, i64 0, i32 11, i32 0, i32 1
  %198 = bitcast %"class.std::__1::unique_ptr.20"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = bitcast %"class.std::__1::vector.18"* %196 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = icmp eq i64 %199, %201
  br i1 %202, label %230, label %233

203:                                              ; preds = %181, %208
  %204 = phi i64 [ %220, %208 ], [ 0, %181 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #10
  store i8* null, i8** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108) #10
  store i32 0, i32* %14, align 4
  %205 = call zeroext i1 @_ZN4base14PickleIterator8ReadDataEPPKcPi(%"class.base::PickleIterator"* nonnull %8, i8** nonnull %13, i32* nonnull %14) #10
  br i1 %205, label %208, label %206

206:                                              ; preds = %203
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 139, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0)) #10
  %207 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #10
  br label %208

208:                                              ; preds = %203, %206
  %209 = load %"class.extensions::UserScript"*, %"class.extensions::UserScript"** %105, align 8
  %210 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %209, i64 0, i32 10, i32 0, i32 0
  %211 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %210, align 8
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %211, i64 %204, i32 0, i32 0, i32 0
  %213 = load %"class.extensions::UserScript::File"*, %"class.extensions::UserScript::File"** %212, align 8
  %214 = load i64, i64* %110, align 8
  %215 = load i32, i32* %14, align 4
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds %"class.extensions::UserScript::File", %"class.extensions::UserScript::File"* %213, i64 0, i32 3, i32 0
  %218 = bitcast i8** %217 to i64*
  store i64 %214, i64* %218, align 8
  %219 = getelementptr inbounds %"class.extensions::UserScript::File", %"class.extensions::UserScript::File"* %213, i64 0, i32 3, i32 1
  store i64 %216, i64* %219, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %108) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #10
  %220 = add nuw i64 %204, 1
  %221 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %209, i64 0, i32 10
  %222 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %209, i64 0, i32 10, i32 0, i32 1
  %223 = bitcast %"class.std::__1::unique_ptr.20"** %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = bitcast %"class.std::__1::vector.18"* %221 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = sub i64 %224, %226
  %228 = ashr exact i64 %227, 3
  %229 = icmp ult i64 %220, %228
  br i1 %229, label %203, label %194

230:                                              ; preds = %238, %194
  %231 = phi %"class.extensions::UserScript"* [ %195, %194 ], [ %239, %238 ]
  %232 = ptrtoint %"class.extensions::UserScript"* %231 to i64
  br i1 %26, label %260, label %264

233:                                              ; preds = %194, %238
  %234 = phi i64 [ %250, %238 ], [ 0, %194 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #10
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #10
  store i32 0, i32* %17, align 4
  %235 = call zeroext i1 @_ZN4base14PickleIterator8ReadDataEPPKcPi(%"class.base::PickleIterator"* nonnull %8, i8** nonnull %16, i32* nonnull %17) #10
  br i1 %235, label %238, label %236

236:                                              ; preds = %233
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %18, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 146, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0)) #10
  %237 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %18) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #10
  br label %238

238:                                              ; preds = %233, %236
  %239 = load %"class.extensions::UserScript"*, %"class.extensions::UserScript"** %105, align 8
  %240 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %239, i64 0, i32 11, i32 0, i32 0
  %241 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %240, align 8
  %242 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %241, i64 %234, i32 0, i32 0, i32 0
  %243 = load %"class.extensions::UserScript::File"*, %"class.extensions::UserScript::File"** %242, align 8
  %244 = load i64, i64* %114, align 8
  %245 = load i32, i32* %17, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds %"class.extensions::UserScript::File", %"class.extensions::UserScript::File"* %243, i64 0, i32 3, i32 0
  %248 = bitcast i8** %247 to i64*
  store i64 %244, i64* %248, align 8
  %249 = getelementptr inbounds %"class.extensions::UserScript::File", %"class.extensions::UserScript::File"* %243, i64 0, i32 3, i32 1
  store i64 %246, i64* %249, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #10
  %250 = add nuw i64 %234, 1
  %251 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %239, i64 0, i32 11
  %252 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %239, i64 0, i32 11, i32 0, i32 1
  %253 = bitcast %"class.std::__1::unique_ptr.20"** %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = bitcast %"class.std::__1::vector.18"* %251 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = sub i64 %254, %256
  %258 = ashr exact i64 %257, 3
  %259 = icmp ult i64 %250, %258
  br i1 %259, label %233, label %230

260:                                              ; preds = %230
  %261 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %231, i64 0, i32 20
  %262 = load i8, i8* %261, align 8, !range !26
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %273, label %264

264:                                              ; preds = %260, %230
  %265 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %77, align 8
  %266 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %115, align 8
  %267 = icmp ult %"class.std::__1::unique_ptr"* %265, %266
  br i1 %267, label %268, label %272

268:                                              ; preds = %264
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %105, align 8
  %269 = bitcast %"class.std::__1::unique_ptr"* %265 to i64*
  store i64 %232, i64* %269, align 8
  %270 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %265, i64 1
  %271 = ptrtoint %"class.std::__1::unique_ptr"* %270 to i64
  store i64 %271, i64* %116, align 8
  br label %273

272:                                              ; preds = %264
  call void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions10UserScriptENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %74, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %12) #10
  br label %273

273:                                              ; preds = %260, %272, %268
  %274 = load %"class.extensions::UserScript"*, %"class.extensions::UserScript"** %105, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %105, align 8
  %275 = icmp eq %"class.extensions::UserScript"* %274, null
  br i1 %275, label %278, label %276

276:                                              ; preds = %273
  call void @_ZN10extensions10UserScriptD1Ev(%"class.extensions::UserScript"* nonnull %274) #10
  %277 = bitcast %"class.extensions::UserScript"* %274 to i8*
  call void @_ZdlPv(i8* %277) #11
  br label %278

278:                                              ; preds = %273, %276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #10
  %279 = add nuw i32 %182, 1
  %280 = load i32, i32* %6, align 4
  %281 = icmp ult i32 %279, %280
  br i1 %281, label %181, label %117

282:                                              ; preds = %521, %172
  %283 = phi %"class.base::ObserverList"* [ %180, %172 ], [ %519, %521 ]
  %284 = icmp eq %"class.base::ObserverList"* %283, null
  br i1 %284, label %300, label %285

285:                                              ; preds = %282
  %286 = load i64, i64* %121, align 8
  %287 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %283, i64 0, i32 0, i32 0, i32 1
  %288 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast %"class.base::ObserverList"* %283 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = sub i64 %289, %291
  %293 = ashr exact i64 %292, 3
  %294 = load i64, i64* %122, align 8
  %295 = icmp ult i64 %293, %294
  %296 = select i1 %295, i64 %293, i64 %294
  %297 = icmp eq i64 %286, %296
  br i1 %297, label %300, label %298

298:                                              ; preds = %285
  %299 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %174, align 8
  br label %316

300:                                              ; preds = %285, %282
  %301 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %174, align 8
  %302 = icmp eq %"class.base::ObserverList"* %301, null
  br i1 %302, label %416, label %303

303:                                              ; preds = %300
  %304 = load i64, i64* %175, align 8
  %305 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %301, i64 0, i32 0, i32 0, i32 1
  %306 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %305 to i64*
  %307 = load i64, i64* %306, align 8
  %308 = bitcast %"class.base::ObserverList"* %301 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = sub i64 %307, %309
  %311 = ashr exact i64 %310, 3
  %312 = load i64, i64* %176, align 8
  %313 = icmp ult i64 %311, %312
  %314 = select i1 %313, i64 %311, i64 %312
  %315 = icmp eq i64 %304, %314
  br i1 %315, label %325, label %316

316:                                              ; preds = %303, %298
  %317 = phi %"class.base::ObserverList"* [ %299, %298 ], [ %301, %303 ]
  %318 = icmp eq %"class.base::ObserverList"* %283, %317
  %319 = load i64, i64* %121, align 8
  %320 = load i64, i64* %175, align 8
  %321 = icmp eq i64 %319, %320
  %322 = and i1 %318, %321
  br i1 %322, label %323, label %510

323:                                              ; preds = %316
  %324 = icmp eq %"class.base::ObserverList"* %283, null
  br i1 %324, label %416, label %325

325:                                              ; preds = %303, %323
  %326 = phi %"class.base::ObserverList"* [ %283, %323 ], [ %301, %303 ]
  %327 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %326, i64 0, i32 1
  %328 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %326, i64 0, i32 1, i32 0, i32 0, i32 1
  %329 = bitcast %"class.base::internal::LinkNodeBase"** %328 to %"class.base::LinkNode"**
  %330 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %329, align 8
  %331 = bitcast %"class.base::LinkedList"* %327 to %"class.base::LinkNode"**
  %332 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %331, align 8
  %333 = icmp eq %"class.base::LinkNode"* %330, %332
  br i1 %333, label %334, label %412

334:                                              ; preds = %325
  %335 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %326, i64 0, i32 0, i32 0, i32 0
  %336 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %335, align 8
  %337 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %326, i64 0, i32 0, i32 0, i32 1
  %338 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %337, align 8
  %339 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %336, %338
  br i1 %339, label %348, label %340

340:                                              ; preds = %334, %345
  %341 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %346, %345 ], [ %336, %334 ]
  %342 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %341, i64 0, i32 0
  %343 = load i8*, i8** %342, align 8
  %344 = icmp eq i8* %343, null
  br i1 %344, label %348, label %345

345:                                              ; preds = %340
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %341, i64 1
  %347 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %346, %338
  br i1 %347, label %412, label %340

348:                                              ; preds = %340, %334
  %349 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %336, %334 ], [ %341, %340 ]
  %350 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %349 to i64
  %351 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %349, %338
  br i1 %351, label %412, label %352

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 1
  %354 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %353, %338
  br i1 %354, label %407, label %355

355:                                              ; preds = %352
  %356 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %338, i64 -2, i32 0
  %357 = ptrtoint i8** %356 to i64
  %358 = sub i64 %357, %350
  %359 = lshr i64 %358, 3
  %360 = add nuw nsw i64 %359, 1
  %361 = and i64 %360, 3
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %381, label %363

363:                                              ; preds = %355, %376
  %364 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %378, %376 ], [ %353, %355 ]
  %365 = phi i64 [ %377, %376 ], [ %350, %355 ]
  %366 = phi i64 [ %379, %376 ], [ %361, %355 ]
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 0, i32 0
  %368 = load i8*, i8** %367, align 8
  %369 = icmp eq i8* %368, null
  br i1 %369, label %376, label %370

370:                                              ; preds = %363
  %371 = ptrtoint i8* %368 to i64
  %372 = inttoptr i64 %365 to %"class.base::internal::UncheckedObserverAdapter"*
  %373 = inttoptr i64 %365 to i64*
  store i64 %371, i64* %373, align 8
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %372, i64 1
  %375 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %374 to i64
  br label %376

376:                                              ; preds = %370, %363
  %377 = phi i64 [ %365, %363 ], [ %375, %370 ]
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 1
  %379 = add i64 %366, -1
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %381, label %363, !llvm.loop !27

381:                                              ; preds = %376, %355
  %382 = phi i64 [ undef, %355 ], [ %377, %376 ]
  %383 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %353, %355 ], [ %378, %376 ]
  %384 = phi i64 [ %350, %355 ], [ %377, %376 ]
  %385 = icmp ult i64 %358, 24
  br i1 %385, label %403, label %386

386:                                              ; preds = %381, %615
  %387 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %617, %615 ], [ %383, %381 ]
  %388 = phi i64 [ %616, %615 ], [ %384, %381 ]
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 0, i32 0
  %390 = load i8*, i8** %389, align 8
  %391 = icmp eq i8* %390, null
  br i1 %391, label %398, label %392

392:                                              ; preds = %386
  %393 = ptrtoint i8* %390 to i64
  %394 = inttoptr i64 %388 to %"class.base::internal::UncheckedObserverAdapter"*
  %395 = inttoptr i64 %388 to i64*
  store i64 %393, i64* %395, align 8
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %394, i64 1
  %397 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %396 to i64
  br label %398

398:                                              ; preds = %392, %386
  %399 = phi i64 [ %388, %386 ], [ %397, %392 ]
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 1, i32 0
  %401 = load i8*, i8** %400, align 8
  %402 = icmp eq i8* %401, null
  br i1 %402, label %593, label %587

403:                                              ; preds = %615, %381
  %404 = phi i64 [ %382, %381 ], [ %616, %615 ]
  %405 = inttoptr i64 %404 to %"class.base::internal::UncheckedObserverAdapter"*
  %406 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %337, align 8
  br label %407

407:                                              ; preds = %403, %352
  %408 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %338, %352 ], [ %406, %403 ]
  %409 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %349, %352 ], [ %405, %403 ]
  %410 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %409, %408
  br i1 %410, label %412, label %411

411:                                              ; preds = %407
  store %"class.base::internal::UncheckedObserverAdapter"* %409, %"class.base::internal::UncheckedObserverAdapter"** %337, align 8
  br label %412

412:                                              ; preds = %345, %411, %407, %348, %325
  %413 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %174, align 8
  %414 = icmp eq %"class.base::ObserverList"* %413, null
  br i1 %414, label %416, label %415

415:                                              ; preds = %412
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %174, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %177) #10
  br label %416

416:                                              ; preds = %300, %323, %412, %415
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %173) #10
  %417 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %120, align 8
  %418 = icmp eq %"class.base::ObserverList"* %417, null
  br i1 %418, label %509, label %419

419:                                              ; preds = %416
  %420 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %417, i64 0, i32 1
  %421 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %417, i64 0, i32 1, i32 0, i32 0, i32 1
  %422 = bitcast %"class.base::internal::LinkNodeBase"** %421 to %"class.base::LinkNode"**
  %423 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %422, align 8
  %424 = bitcast %"class.base::LinkedList"* %420 to %"class.base::LinkNode"**
  %425 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %424, align 8
  %426 = icmp eq %"class.base::LinkNode"* %423, %425
  br i1 %426, label %427, label %505

427:                                              ; preds = %419
  %428 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %417, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %428, align 8
  %430 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %417, i64 0, i32 0, i32 0, i32 1
  %431 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %430, align 8
  %432 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %429, %431
  br i1 %432, label %441, label %433

433:                                              ; preds = %427, %438
  %434 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %439, %438 ], [ %429, %427 ]
  %435 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %434, i64 0, i32 0
  %436 = load i8*, i8** %435, align 8
  %437 = icmp eq i8* %436, null
  br i1 %437, label %441, label %438

438:                                              ; preds = %433
  %439 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %434, i64 1
  %440 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %439, %431
  br i1 %440, label %505, label %433

441:                                              ; preds = %433, %427
  %442 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %429, %427 ], [ %434, %433 ]
  %443 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %442 to i64
  %444 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %442, %431
  br i1 %444, label %505, label %445

445:                                              ; preds = %441
  %446 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %442, i64 1
  %447 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %446, %431
  br i1 %447, label %500, label %448

448:                                              ; preds = %445
  %449 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %431, i64 -2, i32 0
  %450 = ptrtoint i8** %449 to i64
  %451 = sub i64 %450, %443
  %452 = lshr i64 %451, 3
  %453 = add nuw nsw i64 %452, 1
  %454 = and i64 %453, 3
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %474, label %456

456:                                              ; preds = %448, %469
  %457 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %471, %469 ], [ %446, %448 ]
  %458 = phi i64 [ %470, %469 ], [ %443, %448 ]
  %459 = phi i64 [ %472, %469 ], [ %454, %448 ]
  %460 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %457, i64 0, i32 0
  %461 = load i8*, i8** %460, align 8
  %462 = icmp eq i8* %461, null
  br i1 %462, label %469, label %463

463:                                              ; preds = %456
  %464 = ptrtoint i8* %461 to i64
  %465 = inttoptr i64 %458 to %"class.base::internal::UncheckedObserverAdapter"*
  %466 = inttoptr i64 %458 to i64*
  store i64 %464, i64* %466, align 8
  %467 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %465, i64 1
  %468 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %467 to i64
  br label %469

469:                                              ; preds = %463, %456
  %470 = phi i64 [ %458, %456 ], [ %468, %463 ]
  %471 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %457, i64 1
  %472 = add i64 %459, -1
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %474, label %456, !llvm.loop !28

474:                                              ; preds = %469, %448
  %475 = phi i64 [ undef, %448 ], [ %470, %469 ]
  %476 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %446, %448 ], [ %471, %469 ]
  %477 = phi i64 [ %443, %448 ], [ %470, %469 ]
  %478 = icmp ult i64 %451, 24
  br i1 %478, label %496, label %479

479:                                              ; preds = %474, %583
  %480 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %585, %583 ], [ %476, %474 ]
  %481 = phi i64 [ %584, %583 ], [ %477, %474 ]
  %482 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %480, i64 0, i32 0
  %483 = load i8*, i8** %482, align 8
  %484 = icmp eq i8* %483, null
  br i1 %484, label %491, label %485

485:                                              ; preds = %479
  %486 = ptrtoint i8* %483 to i64
  %487 = inttoptr i64 %481 to %"class.base::internal::UncheckedObserverAdapter"*
  %488 = inttoptr i64 %481 to i64*
  store i64 %486, i64* %488, align 8
  %489 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %487, i64 1
  %490 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %489 to i64
  br label %491

491:                                              ; preds = %485, %479
  %492 = phi i64 [ %481, %479 ], [ %490, %485 ]
  %493 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %480, i64 1, i32 0
  %494 = load i8*, i8** %493, align 8
  %495 = icmp eq i8* %494, null
  br i1 %495, label %561, label %555

496:                                              ; preds = %583, %474
  %497 = phi i64 [ %475, %474 ], [ %584, %583 ]
  %498 = inttoptr i64 %497 to %"class.base::internal::UncheckedObserverAdapter"*
  %499 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %430, align 8
  br label %500

500:                                              ; preds = %496, %445
  %501 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %431, %445 ], [ %499, %496 ]
  %502 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %442, %445 ], [ %498, %496 ]
  %503 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %502, %501
  br i1 %503, label %505, label %504

504:                                              ; preds = %500
  store %"class.base::internal::UncheckedObserverAdapter"* %502, %"class.base::internal::UncheckedObserverAdapter"** %430, align 8
  br label %505

505:                                              ; preds = %438, %504, %500, %441, %419
  %506 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %120, align 8
  %507 = icmp eq %"class.base::ObserverList"* %506, null
  br i1 %507, label %509, label %508

508:                                              ; preds = %505
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %120, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %129) #10
  br label %509

509:                                              ; preds = %416, %505, %508
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %119) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #10
  call void @_ZN4base6PickleD1Ev(%"class.base::Pickle"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #10
  br label %551

510:                                              ; preds = %316
  %511 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %283, i64 0, i32 0, i32 0, i32 0
  %512 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %511, align 8
  %513 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %512, i64 %319
  %514 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %513 to %"class.extensions::UserScriptSet::Observer"**
  %515 = load %"class.extensions::UserScriptSet::Observer"*, %"class.extensions::UserScriptSet::Observer"** %514, align 8
  %516 = bitcast %"class.extensions::UserScriptSet::Observer"* %515 to void (%"class.extensions::UserScriptSet::Observer"*)***
  %517 = load void (%"class.extensions::UserScriptSet::Observer"*)**, void (%"class.extensions::UserScriptSet::Observer"*)*** %516, align 8
  %518 = load void (%"class.extensions::UserScriptSet::Observer"*)*, void (%"class.extensions::UserScriptSet::Observer"*)** %517, align 8
  call void %518(%"class.extensions::UserScriptSet::Observer"* %515) #10
  %519 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %120, align 8
  %520 = icmp eq %"class.base::ObserverList"* %519, null
  br i1 %520, label %521, label %522

521:                                              ; preds = %546, %542, %510, %522, %536
  br label %282

522:                                              ; preds = %510
  %523 = load i64, i64* %121, align 8
  %524 = add i64 %523, 1
  store i64 %524, i64* %121, align 8
  %525 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %519, i64 0, i32 0, i32 0, i32 1
  %526 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = bitcast %"class.base::ObserverList"* %519 to i64*
  %529 = load i64, i64* %528, align 8
  %530 = sub i64 %527, %529
  %531 = ashr exact i64 %530, 3
  %532 = load i64, i64* %122, align 8
  %533 = icmp ult i64 %531, %532
  %534 = select i1 %533, i64 %531, i64 %532
  %535 = icmp ult i64 %524, %534
  br i1 %535, label %536, label %521

536:                                              ; preds = %522
  %537 = inttoptr i64 %529 to %"class.base::internal::UncheckedObserverAdapter"*
  %538 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %519, i64 0, i32 0, i32 0, i32 0
  %539 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %537, i64 %524, i32 0
  %540 = load i8*, i8** %539, align 8
  %541 = icmp eq i8* %540, null
  br i1 %541, label %542, label %521

542:                                              ; preds = %536, %546
  %543 = phi i64 [ %544, %546 ], [ %524, %536 ]
  %544 = add nuw i64 %543, 1
  store i64 %544, i64* %121, align 8
  %545 = icmp ult i64 %544, %534
  br i1 %545, label %546, label %521

546:                                              ; preds = %542
  %547 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %538, align 8
  %548 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %547, i64 %544, i32 0
  %549 = load i8*, i8** %548, align 8
  %550 = icmp eq i8* %549, null
  br i1 %550, label %542, label %521

551:                                              ; preds = %40, %509
  %552 = phi i1 [ true, %509 ], [ false, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #10
  br label %553

553:                                              ; preds = %36, %32, %551, %2
  %554 = phi i1 [ false, %2 ], [ %552, %551 ], [ false, %32 ], [ false, %36 ]
  ret i1 %554

555:                                              ; preds = %491
  %556 = ptrtoint i8* %494 to i64
  %557 = inttoptr i64 %492 to %"class.base::internal::UncheckedObserverAdapter"*
  %558 = inttoptr i64 %492 to i64*
  store i64 %556, i64* %558, align 8
  %559 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %557, i64 1
  %560 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %559 to i64
  br label %561

561:                                              ; preds = %555, %491
  %562 = phi i64 [ %492, %491 ], [ %560, %555 ]
  %563 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %480, i64 2, i32 0
  %564 = load i8*, i8** %563, align 8
  %565 = icmp eq i8* %564, null
  br i1 %565, label %572, label %566

566:                                              ; preds = %561
  %567 = ptrtoint i8* %564 to i64
  %568 = inttoptr i64 %562 to %"class.base::internal::UncheckedObserverAdapter"*
  %569 = inttoptr i64 %562 to i64*
  store i64 %567, i64* %569, align 8
  %570 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %568, i64 1
  %571 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %570 to i64
  br label %572

572:                                              ; preds = %566, %561
  %573 = phi i64 [ %562, %561 ], [ %571, %566 ]
  %574 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %480, i64 3, i32 0
  %575 = load i8*, i8** %574, align 8
  %576 = icmp eq i8* %575, null
  br i1 %576, label %583, label %577

577:                                              ; preds = %572
  %578 = ptrtoint i8* %575 to i64
  %579 = inttoptr i64 %573 to %"class.base::internal::UncheckedObserverAdapter"*
  %580 = inttoptr i64 %573 to i64*
  store i64 %578, i64* %580, align 8
  %581 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %579, i64 1
  %582 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %581 to i64
  br label %583

583:                                              ; preds = %577, %572
  %584 = phi i64 [ %573, %572 ], [ %582, %577 ]
  %585 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %480, i64 4
  %586 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %585, %431
  br i1 %586, label %496, label %479

587:                                              ; preds = %398
  %588 = ptrtoint i8* %401 to i64
  %589 = inttoptr i64 %399 to %"class.base::internal::UncheckedObserverAdapter"*
  %590 = inttoptr i64 %399 to i64*
  store i64 %588, i64* %590, align 8
  %591 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %589, i64 1
  %592 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %591 to i64
  br label %593

593:                                              ; preds = %587, %398
  %594 = phi i64 [ %399, %398 ], [ %592, %587 ]
  %595 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 2, i32 0
  %596 = load i8*, i8** %595, align 8
  %597 = icmp eq i8* %596, null
  br i1 %597, label %604, label %598

598:                                              ; preds = %593
  %599 = ptrtoint i8* %596 to i64
  %600 = inttoptr i64 %594 to %"class.base::internal::UncheckedObserverAdapter"*
  %601 = inttoptr i64 %594 to i64*
  store i64 %599, i64* %601, align 8
  %602 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %600, i64 1
  %603 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %602 to i64
  br label %604

604:                                              ; preds = %598, %593
  %605 = phi i64 [ %594, %593 ], [ %603, %598 ]
  %606 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 3, i32 0
  %607 = load i8*, i8** %606, align 8
  %608 = icmp eq i8* %607, null
  br i1 %608, label %615, label %609

609:                                              ; preds = %604
  %610 = ptrtoint i8* %607 to i64
  %611 = inttoptr i64 %605 to %"class.base::internal::UncheckedObserverAdapter"*
  %612 = inttoptr i64 %605 to i64*
  store i64 %610, i64* %612, align 8
  %613 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %611, i64 1
  %614 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %613 to i64
  br label %615

615:                                              ; preds = %609, %604
  %616 = phi i64 [ %605, %604 ], [ %614, %609 ]
  %617 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %387, i64 4
  %618 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %617, %338
  br i1 %618, label %403, label %386
}

declare %"class.extensions::ExtensionsRendererClient"* @_ZN10extensions24ExtensionsRendererClient3GetEv() local_unnamed_addr #1

declare void @_ZNK4base26ReadOnlySharedMemoryRegion3MapEv(%"class.base::ReadOnlySharedMemoryMapping"* sret, %"class.base::ReadOnlySharedMemoryRegion"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(48) %"class.base::ReadOnlySharedMemoryMapping"* @_ZN4base27ReadOnlySharedMemoryMappingaSEOS0_(%"class.base::ReadOnlySharedMemoryMapping"*, %"class.base::ReadOnlySharedMemoryMapping"* dereferenceable(48)) local_unnamed_addr #3

declare zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"*) local_unnamed_addr #1

declare void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"*, i8*, i64) unnamed_addr #1

declare void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"*, %"class.base::Pickle"* dereferenceable(40)) unnamed_addr #1

declare void @_ZN4base5debug5AliasEPKv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions10UserScriptENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::unique_ptr"*
  br i1 %10, label %12, label %132

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr"** %13 to i64*
  %15 = icmp ugt i64 %1, 2305843009213693951
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #12
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 3
  %21 = shl i64 %1, 3
  %22 = tail call i8* @_Znwm(i64 %21) #11
  %23 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::unique_ptr"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::unique_ptr"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::unique_ptr"*
  %29 = icmp eq %"class.std::__1::unique_ptr"* %28, %11
  br i1 %29, label %57, label %30

30:                                               ; preds = %17
  %31 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 -1, i32 0, i32 0, i32 0
  %32 = bitcast %"class.extensions::UserScript"** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %30, %40
  %41 = phi %"class.std::__1::unique_ptr"* [ %44, %40 ], [ %24, %30 ]
  %42 = phi %"class.std::__1::unique_ptr"* [ %45, %40 ], [ %28, %30 ]
  %43 = phi i64 [ %50, %40 ], [ %38, %30 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 -1
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 -1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %46, align 8
  %49 = bitcast %"class.std::__1::unique_ptr"* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = add i64 %43, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %40, !llvm.loop !29

52:                                               ; preds = %40, %30
  %53 = phi %"class.std::__1::unique_ptr"* [ undef, %30 ], [ %44, %40 ]
  %54 = phi %"class.std::__1::unique_ptr"* [ %24, %30 ], [ %44, %40 ]
  %55 = phi %"class.std::__1::unique_ptr"* [ %28, %30 ], [ %45, %40 ]
  %56 = icmp ult i8* %34, inttoptr (i64 56 to i8*)
  br i1 %56, label %110, label %58

57:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %127

58:                                               ; preds = %52, %58
  %59 = phi %"class.std::__1::unique_ptr"* [ %103, %58 ], [ %54, %52 ]
  %60 = phi %"class.std::__1::unique_ptr"* [ %104, %58 ], [ %55, %52 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::unique_ptr"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %63, align 8
  %66 = bitcast %"class.std::__1::unique_ptr"* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -2
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -2
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %69, align 8
  %72 = bitcast %"class.std::__1::unique_ptr"* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -3
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -3
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %75, align 8
  %78 = bitcast %"class.std::__1::unique_ptr"* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -4
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -4
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -5
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -5
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -6
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -6
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -7
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -7
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = icmp eq %"class.std::__1::unique_ptr"* %104, %11
  br i1 %109, label %110, label %58

110:                                              ; preds = %58, %52
  %111 = phi %"class.std::__1::unique_ptr"* [ %53, %52 ], [ %103, %58 ]
  %112 = ptrtoint %"class.std::__1::unique_ptr"* %111 to i64
  %113 = load i64, i64* %6, align 8
  %114 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  %115 = inttoptr i64 %113 to %"class.std::__1::unique_ptr"*
  store i64 %112, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %116 = icmp eq %"class.std::__1::unique_ptr"* %114, %115
  br i1 %116, label %127, label %117

117:                                              ; preds = %110, %125
  %118 = phi %"class.std::__1::unique_ptr"* [ %119, %125 ], [ %114, %110 ]
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %118, i64 -1
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.extensions::UserScript"*, %"class.extensions::UserScript"** %120, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %120, align 8
  %122 = icmp eq %"class.extensions::UserScript"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %117
  tail call void @_ZN10extensions10UserScriptD1Ev(%"class.extensions::UserScript"* nonnull %121) #10
  %124 = bitcast %"class.extensions::UserScript"* %121 to i8*
  tail call void @_ZdlPv(i8* %124) #11
  br label %125

125:                                              ; preds = %123, %117
  %126 = icmp eq %"class.std::__1::unique_ptr"* %119, %115
  br i1 %126, label %127, label %117

127:                                              ; preds = %125, %57, %110
  %128 = phi i64 [ %7, %57 ], [ %113, %110 ], [ %113, %125 ]
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = inttoptr i64 %128 to i8*
  tail call void @_ZdlPv(i8* %131) #11
  br label %132

132:                                              ; preds = %130, %127, %2
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN10extensions10UserScriptC1Ev(%"class.extensions::UserScript"*) unnamed_addr #1

declare void @_ZN10extensions10UserScript8UnpickleERKN4base6PickleEPNS1_14PickleIteratorE(%"class.extensions::UserScript"*, %"class.base::Pickle"* dereferenceable(40), %"class.base::PickleIterator"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base14PickleIterator8ReadDataEPPKcPi(%"class.base::PickleIterator"*, i8**, i32*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base6PickleD1Ev(%"class.base::Pickle"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13UserScriptSet16ClearUserScriptsEv(%"class.extensions::UserScriptSet"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr"* %7, %5
  br i1 %8, label %19, label %9

9:                                                ; preds = %1, %17
  %10 = phi %"class.std::__1::unique_ptr"* [ %11, %17 ], [ %7, %1 ]
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 -1
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.extensions::UserScript"*, %"class.extensions::UserScript"** %12, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %12, align 8
  %14 = icmp eq %"class.extensions::UserScript"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  tail call void @_ZN10extensions10UserScriptD1Ev(%"class.extensions::UserScript"* nonnull %13) #10
  %16 = bitcast %"class.extensions::UserScript"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %9
  %18 = icmp eq %"class.std::__1::unique_ptr"* %11, %5
  br i1 %18, label %19, label %9

19:                                               ; preds = %17, %1
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %6, align 8
  %20 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %20, i64 0, i32 0
  %22 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node"**
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.43"* %21, %"class.std::__1::__tree_node"* %24) #10
  %25 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %20, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %27, align 8
  %28 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4
  %29 = bitcast %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %32 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %28, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 40, i1 false)
  %35 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8, !noalias !30
  %36 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %37 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %36, align 8, !noalias !30
  %38 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %35, %37
  %39 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %39) #10
  br i1 %38, label %40, label %42

40:                                               ; preds = %19
  %41 = bitcast %"class.base::ObserverList"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #10, !alias.scope !30
  br label %82

42:                                               ; preds = %19
  store %"class.base::ObserverList"* %28, %"class.base::ObserverList"** %30, align 8
  %43 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %39, %"class.base::internal::LinkNodeBase"* %43) #10
  store i64 0, i64* %31, align 8
  %44 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 4, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %42
  %48 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %36 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.base::ObserverList"* %28 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = ashr exact i64 %52, 3
  br label %54

54:                                               ; preds = %47, %42
  %55 = phi i64 [ %53, %47 ], [ -1, %42 ]
  store i64 %55, i64* %32, align 8
  %56 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %30, align 8
  %57 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %56, i64 0, i32 0, i32 0, i32 1
  %58 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.base::ObserverList"* %56 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %59, %61
  %63 = ashr exact i64 %62, 3
  %64 = icmp ult i64 %63, %55
  %65 = select i1 %64, i64 %63, i64 %55
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %82, label %67

67:                                               ; preds = %54
  %68 = inttoptr i64 %61 to %"class.base::internal::UncheckedObserverAdapter"*
  %69 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %56, i64 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %68, i64 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %73, label %82

73:                                               ; preds = %67, %77
  %74 = phi i64 [ %75, %77 ], [ 0, %67 ]
  %75 = add nuw i64 %74, 1
  store i64 %75, i64* %31, align 8
  %76 = icmp ult i64 %75, %65
  br i1 %76, label %77, label %82

77:                                               ; preds = %73
  %78 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %69, align 8
  %79 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %78, i64 %75, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = icmp eq i8* %80, null
  br i1 %81, label %73, label %82

82:                                               ; preds = %77, %73, %67, %54, %40
  %83 = bitcast %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %83) #10
  %84 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %86 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %87 = getelementptr inbounds %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.base::ObserverList<extensions::UserScriptSet::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %87) #10
  %89 = bitcast %"class.base::ObserverList"** %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #10, !alias.scope !33
  %90 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %30, align 8
  br label %91

91:                                               ; preds = %330, %82
  %92 = phi %"class.base::ObserverList"* [ %90, %82 ], [ %328, %330 ]
  %93 = icmp eq %"class.base::ObserverList"* %92, null
  br i1 %93, label %109, label %94

94:                                               ; preds = %91
  %95 = load i64, i64* %31, align 8
  %96 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %92, i64 0, i32 0, i32 0, i32 1
  %97 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.base::ObserverList"* %92 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %98, %100
  %102 = ashr exact i64 %101, 3
  %103 = load i64, i64* %32, align 8
  %104 = icmp ult i64 %102, %103
  %105 = select i1 %104, i64 %102, i64 %103
  %106 = icmp eq i64 %95, %105
  br i1 %106, label %109, label %107

107:                                              ; preds = %94
  %108 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %84, align 8
  br label %125

109:                                              ; preds = %94, %91
  %110 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %84, align 8
  %111 = icmp eq %"class.base::ObserverList"* %110, null
  br i1 %111, label %225, label %112

112:                                              ; preds = %109
  %113 = load i64, i64* %85, align 8
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %110, i64 0, i32 0, i32 0, i32 1
  %115 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.base::ObserverList"* %110 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %116, %118
  %120 = ashr exact i64 %119, 3
  %121 = load i64, i64* %86, align 8
  %122 = icmp ult i64 %120, %121
  %123 = select i1 %122, i64 %120, i64 %121
  %124 = icmp eq i64 %113, %123
  br i1 %124, label %134, label %125

125:                                              ; preds = %112, %107
  %126 = phi %"class.base::ObserverList"* [ %108, %107 ], [ %110, %112 ]
  %127 = icmp eq %"class.base::ObserverList"* %92, %126
  %128 = load i64, i64* %31, align 8
  %129 = load i64, i64* %85, align 8
  %130 = icmp eq i64 %128, %129
  %131 = and i1 %127, %130
  br i1 %131, label %132, label %319

132:                                              ; preds = %125
  %133 = icmp eq %"class.base::ObserverList"* %92, null
  br i1 %133, label %225, label %134

134:                                              ; preds = %112, %132
  %135 = phi %"class.base::ObserverList"* [ %92, %132 ], [ %110, %112 ]
  %136 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %135, i64 0, i32 1
  %137 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %135, i64 0, i32 1, i32 0, i32 0, i32 1
  %138 = bitcast %"class.base::internal::LinkNodeBase"** %137 to %"class.base::LinkNode"**
  %139 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %138, align 8
  %140 = bitcast %"class.base::LinkedList"* %136 to %"class.base::LinkNode"**
  %141 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %140, align 8
  %142 = icmp eq %"class.base::LinkNode"* %139, %141
  br i1 %142, label %143, label %221

143:                                              ; preds = %134
  %144 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %135, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %144, align 8
  %146 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %135, i64 0, i32 0, i32 0, i32 1
  %147 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %146, align 8
  %148 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %145, %147
  br i1 %148, label %157, label %149

149:                                              ; preds = %143, %154
  %150 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %155, %154 ], [ %145, %143 ]
  %151 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 0, i32 0
  %152 = load i8*, i8** %151, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %157, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 1
  %156 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %155, %147
  br i1 %156, label %221, label %149

157:                                              ; preds = %149, %143
  %158 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %145, %143 ], [ %150, %149 ]
  %159 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %158 to i64
  %160 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %158, %147
  br i1 %160, label %221, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %163 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %162, %147
  br i1 %163, label %216, label %164

164:                                              ; preds = %161
  %165 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %147, i64 -2, i32 0
  %166 = ptrtoint i8** %165 to i64
  %167 = sub i64 %166, %159
  %168 = lshr i64 %167, 3
  %169 = add nuw nsw i64 %168, 1
  %170 = and i64 %169, 3
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %190, label %172

172:                                              ; preds = %164, %185
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %187, %185 ], [ %162, %164 ]
  %174 = phi i64 [ %186, %185 ], [ %159, %164 ]
  %175 = phi i64 [ %188, %185 ], [ %170, %164 ]
  %176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %185, label %179

179:                                              ; preds = %172
  %180 = ptrtoint i8* %177 to i64
  %181 = inttoptr i64 %174 to %"class.base::internal::UncheckedObserverAdapter"*
  %182 = inttoptr i64 %174 to i64*
  store i64 %180, i64* %182, align 8
  %183 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %181, i64 1
  %184 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %183 to i64
  br label %185

185:                                              ; preds = %179, %172
  %186 = phi i64 [ %174, %172 ], [ %184, %179 ]
  %187 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 1
  %188 = add i64 %175, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %172, !llvm.loop !36

190:                                              ; preds = %185, %164
  %191 = phi i64 [ undef, %164 ], [ %186, %185 ]
  %192 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %162, %164 ], [ %187, %185 ]
  %193 = phi i64 [ %159, %164 ], [ %186, %185 ]
  %194 = icmp ult i64 %167, 24
  br i1 %194, label %212, label %195

195:                                              ; preds = %190, %420
  %196 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %422, %420 ], [ %192, %190 ]
  %197 = phi i64 [ %421, %420 ], [ %193, %190 ]
  %198 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %196, i64 0, i32 0
  %199 = load i8*, i8** %198, align 8
  %200 = icmp eq i8* %199, null
  br i1 %200, label %207, label %201

201:                                              ; preds = %195
  %202 = ptrtoint i8* %199 to i64
  %203 = inttoptr i64 %197 to %"class.base::internal::UncheckedObserverAdapter"*
  %204 = inttoptr i64 %197 to i64*
  store i64 %202, i64* %204, align 8
  %205 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %203, i64 1
  %206 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %205 to i64
  br label %207

207:                                              ; preds = %201, %195
  %208 = phi i64 [ %197, %195 ], [ %206, %201 ]
  %209 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %196, i64 1, i32 0
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, null
  br i1 %211, label %398, label %392

212:                                              ; preds = %420, %190
  %213 = phi i64 [ %191, %190 ], [ %421, %420 ]
  %214 = inttoptr i64 %213 to %"class.base::internal::UncheckedObserverAdapter"*
  %215 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %146, align 8
  br label %216

216:                                              ; preds = %212, %161
  %217 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %147, %161 ], [ %215, %212 ]
  %218 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %158, %161 ], [ %214, %212 ]
  %219 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %218, %217
  br i1 %219, label %221, label %220

220:                                              ; preds = %216
  store %"class.base::internal::UncheckedObserverAdapter"* %218, %"class.base::internal::UncheckedObserverAdapter"** %146, align 8
  br label %221

221:                                              ; preds = %154, %220, %216, %157, %134
  %222 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %84, align 8
  %223 = icmp eq %"class.base::ObserverList"* %222, null
  br i1 %223, label %225, label %224

224:                                              ; preds = %221
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %84, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %87) #10
  br label %225

225:                                              ; preds = %109, %132, %221, %224
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %83) #10
  %226 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %30, align 8
  %227 = icmp eq %"class.base::ObserverList"* %226, null
  br i1 %227, label %318, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %226, i64 0, i32 1
  %230 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %226, i64 0, i32 1, i32 0, i32 0, i32 1
  %231 = bitcast %"class.base::internal::LinkNodeBase"** %230 to %"class.base::LinkNode"**
  %232 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %231, align 8
  %233 = bitcast %"class.base::LinkedList"* %229 to %"class.base::LinkNode"**
  %234 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %233, align 8
  %235 = icmp eq %"class.base::LinkNode"* %232, %234
  br i1 %235, label %236, label %314

236:                                              ; preds = %228
  %237 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %226, i64 0, i32 0, i32 0, i32 0
  %238 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %237, align 8
  %239 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %226, i64 0, i32 0, i32 0, i32 1
  %240 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %239, align 8
  %241 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %238, %240
  br i1 %241, label %250, label %242

242:                                              ; preds = %236, %247
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %248, %247 ], [ %238, %236 ]
  %244 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 0, i32 0
  %245 = load i8*, i8** %244, align 8
  %246 = icmp eq i8* %245, null
  br i1 %246, label %250, label %247

247:                                              ; preds = %242
  %248 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 1
  %249 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %248, %240
  br i1 %249, label %314, label %242

250:                                              ; preds = %242, %236
  %251 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %238, %236 ], [ %243, %242 ]
  %252 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %251 to i64
  %253 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %251, %240
  br i1 %253, label %314, label %254

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %256 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %255, %240
  br i1 %256, label %309, label %257

257:                                              ; preds = %254
  %258 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %240, i64 -2, i32 0
  %259 = ptrtoint i8** %258 to i64
  %260 = sub i64 %259, %252
  %261 = lshr i64 %260, 3
  %262 = add nuw nsw i64 %261, 1
  %263 = and i64 %262, 3
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %283, label %265

265:                                              ; preds = %257, %278
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %280, %278 ], [ %255, %257 ]
  %267 = phi i64 [ %279, %278 ], [ %252, %257 ]
  %268 = phi i64 [ %281, %278 ], [ %263, %257 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %278, label %272

272:                                              ; preds = %265
  %273 = ptrtoint i8* %270 to i64
  %274 = inttoptr i64 %267 to %"class.base::internal::UncheckedObserverAdapter"*
  %275 = inttoptr i64 %267 to i64*
  store i64 %273, i64* %275, align 8
  %276 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 1
  %277 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %276 to i64
  br label %278

278:                                              ; preds = %272, %265
  %279 = phi i64 [ %267, %265 ], [ %277, %272 ]
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 1
  %281 = add i64 %268, -1
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %265, !llvm.loop !37

283:                                              ; preds = %278, %257
  %284 = phi i64 [ undef, %257 ], [ %279, %278 ]
  %285 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %255, %257 ], [ %280, %278 ]
  %286 = phi i64 [ %252, %257 ], [ %279, %278 ]
  %287 = icmp ult i64 %260, 24
  br i1 %287, label %305, label %288

288:                                              ; preds = %283, %388
  %289 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %390, %388 ], [ %285, %283 ]
  %290 = phi i64 [ %389, %388 ], [ %286, %283 ]
  %291 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %289, i64 0, i32 0
  %292 = load i8*, i8** %291, align 8
  %293 = icmp eq i8* %292, null
  br i1 %293, label %300, label %294

294:                                              ; preds = %288
  %295 = ptrtoint i8* %292 to i64
  %296 = inttoptr i64 %290 to %"class.base::internal::UncheckedObserverAdapter"*
  %297 = inttoptr i64 %290 to i64*
  store i64 %295, i64* %297, align 8
  %298 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %296, i64 1
  %299 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %298 to i64
  br label %300

300:                                              ; preds = %294, %288
  %301 = phi i64 [ %290, %288 ], [ %299, %294 ]
  %302 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %289, i64 1, i32 0
  %303 = load i8*, i8** %302, align 8
  %304 = icmp eq i8* %303, null
  br i1 %304, label %366, label %360

305:                                              ; preds = %388, %283
  %306 = phi i64 [ %284, %283 ], [ %389, %388 ]
  %307 = inttoptr i64 %306 to %"class.base::internal::UncheckedObserverAdapter"*
  %308 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %239, align 8
  br label %309

309:                                              ; preds = %305, %254
  %310 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %240, %254 ], [ %308, %305 ]
  %311 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %251, %254 ], [ %307, %305 ]
  %312 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %311, %310
  br i1 %312, label %314, label %313

313:                                              ; preds = %309
  store %"class.base::internal::UncheckedObserverAdapter"* %311, %"class.base::internal::UncheckedObserverAdapter"** %239, align 8
  br label %314

314:                                              ; preds = %247, %313, %309, %250, %228
  %315 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %30, align 8
  %316 = icmp eq %"class.base::ObserverList"* %315, null
  br i1 %316, label %318, label %317

317:                                              ; preds = %314
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %30, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %39) #10
  br label %318

318:                                              ; preds = %225, %314, %317
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #10
  ret void

319:                                              ; preds = %125
  %320 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %92, i64 0, i32 0, i32 0, i32 0
  %321 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %320, align 8
  %322 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %321, i64 %128
  %323 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %322 to %"class.extensions::UserScriptSet::Observer"**
  %324 = load %"class.extensions::UserScriptSet::Observer"*, %"class.extensions::UserScriptSet::Observer"** %323, align 8
  %325 = bitcast %"class.extensions::UserScriptSet::Observer"* %324 to void (%"class.extensions::UserScriptSet::Observer"*)***
  %326 = load void (%"class.extensions::UserScriptSet::Observer"*)**, void (%"class.extensions::UserScriptSet::Observer"*)*** %325, align 8
  %327 = load void (%"class.extensions::UserScriptSet::Observer"*)*, void (%"class.extensions::UserScriptSet::Observer"*)** %326, align 8
  call void %327(%"class.extensions::UserScriptSet::Observer"* %324) #10
  %328 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %30, align 8
  %329 = icmp eq %"class.base::ObserverList"* %328, null
  br i1 %329, label %330, label %331

330:                                              ; preds = %355, %351, %319, %331, %345
  br label %91

331:                                              ; preds = %319
  %332 = load i64, i64* %31, align 8
  %333 = add i64 %332, 1
  store i64 %333, i64* %31, align 8
  %334 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %328, i64 0, i32 0, i32 0, i32 1
  %335 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %334 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = bitcast %"class.base::ObserverList"* %328 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = sub i64 %336, %338
  %340 = ashr exact i64 %339, 3
  %341 = load i64, i64* %32, align 8
  %342 = icmp ult i64 %340, %341
  %343 = select i1 %342, i64 %340, i64 %341
  %344 = icmp ult i64 %333, %343
  br i1 %344, label %345, label %330

345:                                              ; preds = %331
  %346 = inttoptr i64 %338 to %"class.base::internal::UncheckedObserverAdapter"*
  %347 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %328, i64 0, i32 0, i32 0, i32 0
  %348 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %346, i64 %333, i32 0
  %349 = load i8*, i8** %348, align 8
  %350 = icmp eq i8* %349, null
  br i1 %350, label %351, label %330

351:                                              ; preds = %345, %355
  %352 = phi i64 [ %353, %355 ], [ %333, %345 ]
  %353 = add nuw i64 %352, 1
  store i64 %353, i64* %31, align 8
  %354 = icmp ult i64 %353, %343
  br i1 %354, label %355, label %330

355:                                              ; preds = %351
  %356 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %347, align 8
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %356, i64 %353, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = icmp eq i8* %358, null
  br i1 %359, label %351, label %330

360:                                              ; preds = %300
  %361 = ptrtoint i8* %303 to i64
  %362 = inttoptr i64 %301 to %"class.base::internal::UncheckedObserverAdapter"*
  %363 = inttoptr i64 %301 to i64*
  store i64 %361, i64* %363, align 8
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %362, i64 1
  %365 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %364 to i64
  br label %366

366:                                              ; preds = %360, %300
  %367 = phi i64 [ %301, %300 ], [ %365, %360 ]
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %289, i64 2, i32 0
  %369 = load i8*, i8** %368, align 8
  %370 = icmp eq i8* %369, null
  br i1 %370, label %377, label %371

371:                                              ; preds = %366
  %372 = ptrtoint i8* %369 to i64
  %373 = inttoptr i64 %367 to %"class.base::internal::UncheckedObserverAdapter"*
  %374 = inttoptr i64 %367 to i64*
  store i64 %372, i64* %374, align 8
  %375 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %373, i64 1
  %376 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %375 to i64
  br label %377

377:                                              ; preds = %371, %366
  %378 = phi i64 [ %367, %366 ], [ %376, %371 ]
  %379 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %289, i64 3, i32 0
  %380 = load i8*, i8** %379, align 8
  %381 = icmp eq i8* %380, null
  br i1 %381, label %388, label %382

382:                                              ; preds = %377
  %383 = ptrtoint i8* %380 to i64
  %384 = inttoptr i64 %378 to %"class.base::internal::UncheckedObserverAdapter"*
  %385 = inttoptr i64 %378 to i64*
  store i64 %383, i64* %385, align 8
  %386 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %384, i64 1
  %387 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %386 to i64
  br label %388

388:                                              ; preds = %382, %377
  %389 = phi i64 [ %378, %377 ], [ %387, %382 ]
  %390 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %289, i64 4
  %391 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %390, %240
  br i1 %391, label %305, label %288

392:                                              ; preds = %207
  %393 = ptrtoint i8* %210 to i64
  %394 = inttoptr i64 %208 to %"class.base::internal::UncheckedObserverAdapter"*
  %395 = inttoptr i64 %208 to i64*
  store i64 %393, i64* %395, align 8
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %394, i64 1
  %397 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %396 to i64
  br label %398

398:                                              ; preds = %392, %207
  %399 = phi i64 [ %208, %207 ], [ %397, %392 ]
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %196, i64 2, i32 0
  %401 = load i8*, i8** %400, align 8
  %402 = icmp eq i8* %401, null
  br i1 %402, label %409, label %403

403:                                              ; preds = %398
  %404 = ptrtoint i8* %401 to i64
  %405 = inttoptr i64 %399 to %"class.base::internal::UncheckedObserverAdapter"*
  %406 = inttoptr i64 %399 to i64*
  store i64 %404, i64* %406, align 8
  %407 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %405, i64 1
  %408 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %407 to i64
  br label %409

409:                                              ; preds = %403, %398
  %410 = phi i64 [ %399, %398 ], [ %408, %403 ]
  %411 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %196, i64 3, i32 0
  %412 = load i8*, i8** %411, align 8
  %413 = icmp eq i8* %412, null
  br i1 %413, label %420, label %414

414:                                              ; preds = %409
  %415 = ptrtoint i8* %412 to i64
  %416 = inttoptr i64 %410 to %"class.base::internal::UncheckedObserverAdapter"*
  %417 = inttoptr i64 %410 to i64*
  store i64 %415, i64* %417, align 8
  %418 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %416, i64 1
  %419 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %418 to i64
  br label %420

420:                                              ; preds = %414, %409
  %421 = phi i64 [ %410, %409 ], [ %419, %414 ]
  %422 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %196, i64 4
  %423 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %422, %147
  br i1 %423, label %212, label %195
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::ScriptInjection"* @_ZN10extensions13UserScriptSet29GetDeclarativeScriptInjectionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN7content11RenderFrameEiNS_5mojom11RunLocationERK4GURLb(%"class.extensions::UserScriptSet"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.content::RenderFrame"*, i32, i32, %class.GURL* dereferenceable(120), i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr"* %9, %11
  br i1 %12, label %73, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %25 = select i1 %17, i8* %23, i8* %24
  %26 = icmp eq i64 %21, 0
  br label %27

27:                                               ; preds = %13, %68
  %28 = phi %"class.std::__1::unique_ptr"* [ %9, %13 ], [ %69, %68 ]
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.extensions::UserScript"*, %"class.extensions::UserScript"** %29, align 8
  %31 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %30, i64 0, i32 15
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %30, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %34 to i64
  %39 = select i1 %35, i64 %37, i64 %38
  %40 = icmp eq i64 %39, %21
  br i1 %40, label %41, label %68

41:                                               ; preds = %27
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %45 = select i1 %35, i8* %43, i8* %44
  br i1 %35, label %52, label %46

46:                                               ; preds = %41
  br i1 %26, label %71, label %47

47:                                               ; preds = %46
  %48 = ptrtoint i8* %43 to i64
  %49 = trunc i64 %48 to i8
  %50 = load i8, i8* %25, align 1
  %51 = icmp eq i8 %50, %49
  br i1 %51, label %53, label %68

52:                                               ; preds = %41
  br i1 %26, label %71, label %65

53:                                               ; preds = %47, %60
  %54 = phi i64 [ %57, %60 ], [ %38, %47 ]
  %55 = phi i8* [ %58, %60 ], [ %44, %47 ]
  %56 = phi i8* [ %61, %60 ], [ %25, %47 ]
  %57 = add i64 %54, -1
  %58 = getelementptr inbounds i8, i8* %55, i64 1
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %71, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds i8, i8* %56, i64 1
  %62 = load i8, i8* %58, align 1
  %63 = load i8, i8* %61, align 1
  %64 = icmp eq i8 %62, %63
  br i1 %64, label %53, label %68

65:                                               ; preds = %52
  %66 = tail call i32 @bcmp(i8* %45, i8* %25, i64 %21) #10
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %60, %47, %27, %65
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 1
  %70 = icmp eq %"class.std::__1::unique_ptr"* %69, %11
  br i1 %70, label %73, label %27

71:                                               ; preds = %46, %52, %65, %53
  %72 = tail call %"class.extensions::ScriptInjection"* @_ZN10extensions13UserScriptSet21GetInjectionForScriptEPKNS_10UserScriptEPN7content11RenderFrameEiNS_5mojom11RunLocationERK4GURLbb(%"class.extensions::UserScriptSet"* %0, %"class.extensions::UserScript"* %30, %"class.content::RenderFrame"* %2, i32 %3, i32 %4, %class.GURL* dereferenceable(120) %5, i1 zeroext true, i1 zeroext %6)
  br label %73

73:                                               ; preds = %68, %7, %71
  %74 = phi %"class.extensions::ScriptInjection"* [ %72, %71 ], [ null, %7 ], [ null, %68 ]
  ret %"class.extensions::ScriptInjection"* %74
}

declare %class.InjectionHost* @_ZN10extensions22ExtensionInjectionHost6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN10extensions13ScriptContext35GetEffectiveDocumentURLForInjectionEPN5blink13WebLocalFrameERK4GURLNS_29MatchOriginAsFallbackBehaviorE(%class.GURL* sret, %"class.blink::WebLocalFrame"*, %class.GURL* dereferenceable(120), i32) local_unnamed_addr #1

declare %"class.blink::WebFrame"* @_ZNK5blink8WebFrame6ParentEv(%"class.blink::WebFrame"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK10extensions10UserScript15MatchesDocumentERK4GURLb(%"class.extensions::UserScript"*, %class.GURL* dereferenceable(120), i1 zeroext) local_unnamed_addr #1

declare void @_ZN10extensions18UserScriptInjectorC1EPKNS_10UserScriptEPNS_13UserScriptSetEb(%"class.extensions::UserScriptInjector"*, %"class.extensions::UserScript"*, %"class.extensions::UserScriptSet"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13UserScriptSet11GetJsSourceERKNS_10UserScript4FileEb(%"class.blink::WebString"* noalias sret, %"class.extensions::UserScriptSet"*, %"class.extensions::UserScript::File"* dereferenceable(208), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.172", align 1
  %7 = alloca %"class.blink::WebString", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca [3 x %"class.base::BasicStringPiece"], align 8
  %10 = alloca %"class.blink::WebString", align 8
  %11 = alloca %"class.blink::WebString", align 8
  %12 = getelementptr inbounds %"class.extensions::UserScript::File", %"class.extensions::UserScript::File"* %2, i64 0, i32 2
  %13 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node"**
  %15 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  %16 = icmp eq %"class.std::__1::__tree_node"* %15, null
  br i1 %16, label %39, label %17

17:                                               ; preds = %4, %17
  %18 = phi %"class.std::__1::__tree_end_node"* [ %27, %17 ], [ %13, %4 ]
  %19 = phi %"class.std::__1::__tree_node"* [ %28, %17 ], [ %15, %4 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %20, %class.GURL* dereferenceable(120) %12) #10
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::__tree_node_base"** %22 to %"class.std::__1::__tree_node"**
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_node"* %19 to %"class.std::__1::__tree_node"**
  %26 = select i1 %21, %"class.std::__1::__tree_node"** %23, %"class.std::__1::__tree_node"** %25
  %27 = select i1 %21, %"class.std::__1::__tree_end_node"* %18, %"class.std::__1::__tree_end_node"* %24
  %28 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %26, align 8
  %29 = icmp eq %"class.std::__1::__tree_node"* %28, null
  br i1 %29, label %30, label %17

30:                                               ; preds = %17
  %31 = icmp eq %"class.std::__1::__tree_end_node"* %27, %13
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 4
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %class.GURL*
  %35 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %12, %class.GURL* dereferenceable(120) %34) #10
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 19
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.blink::WebString"*
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %0, %"class.blink::WebString"* dereferenceable(8) %38) #10
  br label %107

39:                                               ; preds = %32, %30, %4
  %40 = getelementptr inbounds %"class.extensions::UserScript::File", %"class.extensions::UserScript::File"* %2, i64 0, i32 3, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.extensions::UserScript::File", %"class.extensions::UserScript::File"* %2, i64 0, i32 3, i32 1
  %45 = load i64, i64* %44, align 8
  br label %60

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.extensions::UserScript::File", %"class.extensions::UserScript::File"* %2, i64 0, i32 4
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %55 = select i1 %51, i8* %53, i8* %54
  %56 = getelementptr inbounds %"class.extensions::UserScript::File", %"class.extensions::UserScript::File"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = zext i8 %50 to i64
  %59 = select i1 %51, i64 %57, i64 %58
  br label %60

60:                                               ; preds = %43, %46
  %61 = phi i64 [ %59, %46 ], [ %45, %43 ]
  %62 = phi i8* [ %55, %46 ], [ %41, %43 ]
  %63 = bitcast %"class.blink::WebString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #10
  %64 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %64, align 8
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* nonnull %7) #10
  br i1 %3, label %65, label %94

65:                                               ; preds = %60
  %66 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #10
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = bitcast [3 x %"class.base::BasicStringPiece"]* %9 to i8*
  %70 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %69) #10
  %71 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %9, i64 0, i64 0
  %72 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %9, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZN10extensions12_GLOBAL__N_115kUserScriptHeadE, i64 0, i64 0), i8** %72, align 8
  %73 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %9, i64 0, i64 0, i32 1
  store i64 27, i64* %73, align 8
  %74 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %9, i64 0, i64 1, i32 0
  store i8* %62, i8** %74, align 8
  %75 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %9, i64 0, i64 1, i32 1
  store i64 %61, i64* %75, align 8
  %76 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %9, i64 0, i64 2, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN10extensions12_GLOBAL__N_115kUserScriptTailE, i64 0, i64 0), i8** %76, align 8
  %77 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %9, i64 0, i64 2, i32 1
  store i64 12, i64* %77, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %8, i64 3, %"class.base::BasicStringPiece"* nonnull %71) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %69) #10
  %78 = bitcast %"class.blink::WebString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #10
  %79 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1, !noalias !38
  %82 = icmp slt i8 %81, 0
  %83 = load i8*, i8** %67, align 8, !noalias !38
  %84 = load i64, i64* %68, align 8, !noalias !38
  %85 = zext i8 %81 to i64
  %86 = select i1 %82, i8* %83, i8* %66
  %87 = select i1 %82, i64 %84, i64 %85
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %10, i8* %86, i64 %87) #10
  %88 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"* nonnull %7, %"class.blink::WebString"* nonnull dereferenceable(8) %10) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #10
  %89 = load i8, i8* %80, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %65
  %92 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %92) #11
  br label %93

93:                                               ; preds = %65, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #10
  br label %97

94:                                               ; preds = %60
  %95 = bitcast %"class.blink::WebString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #10
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %11, i8* %62, i64 %61) #10
  %96 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"* nonnull %7, %"class.blink::WebString"* nonnull dereferenceable(8) %11) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #10
  br label %97

97:                                               ; preds = %94, %93
  %98 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %1, i64 0, i32 2, i32 0
  %99 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #10
  %100 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %class.GURL* %12, %class.GURL** %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::tuple.172", %"class.std::__1::tuple.172"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %101) #10
  %102 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS2_JRKNS_21piecewise_construct_tENS_5tupleIJRKS2_EEENSH_IJEEEEEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.43"* %98, %class.GURL* dereferenceable(120) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.172"* nonnull dereferenceable(1) %6) #10
  %103 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %102, 0
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %103, i64 19
  %105 = bitcast %"class.std::__1::__tree_end_node"* %104 to %"class.blink::WebString"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %101) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #10
  %106 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %105, %"class.blink::WebString"* nonnull dereferenceable(8) %7) #10
  call void @_ZN5blink9WebStringC1EOS0_(%"class.blink::WebString"* %0, %"class.blink::WebString"* nonnull dereferenceable(8) %7) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #10
  br label %107

107:                                              ; preds = %97, %36
  ret void
}

declare void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #3

declare void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* sret, i8*, i64) local_unnamed_addr #1

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink9WebStringC1EOS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13UserScriptSet12GetCssSourceERKNS_10UserScript4FileE(%"class.blink::WebString"* noalias sret, %"class.extensions::UserScriptSet"*, %"class.extensions::UserScript::File"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.152", align 8
  %5 = alloca %"class.blink::WebString", align 8
  %6 = getelementptr inbounds %"class.extensions::UserScript::File", %"class.extensions::UserScript::File"* %2, i64 0, i32 2
  %7 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %33, label %11

11:                                               ; preds = %3, %11
  %12 = phi %"class.std::__1::__tree_end_node"* [ %21, %11 ], [ %7, %3 ]
  %13 = phi %"class.std::__1::__tree_node"* [ %22, %11 ], [ %9, %3 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %14, %class.GURL* dereferenceable(120) %6) #10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node"* %13 to %"class.std::__1::__tree_node"**
  %20 = select i1 %15, %"class.std::__1::__tree_node"** %17, %"class.std::__1::__tree_node"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node"* %22, null
  br i1 %23, label %24, label %11

24:                                               ; preds = %11
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, %7
  br i1 %25, label %33, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %class.GURL*
  %29 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %28) #10
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 19
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.blink::WebString"*
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %0, %"class.blink::WebString"* dereferenceable(8) %32) #10
  br label %66

33:                                               ; preds = %26, %24, %3
  %34 = getelementptr inbounds %"class.extensions::UserScript::File", %"class.extensions::UserScript::File"* %2, i64 0, i32 3, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.extensions::UserScript::File", %"class.extensions::UserScript::File"* %2, i64 0, i32 3, i32 1
  %39 = load i64, i64* %38, align 8
  br label %54

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.extensions::UserScript::File", %"class.extensions::UserScript::File"* %2, i64 0, i32 4
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %49 = select i1 %45, i8* %47, i8* %48
  %50 = getelementptr inbounds %"class.extensions::UserScript::File", %"class.extensions::UserScript::File"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %44 to i64
  %53 = select i1 %45, i64 %51, i64 %52
  br label %54

54:                                               ; preds = %37, %40
  %55 = phi i64 [ %53, %40 ], [ %39, %37 ]
  %56 = phi i8* [ %49, %40 ], [ %35, %37 ]
  %57 = bitcast %"struct.std::__1::pair.152"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %57) #10
  %58 = bitcast %"class.blink::WebString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %5, i8* %56, i64 %55) #10
  %59 = getelementptr inbounds %"struct.std::__1::pair.152", %"struct.std::__1::pair.152"* %4, i64 0, i32 0
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %59, %class.GURL* dereferenceable(120) %6) #10
  %60 = getelementptr inbounds %"struct.std::__1::pair.152", %"struct.std::__1::pair.152"* %4, i64 0, i32 1
  call void @_ZN5blink9WebStringC1EOS0_(%"class.blink::WebString"* %60, %"class.blink::WebString"* nonnull dereferenceable(8) %5) #10
  %61 = getelementptr inbounds %"class.extensions::UserScriptSet", %"class.extensions::UserScriptSet"* %1, i64 0, i32 2, i32 0
  %62 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS2_JNS_4pairIS2_S4_EEEEENSE_INS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.43"* %61, %class.GURL* nonnull dereferenceable(120) %59, %"struct.std::__1::pair.152"* nonnull dereferenceable(128) %4) #10
  %63 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %62, 0
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 19
  %65 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.blink::WebString"*
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %0, %"class.blink::WebString"* dereferenceable(8) %65) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %60) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %59) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #10
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %57) #10
  br label %66

66:                                               ; preds = %54, %30
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN10extensions13ScriptContext28GetDocumentLoaderURLForFrameEPKN5blink13WebLocalFrameE(%class.GURL* sret, %"class.blink::WebLocalFrame"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #1

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #1

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.43"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.43"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.43"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %10) #10
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %11) #10
  %12 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void

13:                                               ; preds = %2
  ret void
}

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN10extensions15ScriptInjectionD1Ev(%"class.extensions::ScriptInjection"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions15ScriptInjectionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.59"*, %"class.std::__1::unique_ptr.61"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.61"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.59"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.59"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.61"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.61"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.61"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.61"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.61"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.extensions::ScriptInjection"* null, %"class.extensions::ScriptInjection"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.61"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.61"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.61"*, %"class.std::__1::unique_ptr.61"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.61"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.61"*, %"class.std::__1::unique_ptr.61"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.61"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.extensions::ScriptInjection"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.61"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.61"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.61"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.extensions::ScriptInjection"* null, %"class.extensions::ScriptInjection"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.61"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !41

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.61"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.61"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.61"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.61"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.61"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.61"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.extensions::ScriptInjection"* null, %"class.extensions::ScriptInjection"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.61"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.61"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.extensions::ScriptInjection"* null, %"class.extensions::ScriptInjection"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.61"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.61"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.extensions::ScriptInjection"* null, %"class.extensions::ScriptInjection"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.61"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.61"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.extensions::ScriptInjection"* null, %"class.extensions::ScriptInjection"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.61"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.61"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.extensions::ScriptInjection"* null, %"class.extensions::ScriptInjection"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.61"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.61"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.extensions::ScriptInjection"* null, %"class.extensions::ScriptInjection"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.61"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.61"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.extensions::ScriptInjection"* null, %"class.extensions::ScriptInjection"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.61"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.61"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.extensions::ScriptInjection"* null, %"class.extensions::ScriptInjection"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.61"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.61"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.61"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.61"*, %"class.std::__1::unique_ptr.61"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.61"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.61"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.61"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.61"*
  %138 = icmp eq %"class.std::__1::unique_ptr.61"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.61"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.extensions::ScriptInjection"*, %"class.extensions::ScriptInjection"** %142, align 8
  store %"class.extensions::ScriptInjection"* null, %"class.extensions::ScriptInjection"** %142, align 8
  %144 = icmp eq %"class.extensions::ScriptInjection"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN10extensions15ScriptInjectionD1Ev(%"class.extensions::ScriptInjection"* nonnull %143) #10
  %146 = bitcast %"class.extensions::ScriptInjection"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #11
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.61"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #11
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10extensions10UserScriptD1Ev(%"class.extensions::UserScript"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN10extensions10UserScriptENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.extensions::UserScript"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !42

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.extensions::UserScript"*, %"class.extensions::UserScript"** %142, align 8
  store %"class.extensions::UserScript"* null, %"class.extensions::UserScript"** %142, align 8
  %144 = icmp eq %"class.extensions::UserScript"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN10extensions10UserScriptD1Ev(%"class.extensions::UserScript"* nonnull %143) #10
  %146 = bitcast %"class.extensions::UserScript"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #11
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #11
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

declare void @_ZN18WebUIInjectionHostC1ERKN10extensions5mojom6HostIDE(%class.WebUIInjectionHost*, %"class.extensions::mojom::HostID"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN10extensions15ScriptInjectionC1ENSt3__110unique_ptrINS_14ScriptInjectorENS1_14default_deleteIS3_EEEEPN7content11RenderFrameENS2_IK13InjectionHostNS4_ISB_EEEENS_5mojom11RunLocationEb(%"class.extensions::ScriptInjection"*, %"class.extensions::ScriptInjector"*, %"class.content::RenderFrame"*, %class.InjectionHost*, i32, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK4GURLltERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS2_JRKNS_21piecewise_construct_tENS_5tupleIJRKS2_EEENSH_IJEEEEEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.43"*, %class.GURL* dereferenceable(120), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.172"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %8, %10 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %1, %class.GURL* dereferenceable(120) %15) #10
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %12
  %24 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %15, %class.GURL* dereferenceable(120) %1) #10
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %12

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %6, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %14, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %74

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 160) #11, !noalias !43
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %49 = load %class.GURL*, %class.GURL** %48, align 8, !noalias !43
  %50 = bitcast i8* %47 to %class.GURL*
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %50, %class.GURL* dereferenceable(120) %49) #10, !noalias !43
  %51 = getelementptr inbounds i8, i8* %46, i64 152
  %52 = bitcast i8* %51 to %"class.blink::WebString"*
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %52) #10, !noalias !43
  %53 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %54 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds i8, i8* %46, i64 16
  %56 = bitcast i8* %55 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %56, align 8
  %57 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %45
  %64 = ptrtoint %"class.std::__1::__tree_node_base"* %61 to i64
  %65 = bitcast %"class.std::__1::__tree.43"* %0 to i64*
  store i64 %64, i64* %65, align 8
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %67

67:                                               ; preds = %63, %45
  %68 = phi %"class.std::__1::__tree_node_base"* [ %54, %45 ], [ %66, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %70, %"class.std::__1::__tree_node_base"* %68) #10
  %71 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %71, align 8
  br label %74

74:                                               ; preds = %67, %39
  %75 = phi i8 [ 1, %67 ], [ 0, %39 ]
  %76 = phi %"class.std::__1::__tree_node"* [ %53, %67 ], [ %43, %39 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %76, i64 0, i32 0, i32 0
  %78 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %77, 0
  %79 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %78, i8 %75, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !26
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !26
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !26
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS2_JNS_4pairIS2_S4_EEEEENSE_INS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.43"*, %class.GURL* dereferenceable(120), %"struct.std::__1::pair.152"* dereferenceable(128)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %31, %8
  %11 = phi %"class.std::__1::__tree_node"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %1, %class.GURL* dereferenceable(120) %13) #10
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %13, %class.GURL* dereferenceable(120) %1) #10
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node"*
  br label %10

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %19, %27, %29, %35
  %38 = phi %"class.std::__1::__tree_end_node"* [ %4, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %12, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node"* %41, null
  br i1 %42, label %43, label %72

43:                                               ; preds = %37
  %44 = tail call i8* @_Znwm(i64 160) #11, !noalias !46
  %45 = getelementptr inbounds i8, i8* %44, i64 32
  %46 = bitcast i8* %45 to %class.GURL*
  %47 = getelementptr inbounds %"struct.std::__1::pair.152", %"struct.std::__1::pair.152"* %2, i64 0, i32 0
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %46, %class.GURL* dereferenceable(120) %47) #10, !noalias !46
  %48 = getelementptr inbounds i8, i8* %44, i64 152
  %49 = bitcast i8* %48 to %"class.blink::WebString"*
  %50 = getelementptr inbounds %"struct.std::__1::pair.152", %"struct.std::__1::pair.152"* %2, i64 0, i32 1
  tail call void @_ZN5blink9WebStringC1EOS0_(%"class.blink::WebString"* %49, %"class.blink::WebString"* dereferenceable(8) %50) #10, !noalias !46
  %51 = bitcast i8* %44 to %"class.std::__1::__tree_node"*
  %52 = bitcast i8* %44 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds i8, i8* %44, i64 16
  %54 = bitcast i8* %53 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %54, align 8
  %55 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8**
  store i8* %44, i8** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %43
  %62 = ptrtoint %"class.std::__1::__tree_node_base"* %59 to i64
  %63 = bitcast %"class.std::__1::__tree.43"* %0 to i64*
  store i64 %62, i64* %63, align 8
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %65

65:                                               ; preds = %61, %43
  %66 = phi %"class.std::__1::__tree_node_base"* [ %52, %43 ], [ %64, %61 ]
  %67 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %68, %"class.std::__1::__tree_node_base"* %66) #10
  %69 = getelementptr inbounds %"class.std::__1::__tree.43", %"class.std::__1::__tree.43"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %69, align 8
  br label %72

72:                                               ; preds = %65, %37
  %73 = phi i8 [ 1, %65 ], [ 0, %37 ]
  %74 = phi %"class.std::__1::__tree_node"* [ %51, %65 ], [ %41, %37 ]
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %74, i64 0, i32 0, i32 0
  %76 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %75, 0
  %77 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %76, i8 %73, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %77
}

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base12ObserverListIN10extensions13UserScriptSet8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base12ObserverListIN10extensions13UserScriptSet8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base12ObserverListIN10extensions13UserScriptSet8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base12ObserverListIN10extensions13UserScriptSet8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN10extensions12_GLOBAL__N_122GetDocumentUrlForFrameEPN5blink13WebLocalFrameE: argument 0"}
!13 = distinct !{!13, !"_ZN10extensions12_GLOBAL__N_122GetDocumentUrlForFrameEPN5blink13WebLocalFrameE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK4base12ObserverListIN10extensions13UserScriptSet8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZNK4base12ObserverListIN10extensions13UserScriptSet8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK4base12ObserverListIN10extensions13UserScriptSet8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!25 = distinct !{!25, !"_ZNK4base12ObserverListIN10extensions13UserScriptSet8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!26 = !{i8 0, i8 2}
!27 = distinct !{!27, !9}
!28 = distinct !{!28, !9}
!29 = distinct !{!29, !9}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK4base12ObserverListIN10extensions13UserScriptSet8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!32 = distinct !{!32, !"_ZNK4base12ObserverListIN10extensions13UserScriptSet8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK4base12ObserverListIN10extensions13UserScriptSet8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!35 = distinct !{!35, !"_ZNK4base12ObserverListIN10extensions13UserScriptSet8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!36 = distinct !{!36, !9}
!37 = distinct !{!37, !9}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!40 = distinct !{!40, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!41 = distinct !{!41, !9}
!42 = distinct !{!42, !9}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS2_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS2_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJNS_4pairIS2_S4_EEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISJ_EEEEEEDpOT_: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__16__treeINS_12__value_typeI4GURLN5blink9WebStringEEENS_19__map_value_compareIS2_S5_NS_4lessIS2_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJNS_4pairIS2_S4_EEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISJ_EEEEEEDpOT_"}
