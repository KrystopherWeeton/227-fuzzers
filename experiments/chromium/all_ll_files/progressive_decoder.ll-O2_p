; ModuleID = '../../third_party/pdfium/core/fxcodec/progressive_decoder.cpp'
source_filename = "../../third_party/pdfium/core/fxcodec/progressive_decoder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.fxcodec::ProgressiveDecoder::WeightTable" = type { i32, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.fxcodec::ProgressiveDecoder::HorzTable" = type { i32, %"class.std::__1::vector" }
%"class.fxcodec::ProgressiveDecoder::VertTable" = type { i32, %"class.std::__1::vector" }
%"class.fxcodec::ProgressiveDecoder" = type <{ %"class.fxcodec::BmpDecoder::Delegate", %"class.fxcodec::GifDecoder::Delegate", %"class.fxcodec::PngDecoder::Delegate", i32, i32, %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.10", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22", i32, i32, %"class.fxcodec::ProgressiveDecoder::WeightTable", %"class.fxcodec::ProgressiveDecoder::VertTable", %"class.fxcodec::ProgressiveDecoder::HorzTable", i32, i32, i32, i32, %struct.FX_RECT, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, [4 x i8], %struct.CFX_GifPalette*, i32, i32, %struct.FX_RECT, i8, i8, [6 x i8] }>
%"class.fxcodec::BmpDecoder::Delegate" = type { i32 (...)** }
%"class.fxcodec::GifDecoder::Delegate" = type { i32 (...)** }
%"class.fxcodec::PngDecoder::Delegate" = type { i32 (...)** }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::RetainPtr.4" = type { %"class.std::__1::unique_ptr.5" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr.4", %"class.std::__1::vector.26" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { i32*, i32*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i32* }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.14", %"class.fxcrt::UnownedPtr" }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.fxcrt::RetainPtr.10" = type { %"class.std::__1::unique_ptr.11" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %class.CFX_CodecMemory* }
%class.CFX_CodecMemory = type { %"class.fxcrt::Retainable", %"class.std::__1::unique_ptr.14", i64, i64 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.fxcodec::ProgressiveDecoderIface::Context"* }
%"class.fxcodec::ProgressiveDecoderIface::Context" = type { i32 (...)** }
%struct.CFX_GifPalette = type { i8, i8, i8 }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%struct.PixelWeight = type { i32, i32, [1 x i32] }
%"class.fxcodec::GifProgressiveDecoder" = type { %"class.fxcodec::ProgressiveDecoderIface" }
%"class.fxcodec::ProgressiveDecoderIface" = type { i32 (...)** }
%"class.fxcodec::BmpProgressiveDecoder" = type { %"class.fxcodec::ProgressiveDecoderIface" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.32", i64 }
%"class.fxcrt::UnownedPtr.32" = type { i8* }
%"class.fxcodec::CFX_DIBAttribute" = type opaque
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { i32*, i32*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.fxcodec::JpegProgressiveDecoder" = type { %"class.fxcodec::ProgressiveDecoderIface" }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.FXDIB_ResampleOptions = type { i8, i8, i8, i8 }
%"class.fxcrt::RetainPtr.40" = type { %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.CFX_DIBBase* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIh16FxAllocAllocatorIhEE8__appendEm = comdat any

$_ZNSt3__16vectorIh16FxAllocAllocatorIhEE8__appendEmRKh = comdat any

@_ZTVN7fxcodec18ProgressiveDecoderE = hidden unnamed_addr constant { [12 x i8*], [5 x i8*], [5 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.fxcodec::ProgressiveDecoder"*, i32)* @_ZN7fxcodec18ProgressiveDecoder24BmpInputImagePositionBufEj to i8*), i8* bitcast (void (%"class.fxcodec::ProgressiveDecoder"*, i32, %"class.pdfium::span"*)* @_ZN7fxcodec18ProgressiveDecoder15BmpReadScanlineEjN6pdfium4spanIKhEE to i8*), i8* bitcast (void (%"class.fxcodec::ProgressiveDecoder"*)* @_ZN7fxcodec18ProgressiveDecoderD2Ev to i8*), i8* bitcast (void (%"class.fxcodec::ProgressiveDecoder"*)* @_ZN7fxcodec18ProgressiveDecoderD0Ev to i8*), i8* bitcast (i1 (%"class.fxcodec::ProgressiveDecoder"*, i32, i32, i32, i32, i32*, double*)* @_ZN7fxcodec18ProgressiveDecoder13PngReadHeaderEiiiiPiPd to i8*), i8* bitcast (i1 (%"class.fxcodec::ProgressiveDecoder"*, i32, i8**)* @_ZN7fxcodec18ProgressiveDecoder17PngAskScanlineBufEiPPh to i8*), i8* bitcast (void (%"class.fxcodec::ProgressiveDecoder"*, i32, i32)* @_ZN7fxcodec18ProgressiveDecoder27PngFillScanlineBufCompletedEii to i8*), i8* bitcast (void (%"class.fxcodec::ProgressiveDecoder"*, i32*)* @_ZN7fxcodec18ProgressiveDecoder24GifRecordCurrentPositionERj to i8*), i8* bitcast (i1 (%"class.fxcodec::ProgressiveDecoder"*, i32, %struct.FX_RECT*, i32, %struct.CFX_GifPalette*, i32, i1, i32, i32, i1)* @_ZN7fxcodec18ProgressiveDecoder25GifInputRecordPositionBufEjRK7FX_RECTiP14CFX_GifPaletteibiib to i8*), i8* bitcast (void (%"class.fxcodec::ProgressiveDecoder"*, i32, i8*)* @_ZN7fxcodec18ProgressiveDecoder15GifReadScanlineEiPh to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.fxcodec::ProgressiveDecoder"*, i32*)* @_ZThn8_N7fxcodec18ProgressiveDecoder24GifRecordCurrentPositionERj to i8*), i8* bitcast (i1 (%"class.fxcodec::ProgressiveDecoder"*, i32, %struct.FX_RECT*, i32, %struct.CFX_GifPalette*, i32, i1, i32, i32, i1)* @_ZThn8_N7fxcodec18ProgressiveDecoder25GifInputRecordPositionBufEjRK7FX_RECTiP14CFX_GifPaletteibiib to i8*), i8* bitcast (void (%"class.fxcodec::ProgressiveDecoder"*, i32, i8*)* @_ZThn8_N7fxcodec18ProgressiveDecoder15GifReadScanlineEiPh to i8*)], [5 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (i1 (%"class.fxcodec::ProgressiveDecoder"*, i32, i32, i32, i32, i32*, double*)* @_ZThn16_N7fxcodec18ProgressiveDecoder13PngReadHeaderEiiiiPiPd to i8*), i8* bitcast (i1 (%"class.fxcodec::ProgressiveDecoder"*, i32, i8**)* @_ZThn16_N7fxcodec18ProgressiveDecoder17PngAskScanlineBufEiPPh to i8*), i8* bitcast (void (%"class.fxcodec::ProgressiveDecoder"*, i32, i32)* @_ZThn16_N7fxcodec18ProgressiveDecoder27PngFillScanlineBufCompletedEii to i8*)] }, align 8
@switch.table._ZThn16_N7fxcodec18ProgressiveDecoder13PngReadHeaderEiiiiPiPd = private unnamed_addr constant [7 x i32] [i32 1, i32 0, i32 3, i32 4, i32 2, i32 0, i32 4], align 4

@_ZN7fxcodec18ProgressiveDecoder11WeightTableC1Ev = hidden unnamed_addr alias void (%"class.fxcodec::ProgressiveDecoder::WeightTable"*), void (%"class.fxcodec::ProgressiveDecoder::WeightTable"*)* @_ZN7fxcodec18ProgressiveDecoder11WeightTableC2Ev
@_ZN7fxcodec18ProgressiveDecoder11WeightTableD1Ev = hidden unnamed_addr alias void (%"class.fxcodec::ProgressiveDecoder::WeightTable"*), void (%"class.fxcodec::ProgressiveDecoder::WeightTable"*)* @_ZN7fxcodec18ProgressiveDecoder11WeightTableD2Ev
@_ZN7fxcodec18ProgressiveDecoder9HorzTableC1Ev = hidden unnamed_addr alias void (%"class.fxcodec::ProgressiveDecoder::HorzTable"*), void (%"class.fxcodec::ProgressiveDecoder::HorzTable"*)* @_ZN7fxcodec18ProgressiveDecoder9HorzTableC2Ev
@_ZN7fxcodec18ProgressiveDecoder9HorzTableD1Ev = hidden unnamed_addr alias void (%"class.fxcodec::ProgressiveDecoder::HorzTable"*), void (%"class.fxcodec::ProgressiveDecoder::HorzTable"*)* @_ZN7fxcodec18ProgressiveDecoder9HorzTableD2Ev
@_ZN7fxcodec18ProgressiveDecoder9VertTableC1Ev = hidden unnamed_addr alias void (%"class.fxcodec::ProgressiveDecoder::VertTable"*), void (%"class.fxcodec::ProgressiveDecoder::VertTable"*)* @_ZN7fxcodec18ProgressiveDecoder9VertTableC2Ev
@_ZN7fxcodec18ProgressiveDecoder9VertTableD1Ev = hidden unnamed_addr alias void (%"class.fxcodec::ProgressiveDecoder::VertTable"*), void (%"class.fxcodec::ProgressiveDecoder::VertTable"*)* @_ZN7fxcodec18ProgressiveDecoder9VertTableD2Ev
@_ZN7fxcodec18ProgressiveDecoderC1Ev = hidden unnamed_addr alias void (%"class.fxcodec::ProgressiveDecoder"*), void (%"class.fxcodec::ProgressiveDecoder"*)* @_ZN7fxcodec18ProgressiveDecoderC2Ev
@_ZN7fxcodec18ProgressiveDecoderD1Ev = hidden unnamed_addr alias void (%"class.fxcodec::ProgressiveDecoder"*), void (%"class.fxcodec::ProgressiveDecoder"*)* @_ZN7fxcodec18ProgressiveDecoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder11WeightTableC2Ev(%"class.fxcodec::ProgressiveDecoder::WeightTable"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::WeightTable", %"class.fxcodec::ProgressiveDecoder::WeightTable"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder11WeightTableD2Ev(%"class.fxcodec::ProgressiveDecoder::WeightTable"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::WeightTable", %"class.fxcodec::ProgressiveDecoder::WeightTable"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::WeightTable", %"class.fxcodec::ProgressiveDecoder::WeightTable"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %3) #12
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder11WeightTable4CalcEii(%"class.fxcodec::ProgressiveDecoder::WeightTable"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = sitofp i32 %2 to double
  %5 = sitofp i32 %1 to double
  %6 = fdiv double %4, %5
  %7 = icmp slt i32 %1, 0
  %8 = select i1 %7, double %4, double 0.000000e+00
  %9 = tail call double @llvm.fabs.f64(double %6)
  %10 = tail call double @llvm.ceil.f64(double %9)
  %11 = fadd double %10, 1.000000e+00
  %12 = fmul double %11, 4.000000e+00
  %13 = fadd double %12, 8.000000e+00
  %14 = fptosi double %13 to i32
  %15 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::WeightTable", %"class.fxcodec::ProgressiveDecoder::WeightTable"* %0, i64 0, i32 1
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::WeightTable", %"class.fxcodec::ProgressiveDecoder::WeightTable"* %0, i64 0, i32 0
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::WeightTable", %"class.fxcodec::ProgressiveDecoder::WeightTable"* %0, i64 0, i32 2
  %18 = mul nsw i32 %14, %1
  %19 = add nsw i32 %18, 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::WeightTable", %"class.fxcodec::ProgressiveDecoder::WeightTable"* %0, i64 0, i32 2, i32 0, i32 1
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %17 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = icmp ult i64 %26, %20
  %28 = inttoptr i64 %25 to i8*
  br i1 %27, label %29, label %31

29:                                               ; preds = %3
  %30 = sub i64 %20, %26
  tail call void @_ZNSt3__16vectorIh16FxAllocAllocatorIhEE8__appendEm(%"class.std::__1::vector"* %17, i64 %30) #12
  br label %35

31:                                               ; preds = %3
  %32 = icmp ugt i64 %26, %20
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = getelementptr inbounds i8, i8* %28, i64 %20
  store i8* %34, i8** %21, align 8
  br label %35

35:                                               ; preds = %29, %31, %33
  %36 = fcmp olt double %9, 1.000000e+00
  %37 = icmp sgt i32 %1, 0
  br i1 %36, label %42, label %38

38:                                               ; preds = %35
  br i1 %37, label %39, label %173

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::WeightTable", %"class.fxcodec::ProgressiveDecoder::WeightTable"* %0, i64 0, i32 2, i32 0, i32 0
  %41 = add nsw i32 %2, -1
  br label %91

42:                                               ; preds = %35
  br i1 %37, label %43, label %173

43:                                               ; preds = %42
  %44 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::WeightTable", %"class.fxcodec::ProgressiveDecoder::WeightTable"* %0, i64 0, i32 2, i32 0, i32 0
  %45 = fmul double %6, 5.000000e-01
  %46 = add nsw i32 %2, -1
  br label %47

47:                                               ; preds = %85, %43
  %48 = phi i32 [ 0, %43 ], [ %89, %85 ]
  %49 = load i8*, i8** %44, align 8
  %50 = load i32, i32* %16, align 8
  %51 = sub nsw i32 %48, %50
  %52 = load i32, i32* %15, align 4
  %53 = mul nsw i32 %51, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %49, i64 %54
  %56 = sitofp i32 %48 to double
  %57 = fmul double %6, %56
  %58 = fadd double %45, %57
  %59 = fadd double %8, %58
  %60 = fptrunc double %59 to float
  %61 = fadd float %60, -5.000000e-01
  %62 = tail call float @llvm.floor.f32(float %61) #12
  %63 = fptosi float %62 to i32
  %64 = bitcast i8* %55 to i32*
  %65 = fadd float %60, 5.000000e-01
  %66 = tail call float @llvm.floor.f32(float %65) #12
  %67 = fptosi float %66 to i32
  %68 = getelementptr inbounds i8, i8* %55, i64 4
  %69 = bitcast i8* %68 to i32*
  %70 = icmp sgt i32 %63, 0
  %71 = select i1 %70, i32 %63, i32 0
  store i32 %71, i32* %64, align 4
  %72 = icmp slt i32 %46, %67
  %73 = select i1 %72, i32 %46, i32 %67
  store i32 %73, i32* %69, align 4
  %74 = icmp eq i32 %71, %73
  br i1 %74, label %85, label %75

75:                                               ; preds = %47
  %76 = sitofp i32 %71 to double
  %77 = fsub double %59, %76
  %78 = fadd double %77, -5.000000e-01
  %79 = fptrunc double %78 to float
  %80 = fmul float %79, 6.553600e+04
  %81 = tail call i32 @FXSYS_roundf(float %80) #12
  %82 = getelementptr inbounds i8, i8* %55, i64 12
  %83 = bitcast i8* %82 to i32*
  store i32 %81, i32* %83, align 4
  %84 = sub nsw i32 65536, %81
  br label %85

85:                                               ; preds = %47, %75
  %86 = phi i32 [ %84, %75 ], [ 65536, %47 ]
  %87 = getelementptr inbounds i8, i8* %55, i64 8
  %88 = bitcast i8* %87 to i32*
  store i32 %86, i32* %88, align 4
  %89 = add nuw nsw i32 %48, 1
  %90 = icmp eq i32 %89, %1
  br i1 %90, label %173, label %47

91:                                               ; preds = %170, %39
  %92 = phi i32 [ 0, %39 ], [ %171, %170 ]
  %93 = load i8*, i8** %40, align 8
  %94 = load i32, i32* %16, align 8
  %95 = sub nsw i32 %92, %94
  %96 = load i32, i32* %15, align 4
  %97 = mul nsw i32 %95, %96
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %93, i64 %98
  %100 = bitcast i8* %99 to %struct.PixelWeight*
  %101 = sitofp i32 %92 to double
  %102 = fmul double %6, %101
  %103 = fadd double %8, %102
  %104 = fadd double %6, %103
  %105 = fcmp olt double %103, %104
  %106 = select i1 %105, double %103, double %104
  %107 = select i1 %105, double %104, double %103
  %108 = fptrunc double %106 to float
  %109 = tail call float @llvm.floor.f32(float %108) #12
  %110 = fptrunc double %107 to float
  %111 = tail call float @llvm.ceil.f32(float %110) #12
  %112 = fptosi float %109 to i32
  %113 = fptosi float %111 to i32
  %114 = icmp sgt i32 %112, 0
  %115 = select i1 %114, i32 %112, i32 0
  %116 = icmp slt i32 %41, %113
  %117 = select i1 %116, i32 %41, i32 %113
  %118 = icmp sgt i32 %115, %117
  %119 = bitcast i8* %99 to i32*
  store i32 %115, i32* %119, align 4
  %120 = getelementptr inbounds i8, i8* %99, i64 4
  %121 = bitcast i8* %120 to i32*
  br i1 %118, label %122, label %124

122:                                              ; preds = %91
  store i32 %115, i32* %121, align 4
  %123 = add nuw nsw i32 %92, 1
  br label %170

124:                                              ; preds = %91
  store i32 %117, i32* %121, align 4
  %125 = sitofp i32 %92 to float
  %126 = fpext float %125 to double
  %127 = add nuw nsw i32 %92, 1
  %128 = sitofp i32 %127 to float
  %129 = fpext float %128 to double
  %130 = zext i32 %115 to i64
  %131 = zext i32 %117 to i64
  %132 = zext i32 %115 to i64
  %133 = sext i32 %117 to i64
  br label %134

134:                                              ; preds = %163, %124
  %135 = phi i64 [ %141, %163 ], [ %130, %124 ]
  %136 = trunc i64 %135 to i32
  %137 = sitofp i32 %136 to float
  %138 = fpext float %137 to double
  %139 = fsub double %138, %8
  %140 = fdiv double %139, %6
  %141 = add nuw nsw i64 %135, 1
  %142 = trunc i64 %141 to i32
  %143 = sitofp i32 %142 to float
  %144 = fpext float %143 to double
  %145 = fsub double %144, %8
  %146 = fdiv double %145, %6
  %147 = fcmp ogt double %140, %146
  %148 = select i1 %147, double %146, double %140
  %149 = select i1 %147, double %140, double %146
  %150 = fcmp ogt double %148, %126
  %151 = select i1 %150, double %148, double %126
  %152 = fcmp ogt double %149, %129
  %153 = select i1 %152, double %129, double %149
  %154 = fcmp ult double %151, %153
  %155 = fsub double %153, %151
  %156 = select i1 %154, double %155, double 0.000000e+00
  %157 = fcmp oeq double %156, 0.000000e+00
  %158 = icmp eq i64 %135, %131
  %159 = and i1 %158, %157
  br i1 %159, label %160, label %163

160:                                              ; preds = %134
  %161 = load i32, i32* %121, align 4
  %162 = add nsw i32 %161, -1
  store i32 %162, i32* %121, align 4
  br label %170

163:                                              ; preds = %134
  %164 = fmul double %156, 6.553600e+04
  %165 = fptrunc double %164 to float
  %166 = tail call i32 @FXSYS_roundf(float %165) #12
  %167 = sub nuw nsw i64 %135, %132
  %168 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %100, i64 0, i32 2, i64 %167
  store i32 %166, i32* %168, align 4
  %169 = icmp slt i64 %135, %133
  br i1 %169, label %134, label %170

170:                                              ; preds = %163, %160, %122
  %171 = phi i32 [ %127, %160 ], [ %123, %122 ], [ %127, %163 ]
  %172 = icmp eq i32 %171, %1
  br i1 %172, label %173, label %91

173:                                              ; preds = %170, %85, %38, %42
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @FXSYS_roundf(float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder9HorzTableC2Ev(%"class.fxcodec::ProgressiveDecoder::HorzTable"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::HorzTable", %"class.fxcodec::ProgressiveDecoder::HorzTable"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder9HorzTableD2Ev(%"class.fxcodec::ProgressiveDecoder::HorzTable"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::HorzTable", %"class.fxcodec::ProgressiveDecoder::HorzTable"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::HorzTable", %"class.fxcodec::ProgressiveDecoder::HorzTable"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %3) #12
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder9HorzTable4CalcEii(%"class.fxcodec::ProgressiveDecoder::HorzTable"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = sitofp i32 %1 to double
  %6 = sitofp i32 %2 to double
  %7 = fdiv double %5, %6
  %8 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::HorzTable", %"class.fxcodec::ProgressiveDecoder::HorzTable"* %0, i64 0, i32 0
  store i32 16, i32* %8, align 8
  %9 = shl nsw i32 %1, 4
  %10 = or i32 %9, 4
  %11 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::HorzTable", %"class.fxcodec::ProgressiveDecoder::HorzTable"* %0, i64 0, i32 1
  %12 = sext i32 %10 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 0, i8* %4, align 1
  %13 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::HorzTable", %"class.fxcodec::ProgressiveDecoder::HorzTable"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = icmp ult i64 %18, %12
  %20 = inttoptr i64 %17 to i8*
  br i1 %19, label %21, label %23

21:                                               ; preds = %3
  %22 = sub i64 %12, %18
  call void @_ZNSt3__16vectorIh16FxAllocAllocatorIhEE8__appendEmRKh(%"class.std::__1::vector"* %11, i64 %22, i8* nonnull dereferenceable(1) %4) #12
  br label %27

23:                                               ; preds = %3
  %24 = icmp ugt i64 %18, %12
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = getelementptr inbounds i8, i8* %20, i64 %12
  store i8* %26, i8** %13, align 8
  br label %27

27:                                               ; preds = %21, %23, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  %28 = fcmp ogt double %7, 1.000000e+00
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = icmp sgt i32 %1, 0
  br i1 %30, label %31, label %168

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::HorzTable", %"class.fxcodec::ProgressiveDecoder::HorzTable"* %0, i64 0, i32 1, i32 0, i32 0
  br label %148

33:                                               ; preds = %27
  %34 = icmp sgt i32 %2, 0
  br i1 %34, label %35, label %168

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::HorzTable", %"class.fxcodec::ProgressiveDecoder::HorzTable"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = add nsw i32 %2, -1
  %38 = add nsw i32 %1, -1
  br label %39

39:                                               ; preds = %145, %35
  %40 = phi i32 [ 0, %35 ], [ %45, %145 ]
  %41 = phi i32 [ 0, %35 ], [ %146, %145 ]
  %42 = sitofp i32 %41 to double
  %43 = fmul double %7, %42
  %44 = fptrunc double %43 to float
  %45 = call i32 @FXSYS_roundf(float %44) #12
  %46 = load i8*, i8** %36, align 8
  %47 = load i32, i32* %8, align 8
  %48 = mul nsw i32 %47, %45
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  %51 = getelementptr inbounds i8, i8* %50, i64 4
  %52 = bitcast i8* %51 to i32*
  store i32 %41, i32* %52, align 4
  %53 = bitcast i8* %50 to i32*
  store i32 %41, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 8
  %55 = bitcast i8* %54 to i32*
  store i32 65536, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %50, i64 12
  %57 = bitcast i8* %56 to i32*
  store i32 0, i32* %57, align 4
  %58 = icmp eq i32 %41, %37
  %59 = icmp slt i32 %45, %38
  %60 = and i1 %58, %59
  %61 = add nsw i32 %40, 1
  br i1 %60, label %62, label %116

62:                                               ; preds = %39
  %63 = icmp slt i32 %61, %1
  br i1 %63, label %64, label %168

64:                                               ; preds = %62
  %65 = sub i32 %1, %61
  %66 = sub i32 -2, %40
  %67 = and i32 %65, 1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %83, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %36, align 8
  %71 = load i32, i32* %8, align 8
  %72 = mul nsw i32 %71, %61
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %70, i64 %73
  %75 = getelementptr inbounds i8, i8* %74, i64 4
  %76 = bitcast i8* %75 to i32*
  store i32 %37, i32* %76, align 4
  %77 = bitcast i8* %74 to i32*
  store i32 %37, i32* %77, align 4
  %78 = getelementptr inbounds i8, i8* %74, i64 8
  %79 = bitcast i8* %78 to i32*
  store i32 65536, i32* %79, align 4
  %80 = getelementptr inbounds i8, i8* %74, i64 12
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  %82 = add nsw i32 %40, 2
  br label %83

83:                                               ; preds = %64, %69
  %84 = phi i32 [ %61, %64 ], [ %82, %69 ]
  %85 = sub i32 0, %1
  %86 = icmp eq i32 %66, %85
  br i1 %86, label %168, label %87

87:                                               ; preds = %83, %87
  %88 = phi i32 [ %114, %87 ], [ %84, %83 ]
  %89 = load i8*, i8** %36, align 8
  %90 = load i32, i32* %8, align 8
  %91 = mul nsw i32 %90, %88
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %89, i64 %92
  %94 = getelementptr inbounds i8, i8* %93, i64 4
  %95 = bitcast i8* %94 to i32*
  store i32 %37, i32* %95, align 4
  %96 = bitcast i8* %93 to i32*
  store i32 %37, i32* %96, align 4
  %97 = getelementptr inbounds i8, i8* %93, i64 8
  %98 = bitcast i8* %97 to i32*
  store i32 65536, i32* %98, align 4
  %99 = getelementptr inbounds i8, i8* %93, i64 12
  %100 = bitcast i8* %99 to i32*
  store i32 0, i32* %100, align 4
  %101 = add nsw i32 %88, 1
  %102 = load i8*, i8** %36, align 8
  %103 = load i32, i32* %8, align 8
  %104 = mul nsw i32 %103, %101
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, i8* %102, i64 %105
  %107 = getelementptr inbounds i8, i8* %106, i64 4
  %108 = bitcast i8* %107 to i32*
  store i32 %37, i32* %108, align 4
  %109 = bitcast i8* %106 to i32*
  store i32 %37, i32* %109, align 4
  %110 = getelementptr inbounds i8, i8* %106, i64 8
  %111 = bitcast i8* %110 to i32*
  store i32 65536, i32* %111, align 4
  %112 = getelementptr inbounds i8, i8* %106, i64 12
  %113 = bitcast i8* %112 to i32*
  store i32 0, i32* %113, align 4
  %114 = add nsw i32 %88, 2
  %115 = icmp eq i32 %114, %1
  br i1 %115, label %168, label %87

116:                                              ; preds = %39
  %117 = icmp slt i32 %61, %45
  br i1 %117, label %118, label %145

118:                                              ; preds = %116
  %119 = sub nsw i32 %45, %40
  %120 = add nsw i32 %41, -1
  %121 = sitofp i32 %45 to float
  %122 = sitofp i32 %119 to float
  br label %123

123:                                              ; preds = %123, %118
  %124 = phi i32 [ %61, %118 ], [ %143, %123 ]
  %125 = load i8*, i8** %36, align 8
  %126 = load i32, i32* %8, align 8
  %127 = mul nsw i32 %126, %124
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* %125, i64 %128
  %130 = bitcast i8* %129 to i32*
  store i32 %120, i32* %130, align 4
  %131 = getelementptr inbounds i8, i8* %129, i64 4
  %132 = bitcast i8* %131 to i32*
  store i32 %41, i32* %132, align 4
  %133 = sitofp i32 %124 to float
  %134 = fsub float %121, %133
  %135 = fdiv float %134, %122
  %136 = fmul float %135, 6.553600e+04
  %137 = call i32 @FXSYS_roundf(float %136) #12
  %138 = getelementptr inbounds i8, i8* %129, i64 8
  %139 = bitcast i8* %138 to i32*
  store i32 %137, i32* %139, align 4
  %140 = sub nsw i32 65536, %137
  %141 = getelementptr inbounds i8, i8* %129, i64 12
  %142 = bitcast i8* %141 to i32*
  store i32 %140, i32* %142, align 4
  %143 = add i32 %124, 1
  %144 = icmp eq i32 %143, %45
  br i1 %144, label %145, label %123

145:                                              ; preds = %123, %116
  %146 = add nuw nsw i32 %41, 1
  %147 = icmp eq i32 %146, %2
  br i1 %147, label %168, label %39

148:                                              ; preds = %148, %31
  %149 = phi i32 [ 0, %31 ], [ %166, %148 ]
  %150 = sitofp i32 %149 to double
  %151 = fdiv double %150, %7
  %152 = fptrunc double %151 to float
  %153 = call i32 @FXSYS_roundf(float %152) #12
  %154 = load i8*, i8** %32, align 8
  %155 = load i32, i32* %8, align 8
  %156 = mul nsw i32 %155, %149
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* %154, i64 %157
  %159 = getelementptr inbounds i8, i8* %158, i64 4
  %160 = bitcast i8* %159 to i32*
  store i32 %153, i32* %160, align 4
  %161 = bitcast i8* %158 to i32*
  store i32 %153, i32* %161, align 4
  %162 = getelementptr inbounds i8, i8* %158, i64 8
  %163 = bitcast i8* %162 to i32*
  store i32 65536, i32* %163, align 4
  %164 = getelementptr inbounds i8, i8* %158, i64 12
  %165 = bitcast i8* %164 to i32*
  store i32 0, i32* %165, align 4
  %166 = add nuw nsw i32 %149, 1
  %167 = icmp eq i32 %166, %1
  br i1 %167, label %168, label %148

168:                                              ; preds = %148, %145, %83, %87, %29, %33, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder9VertTableC2Ev(%"class.fxcodec::ProgressiveDecoder::VertTable"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::VertTable", %"class.fxcodec::ProgressiveDecoder::VertTable"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder9VertTableD2Ev(%"class.fxcodec::ProgressiveDecoder::VertTable"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::VertTable", %"class.fxcodec::ProgressiveDecoder::VertTable"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::VertTable", %"class.fxcodec::ProgressiveDecoder::VertTable"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %3) #12
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder9VertTable4CalcEii(%"class.fxcodec::ProgressiveDecoder::VertTable"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = sitofp i32 %1 to double
  %6 = sitofp i32 %2 to double
  %7 = fdiv double %5, %6
  %8 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::VertTable", %"class.fxcodec::ProgressiveDecoder::VertTable"* %0, i64 0, i32 0
  store i32 16, i32* %8, align 8
  %9 = shl nsw i32 %1, 4
  %10 = or i32 %9, 4
  %11 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::VertTable", %"class.fxcodec::ProgressiveDecoder::VertTable"* %0, i64 0, i32 1
  %12 = sext i32 %10 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 0, i8* %4, align 1
  %13 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::VertTable", %"class.fxcodec::ProgressiveDecoder::VertTable"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = icmp ult i64 %18, %12
  %20 = inttoptr i64 %17 to i8*
  br i1 %19, label %21, label %23

21:                                               ; preds = %3
  %22 = sub i64 %12, %18
  call void @_ZNSt3__16vectorIh16FxAllocAllocatorIhEE8__appendEmRKh(%"class.std::__1::vector"* %11, i64 %22, i8* nonnull dereferenceable(1) %4) #12
  br label %27

23:                                               ; preds = %3
  %24 = icmp ugt i64 %18, %12
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = getelementptr inbounds i8, i8* %20, i64 %12
  store i8* %26, i8** %13, align 8
  br label %27

27:                                               ; preds = %21, %23, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  %28 = fcmp ugt double %7, 1.000000e+00
  %29 = icmp sgt i32 %1, 0
  br i1 %28, label %37, label %30

30:                                               ; preds = %27
  br i1 %29, label %31, label %192

31:                                               ; preds = %30
  %32 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::VertTable", %"class.fxcodec::ProgressiveDecoder::VertTable"* %0, i64 0, i32 1, i32 0, i32 0
  %33 = and i32 %1, 1
  %34 = icmp eq i32 %1, 1
  br i1 %34, label %176, label %35

35:                                               ; preds = %31
  %36 = sub i32 %1, %33
  br label %40

37:                                               ; preds = %27
  br i1 %29, label %38, label %192

38:                                               ; preds = %37
  %39 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder::VertTable", %"class.fxcodec::ProgressiveDecoder::VertTable"* %0, i64 0, i32 1, i32 0, i32 0
  br label %73

40:                                               ; preds = %40, %35
  %41 = phi i32 [ 0, %35 ], [ %68, %40 ]
  %42 = phi i32 [ %36, %35 ], [ %69, %40 ]
  %43 = load i8*, i8** %32, align 8
  %44 = load i32, i32* %8, align 8
  %45 = mul nsw i32 %44, %41
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %43, i64 %46
  %48 = bitcast i8* %47 to i32*
  store i32 %41, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %47, i64 4
  %50 = bitcast i8* %49 to i32*
  store i32 %41, i32* %50, align 4
  %51 = getelementptr inbounds i8, i8* %47, i64 8
  %52 = bitcast i8* %51 to i32*
  store i32 65536, i32* %52, align 4
  %53 = getelementptr inbounds i8, i8* %47, i64 12
  %54 = bitcast i8* %53 to i32*
  store i32 0, i32* %54, align 4
  %55 = or i32 %41, 1
  %56 = load i8*, i8** %32, align 8
  %57 = load i32, i32* %8, align 8
  %58 = mul nsw i32 %57, %55
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %56, i64 %59
  %61 = bitcast i8* %60 to i32*
  store i32 %55, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %60, i64 4
  %63 = bitcast i8* %62 to i32*
  store i32 %55, i32* %63, align 4
  %64 = getelementptr inbounds i8, i8* %60, i64 8
  %65 = bitcast i8* %64 to i32*
  store i32 65536, i32* %65, align 4
  %66 = getelementptr inbounds i8, i8* %60, i64 12
  %67 = bitcast i8* %66 to i32*
  store i32 0, i32* %67, align 4
  %68 = add nuw nsw i32 %41, 2
  %69 = add i32 %42, -2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %176, label %40

71:                                               ; preds = %154, %136
  %72 = fcmp olt double %79, %5
  br i1 %72, label %73, label %192

73:                                               ; preds = %38, %71
  %74 = phi i32 [ 0, %38 ], [ %77, %71 ]
  %75 = phi double [ 0.000000e+00, %38 ], [ %79, %71 ]
  %76 = fptosi double %75 to i32
  %77 = add nuw nsw i32 %74, 1
  %78 = sitofp i32 %77 to double
  %79 = fmul double %7, %78
  %80 = fptosi double %79 to i32
  %81 = icmp slt i32 %80, %1
  br i1 %81, label %136, label %82

82:                                               ; preds = %73
  %83 = icmp slt i32 %76, %1
  br i1 %83, label %84, label %192

84:                                               ; preds = %82
  %85 = sub i32 %1, %76
  %86 = xor i32 %76, -1
  %87 = and i32 %85, 1
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %103, label %89

89:                                               ; preds = %84
  %90 = load i8*, i8** %39, align 8
  %91 = load i32, i32* %8, align 8
  %92 = mul nsw i32 %91, %76
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %90, i64 %93
  %95 = bitcast i8* %94 to i32*
  store i32 %76, i32* %95, align 4
  %96 = getelementptr inbounds i8, i8* %94, i64 4
  %97 = bitcast i8* %96 to i32*
  store i32 %76, i32* %97, align 4
  %98 = getelementptr inbounds i8, i8* %94, i64 8
  %99 = bitcast i8* %98 to i32*
  store i32 65536, i32* %99, align 4
  %100 = getelementptr inbounds i8, i8* %94, i64 12
  %101 = bitcast i8* %100 to i32*
  store i32 0, i32* %101, align 4
  %102 = add nsw i32 %76, 1
  br label %103

103:                                              ; preds = %84, %89
  %104 = phi i32 [ %76, %84 ], [ %102, %89 ]
  %105 = sub i32 0, %1
  %106 = icmp eq i32 %86, %105
  br i1 %106, label %192, label %107

107:                                              ; preds = %103, %107
  %108 = phi i32 [ %134, %107 ], [ %104, %103 ]
  %109 = load i8*, i8** %39, align 8
  %110 = load i32, i32* %8, align 8
  %111 = mul nsw i32 %110, %108
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* %109, i64 %112
  %114 = bitcast i8* %113 to i32*
  store i32 %76, i32* %114, align 4
  %115 = getelementptr inbounds i8, i8* %113, i64 4
  %116 = bitcast i8* %115 to i32*
  store i32 %76, i32* %116, align 4
  %117 = getelementptr inbounds i8, i8* %113, i64 8
  %118 = bitcast i8* %117 to i32*
  store i32 65536, i32* %118, align 4
  %119 = getelementptr inbounds i8, i8* %113, i64 12
  %120 = bitcast i8* %119 to i32*
  store i32 0, i32* %120, align 4
  %121 = add nsw i32 %108, 1
  %122 = load i8*, i8** %39, align 8
  %123 = load i32, i32* %8, align 8
  %124 = mul nsw i32 %123, %121
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %122, i64 %125
  %127 = bitcast i8* %126 to i32*
  store i32 %76, i32* %127, align 4
  %128 = getelementptr inbounds i8, i8* %126, i64 4
  %129 = bitcast i8* %128 to i32*
  store i32 %76, i32* %129, align 4
  %130 = getelementptr inbounds i8, i8* %126, i64 8
  %131 = bitcast i8* %130 to i32*
  store i32 65536, i32* %131, align 4
  %132 = getelementptr inbounds i8, i8* %126, i64 12
  %133 = bitcast i8* %132 to i32*
  store i32 0, i32* %133, align 4
  %134 = add nsw i32 %108, 2
  %135 = icmp eq i32 %134, %1
  br i1 %135, label %192, label %107

136:                                              ; preds = %73
  %137 = load i8*, i8** %39, align 8
  %138 = load i32, i32* %8, align 8
  %139 = mul nsw i32 %138, %76
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8, i8* %137, i64 %140
  %142 = bitcast i8* %141 to i32*
  store i32 %76, i32* %142, align 4
  %143 = getelementptr inbounds i8, i8* %141, i64 4
  %144 = bitcast i8* %143 to i32*
  store i32 %76, i32* %144, align 4
  %145 = getelementptr inbounds i8, i8* %141, i64 8
  %146 = bitcast i8* %145 to i32*
  store i32 65536, i32* %146, align 4
  %147 = getelementptr inbounds i8, i8* %141, i64 12
  %148 = bitcast i8* %147 to i32*
  store i32 0, i32* %148, align 4
  %149 = add nsw i32 %76, 1
  %150 = icmp slt i32 %149, %80
  br i1 %150, label %151, label %71

151:                                              ; preds = %136
  %152 = sub nsw i32 %80, %76
  %153 = sitofp i32 %152 to float
  br label %154

154:                                              ; preds = %154, %151
  %155 = phi i32 [ %149, %151 ], [ %174, %154 ]
  %156 = load i8*, i8** %39, align 8
  %157 = load i32, i32* %8, align 8
  %158 = mul nsw i32 %157, %155
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i8, i8* %156, i64 %159
  %161 = bitcast i8* %160 to i32*
  store i32 %76, i32* %161, align 4
  %162 = getelementptr inbounds i8, i8* %160, i64 4
  %163 = bitcast i8* %162 to i32*
  store i32 %80, i32* %163, align 4
  %164 = sub nsw i32 %80, %155
  %165 = sitofp i32 %164 to float
  %166 = fdiv float %165, %153
  %167 = fmul float %166, 6.553600e+04
  %168 = call i32 @FXSYS_roundf(float %167) #12
  %169 = getelementptr inbounds i8, i8* %160, i64 8
  %170 = bitcast i8* %169 to i32*
  store i32 %168, i32* %170, align 4
  %171 = sub nsw i32 65536, %168
  %172 = getelementptr inbounds i8, i8* %160, i64 12
  %173 = bitcast i8* %172 to i32*
  store i32 %171, i32* %173, align 4
  %174 = add i32 %155, 1
  %175 = icmp eq i32 %174, %80
  br i1 %175, label %71, label %154

176:                                              ; preds = %40, %31
  %177 = phi i32 [ 0, %31 ], [ %68, %40 ]
  %178 = icmp eq i32 %33, 0
  br i1 %178, label %192, label %179

179:                                              ; preds = %176
  %180 = load i8*, i8** %32, align 8
  %181 = load i32, i32* %8, align 8
  %182 = mul nsw i32 %181, %177
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i8, i8* %180, i64 %183
  %185 = bitcast i8* %184 to i32*
  store i32 %177, i32* %185, align 4
  %186 = getelementptr inbounds i8, i8* %184, i64 4
  %187 = bitcast i8* %186 to i32*
  store i32 %177, i32* %187, align 4
  %188 = getelementptr inbounds i8, i8* %184, i64 8
  %189 = bitcast i8* %188 to i32*
  store i32 65536, i32* %189, align 4
  %190 = getelementptr inbounds i8, i8* %184, i64 12
  %191 = bitcast i8* %190 to i32*
  store i32 0, i32* %191, align 4
  br label %192

192:                                              ; preds = %179, %176, %71, %103, %107, %30, %37, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoderC2Ev(%"class.fxcodec::ProgressiveDecoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 2, i32 0
  %3 = bitcast %"class.fxcodec::ProgressiveDecoder"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN7fxcodec18ProgressiveDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN7fxcodec18ProgressiveDecoderE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN7fxcodec18ProgressiveDecoderE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 4, i32* %4, align 8
  %5 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 17, i32 2
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 18, i32 1
  %9 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #12
  %10 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 19, i32 1
  %11 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  %12 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 92, i1 false)
  %13 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 72, i1 false)
  store i32 -1, i32* %11, align 8
  %14 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 30
  %15 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 35
  %16 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 39
  store %struct.CFX_GifPalette* null, %struct.CFX_GifPalette** %16, align 8
  %17 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 40
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 41
  %19 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 16, i1 false)
  %20 = bitcast i64* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 20, i1 false)
  store i32 -1, i32* %18, align 4
  %21 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 42
  %22 = bitcast %struct.FX_RECT* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 16, i1 false) #12
  %23 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 43
  store i8 1, i8* %23, align 8
  %24 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 44
  store i8 0, i8* %24, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoderD2Ev(%"class.fxcodec::ProgressiveDecoder"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.fxcodec::ProgressiveDecoder"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN7fxcodec18ProgressiveDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN7fxcodec18ProgressiveDecoderE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVN7fxcodec18ProgressiveDecoderE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 19, i32 1, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i8* %5 to i64
  %9 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 19, i32 1, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  store i64 %8, i64* %10, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %5) #12
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 18, i32 1, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i8* %13 to i64
  %17 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 18, i32 1, i32 0, i32 1
  %18 = bitcast i8** %17 to i64*
  store i64 %16, i64* %18, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %13) #12
  br label %19

19:                                               ; preds = %11, %15
  %20 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 17, i32 2, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = ptrtoint i8* %21 to i64
  %25 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 17, i32 2, i32 0, i32 1
  %26 = bitcast i8** %25 to i64*
  store i64 %24, i64* %26, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %21) #12
  br label %27

27:                                               ; preds = %19, %23
  %28 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %29 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %28, align 8
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %28, align 8
  %30 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %29 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %33 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %33, i64 1
  %35 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %34, align 8
  tail call void %35(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %29) #12
  br label %36

36:                                               ; preds = %27, %31
  %37 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %38 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %37, align 8
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %37, align 8
  %39 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %38 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %42 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %42, i64 1
  %44 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %43, align 8
  tail call void %44(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %38) #12
  br label %45

45:                                               ; preds = %36, %40
  %46 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %47 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %46, align 8
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %46, align 8
  %48 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %47 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %51 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %51, i64 1
  %53 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %52, align 8
  tail call void %53(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %47) #12
  br label %54

54:                                               ; preds = %45, %49
  %55 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %56 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %55, align 8
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %55, align 8
  %57 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %56 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %60 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %60, i64 1
  %62 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %61, align 8
  tail call void %62(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %56) #12
  br label %63

63:                                               ; preds = %54, %58
  %64 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %65 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %64, align 8
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %64, align 8
  %66 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %65 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %69 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %69, i64 1
  %71 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %70, align 8
  tail call void %71(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %65) #12
  br label %72

72:                                               ; preds = %63, %67
  %73 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  store i32* null, i32** %73, align 8
  %75 = icmp eq i32* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = bitcast i32* %74 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %77) #12
  br label %78

78:                                               ; preds = %72, %76
  %79 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  store i8* null, i8** %79, align 8
  %81 = icmp eq i8* %80, null
  br i1 %81, label %83, label %82

82:                                               ; preds = %78
  tail call void @_Z7FX_FreePv(i8* nonnull %80) #12
  br label %83

83:                                               ; preds = %78, %82
  %84 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %85 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %84, align 8
  store %class.CFX_CodecMemory* null, %class.CFX_CodecMemory** %84, align 8
  %86 = icmp eq %class.CFX_CodecMemory* %85, null
  br i1 %86, label %98, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %85, i64 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = add nsw i64 %89, -1
  store i64 %90, i64* %88, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %98

92:                                               ; preds = %87
  %93 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %85, i64 0, i32 0
  %94 = bitcast %class.CFX_CodecMemory* %85 to void (%"class.fxcrt::Retainable"*)***
  %95 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %95, i64 1
  %97 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %96, align 8
  tail call void %97(%"class.fxcrt::Retainable"* nonnull %93) #12
  br label %98

98:                                               ; preds = %83, %87, %92
  %99 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %100 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %99, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %99, align 8
  %101 = icmp eq %class.CFX_DIBitmap* %100, null
  br i1 %101, label %113, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %100, i64 0, i32 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = add nsw i64 %104, -1
  store i64 %105, i64* %103, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %113

107:                                              ; preds = %102
  %108 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %100, i64 0, i32 0, i32 0
  %109 = bitcast %class.CFX_DIBitmap* %100 to void (%"class.fxcrt::Retainable"*)***
  %110 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %110, i64 1
  %112 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %111, align 8
  tail call void %112(%"class.fxcrt::Retainable"* nonnull %108) #12
  br label %113

113:                                              ; preds = %98, %102, %107
  %114 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %115 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %114, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %114, align 8
  %116 = icmp eq %class.IFX_SeekableReadStream* %115, null
  br i1 %116, label %138, label %117

117:                                              ; preds = %113
  %118 = bitcast %class.IFX_SeekableReadStream* %115 to i8**
  %119 = load i8*, i8** %118, align 8
  %120 = getelementptr i8, i8* %119, i64 -32
  %121 = bitcast i8* %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %class.IFX_SeekableReadStream* %115 to i8*
  %124 = getelementptr inbounds i8, i8* %123, i64 %122
  %125 = getelementptr inbounds i8, i8* %124, i64 8
  %126 = bitcast i8* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = add nsw i64 %127, -1
  store i64 %128, i64* %126, align 8
  %129 = icmp ne i64 %128, 0
  %130 = icmp eq i8* %124, null
  %131 = or i1 %130, %129
  br i1 %131, label %138, label %132

132:                                              ; preds = %117
  %133 = bitcast i8* %124 to %"class.fxcrt::Retainable"*
  %134 = bitcast i8* %124 to void (%"class.fxcrt::Retainable"*)***
  %135 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %135, i64 1
  %137 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %136, align 8
  tail call void %137(%"class.fxcrt::Retainable"* nonnull %133) #12
  br label %138

138:                                              ; preds = %113, %117, %132
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoderD0Ev(%"class.fxcodec::ProgressiveDecoder"*) unnamed_addr #0 align 2 {
  tail call void @_ZN7fxcodec18ProgressiveDecoderD2Ev(%"class.fxcodec::ProgressiveDecoder"* %0) #12
  %2 = bitcast %"class.fxcodec::ProgressiveDecoder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec18ProgressiveDecoder13PngReadHeaderEiiiiPiPd(%"class.fxcodec::ProgressiveDecoder"* nocapture, i32, i32, i32, i32, i32* nocapture, double* nocapture) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %8, align 8
  %10 = icmp eq %class.CFX_DIBitmap* %9, null
  br i1 %10, label %11, label %29

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 20
  store i32 %1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 21
  store i32 %2, i32* %13, align 4
  %14 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 23
  store i32 %3, i32* %14, align 4
  %15 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 33
  store i32 %4, i32* %15, align 8
  %16 = load i32, i32* %5, align 4
  %17 = icmp ult i32 %16, 7
  br i1 %17, label %18, label %22

18:                                               ; preds = %11
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZThn16_N7fxcodec18ProgressiveDecoder13PngReadHeaderEiiiiPiPd, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %11, %18
  %23 = phi i32 [ %21, %18 ], [ 0, %11 ]
  %24 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 22
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 2
  store i32 %1, i32* %27, align 8
  %28 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  store i32 %2, i32* %28, align 4
  br label %36

29:                                               ; preds = %7
  %30 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %9, i64 0, i32 0, i32 1
  %31 = load i16, i16* %30, align 8
  switch i16 %31, label %36 [
    i16 544, label %33
    i16 32, label %33
    i16 264, label %34
    i16 8, label %34
    i16 24, label %32
  ]

32:                                               ; preds = %29
  br label %34

33:                                               ; preds = %29, %29
  br label %34

34:                                               ; preds = %29, %29, %33, %32
  %35 = phi i32 [ 6, %33 ], [ 2, %32 ], [ 0, %29 ], [ 0, %29 ]
  store i32 %35, i32* %5, align 4
  store double 2.200000e+00, double* %6, align 8
  br label %36

36:                                               ; preds = %34, %29, %22
  %37 = phi i1 [ false, %22 ], [ true, %34 ], [ false, %29 ]
  ret i1 %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZThn16_N7fxcodec18ProgressiveDecoder13PngReadHeaderEiiiiPiPd(%"class.fxcodec::ProgressiveDecoder"* nocapture, i32, i32, i32, i32, i32* nocapture, double* nocapture) unnamed_addr #5 align 2 {
  %8 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 -1, i32 42, i32 2
  %9 = getelementptr inbounds i32, i32* %8, i64 10
  %10 = bitcast i32* %9 to %class.CFX_DIBitmap**
  %11 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %10, align 8
  %12 = icmp eq %class.CFX_DIBitmap* %11, null
  br i1 %12, label %13, label %31

13:                                               ; preds = %7
  %14 = getelementptr inbounds i32, i32* %8, i64 54
  store i32 %1, i32* %14, align 8
  %15 = getelementptr inbounds i32, i32* %8, i64 55
  store i32 %2, i32* %15, align 4
  %16 = getelementptr inbounds i32, i32* %8, i64 57
  store i32 %3, i32* %16, align 4
  %17 = getelementptr inbounds i32, i32* %8, i64 70
  store i32 %4, i32* %17, align 8
  %18 = load i32, i32* %5, align 4
  %19 = icmp ult i32 %18, 7
  br i1 %19, label %20, label %24

20:                                               ; preds = %13
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZThn16_N7fxcodec18ProgressiveDecoder13PngReadHeaderEiiiiPiPd, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4
  br label %24

24:                                               ; preds = %13, %20
  %25 = phi i32 [ %23, %20 ], [ 0, %13 ]
  %26 = getelementptr inbounds i32, i32* %8, i64 56
  store i32 %25, i32* %26, align 8
  %27 = getelementptr inbounds i32, i32* %8, i64 58
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds i32, i32* %8, i64 59
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds i32, i32* %8, i64 60
  store i32 %1, i32* %29, align 8
  %30 = getelementptr inbounds i32, i32* %8, i64 61
  store i32 %2, i32* %30, align 4
  br label %38

31:                                               ; preds = %7
  %32 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %11, i64 0, i32 0, i32 1
  %33 = load i16, i16* %32, align 8
  switch i16 %33, label %38 [
    i16 544, label %35
    i16 32, label %35
    i16 264, label %36
    i16 8, label %36
    i16 24, label %34
  ]

34:                                               ; preds = %31
  br label %36

35:                                               ; preds = %31, %31
  br label %36

36:                                               ; preds = %31, %31, %35, %34
  %37 = phi i32 [ 6, %35 ], [ 2, %34 ], [ 0, %31 ], [ 0, %31 ]
  store i32 %37, i32* %5, align 4
  store double 2.200000e+00, double* %6, align 8
  br label %38

38:                                               ; preds = %24, %31, %36
  %39 = phi i1 [ false, %24 ], [ true, %36 ], [ false, %31 ]
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec18ProgressiveDecoder17PngAskScanlineBufEiPPh(%"class.fxcodec::ProgressiveDecoder"* nocapture readonly, i32, i8** nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %4, align 8
  %6 = icmp eq %class.CFX_DIBitmap* %5, null
  br i1 %6, label %178, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %5, i64 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add nsw i64 %9, 1
  store i64 %10, i64* %8, align 8
  %11 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, %1
  br i1 %13, label %167, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, %1
  br i1 %17, label %18, label %167

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %20 = load i32, i32* %19, align 4
  %21 = sitofp i32 %20 to double
  %22 = sub nsw i32 %16, %12
  %23 = sitofp i32 %22 to double
  %24 = fdiv double %21, %23
  %25 = sub nsw i32 %1, %12
  %26 = sitofp i32 %25 to double
  %27 = fmul double %24, %26
  %28 = fptosi double %27 to i32
  %29 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 26
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, %28
  %32 = bitcast %class.CFX_DIBitmap* %5 to i8* (%class.CFX_DIBitmap*, i32)***
  %33 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %32, align 8
  %34 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %33, i64 3
  %35 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %34, align 8
  %36 = tail call i8* %35(%class.CFX_DIBitmap* nonnull %5, i32 %31) #12
  %37 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  store i8* %38, i8** %2, align 8
  %39 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %5, i64 0, i32 0, i32 1
  %40 = load i16, i16* %39, align 8
  %41 = lshr i16 %40, 3
  %42 = and i16 %41, 31
  %43 = zext i16 %42 to i32
  %44 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 32
  %45 = load i32, i32* %44, align 4
  %46 = lshr i32 %45, 3
  %47 = and i32 %46, 31
  %48 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 25
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = mul nsw i32 %49, %43
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %36, i64 %53
  %55 = mul nsw i32 %51, %47
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %38, i64 %56
  %58 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  %59 = load i32, i32* %58, align 8
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %61, label %164

61:                                               ; preds = %18
  %62 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 19, i32 1, i32 0, i32 0
  %63 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 19, i32 0
  %64 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %5, i64 0, i32 0, i32 6, i32 0, i32 0
  %65 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %5, i64 0, i32 0, i32 6, i32 0, i32 1
  br label %66

66:                                               ; preds = %61, %159
  %67 = phi i64 [ 0, %61 ], [ %160, %159 ]
  %68 = load i8*, i8** %62, align 8
  %69 = load i32, i32* %63, align 8
  %70 = trunc i64 %67 to i32
  %71 = mul nsw i32 %69, %70
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %68, i64 %72
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds i8, i8* %73, i64 4
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %75, %78
  br i1 %79, label %80, label %159

80:                                               ; preds = %66
  %81 = load i16, i16* %39, align 8
  switch i16 %81, label %164 [
    i16 544, label %127
    i16 32, label %98
    i16 264, label %82
    i16 8, label %82
    i16 24, label %98
  ]

82:                                               ; preds = %80, %80
  %83 = load i32*, i32** %64, align 8
  %84 = load i32*, i32** %65, align 8
  %85 = icmp eq i32* %83, %84
  br i1 %85, label %86, label %164

86:                                               ; preds = %82
  %87 = getelementptr inbounds i8, i8* %73, i64 8
  %88 = bitcast i8* %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds i8, i8* %54, i64 %67
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = mul nsw i32 %89, %92
  %94 = lshr i32 %93, 16
  %95 = trunc i32 %94 to i8
  %96 = sext i32 %75 to i64
  %97 = getelementptr inbounds i8, i8* %57, i64 %96
  store i8 %95, i8* %97, align 1
  br label %159

98:                                               ; preds = %80, %80
  %99 = mul nsw i32 %70, %43
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds i8, i8* %54, i64 %100
  %102 = getelementptr inbounds i8, i8* %73, i64 8
  %103 = bitcast i8* %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds i8, i8* %101, i64 1
  %106 = load i8, i8* %101, align 1
  %107 = zext i8 %106 to i32
  %108 = mul nsw i32 %104, %107
  %109 = getelementptr inbounds i8, i8* %105, i64 1
  %110 = load i8, i8* %105, align 1
  %111 = zext i8 %110 to i32
  %112 = mul nsw i32 %104, %111
  %113 = load i8, i8* %109, align 1
  %114 = zext i8 %113 to i32
  %115 = mul nsw i32 %104, %114
  %116 = mul nsw i32 %75, %47
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %57, i64 %117
  %119 = lshr i32 %108, 16
  %120 = trunc i32 %119 to i8
  %121 = getelementptr inbounds i8, i8* %118, i64 1
  store i8 %120, i8* %118, align 1
  %122 = lshr i32 %112, 16
  %123 = trunc i32 %122 to i8
  %124 = getelementptr inbounds i8, i8* %121, i64 1
  store i8 %123, i8* %121, align 1
  %125 = lshr i32 %115, 16
  %126 = trunc i32 %125 to i8
  store i8 %126, i8* %124, align 1
  br label %159

127:                                              ; preds = %80
  %128 = mul nsw i32 %70, %43
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* %54, i64 %129
  %131 = getelementptr inbounds i8, i8* %73, i64 8
  %132 = bitcast i8* %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds i8, i8* %130, i64 1
  %135 = load i8, i8* %130, align 1
  %136 = zext i8 %135 to i32
  %137 = mul nsw i32 %133, %136
  %138 = getelementptr inbounds i8, i8* %134, i64 1
  %139 = load i8, i8* %134, align 1
  %140 = zext i8 %139 to i32
  %141 = mul nsw i32 %133, %140
  %142 = getelementptr inbounds i8, i8* %138, i64 1
  %143 = load i8, i8* %138, align 1
  %144 = zext i8 %143 to i32
  %145 = mul nsw i32 %133, %144
  %146 = mul nsw i32 %75, %47
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i8, i8* %57, i64 %147
  %149 = lshr i32 %137, 16
  %150 = trunc i32 %149 to i8
  %151 = getelementptr inbounds i8, i8* %148, i64 1
  store i8 %150, i8* %148, align 1
  %152 = lshr i32 %141, 16
  %153 = trunc i32 %152 to i8
  %154 = getelementptr inbounds i8, i8* %151, i64 1
  store i8 %153, i8* %151, align 1
  %155 = lshr i32 %145, 16
  %156 = trunc i32 %155 to i8
  %157 = getelementptr inbounds i8, i8* %154, i64 1
  store i8 %156, i8* %154, align 1
  %158 = load i8, i8* %142, align 1
  store i8 %158, i8* %157, align 1
  br label %159

159:                                              ; preds = %66, %127, %98, %86
  %160 = add nuw nsw i64 %67, 1
  %161 = load i32, i32* %58, align 8
  %162 = sext i32 %161 to i64
  %163 = icmp slt i64 %160, %162
  br i1 %163, label %66, label %164

164:                                              ; preds = %82, %159, %80, %18
  %165 = phi i1 [ true, %18 ], [ false, %82 ], [ true, %159 ], [ false, %80 ]
  %166 = load i64, i64* %8, align 8
  br label %167

167:                                              ; preds = %164, %7, %14
  %168 = phi i64 [ %166, %164 ], [ %10, %14 ], [ %10, %7 ]
  %169 = phi i1 [ %165, %164 ], [ true, %14 ], [ true, %7 ]
  %170 = add nsw i64 %168, -1
  store i64 %170, i64* %8, align 8
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %178

172:                                              ; preds = %167
  %173 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %5, i64 0, i32 0, i32 0
  %174 = bitcast %class.CFX_DIBitmap* %5 to void (%"class.fxcrt::Retainable"*)***
  %175 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %174, align 8
  %176 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %175, i64 1
  %177 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %176, align 8
  tail call void %177(%"class.fxcrt::Retainable"* nonnull %173) #12
  br label %178

178:                                              ; preds = %3, %167, %172
  %179 = phi i1 [ %169, %167 ], [ %169, %172 ], [ false, %3 ]
  ret i1 %179
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn16_N7fxcodec18ProgressiveDecoder17PngAskScanlineBufEiPPh(%"class.fxcodec::ProgressiveDecoder"* nocapture readonly, i32, i8** nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 -1, i32 42, i32 2
  %5 = bitcast i32* %4 to %"class.fxcodec::ProgressiveDecoder"*
  %6 = tail call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder17PngAskScanlineBufEiPPh(%"class.fxcodec::ProgressiveDecoder"* %5, i32 %1, i8** %2)
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder27PngFillScanlineBufCompletedEii(%"class.fxcodec::ProgressiveDecoder"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.4", align 8
  %5 = bitcast %"class.fxcrt::RetainPtr.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.4"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %7, align 8
  %9 = ptrtoint %class.CFX_DIBitmap* %8 to i64
  %10 = bitcast %"class.fxcrt::RetainPtr.4"* %4 to i64*
  store i64 %9, i64* %10, align 8
  %11 = icmp eq %class.CFX_DIBitmap* %8, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %8, i64 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, 1
  store i64 %15, i64* %13, align 8
  br label %16

16:                                               ; preds = %3, %12
  %17 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 26
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %24 = load i32, i32* %23, align 4
  %25 = icmp sle i32 %18, %2
  %26 = icmp sgt i32 %20, %2
  %27 = and i1 %25, %26
  br i1 %27, label %28, label %53

28:                                               ; preds = %16
  %29 = sub nsw i32 %20, %18
  %30 = sitofp i32 %24 to double
  %31 = sitofp i32 %29 to double
  %32 = fdiv double %30, %31
  %33 = sub nsw i32 %2, %18
  %34 = sitofp i32 %33 to double
  %35 = fmul double %32, %34
  %36 = fptosi double %35 to i32
  %37 = add nsw i32 %22, %36
  %38 = add nsw i32 %24, %22
  %39 = icmp slt i32 %37, %38
  br i1 %39, label %40, label %53

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZN7fxcodec18ProgressiveDecoder24PngOneOneMapResampleHorzERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiPhNS0_14FXCodec_FormatE(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* nonnull dereferenceable(8) %4, i32 %37, i8* %42, i32 undef)
  %43 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 33
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 1
  %46 = fcmp ogt double %32, 1.000000e+00
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %49

48:                                               ; preds = %40
  call void @_ZN7fxcodec18ProgressiveDecoder12ResampleVertERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEdi(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* nonnull dereferenceable(8) %4, double %32, i32 %37)
  br label %53

49:                                               ; preds = %40
  %50 = icmp eq i32 %1, 6
  %51 = and i1 %50, %46
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZN7fxcodec18ProgressiveDecoder12ResampleVertERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEdi(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* nonnull dereferenceable(8) %4, double %32, i32 %37)
  br label %53

53:                                               ; preds = %28, %16, %49, %52, %48
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %6, align 8
  br i1 %11, label %65, label %54

54:                                               ; preds = %53
  %55 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %8, i64 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = add nsw i64 %56, -1
  store i64 %57, i64* %55, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %65

59:                                               ; preds = %54
  %60 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %8, i64 0, i32 0, i32 0
  %61 = bitcast %class.CFX_DIBitmap* %8 to void (%"class.fxcrt::Retainable"*)***
  %62 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %62, i64 1
  %64 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %63, align 8
  tail call void %64(%"class.fxcrt::Retainable"* nonnull %60) #12
  br label %65

65:                                               ; preds = %53, %54, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder24PngOneOneMapResampleHorzERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiPhNS0_14FXCodec_FormatE(%"class.fxcodec::ProgressiveDecoder"* nocapture readonly, %"class.fxcrt::RetainPtr.4"* nocapture readonly dereferenceable(8), i32, i8* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %6, align 8
  %8 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %7, i64 0, i32 0
  %9 = bitcast %class.CFX_DIBitmap* %7 to i8* (%class.CFX_DIBBase*, i32)***
  %10 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %9, align 8
  %11 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %10, i64 3
  %12 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %11, align 8
  %13 = tail call i8* %12(%class.CFX_DIBBase* %8, i32 %2) #12
  %14 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 32
  %15 = load i32, i32* %14, align 4
  %16 = lshr i32 %15, 3
  %17 = and i32 %16, 31
  %18 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %6, align 8
  %19 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %18, i64 0, i32 0, i32 1
  %20 = load i16, i16* %19, align 8
  %21 = lshr i16 %20, 3
  %22 = and i16 %21, 31
  %23 = zext i16 %22 to i32
  %24 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = mul nsw i32 %25, %17
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %3, i64 %27
  %29 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %210

32:                                               ; preds = %5
  %33 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 25
  %34 = load i32, i32* %33, align 8
  %35 = mul nsw i32 %34, %23
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %13, i64 %36
  %38 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 19, i32 1, i32 0, i32 0
  %39 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 19, i32 0
  %40 = add nsw i32 %23, -3
  %41 = sext i32 %40 to i64
  br label %42

42:                                               ; preds = %206, %32
  %43 = phi i16 [ %20, %32 ], [ %209, %206 ]
  %44 = phi %class.CFX_DIBitmap* [ %18, %32 ], [ %207, %206 ]
  %45 = phi i8* [ %37, %32 ], [ %202, %206 ]
  %46 = phi i32 [ 0, %32 ], [ %203, %206 ]
  %47 = load i8*, i8** %38, align 8
  %48 = load i32, i32* %39, align 8
  %49 = mul nsw i32 %48, %46
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %47, i64 %50
  switch i16 %43, label %210 [
    i16 544, label %137
    i16 32, label %84
    i16 264, label %52
    i16 8, label %52
    i16 24, label %84
  ]

52:                                               ; preds = %42, %42
  %53 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %44, i64 0, i32 0, i32 6, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %44, i64 0, i32 0, i32 6, i32 0, i32 1
  %56 = load i32*, i32** %55, align 8
  %57 = icmp eq i32* %54, %56
  br i1 %57, label %58, label %210

58:                                               ; preds = %52
  %59 = getelementptr inbounds i8, i8* %51, i64 8
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = bitcast i8* %51 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, i8* %28, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = mul nsw i32 %61, %67
  %69 = getelementptr inbounds i8, i8* %51, i64 12
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds i8, i8* %51, i64 4
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %28, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = mul nsw i32 %71, %78
  %80 = add i32 %79, %68
  %81 = lshr i32 %80, 16
  %82 = trunc i32 %81 to i8
  %83 = getelementptr inbounds i8, i8* %45, i64 1
  store i8 %82, i8* %45, align 1
  br label %201

84:                                               ; preds = %42, %42
  %85 = bitcast i8* %51 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = mul nsw i32 %86, %17
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8, i8* %28, i64 %88
  %90 = getelementptr inbounds i8, i8* %51, i64 8
  %91 = bitcast i8* %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds i8, i8* %89, i64 1
  %94 = load i8, i8* %89, align 1
  %95 = zext i8 %94 to i32
  %96 = mul nsw i32 %92, %95
  %97 = getelementptr inbounds i8, i8* %93, i64 1
  %98 = load i8, i8* %93, align 1
  %99 = zext i8 %98 to i32
  %100 = mul nsw i32 %92, %99
  %101 = load i8, i8* %97, align 1
  %102 = zext i8 %101 to i32
  %103 = mul nsw i32 %92, %102
  %104 = getelementptr inbounds i8, i8* %51, i64 4
  %105 = bitcast i8* %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = mul nsw i32 %106, %17
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %28, i64 %108
  %110 = getelementptr inbounds i8, i8* %51, i64 12
  %111 = bitcast i8* %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds i8, i8* %109, i64 1
  %114 = load i8, i8* %109, align 1
  %115 = zext i8 %114 to i32
  %116 = mul nsw i32 %112, %115
  %117 = add i32 %116, %96
  %118 = getelementptr inbounds i8, i8* %113, i64 1
  %119 = load i8, i8* %113, align 1
  %120 = zext i8 %119 to i32
  %121 = mul nsw i32 %112, %120
  %122 = add i32 %121, %100
  %123 = load i8, i8* %118, align 1
  %124 = zext i8 %123 to i32
  %125 = mul nsw i32 %112, %124
  %126 = add i32 %125, %103
  %127 = lshr i32 %117, 16
  %128 = trunc i32 %127 to i8
  %129 = getelementptr inbounds i8, i8* %45, i64 1
  store i8 %128, i8* %45, align 1
  %130 = lshr i32 %122, 16
  %131 = trunc i32 %130 to i8
  %132 = getelementptr inbounds i8, i8* %45, i64 2
  store i8 %131, i8* %129, align 1
  %133 = lshr i32 %126, 16
  %134 = trunc i32 %133 to i8
  %135 = getelementptr inbounds i8, i8* %45, i64 3
  store i8 %134, i8* %132, align 1
  %136 = getelementptr inbounds i8, i8* %135, i64 %41
  br label %201

137:                                              ; preds = %42
  %138 = bitcast i8* %51 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = mul nsw i32 %139, %17
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i8, i8* %28, i64 %141
  %143 = getelementptr inbounds i8, i8* %51, i64 8
  %144 = bitcast i8* %143 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds i8, i8* %142, i64 1
  %147 = load i8, i8* %142, align 1
  %148 = zext i8 %147 to i32
  %149 = mul nsw i32 %145, %148
  %150 = getelementptr inbounds i8, i8* %146, i64 1
  %151 = load i8, i8* %146, align 1
  %152 = zext i8 %151 to i32
  %153 = mul nsw i32 %145, %152
  %154 = getelementptr inbounds i8, i8* %150, i64 1
  %155 = load i8, i8* %150, align 1
  %156 = zext i8 %155 to i32
  %157 = mul nsw i32 %145, %156
  %158 = load i8, i8* %154, align 1
  %159 = zext i8 %158 to i32
  %160 = mul nsw i32 %145, %159
  %161 = getelementptr inbounds i8, i8* %51, i64 4
  %162 = bitcast i8* %161 to i32*
  %163 = load i32, i32* %162, align 4
  %164 = mul nsw i32 %163, %17
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i8, i8* %28, i64 %165
  %167 = getelementptr inbounds i8, i8* %51, i64 12
  %168 = bitcast i8* %167 to i32*
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds i8, i8* %166, i64 1
  %171 = load i8, i8* %166, align 1
  %172 = zext i8 %171 to i32
  %173 = mul nsw i32 %169, %172
  %174 = add i32 %173, %149
  %175 = getelementptr inbounds i8, i8* %170, i64 1
  %176 = load i8, i8* %170, align 1
  %177 = zext i8 %176 to i32
  %178 = mul nsw i32 %169, %177
  %179 = add i32 %178, %153
  %180 = getelementptr inbounds i8, i8* %175, i64 1
  %181 = load i8, i8* %175, align 1
  %182 = zext i8 %181 to i32
  %183 = mul nsw i32 %169, %182
  %184 = add i32 %183, %157
  %185 = load i8, i8* %180, align 1
  %186 = zext i8 %185 to i32
  %187 = mul nsw i32 %169, %186
  %188 = add i32 %187, %160
  %189 = lshr i32 %174, 16
  %190 = trunc i32 %189 to i8
  %191 = getelementptr inbounds i8, i8* %45, i64 1
  store i8 %190, i8* %45, align 1
  %192 = lshr i32 %179, 16
  %193 = trunc i32 %192 to i8
  %194 = getelementptr inbounds i8, i8* %45, i64 2
  store i8 %193, i8* %191, align 1
  %195 = lshr i32 %184, 16
  %196 = trunc i32 %195 to i8
  %197 = getelementptr inbounds i8, i8* %45, i64 3
  store i8 %196, i8* %194, align 1
  %198 = lshr i32 %188, 16
  %199 = trunc i32 %198 to i8
  %200 = getelementptr inbounds i8, i8* %45, i64 4
  store i8 %199, i8* %197, align 1
  br label %201

201:                                              ; preds = %137, %84, %58
  %202 = phi i8* [ %83, %58 ], [ %136, %84 ], [ %200, %137 ]
  %203 = add nuw nsw i32 %46, 1
  %204 = load i32, i32* %29, align 8
  %205 = icmp slt i32 %203, %204
  br i1 %205, label %206, label %210

206:                                              ; preds = %201
  %207 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %6, align 8
  %208 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %207, i64 0, i32 0, i32 1
  %209 = load i16, i16* %208, align 8
  br label %42

210:                                              ; preds = %201, %42, %52, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder12ResampleVertERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEdi(%"class.fxcodec::ProgressiveDecoder"* nocapture readonly, %"class.fxcrt::RetainPtr.4"* nocapture readonly dereferenceable(8), double, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %7 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %6, i64 0, i32 0, i32 1
  %8 = load i16, i16* %7, align 8
  %9 = lshr i16 %8, 3
  %10 = and i16 %9, 31
  %11 = zext i16 %10 to i32
  %12 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 25
  %13 = load i32, i32* %12, align 8
  %14 = mul nsw i32 %13, %11
  %15 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 26
  %16 = load i32, i32* %15, align 4
  %17 = fcmp oge double %2, 0xC1E0000000000000
  %18 = fcmp ole double %2, 0x41DFFFFFFFC00000
  %19 = and i1 %18, %17
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %4
  tail call void @llvm.trap() #12
  unreachable

21:                                               ; preds = %4
  %22 = fptosi double %2 to i32
  %23 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %22) #12
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  br i1 %24, label %26, label %27, !prof !3

26:                                               ; preds = %21
  tail call void @llvm.trap() #12
  unreachable

27:                                               ; preds = %21
  %28 = icmp slt i32 %25, %16
  br i1 %28, label %38, label %29

29:                                               ; preds = %27
  %30 = icmp slt i32 %25, %3
  br i1 %30, label %31, label %250

31:                                               ; preds = %29
  %32 = zext i32 %14 to i64
  %33 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 18, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 18, i32 0
  %35 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  %36 = add nsw i32 %11, -3
  %37 = sext i32 %36 to i64
  br label %72

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, %16
  %42 = add nsw i32 %22, %3
  %43 = add nsw i32 %41, -1
  %44 = icmp slt i32 %42, %43
  br i1 %44, label %285, label %45

45:                                               ; preds = %38
  %46 = bitcast %class.CFX_DIBitmap* %6 to i8* (%class.CFX_DIBitmap*, i32)***
  %47 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %46, align 8
  %48 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %47, i64 3
  %49 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %48, align 8
  %50 = tail call i8* %49(%class.CFX_DIBitmap* %6, i32 %3) #12
  %51 = zext i32 %14 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = add nsw i32 %3, 1
  %54 = icmp slt i32 %53, %41
  br i1 %54, label %55, label %285

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i32 [ %53, %55 ], [ %70, %57 ]
  %59 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %60 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %59, i64 0, i32 0
  %61 = bitcast %class.CFX_DIBitmap* %59 to i8* (%class.CFX_DIBBase*, i32)***
  %62 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %61, align 8
  %63 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %62, i64 3
  %64 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %63, align 8
  %65 = tail call i8* %64(%class.CFX_DIBBase* %60, i32 %58) #12
  %66 = getelementptr inbounds i8, i8* %65, i64 %51
  %67 = load i32, i32* %56, align 8
  %68 = mul nsw i32 %67, %11
  %69 = zext i32 %68 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %66, i8* align 1 %52, i64 %69, i1 false)
  %70 = add i32 %58, 1
  %71 = icmp eq i32 %70, %41
  br i1 %71, label %285, label %57

72:                                               ; preds = %248, %31
  %73 = phi %class.CFX_DIBitmap* [ %6, %31 ], [ %249, %248 ]
  %74 = phi i32 [ %25, %31 ], [ %246, %248 ]
  %75 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %73, i64 0, i32 0
  %76 = bitcast %class.CFX_DIBitmap* %73 to i8* (%class.CFX_DIBBase*, i32)***
  %77 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %76, align 8
  %78 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %77, i64 3
  %79 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %78, align 8
  %80 = tail call i8* %79(%class.CFX_DIBBase* %75, i32 %74) #12
  %81 = sub nsw i32 %74, %16
  %82 = load i8*, i8** %33, align 8
  %83 = load i32, i32* %34, align 8
  %84 = mul nsw i32 %83, %81
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %82, i64 %85
  %87 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %88 = bitcast i8* %86 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = add nsw i32 %89, %16
  %91 = bitcast %class.CFX_DIBitmap* %87 to i8* (%class.CFX_DIBitmap*, i32)***
  %92 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %91, align 8
  %93 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %92, i64 3
  %94 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %93, align 8
  %95 = tail call i8* %94(%class.CFX_DIBitmap* %87, i32 %90) #12
  %96 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %97 = getelementptr inbounds i8, i8* %86, i64 4
  %98 = bitcast i8* %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = add nsw i32 %99, %16
  %101 = bitcast %class.CFX_DIBitmap* %96 to i8* (%class.CFX_DIBitmap*, i32)***
  %102 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %101, align 8
  %103 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %102, i64 3
  %104 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %103, align 8
  %105 = tail call i8* %104(%class.CFX_DIBitmap* %96, i32 %100) #12
  %106 = load i32, i32* %35, align 8
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %245

108:                                              ; preds = %72
  %109 = getelementptr inbounds i8, i8* %105, i64 %32
  %110 = getelementptr inbounds i8, i8* %95, i64 %32
  %111 = getelementptr inbounds i8, i8* %80, i64 %32
  %112 = getelementptr inbounds i8, i8* %86, i64 8
  %113 = bitcast i8* %112 to i32*
  %114 = getelementptr inbounds i8, i8* %86, i64 12
  %115 = bitcast i8* %114 to i32*
  br label %116

116:                                              ; preds = %108, %238
  %117 = phi i8* [ %111, %108 ], [ %241, %238 ]
  %118 = phi i32 [ 0, %108 ], [ %242, %238 ]
  %119 = phi i8* [ %109, %108 ], [ %240, %238 ]
  %120 = phi i8* [ %110, %108 ], [ %239, %238 ]
  %121 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %122 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %121, i64 0, i32 0, i32 1
  %123 = load i16, i16* %122, align 8
  switch i16 %123, label %285 [
    i16 544, label %187
    i16 32, label %145
    i16 24, label %145
    i16 264, label %124
    i16 8, label %124
  ]

124:                                              ; preds = %116, %116
  %125 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %121, i64 0, i32 0, i32 6, i32 0, i32 0
  %126 = load i32*, i32** %125, align 8
  %127 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %121, i64 0, i32 0, i32 6, i32 0, i32 1
  %128 = load i32*, i32** %127, align 8
  %129 = icmp eq i32* %126, %128
  br i1 %129, label %130, label %285

130:                                              ; preds = %124
  %131 = load i32, i32* %113, align 4
  %132 = getelementptr inbounds i8, i8* %120, i64 1
  %133 = load i8, i8* %120, align 1
  %134 = zext i8 %133 to i32
  %135 = mul nsw i32 %131, %134
  %136 = load i32, i32* %115, align 4
  %137 = getelementptr inbounds i8, i8* %119, i64 1
  %138 = load i8, i8* %119, align 1
  %139 = zext i8 %138 to i32
  %140 = mul nsw i32 %136, %139
  %141 = add nsw i32 %140, %135
  %142 = lshr i32 %141, 16
  %143 = trunc i32 %142 to i8
  %144 = getelementptr inbounds i8, i8* %117, i64 1
  store i8 %143, i8* %117, align 1
  br label %238

145:                                              ; preds = %116, %116
  %146 = load i32, i32* %113, align 4
  %147 = getelementptr inbounds i8, i8* %120, i64 1
  %148 = load i8, i8* %120, align 1
  %149 = zext i8 %148 to i32
  %150 = mul nsw i32 %146, %149
  %151 = getelementptr inbounds i8, i8* %120, i64 2
  %152 = load i8, i8* %147, align 1
  %153 = zext i8 %152 to i32
  %154 = mul nsw i32 %146, %153
  %155 = getelementptr inbounds i8, i8* %120, i64 3
  %156 = load i8, i8* %151, align 1
  %157 = zext i8 %156 to i32
  %158 = mul nsw i32 %146, %157
  %159 = getelementptr inbounds i8, i8* %155, i64 %37
  %160 = load i32, i32* %115, align 4
  %161 = getelementptr inbounds i8, i8* %119, i64 1
  %162 = load i8, i8* %119, align 1
  %163 = zext i8 %162 to i32
  %164 = mul nsw i32 %160, %163
  %165 = add i32 %164, %150
  %166 = getelementptr inbounds i8, i8* %119, i64 2
  %167 = load i8, i8* %161, align 1
  %168 = zext i8 %167 to i32
  %169 = mul nsw i32 %160, %168
  %170 = add i32 %169, %154
  %171 = getelementptr inbounds i8, i8* %119, i64 3
  %172 = load i8, i8* %166, align 1
  %173 = zext i8 %172 to i32
  %174 = mul nsw i32 %160, %173
  %175 = add i32 %174, %158
  %176 = getelementptr inbounds i8, i8* %171, i64 %37
  %177 = lshr i32 %165, 16
  %178 = trunc i32 %177 to i8
  %179 = getelementptr inbounds i8, i8* %117, i64 1
  store i8 %178, i8* %117, align 1
  %180 = lshr i32 %170, 16
  %181 = trunc i32 %180 to i8
  %182 = getelementptr inbounds i8, i8* %117, i64 2
  store i8 %181, i8* %179, align 1
  %183 = lshr i32 %175, 16
  %184 = trunc i32 %183 to i8
  %185 = getelementptr inbounds i8, i8* %117, i64 3
  store i8 %184, i8* %182, align 1
  %186 = getelementptr inbounds i8, i8* %185, i64 %37
  br label %238

187:                                              ; preds = %116
  %188 = load i32, i32* %113, align 4
  %189 = getelementptr inbounds i8, i8* %120, i64 1
  %190 = load i8, i8* %120, align 1
  %191 = zext i8 %190 to i32
  %192 = mul nsw i32 %188, %191
  %193 = getelementptr inbounds i8, i8* %120, i64 2
  %194 = load i8, i8* %189, align 1
  %195 = zext i8 %194 to i32
  %196 = mul nsw i32 %188, %195
  %197 = getelementptr inbounds i8, i8* %120, i64 3
  %198 = load i8, i8* %193, align 1
  %199 = zext i8 %198 to i32
  %200 = mul nsw i32 %188, %199
  %201 = getelementptr inbounds i8, i8* %120, i64 4
  %202 = load i8, i8* %197, align 1
  %203 = zext i8 %202 to i32
  %204 = mul nsw i32 %188, %203
  %205 = load i32, i32* %115, align 4
  %206 = getelementptr inbounds i8, i8* %119, i64 1
  %207 = load i8, i8* %119, align 1
  %208 = zext i8 %207 to i32
  %209 = mul nsw i32 %205, %208
  %210 = add i32 %209, %192
  %211 = getelementptr inbounds i8, i8* %119, i64 2
  %212 = load i8, i8* %206, align 1
  %213 = zext i8 %212 to i32
  %214 = mul nsw i32 %205, %213
  %215 = add i32 %214, %196
  %216 = getelementptr inbounds i8, i8* %119, i64 3
  %217 = load i8, i8* %211, align 1
  %218 = zext i8 %217 to i32
  %219 = mul nsw i32 %205, %218
  %220 = add i32 %219, %200
  %221 = getelementptr inbounds i8, i8* %119, i64 4
  %222 = load i8, i8* %216, align 1
  %223 = zext i8 %222 to i32
  %224 = mul nsw i32 %205, %223
  %225 = add i32 %224, %204
  %226 = lshr i32 %210, 16
  %227 = trunc i32 %226 to i8
  %228 = getelementptr inbounds i8, i8* %117, i64 1
  store i8 %227, i8* %117, align 1
  %229 = lshr i32 %215, 16
  %230 = trunc i32 %229 to i8
  %231 = getelementptr inbounds i8, i8* %117, i64 2
  store i8 %230, i8* %228, align 1
  %232 = lshr i32 %220, 16
  %233 = trunc i32 %232 to i8
  %234 = getelementptr inbounds i8, i8* %117, i64 3
  store i8 %233, i8* %231, align 1
  %235 = lshr i32 %225, 16
  %236 = trunc i32 %235 to i8
  %237 = getelementptr inbounds i8, i8* %117, i64 4
  store i8 %236, i8* %234, align 1
  br label %238

238:                                              ; preds = %130, %145, %187
  %239 = phi i8* [ %201, %187 ], [ %159, %145 ], [ %132, %130 ]
  %240 = phi i8* [ %221, %187 ], [ %176, %145 ], [ %137, %130 ]
  %241 = phi i8* [ %237, %187 ], [ %186, %145 ], [ %144, %130 ]
  %242 = add nuw nsw i32 %118, 1
  %243 = load i32, i32* %35, align 8
  %244 = icmp slt i32 %242, %243
  br i1 %244, label %116, label %245

245:                                              ; preds = %238, %72
  %246 = add i32 %74, 1
  %247 = icmp eq i32 %246, %3
  br i1 %247, label %250, label %248

248:                                              ; preds = %245
  %249 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  br label %72

250:                                              ; preds = %245, %29
  %251 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %252 = load i32, i32* %251, align 4
  %253 = add i32 %252, %16
  %254 = add nsw i32 %22, %3
  %255 = add nsw i32 %253, -1
  %256 = icmp slt i32 %254, %255
  br i1 %256, label %285, label %257

257:                                              ; preds = %250
  %258 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %259 = bitcast %class.CFX_DIBitmap* %258 to i8* (%class.CFX_DIBitmap*, i32)***
  %260 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %259, align 8
  %261 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %260, i64 3
  %262 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %261, align 8
  %263 = tail call i8* %262(%class.CFX_DIBitmap* %258, i32 %3) #12
  %264 = zext i32 %14 to i64
  %265 = getelementptr inbounds i8, i8* %263, i64 %264
  %266 = add nsw i32 %3, 1
  %267 = icmp slt i32 %266, %253
  br i1 %267, label %268, label %285

268:                                              ; preds = %257
  %269 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  br label %270

270:                                              ; preds = %270, %268
  %271 = phi i32 [ %266, %268 ], [ %283, %270 ]
  %272 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %273 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %272, i64 0, i32 0
  %274 = bitcast %class.CFX_DIBitmap* %272 to i8* (%class.CFX_DIBBase*, i32)***
  %275 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %274, align 8
  %276 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %275, i64 3
  %277 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %276, align 8
  %278 = tail call i8* %277(%class.CFX_DIBBase* %273, i32 %271) #12
  %279 = getelementptr inbounds i8, i8* %278, i64 %264
  %280 = load i32, i32* %269, align 8
  %281 = mul nsw i32 %280, %11
  %282 = zext i32 %281 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %279, i8* align 1 %265, i64 %282, i1 false)
  %283 = add i32 %271, 1
  %284 = icmp eq i32 %283, %253
  br i1 %284, label %285, label %270

285:                                              ; preds = %124, %116, %270, %57, %257, %45, %250, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N7fxcodec18ProgressiveDecoder27PngFillScanlineBufCompletedEii(%"class.fxcodec::ProgressiveDecoder"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 -1, i32 42, i32 2
  %5 = bitcast i32* %4 to %"class.fxcodec::ProgressiveDecoder"*
  tail call void @_ZN7fxcodec18ProgressiveDecoder27PngFillScanlineBufCompletedEii(%"class.fxcodec::ProgressiveDecoder"* %5, i32 %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder24GifRecordCurrentPositionERj(%"class.fxcodec::ProgressiveDecoder"* nocapture readonly, i32* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %4 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %3, align 8
  %5 = tail call i64 @_ZN7fxcodec10GifDecoder13GetAvailInputEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %4) #12
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 15
  %8 = load i32, i32* %7, align 8
  %9 = sub i32 %8, %6
  store i32 %9, i32* %1, align 4
  ret void
}

declare i64 @_ZN7fxcodec10GifDecoder13GetAvailInputEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N7fxcodec18ProgressiveDecoder24GifRecordCurrentPositionERj(%"class.fxcodec::ProgressiveDecoder"* nocapture readonly, i32* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 -1, i32 43
  %4 = getelementptr inbounds i8, i8* %3, i64 88
  %5 = bitcast i8* %4 to %"class.fxcodec::ProgressiveDecoderIface::Context"**
  %6 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %5, align 8
  %7 = tail call i64 @_ZN7fxcodec10GifDecoder13GetAvailInputEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %6) #12
  %8 = trunc i64 %7 to i32
  %9 = getelementptr inbounds i8, i8* %3, i64 112
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sub i32 %11, %8
  store i32 %12, i32* %1, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec18ProgressiveDecoder25GifInputRecordPositionBufEjRK7FX_RECTiP14CFX_GifPaletteibiib(%"class.fxcodec::ProgressiveDecoder"* nocapture, i32, %struct.FX_RECT* nocapture readonly dereferenceable(16), i32, %struct.CFX_GifPalette* readonly, i32, i1 zeroext, i32, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 15
  store i32 %1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 43
  store i8 1, i8* %13, align 8
  %14 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #12
  store i32 -1, i32* %11, align 4
  %15 = tail call %"class.fxcodec::GifProgressiveDecoder"* @_ZN7fxcodec21GifProgressiveDecoder11GetInstanceEv() #12
  %16 = getelementptr inbounds %"class.fxcodec::GifProgressiveDecoder", %"class.fxcodec::GifProgressiveDecoder"* %15, i64 0, i32 0
  %17 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %18 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %17, align 8
  %19 = load i8, i8* %13, align 8, !range !4
  %20 = icmp ne i8 %19, 0
  %21 = call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder12ReadMoreDataEPNS_23ProgressiveDecoderIfaceEPNS1_7ContextEbP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::ProgressiveDecoderIface"* %16, %"class.fxcodec::ProgressiveDecoderIface::Context"* %18, i1 zeroext %20, i32* nonnull %11) #12
  br i1 %21, label %22, label %290

22:                                               ; preds = %10
  store i8 0, i8* %13, align 8
  %23 = icmp ne i32 %3, 0
  %24 = icmp ne %struct.CFX_GifPalette* %4, null
  %25 = and i1 %23, %24
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 39
  %28 = load %struct.CFX_GifPalette*, %struct.CFX_GifPalette** %27, align 8
  %29 = icmp eq %struct.CFX_GifPalette* %28, null
  br i1 %29, label %290, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 40
  %32 = load i32, i32* %31, align 8
  br label %33

33:                                               ; preds = %22, %30
  %34 = phi i32 [ %32, %30 ], [ %3, %22 ]
  %35 = phi %struct.CFX_GifPalette* [ %28, %30 ], [ %4, %22 ]
  %36 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = icmp eq i32* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %33
  %40 = sext i32 %34 to i64
  %41 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %40, i64 4) #12
  %42 = bitcast i8* %41 to i32*
  %43 = load i32*, i32** %36, align 8
  %44 = bitcast i32** %36 to i8**
  store i8* %41, i8** %44, align 8
  %45 = icmp eq i32* %43, null
  br i1 %45, label %63, label %58

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 30
  %48 = load i32, i32* %47, align 4
  %49 = icmp sgt i32 %34, %48
  br i1 %49, label %50, label %61

50:                                               ; preds = %46
  store i32* null, i32** %36, align 8
  %51 = bitcast i32* %37 to i8*
  %52 = sext i32 %34 to i64
  %53 = tail call i8* @_ZN6pdfium8internal12ReallocOrDieEPvmm(i8* nonnull %51, i64 %52, i64 4) #12
  %54 = bitcast i8* %53 to i32*
  %55 = load i32*, i32** %36, align 8
  %56 = bitcast i32** %36 to i8**
  store i8* %53, i8** %56, align 8
  %57 = icmp eq i32* %55, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %50, %39
  %59 = phi i32* [ %43, %39 ], [ %55, %50 ]
  %60 = bitcast i32* %59 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %60) #12
  br label %61

61:                                               ; preds = %58, %46
  %62 = load i32*, i32** %36, align 8
  br label %63

63:                                               ; preds = %61, %50, %39
  %64 = phi i32* [ %62, %61 ], [ %54, %50 ], [ %42, %39 ]
  %65 = icmp eq i32* %64, null
  br i1 %65, label %290, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 30
  store i32 %34, i32* %67, align 4
  %68 = icmp sgt i32 %34, 0
  br i1 %68, label %69, label %86

69:                                               ; preds = %66
  %70 = zext i32 %34 to i64
  %71 = getelementptr inbounds %struct.CFX_GifPalette, %struct.CFX_GifPalette* %35, i64 0, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = getelementptr inbounds %struct.CFX_GifPalette, %struct.CFX_GifPalette* %35, i64 0, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = getelementptr inbounds %struct.CFX_GifPalette, %struct.CFX_GifPalette* %35, i64 0, i32 2
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = shl nuw nsw i32 %73, 16
  %81 = shl nuw nsw i32 %76, 8
  %82 = or i32 %80, %81
  %83 = or i32 %82, %79
  %84 = or i32 %83, -16777216
  store i32 %84, i32* %64, align 4
  %85 = icmp eq i32 %34, 1
  br i1 %85, label %86, label %106

86:                                               ; preds = %106, %69, %66
  %87 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 41
  store i32 %7, i32* %87, align 4
  %88 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 42
  %89 = bitcast %struct.FX_RECT* %88 to i8*
  %90 = bitcast %struct.FX_RECT* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 4 %90, i64 16, i1 false)
  %91 = select i1 %9, i32 4, i32 1
  %92 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 33
  store i32 %91, i32* %92, align 8
  %93 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 37
  %94 = load i32, i32* %93, align 8
  %95 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %96 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %95, align 8
  %97 = icmp eq %class.CFX_DIBitmap* %96, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %86
  %99 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %96, i64 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = add nsw i64 %100, 1
  store i64 %101, i64* %99, align 8
  br label %102

102:                                              ; preds = %86, %98
  %103 = icmp sle i32 %34, %7
  %104 = icmp eq i32 %7, -1
  %105 = or i1 %104, %103
  br i1 %105, label %137, label %126

106:                                              ; preds = %69, %106
  %107 = phi i64 [ %124, %106 ], [ 1, %69 ]
  %108 = load i32*, i32** %36, align 8
  %109 = getelementptr inbounds %struct.CFX_GifPalette, %struct.CFX_GifPalette* %35, i64 %107, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = getelementptr inbounds %struct.CFX_GifPalette, %struct.CFX_GifPalette* %35, i64 %107, i32 1
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = getelementptr inbounds %struct.CFX_GifPalette, %struct.CFX_GifPalette* %35, i64 %107, i32 2
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = shl nuw nsw i32 %111, 16
  %119 = shl nuw nsw i32 %114, 8
  %120 = or i32 %118, %119
  %121 = or i32 %120, %117
  %122 = or i32 %121, -16777216
  %123 = getelementptr inbounds i32, i32* %108, i64 %107
  store i32 %122, i32* %123, align 4
  %124 = add nuw nsw i64 %107, 1
  %125 = icmp eq i64 %124, %70
  br i1 %125, label %86, label %106

126:                                              ; preds = %102
  %127 = load i32*, i32** %36, align 8
  %128 = sext i32 %7 to i64
  %129 = getelementptr inbounds i32, i32* %127, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = and i32 %130, 16777215
  store i32 %131, i32* %129, align 4
  %132 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %96, i64 0, i32 0, i32 1
  %133 = load i16, i16* %132, align 8
  %134 = and i16 %133, 512
  %135 = icmp eq i16 %134, 0
  %136 = select i1 %135, i32 %94, i32 %7
  br label %137

137:                                              ; preds = %126, %102
  %138 = phi i32 [ %94, %102 ], [ %136, %126 ]
  %139 = icmp slt i32 %138, %34
  br i1 %139, label %140, label %277

140:                                              ; preds = %137
  %141 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 26
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %96, i64 0, i32 0
  %148 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %96, i64 0, i32 0, i32 1
  %149 = load i16, i16* %148, align 8
  %150 = lshr i16 %149, 3
  %151 = and i16 %150, 31
  %152 = zext i16 %151 to i32
  %153 = load i32*, i32** %36, align 8
  %154 = sext i32 %138 to i64
  %155 = getelementptr inbounds i32, i32* %153, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = icmp sgt i32 %146, 0
  br i1 %157, label %158, label %277

158:                                              ; preds = %140
  %159 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 25
  %160 = load i32, i32* %159, align 8
  %161 = bitcast %class.CFX_DIBitmap* %96 to i8* (%class.CFX_DIBBase*, i32)***
  %162 = mul nsw i32 %160, %152
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  %165 = icmp sgt i32 %144, 0
  %166 = trunc i32 %156 to i8
  %167 = lshr i32 %156, 8
  %168 = trunc i32 %167 to i8
  %169 = lshr i32 %156, 16
  %170 = trunc i32 %169 to i8
  %171 = lshr i32 %156, 24
  %172 = trunc i32 %171 to i8
  %173 = add nsw i32 %152, -3
  %174 = sext i32 %173 to i64
  %175 = and i32 %156, 255
  %176 = mul nuw nsw i32 %175, 11
  %177 = and i32 %167, 255
  %178 = mul nuw nsw i32 %177, 59
  %179 = add nuw nsw i32 %178, %176
  %180 = and i32 %169, 255
  %181 = mul nuw nsw i32 %180, 30
  %182 = add nuw nsw i32 %179, %181
  %183 = trunc i32 %182 to i16
  %184 = udiv i16 %183, 100
  %185 = trunc i16 %184 to i8
  %186 = sext i32 %144 to i64
  %187 = add i32 %144, -1
  %188 = and i32 %144, 3
  %189 = icmp ult i32 %187, 3
  %190 = sub i32 %144, %188
  %191 = icmp eq i32 %188, 0
  %192 = and i32 %144, 3
  %193 = icmp ult i32 %187, 3
  %194 = sub i32 %144, %192
  %195 = icmp eq i32 %192, 0
  br label %196

196:                                              ; preds = %274, %158
  %197 = phi i32 [ 0, %158 ], [ %275, %274 ]
  %198 = add nsw i32 %197, %142
  %199 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %161, align 8
  %200 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %199, i64 3
  %201 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %200, align 8
  %202 = tail call i8* %201(%class.CFX_DIBBase* %147, i32 %198) #12
  %203 = getelementptr inbounds i8, i8* %202, i64 %163
  %204 = load i32, i32* %164, align 8
  switch i32 %204, label %274 [
    i32 3, label %209
    i32 8, label %207
    i32 12, label %205
  ]

205:                                              ; preds = %196
  br i1 %165, label %206, label %274

206:                                              ; preds = %205
  br i1 %189, label %263, label %231

207:                                              ; preds = %196
  br i1 %165, label %208, label %274

208:                                              ; preds = %207
  br i1 %193, label %252, label %210

209:                                              ; preds = %196
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %203, i8 %185, i64 %186, i1 false)
  br label %274

210:                                              ; preds = %208, %210
  %211 = phi i8* [ %228, %210 ], [ %203, %208 ]
  %212 = phi i32 [ %229, %210 ], [ %194, %208 ]
  %213 = getelementptr inbounds i8, i8* %211, i64 1
  store i8 %166, i8* %211, align 1
  %214 = getelementptr inbounds i8, i8* %211, i64 2
  store i8 %168, i8* %213, align 1
  %215 = getelementptr inbounds i8, i8* %211, i64 3
  store i8 %170, i8* %214, align 1
  %216 = getelementptr inbounds i8, i8* %215, i64 %174
  %217 = getelementptr inbounds i8, i8* %216, i64 1
  store i8 %166, i8* %216, align 1
  %218 = getelementptr inbounds i8, i8* %216, i64 2
  store i8 %168, i8* %217, align 1
  %219 = getelementptr inbounds i8, i8* %216, i64 3
  store i8 %170, i8* %218, align 1
  %220 = getelementptr inbounds i8, i8* %219, i64 %174
  %221 = getelementptr inbounds i8, i8* %220, i64 1
  store i8 %166, i8* %220, align 1
  %222 = getelementptr inbounds i8, i8* %220, i64 2
  store i8 %168, i8* %221, align 1
  %223 = getelementptr inbounds i8, i8* %220, i64 3
  store i8 %170, i8* %222, align 1
  %224 = getelementptr inbounds i8, i8* %223, i64 %174
  %225 = getelementptr inbounds i8, i8* %224, i64 1
  store i8 %166, i8* %224, align 1
  %226 = getelementptr inbounds i8, i8* %224, i64 2
  store i8 %168, i8* %225, align 1
  %227 = getelementptr inbounds i8, i8* %224, i64 3
  store i8 %170, i8* %226, align 1
  %228 = getelementptr inbounds i8, i8* %227, i64 %174
  %229 = add i32 %212, -4
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %252, label %210

231:                                              ; preds = %206, %231
  %232 = phi i8* [ %249, %231 ], [ %203, %206 ]
  %233 = phi i32 [ %250, %231 ], [ %190, %206 ]
  store i8 %166, i8* %232, align 1
  %234 = getelementptr inbounds i8, i8* %232, i64 1
  store i8 %168, i8* %234, align 1
  %235 = getelementptr inbounds i8, i8* %232, i64 2
  store i8 %170, i8* %235, align 1
  %236 = getelementptr inbounds i8, i8* %232, i64 3
  store i8 %172, i8* %236, align 1
  %237 = getelementptr inbounds i8, i8* %232, i64 4
  store i8 %166, i8* %237, align 1
  %238 = getelementptr inbounds i8, i8* %232, i64 5
  store i8 %168, i8* %238, align 1
  %239 = getelementptr inbounds i8, i8* %232, i64 6
  store i8 %170, i8* %239, align 1
  %240 = getelementptr inbounds i8, i8* %232, i64 7
  store i8 %172, i8* %240, align 1
  %241 = getelementptr inbounds i8, i8* %232, i64 8
  store i8 %166, i8* %241, align 1
  %242 = getelementptr inbounds i8, i8* %232, i64 9
  store i8 %168, i8* %242, align 1
  %243 = getelementptr inbounds i8, i8* %232, i64 10
  store i8 %170, i8* %243, align 1
  %244 = getelementptr inbounds i8, i8* %232, i64 11
  store i8 %172, i8* %244, align 1
  %245 = getelementptr inbounds i8, i8* %232, i64 12
  store i8 %166, i8* %245, align 1
  %246 = getelementptr inbounds i8, i8* %232, i64 13
  store i8 %168, i8* %246, align 1
  %247 = getelementptr inbounds i8, i8* %232, i64 14
  store i8 %170, i8* %247, align 1
  %248 = getelementptr inbounds i8, i8* %232, i64 15
  store i8 %172, i8* %248, align 1
  %249 = getelementptr inbounds i8, i8* %232, i64 16
  %250 = add i32 %233, -4
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %263, label %231

252:                                              ; preds = %210, %208
  %253 = phi i8* [ %203, %208 ], [ %228, %210 ]
  br i1 %195, label %274, label %254

254:                                              ; preds = %252, %254
  %255 = phi i8* [ %260, %254 ], [ %253, %252 ]
  %256 = phi i32 [ %261, %254 ], [ %192, %252 ]
  %257 = getelementptr inbounds i8, i8* %255, i64 1
  store i8 %166, i8* %255, align 1
  %258 = getelementptr inbounds i8, i8* %255, i64 2
  store i8 %168, i8* %257, align 1
  %259 = getelementptr inbounds i8, i8* %255, i64 3
  store i8 %170, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %259, i64 %174
  %261 = add i32 %256, -1
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %274, label %254, !llvm.loop !5

263:                                              ; preds = %231, %206
  %264 = phi i8* [ %203, %206 ], [ %249, %231 ]
  br i1 %191, label %274, label %265

265:                                              ; preds = %263, %265
  %266 = phi i8* [ %271, %265 ], [ %264, %263 ]
  %267 = phi i32 [ %272, %265 ], [ %188, %263 ]
  store i8 %166, i8* %266, align 1
  %268 = getelementptr inbounds i8, i8* %266, i64 1
  store i8 %168, i8* %268, align 1
  %269 = getelementptr inbounds i8, i8* %266, i64 2
  store i8 %170, i8* %269, align 1
  %270 = getelementptr inbounds i8, i8* %266, i64 3
  store i8 %172, i8* %270, align 1
  %271 = getelementptr inbounds i8, i8* %266, i64 4
  %272 = add i32 %267, -1
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %265, !llvm.loop !7

274:                                              ; preds = %263, %265, %252, %254, %205, %207, %196, %209
  %275 = add nuw nsw i32 %197, 1
  %276 = icmp eq i32 %275, %146
  br i1 %276, label %277, label %196

277:                                              ; preds = %274, %140, %137
  %278 = phi i1 [ false, %137 ], [ true, %140 ], [ true, %274 ]
  br i1 %97, label %290, label %279

279:                                              ; preds = %277
  %280 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %96, i64 0, i32 0, i32 0, i32 1
  %281 = load i64, i64* %280, align 8
  %282 = add nsw i64 %281, -1
  store i64 %282, i64* %280, align 8
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %284, label %290

284:                                              ; preds = %279
  %285 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %96, i64 0, i32 0, i32 0
  %286 = bitcast %class.CFX_DIBitmap* %96 to void (%"class.fxcrt::Retainable"*)***
  %287 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %286, align 8
  %288 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %287, i64 1
  %289 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %288, align 8
  tail call void %289(%"class.fxcrt::Retainable"* nonnull %285) #12
  br label %290

290:                                              ; preds = %63, %284, %279, %277, %10, %26
  %291 = phi i1 [ false, %26 ], [ false, %63 ], [ false, %10 ], [ %278, %277 ], [ %278, %279 ], [ %278, %284 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #12
  ret i1 %291
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec18ProgressiveDecoder15GifReadMoreDataEP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.fxcodec::GifProgressiveDecoder"* @_ZN7fxcodec21GifProgressiveDecoder11GetInstanceEv() #12
  %4 = getelementptr inbounds %"class.fxcodec::GifProgressiveDecoder", %"class.fxcodec::GifProgressiveDecoder"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %6 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %5, align 8
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 43
  %8 = load i8, i8* %7, align 8, !range !4
  %9 = icmp ne i8 %8, 0
  %10 = tail call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder12ReadMoreDataEPNS_23ProgressiveDecoderIfaceEPNS1_7ContextEbP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::ProgressiveDecoderIface"* %4, %"class.fxcodec::ProgressiveDecoderIface::Context"* %6, i1 zeroext %9, i32* %1)
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i8 0, i8* %7, align 8
  br label %12

12:                                               ; preds = %2, %11
  %13 = phi i1 [ true, %11 ], [ false, %2 ]
  ret i1 %13
}

declare i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64, i64) local_unnamed_addr #3

declare i8* @_ZN6pdfium8internal12ReallocOrDieEPvmm(i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn8_N7fxcodec18ProgressiveDecoder25GifInputRecordPositionBufEjRK7FX_RECTiP14CFX_GifPaletteibiib(%"class.fxcodec::ProgressiveDecoder"* nocapture, i32, %struct.FX_RECT* nocapture readonly dereferenceable(16), i32, %struct.CFX_GifPalette* readonly, i32, i1 zeroext, i32, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %11 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 -1, i32 43
  %12 = bitcast i8* %11 to %"class.fxcodec::ProgressiveDecoder"*
  %13 = tail call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder25GifInputRecordPositionBufEjRK7FX_RECTiP14CFX_GifPaletteibiib(%"class.fxcodec::ProgressiveDecoder"* %12, i32 %1, %struct.FX_RECT* dereferenceable(16) %2, i32 %3, %struct.CFX_GifPalette* %4, i32 undef, i1 zeroext undef, i32 %7, i32 undef, i1 zeroext %9)
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder15GifReadScanlineEiPh(%"class.fxcodec::ProgressiveDecoder"* readonly, i32, i8* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.4", align 8
  %5 = bitcast %"class.fxcrt::RetainPtr.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.4"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %7, align 8
  %9 = ptrtoint %class.CFX_DIBitmap* %8 to i64
  %10 = bitcast %"class.fxcrt::RetainPtr.4"* %4 to i64*
  store i64 %9, i64* %10, align 8
  %11 = icmp eq %class.CFX_DIBitmap* %8, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %8, i64 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, 1
  store i64 %15, i64* %13, align 8
  br label %16

16:                                               ; preds = %3, %12
  %17 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 42, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 42, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = sub i32 %18, %20
  %22 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %8, i64 0, i32 0, i32 1
  %23 = load i16, i16* %22, align 8
  %24 = and i16 %23, 512
  %25 = icmp eq i16 %24, 0
  %26 = icmp sgt i32 %21, 0
  %27 = and i1 %25, %26
  br i1 %27, label %28, label %63

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 41
  %30 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 37
  %31 = and i32 %21, 1
  %32 = add i32 %20, 1
  %33 = icmp eq i32 %18, %32
  br i1 %33, label %52, label %34

34:                                               ; preds = %28
  %35 = sub i32 %21, %31
  br label %36

36:                                               ; preds = %191, %34
  %37 = phi i8* [ %2, %34 ], [ %192, %191 ]
  %38 = phi i32 [ %35, %34 ], [ %193, %191 ]
  %39 = load i8, i8* %37, align 1
  %40 = zext i8 %39 to i32
  %41 = load i32, i32* %29, align 4
  %42 = icmp eq i32 %41, %40
  br i1 %42, label %43, label %46

43:                                               ; preds = %36
  %44 = load i32, i32* %30, align 8
  %45 = trunc i32 %44 to i8
  store i8 %45, i8* %37, align 1
  br label %46

46:                                               ; preds = %43, %36
  %47 = getelementptr inbounds i8, i8* %37, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = load i32, i32* %29, align 4
  %51 = icmp eq i32 %50, %49
  br i1 %51, label %188, label %191

52:                                               ; preds = %191, %28
  %53 = phi i8* [ %2, %28 ], [ %192, %191 ]
  %54 = icmp eq i32 %31, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %52
  %56 = load i8, i8* %53, align 1
  %57 = zext i8 %56 to i32
  %58 = load i32, i32* %29, align 4
  %59 = icmp eq i32 %58, %57
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = load i32, i32* %30, align 8
  %62 = trunc i32 %61 to i8
  store i8 %62, i8* %53, align 1
  br label %63

63:                                               ; preds = %52, %55, %60, %16
  %64 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 37
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 41
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %76, label %69

69:                                               ; preds = %63
  %70 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %7, align 8
  %71 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %70, i64 0, i32 0, i32 1
  %72 = load i16, i16* %71, align 8
  %73 = and i16 %72, 512
  %74 = icmp eq i16 %73, 0
  %75 = select i1 %74, i32 %65, i32 %67
  br label %76

76:                                               ; preds = %69, %63
  %77 = phi i32 [ %65, %63 ], [ %75, %69 ]
  %78 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = trunc i32 %77 to i8
  %81 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 20
  %82 = load i32, i32* %81, align 8
  %83 = sext i32 %82 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %79, i8 %80, i64 %83, i1 false)
  %84 = srem i32 %1, 2
  %85 = icmp eq i32 %84, 1
  %86 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 42, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = add nsw i32 %87, %1
  %89 = load i32, i32* %19, align 8
  %90 = load i8*, i8** %78, align 8
  %91 = sext i32 %89 to i64
  %92 = getelementptr inbounds i8, i8* %90, i64 %91
  %93 = sext i32 %21 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %92, i8* align 1 %2, i64 %93, i1 false)
  %94 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 26
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %101 = load i32, i32* %100, align 4
  %102 = icmp sge i32 %88, %95
  %103 = icmp slt i32 %88, %97
  %104 = and i1 %102, %103
  br i1 %104, label %105, label %173

105:                                              ; preds = %76
  %106 = sub nsw i32 %97, %95
  %107 = sitofp i32 %101 to double
  %108 = sitofp i32 %106 to double
  %109 = fdiv double %107, %108
  %110 = sub nsw i32 %88, %95
  %111 = sitofp i32 %110 to double
  %112 = fmul double %109, %111
  %113 = fptosi double %112 to i32
  %114 = add nsw i32 %99, %113
  %115 = add nsw i32 %101, %99
  %116 = icmp slt i32 %114, %115
  br i1 %116, label %117, label %173

117:                                              ; preds = %105
  %118 = load i8*, i8** %78, align 8
  %119 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 32
  %120 = load i32, i32* %119, align 4
  call void @_ZN7fxcodec18ProgressiveDecoder16ReSampleScanlineERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiPhNS0_14FXCodec_FormatE(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* nonnull dereferenceable(8) %4, i32 %114, i8* %118, i32 %120)
  %121 = fcmp ogt double %109, 1.000000e+00
  br i1 %121, label %122, label %127

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 33
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %127

126:                                              ; preds = %122
  call void @_ZN7fxcodec18ProgressiveDecoder12ResampleVertERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEdi(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* nonnull dereferenceable(8) %4, double %109, i32 %114)
  br label %173

127:                                              ; preds = %122, %117
  %128 = fcmp ugt double %109, 1.000000e+00
  br i1 %128, label %129, label %173

129:                                              ; preds = %127
  %130 = load i32, i32* %100, align 4
  %131 = add i32 %130, %99
  %132 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %6, align 8
  %133 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %132, i64 0, i32 0
  %134 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %132, i64 0, i32 0, i32 1
  %135 = load i16, i16* %134, align 8
  %136 = lshr i16 %135, 3
  %137 = and i16 %136, 31
  %138 = zext i16 %137 to i32
  %139 = fptosi double %109 to i32
  %140 = add nsw i32 %114, %139
  %141 = add nsw i32 %131, -1
  %142 = icmp slt i32 %140, %141
  br i1 %142, label %171, label %143

143:                                              ; preds = %129
  %144 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 25
  %145 = load i32, i32* %144, align 8
  %146 = mul nsw i32 %145, %138
  %147 = bitcast %class.CFX_DIBitmap* %132 to i8* (%class.CFX_DIBitmap*, i32)***
  %148 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %147, align 8
  %149 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %148, i64 3
  %150 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %149, align 8
  %151 = tail call i8* %150(%class.CFX_DIBitmap* %132, i32 %114) #12
  %152 = zext i32 %146 to i64
  %153 = getelementptr inbounds i8, i8* %151, i64 %152
  %154 = add nsw i32 %114, 1
  %155 = icmp slt i32 %154, %131
  br i1 %155, label %156, label %171

156:                                              ; preds = %143
  %157 = bitcast %class.CFX_DIBitmap* %132 to i8* (%class.CFX_DIBBase*, i32)***
  %158 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  br label %159

159:                                              ; preds = %159, %156
  %160 = phi i32 [ %154, %156 ], [ %169, %159 ]
  %161 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %157, align 8
  %162 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %161, i64 3
  %163 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %162, align 8
  %164 = tail call i8* %163(%class.CFX_DIBBase* %133, i32 %160) #12
  %165 = getelementptr inbounds i8, i8* %164, i64 %152
  %166 = load i32, i32* %158, align 8
  %167 = mul nsw i32 %166, %138
  %168 = zext i32 %167 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %165, i8* align 1 %153, i64 %168, i1 false)
  %169 = add i32 %160, 1
  %170 = icmp eq i32 %169, %131
  br i1 %170, label %171, label %159

171:                                              ; preds = %159, %143, %129
  br i1 %85, label %172, label %173

172:                                              ; preds = %171
  call void @_ZN7fxcodec18ProgressiveDecoder25GifDoubleLineResampleVertERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEdi(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* nonnull dereferenceable(8) %4, double %109, i32 %114)
  br label %173

173:                                              ; preds = %126, %105, %127, %172, %171, %76
  %174 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %6, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %6, align 8
  %175 = icmp eq %class.CFX_DIBitmap* %174, null
  br i1 %175, label %187, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %174, i64 0, i32 0, i32 0, i32 1
  %178 = load i64, i64* %177, align 8
  %179 = add nsw i64 %178, -1
  store i64 %179, i64* %177, align 8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %187

181:                                              ; preds = %176
  %182 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %174, i64 0, i32 0, i32 0
  %183 = bitcast %class.CFX_DIBitmap* %174 to void (%"class.fxcrt::Retainable"*)***
  %184 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %184, i64 1
  %186 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %185, align 8
  tail call void %186(%"class.fxcrt::Retainable"* nonnull %182) #12
  br label %187

187:                                              ; preds = %173, %176, %181
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void

188:                                              ; preds = %46
  %189 = load i32, i32* %30, align 8
  %190 = trunc i32 %189 to i8
  store i8 %190, i8* %47, align 1
  br label %191

191:                                              ; preds = %188, %46
  %192 = getelementptr inbounds i8, i8* %37, i64 2
  %193 = add i32 %38, -2
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %52, label %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder16ReSampleScanlineERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiPhNS0_14FXCodec_FormatE(%"class.fxcodec::ProgressiveDecoder"* nocapture readonly, %"class.fxcrt::RetainPtr.4"* nocapture readonly dereferenceable(8), i32, i8* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 25
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %10, align 8
  %12 = bitcast %class.CFX_DIBitmap* %11 to i8* (%class.CFX_DIBitmap*)***
  %13 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %12, align 8
  %14 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %13, i64 2
  %15 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %14, align 8
  %16 = tail call i8* %15(%class.CFX_DIBitmap* %11) #12
  %17 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %10, align 8
  %18 = lshr i32 %4, 3
  %19 = and i32 %18, 31
  %20 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %17, i64 0, i32 0, i32 1
  %21 = load i16, i16* %20, align 8
  %22 = lshr i16 %21, 3
  %23 = and i16 %22, 31
  %24 = zext i16 %23 to i32
  %25 = mul nsw i32 %7, %19
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %3, i64 %26
  %28 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %831

31:                                               ; preds = %5
  %32 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %17, i64 0, i32 0, i32 4
  %33 = load i32, i32* %32, align 4
  %34 = mul i32 %33, %2
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %16, i64 %35
  %37 = mul nsw i32 %9, %24
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %36, i64 %38
  %40 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 17, i32 2, i32 0, i32 0
  %41 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 17, i32 0
  %42 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 17, i32 1
  %43 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  %44 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %45 = add nsw i32 %24, -3
  %46 = sext i32 %45 to i64
  %47 = zext i16 %23 to i64
  %48 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %49 = zext i32 %19 to i64
  br label %50

50:                                               ; preds = %31, %826
  %51 = phi i8* [ %39, %31 ], [ %827, %826 ]
  %52 = phi i32 [ 0, %31 ], [ %828, %826 ]
  %53 = load i8*, i8** %40, align 8
  %54 = load i32, i32* %41, align 8
  %55 = sub nsw i32 %52, %54
  %56 = load i32, i32* %42, align 4
  %57 = mul nsw i32 %55, %56
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %53, i64 %58
  %60 = bitcast i8* %59 to %struct.PixelWeight*
  %61 = load i32, i32* %43, align 8
  switch i32 %61, label %831 [
    i32 11, label %765
    i32 10, label %699
    i32 9, label %649
    i32 2, label %62
    i32 3, label %192
    i32 4, label %244
    i32 5, label %295
    i32 12, label %543
    i32 7, label %362
    i32 8, label %492
  ]

62:                                               ; preds = %50
  %63 = bitcast i8* %59 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds i8, i8* %59, i64 4
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %64, %67
  br i1 %68, label %174, label %69

69:                                               ; preds = %62
  %70 = sext i32 %64 to i64
  %71 = sext i32 %67 to i64
  %72 = icmp sgt i64 %70, %71
  %73 = select i1 %72, i64 %70, i64 %71
  %74 = add nsw i64 %73, 1
  %75 = sub nsw i64 %74, %70
  %76 = icmp ult i64 %75, 8
  br i1 %76, label %77, label %80

77:                                               ; preds = %164, %69
  %78 = phi i64 [ %70, %69 ], [ %82, %164 ]
  %79 = phi i32 [ 0, %69 ], [ %172, %164 ]
  br label %179

80:                                               ; preds = %69
  %81 = and i64 %75, -8
  %82 = add nsw i64 %81, %70
  %83 = add nsw i64 %81, -8
  %84 = lshr exact i64 %83, 3
  %85 = add nuw nsw i64 %84, 1
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %83, 0
  br i1 %87, label %137, label %88

88:                                               ; preds = %80
  %89 = sub nuw nsw i64 %85, %86
  br label %90

90:                                               ; preds = %90, %88
  %91 = phi i64 [ 0, %88 ], [ %134, %90 ]
  %92 = phi <4 x i32> [ zeroinitializer, %88 ], [ %132, %90 ]
  %93 = phi <4 x i32> [ zeroinitializer, %88 ], [ %133, %90 ]
  %94 = phi i64 [ %89, %88 ], [ %135, %90 ]
  %95 = add i64 %91, %70
  %96 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %91
  %97 = bitcast i32* %96 to <4 x i32>*
  %98 = load <4 x i32>, <4 x i32>* %97, align 4
  %99 = getelementptr inbounds i32, i32* %96, i64 4
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4
  %102 = getelementptr inbounds i8, i8* %27, i64 %95
  %103 = bitcast i8* %102 to <4 x i8>*
  %104 = load <4 x i8>, <4 x i8>* %103, align 1
  %105 = getelementptr inbounds i8, i8* %102, i64 4
  %106 = bitcast i8* %105 to <4 x i8>*
  %107 = load <4 x i8>, <4 x i8>* %106, align 1
  %108 = zext <4 x i8> %104 to <4 x i32>
  %109 = zext <4 x i8> %107 to <4 x i32>
  %110 = mul nsw <4 x i32> %98, %108
  %111 = mul nsw <4 x i32> %101, %109
  %112 = add <4 x i32> %110, %92
  %113 = add <4 x i32> %111, %93
  %114 = or i64 %91, 8
  %115 = add i64 %114, %70
  %116 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %114
  %117 = bitcast i32* %116 to <4 x i32>*
  %118 = load <4 x i32>, <4 x i32>* %117, align 4
  %119 = getelementptr inbounds i32, i32* %116, i64 4
  %120 = bitcast i32* %119 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4
  %122 = getelementptr inbounds i8, i8* %27, i64 %115
  %123 = bitcast i8* %122 to <4 x i8>*
  %124 = load <4 x i8>, <4 x i8>* %123, align 1
  %125 = getelementptr inbounds i8, i8* %122, i64 4
  %126 = bitcast i8* %125 to <4 x i8>*
  %127 = load <4 x i8>, <4 x i8>* %126, align 1
  %128 = zext <4 x i8> %124 to <4 x i32>
  %129 = zext <4 x i8> %127 to <4 x i32>
  %130 = mul nsw <4 x i32> %118, %128
  %131 = mul nsw <4 x i32> %121, %129
  %132 = add <4 x i32> %130, %112
  %133 = add <4 x i32> %131, %113
  %134 = add i64 %91, 16
  %135 = add i64 %94, -2
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %90, !llvm.loop !8

137:                                              ; preds = %90, %80
  %138 = phi <4 x i32> [ undef, %80 ], [ %132, %90 ]
  %139 = phi <4 x i32> [ undef, %80 ], [ %133, %90 ]
  %140 = phi i64 [ 0, %80 ], [ %134, %90 ]
  %141 = phi <4 x i32> [ zeroinitializer, %80 ], [ %132, %90 ]
  %142 = phi <4 x i32> [ zeroinitializer, %80 ], [ %133, %90 ]
  %143 = icmp eq i64 %86, 0
  br i1 %143, label %164, label %144

144:                                              ; preds = %137
  %145 = add i64 %140, %70
  %146 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %140
  %147 = getelementptr inbounds i8, i8* %27, i64 %145
  %148 = getelementptr inbounds i32, i32* %146, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = getelementptr inbounds i8, i8* %147, i64 4
  %152 = bitcast i8* %151 to <4 x i8>*
  %153 = load <4 x i8>, <4 x i8>* %152, align 1
  %154 = zext <4 x i8> %153 to <4 x i32>
  %155 = mul nsw <4 x i32> %150, %154
  %156 = add <4 x i32> %155, %142
  %157 = bitcast i32* %146 to <4 x i32>*
  %158 = load <4 x i32>, <4 x i32>* %157, align 4
  %159 = bitcast i8* %147 to <4 x i8>*
  %160 = load <4 x i8>, <4 x i8>* %159, align 1
  %161 = zext <4 x i8> %160 to <4 x i32>
  %162 = mul nsw <4 x i32> %158, %161
  %163 = add <4 x i32> %162, %141
  br label %164

164:                                              ; preds = %137, %144
  %165 = phi <4 x i32> [ %138, %137 ], [ %163, %144 ]
  %166 = phi <4 x i32> [ %139, %137 ], [ %156, %144 ]
  %167 = add <4 x i32> %166, %165
  %168 = shufflevector <4 x i32> %167, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %169 = add <4 x i32> %167, %168
  %170 = shufflevector <4 x i32> %169, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %171 = add <4 x i32> %169, %170
  %172 = extractelement <4 x i32> %171, i32 0
  %173 = icmp eq i64 %75, %81
  br i1 %173, label %174, label %77

174:                                              ; preds = %179, %164, %62
  %175 = phi i32 [ 0, %62 ], [ %172, %164 ], [ %189, %179 ]
  %176 = lshr i32 %175, 16
  %177 = trunc i32 %176 to i8
  %178 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 %177, i8* %51, align 1
  br label %826

179:                                              ; preds = %77, %179
  %180 = phi i64 [ %190, %179 ], [ %78, %77 ]
  %181 = phi i32 [ %189, %179 ], [ %79, %77 ]
  %182 = sub nsw i64 %180, %70
  %183 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %182
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds i8, i8* %27, i64 %180
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = mul nsw i32 %184, %187
  %189 = add i32 %188, %181
  %190 = add nsw i64 %180, 1
  %191 = icmp slt i64 %180, %71
  br i1 %191, label %179, label %174, !llvm.loop !10

192:                                              ; preds = %50
  %193 = bitcast i8* %59 to i32*
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds i8, i8* %59, i64 4
  %196 = bitcast i8* %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = icmp sgt i32 %194, %197
  br i1 %198, label %203, label %199

199:                                              ; preds = %192
  %200 = load i32*, i32** %44, align 8
  %201 = sext i32 %194 to i64
  %202 = sext i32 %197 to i64
  br label %218

203:                                              ; preds = %218, %192
  %204 = phi i32 [ 0, %192 ], [ %241, %218 ]
  %205 = phi i32 [ 0, %192 ], [ %238, %218 ]
  %206 = phi i32 [ 0, %192 ], [ %234, %218 ]
  %207 = ashr i32 %204, 16
  %208 = mul nsw i32 %207, 11
  %209 = ashr i32 %205, 16
  %210 = mul nsw i32 %209, 59
  %211 = add nsw i32 %210, %208
  %212 = ashr i32 %206, 16
  %213 = mul nsw i32 %212, 30
  %214 = add nsw i32 %211, %213
  %215 = sdiv i32 %214, 100
  %216 = trunc i32 %215 to i8
  %217 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 %216, i8* %51, align 1
  br label %826

218:                                              ; preds = %218, %199
  %219 = phi i64 [ %242, %218 ], [ %201, %199 ]
  %220 = phi i32 [ %234, %218 ], [ 0, %199 ]
  %221 = phi i32 [ %238, %218 ], [ 0, %199 ]
  %222 = phi i32 [ %241, %218 ], [ 0, %199 ]
  %223 = sub nsw i64 %219, %201
  %224 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds i8, i8* %27, i64 %219
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i64
  %229 = getelementptr inbounds i32, i32* %200, i64 %228
  %230 = load i32, i32* %229, align 4
  %231 = lshr i32 %230, 16
  %232 = and i32 %231, 255
  %233 = mul nsw i32 %232, %225
  %234 = add nsw i32 %233, %220
  %235 = lshr i32 %230, 8
  %236 = and i32 %235, 255
  %237 = mul nsw i32 %236, %225
  %238 = add nsw i32 %237, %221
  %239 = and i32 %230, 255
  %240 = mul nsw i32 %239, %225
  %241 = add nsw i32 %240, %222
  %242 = add nsw i64 %219, 1
  %243 = icmp slt i64 %219, %202
  br i1 %243, label %218, label %203

244:                                              ; preds = %50
  %245 = bitcast i8* %59 to i32*
  %246 = load i32, i32* %245, align 4
  %247 = getelementptr inbounds i8, i8* %59, i64 4
  %248 = bitcast i8* %247 to i32*
  %249 = load i32, i32* %248, align 4
  %250 = icmp sgt i32 %246, %249
  br i1 %250, label %254, label %251

251:                                              ; preds = %244
  %252 = sext i32 %246 to i64
  %253 = sext i32 %249 to i64
  br label %269

254:                                              ; preds = %269, %244
  %255 = phi i32 [ 0, %244 ], [ %292, %269 ]
  %256 = phi i32 [ 0, %244 ], [ %288, %269 ]
  %257 = phi i32 [ 0, %244 ], [ %283, %269 ]
  %258 = lshr i32 %257, 16
  %259 = mul nuw nsw i32 %258, 11
  %260 = lshr i32 %256, 16
  %261 = mul nuw nsw i32 %260, 59
  %262 = lshr i32 %255, 16
  %263 = mul nuw nsw i32 %262, 30
  %264 = add nuw nsw i32 %261, %263
  %265 = add nuw nsw i32 %264, %259
  %266 = udiv i32 %265, 100
  %267 = trunc i32 %266 to i8
  %268 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 %267, i8* %51, align 1
  br label %826

269:                                              ; preds = %269, %251
  %270 = phi i64 [ %293, %269 ], [ %252, %251 ]
  %271 = phi i32 [ %283, %269 ], [ 0, %251 ]
  %272 = phi i32 [ %288, %269 ], [ 0, %251 ]
  %273 = phi i32 [ %292, %269 ], [ 0, %251 ]
  %274 = sub nsw i64 %270, %252
  %275 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %274
  %276 = load i32, i32* %275, align 4
  %277 = mul nsw i64 %270, %49
  %278 = getelementptr inbounds i8, i8* %27, i64 %277
  %279 = getelementptr inbounds i8, i8* %278, i64 1
  %280 = load i8, i8* %278, align 1
  %281 = zext i8 %280 to i32
  %282 = mul nsw i32 %276, %281
  %283 = add i32 %282, %271
  %284 = getelementptr inbounds i8, i8* %279, i64 1
  %285 = load i8, i8* %279, align 1
  %286 = zext i8 %285 to i32
  %287 = mul nsw i32 %276, %286
  %288 = add i32 %287, %272
  %289 = load i8, i8* %284, align 1
  %290 = zext i8 %289 to i32
  %291 = mul nsw i32 %276, %290
  %292 = add i32 %291, %273
  %293 = add nsw i64 %270, 1
  %294 = icmp slt i64 %270, %253
  br i1 %294, label %269, label %254

295:                                              ; preds = %50
  %296 = bitcast i8* %59 to i32*
  %297 = load i32, i32* %296, align 4
  %298 = getelementptr inbounds i8, i8* %59, i64 4
  %299 = bitcast i8* %298 to i32*
  %300 = load i32, i32* %299, align 4
  %301 = icmp sgt i32 %297, %300
  br i1 %301, label %304, label %302

302:                                              ; preds = %295
  %303 = sext i32 %297 to i64
  br label %319

304:                                              ; preds = %319, %295
  %305 = phi i32 [ 0, %295 ], [ %347, %319 ]
  %306 = phi i32 [ 0, %295 ], [ %351, %319 ]
  %307 = phi i32 [ 0, %295 ], [ %355, %319 ]
  %308 = lshr i32 %305, 16
  %309 = mul nuw nsw i32 %308, 11
  %310 = lshr i32 %306, 16
  %311 = mul nuw nsw i32 %310, 59
  %312 = add nuw nsw i32 %311, %309
  %313 = lshr i32 %307, 16
  %314 = mul nuw nsw i32 %313, 30
  %315 = add nuw nsw i32 %312, %314
  %316 = udiv i32 %315, 100
  %317 = trunc i32 %316 to i8
  %318 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 %317, i8* %51, align 1
  br label %826

319:                                              ; preds = %359, %302
  %320 = phi i32 [ %297, %302 ], [ %361, %359 ]
  %321 = phi i64 [ %303, %302 ], [ %360, %359 ]
  %322 = phi i32 [ 0, %302 ], [ %355, %359 ]
  %323 = phi i32 [ 0, %302 ], [ %351, %359 ]
  %324 = phi i32 [ 0, %302 ], [ %347, %359 ]
  %325 = sext i32 %320 to i64
  %326 = sub nsw i64 %321, %325
  %327 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %326
  %328 = load i32, i32* %327, align 4
  %329 = mul nsw i64 %321, %49
  %330 = getelementptr inbounds i8, i8* %27, i64 %329
  %331 = load i8, i8* %330, align 1
  %332 = xor i8 %331, -1
  %333 = getelementptr inbounds i8, i8* %330, i64 1
  %334 = load i8, i8* %333, align 1
  %335 = xor i8 %334, -1
  %336 = getelementptr inbounds i8, i8* %330, i64 2
  %337 = load i8, i8* %336, align 1
  %338 = xor i8 %337, -1
  %339 = getelementptr inbounds i8, i8* %330, i64 3
  %340 = load i8, i8* %339, align 1
  %341 = xor i8 %340, -1
  %342 = tail call i24 @_ZN4fxge18AdobeCMYK_to_sRGB1Ehhhh(i8 zeroext %332, i8 zeroext %335, i8 zeroext %338, i8 zeroext %341) #12
  %343 = lshr i24 %342, 8
  %344 = lshr i24 %342, 16
  %345 = zext i24 %344 to i32
  %346 = mul nsw i32 %328, %345
  %347 = add i32 %346, %324
  %348 = and i24 %343, 255
  %349 = zext i24 %348 to i32
  %350 = mul nsw i32 %328, %349
  %351 = add i32 %350, %323
  %352 = and i24 %342, 255
  %353 = zext i24 %352 to i32
  %354 = mul nsw i32 %328, %353
  %355 = add i32 %354, %322
  %356 = load i32, i32* %299, align 4
  %357 = sext i32 %356 to i64
  %358 = icmp slt i64 %321, %357
  br i1 %358, label %359, label %304

359:                                              ; preds = %319
  %360 = add nsw i64 %321, 1
  %361 = load i32, i32* %296, align 4
  br label %319

362:                                              ; preds = %50
  %363 = bitcast i8* %59 to i32*
  %364 = load i32, i32* %363, align 4
  %365 = getelementptr inbounds i8, i8* %59, i64 4
  %366 = bitcast i8* %365 to i32*
  %367 = load i32, i32* %366, align 4
  %368 = icmp sgt i32 %364, %367
  br i1 %368, label %474, label %369

369:                                              ; preds = %362
  %370 = sext i32 %364 to i64
  %371 = sext i32 %367 to i64
  %372 = icmp sgt i64 %370, %371
  %373 = select i1 %372, i64 %370, i64 %371
  %374 = add nsw i64 %373, 1
  %375 = sub nsw i64 %374, %370
  %376 = icmp ult i64 %375, 8
  br i1 %376, label %377, label %380

377:                                              ; preds = %464, %369
  %378 = phi i64 [ %370, %369 ], [ %382, %464 ]
  %379 = phi i32 [ 0, %369 ], [ %472, %464 ]
  br label %479

380:                                              ; preds = %369
  %381 = and i64 %375, -8
  %382 = add nsw i64 %381, %370
  %383 = add nsw i64 %381, -8
  %384 = lshr exact i64 %383, 3
  %385 = add nuw nsw i64 %384, 1
  %386 = and i64 %385, 1
  %387 = icmp eq i64 %383, 0
  br i1 %387, label %437, label %388

388:                                              ; preds = %380
  %389 = sub nuw nsw i64 %385, %386
  br label %390

390:                                              ; preds = %390, %388
  %391 = phi i64 [ 0, %388 ], [ %434, %390 ]
  %392 = phi <4 x i32> [ zeroinitializer, %388 ], [ %432, %390 ]
  %393 = phi <4 x i32> [ zeroinitializer, %388 ], [ %433, %390 ]
  %394 = phi i64 [ %389, %388 ], [ %435, %390 ]
  %395 = add i64 %391, %370
  %396 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %391
  %397 = bitcast i32* %396 to <4 x i32>*
  %398 = load <4 x i32>, <4 x i32>* %397, align 4
  %399 = getelementptr inbounds i32, i32* %396, i64 4
  %400 = bitcast i32* %399 to <4 x i32>*
  %401 = load <4 x i32>, <4 x i32>* %400, align 4
  %402 = getelementptr inbounds i8, i8* %27, i64 %395
  %403 = bitcast i8* %402 to <4 x i8>*
  %404 = load <4 x i8>, <4 x i8>* %403, align 1
  %405 = getelementptr inbounds i8, i8* %402, i64 4
  %406 = bitcast i8* %405 to <4 x i8>*
  %407 = load <4 x i8>, <4 x i8>* %406, align 1
  %408 = zext <4 x i8> %404 to <4 x i32>
  %409 = zext <4 x i8> %407 to <4 x i32>
  %410 = mul nsw <4 x i32> %398, %408
  %411 = mul nsw <4 x i32> %401, %409
  %412 = add <4 x i32> %410, %392
  %413 = add <4 x i32> %411, %393
  %414 = or i64 %391, 8
  %415 = add i64 %414, %370
  %416 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %414
  %417 = bitcast i32* %416 to <4 x i32>*
  %418 = load <4 x i32>, <4 x i32>* %417, align 4
  %419 = getelementptr inbounds i32, i32* %416, i64 4
  %420 = bitcast i32* %419 to <4 x i32>*
  %421 = load <4 x i32>, <4 x i32>* %420, align 4
  %422 = getelementptr inbounds i8, i8* %27, i64 %415
  %423 = bitcast i8* %422 to <4 x i8>*
  %424 = load <4 x i8>, <4 x i8>* %423, align 1
  %425 = getelementptr inbounds i8, i8* %422, i64 4
  %426 = bitcast i8* %425 to <4 x i8>*
  %427 = load <4 x i8>, <4 x i8>* %426, align 1
  %428 = zext <4 x i8> %424 to <4 x i32>
  %429 = zext <4 x i8> %427 to <4 x i32>
  %430 = mul nsw <4 x i32> %418, %428
  %431 = mul nsw <4 x i32> %421, %429
  %432 = add <4 x i32> %430, %412
  %433 = add <4 x i32> %431, %413
  %434 = add i64 %391, 16
  %435 = add i64 %394, -2
  %436 = icmp eq i64 %435, 0
  br i1 %436, label %437, label %390, !llvm.loop !12

437:                                              ; preds = %390, %380
  %438 = phi <4 x i32> [ undef, %380 ], [ %432, %390 ]
  %439 = phi <4 x i32> [ undef, %380 ], [ %433, %390 ]
  %440 = phi i64 [ 0, %380 ], [ %434, %390 ]
  %441 = phi <4 x i32> [ zeroinitializer, %380 ], [ %432, %390 ]
  %442 = phi <4 x i32> [ zeroinitializer, %380 ], [ %433, %390 ]
  %443 = icmp eq i64 %386, 0
  br i1 %443, label %464, label %444

444:                                              ; preds = %437
  %445 = add i64 %440, %370
  %446 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %440
  %447 = getelementptr inbounds i8, i8* %27, i64 %445
  %448 = getelementptr inbounds i32, i32* %446, i64 4
  %449 = bitcast i32* %448 to <4 x i32>*
  %450 = load <4 x i32>, <4 x i32>* %449, align 4
  %451 = getelementptr inbounds i8, i8* %447, i64 4
  %452 = bitcast i8* %451 to <4 x i8>*
  %453 = load <4 x i8>, <4 x i8>* %452, align 1
  %454 = zext <4 x i8> %453 to <4 x i32>
  %455 = mul nsw <4 x i32> %450, %454
  %456 = add <4 x i32> %455, %442
  %457 = bitcast i32* %446 to <4 x i32>*
  %458 = load <4 x i32>, <4 x i32>* %457, align 4
  %459 = bitcast i8* %447 to <4 x i8>*
  %460 = load <4 x i8>, <4 x i8>* %459, align 1
  %461 = zext <4 x i8> %460 to <4 x i32>
  %462 = mul nsw <4 x i32> %458, %461
  %463 = add <4 x i32> %462, %441
  br label %464

464:                                              ; preds = %437, %444
  %465 = phi <4 x i32> [ %438, %437 ], [ %463, %444 ]
  %466 = phi <4 x i32> [ %439, %437 ], [ %456, %444 ]
  %467 = add <4 x i32> %466, %465
  %468 = shufflevector <4 x i32> %467, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %469 = add <4 x i32> %467, %468
  %470 = shufflevector <4 x i32> %469, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %471 = add <4 x i32> %469, %470
  %472 = extractelement <4 x i32> %471, i32 0
  %473 = icmp eq i64 %375, %381
  br i1 %473, label %474, label %377

474:                                              ; preds = %479, %464, %362
  %475 = phi i32 [ 0, %362 ], [ %472, %464 ], [ %489, %479 ]
  %476 = lshr i32 %475, 16
  %477 = trunc i32 %476 to i8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %51, i8 %477, i64 3, i1 false)
  %478 = getelementptr inbounds i8, i8* %51, i64 %47
  br label %826

479:                                              ; preds = %377, %479
  %480 = phi i64 [ %490, %479 ], [ %378, %377 ]
  %481 = phi i32 [ %489, %479 ], [ %379, %377 ]
  %482 = sub nsw i64 %480, %370
  %483 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %482
  %484 = load i32, i32* %483, align 4
  %485 = getelementptr inbounds i8, i8* %27, i64 %480
  %486 = load i8, i8* %485, align 1
  %487 = zext i8 %486 to i32
  %488 = mul nsw i32 %484, %487
  %489 = add i32 %488, %481
  %490 = add nsw i64 %480, 1
  %491 = icmp slt i64 %480, %371
  br i1 %491, label %479, label %474, !llvm.loop !13

492:                                              ; preds = %50
  %493 = bitcast i8* %59 to i32*
  %494 = load i32, i32* %493, align 4
  %495 = getelementptr inbounds i8, i8* %59, i64 4
  %496 = bitcast i8* %495 to i32*
  %497 = load i32, i32* %496, align 4
  %498 = icmp sgt i32 %494, %497
  br i1 %498, label %503, label %499

499:                                              ; preds = %492
  %500 = load i32*, i32** %44, align 8
  %501 = sext i32 %494 to i64
  %502 = sext i32 %497 to i64
  br label %517

503:                                              ; preds = %517, %492
  %504 = phi i32 [ 0, %492 ], [ %533, %517 ]
  %505 = phi i32 [ 0, %492 ], [ %537, %517 ]
  %506 = phi i32 [ 0, %492 ], [ %540, %517 ]
  %507 = lshr i32 %506, 16
  %508 = trunc i32 %507 to i8
  %509 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 %508, i8* %51, align 1
  %510 = lshr i32 %505, 16
  %511 = trunc i32 %510 to i8
  %512 = getelementptr inbounds i8, i8* %51, i64 2
  store i8 %511, i8* %509, align 1
  %513 = lshr i32 %504, 16
  %514 = trunc i32 %513 to i8
  %515 = getelementptr inbounds i8, i8* %51, i64 3
  store i8 %514, i8* %512, align 1
  %516 = getelementptr inbounds i8, i8* %515, i64 %46
  br label %826

517:                                              ; preds = %517, %499
  %518 = phi i64 [ %541, %517 ], [ %501, %499 ]
  %519 = phi i32 [ %540, %517 ], [ 0, %499 ]
  %520 = phi i32 [ %537, %517 ], [ 0, %499 ]
  %521 = phi i32 [ %533, %517 ], [ 0, %499 ]
  %522 = sub nsw i64 %518, %501
  %523 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %522
  %524 = load i32, i32* %523, align 4
  %525 = getelementptr inbounds i8, i8* %27, i64 %518
  %526 = load i8, i8* %525, align 1
  %527 = zext i8 %526 to i64
  %528 = getelementptr inbounds i32, i32* %500, i64 %527
  %529 = load i32, i32* %528, align 4
  %530 = lshr i32 %529, 16
  %531 = and i32 %530, 255
  %532 = mul nsw i32 %531, %524
  %533 = add nsw i32 %532, %521
  %534 = lshr i32 %529, 8
  %535 = and i32 %534, 255
  %536 = mul nsw i32 %535, %524
  %537 = add nsw i32 %536, %520
  %538 = and i32 %529, 255
  %539 = mul nsw i32 %538, %524
  %540 = add nsw i32 %539, %519
  %541 = add nsw i64 %518, 1
  %542 = icmp slt i64 %518, %502
  br i1 %542, label %517, label %503

543:                                              ; preds = %50
  %544 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %48, align 8
  %545 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %544, null
  %546 = bitcast i8* %59 to i32*
  %547 = load i32, i32* %546, align 4
  %548 = getelementptr inbounds i8, i8* %59, i64 4
  %549 = bitcast i8* %548 to i32*
  %550 = load i32, i32* %549, align 4
  %551 = icmp sgt i32 %547, %550
  br i1 %545, label %557, label %552

552:                                              ; preds = %543
  br i1 %551, label %562, label %553

553:                                              ; preds = %552
  %554 = load i32*, i32** %44, align 8
  %555 = sext i32 %547 to i64
  %556 = sext i32 %550 to i64
  br label %576

557:                                              ; preds = %543
  br i1 %551, label %602, label %558

558:                                              ; preds = %557
  %559 = load i32*, i32** %44, align 8
  %560 = sext i32 %547 to i64
  %561 = sext i32 %550 to i64
  br label %619

562:                                              ; preds = %576, %552
  %563 = phi i32 [ 0, %552 ], [ %592, %576 ]
  %564 = phi i32 [ 0, %552 ], [ %596, %576 ]
  %565 = phi i32 [ 0, %552 ], [ %599, %576 ]
  %566 = lshr i32 %565, 16
  %567 = trunc i32 %566 to i8
  %568 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 %567, i8* %51, align 1
  %569 = lshr i32 %564, 16
  %570 = trunc i32 %569 to i8
  %571 = getelementptr inbounds i8, i8* %51, i64 2
  store i8 %570, i8* %568, align 1
  %572 = lshr i32 %563, 16
  %573 = trunc i32 %572 to i8
  %574 = getelementptr inbounds i8, i8* %51, i64 3
  store i8 %573, i8* %571, align 1
  %575 = getelementptr inbounds i8, i8* %51, i64 4
  store i8 -1, i8* %574, align 1
  br label %826

576:                                              ; preds = %576, %553
  %577 = phi i64 [ %600, %576 ], [ %555, %553 ]
  %578 = phi i32 [ %599, %576 ], [ 0, %553 ]
  %579 = phi i32 [ %596, %576 ], [ 0, %553 ]
  %580 = phi i32 [ %592, %576 ], [ 0, %553 ]
  %581 = sub nsw i64 %577, %555
  %582 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %581
  %583 = load i32, i32* %582, align 4
  %584 = getelementptr inbounds i8, i8* %27, i64 %577
  %585 = load i8, i8* %584, align 1
  %586 = zext i8 %585 to i64
  %587 = getelementptr inbounds i32, i32* %554, i64 %586
  %588 = load i32, i32* %587, align 4
  %589 = lshr i32 %588, 16
  %590 = and i32 %589, 255
  %591 = mul nsw i32 %590, %583
  %592 = add nsw i32 %591, %580
  %593 = lshr i32 %588, 8
  %594 = and i32 %593, 255
  %595 = mul nsw i32 %594, %583
  %596 = add nsw i32 %595, %579
  %597 = and i32 %588, 255
  %598 = mul nsw i32 %597, %583
  %599 = add nsw i32 %598, %578
  %600 = add nsw i64 %577, 1
  %601 = icmp slt i64 %577, %556
  br i1 %601, label %576, label %562

602:                                              ; preds = %619, %557
  %603 = phi i32 [ 0, %557 ], [ %635, %619 ]
  %604 = phi i32 [ 0, %557 ], [ %639, %619 ]
  %605 = phi i32 [ 0, %557 ], [ %643, %619 ]
  %606 = phi i32 [ 0, %557 ], [ %646, %619 ]
  %607 = lshr i32 %606, 16
  %608 = trunc i32 %607 to i8
  %609 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 %608, i8* %51, align 1
  %610 = lshr i32 %605, 16
  %611 = trunc i32 %610 to i8
  %612 = getelementptr inbounds i8, i8* %51, i64 2
  store i8 %611, i8* %609, align 1
  %613 = lshr i32 %604, 16
  %614 = trunc i32 %613 to i8
  %615 = getelementptr inbounds i8, i8* %51, i64 3
  store i8 %614, i8* %612, align 1
  %616 = lshr i32 %603, 16
  %617 = trunc i32 %616 to i8
  %618 = getelementptr inbounds i8, i8* %51, i64 4
  store i8 %617, i8* %615, align 1
  br label %826

619:                                              ; preds = %619, %558
  %620 = phi i64 [ %647, %619 ], [ %560, %558 ]
  %621 = phi i32 [ %646, %619 ], [ 0, %558 ]
  %622 = phi i32 [ %643, %619 ], [ 0, %558 ]
  %623 = phi i32 [ %639, %619 ], [ 0, %558 ]
  %624 = phi i32 [ %635, %619 ], [ 0, %558 ]
  %625 = sub nsw i64 %620, %560
  %626 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %625
  %627 = load i32, i32* %626, align 4
  %628 = getelementptr inbounds i8, i8* %27, i64 %620
  %629 = load i8, i8* %628, align 1
  %630 = zext i8 %629 to i64
  %631 = getelementptr inbounds i32, i32* %559, i64 %630
  %632 = load i32, i32* %631, align 4
  %633 = lshr i32 %632, 24
  %634 = mul nsw i32 %633, %627
  %635 = add nsw i32 %634, %624
  %636 = lshr i32 %632, 16
  %637 = and i32 %636, 255
  %638 = mul nsw i32 %637, %627
  %639 = add nsw i32 %638, %623
  %640 = lshr i32 %632, 8
  %641 = and i32 %640, 255
  %642 = mul nsw i32 %641, %627
  %643 = add nsw i32 %642, %622
  %644 = and i32 %632, 255
  %645 = mul nsw i32 %644, %627
  %646 = add nsw i32 %645, %621
  %647 = add nsw i64 %620, 1
  %648 = icmp slt i64 %620, %561
  br i1 %648, label %619, label %602

649:                                              ; preds = %50
  %650 = bitcast i8* %59 to i32*
  %651 = load i32, i32* %650, align 4
  %652 = getelementptr inbounds i8, i8* %59, i64 4
  %653 = bitcast i8* %652 to i32*
  %654 = load i32, i32* %653, align 4
  %655 = icmp sgt i32 %651, %654
  br i1 %655, label %659, label %656

656:                                              ; preds = %649
  %657 = sext i32 %651 to i64
  %658 = sext i32 %654 to i64
  br label %673

659:                                              ; preds = %673, %649
  %660 = phi i32 [ 0, %649 ], [ %687, %673 ]
  %661 = phi i32 [ 0, %649 ], [ %692, %673 ]
  %662 = phi i32 [ 0, %649 ], [ %696, %673 ]
  %663 = lshr i32 %660, 16
  %664 = trunc i32 %663 to i8
  %665 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 %664, i8* %51, align 1
  %666 = lshr i32 %661, 16
  %667 = trunc i32 %666 to i8
  %668 = getelementptr inbounds i8, i8* %51, i64 2
  store i8 %667, i8* %665, align 1
  %669 = lshr i32 %662, 16
  %670 = trunc i32 %669 to i8
  %671 = getelementptr inbounds i8, i8* %51, i64 3
  store i8 %670, i8* %668, align 1
  %672 = getelementptr inbounds i8, i8* %671, i64 %46
  br label %826

673:                                              ; preds = %673, %656
  %674 = phi i64 [ %697, %673 ], [ %657, %656 ]
  %675 = phi i32 [ %696, %673 ], [ 0, %656 ]
  %676 = phi i32 [ %692, %673 ], [ 0, %656 ]
  %677 = phi i32 [ %687, %673 ], [ 0, %656 ]
  %678 = sub nsw i64 %674, %657
  %679 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %678
  %680 = load i32, i32* %679, align 4
  %681 = mul nsw i64 %674, %49
  %682 = getelementptr inbounds i8, i8* %27, i64 %681
  %683 = getelementptr inbounds i8, i8* %682, i64 1
  %684 = load i8, i8* %682, align 1
  %685 = zext i8 %684 to i32
  %686 = mul nsw i32 %680, %685
  %687 = add i32 %686, %677
  %688 = getelementptr inbounds i8, i8* %683, i64 1
  %689 = load i8, i8* %683, align 1
  %690 = zext i8 %689 to i32
  %691 = mul nsw i32 %680, %690
  %692 = add i32 %691, %676
  %693 = load i8, i8* %688, align 1
  %694 = zext i8 %693 to i32
  %695 = mul nsw i32 %680, %694
  %696 = add i32 %695, %675
  %697 = add nsw i64 %674, 1
  %698 = icmp slt i64 %674, %658
  br i1 %698, label %673, label %659

699:                                              ; preds = %50
  %700 = bitcast i8* %59 to i32*
  %701 = load i32, i32* %700, align 4
  %702 = getelementptr inbounds i8, i8* %59, i64 4
  %703 = bitcast i8* %702 to i32*
  %704 = load i32, i32* %703, align 4
  %705 = icmp sgt i32 %701, %704
  br i1 %705, label %708, label %706

706:                                              ; preds = %699
  %707 = sext i32 %701 to i64
  br label %722

708:                                              ; preds = %722, %699
  %709 = phi i32 [ 0, %699 ], [ %750, %722 ]
  %710 = phi i32 [ 0, %699 ], [ %754, %722 ]
  %711 = phi i32 [ 0, %699 ], [ %758, %722 ]
  %712 = lshr i32 %709, 16
  %713 = trunc i32 %712 to i8
  %714 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 %713, i8* %51, align 1
  %715 = lshr i32 %710, 16
  %716 = trunc i32 %715 to i8
  %717 = getelementptr inbounds i8, i8* %51, i64 2
  store i8 %716, i8* %714, align 1
  %718 = lshr i32 %711, 16
  %719 = trunc i32 %718 to i8
  %720 = getelementptr inbounds i8, i8* %51, i64 3
  store i8 %719, i8* %717, align 1
  %721 = getelementptr inbounds i8, i8* %720, i64 %46
  br label %826

722:                                              ; preds = %762, %706
  %723 = phi i32 [ %701, %706 ], [ %764, %762 ]
  %724 = phi i64 [ %707, %706 ], [ %763, %762 ]
  %725 = phi i32 [ 0, %706 ], [ %758, %762 ]
  %726 = phi i32 [ 0, %706 ], [ %754, %762 ]
  %727 = phi i32 [ 0, %706 ], [ %750, %762 ]
  %728 = sext i32 %723 to i64
  %729 = sub nsw i64 %724, %728
  %730 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %729
  %731 = load i32, i32* %730, align 4
  %732 = mul nsw i64 %724, %49
  %733 = getelementptr inbounds i8, i8* %27, i64 %732
  %734 = load i8, i8* %733, align 1
  %735 = xor i8 %734, -1
  %736 = getelementptr inbounds i8, i8* %733, i64 1
  %737 = load i8, i8* %736, align 1
  %738 = xor i8 %737, -1
  %739 = getelementptr inbounds i8, i8* %733, i64 2
  %740 = load i8, i8* %739, align 1
  %741 = xor i8 %740, -1
  %742 = getelementptr inbounds i8, i8* %733, i64 3
  %743 = load i8, i8* %742, align 1
  %744 = xor i8 %743, -1
  %745 = tail call i24 @_ZN4fxge18AdobeCMYK_to_sRGB1Ehhhh(i8 zeroext %735, i8 zeroext %738, i8 zeroext %741, i8 zeroext %744) #12
  %746 = lshr i24 %745, 8
  %747 = lshr i24 %745, 16
  %748 = zext i24 %747 to i32
  %749 = mul nsw i32 %731, %748
  %750 = add i32 %749, %727
  %751 = and i24 %746, 255
  %752 = zext i24 %751 to i32
  %753 = mul nsw i32 %731, %752
  %754 = add i32 %753, %726
  %755 = and i24 %745, 255
  %756 = zext i24 %755 to i32
  %757 = mul nsw i32 %731, %756
  %758 = add i32 %757, %725
  %759 = load i32, i32* %703, align 4
  %760 = sext i32 %759 to i64
  %761 = icmp slt i64 %724, %760
  br i1 %761, label %762, label %708

762:                                              ; preds = %722
  %763 = add nsw i64 %724, 1
  %764 = load i32, i32* %700, align 4
  br label %722

765:                                              ; preds = %50
  %766 = bitcast i8* %59 to i32*
  %767 = load i32, i32* %766, align 4
  %768 = getelementptr inbounds i8, i8* %59, i64 4
  %769 = bitcast i8* %768 to i32*
  %770 = load i32, i32* %769, align 4
  %771 = icmp sgt i32 %767, %770
  br i1 %771, label %775, label %772

772:                                              ; preds = %765
  %773 = sext i32 %767 to i64
  %774 = sext i32 %770 to i64
  br label %793

775:                                              ; preds = %793, %765
  %776 = phi i32 [ 0, %765 ], [ %823, %793 ]
  %777 = phi i32 [ 0, %765 ], [ %822, %793 ]
  %778 = phi i32 [ 0, %765 ], [ %818, %793 ]
  %779 = phi i32 [ 0, %765 ], [ %813, %793 ]
  %780 = lshr i32 %779, 16
  %781 = trunc i32 %780 to i8
  %782 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 %781, i8* %51, align 1
  %783 = lshr i32 %778, 16
  %784 = trunc i32 %783 to i8
  %785 = getelementptr inbounds i8, i8* %51, i64 2
  store i8 %784, i8* %782, align 1
  %786 = lshr i32 %777, 16
  %787 = trunc i32 %786 to i8
  %788 = getelementptr inbounds i8, i8* %51, i64 3
  store i8 %787, i8* %785, align 1
  %789 = mul i32 %776, 255
  %790 = lshr i32 %789, 16
  %791 = trunc i32 %790 to i8
  %792 = getelementptr inbounds i8, i8* %51, i64 4
  store i8 %791, i8* %788, align 1
  br label %826

793:                                              ; preds = %793, %772
  %794 = phi i64 [ %824, %793 ], [ %773, %772 ]
  %795 = phi i32 [ %813, %793 ], [ 0, %772 ]
  %796 = phi i32 [ %818, %793 ], [ 0, %772 ]
  %797 = phi i32 [ %822, %793 ], [ 0, %772 ]
  %798 = phi i32 [ %823, %793 ], [ 0, %772 ]
  %799 = sub nsw i64 %794, %773
  %800 = getelementptr inbounds %struct.PixelWeight, %struct.PixelWeight* %60, i64 0, i32 2, i64 %799
  %801 = load i32, i32* %800, align 4
  %802 = mul nsw i64 %794, %49
  %803 = getelementptr inbounds i8, i8* %27, i64 %802
  %804 = getelementptr inbounds i8, i8* %803, i64 3
  %805 = load i8, i8* %804, align 1
  %806 = zext i8 %805 to i32
  %807 = mul nsw i32 %801, %806
  %808 = sdiv i32 %807, 255
  %809 = getelementptr inbounds i8, i8* %803, i64 1
  %810 = load i8, i8* %803, align 1
  %811 = zext i8 %810 to i32
  %812 = mul nsw i32 %808, %811
  %813 = add i32 %812, %795
  %814 = getelementptr inbounds i8, i8* %809, i64 1
  %815 = load i8, i8* %809, align 1
  %816 = zext i8 %815 to i32
  %817 = mul nsw i32 %808, %816
  %818 = add i32 %817, %796
  %819 = load i8, i8* %814, align 1
  %820 = zext i8 %819 to i32
  %821 = mul nsw i32 %808, %820
  %822 = add i32 %821, %797
  %823 = add i32 %808, %798
  %824 = add nsw i64 %794, 1
  %825 = icmp slt i64 %794, %774
  br i1 %825, label %793, label %775

826:                                              ; preds = %775, %708, %659, %602, %562, %503, %474, %304, %254, %203, %174
  %827 = phi i8* [ %178, %174 ], [ %217, %203 ], [ %268, %254 ], [ %318, %304 ], [ %478, %474 ], [ %516, %503 ], [ %618, %602 ], [ %575, %562 ], [ %672, %659 ], [ %721, %708 ], [ %792, %775 ]
  %828 = add nuw nsw i32 %52, 1
  %829 = load i32, i32* %28, align 8
  %830 = icmp slt i32 %828, %829
  br i1 %830, label %50, label %831

831:                                              ; preds = %826, %50, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder25GifDoubleLineResampleVertERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEdi(%"class.fxcodec::ProgressiveDecoder"* nocapture readonly, %"class.fxcrt::RetainPtr.4"* nocapture readonly dereferenceable(8), double, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 25
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 26
  %8 = tail call i1 @llvm.is.constant.f64(double %2) #12
  %9 = tail call double @llvm.fabs.f64(double %2) #9
  %10 = fcmp ueq double %9, 0x7FF0000000000000
  %11 = fcmp ole double %2, 0x7FEFFFFFFFFFFFFF
  %12 = fcmp oge double %2, 0xFFEFFFFFFFFFFFFF
  %13 = and i1 %11, %12
  %14 = fmul double %2, 2.000000e+00
  %15 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 18, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 18, i32 0
  %17 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  %18 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %19 = fptosi double %14 to i32
  %20 = fptosi double %2 to i32
  br label %21

21:                                               ; preds = %246, %4
  %22 = phi i32 [ %3, %4 ], [ %247, %246 ]
  %23 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %24 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %23, i64 0, i32 0, i32 1
  %25 = load i16, i16* %24, align 8
  %26 = lshr i16 %25, 3
  %27 = and i16 %26, 31
  %28 = zext i16 %27 to i32
  %29 = load i32, i32* %6, align 8
  %30 = mul nsw i32 %29, %28
  %31 = load i32, i32* %7, align 4
  br i1 %8, label %32, label %33

32:                                               ; preds = %21
  br i1 %13, label %34, label %35

33:                                               ; preds = %21
  br i1 %10, label %35, label %34

34:                                               ; preds = %33, %32
  br label %35

35:                                               ; preds = %32, %33, %34
  %36 = phi double [ %14, %34 ], [ 0.000000e+00, %33 ], [ 0.000000e+00, %32 ]
  %37 = tail call i1 @llvm.is.constant.f64(double %36) #12
  br i1 %37, label %38, label %42

38:                                               ; preds = %35
  %39 = fcmp ole double %36, 0x7FEFFFFFFFFFFFFF
  %40 = fcmp oge double %36, 0xFFEFFFFFFFFFFFFF
  %41 = and i1 %39, %40
  br i1 %41, label %46, label %45

42:                                               ; preds = %35
  %43 = tail call double @llvm.fabs.f64(double %36) #9
  %44 = fcmp ueq double %43, 0x7FF0000000000000
  br i1 %44, label %45, label %46

45:                                               ; preds = %42, %38
  tail call void @llvm.trap() #12
  unreachable

46:                                               ; preds = %38, %42
  %47 = sitofp i32 %22 to double
  %48 = fsub double %47, %36
  %49 = fptosi double %48 to i32
  %50 = fcmp ult double %48, 0xC1E0000000000000
  %51 = fcmp ugt double %48, 0x41DFFFFFFFC00000
  %52 = or i1 %50, %51
  br i1 %52, label %53, label %54, !prof !3

53:                                               ; preds = %46
  tail call void @llvm.trap() #12
  unreachable

54:                                               ; preds = %46
  %55 = icmp sgt i32 %31, %49
  %56 = select i1 %55, i32 %31, i32 %49
  %57 = icmp slt i32 %56, %22
  br i1 %57, label %58, label %240

58:                                               ; preds = %54
  %59 = zext i32 %30 to i64
  %60 = add nsw i32 %28, -3
  %61 = sext i32 %60 to i64
  br label %62

62:                                               ; preds = %238, %58
  %63 = phi %class.CFX_DIBitmap* [ %23, %58 ], [ %239, %238 ]
  %64 = phi i32 [ %56, %58 ], [ %236, %238 ]
  %65 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %63, i64 0, i32 0
  %66 = bitcast %class.CFX_DIBitmap* %63 to i8* (%class.CFX_DIBBase*, i32)***
  %67 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %66, align 8
  %68 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %67, i64 3
  %69 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %68, align 8
  %70 = tail call i8* %69(%class.CFX_DIBBase* %65, i32 %64) #12
  %71 = sub nsw i32 %64, %31
  %72 = load i8*, i8** %15, align 8
  %73 = load i32, i32* %16, align 8
  %74 = mul nsw i32 %73, %71
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %72, i64 %75
  %77 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %78 = bitcast i8* %76 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = add nsw i32 %79, %31
  %81 = bitcast %class.CFX_DIBitmap* %77 to i8* (%class.CFX_DIBitmap*, i32)***
  %82 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %81, align 8
  %83 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %82, i64 3
  %84 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %83, align 8
  %85 = tail call i8* %84(%class.CFX_DIBitmap* %77, i32 %80) #12
  %86 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %87 = getelementptr inbounds i8, i8* %76, i64 4
  %88 = bitcast i8* %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = add nsw i32 %89, %31
  %91 = bitcast %class.CFX_DIBitmap* %86 to i8* (%class.CFX_DIBitmap*, i32)***
  %92 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %91, align 8
  %93 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %92, i64 3
  %94 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %93, align 8
  %95 = tail call i8* %94(%class.CFX_DIBitmap* %86, i32 %90) #12
  %96 = load i32, i32* %17, align 8
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %98, label %235

98:                                               ; preds = %62
  %99 = getelementptr inbounds i8, i8* %95, i64 %59
  %100 = getelementptr inbounds i8, i8* %85, i64 %59
  %101 = getelementptr inbounds i8, i8* %70, i64 %59
  %102 = getelementptr inbounds i8, i8* %76, i64 8
  %103 = bitcast i8* %102 to i32*
  %104 = getelementptr inbounds i8, i8* %76, i64 12
  %105 = bitcast i8* %104 to i32*
  br label %106

106:                                              ; preds = %98, %228
  %107 = phi i8* [ %101, %98 ], [ %231, %228 ]
  %108 = phi i8* [ %100, %98 ], [ %230, %228 ]
  %109 = phi i8* [ %99, %98 ], [ %229, %228 ]
  %110 = phi i32 [ 0, %98 ], [ %232, %228 ]
  %111 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %112 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %111, i64 0, i32 0, i32 1
  %113 = load i16, i16* %112, align 8
  switch i16 %113, label %249 [
    i16 544, label %177
    i16 32, label %135
    i16 24, label %135
    i16 264, label %114
    i16 8, label %114
  ]

114:                                              ; preds = %106, %106
  %115 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %111, i64 0, i32 0, i32 6, i32 0, i32 0
  %116 = load i32*, i32** %115, align 8
  %117 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %111, i64 0, i32 0, i32 6, i32 0, i32 1
  %118 = load i32*, i32** %117, align 8
  %119 = icmp eq i32* %116, %118
  br i1 %119, label %120, label %249

120:                                              ; preds = %114
  %121 = load i32, i32* %103, align 4
  %122 = getelementptr inbounds i8, i8* %108, i64 1
  %123 = load i8, i8* %108, align 1
  %124 = zext i8 %123 to i32
  %125 = mul nsw i32 %121, %124
  %126 = load i32, i32* %105, align 4
  %127 = getelementptr inbounds i8, i8* %109, i64 1
  %128 = load i8, i8* %109, align 1
  %129 = zext i8 %128 to i32
  %130 = mul nsw i32 %126, %129
  %131 = add nsw i32 %130, %125
  %132 = lshr i32 %131, 16
  %133 = trunc i32 %132 to i8
  %134 = getelementptr inbounds i8, i8* %107, i64 1
  store i8 %133, i8* %107, align 1
  br label %228

135:                                              ; preds = %106, %106
  %136 = load i32, i32* %103, align 4
  %137 = getelementptr inbounds i8, i8* %108, i64 1
  %138 = load i8, i8* %108, align 1
  %139 = zext i8 %138 to i32
  %140 = mul nsw i32 %136, %139
  %141 = getelementptr inbounds i8, i8* %108, i64 2
  %142 = load i8, i8* %137, align 1
  %143 = zext i8 %142 to i32
  %144 = mul nsw i32 %136, %143
  %145 = getelementptr inbounds i8, i8* %108, i64 3
  %146 = load i8, i8* %141, align 1
  %147 = zext i8 %146 to i32
  %148 = mul nsw i32 %136, %147
  %149 = getelementptr inbounds i8, i8* %145, i64 %61
  %150 = load i32, i32* %105, align 4
  %151 = getelementptr inbounds i8, i8* %109, i64 1
  %152 = load i8, i8* %109, align 1
  %153 = zext i8 %152 to i32
  %154 = mul nsw i32 %150, %153
  %155 = add i32 %154, %140
  %156 = getelementptr inbounds i8, i8* %109, i64 2
  %157 = load i8, i8* %151, align 1
  %158 = zext i8 %157 to i32
  %159 = mul nsw i32 %150, %158
  %160 = add i32 %159, %144
  %161 = getelementptr inbounds i8, i8* %109, i64 3
  %162 = load i8, i8* %156, align 1
  %163 = zext i8 %162 to i32
  %164 = mul nsw i32 %150, %163
  %165 = add i32 %164, %148
  %166 = getelementptr inbounds i8, i8* %161, i64 %61
  %167 = lshr i32 %155, 16
  %168 = trunc i32 %167 to i8
  %169 = getelementptr inbounds i8, i8* %107, i64 1
  store i8 %168, i8* %107, align 1
  %170 = lshr i32 %160, 16
  %171 = trunc i32 %170 to i8
  %172 = getelementptr inbounds i8, i8* %107, i64 2
  store i8 %171, i8* %169, align 1
  %173 = lshr i32 %165, 16
  %174 = trunc i32 %173 to i8
  %175 = getelementptr inbounds i8, i8* %107, i64 3
  store i8 %174, i8* %172, align 1
  %176 = getelementptr inbounds i8, i8* %175, i64 %61
  br label %228

177:                                              ; preds = %106
  %178 = load i32, i32* %103, align 4
  %179 = getelementptr inbounds i8, i8* %108, i64 1
  %180 = load i8, i8* %108, align 1
  %181 = zext i8 %180 to i32
  %182 = mul nsw i32 %178, %181
  %183 = getelementptr inbounds i8, i8* %108, i64 2
  %184 = load i8, i8* %179, align 1
  %185 = zext i8 %184 to i32
  %186 = mul nsw i32 %178, %185
  %187 = getelementptr inbounds i8, i8* %108, i64 3
  %188 = load i8, i8* %183, align 1
  %189 = zext i8 %188 to i32
  %190 = mul nsw i32 %178, %189
  %191 = getelementptr inbounds i8, i8* %108, i64 4
  %192 = load i8, i8* %187, align 1
  %193 = zext i8 %192 to i32
  %194 = mul nsw i32 %178, %193
  %195 = load i32, i32* %105, align 4
  %196 = getelementptr inbounds i8, i8* %109, i64 1
  %197 = load i8, i8* %109, align 1
  %198 = zext i8 %197 to i32
  %199 = mul nsw i32 %195, %198
  %200 = add i32 %199, %182
  %201 = getelementptr inbounds i8, i8* %109, i64 2
  %202 = load i8, i8* %196, align 1
  %203 = zext i8 %202 to i32
  %204 = mul nsw i32 %195, %203
  %205 = add i32 %204, %186
  %206 = getelementptr inbounds i8, i8* %109, i64 3
  %207 = load i8, i8* %201, align 1
  %208 = zext i8 %207 to i32
  %209 = mul nsw i32 %195, %208
  %210 = add i32 %209, %190
  %211 = getelementptr inbounds i8, i8* %109, i64 4
  %212 = load i8, i8* %206, align 1
  %213 = zext i8 %212 to i32
  %214 = mul nsw i32 %195, %213
  %215 = add i32 %214, %194
  %216 = lshr i32 %200, 16
  %217 = trunc i32 %216 to i8
  %218 = getelementptr inbounds i8, i8* %107, i64 1
  store i8 %217, i8* %107, align 1
  %219 = lshr i32 %205, 16
  %220 = trunc i32 %219 to i8
  %221 = getelementptr inbounds i8, i8* %107, i64 2
  store i8 %220, i8* %218, align 1
  %222 = lshr i32 %210, 16
  %223 = trunc i32 %222 to i8
  %224 = getelementptr inbounds i8, i8* %107, i64 3
  store i8 %223, i8* %221, align 1
  %225 = lshr i32 %215, 16
  %226 = trunc i32 %225 to i8
  %227 = getelementptr inbounds i8, i8* %107, i64 4
  store i8 %226, i8* %224, align 1
  br label %228

228:                                              ; preds = %120, %135, %177
  %229 = phi i8* [ %211, %177 ], [ %166, %135 ], [ %127, %120 ]
  %230 = phi i8* [ %191, %177 ], [ %149, %135 ], [ %122, %120 ]
  %231 = phi i8* [ %227, %177 ], [ %176, %135 ], [ %134, %120 ]
  %232 = add nuw nsw i32 %110, 1
  %233 = load i32, i32* %17, align 8
  %234 = icmp slt i32 %232, %233
  br i1 %234, label %106, label %235

235:                                              ; preds = %228, %62
  %236 = add nsw i32 %64, 1
  %237 = icmp slt i32 %236, %22
  br i1 %237, label %238, label %240

238:                                              ; preds = %235
  %239 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  br label %62

240:                                              ; preds = %235, %54
  %241 = load i32, i32* %18, align 4
  %242 = add i32 %31, -1
  %243 = add i32 %242, %241
  %244 = add nsw i32 %22, %19
  %245 = icmp slt i32 %244, %243
  br i1 %245, label %249, label %246

246:                                              ; preds = %240
  %247 = add nsw i32 %22, %20
  %248 = icmp slt i32 %247, %243
  br i1 %248, label %21, label %249

249:                                              ; preds = %246, %240, %114, %106
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N7fxcodec18ProgressiveDecoder15GifReadScanlineEiPh(%"class.fxcodec::ProgressiveDecoder"* readonly, i32, i8* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 -1, i32 43
  %5 = bitcast i8* %4 to %"class.fxcodec::ProgressiveDecoder"*
  tail call void @_ZN7fxcodec18ProgressiveDecoder15GifReadScanlineEiPh(%"class.fxcodec::ProgressiveDecoder"* %5, i32 %1, i8* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec18ProgressiveDecoder24BmpInputImagePositionBufEj(%"class.fxcodec::ProgressiveDecoder"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 15
  store i32 %1, i32* %4, align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #12
  store i32 -1, i32* %3, align 4
  %6 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %7 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %6, align 8
  %8 = tail call %"class.fxcodec::BmpProgressiveDecoder"* @_ZN7fxcodec21BmpProgressiveDecoder11GetInstanceEv() #12
  %9 = getelementptr inbounds %"class.fxcodec::BmpProgressiveDecoder", %"class.fxcodec::BmpProgressiveDecoder"* %8, i64 0, i32 0
  %10 = call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder12ReadMoreDataEPNS_23ProgressiveDecoderIfaceEPNS1_7ContextEbP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::ProgressiveDecoderIface"* %9, %"class.fxcodec::ProgressiveDecoderIface::Context"* %7, i1 zeroext false, i32* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #12
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec18ProgressiveDecoder15BmpReadMoreDataEPNS_23ProgressiveDecoderIface7ContextEP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* nocapture, %"class.fxcodec::ProgressiveDecoderIface::Context"*, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.fxcodec::BmpProgressiveDecoder"* @_ZN7fxcodec21BmpProgressiveDecoder11GetInstanceEv() #12
  %5 = getelementptr inbounds %"class.fxcodec::BmpProgressiveDecoder", %"class.fxcodec::BmpProgressiveDecoder"* %4, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder12ReadMoreDataEPNS_23ProgressiveDecoderIfaceEPNS1_7ContextEbP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::ProgressiveDecoderIface"* %5, %"class.fxcodec::ProgressiveDecoderIface::Context"* %1, i1 zeroext false, i32* %2)
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder15BmpReadScanlineEjN6pdfium4spanIKhEE(%"class.fxcodec::ProgressiveDecoder"* nocapture readonly, i32, %"class.pdfium::span"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.4", align 8
  %5 = bitcast %"class.fxcrt::RetainPtr.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.4"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %7, align 8
  %9 = ptrtoint %class.CFX_DIBitmap* %8 to i64
  %10 = bitcast %"class.fxcrt::RetainPtr.4"* %4 to i64*
  store i64 %9, i64* %10, align 8
  %11 = icmp eq %class.CFX_DIBitmap* %8, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %8, i64 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, 1
  store i64 %15, i64* %13, align 8
  br label %16

16:                                               ; preds = %3, %12
  %17 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 16
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %2, i64 0, i32 1
  %21 = load i64, i64* %20, align 8, !noalias !14
  %22 = icmp ult i64 %21, %19
  br i1 %22, label %23, label %24, !prof !3

23:                                               ; preds = %16
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !noalias !14, !srcloc !17
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !noalias !14, !srcloc !18
  unreachable

24:                                               ; preds = %16
  %25 = bitcast %"class.pdfium::span"* %2 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !14
  %27 = inttoptr i64 %26 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 %19
  %29 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %30 = ptrtoint i8* %28 to i64
  %31 = sub i64 %30, %26
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %24
  %34 = load i8*, i8** %29, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %27, i64 %31, i1 false) #12
  br label %35

35:                                               ; preds = %24, %33
  %36 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 26
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %37, -1
  %45 = icmp ugt i32 %37, %1
  %46 = and i1 %44, %45
  %47 = icmp slt i32 %39, 0
  %48 = or i1 %46, %47
  %49 = xor i1 %48, true
  %50 = icmp ugt i32 %39, %1
  %51 = and i1 %50, %49
  br i1 %51, label %52, label %75

52:                                               ; preds = %35
  %53 = sub nsw i32 %39, %37
  %54 = sitofp i32 %43 to double
  %55 = sitofp i32 %53 to double
  %56 = fdiv double %54, %55
  %57 = sub i32 %1, %37
  %58 = sitofp i32 %57 to double
  %59 = fmul double %56, %58
  %60 = fptosi double %59 to i32
  %61 = add nsw i32 %41, %60
  %62 = add nsw i32 %43, %41
  %63 = icmp slt i32 %61, %62
  br i1 %63, label %64, label %75

64:                                               ; preds = %52
  %65 = load i8*, i8** %29, align 8
  %66 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 32
  %67 = load i32, i32* %66, align 4
  call void @_ZN7fxcodec18ProgressiveDecoder16ReSampleScanlineERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiPhNS0_14FXCodec_FormatE(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* nonnull dereferenceable(8) %4, i32 %61, i8* %65, i32 %67)
  %68 = fcmp ugt double %56, 1.000000e+00
  br i1 %68, label %69, label %75

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 44
  %71 = load i8, i8* %70, align 1, !range !4
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  call void @_ZN7fxcodec18ProgressiveDecoder12ResampleVertERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEdi(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* nonnull dereferenceable(8) %4, double %56, i32 %61)
  br label %75

74:                                               ; preds = %69
  call void @_ZN7fxcodec18ProgressiveDecoder14ResampleVertBTERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEdi(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* nonnull dereferenceable(8) %4, double %56, i32 %61)
  br label %75

75:                                               ; preds = %73, %74, %52, %64, %35
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %6, align 8
  br i1 %11, label %87, label %76

76:                                               ; preds = %75
  %77 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %8, i64 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %78, -1
  store i64 %79, i64* %77, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %76
  %82 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %8, i64 0, i32 0, i32 0
  %83 = bitcast %class.CFX_DIBitmap* %8 to void (%"class.fxcrt::Retainable"*)***
  %84 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %84, i64 1
  %86 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %85, align 8
  tail call void %86(%"class.fxcrt::Retainable"* nonnull %82) #12
  br label %87

87:                                               ; preds = %75, %76, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder14ResampleVertBTERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEdi(%"class.fxcodec::ProgressiveDecoder"* nocapture readonly, %"class.fxcrt::RetainPtr.4"* nocapture readonly dereferenceable(8), double, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %7 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %6, i64 0, i32 0, i32 1
  %8 = load i16, i16* %7, align 8
  %9 = lshr i16 %8, 3
  %10 = and i16 %9, 31
  %11 = zext i16 %10 to i32
  %12 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 25
  %13 = load i32, i32* %12, align 8
  %14 = mul nsw i32 %13, %11
  %15 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 26
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, %16
  %20 = fcmp oge double %2, 0xC1E0000000000000
  %21 = fcmp ole double %2, 0x41DFFFFFFFC00000
  %22 = and i1 %21, %20
  br i1 %22, label %24, label %23, !prof !2

23:                                               ; preds = %4
  tail call void @llvm.trap() #12
  unreachable

24:                                               ; preds = %4
  %25 = fptosi double %2 to i32
  %26 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %3, i32 %25) #12
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  br i1 %27, label %29, label %30, !prof !3

29:                                               ; preds = %24
  tail call void @llvm.trap() #12
  unreachable

30:                                               ; preds = %24
  %31 = add nsw i32 %19, -1
  %32 = icmp slt i32 %28, %31
  br i1 %32, label %33, label %42

33:                                               ; preds = %30
  %34 = icmp sgt i32 %28, %3
  br i1 %34, label %35, label %247

35:                                               ; preds = %33
  %36 = zext i32 %14 to i64
  %37 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 18, i32 1, i32 0, i32 0
  %38 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 18, i32 0
  %39 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  %40 = add nsw i32 %11, -3
  %41 = sext i32 %40 to i64
  br label %69

42:                                               ; preds = %30
  %43 = bitcast %class.CFX_DIBitmap* %6 to i8* (%class.CFX_DIBitmap*, i32)***
  %44 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %43, align 8
  %45 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %44, i64 3
  %46 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %45, align 8
  %47 = tail call i8* %46(%class.CFX_DIBitmap* %6, i32 %3) #12
  %48 = zext i32 %14 to i64
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  %50 = add nsw i32 %3, 1
  %51 = icmp slt i32 %50, %19
  br i1 %51, label %52, label %247

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i32 [ %50, %52 ], [ %67, %54 ]
  %56 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %57 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %56, i64 0, i32 0
  %58 = bitcast %class.CFX_DIBitmap* %56 to i8* (%class.CFX_DIBBase*, i32)***
  %59 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %58, align 8
  %60 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %59, i64 3
  %61 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %60, align 8
  %62 = tail call i8* %61(%class.CFX_DIBBase* %57, i32 %55) #12
  %63 = getelementptr inbounds i8, i8* %62, i64 %48
  %64 = load i32, i32* %53, align 8
  %65 = mul nsw i32 %64, %11
  %66 = zext i32 %65 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %63, i8* align 1 %49, i64 %66, i1 false)
  %67 = add i32 %55, 1
  %68 = icmp eq i32 %67, %19
  br i1 %68, label %247, label %54

69:                                               ; preds = %245, %35
  %70 = phi %class.CFX_DIBitmap* [ %6, %35 ], [ %246, %245 ]
  %71 = phi i32 [ %28, %35 ], [ %243, %245 ]
  %72 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %70, i64 0, i32 0
  %73 = bitcast %class.CFX_DIBitmap* %70 to i8* (%class.CFX_DIBBase*, i32)***
  %74 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %73, align 8
  %75 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %74, i64 3
  %76 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %75, align 8
  %77 = tail call i8* %76(%class.CFX_DIBBase* %72, i32 %71) #12
  %78 = sub nsw i32 %71, %16
  %79 = load i8*, i8** %37, align 8
  %80 = load i32, i32* %38, align 8
  %81 = mul nsw i32 %80, %78
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %79, i64 %82
  %84 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %85 = bitcast i8* %83 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = add nsw i32 %86, %16
  %88 = bitcast %class.CFX_DIBitmap* %84 to i8* (%class.CFX_DIBitmap*, i32)***
  %89 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %88, align 8
  %90 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %89, i64 3
  %91 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %90, align 8
  %92 = tail call i8* %91(%class.CFX_DIBitmap* %84, i32 %87) #12
  %93 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %94 = getelementptr inbounds i8, i8* %83, i64 4
  %95 = bitcast i8* %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = add nsw i32 %96, %16
  %98 = bitcast %class.CFX_DIBitmap* %93 to i8* (%class.CFX_DIBitmap*, i32)***
  %99 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %98, align 8
  %100 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %99, i64 3
  %101 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %100, align 8
  %102 = tail call i8* %101(%class.CFX_DIBitmap* %93, i32 %97) #12
  %103 = load i32, i32* %39, align 8
  %104 = icmp sgt i32 %103, 0
  br i1 %104, label %105, label %242

105:                                              ; preds = %69
  %106 = getelementptr inbounds i8, i8* %102, i64 %36
  %107 = getelementptr inbounds i8, i8* %92, i64 %36
  %108 = getelementptr inbounds i8, i8* %77, i64 %36
  %109 = getelementptr inbounds i8, i8* %83, i64 8
  %110 = bitcast i8* %109 to i32*
  %111 = getelementptr inbounds i8, i8* %83, i64 12
  %112 = bitcast i8* %111 to i32*
  br label %113

113:                                              ; preds = %105, %235
  %114 = phi i32 [ 0, %105 ], [ %239, %235 ]
  %115 = phi i8* [ %106, %105 ], [ %238, %235 ]
  %116 = phi i8* [ %107, %105 ], [ %237, %235 ]
  %117 = phi i8* [ %108, %105 ], [ %236, %235 ]
  %118 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %119 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %118, i64 0, i32 0, i32 1
  %120 = load i16, i16* %119, align 8
  switch i16 %120, label %247 [
    i16 544, label %184
    i16 32, label %142
    i16 24, label %142
    i16 264, label %121
    i16 8, label %121
  ]

121:                                              ; preds = %113, %113
  %122 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %118, i64 0, i32 0, i32 6, i32 0, i32 0
  %123 = load i32*, i32** %122, align 8
  %124 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %118, i64 0, i32 0, i32 6, i32 0, i32 1
  %125 = load i32*, i32** %124, align 8
  %126 = icmp eq i32* %123, %125
  br i1 %126, label %127, label %247

127:                                              ; preds = %121
  %128 = load i32, i32* %110, align 4
  %129 = getelementptr inbounds i8, i8* %116, i64 1
  %130 = load i8, i8* %116, align 1
  %131 = zext i8 %130 to i32
  %132 = mul nsw i32 %128, %131
  %133 = load i32, i32* %112, align 4
  %134 = getelementptr inbounds i8, i8* %115, i64 1
  %135 = load i8, i8* %115, align 1
  %136 = zext i8 %135 to i32
  %137 = mul nsw i32 %133, %136
  %138 = add nsw i32 %137, %132
  %139 = lshr i32 %138, 16
  %140 = trunc i32 %139 to i8
  %141 = getelementptr inbounds i8, i8* %117, i64 1
  store i8 %140, i8* %117, align 1
  br label %235

142:                                              ; preds = %113, %113
  %143 = load i32, i32* %110, align 4
  %144 = getelementptr inbounds i8, i8* %116, i64 1
  %145 = load i8, i8* %116, align 1
  %146 = zext i8 %145 to i32
  %147 = mul nsw i32 %143, %146
  %148 = getelementptr inbounds i8, i8* %116, i64 2
  %149 = load i8, i8* %144, align 1
  %150 = zext i8 %149 to i32
  %151 = mul nsw i32 %143, %150
  %152 = getelementptr inbounds i8, i8* %116, i64 3
  %153 = load i8, i8* %148, align 1
  %154 = zext i8 %153 to i32
  %155 = mul nsw i32 %143, %154
  %156 = getelementptr inbounds i8, i8* %152, i64 %41
  %157 = load i32, i32* %112, align 4
  %158 = getelementptr inbounds i8, i8* %115, i64 1
  %159 = load i8, i8* %115, align 1
  %160 = zext i8 %159 to i32
  %161 = mul nsw i32 %157, %160
  %162 = add i32 %161, %147
  %163 = getelementptr inbounds i8, i8* %115, i64 2
  %164 = load i8, i8* %158, align 1
  %165 = zext i8 %164 to i32
  %166 = mul nsw i32 %157, %165
  %167 = add i32 %166, %151
  %168 = getelementptr inbounds i8, i8* %115, i64 3
  %169 = load i8, i8* %163, align 1
  %170 = zext i8 %169 to i32
  %171 = mul nsw i32 %157, %170
  %172 = add i32 %171, %155
  %173 = getelementptr inbounds i8, i8* %168, i64 %41
  %174 = lshr i32 %162, 16
  %175 = trunc i32 %174 to i8
  %176 = getelementptr inbounds i8, i8* %117, i64 1
  store i8 %175, i8* %117, align 1
  %177 = lshr i32 %167, 16
  %178 = trunc i32 %177 to i8
  %179 = getelementptr inbounds i8, i8* %117, i64 2
  store i8 %178, i8* %176, align 1
  %180 = lshr i32 %172, 16
  %181 = trunc i32 %180 to i8
  %182 = getelementptr inbounds i8, i8* %117, i64 3
  store i8 %181, i8* %179, align 1
  %183 = getelementptr inbounds i8, i8* %182, i64 %41
  br label %235

184:                                              ; preds = %113
  %185 = load i32, i32* %110, align 4
  %186 = getelementptr inbounds i8, i8* %116, i64 1
  %187 = load i8, i8* %116, align 1
  %188 = zext i8 %187 to i32
  %189 = mul nsw i32 %185, %188
  %190 = getelementptr inbounds i8, i8* %116, i64 2
  %191 = load i8, i8* %186, align 1
  %192 = zext i8 %191 to i32
  %193 = mul nsw i32 %185, %192
  %194 = getelementptr inbounds i8, i8* %116, i64 3
  %195 = load i8, i8* %190, align 1
  %196 = zext i8 %195 to i32
  %197 = mul nsw i32 %185, %196
  %198 = getelementptr inbounds i8, i8* %116, i64 4
  %199 = load i8, i8* %194, align 1
  %200 = zext i8 %199 to i32
  %201 = mul nsw i32 %185, %200
  %202 = load i32, i32* %112, align 4
  %203 = getelementptr inbounds i8, i8* %115, i64 1
  %204 = load i8, i8* %115, align 1
  %205 = zext i8 %204 to i32
  %206 = mul nsw i32 %202, %205
  %207 = add i32 %206, %189
  %208 = getelementptr inbounds i8, i8* %115, i64 2
  %209 = load i8, i8* %203, align 1
  %210 = zext i8 %209 to i32
  %211 = mul nsw i32 %202, %210
  %212 = add i32 %211, %193
  %213 = getelementptr inbounds i8, i8* %115, i64 3
  %214 = load i8, i8* %208, align 1
  %215 = zext i8 %214 to i32
  %216 = mul nsw i32 %202, %215
  %217 = add i32 %216, %197
  %218 = getelementptr inbounds i8, i8* %115, i64 4
  %219 = load i8, i8* %213, align 1
  %220 = zext i8 %219 to i32
  %221 = mul nsw i32 %202, %220
  %222 = add i32 %221, %201
  %223 = lshr i32 %207, 16
  %224 = trunc i32 %223 to i8
  %225 = getelementptr inbounds i8, i8* %117, i64 1
  store i8 %224, i8* %117, align 1
  %226 = lshr i32 %212, 16
  %227 = trunc i32 %226 to i8
  %228 = getelementptr inbounds i8, i8* %117, i64 2
  store i8 %227, i8* %225, align 1
  %229 = lshr i32 %217, 16
  %230 = trunc i32 %229 to i8
  %231 = getelementptr inbounds i8, i8* %117, i64 3
  store i8 %230, i8* %228, align 1
  %232 = lshr i32 %222, 16
  %233 = trunc i32 %232 to i8
  %234 = getelementptr inbounds i8, i8* %117, i64 4
  store i8 %233, i8* %231, align 1
  br label %235

235:                                              ; preds = %127, %142, %184
  %236 = phi i8* [ %234, %184 ], [ %183, %142 ], [ %141, %127 ]
  %237 = phi i8* [ %198, %184 ], [ %156, %142 ], [ %129, %127 ]
  %238 = phi i8* [ %218, %184 ], [ %173, %142 ], [ %134, %127 ]
  %239 = add nuw nsw i32 %114, 1
  %240 = load i32, i32* %39, align 8
  %241 = icmp slt i32 %239, %240
  br i1 %241, label %113, label %242

242:                                              ; preds = %235, %69
  %243 = add nsw i32 %71, -1
  %244 = icmp sgt i32 %243, %3
  br i1 %244, label %245, label %247

245:                                              ; preds = %242
  %246 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  br label %69

247:                                              ; preds = %54, %242, %121, %113, %42, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec18ProgressiveDecoder26BmpDetectImageTypeInBufferEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoder"*, %"class.fxcodec::CFX_DIBAttribute"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::RetainPtr.10", align 8
  %4 = alloca %"class.std::__1::vector.33"*, align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 0
  %7 = tail call %"class.fxcodec::ProgressiveDecoderIface::Context"* @_ZN7fxcodec10BmpDecoder11StartDecodeEPNS0_8DelegateE(%"class.fxcodec::BmpDecoder::Delegate"* %6) #12
  %8 = ptrtoint %"class.fxcodec::ProgressiveDecoderIface::Context"* %7 to i64
  %9 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %9, align 8
  %11 = ptrtoint %class.CFX_CodecMemory* %10 to i64
  %12 = bitcast %"class.fxcrt::RetainPtr.10"* %3 to i64*
  store i64 %11, i64* %12, align 8
  %13 = icmp eq %class.CFX_CodecMemory* %10, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %10, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add nsw i64 %16, 1
  store i64 %17, i64* %15, align 8
  br label %18

18:                                               ; preds = %2, %14
  %19 = call zeroext i1 @_ZN7fxcodec10BmpDecoder5InputEPNS_23ProgressiveDecoderIface7ContextEN5fxcrt9RetainPtrI15CFX_CodecMemoryEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %7, %"class.fxcrt::RetainPtr.10"* nonnull %3, %"class.fxcodec::CFX_DIBAttribute"* null) #12
  %20 = getelementptr inbounds %"class.fxcrt::RetainPtr.10", %"class.fxcrt::RetainPtr.10"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %20, align 8
  store %class.CFX_CodecMemory* null, %class.CFX_CodecMemory** %20, align 8
  %22 = icmp eq %class.CFX_CodecMemory* %21, null
  br i1 %22, label %34, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %21, i64 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i64 %25, -1
  store i64 %26, i64* %24, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %21, i64 0, i32 0
  %30 = bitcast %class.CFX_CodecMemory* %21 to void (%"class.fxcrt::Retainable"*)***
  %31 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %31, i64 1
  %33 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %32, align 8
  call void %33(%"class.fxcrt::Retainable"* nonnull %29) #12
  br label %34

34:                                               ; preds = %18, %23, %28
  %35 = bitcast %"class.std::__1::vector.33"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  store %"class.std::__1::vector.33"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::vector.33"*), %"class.std::__1::vector.33"** %4, align 8
  %36 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 20
  %37 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 21
  %38 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 44
  %39 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 22
  %40 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 30
  %41 = call zeroext i8 @_ZN7fxcodec10BmpDecoder10ReadHeaderEPNS_23ProgressiveDecoderIface7ContextEPiS4_PbS4_S4_PPKNSt3__16vectorIjNS6_9allocatorIjEEEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %7, i32* %36, i32* %37, i8* %38, i32* %39, i32* %40, %"class.std::__1::vector.33"** nonnull %4, %"class.fxcodec::CFX_DIBAttribute"* %1) #12
  %42 = bitcast i32* %5 to i8*
  br label %43

43:                                               ; preds = %52, %34
  %44 = phi i8 [ %41, %34 ], [ %53, %52 ]
  switch i8 %44, label %54 [
    i8 2, label %45
    i8 1, label %56
  ]

45:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #12
  store i32 8, i32* %5, align 4
  %46 = call %"class.fxcodec::BmpProgressiveDecoder"* @_ZN7fxcodec21BmpProgressiveDecoder11GetInstanceEv() #12
  %47 = getelementptr inbounds %"class.fxcodec::BmpProgressiveDecoder", %"class.fxcodec::BmpProgressiveDecoder"* %46, i64 0, i32 0
  %48 = call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder12ReadMoreDataEPNS_23ProgressiveDecoderIfaceEPNS1_7ContextEbP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::ProgressiveDecoderIface"* %47, %"class.fxcodec::ProgressiveDecoderIface::Context"* %7, i1 zeroext false, i32* nonnull %5) #12
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = load i32, i32* %5, align 4
  %51 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 %50, i32* %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #12
  br label %150

52:                                               ; preds = %45
  %53 = call zeroext i8 @_ZN7fxcodec10BmpDecoder10ReadHeaderEPNS_23ProgressiveDecoderIface7ContextEPiS4_PbS4_S4_PPKNSt3__16vectorIjNS6_9allocatorIjEEEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %7, i32* %36, i32* %37, i8* %38, i32* %39, i32* %40, %"class.std::__1::vector.33"** nonnull %4, %"class.fxcodec::CFX_DIBAttribute"* %1) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #12
  br label %43

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 8, i32* %55, align 8
  br label %150

56:                                               ; preds = %43
  %57 = load i32, i32* %39, align 8
  switch i32 %57, label %60 [
    i32 1, label %62
    i32 3, label %58
    i32 4, label %59
  ]

58:                                               ; preds = %56
  br label %62

59:                                               ; preds = %56
  br label %62

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 8, i32* %61, align 8
  br label %150

62:                                               ; preds = %56, %59, %58
  %63 = phi i32 [ 32, %59 ], [ 24, %58 ], [ 8, %56 ]
  %64 = phi i16 [ 32, %59 ], [ 24, %58 ], [ 8, %56 ]
  %65 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 32
  store i32 %63, i32* %65, align 4
  %66 = load i32, i32* %36, align 8
  %67 = load i32, i32* %37, align 4
  %68 = call { i64, i32 } @_ZN12CFX_DIBitmap21CalculatePitchAndSizeEii12FXDIB_Formatj(i32 %66, i32 %67, i16 zeroext %64, i32 0) #12
  %69 = extractvalue { i64, i32 } %68, 0
  %70 = extractvalue { i64, i32 } %68, 1
  %71 = trunc i64 %69 to i8
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 8, i32* %74, align 8
  br label %150

75:                                               ; preds = %62
  %76 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %77 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %76, align 8
  %78 = bitcast %class.IFX_SeekableReadStream* %77 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr i8, i8* %79, i64 -40
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %class.IFX_SeekableReadStream* %77 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 %82
  %85 = bitcast i8* %84 to %class.IFX_StreamWithSize*
  %86 = bitcast i8* %84 to i64 (%class.IFX_StreamWithSize*)***
  %87 = load i64 (%class.IFX_StreamWithSize*)**, i64 (%class.IFX_StreamWithSize*)*** %86, align 8
  %88 = load i64 (%class.IFX_StreamWithSize*)*, i64 (%class.IFX_StreamWithSize*)** %87, align 8
  %89 = call i64 %88(%class.IFX_StreamWithSize* %85) #12
  %90 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 15
  %91 = load i32, i32* %90, align 8
  %92 = call i64 @_ZN7fxcodec10BmpDecoder13GetAvailInputEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %7) #12
  %93 = icmp eq i8 %71, 1
  br i1 %93, label %95, label %94, !prof !2

94:                                               ; preds = %75
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !19
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !20
  unreachable

95:                                               ; preds = %75
  %96 = zext i32 %91 to i64
  %97 = sub i64 %89, %96
  %98 = add nsw i64 %97, %92
  %99 = trunc i64 %98 to i32
  %100 = icmp ugt i32 %70, %99
  br i1 %100, label %101, label %103

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 8, i32* %102, align 8
  br label %150

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 23
  store i32 8, i32* %104, align 4
  %105 = load i32, i32* %36, align 8
  %106 = load i32, i32* %37, align 4
  %107 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  store i32 0, i32* %107, align 8
  %108 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  store i32 0, i32* %108, align 4
  %109 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 2
  store i32 %105, i32* %109, align 8
  %110 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  store i32 %106, i32* %110, align 4
  %111 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 11
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %112, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.22"* %111 to i64*
  store i64 %8, i64* %114, align 8
  %115 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %113, null
  br i1 %115, label %121, label %116

116:                                              ; preds = %103
  %117 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %113 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %118 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %118, i64 1
  %120 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %119, align 8
  call void %120(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %113) #12
  br label %121

121:                                              ; preds = %103, %116
  %122 = load i32, i32* %40, align 4
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 9
  br i1 %123, label %143, label %125

125:                                              ; preds = %121
  %126 = sext i32 %122 to i64
  %127 = call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %126, i64 4) #12
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %124, i64 0, i32 0, i32 0, i32 0
  %129 = load i32*, i32** %128, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.19"* %124 to i8**
  store i8* %127, i8** %130, align 8
  %131 = icmp eq i32* %129, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %125
  %133 = bitcast i32* %129 to i8*
  call void @_Z7FX_FreePv(i8* nonnull %133) #12
  %134 = load i8*, i8** %130, align 8
  br label %135

135:                                              ; preds = %125, %132
  %136 = phi i8* [ %127, %125 ], [ %134, %132 ]
  %137 = bitcast %"class.std::__1::vector.33"** %4 to i8***
  %138 = load i8**, i8*** %137, align 8
  %139 = load i8*, i8** %138, align 8
  %140 = load i32, i32* %40, align 4
  %141 = sext i32 %140 to i64
  %142 = shl nsw i64 %141, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %136, i8* align 4 %139, i64 %142, i1 false)
  br label %149

143:                                              ; preds = %121
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %124, i64 0, i32 0, i32 0, i32 0
  %145 = load i32*, i32** %144, align 8
  store i32* null, i32** %144, align 8
  %146 = icmp eq i32* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %143
  %148 = bitcast i32* %145 to i8*
  call void @_Z7FX_FreePv(i8* nonnull %148) #12
  br label %149

149:                                              ; preds = %135, %143, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  br label %157

150:                                              ; preds = %73, %101, %49, %60, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  %151 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %7, null
  br i1 %151, label %157, label %152

152:                                              ; preds = %150
  %153 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %7 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %154 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %154, i64 1
  %156 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %155, align 8
  call void %156(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %7) #12
  br label %157

157:                                              ; preds = %149, %150, %152
  %158 = phi i1 [ true, %149 ], [ false, %150 ], [ false, %152 ]
  ret i1 %158
}

declare %"class.fxcodec::ProgressiveDecoderIface::Context"* @_ZN7fxcodec10BmpDecoder11StartDecodeEPNS0_8DelegateE(%"class.fxcodec::BmpDecoder::Delegate"*) local_unnamed_addr #3

declare zeroext i1 @_ZN7fxcodec10BmpDecoder5InputEPNS_23ProgressiveDecoderIface7ContextEN5fxcrt9RetainPtrI15CFX_CodecMemoryEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr.10"*, %"class.fxcodec::CFX_DIBAttribute"*) local_unnamed_addr #3

declare zeroext i8 @_ZN7fxcodec10BmpDecoder10ReadHeaderEPNS_23ProgressiveDecoderIface7ContextEPiS4_PbS4_S4_PPKNSt3__16vectorIjNS6_9allocatorIjEEEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"*, i32*, i32*, i8*, i32*, i32*, %"class.std::__1::vector.33"**, %"class.fxcodec::CFX_DIBAttribute"*) local_unnamed_addr #3

declare { i64, i32 } @_ZN12CFX_DIBitmap21CalculatePitchAndSizeEii12FXDIB_Formatj(i32, i32, i16 zeroext, i32) local_unnamed_addr #3

declare i64 @_ZN7fxcodec10BmpDecoder13GetAvailInputEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"*) local_unnamed_addr #3

declare i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec18ProgressiveDecoder12ReadMoreDataEPNS_23ProgressiveDecoderIfaceEPNS1_7ContextEbP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* nocapture, %"class.fxcodec::ProgressiveDecoderIface"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*, i1 zeroext, i32* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.fxcrt::RetainPtr.10", align 8
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 15
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %9, align 8
  %11 = bitcast %class.IFX_SeekableReadStream* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr i8, i8* %12, i64 -40
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %class.IFX_SeekableReadStream* %10 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = bitcast i8* %17 to %class.IFX_StreamWithSize*
  %19 = bitcast i8* %17 to i64 (%class.IFX_StreamWithSize*)***
  %20 = load i64 (%class.IFX_StreamWithSize*)**, i64 (%class.IFX_StreamWithSize*)*** %19, align 8
  %21 = load i64 (%class.IFX_StreamWithSize*)*, i64 (%class.IFX_StreamWithSize*)** %20, align 8
  %22 = tail call i64 %21(%class.IFX_StreamWithSize* %18) #12
  %23 = trunc i64 %22 to i32
  %24 = icmp ult i32 %8, %23
  br i1 %24, label %25, label %116

25:                                               ; preds = %5
  %26 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %9, align 8
  %27 = bitcast %class.IFX_SeekableReadStream* %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr i8, i8* %28, i64 -40
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %class.IFX_SeekableReadStream* %26 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  %34 = bitcast i8* %33 to %class.IFX_StreamWithSize*
  %35 = bitcast i8* %33 to i64 (%class.IFX_StreamWithSize*)***
  %36 = load i64 (%class.IFX_StreamWithSize*)**, i64 (%class.IFX_StreamWithSize*)*** %35, align 8
  %37 = load i64 (%class.IFX_StreamWithSize*)*, i64 (%class.IFX_StreamWithSize*)** %36, align 8
  %38 = tail call i64 %37(%class.IFX_StreamWithSize* %34) #12
  %39 = load i32, i32* %7, align 8
  %40 = trunc i64 %38 to i32
  %41 = sub i32 %40, %39
  br i1 %3, label %49, label %42

42:                                               ; preds = %25
  %43 = bitcast %"class.fxcodec::ProgressiveDecoderIface"* %1 to i64 (%"class.fxcodec::ProgressiveDecoderIface"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %44 = load i64 (%"class.fxcodec::ProgressiveDecoderIface"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*)**, i64 (%"class.fxcodec::ProgressiveDecoderIface"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %43, align 8
  %45 = getelementptr inbounds i64 (%"class.fxcodec::ProgressiveDecoderIface"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*)*, i64 (%"class.fxcodec::ProgressiveDecoderIface"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*)** %44, i64 2
  %46 = load i64 (%"class.fxcodec::ProgressiveDecoderIface"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*)*, i64 (%"class.fxcodec::ProgressiveDecoderIface"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*)** %45, align 8
  %47 = tail call i64 %46(%"class.fxcodec::ProgressiveDecoderIface"* %1, %"class.fxcodec::ProgressiveDecoderIface::Context"* %2) #12
  %48 = icmp sgt i64 %47, -1
  br i1 %48, label %49, label %116

49:                                               ; preds = %42, %25
  %50 = phi i64 [ 0, %25 ], [ %47, %42 ]
  %51 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %52 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %51, align 8
  %53 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %52, i64 0, i32 2
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, %50
  br i1 %55, label %56, label %63

56:                                               ; preds = %49
  %57 = icmp ult i32 %41, 4096
  %58 = select i1 %57, i32 %41, i32 4096
  %59 = zext i32 %58 to i64
  %60 = add nuw i64 %50, %59
  %61 = tail call zeroext i1 @_ZN15CFX_CodecMemory9TryResizeEm(%class.CFX_CodecMemory* %52, i64 %60) #12
  br i1 %61, label %69, label %62

62:                                               ; preds = %56
  store i32 5, i32* %4, align 4
  br label %116

63:                                               ; preds = %49
  %64 = sub i64 %54, %50
  tail call void @_ZN15CFX_CodecMemory7ConsumeEm(%class.CFX_CodecMemory* %52, i64 %64) #12
  %65 = trunc i64 %64 to i32
  %66 = icmp ugt i32 %41, %65
  %67 = select i1 %66, i32 %65, i32 %41
  %68 = zext i32 %67 to i64
  br label %69

69:                                               ; preds = %56, %63
  %70 = phi i64 [ %59, %56 ], [ %68, %63 ]
  %71 = phi i32 [ %58, %56 ], [ %67, %63 ]
  %72 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %9, align 8
  %73 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %51, align 8
  %74 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %73, i64 0, i32 1, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 %50
  %77 = load i32, i32* %7, align 8
  %78 = zext i32 %77 to i64
  %79 = bitcast %class.IFX_SeekableReadStream* %72 to i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)***
  %80 = load i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)**, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*** %79, align 8
  %81 = getelementptr inbounds i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)** %80, i64 4
  %82 = load i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)** %81, align 8
  %83 = tail call zeroext i1 %82(%class.IFX_SeekableReadStream* %72, i8* %76, i64 %78, i64 %70) #12
  br i1 %83, label %85, label %84

84:                                               ; preds = %69
  store i32 6, i32* %4, align 4
  br label %116

85:                                               ; preds = %69
  %86 = load i32, i32* %7, align 8
  %87 = add i32 %86, %71
  store i32 %87, i32* %7, align 8
  %88 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %51, align 8
  %89 = ptrtoint %class.CFX_CodecMemory* %88 to i64
  %90 = bitcast %"class.fxcrt::RetainPtr.10"* %6 to i64*
  store i64 %89, i64* %90, align 8
  %91 = icmp eq %class.CFX_CodecMemory* %88, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %88, i64 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = add nsw i64 %94, 1
  store i64 %95, i64* %93, align 8
  br label %96

96:                                               ; preds = %85, %92
  %97 = bitcast %"class.fxcodec::ProgressiveDecoderIface"* %1 to i1 (%"class.fxcodec::ProgressiveDecoderIface"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr.10"*, %"class.fxcodec::CFX_DIBAttribute"*)***
  %98 = load i1 (%"class.fxcodec::ProgressiveDecoderIface"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr.10"*, %"class.fxcodec::CFX_DIBAttribute"*)**, i1 (%"class.fxcodec::ProgressiveDecoderIface"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr.10"*, %"class.fxcodec::CFX_DIBAttribute"*)*** %97, align 8
  %99 = getelementptr inbounds i1 (%"class.fxcodec::ProgressiveDecoderIface"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr.10"*, %"class.fxcodec::CFX_DIBAttribute"*)*, i1 (%"class.fxcodec::ProgressiveDecoderIface"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr.10"*, %"class.fxcodec::CFX_DIBAttribute"*)** %98, i64 3
  %100 = load i1 (%"class.fxcodec::ProgressiveDecoderIface"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr.10"*, %"class.fxcodec::CFX_DIBAttribute"*)*, i1 (%"class.fxcodec::ProgressiveDecoderIface"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr.10"*, %"class.fxcodec::CFX_DIBAttribute"*)** %99, align 8
  %101 = call zeroext i1 %100(%"class.fxcodec::ProgressiveDecoderIface"* %1, %"class.fxcodec::ProgressiveDecoderIface::Context"* %2, %"class.fxcrt::RetainPtr.10"* nonnull %6, %"class.fxcodec::CFX_DIBAttribute"* null) #12
  %102 = getelementptr inbounds %"class.fxcrt::RetainPtr.10", %"class.fxcrt::RetainPtr.10"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %102, align 8
  store %class.CFX_CodecMemory* null, %class.CFX_CodecMemory** %102, align 8
  %104 = icmp eq %class.CFX_CodecMemory* %103, null
  br i1 %104, label %116, label %105

105:                                              ; preds = %96
  %106 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %103, i64 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = add nsw i64 %107, -1
  store i64 %108, i64* %106, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %116

110:                                              ; preds = %105
  %111 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %103, i64 0, i32 0
  %112 = bitcast %class.CFX_CodecMemory* %103 to void (%"class.fxcrt::Retainable"*)***
  %113 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %113, i64 1
  %115 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %114, align 8
  call void %115(%"class.fxcrt::Retainable"* nonnull %111) #12
  br label %116

116:                                              ; preds = %42, %84, %62, %96, %105, %110, %5
  %117 = phi i1 [ false, %5 ], [ false, %84 ], [ false, %62 ], [ %101, %96 ], [ %101, %105 ], [ %101, %110 ], [ false, %42 ]
  ret i1 %117
}

declare %"class.fxcodec::BmpProgressiveDecoder"* @_ZN7fxcodec21BmpProgressiveDecoder11GetInstanceEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7fxcodec18ProgressiveDecoder14BmpStartDecodeERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%"class.fxcodec::ProgressiveDecoder"*, %"class.fxcrt::RetainPtr.4"* nocapture readnone dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %3, align 8
  %5 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %4, i64 0, i32 0, i32 1
  %6 = load i16, i16* %5, align 8
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 32
  %8 = load i32, i32* %7, align 4
  tail call void @_ZN7fxcodec18ProgressiveDecoder14GetTransMethodE12FXDIB_FormatNS0_14FXCodec_FormatE(%"class.fxcodec::ProgressiveDecoder"* %0, i16 zeroext %6, i32 %8)
  %9 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 20
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 22
  %12 = load i32, i32* %11, align 8
  %13 = mul nsw i32 %12, %10
  %14 = add nsw i32 %13, 3
  %15 = and i32 %14, -4
  %16 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 16
  store i32 %15, i32* %16, align 4
  %17 = sext i32 %15 to i64
  %18 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %17, i64 1) #12
  %19 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  store i8* %18, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %2
  tail call void @_Z7FX_FreePv(i8* nonnull %20) #12
  br label %23

23:                                               ; preds = %2, %22
  %24 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 17
  %25 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = sub nsw i32 %28, %30
  tail call void @_ZN7fxcodec18ProgressiveDecoder11WeightTable4CalcEii(%"class.fxcodec::ProgressiveDecoder::WeightTable"* %24, i32 %26, i32 %31)
  %32 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 18
  %33 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = sub nsw i32 %36, %38
  tail call void @_ZN7fxcodec18ProgressiveDecoder9VertTable4CalcEii(%"class.fxcodec::ProgressiveDecoder::VertTable"* %32, i32 %34, i32 %39)
  %40 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 3, i32* %40, align 8
  ret i32 3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7fxcodec18ProgressiveDecoder14GetTransMethodE12FXDIB_FormatNS0_14FXCodec_FormatE(%"class.fxcodec::ProgressiveDecoder"*, i16 zeroext, i32) local_unnamed_addr #6 align 2 {
  switch i16 %1, label %53 [
    i16 257, label %4
    i16 1, label %4
    i16 264, label %9
    i16 8, label %9
    i16 24, label %22
    i16 32, label %35
    i16 544, label %35
  ]

4:                                                ; preds = %3, %3
  %5 = icmp eq i32 %2, 257
  %6 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  br i1 %5, label %7, label %8

7:                                                ; preds = %4
  store i32 0, i32* %6, align 8
  br label %55

8:                                                ; preds = %4
  store i32 -1, i32* %6, align 8
  br label %55

9:                                                ; preds = %3, %3
  switch i32 %2, label %20 [
    i32 257, label %10
    i32 264, label %12
    i32 1, label %14
    i32 8, label %14
    i32 24, label %16
    i32 32, label %16
    i32 544, label %16
    i32 288, label %18
  ]

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 1, i32* %11, align 8
  br label %55

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 2, i32* %13, align 8
  br label %55

14:                                               ; preds = %9, %9
  %15 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 3, i32* %15, align 8
  br label %55

16:                                               ; preds = %9, %9, %9
  %17 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 4, i32* %17, align 8
  br label %55

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 5, i32* %19, align 8
  br label %55

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 -1, i32* %21, align 8
  br label %55

22:                                               ; preds = %3
  switch i32 %2, label %33 [
    i32 257, label %23
    i32 264, label %25
    i32 1, label %27
    i32 8, label %27
    i32 24, label %29
    i32 32, label %29
    i32 544, label %29
    i32 288, label %31
  ]

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 6, i32* %24, align 8
  br label %55

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 7, i32* %26, align 8
  br label %55

27:                                               ; preds = %22, %22
  %28 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 8, i32* %28, align 8
  br label %55

29:                                               ; preds = %22, %22, %22
  %30 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 9, i32* %30, align 8
  br label %55

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 10, i32* %32, align 8
  br label %55

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 -1, i32* %34, align 8
  br label %55

35:                                               ; preds = %3, %3
  switch i32 %2, label %51 [
    i32 257, label %36
    i32 264, label %38
    i32 1, label %40
    i32 8, label %40
    i32 24, label %45
    i32 32, label %45
    i32 288, label %47
    i32 544, label %49
  ]

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 6, i32* %37, align 8
  br label %55

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 7, i32* %39, align 8
  br label %55

40:                                               ; preds = %35, %35
  %41 = icmp eq i16 %1, 544
  %42 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  br i1 %41, label %43, label %44

43:                                               ; preds = %40
  store i32 12, i32* %42, align 8
  br label %55

44:                                               ; preds = %40
  store i32 8, i32* %42, align 8
  br label %55

45:                                               ; preds = %35, %35
  %46 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 9, i32* %46, align 8
  br label %55

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 10, i32* %48, align 8
  br label %55

49:                                               ; preds = %35
  %50 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 11, i32* %50, align 8
  br label %55

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 -1, i32* %52, align 8
  br label %55

53:                                               ; preds = %3
  %54 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 29
  store i32 -1, i32* %54, align 8
  br label %55

55:                                               ; preds = %36, %38, %45, %47, %49, %51, %44, %43, %23, %25, %27, %29, %31, %33, %10, %12, %14, %16, %18, %20, %7, %8, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7fxcodec18ProgressiveDecoder17BmpContinueDecodeEv(%"class.fxcodec::ProgressiveDecoder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %3, align 8
  %5 = tail call zeroext i8 @_ZN7fxcodec10BmpDecoder9LoadImageEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %4) #12
  %6 = icmp eq i8 %5, 2
  br i1 %6, label %7, label %61

7:                                                ; preds = %1
  %8 = bitcast i32* %2 to i8*
  br label %9

9:                                                ; preds = %7, %57
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #12
  store i32 4, i32* %2, align 4
  %10 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %3, align 8
  %11 = tail call %"class.fxcodec::BmpProgressiveDecoder"* @_ZN7fxcodec21BmpProgressiveDecoder11GetInstanceEv() #12
  %12 = getelementptr inbounds %"class.fxcodec::BmpProgressiveDecoder", %"class.fxcodec::BmpProgressiveDecoder"* %11, i64 0, i32 0
  %13 = call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder12ReadMoreDataEPNS_23ProgressiveDecoderIfaceEPNS1_7ContextEbP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::ProgressiveDecoderIface"* %12, %"class.fxcodec::ProgressiveDecoderIface::Context"* %10, i1 zeroext false, i32* nonnull %2) #12
  br i1 %13, label %57, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %16 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %15, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %15, align 8
  %17 = icmp eq %class.CFX_DIBitmap* %16, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %16, i64 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, -1
  store i64 %21, i64* %19, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %16, i64 0, i32 0, i32 0
  %25 = bitcast %class.CFX_DIBitmap* %16 to void (%"class.fxcrt::Retainable"*)***
  %26 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %26, i64 1
  %28 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %27, align 8
  tail call void %28(%"class.fxcrt::Retainable"* nonnull %24) #12
  br label %29

29:                                               ; preds = %14, %18, %23
  %30 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %31 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %30, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %30, align 8
  %32 = icmp eq %class.IFX_SeekableReadStream* %31, null
  br i1 %32, label %54, label %33

33:                                               ; preds = %29
  %34 = bitcast %class.IFX_SeekableReadStream* %31 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr i8, i8* %35, i64 -32
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %class.IFX_SeekableReadStream* %31 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 %38
  %41 = getelementptr inbounds i8, i8* %40, i64 8
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %43, -1
  store i64 %44, i64* %42, align 8
  %45 = icmp ne i64 %44, 0
  %46 = icmp eq i8* %40, null
  %47 = or i1 %46, %45
  br i1 %47, label %54, label %48

48:                                               ; preds = %33
  %49 = bitcast i8* %40 to %"class.fxcrt::Retainable"*
  %50 = bitcast i8* %40 to void (%"class.fxcrt::Retainable"*)***
  %51 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, i64 1
  %53 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %52, align 8
  tail call void %53(%"class.fxcrt::Retainable"* nonnull %49) #12
  br label %54

54:                                               ; preds = %48, %33, %29
  %55 = load i32, i32* %2, align 4
  %56 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 %55, i32* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #12
  br label %106

57:                                               ; preds = %9
  %58 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %3, align 8
  %59 = tail call zeroext i8 @_ZN7fxcodec10BmpDecoder9LoadImageEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %58) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #12
  %60 = icmp eq i8 %59, 2
  br i1 %60, label %9, label %61

61:                                               ; preds = %57, %1
  %62 = phi i8 [ %5, %1 ], [ %59, %57 ]
  %63 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %64 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %63, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %63, align 8
  %65 = icmp eq %class.CFX_DIBitmap* %64, null
  br i1 %65, label %77, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %64, i64 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = add nsw i64 %68, -1
  store i64 %69, i64* %67, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %66
  %72 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %64, i64 0, i32 0, i32 0
  %73 = bitcast %class.CFX_DIBitmap* %64 to void (%"class.fxcrt::Retainable"*)***
  %74 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %74, i64 1
  %76 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %75, align 8
  tail call void %76(%"class.fxcrt::Retainable"* nonnull %72) #12
  br label %77

77:                                               ; preds = %61, %66, %71
  %78 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %79 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %78, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %78, align 8
  %80 = icmp eq %class.IFX_SeekableReadStream* %79, null
  br i1 %80, label %102, label %81

81:                                               ; preds = %77
  %82 = bitcast %class.IFX_SeekableReadStream* %79 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr i8, i8* %83, i64 -32
  %85 = bitcast i8* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %class.IFX_SeekableReadStream* %79 to i8*
  %88 = getelementptr inbounds i8, i8* %87, i64 %86
  %89 = getelementptr inbounds i8, i8* %88, i64 8
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = add nsw i64 %91, -1
  store i64 %92, i64* %90, align 8
  %93 = icmp ne i64 %92, 0
  %94 = icmp eq i8* %88, null
  %95 = or i1 %94, %93
  br i1 %95, label %102, label %96

96:                                               ; preds = %81
  %97 = bitcast i8* %88 to %"class.fxcrt::Retainable"*
  %98 = bitcast i8* %88 to void (%"class.fxcrt::Retainable"*)***
  %99 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %99, i64 1
  %101 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %100, align 8
  tail call void %101(%"class.fxcrt::Retainable"* nonnull %97) #12
  br label %102

102:                                              ; preds = %77, %81, %96
  %103 = icmp eq i8 %62, 1
  %104 = select i1 %103, i32 4, i32 -1
  %105 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 %104, i32* %105, align 8
  br label %106

106:                                              ; preds = %54, %102
  %107 = phi i32 [ %104, %102 ], [ %55, %54 ]
  ret i32 %107
}

declare zeroext i8 @_ZN7fxcodec10BmpDecoder9LoadImageEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"*) local_unnamed_addr #3

declare %"class.fxcodec::GifProgressiveDecoder"* @_ZN7fxcodec21GifProgressiveDecoder11GetInstanceEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec18ProgressiveDecoder26GifDetectImageTypeInBufferEv(%"class.fxcodec::ProgressiveDecoder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::RetainPtr.10", align 8
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 1
  %5 = tail call %"class.fxcodec::ProgressiveDecoderIface::Context"* @_ZN7fxcodec10GifDecoder11StartDecodeEPNS0_8DelegateE(%"class.fxcodec::GifDecoder::Delegate"* %4) #12
  %6 = ptrtoint %"class.fxcodec::ProgressiveDecoderIface::Context"* %5 to i64
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 12
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %10 = bitcast %"class.std::__1::unique_ptr.22"* %7 to i64*
  store i64 %6, i64* %10, align 8
  %11 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %9, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %9 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %14 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %14, i64 1
  %16 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %15, align 8
  tail call void %16(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %9) #12
  %17 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  br label %18

18:                                               ; preds = %12, %1
  %19 = phi %"class.fxcodec::ProgressiveDecoderIface::Context"* [ %17, %12 ], [ %5, %1 ]
  %20 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %21 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %20, align 8
  %22 = ptrtoint %class.CFX_CodecMemory* %21 to i64
  %23 = bitcast %"class.fxcrt::RetainPtr.10"* %2 to i64*
  store i64 %22, i64* %23, align 8
  %24 = icmp eq %class.CFX_CodecMemory* %21, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %21, i64 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add nsw i64 %27, 1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %18, %25
  %30 = call zeroext i1 @_ZN7fxcodec10GifDecoder5InputEPNS_23ProgressiveDecoderIface7ContextEN5fxcrt9RetainPtrI15CFX_CodecMemoryEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %19, %"class.fxcrt::RetainPtr.10"* nonnull %2, %"class.fxcodec::CFX_DIBAttribute"* null) #12
  %31 = getelementptr inbounds %"class.fxcrt::RetainPtr.10", %"class.fxcrt::RetainPtr.10"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %31, align 8
  store %class.CFX_CodecMemory* null, %class.CFX_CodecMemory** %31, align 8
  %33 = icmp eq %class.CFX_CodecMemory* %32, null
  br i1 %33, label %45, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %32, i64 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = add nsw i64 %36, -1
  store i64 %37, i64* %35, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %34
  %40 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %32, i64 0, i32 0
  %41 = bitcast %class.CFX_CodecMemory* %32 to void (%"class.fxcrt::Retainable"*)***
  %42 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %42, i64 1
  %44 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %43, align 8
  call void %44(%"class.fxcrt::Retainable"* nonnull %40) #12
  br label %45

45:                                               ; preds = %29, %34, %39
  %46 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 22
  store i32 1, i32* %46, align 8
  %47 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %48 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 20
  %49 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 21
  %50 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 40
  %51 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 39
  %52 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 37
  %53 = call i32 @_ZN7fxcodec10GifDecoder10ReadHeaderEPNS_23ProgressiveDecoderIface7ContextEPiS4_S4_PP14CFX_GifPaletteS4_(%"class.fxcodec::ProgressiveDecoderIface::Context"* %47, i32* %48, i32* %49, i32* %50, %struct.CFX_GifPalette** %51, i32* %52) #12
  %54 = bitcast i32* %3 to i8*
  %55 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 43
  br label %57

57:                                               ; preds = %77, %45
  %58 = phi i32 [ %53, %45 ], [ %79, %77 ]
  switch i32 %58, label %88 [
    i32 2, label %59
    i32 1, label %80
  ]

59:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #12
  store i32 8, i32* %3, align 4
  %60 = call %"class.fxcodec::GifProgressiveDecoder"* @_ZN7fxcodec21GifProgressiveDecoder11GetInstanceEv() #12
  %61 = getelementptr inbounds %"class.fxcodec::GifProgressiveDecoder", %"class.fxcodec::GifProgressiveDecoder"* %60, i64 0, i32 0
  %62 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %55, align 8
  %63 = load i8, i8* %56, align 8, !range !4
  %64 = icmp ne i8 %63, 0
  %65 = call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder12ReadMoreDataEPNS_23ProgressiveDecoderIfaceEPNS1_7ContextEbP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::ProgressiveDecoderIface"* %61, %"class.fxcodec::ProgressiveDecoderIface::Context"* %62, i1 zeroext %64, i32* nonnull %3) #12
  br i1 %65, label %77, label %66

66:                                               ; preds = %59
  %67 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %68 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %66
  %70 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %67 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %71 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %71, i64 1
  %73 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %72, align 8
  call void %73(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %67) #12
  br label %74

74:                                               ; preds = %69, %66
  %75 = load i32, i32* %3, align 4
  %76 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 %75, i32* %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #12
  br label %98

77:                                               ; preds = %59
  store i8 0, i8* %56, align 8
  %78 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %79 = call i32 @_ZN7fxcodec10GifDecoder10ReadHeaderEPNS_23ProgressiveDecoderIface7ContextEPiS4_S4_PP14CFX_GifPaletteS4_(%"class.fxcodec::ProgressiveDecoderIface::Context"* %78, i32* %48, i32* %49, i32* %50, %struct.CFX_GifPalette** %51, i32* %52) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #12
  br label %57

80:                                               ; preds = %57
  %81 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 23
  store i32 8, i32* %81, align 4
  %82 = load i32, i32* %48, align 8
  %83 = load i32, i32* %49, align 4
  %84 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  store i32 0, i32* %84, align 8
  %85 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  store i32 0, i32* %85, align 4
  %86 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 2
  store i32 %82, i32* %86, align 8
  %87 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  store i32 %83, i32* %87, align 4
  br label %98

88:                                               ; preds = %57
  %89 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %90 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %88
  %92 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %89 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %93 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %93, i64 1
  %95 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %94, align 8
  call void %95(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %89) #12
  br label %96

96:                                               ; preds = %88, %91
  %97 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 8, i32* %97, align 8
  br label %98

98:                                               ; preds = %74, %96, %80
  %99 = phi i1 [ true, %80 ], [ false, %96 ], [ false, %74 ]
  ret i1 %99
}

declare %"class.fxcodec::ProgressiveDecoderIface::Context"* @_ZN7fxcodec10GifDecoder11StartDecodeEPNS0_8DelegateE(%"class.fxcodec::GifDecoder::Delegate"*) local_unnamed_addr #3

declare zeroext i1 @_ZN7fxcodec10GifDecoder5InputEPNS_23ProgressiveDecoderIface7ContextEN5fxcrt9RetainPtrI15CFX_CodecMemoryEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr.10"*, %"class.fxcodec::CFX_DIBAttribute"*) local_unnamed_addr #3

declare i32 @_ZN7fxcodec10GifDecoder10ReadHeaderEPNS_23ProgressiveDecoderIface7ContextEPiS4_S4_PP14CFX_GifPaletteS4_(%"class.fxcodec::ProgressiveDecoderIface::Context"*, i32*, i32*, i32*, %struct.CFX_GifPalette**, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7fxcodec18ProgressiveDecoder14GifStartDecodeERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%"class.fxcodec::ProgressiveDecoder"*, %"class.fxcrt::RetainPtr.4"* nocapture readnone dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 32
  store i32 8, i32* %3, align 4
  %4 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %4, align 8
  %6 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %5, i64 0, i32 0, i32 1
  %7 = load i16, i16* %6, align 8
  tail call void @_ZN7fxcodec18ProgressiveDecoder14GetTransMethodE12FXDIB_FormatNS0_14FXCodec_FormatE(%"class.fxcodec::ProgressiveDecoder"* %0, i16 zeroext %7, i32 8)
  %8 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 20
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 3
  %11 = and i32 %10, -4
  %12 = sext i32 %11 to i64
  %13 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %12, i64 1) #12
  %14 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  store i8* %13, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %2
  tail call void @_Z7FX_FreePv(i8* nonnull %15) #12
  br label %18

18:                                               ; preds = %2, %17
  %19 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 17
  %20 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = sub nsw i32 %23, %25
  tail call void @_ZN7fxcodec18ProgressiveDecoder11WeightTable4CalcEii(%"class.fxcodec::ProgressiveDecoder::WeightTable"* %19, i32 %21, i32 %26)
  %27 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 18
  %28 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = sub nsw i32 %31, %33
  tail call void @_ZN7fxcodec18ProgressiveDecoder9VertTable4CalcEii(%"class.fxcodec::ProgressiveDecoder::VertTable"* %27, i32 %29, i32 %34)
  %35 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 36
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 3, i32* %36, align 8
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7fxcodec18ProgressiveDecoder17GifContinueDecodeEv(%"class.fxcodec::ProgressiveDecoder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %4 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %3, align 8
  %5 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 36
  %6 = load i64, i64* %5, align 8
  %7 = tail call i32 @_ZN7fxcodec10GifDecoder9LoadFrameEPNS_23ProgressiveDecoderIface7ContextEm(%"class.fxcodec::ProgressiveDecoderIface::Context"* %4, i64 %6) #12
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %67

9:                                                ; preds = %1
  %10 = bitcast i32* %2 to i8*
  %11 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 43
  br label %12

12:                                               ; preds = %9, %62
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #12
  store i32 4, i32* %2, align 4
  %13 = tail call %"class.fxcodec::GifProgressiveDecoder"* @_ZN7fxcodec21GifProgressiveDecoder11GetInstanceEv() #12
  %14 = getelementptr inbounds %"class.fxcodec::GifProgressiveDecoder", %"class.fxcodec::GifProgressiveDecoder"* %13, i64 0, i32 0
  %15 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %3, align 8
  %16 = load i8, i8* %11, align 8, !range !4
  %17 = icmp ne i8 %16, 0
  %18 = call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder12ReadMoreDataEPNS_23ProgressiveDecoderIfaceEPNS1_7ContextEbP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::ProgressiveDecoderIface"* %14, %"class.fxcodec::ProgressiveDecoderIface::Context"* %15, i1 zeroext %17, i32* nonnull %2) #12
  br i1 %18, label %62, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %21 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %20, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %20, align 8
  %22 = icmp eq %class.CFX_DIBitmap* %21, null
  br i1 %22, label %34, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %21, i64 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i64 %25, -1
  store i64 %26, i64* %24, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %21, i64 0, i32 0, i32 0
  %30 = bitcast %class.CFX_DIBitmap* %21 to void (%"class.fxcrt::Retainable"*)***
  %31 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %31, i64 1
  %33 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %32, align 8
  tail call void %33(%"class.fxcrt::Retainable"* nonnull %29) #12
  br label %34

34:                                               ; preds = %19, %23, %28
  %35 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %36 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %35, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %35, align 8
  %37 = icmp eq %class.IFX_SeekableReadStream* %36, null
  br i1 %37, label %59, label %38

38:                                               ; preds = %34
  %39 = bitcast %class.IFX_SeekableReadStream* %36 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr i8, i8* %40, i64 -32
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %class.IFX_SeekableReadStream* %36 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 %43
  %46 = getelementptr inbounds i8, i8* %45, i64 8
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = add nsw i64 %48, -1
  store i64 %49, i64* %47, align 8
  %50 = icmp ne i64 %49, 0
  %51 = icmp eq i8* %45, null
  %52 = or i1 %51, %50
  br i1 %52, label %59, label %53

53:                                               ; preds = %38
  %54 = bitcast i8* %45 to %"class.fxcrt::Retainable"*
  %55 = bitcast i8* %45 to void (%"class.fxcrt::Retainable"*)***
  %56 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %56, i64 1
  %58 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %57, align 8
  tail call void %58(%"class.fxcrt::Retainable"* nonnull %54) #12
  br label %59

59:                                               ; preds = %53, %38, %34
  %60 = load i32, i32* %2, align 4
  %61 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 %60, i32* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #12
  br label %113

62:                                               ; preds = %12
  store i8 0, i8* %11, align 8
  %63 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %3, align 8
  %64 = load i64, i64* %5, align 8
  %65 = tail call i32 @_ZN7fxcodec10GifDecoder9LoadFrameEPNS_23ProgressiveDecoderIface7ContextEm(%"class.fxcodec::ProgressiveDecoderIface::Context"* %63, i64 %64) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #12
  %66 = icmp eq i32 %65, 2
  br i1 %66, label %12, label %67

67:                                               ; preds = %62, %1
  %68 = phi i32 [ %7, %1 ], [ %65, %62 ]
  %69 = icmp eq i32 %68, 1
  %70 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %71 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %70, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %70, align 8
  %72 = icmp eq %class.CFX_DIBitmap* %71, null
  br i1 %72, label %84, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %71, i64 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = add nsw i64 %75, -1
  store i64 %76, i64* %74, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %84

78:                                               ; preds = %73
  %79 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %71, i64 0, i32 0, i32 0
  %80 = bitcast %class.CFX_DIBitmap* %71 to void (%"class.fxcrt::Retainable"*)***
  %81 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %81, i64 1
  %83 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %82, align 8
  tail call void %83(%"class.fxcrt::Retainable"* nonnull %79) #12
  br label %84

84:                                               ; preds = %67, %73, %78
  %85 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %86 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %85, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %85, align 8
  %87 = icmp eq %class.IFX_SeekableReadStream* %86, null
  br i1 %87, label %109, label %88

88:                                               ; preds = %84
  %89 = bitcast %class.IFX_SeekableReadStream* %86 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr i8, i8* %90, i64 -32
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %class.IFX_SeekableReadStream* %86 to i8*
  %95 = getelementptr inbounds i8, i8* %94, i64 %93
  %96 = getelementptr inbounds i8, i8* %95, i64 8
  %97 = bitcast i8* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = add nsw i64 %98, -1
  store i64 %99, i64* %97, align 8
  %100 = icmp ne i64 %99, 0
  %101 = icmp eq i8* %95, null
  %102 = or i1 %101, %100
  br i1 %102, label %109, label %103

103:                                              ; preds = %88
  %104 = bitcast i8* %95 to %"class.fxcrt::Retainable"*
  %105 = bitcast i8* %95 to void (%"class.fxcrt::Retainable"*)***
  %106 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %106, i64 1
  %108 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %107, align 8
  tail call void %108(%"class.fxcrt::Retainable"* nonnull %104) #12
  br label %109

109:                                              ; preds = %84, %88, %103
  %110 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  br i1 %69, label %111, label %112

111:                                              ; preds = %109
  store i32 4, i32* %110, align 8
  br label %113

112:                                              ; preds = %109
  store i32 -1, i32* %110, align 8
  br label %113

113:                                              ; preds = %59, %112, %111
  %114 = phi i32 [ 4, %111 ], [ -1, %112 ], [ %60, %59 ]
  ret i32 %114
}

declare i32 @_ZN7fxcodec10GifDecoder9LoadFrameEPNS_23ProgressiveDecoderIface7ContextEm(%"class.fxcodec::ProgressiveDecoderIface::Context"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec18ProgressiveDecoder16JpegReadMoreDataEP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.fxcodec::JpegProgressiveDecoder"* @_ZN7fxcodec22JpegProgressiveDecoder11GetInstanceEv() #12
  %4 = getelementptr inbounds %"class.fxcodec::JpegProgressiveDecoder", %"class.fxcodec::JpegProgressiveDecoder"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %6 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %5, align 8
  %7 = tail call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder12ReadMoreDataEPNS_23ProgressiveDecoderIfaceEPNS1_7ContextEbP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::ProgressiveDecoderIface"* %4, %"class.fxcodec::ProgressiveDecoderIface::Context"* %6, i1 zeroext false, i32* %1)
  ret i1 %7
}

declare %"class.fxcodec::JpegProgressiveDecoder"* @_ZN7fxcodec22JpegProgressiveDecoder11GetInstanceEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec18ProgressiveDecoder27JpegDetectImageTypeInBufferEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoder"*, %"class.fxcodec::CFX_DIBAttribute"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::RetainPtr.10", align 8
  %4 = alloca i32, align 4
  %5 = call %"class.fxcodec::ProgressiveDecoderIface::Context"* @_ZN7fxcodec22JpegProgressiveDecoder5StartEv() #12
  %6 = ptrtoint %"class.fxcodec::ProgressiveDecoderIface::Context"* %5 to i64
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 10
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %10 = bitcast %"class.std::__1::unique_ptr.22"* %7 to i64*
  store i64 %6, i64* %10, align 8
  %11 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %9, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %9 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %14 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %14, i64 1
  %16 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %15, align 8
  call void %16(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %9) #12
  %17 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  br label %18

18:                                               ; preds = %12, %2
  %19 = phi %"class.fxcodec::ProgressiveDecoderIface::Context"* [ %17, %12 ], [ %5, %2 ]
  %20 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %22, align 8
  br label %105

23:                                               ; preds = %18
  %24 = call %"class.fxcodec::JpegProgressiveDecoder"* @_ZN7fxcodec22JpegProgressiveDecoder11GetInstanceEv() #12
  %25 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %26 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %27 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %26, align 8
  %28 = ptrtoint %class.CFX_CodecMemory* %27 to i64
  %29 = bitcast %"class.fxcrt::RetainPtr.10"* %3 to i64*
  store i64 %28, i64* %29, align 8
  %30 = icmp eq %class.CFX_CodecMemory* %27, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %27, i64 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = add nsw i64 %33, 1
  store i64 %34, i64* %32, align 8
  br label %35

35:                                               ; preds = %23, %31
  %36 = call zeroext i1 @_ZN7fxcodec22JpegProgressiveDecoder5InputEPNS_23ProgressiveDecoderIface7ContextEN5fxcrt9RetainPtrI15CFX_CodecMemoryEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::JpegProgressiveDecoder"* %24, %"class.fxcodec::ProgressiveDecoderIface::Context"* %25, %"class.fxcrt::RetainPtr.10"* nonnull %3, %"class.fxcodec::CFX_DIBAttribute"* null) #12
  %37 = getelementptr inbounds %"class.fxcrt::RetainPtr.10", %"class.fxcrt::RetainPtr.10"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %37, align 8
  store %class.CFX_CodecMemory* null, %class.CFX_CodecMemory** %37, align 8
  %39 = icmp eq %class.CFX_CodecMemory* %38, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %38, i64 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %38, i64 0, i32 0
  %47 = bitcast %class.CFX_CodecMemory* %38 to void (%"class.fxcrt::Retainable"*)***
  %48 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, i64 1
  %50 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, align 8
  call void %50(%"class.fxcrt::Retainable"* nonnull %46) #12
  br label %51

51:                                               ; preds = %35, %40, %45
  %52 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %53 = call dereferenceable(200) [1 x %struct.__jmp_buf_tag]* @_ZN7fxcodec22JpegProgressiveDecoder11GetJumpMarkEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %52) #12
  %54 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %53, i64 0, i64 0
  %55 = call i32 @_setjmp(%struct.__jmp_buf_tag* %54) #14
  %56 = icmp eq i32 %55, -1
  %57 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  br i1 %56, label %58, label %67

58:                                               ; preds = %51
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %59 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %57, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %58
  %61 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %57 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %62 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %62, i64 1
  %64 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %63, align 8
  call void %64(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %57) #12
  br label %65

65:                                               ; preds = %58, %60
  %66 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 8, i32* %66, align 8
  br label %105

67:                                               ; preds = %51
  %68 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 20
  %69 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 21
  %70 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 22
  %71 = call i32 @_ZN7fxcodec22JpegProgressiveDecoder10ReadHeaderEPNS_23ProgressiveDecoderIface7ContextEPiS4_S4_PNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %57, i32* %68, i32* %69, i32* %70, %"class.fxcodec::CFX_DIBAttribute"* %1) #12
  %72 = bitcast i32* %4 to i8*
  %73 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  br label %74

74:                                               ; preds = %84, %67
  %75 = phi i32 [ %71, %67 ], [ %86, %84 ]
  switch i32 %75, label %95 [
    i32 2, label %76
    i32 0, label %87
  ]

76:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #12
  store i32 8, i32* %4, align 4
  %77 = call %"class.fxcodec::JpegProgressiveDecoder"* @_ZN7fxcodec22JpegProgressiveDecoder11GetInstanceEv() #12
  %78 = getelementptr inbounds %"class.fxcodec::JpegProgressiveDecoder", %"class.fxcodec::JpegProgressiveDecoder"* %77, i64 0, i32 0
  %79 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %73, align 8
  %80 = call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder12ReadMoreDataEPNS_23ProgressiveDecoderIfaceEPNS1_7ContextEbP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::ProgressiveDecoderIface"* %78, %"class.fxcodec::ProgressiveDecoderIface::Context"* %79, i1 zeroext false, i32* nonnull %4) #12
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = load i32, i32* %4, align 4
  %83 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 %82, i32* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #12
  br label %105

84:                                               ; preds = %76
  %85 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %86 = call i32 @_ZN7fxcodec22JpegProgressiveDecoder10ReadHeaderEPNS_23ProgressiveDecoderIface7ContextEPiS4_S4_PNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %85, i32* %68, i32* %69, i32* %70, %"class.fxcodec::CFX_DIBAttribute"* %1) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #12
  br label %74

87:                                               ; preds = %74
  %88 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 23
  store i32 8, i32* %88, align 4
  %89 = load i32, i32* %68, align 8
  %90 = load i32, i32* %69, align 4
  %91 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  store i32 0, i32* %91, align 8
  %92 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  store i32 0, i32* %92, align 4
  %93 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 2
  store i32 %89, i32* %93, align 8
  %94 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  store i32 %90, i32* %94, align 4
  br label %105

95:                                               ; preds = %74
  %96 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %97 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %95
  %99 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %96 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %100 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %100, i64 1
  %102 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %101, align 8
  call void %102(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %96) #12
  br label %103

103:                                              ; preds = %95, %98
  %104 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 8, i32* %104, align 8
  br label %105

105:                                              ; preds = %81, %87, %103, %65, %21
  %106 = phi i1 [ false, %65 ], [ false, %21 ], [ false, %103 ], [ true, %87 ], [ false, %81 ]
  ret i1 %106
}

declare %"class.fxcodec::ProgressiveDecoderIface::Context"* @_ZN7fxcodec22JpegProgressiveDecoder5StartEv() local_unnamed_addr #3

declare zeroext i1 @_ZN7fxcodec22JpegProgressiveDecoder5InputEPNS_23ProgressiveDecoderIface7ContextEN5fxcrt9RetainPtrI15CFX_CodecMemoryEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::JpegProgressiveDecoder"*, %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr.10"*, %"class.fxcodec::CFX_DIBAttribute"*) unnamed_addr #3

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) local_unnamed_addr #7

declare dereferenceable(200) [1 x %struct.__jmp_buf_tag]* @_ZN7fxcodec22JpegProgressiveDecoder11GetJumpMarkEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"*) local_unnamed_addr #3

declare i32 @_ZN7fxcodec22JpegProgressiveDecoder10ReadHeaderEPNS_23ProgressiveDecoderIface7ContextEPiS4_S4_PNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"*, i32*, i32*, i32*, %"class.fxcodec::CFX_DIBAttribute"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7fxcodec18ProgressiveDecoder15JpegStartDecodeERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%"class.fxcodec::ProgressiveDecoder"*, %"class.fxcrt::RetainPtr.4"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = sub nsw i32 %5, %7
  %9 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  %10 = load i32, i32* %9, align 8
  %11 = sdiv i32 %8, %10
  %12 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sub nsw i32 %13, %15
  %17 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %18 = load i32, i32* %17, align 4
  %19 = sdiv i32 %16, %18
  %20 = icmp slt i32 %19, %11
  %21 = select i1 %20, i32 %19, i32 %11
  %22 = icmp sgt i32 %21, 7
  br i1 %22, label %28, label %23

23:                                               ; preds = %2
  %24 = icmp sgt i32 %21, 3
  br i1 %24, label %28, label %25

25:                                               ; preds = %23
  %26 = icmp sgt i32 %21, 1
  %27 = select i1 %26, i32 2, i32 1
  br label %28

28:                                               ; preds = %25, %23, %2
  %29 = phi i32 [ 8, %2 ], [ 4, %23 ], [ %27, %25 ]
  %30 = sdiv i32 %7, %29
  store i32 %30, i32* %6, align 8
  %31 = sdiv i32 %5, %29
  store i32 %31, i32* %4, align 8
  %32 = sdiv i32 %15, %29
  store i32 %32, i32* %14, align 4
  %33 = sdiv i32 %13, %29
  store i32 %33, i32* %12, align 4
  %34 = icmp eq i32 %31, %30
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = add nsw i32 %30, 1
  store i32 %36, i32* %4, align 8
  br label %37

37:                                               ; preds = %35, %28
  %38 = icmp eq i32 %33, %32
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = add nsw i32 %32, 1
  store i32 %40, i32* %12, align 4
  br label %41

41:                                               ; preds = %37, %39
  %42 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %43 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %42, align 8
  %44 = call dereferenceable(200) [1 x %struct.__jmp_buf_tag]* @_ZN7fxcodec22JpegProgressiveDecoder11GetJumpMarkEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %43) #12
  %45 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %44, i64 0, i64 0
  %46 = call i32 @_setjmp(%struct.__jmp_buf_tag* %45) #14
  %47 = icmp eq i32 %46, -1
  %48 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %42, align 8
  br i1 %47, label %49, label %58

49:                                               ; preds = %41
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %42, align 8
  %50 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %48, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %48 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %53 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %53, i64 1
  %55 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %54, align 8
  call void %55(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %48) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 -1, i32* %57, align 8
  br label %158

58:                                               ; preds = %41
  %59 = call zeroext i1 @_ZN7fxcodec22JpegProgressiveDecoder13StartScanlineEPNS_23ProgressiveDecoderIface7ContextEi(%"class.fxcodec::ProgressiveDecoderIface::Context"* %48, i32 %29) #12
  br i1 %59, label %113, label %60

60:                                               ; preds = %58
  %61 = bitcast i32* %3 to i8*
  br label %62

62:                                               ; preds = %60, %110
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #12
  store i32 -1, i32* %3, align 4
  %63 = call %"class.fxcodec::JpegProgressiveDecoder"* @_ZN7fxcodec22JpegProgressiveDecoder11GetInstanceEv() #12
  %64 = getelementptr inbounds %"class.fxcodec::JpegProgressiveDecoder", %"class.fxcodec::JpegProgressiveDecoder"* %63, i64 0, i32 0
  %65 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %42, align 8
  %66 = call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder12ReadMoreDataEPNS_23ProgressiveDecoderIfaceEPNS1_7ContextEbP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::ProgressiveDecoderIface"* %64, %"class.fxcodec::ProgressiveDecoderIface::Context"* %65, i1 zeroext false, i32* nonnull %3) #12
  br i1 %66, label %110, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %69 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %68, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %68, align 8
  %70 = icmp eq %class.CFX_DIBitmap* %69, null
  br i1 %70, label %82, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %69, i64 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = add nsw i64 %73, -1
  store i64 %74, i64* %72, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %82

76:                                               ; preds = %71
  %77 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %69, i64 0, i32 0, i32 0
  %78 = bitcast %class.CFX_DIBitmap* %69 to void (%"class.fxcrt::Retainable"*)***
  %79 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %79, i64 1
  %81 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %80, align 8
  call void %81(%"class.fxcrt::Retainable"* nonnull %77) #12
  br label %82

82:                                               ; preds = %67, %71, %76
  %83 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %84 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %83, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %83, align 8
  %85 = icmp eq %class.IFX_SeekableReadStream* %84, null
  br i1 %85, label %107, label %86

86:                                               ; preds = %82
  %87 = bitcast %class.IFX_SeekableReadStream* %84 to i8**
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr i8, i8* %88, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %class.IFX_SeekableReadStream* %84 to i8*
  %93 = getelementptr inbounds i8, i8* %92, i64 %91
  %94 = getelementptr inbounds i8, i8* %93, i64 8
  %95 = bitcast i8* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = add nsw i64 %96, -1
  store i64 %97, i64* %95, align 8
  %98 = icmp ne i64 %97, 0
  %99 = icmp eq i8* %93, null
  %100 = or i1 %99, %98
  br i1 %100, label %107, label %101

101:                                              ; preds = %86
  %102 = bitcast i8* %93 to %"class.fxcrt::Retainable"*
  %103 = bitcast i8* %93 to void (%"class.fxcrt::Retainable"*)***
  %104 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %104, i64 1
  %106 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %105, align 8
  call void %106(%"class.fxcrt::Retainable"* nonnull %102) #12
  br label %107

107:                                              ; preds = %101, %86, %82
  %108 = load i32, i32* %3, align 4
  %109 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 %108, i32* %109, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #12
  br label %158

110:                                              ; preds = %62
  %111 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %42, align 8
  %112 = call zeroext i1 @_ZN7fxcodec22JpegProgressiveDecoder13StartScanlineEPNS_23ProgressiveDecoderIface7ContextEi(%"class.fxcodec::ProgressiveDecoderIface::Context"* %111, i32 %29) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #12
  br i1 %112, label %113, label %62

113:                                              ; preds = %110, %58
  %114 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 20
  %115 = load i32, i32* %114, align 8
  %116 = add nsw i32 %29, -1
  %117 = add i32 %116, %115
  %118 = sdiv i32 %117, %29
  %119 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 22
  %120 = load i32, i32* %119, align 8
  %121 = mul nsw i32 %120, %118
  %122 = add nsw i32 %121, 3
  %123 = and i32 %122, -4
  %124 = sext i32 %123 to i64
  %125 = call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %124, i64 1) #12
  %126 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  store i8* %125, i8** %126, align 8
  %128 = icmp eq i8* %127, null
  br i1 %128, label %130, label %129

129:                                              ; preds = %113
  call void @_Z7FX_FreePv(i8* nonnull %127) #12
  br label %130

130:                                              ; preds = %113, %129
  %131 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 17
  %132 = load i32, i32* %9, align 8
  %133 = load i32, i32* %4, align 4
  %134 = load i32, i32* %6, align 4
  %135 = sub nsw i32 %133, %134
  call void @_ZN7fxcodec18ProgressiveDecoder11WeightTable4CalcEii(%"class.fxcodec::ProgressiveDecoder::WeightTable"* %131, i32 %132, i32 %135)
  %136 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 18
  %137 = load i32, i32* %17, align 4
  %138 = load i32, i32* %12, align 4
  %139 = load i32, i32* %14, align 4
  %140 = sub nsw i32 %138, %139
  call void @_ZN7fxcodec18ProgressiveDecoder9VertTable4CalcEii(%"class.fxcodec::ProgressiveDecoder::VertTable"* %136, i32 %137, i32 %140)
  %141 = load i32, i32* %119, align 8
  switch i32 %141, label %142 [
    i32 1, label %145
    i32 3, label %147
    i32 4, label %149
  ]

142:                                              ; preds = %130
  %143 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 32
  %144 = load i32, i32* %143, align 4
  br label %151

145:                                              ; preds = %130
  %146 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 32
  store i32 264, i32* %146, align 4
  br label %151

147:                                              ; preds = %130
  %148 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 32
  store i32 24, i32* %148, align 4
  br label %151

149:                                              ; preds = %130
  %150 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 32
  store i32 288, i32* %150, align 4
  br label %151

151:                                              ; preds = %142, %149, %147, %145
  %152 = phi i32 [ %144, %142 ], [ 288, %149 ], [ 24, %147 ], [ 264, %145 ]
  %153 = getelementptr inbounds %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %154 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %153, align 8
  %155 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %154, i64 0, i32 0, i32 1
  %156 = load i16, i16* %155, align 8
  call void @_ZN7fxcodec18ProgressiveDecoder14GetTransMethodE12FXDIB_FormatNS0_14FXCodec_FormatE(%"class.fxcodec::ProgressiveDecoder"* %0, i16 zeroext %156, i32 %152)
  %157 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 3, i32* %157, align 8
  br label %158

158:                                              ; preds = %107, %151, %56
  %159 = phi i32 [ -1, %56 ], [ 3, %151 ], [ %108, %107 ]
  ret i32 %159
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7fxcodec18ProgressiveDecoder12GetDownScaleEv(%"class.fxcodec::ProgressiveDecoder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = sub nsw i32 %3, %5
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  %8 = load i32, i32* %7, align 8
  %9 = sdiv i32 %6, %8
  %10 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sub nsw i32 %11, %13
  %15 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %16 = load i32, i32* %15, align 4
  %17 = sdiv i32 %14, %16
  %18 = icmp slt i32 %17, %9
  %19 = select i1 %18, i32 %17, i32 %9
  %20 = icmp sgt i32 %19, 7
  br i1 %20, label %26, label %21

21:                                               ; preds = %1
  %22 = icmp sgt i32 %19, 3
  br i1 %22, label %26, label %23

23:                                               ; preds = %21
  %24 = icmp sgt i32 %19, 1
  %25 = select i1 %24, i32 2, i32 1
  br label %26

26:                                               ; preds = %23, %21, %1
  %27 = phi i32 [ 8, %1 ], [ 4, %21 ], [ %25, %23 ]
  %28 = sdiv i32 %5, %27
  store i32 %28, i32* %4, align 8
  %29 = sdiv i32 %3, %27
  store i32 %29, i32* %2, align 8
  %30 = sdiv i32 %13, %27
  store i32 %30, i32* %12, align 4
  %31 = sdiv i32 %11, %27
  store i32 %31, i32* %10, align 4
  %32 = icmp eq i32 %29, %28
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = add nsw i32 %28, 1
  store i32 %34, i32* %2, align 8
  br label %35

35:                                               ; preds = %33, %26
  %36 = icmp eq i32 %31, %30
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = add nsw i32 %30, 1
  store i32 %38, i32* %10, align 4
  br label %39

39:                                               ; preds = %37, %35
  ret i32 %27
}

declare zeroext i1 @_ZN7fxcodec22JpegProgressiveDecoder13StartScanlineEPNS_23ProgressiveDecoderIface7ContextEi(%"class.fxcodec::ProgressiveDecoderIface::Context"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7fxcodec18ProgressiveDecoder18JpegContinueDecodeEv(%"class.fxcodec::ProgressiveDecoder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %3, align 8
  %5 = call dereferenceable(200) [1 x %struct.__jmp_buf_tag]* @_ZN7fxcodec22JpegProgressiveDecoder11GetJumpMarkEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %4) #12
  %6 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %5, i64 0, i64 0
  %7 = call i32 @_setjmp(%struct.__jmp_buf_tag* %6) #14
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %21, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %11 = bitcast i32* %2 to i8*
  %12 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 32
  %13 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  %14 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 2
  %15 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 31
  %16 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  %17 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6
  %18 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  %19 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 26
  %20 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  br label %31

21:                                               ; preds = %1
  %22 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %3, align 8
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %3, align 8
  %23 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %22 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %26 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %26, i64 1
  %28 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %27, align 8
  call void %28(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %22) #12
  br label %29

29:                                               ; preds = %21, %24
  %30 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 -1, i32* %30, align 8
  br label %204

31:                                               ; preds = %9, %201
  %32 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %3, align 8
  %33 = load i8*, i8** %10, align 8
  %34 = call zeroext i1 @_ZN7fxcodec22JpegProgressiveDecoder12ReadScanlineEPNS_23ProgressiveDecoderIface7ContextEPh(%"class.fxcodec::ProgressiveDecoderIface::Context"* %32, i8* %33) #12
  br i1 %34, label %87, label %35

35:                                               ; preds = %31, %83
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #12
  store i32 4, i32* %2, align 4
  %36 = call %"class.fxcodec::JpegProgressiveDecoder"* @_ZN7fxcodec22JpegProgressiveDecoder11GetInstanceEv() #12
  %37 = getelementptr inbounds %"class.fxcodec::JpegProgressiveDecoder", %"class.fxcodec::JpegProgressiveDecoder"* %36, i64 0, i32 0
  %38 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %3, align 8
  %39 = call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder12ReadMoreDataEPNS_23ProgressiveDecoderIfaceEPNS1_7ContextEbP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::ProgressiveDecoderIface"* %37, %"class.fxcodec::ProgressiveDecoderIface::Context"* %38, i1 zeroext false, i32* nonnull %2) #12
  br i1 %39, label %83, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %42 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %41, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %41, align 8
  %43 = icmp eq %class.CFX_DIBitmap* %42, null
  br i1 %43, label %55, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %42, i64 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = add nsw i64 %46, -1
  store i64 %47, i64* %45, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %55

49:                                               ; preds = %44
  %50 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %42, i64 0, i32 0, i32 0
  %51 = bitcast %class.CFX_DIBitmap* %42 to void (%"class.fxcrt::Retainable"*)***
  %52 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %52, i64 1
  %54 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %53, align 8
  call void %54(%"class.fxcrt::Retainable"* nonnull %50) #12
  br label %55

55:                                               ; preds = %40, %44, %49
  %56 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %57 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %56, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %56, align 8
  %58 = icmp eq %class.IFX_SeekableReadStream* %57, null
  br i1 %58, label %80, label %59

59:                                               ; preds = %55
  %60 = bitcast %class.IFX_SeekableReadStream* %57 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr i8, i8* %61, i64 -32
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %class.IFX_SeekableReadStream* %57 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = add nsw i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = icmp ne i64 %70, 0
  %72 = icmp eq i8* %66, null
  %73 = or i1 %72, %71
  br i1 %73, label %80, label %74

74:                                               ; preds = %59
  %75 = bitcast i8* %66 to %"class.fxcrt::Retainable"*
  %76 = bitcast i8* %66 to void (%"class.fxcrt::Retainable"*)***
  %77 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %77, i64 1
  %79 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %78, align 8
  call void %79(%"class.fxcrt::Retainable"* nonnull %75) #12
  br label %80

80:                                               ; preds = %74, %59, %55
  %81 = load i32, i32* %2, align 4
  %82 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 %81, i32* %82, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #12
  br label %204

83:                                               ; preds = %35
  %84 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %3, align 8
  %85 = load i8*, i8** %10, align 8
  %86 = call zeroext i1 @_ZN7fxcodec22JpegProgressiveDecoder12ReadScanlineEPNS_23ProgressiveDecoderIface7ContextEPh(%"class.fxcodec::ProgressiveDecoderIface::Context"* %84, i8* %85) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #12
  br i1 %86, label %87, label %35

87:                                               ; preds = %83, %31
  %88 = load i32, i32* %12, align 4
  %89 = icmp eq i32 %88, 24
  br i1 %89, label %90, label %133

90:                                               ; preds = %87
  %91 = load i8*, i8** %10, align 8
  %92 = load i32, i32* %13, align 8
  %93 = mul nsw i32 %92, 3
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %91, i64 %94
  %96 = load i32, i32* %14, align 4
  %97 = icmp ne i8* %95, null
  %98 = icmp sgt i32 %96, %92
  %99 = and i1 %98, %97
  br i1 %99, label %100, label %133

100:                                              ; preds = %90
  %101 = sub i32 %96, %92
  %102 = and i32 %101, 1
  %103 = add i32 %92, 1
  %104 = icmp eq i32 %96, %103
  br i1 %104, label %124, label %105

105:                                              ; preds = %100
  %106 = sub i32 %101, %102
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ 0, %105 ], [ %121, %107 ]
  %109 = phi i32 [ %106, %105 ], [ %122, %107 ]
  %110 = getelementptr inbounds i8, i8* %95, i64 %108
  %111 = load i8, i8* %110, align 1
  %112 = add nuw nsw i64 %108, 2
  %113 = getelementptr inbounds i8, i8* %95, i64 %112
  %114 = load i8, i8* %113, align 1
  store i8 %114, i8* %110, align 1
  store i8 %111, i8* %113, align 1
  %115 = add nuw nsw i64 %108, 3
  %116 = getelementptr inbounds i8, i8* %95, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = add nuw nsw i64 %108, 5
  %119 = getelementptr inbounds i8, i8* %95, i64 %118
  %120 = load i8, i8* %119, align 1
  store i8 %120, i8* %116, align 1
  store i8 %117, i8* %119, align 1
  %121 = add nuw nsw i64 %108, 6
  %122 = add i32 %109, -2
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %107

124:                                              ; preds = %107, %100
  %125 = phi i64 [ 0, %100 ], [ %121, %107 ]
  %126 = icmp eq i32 %102, 0
  br i1 %126, label %133, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds i8, i8* %95, i64 %125
  %129 = load i8, i8* %128, align 1
  %130 = add nuw nsw i64 %125, 2
  %131 = getelementptr inbounds i8, i8* %95, i64 %130
  %132 = load i8, i8* %131, align 1
  store i8 %132, i8* %128, align 1
  store i8 %129, i8* %131, align 1
  br label %133

133:                                              ; preds = %127, %124, %90, %87
  %134 = load i32, i32* %15, align 8
  %135 = load i32, i32* %16, align 4
  %136 = icmp slt i32 %134, %135
  br i1 %136, label %179, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.4"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %139 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %138, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %138, align 8
  %140 = icmp eq %class.CFX_DIBitmap* %139, null
  br i1 %140, label %152, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %139, i64 0, i32 0, i32 0, i32 1
  %143 = load i64, i64* %142, align 8
  %144 = add nsw i64 %143, -1
  store i64 %144, i64* %142, align 8
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %152

146:                                              ; preds = %141
  %147 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %139, i64 0, i32 0, i32 0
  %148 = bitcast %class.CFX_DIBitmap* %139 to void (%"class.fxcrt::Retainable"*)***
  %149 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %149, i64 1
  %151 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %150, align 8
  call void %151(%"class.fxcrt::Retainable"* nonnull %147) #12
  br label %152

152:                                              ; preds = %137, %141, %146
  %153 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %154 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %153, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %153, align 8
  %155 = icmp eq %class.IFX_SeekableReadStream* %154, null
  br i1 %155, label %177, label %156

156:                                              ; preds = %152
  %157 = bitcast %class.IFX_SeekableReadStream* %154 to i8**
  %158 = load i8*, i8** %157, align 8
  %159 = getelementptr i8, i8* %158, i64 -32
  %160 = bitcast i8* %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %class.IFX_SeekableReadStream* %154 to i8*
  %163 = getelementptr inbounds i8, i8* %162, i64 %161
  %164 = getelementptr inbounds i8, i8* %163, i64 8
  %165 = bitcast i8* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = add nsw i64 %166, -1
  store i64 %167, i64* %165, align 8
  %168 = icmp ne i64 %167, 0
  %169 = icmp eq i8* %163, null
  %170 = or i1 %169, %168
  br i1 %170, label %177, label %171

171:                                              ; preds = %156
  %172 = bitcast i8* %163 to %"class.fxcrt::Retainable"*
  %173 = bitcast i8* %163 to void (%"class.fxcrt::Retainable"*)***
  %174 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %174, i64 1
  %176 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %175, align 8
  call void %176(%"class.fxcrt::Retainable"* nonnull %172) #12
  br label %177

177:                                              ; preds = %152, %156, %171
  %178 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 4, i32* %178, align 8
  br label %204

179:                                              ; preds = %133
  %180 = load i32, i32* %12, align 4
  %181 = load i32, i32* %18, align 4
  %182 = load i32, i32* %19, align 4
  %183 = load i32, i32* %20, align 4
  %184 = icmp slt i32 %134, %181
  br i1 %184, label %201, label %185

185:                                              ; preds = %179
  %186 = sub nsw i32 %135, %181
  %187 = sitofp i32 %183 to double
  %188 = sitofp i32 %186 to double
  %189 = fdiv double %187, %188
  %190 = sub nsw i32 %134, %181
  %191 = sitofp i32 %190 to double
  %192 = fmul double %189, %191
  %193 = fptosi double %192 to i32
  %194 = add nsw i32 %182, %193
  %195 = add nsw i32 %183, %182
  %196 = icmp slt i32 %194, %195
  br i1 %196, label %197, label %201

197:                                              ; preds = %185
  %198 = load i8*, i8** %10, align 8
  call void @_ZN7fxcodec18ProgressiveDecoder16ReSampleScanlineERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiPhNS0_14FXCodec_FormatE(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* dereferenceable(8) %17, i32 %194, i8* %198, i32 %180) #12
  %199 = fcmp ogt double %189, 1.000000e+00
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZN7fxcodec18ProgressiveDecoder12ResampleVertERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEdi(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* dereferenceable(8) %17, double %189, i32 %194) #12
  br label %201

201:                                              ; preds = %200, %197, %185, %179
  %202 = load i32, i32* %15, align 8
  %203 = add nsw i32 %202, 1
  store i32 %203, i32* %15, align 8
  br label %31

204:                                              ; preds = %80, %177, %29
  %205 = phi i32 [ -1, %29 ], [ %81, %80 ], [ 4, %177 ]
  ret i32 %205
}

declare zeroext i1 @_ZN7fxcodec22JpegProgressiveDecoder12ReadScanlineEPNS_23ProgressiveDecoderIface7ContextEPh(%"class.fxcodec::ProgressiveDecoderIface::Context"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder8ResampleERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiPhNS0_14FXCodec_FormatE(%"class.fxcodec::ProgressiveDecoder"* nocapture readonly, %"class.fxcrt::RetainPtr.4"* nocapture readonly dereferenceable(8), i32, i8* nocapture readnone, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 26
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %7, %2
  br i1 %12, label %32, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = sub nsw i32 %15, %7
  %17 = sitofp i32 %11 to double
  %18 = sitofp i32 %16 to double
  %19 = fdiv double %17, %18
  %20 = sub nsw i32 %2, %7
  %21 = sitofp i32 %20 to double
  %22 = fmul double %19, %21
  %23 = fptosi double %22 to i32
  %24 = add nsw i32 %9, %23
  %25 = add nsw i32 %11, %9
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %27, label %32

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZN7fxcodec18ProgressiveDecoder16ReSampleScanlineERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiPhNS0_14FXCodec_FormatE(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* dereferenceable(8) %1, i32 %24, i8* %29, i32 %4)
  %30 = fcmp ogt double %19, 1.000000e+00
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  tail call void @_ZN7fxcodec18ProgressiveDecoder12ResampleVertERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEdi(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* dereferenceable(8) %1, double %19, i32 %24)
  br label %32

32:                                               ; preds = %13, %5, %27, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec18ProgressiveDecoder26PngDetectImageTypeInBufferEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoder"*, %"class.fxcodec::CFX_DIBAttribute"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::RetainPtr.10", align 8
  %4 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 2
  %5 = tail call %"class.fxcodec::ProgressiveDecoderIface::Context"* @_ZN7fxcodec10PngDecoder11StartDecodeEPNS0_8DelegateE(%"class.fxcodec::PngDecoder::Delegate"* %4) #12
  %6 = ptrtoint %"class.fxcodec::ProgressiveDecoderIface::Context"* %5 to i64
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 13
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %10 = bitcast %"class.std::__1::unique_ptr.22"* %7 to i64*
  store i64 %6, i64* %10, align 8
  %11 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %9, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %9 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %14 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %14, i64 1
  %16 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %15, align 8
  tail call void %16(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %9) #12
  %17 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  br label %18

18:                                               ; preds = %12, %2
  %19 = phi %"class.fxcodec::ProgressiveDecoderIface::Context"* [ %17, %12 ], [ %5, %2 ]
  %20 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %19, null
  br i1 %20, label %139, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 7
  %23 = getelementptr inbounds %"class.fxcrt::RetainPtr.10", %"class.fxcrt::RetainPtr.10"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.fxcrt::RetainPtr.10"* %3 to i64*
  %25 = getelementptr inbounds %"class.fxcrt::RetainPtr.10", %"class.fxcrt::RetainPtr.10"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 15
  %28 = bitcast %"class.fxcrt::RetainPtr.10"* %22 to i64*
  br label %29

29:                                               ; preds = %21, %123
  %30 = phi %"class.fxcodec::ProgressiveDecoderIface::Context"* [ %19, %21 ], [ %126, %123 ]
  %31 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %23, align 8
  %32 = ptrtoint %class.CFX_CodecMemory* %31 to i64
  store i64 %32, i64* %24, align 8
  %33 = icmp eq %class.CFX_CodecMemory* %31, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %31, i64 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = add nsw i64 %36, 1
  store i64 %37, i64* %35, align 8
  br label %38

38:                                               ; preds = %29, %34
  %39 = call zeroext i1 @_ZN7fxcodec10PngDecoder14ContinueDecodeEPNS_23ProgressiveDecoderIface7ContextEN5fxcrt9RetainPtrI15CFX_CodecMemoryEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %30, %"class.fxcrt::RetainPtr.10"* nonnull %3, %"class.fxcodec::CFX_DIBAttribute"* %1) #12
  %40 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %25, align 8
  store %class.CFX_CodecMemory* null, %class.CFX_CodecMemory** %25, align 8
  %41 = icmp eq %class.CFX_CodecMemory* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %40, i64 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = add nsw i64 %44, -1
  store i64 %45, i64* %43, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %40, i64 0, i32 0
  %49 = bitcast %class.CFX_CodecMemory* %40 to void (%"class.fxcrt::Retainable"*)***
  %50 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, i64 1
  %52 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, align 8
  call void %52(%"class.fxcrt::Retainable"* nonnull %48) #12
  br label %53

53:                                               ; preds = %38, %42, %47
  br i1 %39, label %54, label %127

54:                                               ; preds = %53
  %55 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %26, align 8
  %56 = bitcast %class.IFX_SeekableReadStream* %55 to i8**
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr i8, i8* %57, i64 -40
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %class.IFX_SeekableReadStream* %55 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  %63 = bitcast i8* %62 to %class.IFX_StreamWithSize*
  %64 = bitcast i8* %62 to i64 (%class.IFX_StreamWithSize*)***
  %65 = load i64 (%class.IFX_StreamWithSize*)**, i64 (%class.IFX_StreamWithSize*)*** %64, align 8
  %66 = load i64 (%class.IFX_StreamWithSize*)*, i64 (%class.IFX_StreamWithSize*)** %65, align 8
  %67 = call i64 %66(%class.IFX_StreamWithSize* %63) #12
  %68 = trunc i64 %67 to i32
  %69 = load i32, i32* %27, align 8
  %70 = sub i32 %68, %69
  %71 = icmp ult i32 %70, 4096
  %72 = select i1 %71, i32 %70, i32 4096
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %82

74:                                               ; preds = %54
  %75 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %76 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %75, null
  br i1 %76, label %139, label %77

77:                                               ; preds = %74
  %78 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %75 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %79 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %79, i64 1
  %81 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %80, align 8
  call void %81(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %75) #12
  br label %139

82:                                               ; preds = %54
  %83 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %23, align 8
  %84 = icmp eq %class.CFX_CodecMemory* %83, null
  %85 = zext i32 %72 to i64
  br i1 %84, label %111, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %83, i64 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = icmp ult i64 %88, %85
  br i1 %89, label %90, label %111

90:                                               ; preds = %86
  %91 = call i8* @_Znwm(i64 40) #13, !noalias !21
  %92 = bitcast i8* %91 to %class.CFX_CodecMemory*
  call void @_ZN15CFX_CodecMemoryC1Em(%class.CFX_CodecMemory* nonnull %92, i64 %85) #12, !noalias !21
  %93 = ptrtoint i8* %91 to i64
  %94 = getelementptr inbounds i8, i8* %91, i64 8
  %95 = bitcast i8* %94 to i64*
  %96 = load i64, i64* %95, align 8, !noalias !21
  %97 = add nsw i64 %96, 1
  store i64 %97, i64* %95, align 8, !noalias !21
  %98 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %23, align 8
  store i64 %93, i64* %28, align 8
  %99 = icmp eq %class.CFX_CodecMemory* %98, null
  br i1 %99, label %111, label %100

100:                                              ; preds = %90
  %101 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %98, i64 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = add nsw i64 %102, -1
  store i64 %103, i64* %101, align 8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %111

105:                                              ; preds = %100
  %106 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %98, i64 0, i32 0
  %107 = bitcast %class.CFX_CodecMemory* %98 to void (%"class.fxcrt::Retainable"*)***
  %108 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %108, i64 1
  %110 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %109, align 8
  call void %110(%"class.fxcrt::Retainable"* nonnull %106) #12
  br label %111

111:                                              ; preds = %82, %90, %100, %105, %86
  %112 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %26, align 8
  %113 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %23, align 8
  %114 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %113, i64 0, i32 1, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = load i32, i32* %27, align 8
  %117 = zext i32 %116 to i64
  %118 = bitcast %class.IFX_SeekableReadStream* %112 to i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)***
  %119 = load i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)**, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*** %118, align 8
  %120 = getelementptr inbounds i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)** %119, i64 4
  %121 = load i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)** %120, align 8
  %122 = call zeroext i1 %121(%class.IFX_SeekableReadStream* %112, i8* %115, i64 %117, i64 %85) #12
  br i1 %122, label %123, label %139

123:                                              ; preds = %111
  %124 = load i32, i32* %27, align 8
  %125 = add i32 %124, %72
  store i32 %125, i32* %27, align 8
  %126 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  br label %29

127:                                              ; preds = %53
  %128 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %129 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %128, null
  br i1 %129, label %135, label %130

130:                                              ; preds = %127
  %131 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %128 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %132 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %132, i64 1
  %134 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %133, align 8
  call void %134(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %128) #12
  br label %135

135:                                              ; preds = %127, %130
  %136 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 33
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %111, %135, %77, %74, %18
  %140 = phi i32 [ 5, %18 ], [ 8, %74 ], [ 8, %77 ], [ 8, %135 ], [ 6, %111 ]
  %141 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 %140, i32* %141, align 8
  br label %142

142:                                              ; preds = %139, %135
  %143 = phi i1 [ true, %135 ], [ false, %139 ]
  ret i1 %143
}

declare %"class.fxcodec::ProgressiveDecoderIface::Context"* @_ZN7fxcodec10PngDecoder11StartDecodeEPNS0_8DelegateE(%"class.fxcodec::PngDecoder::Delegate"*) local_unnamed_addr #3

declare zeroext i1 @_ZN7fxcodec10PngDecoder14ContinueDecodeEPNS_23ProgressiveDecoderIface7ContextEN5fxcrt9RetainPtrI15CFX_CodecMemoryEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr.10"*, %"class.fxcodec::CFX_DIBAttribute"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7fxcodec18ProgressiveDecoder14PngStartDecodeERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%"class.fxcodec::ProgressiveDecoder"*, %"class.fxcrt::RetainPtr.4"* nocapture readnone dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 2
  %4 = tail call %"class.fxcodec::ProgressiveDecoderIface::Context"* @_ZN7fxcodec10PngDecoder11StartDecodeEPNS0_8DelegateE(%"class.fxcodec::PngDecoder::Delegate"* %3) #12
  %5 = ptrtoint %"class.fxcodec::ProgressiveDecoderIface::Context"* %4 to i64
  %6 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 13
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %7, align 8
  %9 = bitcast %"class.std::__1::unique_ptr.22"* %6 to i64*
  store i64 %5, i64* %9, align 8
  %10 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %8, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %8 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %13 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %13, i64 1
  %15 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %14, align 8
  tail call void %15(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %8) #12
  %16 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %7, align 8
  br label %17

17:                                               ; preds = %11, %2
  %18 = phi %"class.fxcodec::ProgressiveDecoderIface::Context"* [ %16, %11 ], [ %4, %2 ]
  %19 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %18, null
  br i1 %19, label %20, label %60

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %22 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %21, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %21, align 8
  %23 = icmp eq %class.CFX_DIBitmap* %22, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %22, i64 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = add nsw i64 %26, -1
  store i64 %27, i64* %25, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %24
  %30 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %22, i64 0, i32 0, i32 0
  %31 = bitcast %class.CFX_DIBitmap* %22 to void (%"class.fxcrt::Retainable"*)***
  %32 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %32, i64 1
  %34 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %33, align 8
  tail call void %34(%"class.fxcrt::Retainable"* nonnull %30) #12
  br label %35

35:                                               ; preds = %20, %24, %29
  %36 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %37 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %36, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %36, align 8
  %38 = icmp eq %class.IFX_SeekableReadStream* %37, null
  br i1 %38, label %142, label %39

39:                                               ; preds = %35
  %40 = bitcast %class.IFX_SeekableReadStream* %37 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr i8, i8* %41, i64 -32
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %class.IFX_SeekableReadStream* %37 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 %44
  %47 = getelementptr inbounds i8, i8* %46, i64 8
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = add nsw i64 %49, -1
  store i64 %50, i64* %48, align 8
  %51 = icmp ne i64 %50, 0
  %52 = icmp eq i8* %46, null
  %53 = or i1 %52, %51
  br i1 %53, label %142, label %54

54:                                               ; preds = %39
  %55 = bitcast i8* %46 to %"class.fxcrt::Retainable"*
  %56 = bitcast i8* %46 to void (%"class.fxcrt::Retainable"*)***
  %57 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %57, i64 1
  %59 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %58, align 8
  tail call void %59(%"class.fxcrt::Retainable"* nonnull %55) #12
  br label %142

60:                                               ; preds = %17
  %61 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 15
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %63 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %62, align 8
  %64 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %63, i64 0, i32 0, i32 1
  %65 = load i16, i16* %64, align 8
  switch i16 %65, label %68 [
    i16 264, label %106
    i16 8, label %106
    i16 24, label %66
    i16 32, label %67
    i16 544, label %67
  ]

66:                                               ; preds = %60
  br label %106

67:                                               ; preds = %60, %60
  br label %106

68:                                               ; preds = %60
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %62, align 8
  %69 = icmp eq %class.CFX_DIBitmap* %63, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %63, i64 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = add nsw i64 %72, -1
  store i64 %73, i64* %71, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %81

75:                                               ; preds = %70
  %76 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %63, i64 0, i32 0, i32 0
  %77 = bitcast %class.CFX_DIBitmap* %63 to void (%"class.fxcrt::Retainable"*)***
  %78 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %78, i64 1
  %80 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %79, align 8
  tail call void %80(%"class.fxcrt::Retainable"* nonnull %76) #12
  br label %81

81:                                               ; preds = %68, %70, %75
  %82 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %83 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %82, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %82, align 8
  %84 = icmp eq %class.IFX_SeekableReadStream* %83, null
  br i1 %84, label %142, label %85

85:                                               ; preds = %81
  %86 = bitcast %class.IFX_SeekableReadStream* %83 to i8**
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr i8, i8* %87, i64 -32
  %89 = bitcast i8* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %class.IFX_SeekableReadStream* %83 to i8*
  %92 = getelementptr inbounds i8, i8* %91, i64 %90
  %93 = getelementptr inbounds i8, i8* %92, i64 8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = add nsw i64 %95, -1
  store i64 %96, i64* %94, align 8
  %97 = icmp ne i64 %96, 0
  %98 = icmp eq i8* %92, null
  %99 = or i1 %98, %97
  br i1 %99, label %142, label %100

100:                                              ; preds = %85
  %101 = bitcast i8* %92 to %"class.fxcrt::Retainable"*
  %102 = bitcast i8* %92 to void (%"class.fxcrt::Retainable"*)***
  %103 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %103, i64 1
  %105 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %104, align 8
  tail call void %105(%"class.fxcrt::Retainable"* nonnull %101) #12
  br label %142

106:                                              ; preds = %60, %60, %67, %66
  %107 = phi i32 [ 4, %67 ], [ 3, %66 ], [ 1, %60 ], [ 1, %60 ]
  %108 = phi i32 [ 544, %67 ], [ 24, %66 ], [ 264, %60 ], [ 264, %60 ]
  %109 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 22
  store i32 %107, i32* %109, align 8
  %110 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 32
  store i32 %108, i32* %110, align 4
  %111 = load i16, i16* %64, align 8
  tail call void @_ZN7fxcodec18ProgressiveDecoder14GetTransMethodE12FXDIB_FormatNS0_14FXCodec_FormatE(%"class.fxcodec::ProgressiveDecoder"* %0, i16 zeroext %111, i32 %108)
  %112 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 20
  %113 = load i32, i32* %112, align 8
  %114 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 22
  %115 = load i32, i32* %114, align 8
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i32 %116, 3
  %118 = and i32 %117, -4
  %119 = sext i32 %118 to i64
  %120 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %119, i64 1) #12
  %121 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  store i8* %120, i8** %121, align 8
  %123 = icmp eq i8* %122, null
  br i1 %123, label %125, label %124

124:                                              ; preds = %106
  tail call void @_Z7FX_FreePv(i8* nonnull %122) #12
  br label %125

125:                                              ; preds = %106, %124
  %126 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 19
  %127 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = sub nsw i32 %130, %132
  tail call void @_ZN7fxcodec18ProgressiveDecoder9HorzTable4CalcEii(%"class.fxcodec::ProgressiveDecoder::HorzTable"* %126, i32 %128, i32 %133)
  %134 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 18
  %135 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = sub nsw i32 %138, %140
  tail call void @_ZN7fxcodec18ProgressiveDecoder9VertTable4CalcEii(%"class.fxcodec::ProgressiveDecoder::VertTable"* %134, i32 %136, i32 %141)
  br label %142

142:                                              ; preds = %100, %85, %81, %54, %39, %35, %125
  %143 = phi i32 [ 3, %125 ], [ 5, %35 ], [ 5, %39 ], [ 5, %54 ], [ 9, %81 ], [ 9, %85 ], [ 9, %100 ]
  %144 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 %143, i32* %144, align 8
  ret i32 %143
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7fxcodec18ProgressiveDecoder17PngContinueDecodeEv(%"class.fxcodec::ProgressiveDecoder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::RetainPtr.10", align 8
  %3 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 15
  %5 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 7
  %6 = getelementptr inbounds %"class.fxcrt::RetainPtr.10", %"class.fxcrt::RetainPtr.10"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.fxcrt::RetainPtr.10"* %5 to i64*
  %8 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %9 = bitcast %"class.fxcrt::RetainPtr.10"* %2 to i64*
  %10 = getelementptr inbounds %"class.fxcrt::RetainPtr.10", %"class.fxcrt::RetainPtr.10"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %184, %1
  %12 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %3, align 8
  %13 = bitcast %class.IFX_SeekableReadStream* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 -40
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %class.IFX_SeekableReadStream* %12 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %17
  %20 = bitcast i8* %19 to %class.IFX_StreamWithSize*
  %21 = bitcast i8* %19 to i64 (%class.IFX_StreamWithSize*)***
  %22 = load i64 (%class.IFX_StreamWithSize*)**, i64 (%class.IFX_StreamWithSize*)*** %21, align 8
  %23 = load i64 (%class.IFX_StreamWithSize*)*, i64 (%class.IFX_StreamWithSize*)** %22, align 8
  %24 = call i64 %23(%class.IFX_StreamWithSize* %20) #12
  %25 = trunc i64 %24 to i32
  %26 = load i32, i32* %4, align 8
  %27 = sub i32 %25, %26
  %28 = icmp ult i32 %27, 4096
  %29 = select i1 %28, i32 %27, i32 4096
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %78

31:                                               ; preds = %11
  %32 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %33 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %32 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %36 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %36, i64 1
  %38 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %37, align 8
  call void %38(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %32) #12
  br label %39

39:                                               ; preds = %31, %34
  %40 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %41 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %40, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %40, align 8
  %42 = icmp eq %class.CFX_DIBitmap* %41, null
  br i1 %42, label %54, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %41, i64 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = add nsw i64 %45, -1
  store i64 %46, i64* %44, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %43
  %49 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %41, i64 0, i32 0, i32 0
  %50 = bitcast %class.CFX_DIBitmap* %41 to void (%"class.fxcrt::Retainable"*)***
  %51 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, i64 1
  %53 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %52, align 8
  call void %53(%"class.fxcrt::Retainable"* nonnull %49) #12
  br label %54

54:                                               ; preds = %39, %43, %48
  %55 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %3, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %3, align 8
  %56 = icmp eq %class.IFX_SeekableReadStream* %55, null
  br i1 %56, label %224, label %57

57:                                               ; preds = %54
  %58 = bitcast %class.IFX_SeekableReadStream* %55 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr i8, i8* %59, i64 -32
  %61 = bitcast i8* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %class.IFX_SeekableReadStream* %55 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 %62
  %65 = getelementptr inbounds i8, i8* %64, i64 8
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = add nsw i64 %67, -1
  store i64 %68, i64* %66, align 8
  %69 = icmp ne i64 %68, 0
  %70 = icmp eq i8* %64, null
  %71 = or i1 %70, %69
  br i1 %71, label %224, label %72

72:                                               ; preds = %57
  %73 = bitcast i8* %64 to %"class.fxcrt::Retainable"*
  %74 = bitcast i8* %64 to void (%"class.fxcrt::Retainable"*)***
  %75 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %75, i64 1
  %77 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %76, align 8
  call void %77(%"class.fxcrt::Retainable"* nonnull %73) #12
  br label %224

78:                                               ; preds = %11
  %79 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %6, align 8
  %80 = icmp eq %class.CFX_CodecMemory* %79, null
  %81 = zext i32 %29 to i64
  br i1 %80, label %107, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %79, i64 0, i32 2
  %84 = load i64, i64* %83, align 8
  %85 = icmp ult i64 %84, %81
  br i1 %85, label %86, label %107

86:                                               ; preds = %82
  %87 = call i8* @_Znwm(i64 40) #13, !noalias !24
  %88 = bitcast i8* %87 to %class.CFX_CodecMemory*
  call void @_ZN15CFX_CodecMemoryC1Em(%class.CFX_CodecMemory* nonnull %88, i64 %81) #12, !noalias !24
  %89 = ptrtoint i8* %87 to i64
  %90 = getelementptr inbounds i8, i8* %87, i64 8
  %91 = bitcast i8* %90 to i64*
  %92 = load i64, i64* %91, align 8, !noalias !24
  %93 = add nsw i64 %92, 1
  store i64 %93, i64* %91, align 8, !noalias !24
  %94 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %6, align 8
  store i64 %89, i64* %7, align 8
  %95 = icmp eq %class.CFX_CodecMemory* %94, null
  br i1 %95, label %107, label %96

96:                                               ; preds = %86
  %97 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %94, i64 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = add nsw i64 %98, -1
  store i64 %99, i64* %97, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %107

101:                                              ; preds = %96
  %102 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %94, i64 0, i32 0
  %103 = bitcast %class.CFX_CodecMemory* %94 to void (%"class.fxcrt::Retainable"*)***
  %104 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %104, i64 1
  %106 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %105, align 8
  call void %106(%"class.fxcrt::Retainable"* nonnull %102) #12
  br label %107

107:                                              ; preds = %78, %86, %96, %101, %82
  %108 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %3, align 8
  %109 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %6, align 8
  %110 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %109, i64 0, i32 1, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = load i32, i32* %4, align 8
  %113 = zext i32 %112 to i64
  %114 = bitcast %class.IFX_SeekableReadStream* %108 to i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)***
  %115 = load i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)**, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*** %114, align 8
  %116 = getelementptr inbounds i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)** %115, i64 4
  %117 = load i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)** %116, align 8
  %118 = call zeroext i1 %117(%class.IFX_SeekableReadStream* %108, i8* %111, i64 %113, i64 %81) #12
  br i1 %118, label %158, label %119

119:                                              ; preds = %107
  %120 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %121 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %120, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %120, align 8
  %122 = icmp eq %class.CFX_DIBitmap* %121, null
  br i1 %122, label %134, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %121, i64 0, i32 0, i32 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = add nsw i64 %125, -1
  store i64 %126, i64* %124, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %134

128:                                              ; preds = %123
  %129 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %121, i64 0, i32 0, i32 0
  %130 = bitcast %class.CFX_DIBitmap* %121 to void (%"class.fxcrt::Retainable"*)***
  %131 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %131, i64 1
  %133 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %132, align 8
  call void %133(%"class.fxcrt::Retainable"* nonnull %129) #12
  br label %134

134:                                              ; preds = %119, %123, %128
  %135 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %3, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %3, align 8
  %136 = icmp eq %class.IFX_SeekableReadStream* %135, null
  br i1 %136, label %224, label %137

137:                                              ; preds = %134
  %138 = bitcast %class.IFX_SeekableReadStream* %135 to i8**
  %139 = load i8*, i8** %138, align 8
  %140 = getelementptr i8, i8* %139, i64 -32
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %class.IFX_SeekableReadStream* %135 to i8*
  %144 = getelementptr inbounds i8, i8* %143, i64 %142
  %145 = getelementptr inbounds i8, i8* %144, i64 8
  %146 = bitcast i8* %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = add nsw i64 %147, -1
  store i64 %148, i64* %146, align 8
  %149 = icmp ne i64 %148, 0
  %150 = icmp eq i8* %144, null
  %151 = or i1 %150, %149
  br i1 %151, label %224, label %152

152:                                              ; preds = %137
  %153 = bitcast i8* %144 to %"class.fxcrt::Retainable"*
  %154 = bitcast i8* %144 to void (%"class.fxcrt::Retainable"*)***
  %155 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %155, i64 1
  %157 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %156, align 8
  call void %157(%"class.fxcrt::Retainable"* nonnull %153) #12
  br label %224

158:                                              ; preds = %107
  %159 = load i32, i32* %4, align 8
  %160 = add i32 %159, %29
  store i32 %160, i32* %4, align 8
  %161 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %162 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %6, align 8
  %163 = ptrtoint %class.CFX_CodecMemory* %162 to i64
  store i64 %163, i64* %9, align 8
  %164 = icmp eq %class.CFX_CodecMemory* %162, null
  br i1 %164, label %169, label %165

165:                                              ; preds = %158
  %166 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %162, i64 0, i32 0, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = add nsw i64 %167, 1
  store i64 %168, i64* %166, align 8
  br label %169

169:                                              ; preds = %158, %165
  %170 = call zeroext i1 @_ZN7fxcodec10PngDecoder14ContinueDecodeEPNS_23ProgressiveDecoderIface7ContextEN5fxcrt9RetainPtrI15CFX_CodecMemoryEEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %161, %"class.fxcrt::RetainPtr.10"* nonnull %2, %"class.fxcodec::CFX_DIBAttribute"* null) #12
  %171 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %10, align 8
  store %class.CFX_CodecMemory* null, %class.CFX_CodecMemory** %10, align 8
  %172 = icmp eq %class.CFX_CodecMemory* %171, null
  br i1 %172, label %184, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %171, i64 0, i32 0, i32 1
  %175 = load i64, i64* %174, align 8
  %176 = add nsw i64 %175, -1
  store i64 %176, i64* %174, align 8
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %184

178:                                              ; preds = %173
  %179 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %171, i64 0, i32 0
  %180 = bitcast %class.CFX_CodecMemory* %171 to void (%"class.fxcrt::Retainable"*)***
  %181 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %181, i64 1
  %183 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %182, align 8
  call void %183(%"class.fxcrt::Retainable"* nonnull %179) #12
  br label %184

184:                                              ; preds = %169, %173, %178
  br i1 %170, label %11, label %185

185:                                              ; preds = %184
  %186 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %187 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %186, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %186, align 8
  %188 = icmp eq %class.CFX_DIBitmap* %187, null
  br i1 %188, label %200, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %187, i64 0, i32 0, i32 0, i32 1
  %191 = load i64, i64* %190, align 8
  %192 = add nsw i64 %191, -1
  store i64 %192, i64* %190, align 8
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %200

194:                                              ; preds = %189
  %195 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %187, i64 0, i32 0, i32 0
  %196 = bitcast %class.CFX_DIBitmap* %187 to void (%"class.fxcrt::Retainable"*)***
  %197 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %197, i64 1
  %199 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %198, align 8
  call void %199(%"class.fxcrt::Retainable"* nonnull %195) #12
  br label %200

200:                                              ; preds = %185, %189, %194
  %201 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %3, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %3, align 8
  %202 = icmp eq %class.IFX_SeekableReadStream* %201, null
  br i1 %202, label %224, label %203

203:                                              ; preds = %200
  %204 = bitcast %class.IFX_SeekableReadStream* %201 to i8**
  %205 = load i8*, i8** %204, align 8
  %206 = getelementptr i8, i8* %205, i64 -32
  %207 = bitcast i8* %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = bitcast %class.IFX_SeekableReadStream* %201 to i8*
  %210 = getelementptr inbounds i8, i8* %209, i64 %208
  %211 = getelementptr inbounds i8, i8* %210, i64 8
  %212 = bitcast i8* %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = add nsw i64 %213, -1
  store i64 %214, i64* %212, align 8
  %215 = icmp ne i64 %214, 0
  %216 = icmp eq i8* %210, null
  %217 = or i1 %216, %215
  br i1 %217, label %224, label %218

218:                                              ; preds = %203
  %219 = bitcast i8* %210 to %"class.fxcrt::Retainable"*
  %220 = bitcast i8* %210 to void (%"class.fxcrt::Retainable"*)***
  %221 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %221, i64 1
  %223 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %222, align 8
  call void %223(%"class.fxcrt::Retainable"* nonnull %219) #12
  br label %224

224:                                              ; preds = %218, %203, %200, %152, %137, %134, %72, %57, %54
  %225 = phi i32 [ 4, %54 ], [ 4, %57 ], [ 4, %72 ], [ 6, %134 ], [ 6, %137 ], [ 6, %152 ], [ -1, %200 ], [ -1, %203 ], [ -1, %218 ]
  %226 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 %225, i32* %226, align 8
  ret i32 %225
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec18ProgressiveDecoder27TiffDetectImageTypeFromFileEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoder"*, %"class.fxcodec::CFX_DIBAttribute"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5
  %5 = tail call %"class.fxcodec::ProgressiveDecoderIface::Context"* @_ZN7fxcodec11TiffDecoder13CreateDecoderERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEE(%"class.fxcrt::RetainPtr"* dereferenceable(8) %4) #12
  %6 = ptrtoint %"class.fxcodec::ProgressiveDecoderIface::Context"* %5 to i64
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 14
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %10 = bitcast %"class.std::__1::unique_ptr.22"* %7 to i64*
  store i64 %6, i64* %10, align 8
  %11 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %9, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %9 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %14 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %14, i64 1
  %16 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %15, align 8
  tail call void %16(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %9) #12
  %17 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  br label %18

18:                                               ; preds = %12, %2
  %19 = phi %"class.fxcodec::ProgressiveDecoderIface::Context"* [ %17, %12 ], [ %5, %2 ]
  %20 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 8, i32* %22, align 8
  br label %47

23:                                               ; preds = %18
  %24 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #12
  store i32 -1431655766, i32* %3, align 4
  %25 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 20
  %26 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 21
  %27 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 22
  %28 = call zeroext i1 @_ZN7fxcodec11TiffDecoder13LoadFrameInfoEPNS_23ProgressiveDecoderIface7ContextEiPiS4_S4_S4_PNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %19, i32 0, i32* %25, i32* %26, i32* %27, i32* nonnull %3, %"class.fxcodec::CFX_DIBAttribute"* %1) #12
  store i32 4, i32* %27, align 8
  %29 = load i32, i32* %25, align 8
  %30 = load i32, i32* %26, align 4
  %31 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 2
  store i32 %29, i32* %33, align 8
  %34 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  store i32 %30, i32* %34, align 4
  br i1 %28, label %45, label %35

35:                                               ; preds = %23
  %36 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %8, align 8
  %37 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %36 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %40 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %40, i64 1
  %42 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %41, align 8
  call void %42(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %36) #12
  br label %43

43:                                               ; preds = %35, %38
  %44 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 8, i32* %44, align 8
  br label %45

45:                                               ; preds = %23, %43
  %46 = phi i1 [ false, %43 ], [ true, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #12
  br label %47

47:                                               ; preds = %45, %21
  %48 = phi i1 [ %46, %45 ], [ false, %21 ]
  ret i1 %48
}

declare %"class.fxcodec::ProgressiveDecoderIface::Context"* @_ZN7fxcodec11TiffDecoder13CreateDecoderERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEE(%"class.fxcrt::RetainPtr"* dereferenceable(8)) local_unnamed_addr #3

declare zeroext i1 @_ZN7fxcodec11TiffDecoder13LoadFrameInfoEPNS_23ProgressiveDecoderIface7ContextEiPiS4_S4_S4_PNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"*, i32, i32*, i32*, i32*, i32*, %"class.fxcodec::CFX_DIBAttribute"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7fxcodec18ProgressiveDecoder18TiffContinueDecodeEv(%"class.fxcodec::ProgressiveDecoder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::RetainPtr.4", align 8
  %3 = alloca %"class.fxcrt::RetainPtr.4", align 8
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to %struct.FXDIB_ResampleOptions*
  %6 = alloca %"class.fxcrt::RetainPtr.4", align 8
  %7 = alloca %"class.fxcrt::RetainPtr.40", align 8
  %8 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.4"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  %11 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %10, i64 0, i32 0, i32 1
  %12 = load i16, i16* %11, align 8
  %13 = and i16 %12, 255
  %14 = icmp eq i16 %13, 32
  br i1 %14, label %15, label %105

15:                                               ; preds = %1
  %16 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %10, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 20
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %21, label %105

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %17, %23
  br i1 %24, label %25, label %105

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %10, i64 0, i32 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 21
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %31, label %105

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %27, %33
  br i1 %34, label %35, label %105

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 25
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %105

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 26
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %105

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %105

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %105

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, %17
  br i1 %54, label %55, label %105

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %27
  br i1 %58, label %59, label %105

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %61 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %60, align 8
  %62 = tail call zeroext i1 @_ZN7fxcodec11TiffDecoder6DecodeEPNS_23ProgressiveDecoderIface7ContextERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %61, %"class.fxcrt::RetainPtr.4"* dereferenceable(8) %8) #12
  %63 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %9, align 8
  %64 = icmp eq %class.CFX_DIBitmap* %63, null
  br i1 %64, label %76, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %63, i64 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = add nsw i64 %67, -1
  store i64 %68, i64* %66, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %65
  %71 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %63, i64 0, i32 0, i32 0
  %72 = bitcast %class.CFX_DIBitmap* %63 to void (%"class.fxcrt::Retainable"*)***
  %73 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %73, i64 1
  %75 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %74, align 8
  tail call void %75(%"class.fxcrt::Retainable"* nonnull %71) #12
  br label %76

76:                                               ; preds = %59, %65, %70
  %77 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %78 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %77, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %77, align 8
  %79 = icmp eq %class.IFX_SeekableReadStream* %78, null
  br i1 %79, label %101, label %80

80:                                               ; preds = %76
  %81 = bitcast %class.IFX_SeekableReadStream* %78 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr i8, i8* %82, i64 -32
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %class.IFX_SeekableReadStream* %78 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 %85
  %88 = getelementptr inbounds i8, i8* %87, i64 8
  %89 = bitcast i8* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = add nsw i64 %90, -1
  store i64 %91, i64* %89, align 8
  %92 = icmp ne i64 %91, 0
  %93 = icmp eq i8* %87, null
  %94 = or i1 %93, %92
  br i1 %94, label %101, label %95

95:                                               ; preds = %80
  %96 = bitcast i8* %87 to %"class.fxcrt::Retainable"*
  %97 = bitcast i8* %87 to void (%"class.fxcrt::Retainable"*)***
  %98 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %98, i64 1
  %100 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %99, align 8
  tail call void %100(%"class.fxcrt::Retainable"* nonnull %96) #12
  br label %101

101:                                              ; preds = %76, %80, %95
  %102 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  br i1 %62, label %104, label %103

103:                                              ; preds = %101
  store i32 -1, i32* %102, align 8
  br label %735

104:                                              ; preds = %101
  store i32 4, i32* %102, align 8
  br label %735

105:                                              ; preds = %55, %51, %47, %43, %39, %35, %31, %25, %21, %15, %1
  %106 = bitcast %"class.fxcrt::RetainPtr.4"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #12
  %107 = getelementptr inbounds %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.4"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = tail call i8* @_Znwm(i64 80) #13, !noalias !27
  %109 = bitcast i8* %108 to %class.CFX_DIBitmap*
  tail call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %109) #12, !noalias !27
  %110 = ptrtoint i8* %108 to i64
  %111 = bitcast %"class.fxcrt::RetainPtr.4"* %2 to i64*
  store i64 %110, i64* %111, align 8, !alias.scope !27
  %112 = getelementptr inbounds i8, i8* %108, i64 8
  %113 = bitcast i8* %112 to i64*
  %114 = load i64, i64* %113, align 8, !noalias !27
  %115 = add nsw i64 %114, 1
  store i64 %115, i64* %113, align 8, !noalias !27
  %116 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 20
  %117 = load i32, i32* %116, align 8
  %118 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 21
  %119 = load i32, i32* %118, align 4
  %120 = tail call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %109, i32 %117, i32 %119, i16 zeroext 544) #12
  %121 = bitcast i8* %108 to %class.CFX_DIBitmap*
  %122 = bitcast i8* %108 to i8* (%class.CFX_DIBitmap*)***
  %123 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %122, align 8
  %124 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %123, i64 2
  %125 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %124, align 8
  %126 = tail call i8* %125(%class.CFX_DIBitmap* nonnull %121) #12
  %127 = icmp eq i8* %126, null
  br i1 %127, label %128, label %169

128:                                              ; preds = %105
  %129 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %9, align 8
  %130 = icmp eq %class.CFX_DIBitmap* %129, null
  br i1 %130, label %142, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %129, i64 0, i32 0, i32 0, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %133, -1
  store i64 %134, i64* %132, align 8
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %142

136:                                              ; preds = %131
  %137 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %129, i64 0, i32 0, i32 0
  %138 = bitcast %class.CFX_DIBitmap* %129 to void (%"class.fxcrt::Retainable"*)***
  %139 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %139, i64 1
  %141 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %140, align 8
  tail call void %141(%"class.fxcrt::Retainable"* nonnull %137) #12
  br label %142

142:                                              ; preds = %128, %131, %136
  %143 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %144 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %143, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %143, align 8
  %145 = icmp eq %class.IFX_SeekableReadStream* %144, null
  br i1 %145, label %167, label %146

146:                                              ; preds = %142
  %147 = bitcast %class.IFX_SeekableReadStream* %144 to i8**
  %148 = load i8*, i8** %147, align 8
  %149 = getelementptr i8, i8* %148, i64 -32
  %150 = bitcast i8* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %class.IFX_SeekableReadStream* %144 to i8*
  %153 = getelementptr inbounds i8, i8* %152, i64 %151
  %154 = getelementptr inbounds i8, i8* %153, i64 8
  %155 = bitcast i8* %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = add nsw i64 %156, -1
  store i64 %157, i64* %155, align 8
  %158 = icmp ne i64 %157, 0
  %159 = icmp eq i8* %153, null
  %160 = or i1 %159, %158
  br i1 %160, label %167, label %161

161:                                              ; preds = %146
  %162 = bitcast i8* %153 to %"class.fxcrt::Retainable"*
  %163 = bitcast i8* %153 to void (%"class.fxcrt::Retainable"*)***
  %164 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %163, align 8
  %165 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %164, i64 1
  %166 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %165, align 8
  tail call void %166(%"class.fxcrt::Retainable"* nonnull %162) #12
  br label %167

167:                                              ; preds = %142, %146, %161
  %168 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %168, align 8
  br label %719

169:                                              ; preds = %105
  %170 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %171 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %170, align 8
  %172 = call zeroext i1 @_ZN7fxcodec11TiffDecoder6DecodeEPNS_23ProgressiveDecoderIface7ContextERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %171, %"class.fxcrt::RetainPtr.4"* nonnull dereferenceable(8) %2) #12
  br i1 %172, label %214, label %173

173:                                              ; preds = %169
  %174 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %9, align 8
  %175 = icmp eq %class.CFX_DIBitmap* %174, null
  br i1 %175, label %187, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %174, i64 0, i32 0, i32 0, i32 1
  %178 = load i64, i64* %177, align 8
  %179 = add nsw i64 %178, -1
  store i64 %179, i64* %177, align 8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %187

181:                                              ; preds = %176
  %182 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %174, i64 0, i32 0, i32 0
  %183 = bitcast %class.CFX_DIBitmap* %174 to void (%"class.fxcrt::Retainable"*)***
  %184 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %184, i64 1
  %186 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %185, align 8
  call void %186(%"class.fxcrt::Retainable"* nonnull %182) #12
  br label %187

187:                                              ; preds = %173, %176, %181
  %188 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %189 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %188, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %188, align 8
  %190 = icmp eq %class.IFX_SeekableReadStream* %189, null
  br i1 %190, label %212, label %191

191:                                              ; preds = %187
  %192 = bitcast %class.IFX_SeekableReadStream* %189 to i8**
  %193 = load i8*, i8** %192, align 8
  %194 = getelementptr i8, i8* %193, i64 -32
  %195 = bitcast i8* %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %class.IFX_SeekableReadStream* %189 to i8*
  %198 = getelementptr inbounds i8, i8* %197, i64 %196
  %199 = getelementptr inbounds i8, i8* %198, i64 8
  %200 = bitcast i8* %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = add nsw i64 %201, -1
  store i64 %202, i64* %200, align 8
  %203 = icmp ne i64 %202, 0
  %204 = icmp eq i8* %198, null
  %205 = or i1 %204, %203
  br i1 %205, label %212, label %206

206:                                              ; preds = %191
  %207 = bitcast i8* %198 to %"class.fxcrt::Retainable"*
  %208 = bitcast i8* %198 to void (%"class.fxcrt::Retainable"*)***
  %209 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %209, i64 1
  %211 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %210, align 8
  call void %211(%"class.fxcrt::Retainable"* nonnull %207) #12
  br label %212

212:                                              ; preds = %187, %191, %206
  %213 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 -1, i32* %213, align 8
  br label %719

214:                                              ; preds = %169
  %215 = bitcast %"class.fxcrt::RetainPtr.4"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #12
  %216 = getelementptr inbounds %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.4"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %216, align 8
  %217 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24
  %218 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %217, i64 0, i32 0
  %219 = load i32, i32* %218, align 8
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %247

221:                                              ; preds = %214
  %222 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %247

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 2
  %227 = load i32, i32* %226, align 8
  %228 = load i32, i32* %116, align 8
  %229 = icmp eq i32 %227, %228
  br i1 %229, label %230, label %247

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  %232 = load i32, i32* %231, align 4
  %233 = load i32, i32* %118, align 4
  %234 = icmp eq i32 %232, %233
  br i1 %234, label %235, label %247

235:                                              ; preds = %230
  %236 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %107, align 8
  %237 = ptrtoint %class.CFX_DIBitmap* %236 to i64
  %238 = bitcast %"class.fxcrt::RetainPtr.4"* %3 to i64*
  store i64 %237, i64* %238, align 8
  %239 = icmp eq %class.CFX_DIBitmap* %236, null
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  br label %253

242:                                              ; preds = %235
  %243 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %236, i64 0, i32 0, i32 0, i32 1
  %244 = load i64, i64* %243, align 8
  %245 = add nsw i64 %244, 1
  store i64 %245, i64* %243, align 8
  %246 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  br label %294

247:                                              ; preds = %214, %221, %225, %230
  %248 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %107, align 8
  %249 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %248, i64 0, i32 0
  call void @_ZNK11CFX_DIBBase5CloneEPK7FX_RECT(%"class.fxcrt::RetainPtr.4"* nonnull sret %3, %class.CFX_DIBBase* %249, %struct.FX_RECT* %217) #12
  %250 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %216, align 8
  %251 = icmp eq %class.CFX_DIBitmap* %250, null
  %252 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  br i1 %251, label %253, label %294

253:                                              ; preds = %240, %247
  %254 = phi %class.CFX_DIBitmap* [ %241, %240 ], [ %252, %247 ]
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %9, align 8
  %255 = icmp eq %class.CFX_DIBitmap* %254, null
  br i1 %255, label %267, label %256

256:                                              ; preds = %253
  %257 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %254, i64 0, i32 0, i32 0, i32 1
  %258 = load i64, i64* %257, align 8
  %259 = add nsw i64 %258, -1
  store i64 %259, i64* %257, align 8
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %267

261:                                              ; preds = %256
  %262 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %254, i64 0, i32 0, i32 0
  %263 = bitcast %class.CFX_DIBitmap* %254 to void (%"class.fxcrt::Retainable"*)***
  %264 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %263, align 8
  %265 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %264, i64 1
  %266 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %265, align 8
  call void %266(%"class.fxcrt::Retainable"* nonnull %262) #12
  br label %267

267:                                              ; preds = %253, %256, %261
  %268 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %269 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %268, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %268, align 8
  %270 = icmp eq %class.IFX_SeekableReadStream* %269, null
  br i1 %270, label %292, label %271

271:                                              ; preds = %267
  %272 = bitcast %class.IFX_SeekableReadStream* %269 to i8**
  %273 = load i8*, i8** %272, align 8
  %274 = getelementptr i8, i8* %273, i64 -32
  %275 = bitcast i8* %274 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = bitcast %class.IFX_SeekableReadStream* %269 to i8*
  %278 = getelementptr inbounds i8, i8* %277, i64 %276
  %279 = getelementptr inbounds i8, i8* %278, i64 8
  %280 = bitcast i8* %279 to i64*
  %281 = load i64, i64* %280, align 8
  %282 = add nsw i64 %281, -1
  store i64 %282, i64* %280, align 8
  %283 = icmp ne i64 %282, 0
  %284 = icmp eq i8* %278, null
  %285 = or i1 %284, %283
  br i1 %285, label %292, label %286

286:                                              ; preds = %271
  %287 = bitcast i8* %278 to %"class.fxcrt::Retainable"*
  %288 = bitcast i8* %278 to void (%"class.fxcrt::Retainable"*)***
  %289 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %288, align 8
  %290 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %289, i64 1
  %291 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %290, align 8
  call void %291(%"class.fxcrt::Retainable"* nonnull %287) #12
  br label %292

292:                                              ; preds = %267, %271, %286
  %293 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %293, align 8
  br label %703

294:                                              ; preds = %242, %247
  %295 = phi %class.CFX_DIBitmap* [ %246, %242 ], [ %252, %247 ]
  %296 = phi %class.CFX_DIBitmap* [ %236, %242 ], [ %250, %247 ]
  %297 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %295, i64 0, i32 0, i32 1
  %298 = load i16, i16* %297, align 8
  switch i16 %298, label %360 [
    i16 8, label %299
    i16 264, label %313
    i16 24, label %327
    i16 32, label %341
    i16 544, label %355
  ]

299:                                              ; preds = %294
  %300 = call i8* @_Znwm(i64 80) #13, !noalias !30
  %301 = bitcast i8* %300 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %301) #12, !noalias !30
  %302 = ptrtoint i8* %300 to i64
  %303 = getelementptr inbounds i8, i8* %300, i64 8
  %304 = bitcast i8* %303 to i64*
  %305 = load i64, i64* %304, align 8, !noalias !30
  %306 = add nsw i64 %305, 1
  store i64 %306, i64* %304, align 8, !noalias !30
  %307 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %216, align 8
  %308 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %307, i64 0, i32 0, i32 2
  %309 = load i32, i32* %308, align 4
  %310 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %307, i64 0, i32 0, i32 3
  %311 = load i32, i32* %310, align 8
  %312 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %301, i32 %309, i32 %311, i16 zeroext 8) #12
  br label %360

313:                                              ; preds = %294
  %314 = call i8* @_Znwm(i64 80) #13, !noalias !33
  %315 = bitcast i8* %314 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %315) #12, !noalias !33
  %316 = ptrtoint i8* %314 to i64
  %317 = getelementptr inbounds i8, i8* %314, i64 8
  %318 = bitcast i8* %317 to i64*
  %319 = load i64, i64* %318, align 8, !noalias !33
  %320 = add nsw i64 %319, 1
  store i64 %320, i64* %318, align 8, !noalias !33
  %321 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %216, align 8
  %322 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %321, i64 0, i32 0, i32 2
  %323 = load i32, i32* %322, align 4
  %324 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %321, i64 0, i32 0, i32 3
  %325 = load i32, i32* %324, align 8
  %326 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %315, i32 %323, i32 %325, i16 zeroext 264) #12
  br label %360

327:                                              ; preds = %294
  %328 = call i8* @_Znwm(i64 80) #13, !noalias !36
  %329 = bitcast i8* %328 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %329) #12, !noalias !36
  %330 = ptrtoint i8* %328 to i64
  %331 = getelementptr inbounds i8, i8* %328, i64 8
  %332 = bitcast i8* %331 to i64*
  %333 = load i64, i64* %332, align 8, !noalias !36
  %334 = add nsw i64 %333, 1
  store i64 %334, i64* %332, align 8, !noalias !36
  %335 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %216, align 8
  %336 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %335, i64 0, i32 0, i32 2
  %337 = load i32, i32* %336, align 4
  %338 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %335, i64 0, i32 0, i32 3
  %339 = load i32, i32* %338, align 8
  %340 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %329, i32 %337, i32 %339, i16 zeroext 24) #12
  br label %360

341:                                              ; preds = %294
  %342 = call i8* @_Znwm(i64 80) #13, !noalias !39
  %343 = bitcast i8* %342 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %343) #12, !noalias !39
  %344 = ptrtoint i8* %342 to i64
  %345 = getelementptr inbounds i8, i8* %342, i64 8
  %346 = bitcast i8* %345 to i64*
  %347 = load i64, i64* %346, align 8, !noalias !39
  %348 = add nsw i64 %347, 1
  store i64 %348, i64* %346, align 8, !noalias !39
  %349 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %216, align 8
  %350 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %349, i64 0, i32 0, i32 2
  %351 = load i32, i32* %350, align 4
  %352 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %349, i64 0, i32 0, i32 3
  %353 = load i32, i32* %352, align 8
  %354 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %343, i32 %351, i32 %353, i16 zeroext 32) #12
  br label %360

355:                                              ; preds = %294
  %356 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %296, i64 0, i32 0, i32 0, i32 1
  %357 = load i64, i64* %356, align 8
  %358 = add nsw i64 %357, 1
  store i64 %358, i64* %356, align 8
  %359 = ptrtoint %class.CFX_DIBitmap* %296 to i64
  br label %360

360:                                              ; preds = %294, %355, %341, %327, %313, %299
  %361 = phi i64 [ 0, %294 ], [ %359, %355 ], [ %344, %341 ], [ %330, %327 ], [ %316, %313 ], [ %302, %299 ]
  %362 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  %363 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %362, i64 0, i32 0, i32 1
  %364 = load i16, i16* %363, align 8
  switch i16 %364, label %514 [
    i16 8, label %365
    i16 264, label %365
    i16 24, label %441
    i16 32, label %441
  ]

365:                                              ; preds = %360, %360
  %366 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %216, align 8
  %367 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %366, i64 0, i32 0, i32 3
  %368 = load i32, i32* %367, align 8
  %369 = icmp sgt i32 %368, 0
  br i1 %369, label %370, label %514

370:                                              ; preds = %365
  %371 = inttoptr i64 %361 to %class.CFX_DIBitmap*
  %372 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %371, i64 0, i32 0
  %373 = inttoptr i64 %361 to i8* (%class.CFX_DIBBase*, i32)***
  br label %374

374:                                              ; preds = %370, %390
  %375 = phi %class.CFX_DIBitmap* [ %366, %370 ], [ %391, %390 ]
  %376 = phi i32 [ 0, %370 ], [ %392, %390 ]
  %377 = bitcast %class.CFX_DIBitmap* %375 to i8* (%class.CFX_DIBitmap*, i32)***
  %378 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %377, align 8
  %379 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %378, i64 3
  %380 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %379, align 8
  %381 = call i8* %380(%class.CFX_DIBitmap* %375, i32 %376) #12
  %382 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %373, align 8
  %383 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %382, i64 3
  %384 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %383, align 8
  %385 = call i8* %384(%class.CFX_DIBBase* %372, i32 %376) #12
  %386 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %216, align 8
  %387 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %386, i64 0, i32 0, i32 2
  %388 = load i32, i32* %387, align 4
  %389 = icmp sgt i32 %388, 0
  br i1 %389, label %396, label %390

390:                                              ; preds = %396, %374
  %391 = phi %class.CFX_DIBitmap* [ %386, %374 ], [ %437, %396 ]
  %392 = add nuw nsw i32 %376, 1
  %393 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %391, i64 0, i32 0, i32 3
  %394 = load i32, i32* %393, align 8
  %395 = icmp slt i32 %392, %394
  br i1 %395, label %374, label %514

396:                                              ; preds = %374, %396
  %397 = phi i8* [ %435, %396 ], [ %381, %374 ]
  %398 = phi i8* [ %434, %396 ], [ %385, %374 ]
  %399 = phi i32 [ %436, %396 ], [ 0, %374 ]
  %400 = getelementptr inbounds i8, i8* %397, i64 3
  %401 = load i8, i8* %400, align 1
  %402 = zext i8 %401 to i32
  %403 = xor i8 %401, -1
  %404 = load i8, i8* %397, align 1
  %405 = zext i8 %404 to i32
  %406 = mul nuw nsw i32 %405, %402
  %407 = zext i8 %403 to i32
  %408 = mul nuw nsw i32 %407, 255
  %409 = add nuw nsw i32 %406, %408
  %410 = udiv i32 %409, 255
  %411 = getelementptr inbounds i8, i8* %397, i64 1
  %412 = load i8, i8* %411, align 1
  %413 = zext i8 %412 to i32
  %414 = mul nuw nsw i32 %413, %402
  %415 = add nuw nsw i32 %414, %408
  %416 = udiv i32 %415, 255
  %417 = getelementptr inbounds i8, i8* %397, i64 2
  %418 = load i8, i8* %417, align 1
  %419 = zext i8 %418 to i32
  %420 = mul nuw nsw i32 %419, %402
  %421 = add nuw nsw i32 %420, %408
  %422 = udiv i32 %421, 255
  %423 = and i32 %410, 255
  %424 = mul nuw nsw i32 %423, 11
  %425 = and i32 %416, 255
  %426 = mul nuw nsw i32 %425, 59
  %427 = add nuw nsw i32 %426, %424
  %428 = and i32 %422, 255
  %429 = mul nuw nsw i32 %428, 30
  %430 = add nuw nsw i32 %427, %429
  %431 = trunc i32 %430 to i16
  %432 = udiv i16 %431, 100
  %433 = trunc i16 %432 to i8
  %434 = getelementptr inbounds i8, i8* %398, i64 1
  store i8 %433, i8* %398, align 1
  %435 = getelementptr inbounds i8, i8* %397, i64 4
  %436 = add nuw nsw i32 %399, 1
  %437 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %216, align 8
  %438 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %437, i64 0, i32 0, i32 2
  %439 = load i32, i32* %438, align 4
  %440 = icmp slt i32 %436, %439
  br i1 %440, label %396, label %390

441:                                              ; preds = %360, %360
  %442 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %216, align 8
  %443 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %442, i64 0, i32 0, i32 3
  %444 = load i32, i32* %443, align 8
  %445 = icmp sgt i32 %444, 0
  br i1 %445, label %446, label %514

446:                                              ; preds = %441
  %447 = icmp ne i16 %364, 24
  %448 = inttoptr i64 %361 to %class.CFX_DIBitmap*
  %449 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %448, i64 0, i32 0
  %450 = inttoptr i64 %361 to i8* (%class.CFX_DIBBase*, i32)***
  %451 = zext i1 %447 to i64
  br label %452

452:                                              ; preds = %446, %468
  %453 = phi %class.CFX_DIBitmap* [ %442, %446 ], [ %469, %468 ]
  %454 = phi i32 [ 0, %446 ], [ %470, %468 ]
  %455 = bitcast %class.CFX_DIBitmap* %453 to i8* (%class.CFX_DIBitmap*, i32)***
  %456 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %455, align 8
  %457 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %456, i64 3
  %458 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %457, align 8
  %459 = call i8* %458(%class.CFX_DIBitmap* %453, i32 %454) #12
  %460 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %450, align 8
  %461 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %460, i64 3
  %462 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %461, align 8
  %463 = call i8* %462(%class.CFX_DIBBase* %449, i32 %454) #12
  %464 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %216, align 8
  %465 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %464, i64 0, i32 0, i32 2
  %466 = load i32, i32* %465, align 4
  %467 = icmp sgt i32 %466, 0
  br i1 %467, label %474, label %468

468:                                              ; preds = %474, %452
  %469 = phi %class.CFX_DIBitmap* [ %464, %452 ], [ %510, %474 ]
  %470 = add nuw nsw i32 %454, 1
  %471 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %469, i64 0, i32 0, i32 3
  %472 = load i32, i32* %471, align 8
  %473 = icmp slt i32 %470, %472
  br i1 %473, label %452, label %514

474:                                              ; preds = %452, %474
  %475 = phi i32 [ %509, %474 ], [ 0, %452 ]
  %476 = phi i8* [ %507, %474 ], [ %463, %452 ]
  %477 = phi i8* [ %508, %474 ], [ %459, %452 ]
  %478 = getelementptr inbounds i8, i8* %477, i64 3
  %479 = load i8, i8* %478, align 1
  %480 = zext i8 %479 to i32
  %481 = xor i8 %479, -1
  %482 = load i8, i8* %477, align 1
  %483 = zext i8 %482 to i32
  %484 = mul nuw nsw i32 %483, %480
  %485 = zext i8 %481 to i32
  %486 = mul nuw nsw i32 %485, 255
  %487 = add nuw nsw i32 %484, %486
  %488 = udiv i32 %487, 255
  %489 = trunc i32 %488 to i8
  %490 = getelementptr inbounds i8, i8* %477, i64 1
  %491 = load i8, i8* %490, align 1
  %492 = zext i8 %491 to i32
  %493 = mul nuw nsw i32 %492, %480
  %494 = add nuw nsw i32 %493, %486
  %495 = udiv i32 %494, 255
  %496 = trunc i32 %495 to i8
  %497 = getelementptr inbounds i8, i8* %477, i64 2
  %498 = load i8, i8* %497, align 1
  %499 = zext i8 %498 to i32
  %500 = mul nuw nsw i32 %499, %480
  %501 = add nuw nsw i32 %500, %486
  %502 = udiv i32 %501, 255
  %503 = trunc i32 %502 to i8
  %504 = getelementptr inbounds i8, i8* %476, i64 1
  store i8 %489, i8* %476, align 1
  %505 = getelementptr inbounds i8, i8* %476, i64 2
  store i8 %496, i8* %504, align 1
  %506 = getelementptr inbounds i8, i8* %476, i64 3
  store i8 %503, i8* %505, align 1
  %507 = getelementptr inbounds i8, i8* %506, i64 %451
  %508 = getelementptr inbounds i8, i8* %477, i64 4
  %509 = add nuw nsw i32 %475, 1
  %510 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %216, align 8
  %511 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %510, i64 0, i32 0, i32 2
  %512 = load i32, i32* %511, align 4
  %513 = icmp slt i32 %509, %512
  br i1 %513, label %474, label %468

514:                                              ; preds = %468, %390, %441, %365, %360
  %515 = inttoptr i64 %361 to %class.CFX_DIBitmap*
  %516 = icmp eq i64 %361, 0
  br i1 %516, label %517, label %556

517:                                              ; preds = %514
  %518 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %9, align 8
  %519 = icmp eq %class.CFX_DIBitmap* %518, null
  br i1 %519, label %531, label %520

520:                                              ; preds = %517
  %521 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %518, i64 0, i32 0, i32 0, i32 1
  %522 = load i64, i64* %521, align 8
  %523 = add nsw i64 %522, -1
  store i64 %523, i64* %521, align 8
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %525, label %531

525:                                              ; preds = %520
  %526 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %518, i64 0, i32 0, i32 0
  %527 = bitcast %class.CFX_DIBitmap* %518 to void (%"class.fxcrt::Retainable"*)***
  %528 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %527, align 8
  %529 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %528, i64 1
  %530 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %529, align 8
  call void %530(%"class.fxcrt::Retainable"* nonnull %526) #12
  br label %531

531:                                              ; preds = %517, %520, %525
  %532 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %533 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %532, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %532, align 8
  %534 = icmp eq %class.IFX_SeekableReadStream* %533, null
  br i1 %534, label %701, label %535

535:                                              ; preds = %531
  %536 = bitcast %class.IFX_SeekableReadStream* %533 to i8**
  %537 = load i8*, i8** %536, align 8
  %538 = getelementptr i8, i8* %537, i64 -32
  %539 = bitcast i8* %538 to i64*
  %540 = load i64, i64* %539, align 8
  %541 = bitcast %class.IFX_SeekableReadStream* %533 to i8*
  %542 = getelementptr inbounds i8, i8* %541, i64 %540
  %543 = getelementptr inbounds i8, i8* %542, i64 8
  %544 = bitcast i8* %543 to i64*
  %545 = load i64, i64* %544, align 8
  %546 = add nsw i64 %545, -1
  store i64 %546, i64* %544, align 8
  %547 = icmp ne i64 %546, 0
  %548 = icmp eq i8* %542, null
  %549 = or i1 %548, %547
  br i1 %549, label %701, label %550

550:                                              ; preds = %535
  %551 = bitcast i8* %542 to %"class.fxcrt::Retainable"*
  %552 = bitcast i8* %542 to void (%"class.fxcrt::Retainable"*)***
  %553 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %552, align 8
  %554 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %553, i64 1
  %555 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %554, align 8
  call void %555(%"class.fxcrt::Retainable"* nonnull %551) #12
  br label %701

556:                                              ; preds = %514
  %557 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %557) #12
  store i32 -1431655766, i32* %4, align 4
  call void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions* nonnull %5) #12
  store i8 1, i8* %557, align 4
  %558 = bitcast %"class.fxcrt::RetainPtr.4"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %558) #12
  %559 = getelementptr inbounds %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.4"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %559, align 8
  %560 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %515, i64 0, i32 0
  %561 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  %562 = load i32, i32* %561, align 8
  %563 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  %564 = load i32, i32* %563, align 4
  call void @_ZN11CFX_DIBBase9StretchToEiiRK21FXDIB_ResampleOptionsPK7FX_RECT(%"class.fxcrt::RetainPtr.4"* nonnull sret %6, %class.CFX_DIBBase* %560, i32 %562, i32 %564, %struct.FXDIB_ResampleOptions* nonnull dereferenceable(4) %5, %struct.FX_RECT* null) #12
  %565 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %515, i64 0, i32 0, i32 0, i32 1
  %566 = load i64, i64* %565, align 8
  %567 = add nsw i64 %566, -1
  store i64 %567, i64* %565, align 8
  %568 = icmp eq i64 %567, 0
  br i1 %568, label %569, label %575

569:                                              ; preds = %556
  %570 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %515, i64 0, i32 0, i32 0
  %571 = inttoptr i64 %361 to void (%"class.fxcrt::Retainable"*)***
  %572 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %571, align 8
  %573 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %572, i64 1
  %574 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %573, align 8
  call void %574(%"class.fxcrt::Retainable"* nonnull %570) #12
  br label %575

575:                                              ; preds = %556, %569
  %576 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %559, align 8
  %577 = icmp eq %class.CFX_DIBitmap* %576, null
  %578 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  br i1 %577, label %579, label %617

579:                                              ; preds = %575
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %9, align 8
  %580 = icmp eq %class.CFX_DIBitmap* %578, null
  br i1 %580, label %592, label %581

581:                                              ; preds = %579
  %582 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %578, i64 0, i32 0, i32 0, i32 1
  %583 = load i64, i64* %582, align 8
  %584 = add nsw i64 %583, -1
  store i64 %584, i64* %582, align 8
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %586, label %592

586:                                              ; preds = %581
  %587 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %578, i64 0, i32 0, i32 0
  %588 = bitcast %class.CFX_DIBitmap* %578 to void (%"class.fxcrt::Retainable"*)***
  %589 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %588, align 8
  %590 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %589, i64 1
  %591 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %590, align 8
  call void %591(%"class.fxcrt::Retainable"* nonnull %587) #12
  br label %592

592:                                              ; preds = %579, %581, %586
  %593 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %594 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %593, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %593, align 8
  %595 = icmp eq %class.IFX_SeekableReadStream* %594, null
  br i1 %595, label %684, label %596

596:                                              ; preds = %592
  %597 = bitcast %class.IFX_SeekableReadStream* %594 to i8**
  %598 = load i8*, i8** %597, align 8
  %599 = getelementptr i8, i8* %598, i64 -32
  %600 = bitcast i8* %599 to i64*
  %601 = load i64, i64* %600, align 8
  %602 = bitcast %class.IFX_SeekableReadStream* %594 to i8*
  %603 = getelementptr inbounds i8, i8* %602, i64 %601
  %604 = getelementptr inbounds i8, i8* %603, i64 8
  %605 = bitcast i8* %604 to i64*
  %606 = load i64, i64* %605, align 8
  %607 = add nsw i64 %606, -1
  store i64 %607, i64* %605, align 8
  %608 = icmp ne i64 %607, 0
  %609 = icmp eq i8* %603, null
  %610 = or i1 %609, %608
  br i1 %610, label %684, label %611

611:                                              ; preds = %596
  %612 = bitcast i8* %603 to %"class.fxcrt::Retainable"*
  %613 = bitcast i8* %603 to void (%"class.fxcrt::Retainable"*)***
  %614 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %613, align 8
  %615 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %614, i64 1
  %616 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %615, align 8
  call void %616(%"class.fxcrt::Retainable"* nonnull %612) #12
  br label %684

617:                                              ; preds = %575
  %618 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 25
  %619 = load i32, i32* %618, align 8
  %620 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 26
  %621 = load i32, i32* %620, align 4
  %622 = load i32, i32* %561, align 8
  %623 = load i32, i32* %563, align 4
  %624 = bitcast %"class.fxcrt::RetainPtr.40"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %624) #12
  %625 = ptrtoint %class.CFX_DIBitmap* %576 to i64
  %626 = bitcast %"class.fxcrt::RetainPtr.40"* %7 to i64*
  store i64 %625, i64* %626, align 8
  %627 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %576, i64 0, i32 0, i32 0, i32 1
  %628 = load i64, i64* %627, align 8
  %629 = add nsw i64 %628, 1
  store i64 %629, i64* %627, align 8
  %630 = call zeroext i1 @_ZN12CFX_DIBitmap14TransferBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii(%class.CFX_DIBitmap* %578, i32 %619, i32 %621, i32 %622, i32 %623, %"class.fxcrt::RetainPtr.40"* nonnull dereferenceable(8) %7, i32 0, i32 0) #12
  %631 = getelementptr inbounds %"class.fxcrt::RetainPtr.40", %"class.fxcrt::RetainPtr.40"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %632 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %631, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %631, align 8
  %633 = icmp eq %class.CFX_DIBBase* %632, null
  br i1 %633, label %645, label %634

634:                                              ; preds = %617
  %635 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %632, i64 0, i32 0, i32 1
  %636 = load i64, i64* %635, align 8
  %637 = add nsw i64 %636, -1
  store i64 %637, i64* %635, align 8
  %638 = icmp eq i64 %637, 0
  br i1 %638, label %639, label %645

639:                                              ; preds = %634
  %640 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %632, i64 0, i32 0
  %641 = bitcast %class.CFX_DIBBase* %632 to void (%"class.fxcrt::Retainable"*)***
  %642 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %641, align 8
  %643 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %642, i64 1
  %644 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %643, align 8
  call void %644(%"class.fxcrt::Retainable"* nonnull %640) #12
  br label %645

645:                                              ; preds = %617, %634, %639
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %624) #12
  %646 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %9, align 8
  %647 = icmp eq %class.CFX_DIBitmap* %646, null
  br i1 %647, label %659, label %648

648:                                              ; preds = %645
  %649 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %646, i64 0, i32 0, i32 0, i32 1
  %650 = load i64, i64* %649, align 8
  %651 = add nsw i64 %650, -1
  store i64 %651, i64* %649, align 8
  %652 = icmp eq i64 %651, 0
  br i1 %652, label %653, label %659

653:                                              ; preds = %648
  %654 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %646, i64 0, i32 0, i32 0
  %655 = bitcast %class.CFX_DIBitmap* %646 to void (%"class.fxcrt::Retainable"*)***
  %656 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %655, align 8
  %657 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %656, i64 1
  %658 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %657, align 8
  call void %658(%"class.fxcrt::Retainable"* nonnull %654) #12
  br label %659

659:                                              ; preds = %645, %648, %653
  %660 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %661 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %660, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %660, align 8
  %662 = icmp eq %class.IFX_SeekableReadStream* %661, null
  br i1 %662, label %684, label %663

663:                                              ; preds = %659
  %664 = bitcast %class.IFX_SeekableReadStream* %661 to i8**
  %665 = load i8*, i8** %664, align 8
  %666 = getelementptr i8, i8* %665, i64 -32
  %667 = bitcast i8* %666 to i64*
  %668 = load i64, i64* %667, align 8
  %669 = bitcast %class.IFX_SeekableReadStream* %661 to i8*
  %670 = getelementptr inbounds i8, i8* %669, i64 %668
  %671 = getelementptr inbounds i8, i8* %670, i64 8
  %672 = bitcast i8* %671 to i64*
  %673 = load i64, i64* %672, align 8
  %674 = add nsw i64 %673, -1
  store i64 %674, i64* %672, align 8
  %675 = icmp ne i64 %674, 0
  %676 = icmp eq i8* %670, null
  %677 = or i1 %676, %675
  br i1 %677, label %684, label %678

678:                                              ; preds = %663
  %679 = bitcast i8* %670 to %"class.fxcrt::Retainable"*
  %680 = bitcast i8* %670 to void (%"class.fxcrt::Retainable"*)***
  %681 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %680, align 8
  %682 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %681, i64 1
  %683 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %682, align 8
  call void %683(%"class.fxcrt::Retainable"* nonnull %679) #12
  br label %684

684:                                              ; preds = %678, %663, %659, %611, %596, %592
  %685 = phi i32 [ 5, %592 ], [ 5, %596 ], [ 5, %611 ], [ 4, %659 ], [ 4, %663 ], [ 4, %678 ]
  %686 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 %685, i32* %686, align 8
  %687 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %559, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %559, align 8
  %688 = icmp eq %class.CFX_DIBitmap* %687, null
  br i1 %688, label %700, label %689

689:                                              ; preds = %684
  %690 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %687, i64 0, i32 0, i32 0, i32 1
  %691 = load i64, i64* %690, align 8
  %692 = add nsw i64 %691, -1
  store i64 %692, i64* %690, align 8
  %693 = icmp eq i64 %692, 0
  br i1 %693, label %694, label %700

694:                                              ; preds = %689
  %695 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %687, i64 0, i32 0, i32 0
  %696 = bitcast %class.CFX_DIBitmap* %687 to void (%"class.fxcrt::Retainable"*)***
  %697 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %696, align 8
  %698 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %697, i64 1
  %699 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %698, align 8
  call void %699(%"class.fxcrt::Retainable"* nonnull %695) #12
  br label %700

700:                                              ; preds = %694, %689, %684
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %558) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %557) #12
  br label %703

701:                                              ; preds = %550, %535, %531
  %702 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 5, i32* %702, align 8
  br label %703

703:                                              ; preds = %701, %700, %292
  %704 = phi i32 [ 5, %292 ], [ %685, %700 ], [ 5, %701 ]
  %705 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %216, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %216, align 8
  %706 = icmp eq %class.CFX_DIBitmap* %705, null
  br i1 %706, label %718, label %707

707:                                              ; preds = %703
  %708 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %705, i64 0, i32 0, i32 0, i32 1
  %709 = load i64, i64* %708, align 8
  %710 = add nsw i64 %709, -1
  store i64 %710, i64* %708, align 8
  %711 = icmp eq i64 %710, 0
  br i1 %711, label %712, label %718

712:                                              ; preds = %707
  %713 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %705, i64 0, i32 0, i32 0
  %714 = bitcast %class.CFX_DIBitmap* %705 to void (%"class.fxcrt::Retainable"*)***
  %715 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %714, align 8
  %716 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %715, i64 1
  %717 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %716, align 8
  call void %717(%"class.fxcrt::Retainable"* nonnull %713) #12
  br label %718

718:                                              ; preds = %703, %707, %712
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #12
  br label %719

719:                                              ; preds = %718, %212, %167
  %720 = phi i32 [ %704, %718 ], [ -1, %212 ], [ 5, %167 ]
  %721 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %107, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %107, align 8
  %722 = icmp eq %class.CFX_DIBitmap* %721, null
  br i1 %722, label %734, label %723

723:                                              ; preds = %719
  %724 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %721, i64 0, i32 0, i32 0, i32 1
  %725 = load i64, i64* %724, align 8
  %726 = add nsw i64 %725, -1
  store i64 %726, i64* %724, align 8
  %727 = icmp eq i64 %726, 0
  br i1 %727, label %728, label %734

728:                                              ; preds = %723
  %729 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %721, i64 0, i32 0, i32 0
  %730 = bitcast %class.CFX_DIBitmap* %721 to void (%"class.fxcrt::Retainable"*)***
  %731 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %730, align 8
  %732 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %731, i64 1
  %733 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %732, align 8
  call void %733(%"class.fxcrt::Retainable"* nonnull %729) #12
  br label %734

734:                                              ; preds = %719, %723, %728
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #12
  br label %735

735:                                              ; preds = %734, %104, %103
  %736 = phi i32 [ 4, %104 ], [ -1, %103 ], [ %720, %734 ]
  ret i32 %736
}

declare zeroext i1 @_ZN7fxcodec11TiffDecoder6DecodeEPNS_23ProgressiveDecoderIface7ContextERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcrt::RetainPtr.4"* dereferenceable(8)) local_unnamed_addr #3

declare zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap*, i32, i32, i16 zeroext) local_unnamed_addr #3

declare void @_ZNK11CFX_DIBBase5CloneEPK7FX_RECT(%"class.fxcrt::RetainPtr.4"* sret, %class.CFX_DIBBase*, %struct.FX_RECT*) local_unnamed_addr #3

declare void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions*) unnamed_addr #3

declare void @_ZN11CFX_DIBBase9StretchToEiiRK21FXDIB_ResampleOptionsPK7FX_RECT(%"class.fxcrt::RetainPtr.4"* sret, %class.CFX_DIBBase*, i32, i32, %struct.FXDIB_ResampleOptions* dereferenceable(4), %struct.FX_RECT*) local_unnamed_addr #3

declare zeroext i1 @_ZN12CFX_DIBitmap14TransferBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii(%class.CFX_DIBitmap*, i32, i32, i32, i32, %"class.fxcrt::RetainPtr.40"* dereferenceable(8), i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7fxcodec18ProgressiveDecoder15DetectImageTypeE18FXCODEC_IMAGE_TYPEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoder"*, i32, %"class.fxcodec::CFX_DIBAttribute"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = icmp eq i32 %1, 5
  %6 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5
  br i1 %5, label %7, label %50

7:                                                ; preds = %3
  %8 = tail call %"class.fxcodec::ProgressiveDecoderIface::Context"* @_ZN7fxcodec11TiffDecoder13CreateDecoderERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEE(%"class.fxcrt::RetainPtr"* dereferenceable(8) %6) #12
  %9 = ptrtoint %"class.fxcodec::ProgressiveDecoderIface::Context"* %8 to i64
  %10 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 14
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %11, align 8
  %13 = bitcast %"class.std::__1::unique_ptr.22"* %10 to i64*
  store i64 %9, i64* %13, align 8
  %14 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %12, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %12 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %17 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %17, i64 1
  %19 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %18, align 8
  tail call void %19(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %12) #12
  %20 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %11, align 8
  br label %21

21:                                               ; preds = %15, %7
  %22 = phi %"class.fxcodec::ProgressiveDecoderIface::Context"* [ %20, %15 ], [ %8, %7 ]
  %23 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 8, i32* %25, align 8
  br label %117

26:                                               ; preds = %21
  %27 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #12
  store i32 -1431655766, i32* %4, align 4
  %28 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 20
  %29 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 21
  %30 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 22
  %31 = call zeroext i1 @_ZN7fxcodec11TiffDecoder13LoadFrameInfoEPNS_23ProgressiveDecoderIface7ContextEiPiS4_S4_S4_PNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %22, i32 0, i32* %28, i32* %29, i32* %30, i32* nonnull %4, %"class.fxcodec::CFX_DIBAttribute"* %2) #12
  store i32 4, i32* %30, align 8
  %32 = load i32, i32* %28, align 8
  %33 = load i32, i32* %29, align 4
  %34 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 2
  store i32 %32, i32* %36, align 8
  %37 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  store i32 %33, i32* %37, align 4
  br i1 %31, label %48, label %38

38:                                               ; preds = %26
  %39 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %11, align 8
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %11, align 8
  %40 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  %42 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %39 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %43 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %43, i64 1
  %45 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %44, align 8
  call void %45(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %39) #12
  br label %46

46:                                               ; preds = %41, %38
  %47 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 8, i32* %47, align 8
  br label %48

48:                                               ; preds = %46, %26
  %49 = phi i1 [ false, %46 ], [ true, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #12
  br label %117

50:                                               ; preds = %3
  %51 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %51, align 8
  %53 = bitcast %class.IFX_SeekableReadStream* %52 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr i8, i8* %54, i64 -40
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %class.IFX_SeekableReadStream* %52 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 %57
  %60 = bitcast i8* %59 to %class.IFX_StreamWithSize*
  %61 = bitcast i8* %59 to i64 (%class.IFX_StreamWithSize*)***
  %62 = load i64 (%class.IFX_StreamWithSize*)**, i64 (%class.IFX_StreamWithSize*)*** %61, align 8
  %63 = load i64 (%class.IFX_StreamWithSize*)*, i64 (%class.IFX_StreamWithSize*)** %62, align 8
  %64 = tail call i64 %63(%class.IFX_StreamWithSize* %60) #12
  %65 = icmp ult i64 %64, 4096
  %66 = select i1 %65, i64 %64, i64 4096
  %67 = tail call i8* @_Znwm(i64 40) #13, !noalias !42
  %68 = bitcast i8* %67 to %class.CFX_CodecMemory*
  tail call void @_ZN15CFX_CodecMemoryC1Em(%class.CFX_CodecMemory* nonnull %68, i64 %66) #12, !noalias !42
  %69 = ptrtoint i8* %67 to i64
  %70 = getelementptr inbounds i8, i8* %67, i64 8
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8, !noalias !42
  %73 = add nsw i64 %72, 1
  store i64 %73, i64* %71, align 8, !noalias !42
  %74 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 7
  %75 = getelementptr inbounds %"class.fxcrt::RetainPtr.10", %"class.fxcrt::RetainPtr.10"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %75, align 8
  %77 = bitcast %"class.fxcrt::RetainPtr.10"* %74 to i64*
  store i64 %69, i64* %77, align 8
  %78 = icmp eq %class.CFX_CodecMemory* %76, null
  br i1 %78, label %90, label %79

79:                                               ; preds = %50
  %80 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %76, i64 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = add nsw i64 %81, -1
  store i64 %82, i64* %80, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %90

84:                                               ; preds = %79
  %85 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %76, i64 0, i32 0
  %86 = bitcast %class.CFX_CodecMemory* %76 to void (%"class.fxcrt::Retainable"*)***
  %87 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %87, i64 1
  %89 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %88, align 8
  tail call void %89(%"class.fxcrt::Retainable"* nonnull %85) #12
  br label %90

90:                                               ; preds = %84, %79, %50
  %91 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 15
  store i32 0, i32* %91, align 8
  %92 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %51, align 8
  %93 = load %class.CFX_CodecMemory*, %class.CFX_CodecMemory** %75, align 8
  %94 = getelementptr inbounds %class.CFX_CodecMemory, %class.CFX_CodecMemory* %93, i64 0, i32 1, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast %class.IFX_SeekableReadStream* %92 to i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)***
  %97 = load i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)**, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*** %96, align 8
  %98 = getelementptr inbounds i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)** %97, i64 4
  %99 = load i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)*, i1 (%class.IFX_SeekableReadStream*, i8*, i64, i64)** %98, align 8
  %100 = tail call zeroext i1 %99(%class.IFX_SeekableReadStream* %92, i8* %95, i64 0, i64 %66) #12
  br i1 %100, label %103, label %101

101:                                              ; preds = %90
  %102 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 6, i32* %102, align 8
  br label %117

103:                                              ; preds = %90
  %104 = load i32, i32* %91, align 8
  %105 = trunc i64 %66 to i32
  %106 = add i32 %104, %105
  store i32 %106, i32* %91, align 8
  switch i32 %1, label %115 [
    i32 1, label %107
    i32 2, label %109
    i32 4, label %111
    i32 3, label %113
  ]

107:                                              ; preds = %103
  %108 = tail call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder27JpegDetectImageTypeInBufferEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::CFX_DIBAttribute"* %2)
  br label %117

109:                                              ; preds = %103
  %110 = tail call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder26BmpDetectImageTypeInBufferEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::CFX_DIBAttribute"* %2)
  br label %117

111:                                              ; preds = %103
  %112 = tail call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder26GifDetectImageTypeInBufferEv(%"class.fxcodec::ProgressiveDecoder"* %0)
  br label %117

113:                                              ; preds = %103
  %114 = tail call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder26PngDetectImageTypeInBufferEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::CFX_DIBAttribute"* %2)
  br label %117

115:                                              ; preds = %103
  %116 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  store i32 8, i32* %116, align 8
  br label %117

117:                                              ; preds = %101, %107, %109, %111, %113, %115, %48, %24
  %118 = phi i1 [ %49, %48 ], [ false, %24 ], [ %108, %107 ], [ %110, %109 ], [ %112, %111 ], [ %114, %113 ], [ false, %115 ], [ false, %101 ]
  ret i1 %118
}

declare zeroext i1 @_ZN15CFX_CodecMemory9TryResizeEm(%class.CFX_CodecMemory*, i64) local_unnamed_addr #3

declare void @_ZN15CFX_CodecMemory7ConsumeEm(%class.CFX_CodecMemory*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7fxcodec18ProgressiveDecoder13LoadImageInfoERKN5fxcrt9RetainPtrI22IFX_SeekableReadStreamEE18FXCODEC_IMAGE_TYPEPNS_16CFX_DIBAttributeEb(%"class.fxcodec::ProgressiveDecoder"*, %"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8), i32, %"class.fxcodec::CFX_DIBAttribute"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp ult i32 %7, 4
  br i1 %8, label %126, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %10, align 8
  %12 = icmp eq %class.IFX_SeekableReadStream* %11, null
  br i1 %12, label %13, label %40

13:                                               ; preds = %9
  store i32 9, i32* %6, align 8
  %14 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %15 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %14, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %14, align 8
  %16 = icmp eq %class.IFX_SeekableReadStream* %15, null
  br i1 %16, label %38, label %17

17:                                               ; preds = %13
  %18 = bitcast %class.IFX_SeekableReadStream* %15 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr i8, i8* %19, i64 -32
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %class.IFX_SeekableReadStream* %15 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 %22
  %25 = getelementptr inbounds i8, i8* %24, i64 8
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = add nsw i64 %27, -1
  store i64 %28, i64* %26, align 8
  %29 = icmp ne i64 %28, 0
  %30 = icmp eq i8* %24, null
  %31 = or i1 %30, %29
  br i1 %31, label %38, label %32

32:                                               ; preds = %17
  %33 = bitcast i8* %24 to %"class.fxcrt::Retainable"*
  %34 = bitcast i8* %24 to void (%"class.fxcrt::Retainable"*)***
  %35 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %35, i64 1
  %37 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %36, align 8
  tail call void %37(%"class.fxcrt::Retainable"* nonnull %33) #12
  br label %38

38:                                               ; preds = %13, %17, %32
  %39 = load i32, i32* %6, align 8
  br label %126

40:                                               ; preds = %9
  %41 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %42 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %41, align 8
  %43 = icmp eq %class.IFX_SeekableReadStream* %42, %11
  br i1 %43, label %79, label %44

44:                                               ; preds = %40
  %45 = bitcast %class.IFX_SeekableReadStream* %11 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr i8, i8* %46, i64 -32
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %class.IFX_SeekableReadStream* %11 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 %49
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = add nsw i64 %54, 1
  store i64 %55, i64* %53, align 8
  %56 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %41, align 8
  store %class.IFX_SeekableReadStream* %11, %class.IFX_SeekableReadStream** %41, align 8
  %57 = icmp eq %class.IFX_SeekableReadStream* %56, null
  br i1 %57, label %79, label %58

58:                                               ; preds = %44
  %59 = bitcast %class.IFX_SeekableReadStream* %56 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr i8, i8* %60, i64 -32
  %62 = bitcast i8* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %class.IFX_SeekableReadStream* %56 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 %63
  %66 = getelementptr inbounds i8, i8* %65, i64 8
  %67 = bitcast i8* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = add nsw i64 %68, -1
  store i64 %69, i64* %67, align 8
  %70 = icmp ne i64 %69, 0
  %71 = icmp eq i8* %65, null
  %72 = or i1 %71, %70
  br i1 %72, label %79, label %73

73:                                               ; preds = %58
  %74 = bitcast i8* %65 to %"class.fxcrt::Retainable"*
  %75 = bitcast i8* %65 to void (%"class.fxcrt::Retainable"*)***
  %76 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %76, i64 1
  %78 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %77, align 8
  tail call void %78(%"class.fxcrt::Retainable"* nonnull %74) #12
  br label %79

79:                                               ; preds = %40, %44, %58, %73
  %80 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 15
  store i32 0, i32* %80, align 8
  %81 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 20
  %82 = bitcast i32* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 16, i1 false)
  %83 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24
  %84 = bitcast %struct.FX_RECT* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 16, i1 false)
  %85 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 25
  %86 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 33
  store i32 0, i32* %86, align 8
  %87 = icmp eq i32 %2, 0
  %88 = bitcast i32* %85 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false)
  br i1 %87, label %93, label %89

89:                                               ; preds = %79
  %90 = tail call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder15DetectImageTypeE18FXCODEC_IMAGE_TYPEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoder"* %0, i32 %2, %"class.fxcodec::CFX_DIBAttribute"* %3)
  br i1 %90, label %91, label %93

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 4
  store i32 %2, i32* %92, align 4
  store i32 0, i32* %6, align 8
  br label %126

93:                                               ; preds = %79, %89
  br i1 %4, label %96, label %94

94:                                               ; preds = %93
  %95 = tail call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder15DetectImageTypeE18FXCODEC_IMAGE_TYPEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoder"* %0, i32 1, %"class.fxcodec::CFX_DIBAttribute"* %3)
  br i1 %95, label %98, label %101

96:                                               ; preds = %93
  %97 = load i32, i32* %6, align 8
  br label %126

98:                                               ; preds = %132, %130, %128, %101, %94
  %99 = phi i32 [ 1, %94 ], [ 2, %101 ], [ 3, %128 ], [ 4, %130 ], [ 5, %132 ]
  %100 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 4
  store i32 %99, i32* %100, align 4
  store i32 0, i32* %6, align 8
  br label %126

101:                                              ; preds = %94
  %102 = tail call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder15DetectImageTypeE18FXCODEC_IMAGE_TYPEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoder"* %0, i32 2, %"class.fxcodec::CFX_DIBAttribute"* %3)
  br i1 %102, label %98, label %128

103:                                              ; preds = %134
  %104 = bitcast %class.IFX_SeekableReadStream* %135 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr i8, i8* %105, i64 -32
  %107 = bitcast i8* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %class.IFX_SeekableReadStream* %135 to i8*
  %110 = getelementptr inbounds i8, i8* %109, i64 %108
  %111 = getelementptr inbounds i8, i8* %110, i64 8
  %112 = bitcast i8* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = add nsw i64 %113, -1
  store i64 %114, i64* %112, align 8
  %115 = icmp ne i64 %114, 0
  %116 = icmp eq i8* %110, null
  %117 = or i1 %116, %115
  br i1 %117, label %124, label %118

118:                                              ; preds = %103
  %119 = bitcast i8* %110 to %"class.fxcrt::Retainable"*
  %120 = bitcast i8* %110 to void (%"class.fxcrt::Retainable"*)***
  %121 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %121, i64 1
  %123 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %122, align 8
  tail call void %123(%"class.fxcrt::Retainable"* nonnull %119) #12
  br label %124

124:                                              ; preds = %134, %103, %118
  %125 = load i32, i32* %6, align 8
  br label %126

126:                                              ; preds = %98, %5, %124, %96, %91, %38
  %127 = phi i32 [ 0, %91 ], [ %97, %96 ], [ %125, %124 ], [ %39, %38 ], [ -1, %5 ], [ 0, %98 ]
  ret i32 %127

128:                                              ; preds = %101
  %129 = tail call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder15DetectImageTypeE18FXCODEC_IMAGE_TYPEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoder"* %0, i32 3, %"class.fxcodec::CFX_DIBAttribute"* %3)
  br i1 %129, label %98, label %130

130:                                              ; preds = %128
  %131 = tail call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder15DetectImageTypeE18FXCODEC_IMAGE_TYPEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoder"* %0, i32 4, %"class.fxcodec::CFX_DIBAttribute"* %3)
  br i1 %131, label %98, label %132

132:                                              ; preds = %130
  %133 = tail call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder15DetectImageTypeE18FXCODEC_IMAGE_TYPEPNS_16CFX_DIBAttributeE(%"class.fxcodec::ProgressiveDecoder"* %0, i32 5, %"class.fxcodec::CFX_DIBAttribute"* %3)
  br i1 %133, label %98, label %134

134:                                              ; preds = %132
  store i32 8, i32* %6, align 8
  %135 = load %class.IFX_SeekableReadStream*, %class.IFX_SeekableReadStream** %41, align 8
  store %class.IFX_SeekableReadStream* null, %class.IFX_SeekableReadStream** %41, align 8
  %136 = icmp eq %class.IFX_SeekableReadStream* %135, null
  br i1 %136, label %124, label %103
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec18ProgressiveDecoder10SetClipBoxEP7FX_RECT(%"class.fxcodec::ProgressiveDecoder"* nocapture, %struct.FX_RECT* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %43

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %8, %10
  br i1 %11, label %12, label %18

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %14, %16
  br i1 %17, label %21, label %18

18:                                               ; preds = %12, %6
  %19 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24
  %20 = bitcast %struct.FX_RECT* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %43

21:                                               ; preds = %12
  %22 = icmp sgt i32 %10, 0
  %23 = select i1 %22, i32 %10, i32 0
  store i32 %23, i32* %9, align 4
  %24 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 20
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, %8
  %27 = select i1 %26, i32* %24, i32* %7
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %7, align 4
  %29 = icmp sgt i32 %16, 0
  %30 = select i1 %29, i32 %16, i32 0
  store i32 %30, i32* %15, align 4
  %31 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 21
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, %14
  %34 = select i1 %33, i32 %32, i32 %14
  store i32 %34, i32* %13, align 4
  %35 = icmp sle i32 %28, %23
  %36 = icmp sle i32 %34, %30
  %37 = or i1 %35, %36
  %38 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24
  %39 = bitcast %struct.FX_RECT* %38 to i8*
  br i1 %37, label %40, label %41

40:                                               ; preds = %21
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false)
  br label %43

41:                                               ; preds = %21
  %42 = bitcast %struct.FX_RECT* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 4 %42, i64 16, i1 false)
  br label %43

43:                                               ; preds = %2, %41, %40, %18
  ret void
}

declare i24 @_ZN4fxge18AdobeCMYK_to_sRGB1Ehhhh(i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i32, i64 } @_ZN7fxcodec18ProgressiveDecoder9GetFramesEv(%"class.fxcodec::ProgressiveDecoder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %6, label %47

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %47 [
    i32 2, label %9
    i32 1, label %9
    i32 3, label %9
    i32 5, label %9
    i32 4, label %11
  ]

9:                                                ; preds = %6, %6, %6, %6
  %10 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 35
  store i64 1, i64* %10, align 8
  store i32 2, i32* %3, align 8
  br label %47

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %13 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %12, align 8
  %14 = tail call { i32, i64 } @_ZN7fxcodec10GifDecoder13LoadFrameInfoEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %13) #12
  %15 = extractvalue { i32, i64 } %14, 0
  %16 = extractvalue { i32, i64 } %14, 1
  %17 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 35
  store i64 %16, i64* %17, align 8
  %18 = bitcast i32* %2 to i8*
  %19 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 43
  br label %20

20:                                               ; preds = %32, %11
  %21 = phi i64 [ %36, %32 ], [ %16, %11 ]
  %22 = phi i32 [ %35, %32 ], [ %15, %11 ]
  switch i32 %22, label %38 [
    i32 2, label %23
    i32 1, label %37
  ]

23:                                               ; preds = %20
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #12
  store i32 6, i32* %2, align 4
  %24 = tail call %"class.fxcodec::GifProgressiveDecoder"* @_ZN7fxcodec21GifProgressiveDecoder11GetInstanceEv() #12
  %25 = getelementptr inbounds %"class.fxcodec::GifProgressiveDecoder", %"class.fxcodec::GifProgressiveDecoder"* %24, i64 0, i32 0
  %26 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %12, align 8
  %27 = load i8, i8* %19, align 8, !range !4
  %28 = icmp ne i8 %27, 0
  %29 = call zeroext i1 @_ZN7fxcodec18ProgressiveDecoder12ReadMoreDataEPNS_23ProgressiveDecoderIfaceEPNS1_7ContextEbP14FXCODEC_STATUS(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcodec::ProgressiveDecoderIface"* %25, %"class.fxcodec::ProgressiveDecoderIface::Context"* %26, i1 zeroext %28, i32* nonnull %2) #12
  br i1 %29, label %32, label %30

30:                                               ; preds = %23
  %31 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #12
  br label %47

32:                                               ; preds = %23
  store i8 0, i8* %19, align 8
  %33 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %12, align 8
  %34 = tail call { i32, i64 } @_ZN7fxcodec10GifDecoder13LoadFrameInfoEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"* %33) #12
  %35 = extractvalue { i32, i64 } %34, 0
  %36 = extractvalue { i32, i64 } %34, 1
  store i64 %36, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #12
  br label %20

37:                                               ; preds = %20
  store i32 2, i32* %3, align 8
  br label %47

38:                                               ; preds = %20
  %39 = load %"class.fxcodec::ProgressiveDecoderIface::Context"*, %"class.fxcodec::ProgressiveDecoderIface::Context"** %12, align 8
  store %"class.fxcodec::ProgressiveDecoderIface::Context"* null, %"class.fxcodec::ProgressiveDecoderIface::Context"** %12, align 8
  %40 = icmp eq %"class.fxcodec::ProgressiveDecoderIface::Context"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  %42 = bitcast %"class.fxcodec::ProgressiveDecoderIface::Context"* %39 to void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)***
  %43 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)**, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %43, i64 1
  %45 = load void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)*, void (%"class.fxcodec::ProgressiveDecoderIface::Context"*)** %44, align 8
  tail call void %45(%"class.fxcodec::ProgressiveDecoderIface::Context"* nonnull %39) #12
  br label %46

46:                                               ; preds = %38, %41
  store i32 -1, i32* %3, align 8
  br label %47

47:                                               ; preds = %37, %46, %30, %6, %1, %9
  %48 = phi i32 [ 2, %9 ], [ -1, %1 ], [ -1, %6 ], [ -1, %46 ], [ 2, %37 ], [ %31, %30 ]
  %49 = phi i64 [ 1, %9 ], [ 0, %1 ], [ 0, %6 ], [ 0, %46 ], [ %21, %37 ], [ 0, %30 ]
  %50 = insertvalue { i32, i64 } undef, i32 %48, 0
  %51 = insertvalue { i32, i64 } %50, i64 %49, 1
  ret { i32, i64 } %51
}

declare { i32, i64 } @_ZN7fxcodec10GifDecoder13LoadFrameInfoEPNS_23ProgressiveDecoderIface7ContextE(%"class.fxcodec::ProgressiveDecoderIface::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7fxcodec18ProgressiveDecoder11StartDecodeERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiiii(%"class.fxcodec::ProgressiveDecoder"*, %"class.fxcrt::RetainPtr.4"* nocapture readonly dereferenceable(8), i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.FX_RECT, align 4
  %8 = alloca %struct.FX_RECT, align 4
  %9 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %168

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.fxcrt::RetainPtr.4", %"class.fxcrt::RetainPtr.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %13, align 8
  %15 = icmp eq %class.CFX_DIBitmap* %14, null
  br i1 %15, label %168, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %14, i64 0, i32 0, i32 1
  %18 = load i16, i16* %17, align 8
  %19 = and i16 %18, 248
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %168, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 35
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %168, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %27 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %26, align 8
  %28 = icmp eq %class.CFX_DIBitmap* %27, %14
  br i1 %28, label %46, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %14, i64 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, 1
  store i64 %32, i64* %30, align 8
  %33 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %26, align 8
  store %class.CFX_DIBitmap* %14, %class.CFX_DIBitmap** %26, align 8
  %34 = icmp eq %class.CFX_DIBitmap* %33, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %33, i64 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add nsw i64 %37, -1
  store i64 %38, i64* %36, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %35
  %41 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %33, i64 0, i32 0, i32 0
  %42 = bitcast %class.CFX_DIBitmap* %33 to void (%"class.fxcrt::Retainable"*)***
  %43 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %43, i64 1
  %45 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %44, align 8
  tail call void %45(%"class.fxcrt::Retainable"* nonnull %41) #12
  br label %46

46:                                               ; preds = %25, %29, %35, %40
  %47 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %48, %50
  br i1 %51, label %52, label %168

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 3
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 24, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %54, %56
  br i1 %57, label %58, label %168

58:                                               ; preds = %52
  %59 = add i32 %4, -1
  %60 = icmp ugt i32 %59, 65534
  %61 = add i32 %5, -1
  %62 = icmp ugt i32 %61, 65534
  %63 = or i1 %60, %62
  br i1 %63, label %168, label %64

64:                                               ; preds = %58
  %65 = bitcast %struct.FX_RECT* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #12
  %66 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %7, i64 0, i32 0
  %67 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %7, i64 0, i32 1
  %68 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %7, i64 0, i32 2
  %69 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %7, i64 0, i32 3
  %70 = add nsw i32 %4, %2
  %71 = add nsw i32 %5, %3
  store i32 %2, i32* %66, align 4
  store i32 %3, i32* %67, align 4
  store i32 %70, i32* %68, align 4
  store i32 %71, i32* %69, align 4
  %72 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %13, align 8
  %73 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %72, i64 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = sub nsw i32 %70, %74
  %76 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %72, i64 0, i32 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = sub nsw i32 %71, %77
  %79 = bitcast %struct.FX_RECT* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #12
  %80 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %8, i64 0, i32 0
  store i32 0, i32* %80, align 4
  %81 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %8, i64 0, i32 1
  store i32 0, i32* %81, align 4
  %82 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %8, i64 0, i32 2
  store i32 %74, i32* %82, align 4
  %83 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %8, i64 0, i32 3
  store i32 %77, i32* %83, align 4
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %7, %struct.FX_RECT* nonnull dereferenceable(16) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #12
  %84 = load i32, i32* %68, align 4
  %85 = load i32, i32* %66, align 4
  %86 = icmp sgt i32 %84, %85
  br i1 %86, label %87, label %166

87:                                               ; preds = %64
  %88 = load i32, i32* %69, align 4
  %89 = load i32, i32* %67, align 4
  %90 = icmp sgt i32 %88, %89
  br i1 %90, label %91, label %166

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 25
  store i32 %85, i32* %92, align 8
  %93 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 26
  store i32 %89, i32* %93, align 4
  %94 = sub nsw i32 %84, %85
  %95 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 27
  store i32 %94, i32* %95, align 8
  %96 = sub nsw i32 %88, %89
  %97 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 28
  store i32 %96, i32* %97, align 4
  %98 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 36
  store i64 0, i64* %98, align 8
  %99 = icmp slt i32 %2, 0
  %100 = icmp sgt i32 %75, 0
  %101 = or i1 %99, %100
  br i1 %101, label %102, label %122

102:                                              ; preds = %91
  %103 = load i32, i32* %47, align 4
  %104 = load i32, i32* %49, align 4
  %105 = sub nsw i32 %103, %104
  %106 = sitofp i32 %105 to float
  %107 = sitofp i32 %4 to float
  %108 = fdiv float %106, %107
  br i1 %99, label %109, label %115

109:                                              ; preds = %102
  %110 = sitofp i32 %2 to float
  %111 = fmul float %108, %110
  %112 = call float @llvm.ceil.f32(float %111) #12
  %113 = fptosi float %112 to i32
  %114 = sub nsw i32 %104, %113
  store i32 %114, i32* %49, align 8
  br label %115

115:                                              ; preds = %109, %102
  br i1 %100, label %116, label %122

116:                                              ; preds = %115
  %117 = sitofp i32 %75 to float
  %118 = fmul float %108, %117
  %119 = call float @llvm.floor.f32(float %118) #12
  %120 = fptosi float %119 to i32
  %121 = sub nsw i32 %103, %120
  store i32 %121, i32* %47, align 8
  br label %122

122:                                              ; preds = %115, %116, %91
  %123 = icmp slt i32 %3, 0
  %124 = icmp sgt i32 %78, 0
  %125 = or i1 %123, %124
  br i1 %125, label %126, label %146

126:                                              ; preds = %122
  %127 = load i32, i32* %53, align 4
  %128 = load i32, i32* %55, align 4
  %129 = sub nsw i32 %127, %128
  %130 = sitofp i32 %129 to float
  %131 = sitofp i32 %5 to float
  %132 = fdiv float %130, %131
  br i1 %123, label %133, label %139

133:                                              ; preds = %126
  %134 = sitofp i32 %3 to float
  %135 = fmul float %132, %134
  %136 = call float @llvm.ceil.f32(float %135) #12
  %137 = fptosi float %136 to i32
  %138 = sub nsw i32 %128, %137
  store i32 %138, i32* %55, align 4
  br label %139

139:                                              ; preds = %133, %126
  br i1 %124, label %140, label %146

140:                                              ; preds = %139
  %141 = sitofp i32 %78 to float
  %142 = fmul float %132, %141
  %143 = call float @llvm.floor.f32(float %142) #12
  %144 = fptosi float %143 to i32
  %145 = sub nsw i32 %127, %144
  store i32 %145, i32* %53, align 4
  br label %146

146:                                              ; preds = %139, %140, %122
  %147 = load i32, i32* %47, align 4
  %148 = load i32, i32* %49, align 4
  %149 = icmp sgt i32 %147, %148
  br i1 %149, label %150, label %166

150:                                              ; preds = %146
  %151 = load i32, i32* %53, align 4
  %152 = load i32, i32* %55, align 4
  %153 = icmp sgt i32 %151, %152
  br i1 %153, label %154, label %166

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 4
  %156 = load i32, i32* %155, align 4
  switch i32 %156, label %166 [
    i32 2, label %157
    i32 4, label %159
    i32 1, label %161
    i32 3, label %163
    i32 5, label %165
  ]

157:                                              ; preds = %154
  %158 = call i32 @_ZN7fxcodec18ProgressiveDecoder14BmpStartDecodeERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* dereferenceable(8) undef)
  br label %166

159:                                              ; preds = %154
  %160 = call i32 @_ZN7fxcodec18ProgressiveDecoder14GifStartDecodeERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* dereferenceable(8) undef)
  br label %166

161:                                              ; preds = %154
  %162 = call i32 @_ZN7fxcodec18ProgressiveDecoder15JpegStartDecodeERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* dereferenceable(8) %1)
  br label %166

163:                                              ; preds = %154
  %164 = call i32 @_ZN7fxcodec18ProgressiveDecoder14PngStartDecodeERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%"class.fxcodec::ProgressiveDecoder"* %0, %"class.fxcrt::RetainPtr.4"* dereferenceable(8) undef)
  br label %166

165:                                              ; preds = %154
  store i32 3, i32* %9, align 8
  br label %166

166:                                              ; preds = %150, %87, %146, %64, %154, %165, %163, %161, %159, %157
  %167 = phi i32 [ 3, %165 ], [ %164, %163 ], [ %162, %161 ], [ 3, %159 ], [ 3, %157 ], [ 9, %87 ], [ 9, %150 ], [ -1, %154 ], [ 9, %64 ], [ 9, %146 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #12
  br label %168

168:                                              ; preds = %52, %12, %46, %58, %16, %21, %6, %166
  %169 = phi i32 [ %167, %166 ], [ -1, %6 ], [ 9, %21 ], [ 9, %16 ], [ 9, %12 ], [ 9, %52 ], [ 9, %58 ], [ 9, %46 ]
  ret i32 %169
}

declare void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT*, %struct.FX_RECT* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7fxcodec18ProgressiveDecoder14ContinueDecodeEv(%"class.fxcodec::ProgressiveDecoder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 3
  br i1 %4, label %5, label %18

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.fxcodec::ProgressiveDecoder", %"class.fxcodec::ProgressiveDecoder"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %18 [
    i32 1, label %8
    i32 2, label %10
    i32 4, label %12
    i32 3, label %14
    i32 5, label %16
  ]

8:                                                ; preds = %5
  %9 = tail call i32 @_ZN7fxcodec18ProgressiveDecoder18JpegContinueDecodeEv(%"class.fxcodec::ProgressiveDecoder"* %0)
  br label %18

10:                                               ; preds = %5
  %11 = tail call i32 @_ZN7fxcodec18ProgressiveDecoder17BmpContinueDecodeEv(%"class.fxcodec::ProgressiveDecoder"* %0)
  br label %18

12:                                               ; preds = %5
  %13 = tail call i32 @_ZN7fxcodec18ProgressiveDecoder17GifContinueDecodeEv(%"class.fxcodec::ProgressiveDecoder"* %0)
  br label %18

14:                                               ; preds = %5
  %15 = tail call i32 @_ZN7fxcodec18ProgressiveDecoder17PngContinueDecodeEv(%"class.fxcodec::ProgressiveDecoder"* %0)
  br label %18

16:                                               ; preds = %5
  %17 = tail call i32 @_ZN7fxcodec18ProgressiveDecoder18TiffContinueDecodeEv(%"class.fxcodec::ProgressiveDecoder"* %0)
  br label %18

18:                                               ; preds = %5, %1, %16, %14, %12, %10, %8
  %19 = phi i32 [ %17, %16 ], [ %15, %14 ], [ %13, %12 ], [ %11, %10 ], [ %9, %8 ], [ -1, %1 ], [ -1, %5 ]
  ret i32 %19
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.f64(double) #9

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #2

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIh16FxAllocAllocatorIhEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #12
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %178

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #15
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %39, i64 1) #12
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #12
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = ptrtoint i8* %54 to i64
  %56 = load i8*, i8** %6, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp eq i8* %56, %54
  br i1 %58, label %172, label %59

59:                                               ; preds = %41
  %60 = ptrtoint i8* %56 to i64
  %61 = sub i64 %60, %55
  %62 = icmp ult i64 %61, 16
  br i1 %62, label %158, label %63

63:                                               ; preds = %59
  %64 = sub i64 %8, %57
  %65 = sub i64 %64, %24
  %66 = getelementptr i8, i8* %54, i64 %65
  %67 = ptrtoint i8* %66 to i64
  %68 = getelementptr i8, i8* %43, i64 %67
  %69 = icmp ult i8* %68, %56
  %70 = icmp ult i8* %54, %44
  %71 = and i1 %69, %70
  br i1 %71, label %158, label %72

72:                                               ; preds = %63
  %73 = and i64 %61, -16
  %74 = sub i64 0, %73
  %75 = getelementptr i8, i8* %44, i64 %74
  %76 = sub i64 0, %73
  %77 = getelementptr i8, i8* %56, i64 %76
  %78 = add i64 %73, -16
  %79 = lshr exact i64 %78, 4
  %80 = add nuw nsw i64 %79, 1
  %81 = and i64 %80, 3
  %82 = icmp ult i64 %78, 48
  br i1 %82, label %135, label %83

83:                                               ; preds = %72
  %84 = sub nsw i64 %80, %81
  %85 = getelementptr i8, i8* %44, i64 -1
  %86 = getelementptr inbounds i8, i8* %85, i64 -8
  %87 = getelementptr inbounds i8, i8* %56, i64 -16
  %88 = getelementptr inbounds i8, i8* %86, i64 -7
  %89 = getelementptr i8, i8* %44, i64 -1
  %90 = getelementptr inbounds i8, i8* %89, i64 -8
  %91 = getelementptr inbounds i8, i8* %56, i64 -16
  %92 = getelementptr inbounds i8, i8* %90, i64 -7
  %93 = getelementptr i8, i8* %44, i64 -1
  %94 = getelementptr inbounds i8, i8* %93, i64 -8
  %95 = getelementptr inbounds i8, i8* %56, i64 -16
  %96 = getelementptr inbounds i8, i8* %94, i64 -7
  %97 = getelementptr i8, i8* %44, i64 -1
  %98 = getelementptr inbounds i8, i8* %97, i64 -8
  %99 = getelementptr inbounds i8, i8* %56, i64 -16
  %100 = getelementptr inbounds i8, i8* %98, i64 -7
  br label %101

101:                                              ; preds = %101, %83
  %102 = phi i64 [ 0, %83 ], [ %132, %101 ]
  %103 = phi i64 [ %84, %83 ], [ %133, %101 ]
  %104 = sub i64 0, %102
  %105 = sub i64 0, %102
  %106 = getelementptr inbounds i8, i8* %87, i64 %105
  %107 = bitcast i8* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 1, !alias.scope !45
  %109 = getelementptr inbounds i8, i8* %88, i64 %104
  %110 = bitcast i8* %109 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %110, align 1, !alias.scope !48, !noalias !45
  %111 = sub nuw nsw i64 -16, %102
  %112 = sub nuw nsw i64 -16, %102
  %113 = getelementptr inbounds i8, i8* %91, i64 %112
  %114 = bitcast i8* %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 1, !alias.scope !45
  %116 = getelementptr inbounds i8, i8* %92, i64 %111
  %117 = bitcast i8* %116 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %117, align 1, !alias.scope !48, !noalias !45
  %118 = sub nuw nsw i64 -32, %102
  %119 = sub nuw nsw i64 -32, %102
  %120 = getelementptr inbounds i8, i8* %95, i64 %119
  %121 = bitcast i8* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 1, !alias.scope !45
  %123 = getelementptr inbounds i8, i8* %96, i64 %118
  %124 = bitcast i8* %123 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %124, align 1, !alias.scope !48, !noalias !45
  %125 = sub nuw nsw i64 -48, %102
  %126 = sub nuw nsw i64 -48, %102
  %127 = getelementptr inbounds i8, i8* %99, i64 %126
  %128 = bitcast i8* %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 1, !alias.scope !45
  %130 = getelementptr inbounds i8, i8* %100, i64 %125
  %131 = bitcast i8* %130 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %131, align 1, !alias.scope !48, !noalias !45
  %132 = add i64 %102, 64
  %133 = add i64 %103, -4
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %101, !llvm.loop !50

135:                                              ; preds = %101, %72
  %136 = phi i64 [ 0, %72 ], [ %132, %101 ]
  %137 = icmp eq i64 %81, 0
  br i1 %137, label %156, label %138

138:                                              ; preds = %135
  %139 = getelementptr i8, i8* %44, i64 -1
  %140 = getelementptr inbounds i8, i8* %139, i64 -8
  %141 = getelementptr inbounds i8, i8* %56, i64 -16
  %142 = getelementptr inbounds i8, i8* %140, i64 -7
  br label %143

143:                                              ; preds = %143, %138
  %144 = phi i64 [ %136, %138 ], [ %153, %143 ]
  %145 = phi i64 [ %81, %138 ], [ %154, %143 ]
  %146 = sub i64 0, %144
  %147 = sub i64 0, %144
  %148 = getelementptr inbounds i8, i8* %141, i64 %147
  %149 = bitcast i8* %148 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 1, !alias.scope !45
  %151 = getelementptr inbounds i8, i8* %142, i64 %146
  %152 = bitcast i8* %151 to <2 x i64>*
  store <2 x i64> %150, <2 x i64>* %152, align 1, !alias.scope !48, !noalias !45
  %153 = add i64 %144, 16
  %154 = add i64 %145, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %143, !llvm.loop !51

156:                                              ; preds = %143, %135
  %157 = icmp eq i64 %61, %73
  br i1 %157, label %168, label %158

158:                                              ; preds = %156, %63, %59
  %159 = phi i8* [ %44, %63 ], [ %44, %59 ], [ %75, %156 ]
  %160 = phi i8* [ %56, %63 ], [ %56, %59 ], [ %77, %156 ]
  br label %161

161:                                              ; preds = %158, %161
  %162 = phi i8* [ %164, %161 ], [ %159, %158 ]
  %163 = phi i8* [ %165, %161 ], [ %160, %158 ]
  %164 = getelementptr inbounds i8, i8* %162, i64 -1
  %165 = getelementptr inbounds i8, i8* %163, i64 -1
  %166 = load i8, i8* %165, align 1
  store i8 %166, i8* %164, align 1
  %167 = icmp eq i8* %165, %54
  br i1 %167, label %168, label %161, !llvm.loop !52

168:                                              ; preds = %161, %156
  %169 = phi i8* [ %75, %156 ], [ %164, %161 ]
  %170 = ptrtoint i8* %169 to i64
  %171 = load i64, i64* %23, align 8
  br label %172

172:                                              ; preds = %41, %168
  %173 = phi i64 [ %170, %168 ], [ %45, %41 ]
  %174 = phi i64 [ %171, %168 ], [ %55, %41 ]
  store i64 %173, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %178, label %176

176:                                              ; preds = %172
  %177 = inttoptr i64 %174 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %177) #12
  br label %178

178:                                              ; preds = %176, %172, %20
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIh16FxAllocAllocatorIhEE8__appendEmRKh(%"class.std::__1::vector"*, i64, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %84, label %12

12:                                               ; preds = %3
  %13 = inttoptr i64 %9 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %82, label %16

16:                                               ; preds = %12
  %17 = icmp ult i64 %1, 32
  br i1 %17, label %18, label %20

18:                                               ; preds = %73, %20, %16
  %19 = phi i8* [ %13, %20 ], [ %13, %16 ], [ %27, %73 ]
  br label %77

20:                                               ; preds = %16
  %21 = getelementptr i8, i8* %2, i64 1
  %22 = icmp ugt i8* %21, %13
  %23 = icmp ugt i8* %14, %2
  %24 = and i1 %22, %23
  br i1 %24, label %18, label %25

25:                                               ; preds = %20
  %26 = and i64 %1, -32
  %27 = getelementptr i8, i8* %13, i64 %26
  %28 = add i64 %26, -32
  %29 = lshr exact i64 %28, 5
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 1
  %32 = icmp eq i64 %28, 0
  br i1 %32, label %60, label %33

33:                                               ; preds = %25
  %34 = sub nuw nsw i64 %30, %31
  %35 = load i8, i8* %2, align 1, !alias.scope !53
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = insertelement <16 x i8> undef, i8 %35, i32 0
  %39 = shufflevector <16 x i8> %38, <16 x i8> undef, <16 x i32> zeroinitializer
  %40 = load i8, i8* %2, align 1, !alias.scope !53
  %41 = insertelement <16 x i8> undef, i8 %40, i32 0
  %42 = shufflevector <16 x i8> %41, <16 x i8> undef, <16 x i32> zeroinitializer
  %43 = insertelement <16 x i8> undef, i8 %40, i32 0
  %44 = shufflevector <16 x i8> %43, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %45

45:                                               ; preds = %45, %33
  %46 = phi i64 [ 0, %33 ], [ %57, %45 ]
  %47 = phi i64 [ %34, %33 ], [ %58, %45 ]
  %48 = getelementptr i8, i8* %13, i64 %46
  %49 = bitcast i8* %48 to <16 x i8>*
  store <16 x i8> %37, <16 x i8>* %49, align 1, !alias.scope !56, !noalias !53
  %50 = getelementptr i8, i8* %48, i64 16
  %51 = bitcast i8* %50 to <16 x i8>*
  store <16 x i8> %39, <16 x i8>* %51, align 1, !alias.scope !56, !noalias !53
  %52 = or i64 %46, 32
  %53 = getelementptr i8, i8* %13, i64 %52
  %54 = bitcast i8* %53 to <16 x i8>*
  store <16 x i8> %42, <16 x i8>* %54, align 1, !alias.scope !56, !noalias !53
  %55 = getelementptr i8, i8* %53, i64 16
  %56 = bitcast i8* %55 to <16 x i8>*
  store <16 x i8> %44, <16 x i8>* %56, align 1, !alias.scope !56, !noalias !53
  %57 = add i64 %46, 64
  %58 = add i64 %47, -2
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %45, !llvm.loop !58

60:                                               ; preds = %45, %25
  %61 = phi i64 [ 0, %25 ], [ %57, %45 ]
  %62 = icmp eq i64 %31, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %60
  %64 = getelementptr i8, i8* %13, i64 %61
  %65 = load i8, i8* %2, align 1, !alias.scope !53
  %66 = insertelement <16 x i8> undef, i8 %65, i32 0
  %67 = shufflevector <16 x i8> %66, <16 x i8> undef, <16 x i32> zeroinitializer
  %68 = insertelement <16 x i8> undef, i8 %65, i32 0
  %69 = shufflevector <16 x i8> %68, <16 x i8> undef, <16 x i32> zeroinitializer
  %70 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %67, <16 x i8>* %70, align 1, !alias.scope !56, !noalias !53
  %71 = getelementptr i8, i8* %64, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %69, <16 x i8>* %72, align 1, !alias.scope !56, !noalias !53
  br label %73

73:                                               ; preds = %60, %63
  %74 = icmp eq i64 %26, %1
  br i1 %74, label %75, label %18

75:                                               ; preds = %77, %73
  %76 = ptrtoint i8* %14 to i64
  br label %82

77:                                               ; preds = %18, %77
  %78 = phi i8* [ %80, %77 ], [ %19, %18 ]
  %79 = load i8, i8* %2, align 1
  store i8 %79, i8* %78, align 1
  %80 = getelementptr inbounds i8, i8* %78, i64 1
  %81 = icmp eq i8* %80, %14
  br i1 %81, label %75, label %77, !llvm.loop !59

82:                                               ; preds = %12, %75
  %83 = phi i64 [ %76, %75 ], [ %9, %12 ]
  store i64 %83, i64* %8, align 8
  br label %300

84:                                               ; preds = %3
  %85 = bitcast %"class.std::__1::vector"* %0 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %9, %86
  %88 = add i64 %87, %1
  %89 = icmp slt i64 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %84
  %91 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %91) #15
  unreachable

92:                                               ; preds = %84
  %93 = sub i64 %6, %86
  %94 = icmp ult i64 %93, 4611686018427387903
  br i1 %94, label %95, label %100

95:                                               ; preds = %92
  %96 = shl i64 %93, 1
  %97 = icmp ult i64 %96, %88
  %98 = select i1 %97, i64 %88, i64 %96
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %92, %95
  %101 = phi i64 [ %98, %95 ], [ 9223372036854775807, %92 ]
  %102 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %101, i64 1) #12
  br label %103

103:                                              ; preds = %95, %100
  %104 = phi i64 [ %101, %100 ], [ 0, %95 ]
  %105 = phi i8* [ %102, %100 ], [ null, %95 ]
  %106 = getelementptr inbounds i8, i8* %105, i64 %87
  %107 = getelementptr inbounds i8, i8* %105, i64 %104
  %108 = getelementptr inbounds i8, i8* %106, i64 %1
  %109 = icmp ult i64 %1, 32
  br i1 %109, label %165, label %110

110:                                              ; preds = %103
  %111 = getelementptr i8, i8* %2, i64 1
  %112 = icmp ult i8* %106, %111
  %113 = icmp ugt i8* %108, %2
  %114 = and i1 %112, %113
  br i1 %114, label %165, label %115

115:                                              ; preds = %110
  %116 = and i64 %1, -32
  %117 = getelementptr i8, i8* %106, i64 %116
  %118 = add i64 %116, -32
  %119 = lshr exact i64 %118, 5
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 1
  %122 = icmp eq i64 %118, 0
  br i1 %122, label %150, label %123

123:                                              ; preds = %115
  %124 = sub nuw nsw i64 %120, %121
  %125 = load i8, i8* %2, align 1, !alias.scope !60
  %126 = insertelement <16 x i8> undef, i8 %125, i32 0
  %127 = shufflevector <16 x i8> %126, <16 x i8> undef, <16 x i32> zeroinitializer
  %128 = insertelement <16 x i8> undef, i8 %125, i32 0
  %129 = shufflevector <16 x i8> %128, <16 x i8> undef, <16 x i32> zeroinitializer
  %130 = load i8, i8* %2, align 1, !alias.scope !60
  %131 = insertelement <16 x i8> undef, i8 %130, i32 0
  %132 = shufflevector <16 x i8> %131, <16 x i8> undef, <16 x i32> zeroinitializer
  %133 = insertelement <16 x i8> undef, i8 %130, i32 0
  %134 = shufflevector <16 x i8> %133, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %135

135:                                              ; preds = %135, %123
  %136 = phi i64 [ 0, %123 ], [ %147, %135 ]
  %137 = phi i64 [ %124, %123 ], [ %148, %135 ]
  %138 = getelementptr i8, i8* %106, i64 %136
  %139 = bitcast i8* %138 to <16 x i8>*
  store <16 x i8> %127, <16 x i8>* %139, align 1, !alias.scope !63, !noalias !60
  %140 = getelementptr i8, i8* %138, i64 16
  %141 = bitcast i8* %140 to <16 x i8>*
  store <16 x i8> %129, <16 x i8>* %141, align 1, !alias.scope !63, !noalias !60
  %142 = or i64 %136, 32
  %143 = getelementptr i8, i8* %106, i64 %142
  %144 = bitcast i8* %143 to <16 x i8>*
  store <16 x i8> %132, <16 x i8>* %144, align 1, !alias.scope !63, !noalias !60
  %145 = getelementptr i8, i8* %143, i64 16
  %146 = bitcast i8* %145 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %146, align 1, !alias.scope !63, !noalias !60
  %147 = add i64 %136, 64
  %148 = add i64 %137, -2
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %135, !llvm.loop !65

150:                                              ; preds = %135, %115
  %151 = phi i64 [ 0, %115 ], [ %147, %135 ]
  %152 = icmp eq i64 %121, 0
  br i1 %152, label %163, label %153

153:                                              ; preds = %150
  %154 = getelementptr i8, i8* %106, i64 %151
  %155 = load i8, i8* %2, align 1, !alias.scope !60
  %156 = insertelement <16 x i8> undef, i8 %155, i32 0
  %157 = shufflevector <16 x i8> %156, <16 x i8> undef, <16 x i32> zeroinitializer
  %158 = insertelement <16 x i8> undef, i8 %155, i32 0
  %159 = shufflevector <16 x i8> %158, <16 x i8> undef, <16 x i32> zeroinitializer
  %160 = bitcast i8* %154 to <16 x i8>*
  store <16 x i8> %157, <16 x i8>* %160, align 1, !alias.scope !63, !noalias !60
  %161 = getelementptr i8, i8* %154, i64 16
  %162 = bitcast i8* %161 to <16 x i8>*
  store <16 x i8> %159, <16 x i8>* %162, align 1, !alias.scope !63, !noalias !60
  br label %163

163:                                              ; preds = %150, %153
  %164 = icmp eq i64 %116, %1
  br i1 %164, label %172, label %165

165:                                              ; preds = %163, %110, %103
  %166 = phi i8* [ %106, %110 ], [ %106, %103 ], [ %117, %163 ]
  br label %167

167:                                              ; preds = %165, %167
  %168 = phi i8* [ %170, %167 ], [ %166, %165 ]
  %169 = load i8, i8* %2, align 1
  store i8 %169, i8* %168, align 1
  %170 = getelementptr inbounds i8, i8* %168, i64 1
  %171 = icmp eq i8* %108, %170
  br i1 %171, label %172, label %167, !llvm.loop !66

172:                                              ; preds = %167, %163
  %173 = ptrtoint i8* %107 to i64
  %174 = ptrtoint i8* %108 to i64
  %175 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = ptrtoint i8* %176 to i64
  %178 = load i8*, i8** %7, align 8
  %179 = ptrtoint i8* %178 to i64
  %180 = icmp eq i8* %178, %176
  br i1 %180, label %293, label %181

181:                                              ; preds = %172
  %182 = ptrtoint i8* %178 to i64
  %183 = sub i64 %182, %177
  %184 = icmp ult i64 %183, 16
  br i1 %184, label %280, label %185

185:                                              ; preds = %181
  %186 = sub i64 %9, %179
  %187 = sub i64 %186, %86
  %188 = getelementptr i8, i8* %176, i64 %187
  %189 = ptrtoint i8* %188 to i64
  %190 = getelementptr i8, i8* %105, i64 %189
  %191 = icmp ult i8* %190, %178
  %192 = icmp ult i8* %176, %106
  %193 = and i1 %191, %192
  br i1 %193, label %280, label %194

194:                                              ; preds = %185
  %195 = and i64 %183, -16
  %196 = sub i64 0, %195
  %197 = getelementptr i8, i8* %106, i64 %196
  %198 = sub i64 0, %195
  %199 = getelementptr i8, i8* %178, i64 %198
  %200 = add i64 %195, -16
  %201 = lshr exact i64 %200, 4
  %202 = add nuw nsw i64 %201, 1
  %203 = and i64 %202, 3
  %204 = icmp ult i64 %200, 48
  br i1 %204, label %257, label %205

205:                                              ; preds = %194
  %206 = sub nsw i64 %202, %203
  %207 = getelementptr i8, i8* %106, i64 -1
  %208 = getelementptr inbounds i8, i8* %207, i64 -8
  %209 = getelementptr inbounds i8, i8* %178, i64 -16
  %210 = getelementptr inbounds i8, i8* %208, i64 -7
  %211 = getelementptr i8, i8* %106, i64 -1
  %212 = getelementptr inbounds i8, i8* %211, i64 -8
  %213 = getelementptr inbounds i8, i8* %178, i64 -16
  %214 = getelementptr inbounds i8, i8* %212, i64 -7
  %215 = getelementptr i8, i8* %106, i64 -1
  %216 = getelementptr inbounds i8, i8* %215, i64 -8
  %217 = getelementptr inbounds i8, i8* %178, i64 -16
  %218 = getelementptr inbounds i8, i8* %216, i64 -7
  %219 = getelementptr i8, i8* %106, i64 -1
  %220 = getelementptr inbounds i8, i8* %219, i64 -8
  %221 = getelementptr inbounds i8, i8* %178, i64 -16
  %222 = getelementptr inbounds i8, i8* %220, i64 -7
  br label %223

223:                                              ; preds = %223, %205
  %224 = phi i64 [ 0, %205 ], [ %254, %223 ]
  %225 = phi i64 [ %206, %205 ], [ %255, %223 ]
  %226 = sub i64 0, %224
  %227 = sub i64 0, %224
  %228 = getelementptr inbounds i8, i8* %209, i64 %227
  %229 = bitcast i8* %228 to <2 x i64>*
  %230 = load <2 x i64>, <2 x i64>* %229, align 1, !alias.scope !67
  %231 = getelementptr inbounds i8, i8* %210, i64 %226
  %232 = bitcast i8* %231 to <2 x i64>*
  store <2 x i64> %230, <2 x i64>* %232, align 1, !alias.scope !70, !noalias !67
  %233 = sub nuw nsw i64 -16, %224
  %234 = sub nuw nsw i64 -16, %224
  %235 = getelementptr inbounds i8, i8* %213, i64 %234
  %236 = bitcast i8* %235 to <2 x i64>*
  %237 = load <2 x i64>, <2 x i64>* %236, align 1, !alias.scope !67
  %238 = getelementptr inbounds i8, i8* %214, i64 %233
  %239 = bitcast i8* %238 to <2 x i64>*
  store <2 x i64> %237, <2 x i64>* %239, align 1, !alias.scope !70, !noalias !67
  %240 = sub nuw nsw i64 -32, %224
  %241 = sub nuw nsw i64 -32, %224
  %242 = getelementptr inbounds i8, i8* %217, i64 %241
  %243 = bitcast i8* %242 to <2 x i64>*
  %244 = load <2 x i64>, <2 x i64>* %243, align 1, !alias.scope !67
  %245 = getelementptr inbounds i8, i8* %218, i64 %240
  %246 = bitcast i8* %245 to <2 x i64>*
  store <2 x i64> %244, <2 x i64>* %246, align 1, !alias.scope !70, !noalias !67
  %247 = sub nuw nsw i64 -48, %224
  %248 = sub nuw nsw i64 -48, %224
  %249 = getelementptr inbounds i8, i8* %221, i64 %248
  %250 = bitcast i8* %249 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 1, !alias.scope !67
  %252 = getelementptr inbounds i8, i8* %222, i64 %247
  %253 = bitcast i8* %252 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %253, align 1, !alias.scope !70, !noalias !67
  %254 = add i64 %224, 64
  %255 = add i64 %225, -4
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %223, !llvm.loop !72

257:                                              ; preds = %223, %194
  %258 = phi i64 [ 0, %194 ], [ %254, %223 ]
  %259 = icmp eq i64 %203, 0
  br i1 %259, label %278, label %260

260:                                              ; preds = %257
  %261 = getelementptr i8, i8* %106, i64 -1
  %262 = getelementptr inbounds i8, i8* %261, i64 -8
  %263 = getelementptr inbounds i8, i8* %178, i64 -16
  %264 = getelementptr inbounds i8, i8* %262, i64 -7
  br label %265

265:                                              ; preds = %265, %260
  %266 = phi i64 [ %258, %260 ], [ %275, %265 ]
  %267 = phi i64 [ %203, %260 ], [ %276, %265 ]
  %268 = sub i64 0, %266
  %269 = sub i64 0, %266
  %270 = getelementptr inbounds i8, i8* %263, i64 %269
  %271 = bitcast i8* %270 to <2 x i64>*
  %272 = load <2 x i64>, <2 x i64>* %271, align 1, !alias.scope !67
  %273 = getelementptr inbounds i8, i8* %264, i64 %268
  %274 = bitcast i8* %273 to <2 x i64>*
  store <2 x i64> %272, <2 x i64>* %274, align 1, !alias.scope !70, !noalias !67
  %275 = add i64 %266, 16
  %276 = add i64 %267, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %265, !llvm.loop !73

278:                                              ; preds = %265, %257
  %279 = icmp eq i64 %183, %195
  br i1 %279, label %290, label %280

280:                                              ; preds = %278, %185, %181
  %281 = phi i8* [ %106, %185 ], [ %106, %181 ], [ %197, %278 ]
  %282 = phi i8* [ %178, %185 ], [ %178, %181 ], [ %199, %278 ]
  br label %283

283:                                              ; preds = %280, %283
  %284 = phi i8* [ %286, %283 ], [ %281, %280 ]
  %285 = phi i8* [ %287, %283 ], [ %282, %280 ]
  %286 = getelementptr inbounds i8, i8* %284, i64 -1
  %287 = getelementptr inbounds i8, i8* %285, i64 -1
  %288 = load i8, i8* %287, align 1
  store i8 %288, i8* %286, align 1
  %289 = icmp eq i8* %287, %176
  br i1 %289, label %290, label %283, !llvm.loop !74

290:                                              ; preds = %283, %278
  %291 = phi i8* [ %197, %278 ], [ %286, %283 ]
  %292 = load i64, i64* %85, align 8
  br label %293

293:                                              ; preds = %172, %290
  %294 = phi i8* [ %291, %290 ], [ %106, %172 ]
  %295 = phi i64 [ %292, %290 ], [ %177, %172 ]
  %296 = ptrtoint i8* %294 to i64
  store i64 %296, i64* %85, align 8
  store i64 %174, i64* %8, align 8
  store i64 %173, i64* %5, align 8
  %297 = icmp eq i64 %295, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %293
  %299 = inttoptr i64 %295 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %299) #12
  br label %300

300:                                              ; preds = %298, %293, %82
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN15CFX_CodecMemoryC1Em(%class.CFX_CodecMemory*, i64) unnamed_addr #3

declare void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind returns_twice }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11, !9}
!11 = !{!"llvm.loop.unroll.runtime.disable"}
!12 = distinct !{!12, !9}
!13 = distinct !{!13, !11, !9}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK6pdfium4spanIKhE5firstEm: argument 0"}
!16 = distinct !{!16, !"_ZNK6pdfium4spanIKhE5firstEm"}
!17 = !{i32 -2144545394}
!18 = !{i32 -2144545373}
!19 = !{i32 -2144598392}
!20 = !{i32 -2144598371}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN6pdfium10MakeRetainI15CFX_CodecMemoryJRjEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!23 = distinct !{!23, !"_ZN6pdfium10MakeRetainI15CFX_CodecMemoryJRjEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN6pdfium10MakeRetainI15CFX_CodecMemoryJRjEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZN6pdfium10MakeRetainI15CFX_CodecMemoryJRjEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!29 = distinct !{!29, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!32 = distinct !{!32, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!35 = distinct !{!35, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!38 = distinct !{!38, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!41 = distinct !{!41, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN6pdfium10MakeRetainI15CFX_CodecMemoryJRmEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!44 = distinct !{!44, !"_ZN6pdfium10MakeRetainI15CFX_CodecMemoryJRmEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !9}
!51 = distinct !{!51, !6}
!52 = distinct !{!52, !9}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !9}
!59 = distinct !{!59, !9}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !9}
!66 = distinct !{!66, !9}
!67 = !{!68}
!68 = distinct !{!68, !69}
!69 = distinct !{!69, !"LVerDomain"}
!70 = !{!71}
!71 = distinct !{!71, !69}
!72 = distinct !{!72, !9}
!73 = distinct !{!73, !6}
!74 = distinct !{!74, !9}
