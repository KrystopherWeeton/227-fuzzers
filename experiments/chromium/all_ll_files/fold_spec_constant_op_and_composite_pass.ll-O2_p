; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/fold_spec_constant_op_and_composite_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/fold_spec_constant_op_and_composite_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::FoldSpecConstantOpAndCompositePass" = type { %"class.spvtools::opt::Pass.base", [7 x i8] }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"struct.std::__1::pair.927" = type { i32, %"class.spvtools::opt::analysis::Constant"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type <{ %"class.spvtools::opt::analysis::Constant"*, i32, [4 x i8] }>
%"class.std::__1::function.910" = type { %"class.std::__1::__function::__policy_func.914" }
%"class.std::__1::__function::__policy_func.914" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.915", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.915" = type { i32 (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.spvtools::opt::analysis::Bool" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"class.spvtools::opt::analysis::Integer" = type <{ %"class.spvtools::opt::analysis::Type.base", i32, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Vector" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.spvtools::opt::analysis::VectorConstant" = type { %"class.spvtools::opt::analysis::CompositeConstant", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::CompositeConstant" = type { %"class.spvtools::opt::analysis::Constant", %"class.std::__1::vector.802" }
%"class.spvtools::opt::analysis::NullConstant" = type { %"class.spvtools::opt::analysis::Constant" }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::__tree_node.943" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.944" }
%"struct.std::__1::pair.944" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.spvtools::opt::analysis::ConstantHash" = type { i8 }
%"struct.spvtools::opt::analysis::ConstantEqual" = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::basic_string.967" = type { %"class.std::__1::__compressed_pair.968" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__rep" }
%"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__rep" = type { %union.anon.970 }
%union.anon.970 = type { %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__long" }
%"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__long" = type { i32*, i64, i64 }
%"class.spvtools::opt::analysis::ScalarConstant" = type { %"class.spvtools::opt::analysis::Constant", %"class.std::__1::vector.3" }
%"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short" = type { [5 x i32], %struct.anon.971 }
%struct.anon.971 = type { %"struct.std::__1::__padding.972", i8 }
%"struct.std::__1::__padding.972" = type { [3 x i8] }
%"class.spvtools::opt::analysis::IntConstant" = type { %"class.spvtools::opt::analysis::ScalarConstant" }
%"class.spvtools::opt::analysis::FloatConstant" = type { %"class.spvtools::opt::analysis::ScalarConstant" }
%"class.spvtools::opt::analysis::BoolConstant" = type <{ %"class.spvtools::opt::analysis::ScalarConstant", i8, [7 x i8] }>
%"class.spvtools::opt::analysis::StructConstant" = type { %"class.spvtools::opt::analysis::CompositeConstant" }
%"class.spvtools::opt::analysis::MatrixConstant" = type { %"class.spvtools::opt::analysis::CompositeConstant", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::ArrayConstant" = type { %"class.spvtools::opt::analysis::CompositeConstant" }

$_ZN8spvtools3opt8analysis15ConstantManager17MapConstantToInstEPKNS1_8ConstantEPNS0_11InstructionE = comdat any

$_ZN8spvtools3opt9IRContext22get_instruction_folderEv = comdat any

$_ZNSt3__16vectorIPKN8spvtools3opt8analysis8ConstantENS_9allocatorIS6_EEE6insertINS_11__wrap_iterIPKS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISG_E9referenceEEE5valueENSB_IPS6_EEE4typeESE_SG_SG_ = comdat any

$_ZNSt3__16vectorIPKN8spvtools3opt8analysis8ConstantENS_9allocatorIS6_EEE6insertENS_11__wrap_iterIPKS6_EEmRSB_ = comdat any

$_ZN8spvtools3opt8analysis15ConstantManager11GetConstantINS_5utils11SmallVectorIjLm2EEEEEPKNS1_8ConstantEPKNS1_4TypeERKT_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt34FoldSpecConstantOpAndCompositePassD0Ev = comdat any

$_ZNK8spvtools3opt34FoldSpecConstantOpAndCompositePass4nameEv = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt8analysis15ConstantManagerD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPKN8spvtools3opt8analysis8ConstantEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIjJNS_4pairIKjS7_EEEEENSL_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPKN8spvtools3opt8analysis8ConstantEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPKN8spvtools3opt8analysis8ConstantEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3opt8analysis8ConstantENS3_12ConstantHashENS3_13ConstantEqualENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNK8spvtools3opt8analysis12ConstantHashclEPKNS1_8ConstantE = comdat any

$_ZNK8spvtools3opt8analysis13ConstantEqualclEPKNS1_8ConstantES5_ = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3opt8analysis8ConstantENS3_12ConstantHashENS3_13ConstantEqualENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNK8spvtools3opt8analysis12ConstantHash11add_pointerEPNSt3__112basic_stringIDiNS3_11char_traitsIDiEENS3_9allocatorIDiEEEEPKv = comdat any

$_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3opt8analysis8ConstantENS3_12ConstantHashENS3_13ConstantEqualENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt8analysis8ConstantENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EE15MoveToLargeDataEv = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZN8spvtools3opt8analysis17CompositeConstantD2Ev = comdat any

$_ZN8spvtools3opt8analysis14VectorConstantD0Ev = comdat any

$_ZNK8spvtools3opt8analysis14VectorConstant4CopyEv = comdat any

$_ZN8spvtools3opt8analysis8Constant16AsScalarConstantEv = comdat any

$_ZN8spvtools3opt8analysis8Constant13AsIntConstantEv = comdat any

$_ZN8spvtools3opt8analysis8Constant15AsFloatConstantEv = comdat any

$_ZN8spvtools3opt8analysis8Constant14AsBoolConstantEv = comdat any

$_ZN8spvtools3opt8analysis17CompositeConstant19AsCompositeConstantEv = comdat any

$_ZN8spvtools3opt8analysis8Constant16AsStructConstantEv = comdat any

$_ZN8spvtools3opt8analysis14VectorConstant16AsVectorConstantEv = comdat any

$_ZN8spvtools3opt8analysis8Constant16AsMatrixConstantEv = comdat any

$_ZN8spvtools3opt8analysis8Constant15AsArrayConstantEv = comdat any

$_ZN8spvtools3opt8analysis8Constant14AsNullConstantEv = comdat any

$_ZNK8spvtools3opt8analysis8Constant16AsScalarConstantEv = comdat any

$_ZNK8spvtools3opt8analysis8Constant13AsIntConstantEv = comdat any

$_ZNK8spvtools3opt8analysis8Constant15AsFloatConstantEv = comdat any

$_ZNK8spvtools3opt8analysis8Constant14AsBoolConstantEv = comdat any

$_ZNK8spvtools3opt8analysis17CompositeConstant19AsCompositeConstantEv = comdat any

$_ZNK8spvtools3opt8analysis8Constant16AsStructConstantEv = comdat any

$_ZNK8spvtools3opt8analysis14VectorConstant16AsVectorConstantEv = comdat any

$_ZNK8spvtools3opt8analysis8Constant16AsMatrixConstantEv = comdat any

$_ZNK8spvtools3opt8analysis8Constant15AsArrayConstantEv = comdat any

$_ZNK8spvtools3opt8analysis8Constant14AsNullConstantEv = comdat any

$_ZNK8spvtools3opt8analysis17CompositeConstant6IsZeroEv = comdat any

$_ZNK8spvtools3opt8analysis17CompositeConstant13GetComponentsEv = comdat any

$_ZN8spvtools3opt8analysis17CompositeConstantD0Ev = comdat any

$_ZN8spvtools3opt8analysis8Constant16AsVectorConstantEv = comdat any

$_ZNK8spvtools3opt8analysis8Constant16AsVectorConstantEv = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

$_ZTVN8spvtools3opt8analysis14VectorConstantE = comdat any

$_ZTVN8spvtools3opt8analysis17CompositeConstantE = comdat any

@.ref.tmp = private constant [2 x i32] [i32 1, i32 2], align 4
@_ZTVN8spvtools3opt34FoldSpecConstantOpAndCompositePassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"*)* @_ZN8spvtools3opt34FoldSpecConstantOpAndCompositePassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"*)* @_ZNK8spvtools3opt34FoldSpecConstantOpAndCompositePass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"*)* @_ZN8spvtools3opt34FoldSpecConstantOpAndCompositePass7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools3opt20ConstantFoldingRulesE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN8spvtools3opt12FoldingRulesE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp.3 = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [29 x i8] c"fold-spec-const-op-composite\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt34FoldSpecConstantOpAndCompositePass25FoldWithInstructionFolderEPNS5_15InstructionList8iteratorEE3$_0FjjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZTVN8spvtools3opt8analysis14VectorConstantE = linkonce_odr hidden unnamed_addr constant { [27 x i8*] } { [27 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::CompositeConstant"*)* @_ZN8spvtools3opt8analysis17CompositeConstantD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::VectorConstant"*)* @_ZN8spvtools3opt8analysis14VectorConstantD0Ev to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Constant"* (%"class.spvtools::opt::analysis::VectorConstant"*)* @_ZNK8spvtools3opt8analysis14VectorConstant4CopyEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant16AsScalarConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant13AsIntConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::FloatConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant15AsFloatConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant14AsBoolConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::CompositeConstant"*)* @_ZN8spvtools3opt8analysis17CompositeConstant19AsCompositeConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::StructConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant16AsStructConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::VectorConstant"*)* @_ZN8spvtools3opt8analysis14VectorConstant16AsVectorConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::MatrixConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant16AsMatrixConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ArrayConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant15AsArrayConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant14AsNullConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant16AsScalarConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant13AsIntConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::FloatConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant15AsFloatConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant14AsBoolConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::CompositeConstant"*)* @_ZNK8spvtools3opt8analysis17CompositeConstant19AsCompositeConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::StructConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant16AsStructConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::VectorConstant"*)* @_ZNK8spvtools3opt8analysis14VectorConstant16AsVectorConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::MatrixConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant16AsMatrixConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ArrayConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant15AsArrayConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant14AsNullConstantEv to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::CompositeConstant"*)* @_ZNK8spvtools3opt8analysis17CompositeConstant6IsZeroEv to i8*), i8* bitcast (%"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)* @_ZNK8spvtools3opt8analysis17CompositeConstant13GetComponentsEv to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt8analysis17CompositeConstantE = linkonce_odr hidden unnamed_addr constant { [27 x i8*] } { [27 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::CompositeConstant"*)* @_ZN8spvtools3opt8analysis17CompositeConstantD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::CompositeConstant"*)* @_ZN8spvtools3opt8analysis17CompositeConstantD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant16AsScalarConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant13AsIntConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::FloatConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant15AsFloatConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant14AsBoolConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::CompositeConstant"*)* @_ZN8spvtools3opt8analysis17CompositeConstant19AsCompositeConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::StructConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant16AsStructConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant16AsVectorConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::MatrixConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant16AsMatrixConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ArrayConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant15AsArrayConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZN8spvtools3opt8analysis8Constant14AsNullConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant16AsScalarConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant13AsIntConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::FloatConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant15AsFloatConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant14AsBoolConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::CompositeConstant"*)* @_ZNK8spvtools3opt8analysis17CompositeConstant19AsCompositeConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::StructConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant16AsStructConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant16AsVectorConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::MatrixConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant16AsMatrixConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ArrayConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant15AsArrayConstantEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)* @_ZNK8spvtools3opt8analysis8Constant14AsNullConstantEv to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::CompositeConstant"*)* @_ZNK8spvtools3opt8analysis17CompositeConstant6IsZeroEv to i8*), i8* bitcast (%"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)* @_ZNK8spvtools3opt8analysis17CompositeConstant13GetComponentsEv to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt34FoldSpecConstantOpAndCompositePass7ProcessEv(%"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass", %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %5, align 8, !noalias !2
  %7 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %6, i64 0, i32 14, i32 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !3
  %10 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %2 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %6, i64 0, i32 14, i32 0, i32 1
  %13 = inttoptr i64 %9 to %"class.spvtools::opt::Instruction"*
  %14 = icmp eq %"class.spvtools::opt::Instruction"* %12, %13
  br i1 %14, label %15, label %20

15:                                               ; preds = %141, %1
  %16 = phi i8 [ 0, %1 ], [ %142, %141 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  %17 = and i8 %16, 1
  %18 = icmp eq i8 %17, 0
  %19 = select i1 %18, i32 17, i32 16
  ret i32 %19

20:                                               ; preds = %1, %141
  %21 = phi %"class.spvtools::opt::Instruction"* [ %147, %141 ], [ %13, %1 ]
  %22 = phi %"class.spvtools::opt::IRContext"* [ %143, %141 ], [ %4, %1 ]
  %23 = phi i8 [ %142, %141 ], [ 0, %1 ]
  %24 = phi i64 [ %28, %141 ], [ %9, %1 ]
  %25 = inttoptr i64 %24 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %26 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %25, i64 0, i32 1
  %27 = bitcast %"class.spvtools::opt::Instruction"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %22, i64 0, i32 11
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 16384
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %47

33:                                               ; preds = %20
  %34 = call i8* @_Znwm(i64 136) #12
  %35 = bitcast i8* %34 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %35, %"class.spvtools::opt::IRContext"* %22) #11
  %36 = ptrtoint i8* %34 to i64
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %22, i64 0, i32 19
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %38, align 8
  %40 = bitcast %"class.std::__1::unique_ptr.400"* %37 to i64*
  store i64 %36, i64* %40, align 8
  %41 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %39, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %33
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %39) #11
  %43 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %39 to i8*
  call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %42, %33
  %45 = load i32, i32* %29, align 8
  %46 = or i32 %45, 16384
  store i32 %46, i32* %29, align 8
  br label %47

47:                                               ; preds = %20, %44
  %48 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %22, i64 0, i32 19, i32 0, i32 0, i32 0
  %49 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %48, align 8
  %50 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis15ConstantManager7GetTypeEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"* %49, %"class.spvtools::opt::Instruction"* %21) #11
  %51 = icmp eq %"class.spvtools::opt::analysis::Type"* %50, null
  br i1 %51, label %81, label %52

52:                                               ; preds = %47
  %53 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 11
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, 16384
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %72

58:                                               ; preds = %52
  %59 = call i8* @_Znwm(i64 136) #12
  %60 = bitcast i8* %59 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %60, %"class.spvtools::opt::IRContext"* %53) #11
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 19
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %63, align 8
  %65 = bitcast %"class.std::__1::unique_ptr.400"* %62 to i64*
  store i64 %61, i64* %65, align 8
  %66 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %64, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %58
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %64) #11
  %68 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %64 to i8*
  call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %67, %58
  %70 = load i32, i32* %54, align 8
  %71 = or i32 %70, 16384
  store i32 %71, i32* %54, align 8
  br label %72

72:                                               ; preds = %52, %69
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 19, i32 0, i32 0, i32 0
  %74 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %73, align 8
  %75 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis15ConstantManager7GetTypeEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"* %74, %"class.spvtools::opt::Instruction"* %21) #11
  %76 = bitcast %"class.spvtools::opt::analysis::Type"* %75 to i1 (%"class.spvtools::opt::analysis::Type"*)***
  %77 = load i1 (%"class.spvtools::opt::analysis::Type"*)**, i1 (%"class.spvtools::opt::analysis::Type"*)*** %76, align 8
  %78 = getelementptr inbounds i1 (%"class.spvtools::opt::analysis::Type"*)*, i1 (%"class.spvtools::opt::analysis::Type"*)** %77, i64 4
  %79 = load i1 (%"class.spvtools::opt::analysis::Type"*)*, i1 (%"class.spvtools::opt::analysis::Type"*)** %78, align 8
  %80 = call zeroext i1 %79(%"class.spvtools::opt::analysis::Type"* %75) #11
  br i1 %80, label %81, label %141

81:                                               ; preds = %47, %72
  %82 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %21, i64 0, i32 2
  %83 = load i32, i32* %82, align 8
  switch i32 %83, label %141 [
    i32 41, label %84
    i32 42, label %84
    i32 43, label %84
    i32 46, label %84
    i32 44, label %84
    i32 51, label %84
    i32 52, label %136
  ]

84:                                               ; preds = %81, %81, %81, %81, %81, %81
  %85 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %85, i64 0, i32 11
  %87 = load i32, i32* %86, align 8
  %88 = and i32 %87, 16384
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %104

90:                                               ; preds = %84
  %91 = call i8* @_Znwm(i64 136) #12
  %92 = bitcast i8* %91 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %92, %"class.spvtools::opt::IRContext"* %85) #11
  %93 = ptrtoint i8* %91 to i64
  %94 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %85, i64 0, i32 19
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %95, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.400"* %94 to i64*
  store i64 %93, i64* %97, align 8
  %98 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %96, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %90
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %96) #11
  %100 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %96 to i8*
  call void @_ZdlPv(i8* %100) #12
  br label %101

101:                                              ; preds = %99, %90
  %102 = load i32, i32* %86, align 8
  %103 = or i32 %102, 16384
  store i32 %103, i32* %86, align 8
  br label %104

104:                                              ; preds = %84, %101
  %105 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %85, i64 0, i32 19, i32 0, i32 0, i32 0
  %106 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %105, align 8
  %107 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager19GetConstantFromInstEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"* %106, %"class.spvtools::opt::Instruction"* %21) #11
  %108 = icmp eq %"class.spvtools::opt::analysis::Constant"* %107, null
  br i1 %108, label %141, label %109

109:                                              ; preds = %104
  %110 = icmp eq i32 %83, 51
  br i1 %110, label %111, label %112

111:                                              ; preds = %109
  store i32 44, i32* %82, align 8
  br label %112

112:                                              ; preds = %111, %109
  %113 = phi i8 [ 1, %111 ], [ %23, %109 ]
  %114 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %114, i64 0, i32 11
  %116 = load i32, i32* %115, align 8
  %117 = and i32 %116, 16384
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %133

119:                                              ; preds = %112
  %120 = call i8* @_Znwm(i64 136) #12
  %121 = bitcast i8* %120 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %121, %"class.spvtools::opt::IRContext"* %114) #11
  %122 = ptrtoint i8* %120 to i64
  %123 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %114, i64 0, i32 19
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %123, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %124, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.400"* %123 to i64*
  store i64 %122, i64* %126, align 8
  %127 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %125, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %119
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %125) #11
  %129 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %125 to i8*
  call void @_ZdlPv(i8* %129) #12
  br label %130

130:                                              ; preds = %128, %119
  %131 = load i32, i32* %115, align 8
  %132 = or i32 %131, 16384
  store i32 %132, i32* %115, align 8
  br label %133

133:                                              ; preds = %112, %130
  %134 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %114, i64 0, i32 19, i32 0, i32 0, i32 0
  %135 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %134, align 8
  call void @_ZN8spvtools3opt8analysis15ConstantManager17MapConstantToInstEPKNS1_8ConstantEPNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"* %135, %"class.spvtools::opt::analysis::Constant"* nonnull %107, %"class.spvtools::opt::Instruction"* %21)
  br label %141

136:                                              ; preds = %81
  %137 = call zeroext i1 @_ZN8spvtools3opt34FoldSpecConstantOpAndCompositePass23ProcessOpSpecConstantOpEPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* %0, %"class.spvtools::opt::InstructionList::iterator"* nonnull %2)
  %138 = zext i1 %137 to i8
  %139 = and i8 %23, 1
  %140 = or i8 %139, %138
  br label %141

141:                                              ; preds = %136, %104, %133, %81, %72
  %142 = phi i8 [ %23, %72 ], [ %140, %136 ], [ %113, %133 ], [ %23, %104 ], [ %23, %81 ]
  store i64 %28, i64* %11, align 8
  %143 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %144 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %143, i64 0, i32 4, i32 0, i32 0, i32 0
  %145 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %144, align 8, !noalias !12
  %146 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %145, i64 0, i32 14, i32 0, i32 1
  %147 = inttoptr i64 %28 to %"class.spvtools::opt::Instruction"*
  %148 = icmp eq %"class.spvtools::opt::Instruction"* %146, %147
  br i1 %148, label %15, label %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis15ConstantManager7GetTypeEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager19GetConstantFromInstEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis15ConstantManager17MapConstantToInstEPKNS1_8ConstantEPNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.927", align 8
  %5 = ptrtoint %"class.spvtools::opt::analysis::Constant"* %1 to i64
  %6 = bitcast %"struct.std::__1::pair.927"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 4
  %8 = load i8, i8* %7, align 1, !range !15
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 3
  %12 = load i8, i8* %11, align 4, !range !15
  %13 = zext i8 %12 to i32
  %14 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %13) #11
  br label %15

15:                                               ; preds = %3, %10
  %16 = phi i32 [ %14, %10 ], [ 0, %3 ]
  %17 = getelementptr inbounds %"struct.std::__1::pair.927", %"struct.std::__1::pair.927"* %4, i64 0, i32 0
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.927", %"struct.std::__1::pair.927"* %4, i64 0, i32 1
  %19 = bitcast %"class.spvtools::opt::analysis::Constant"** %18 to i64*
  store i64 %5, i64* %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0
  %21 = call { %"struct.std::__1::__hash_node_base.408"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPKN8spvtools3opt8analysis8ConstantEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIjJNS_4pairIKjS7_EEEEENSL_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.404"* %20, i32* nonnull dereferenceable(4) %17, %"struct.std::__1::pair.927"* nonnull dereferenceable(16) %4) #11
  %22 = extractvalue { %"struct.std::__1::__hash_node_base.408"*, i8 } %21, 1
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  br i1 %24, label %92, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2
  %27 = load i8, i8* %7, align 1, !range !15
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 3
  %31 = load i8, i8* %30, align 4, !range !15
  %32 = zext i8 %31 to i32
  %33 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %32) #11
  br label %34

34:                                               ; preds = %25, %29
  %35 = phi i32 [ %33, %29 ], [ 0, %25 ]
  %36 = call i8* @_Znwm(i64 48) #12, !noalias !16
  %37 = getelementptr inbounds i8, i8* %36, i64 32
  %38 = bitcast i8* %37 to i64*
  store i64 %5, i64* %38, align 8, !noalias !16
  %39 = getelementptr inbounds i8, i8* %36, i64 40
  %40 = bitcast i8* %39 to i32*
  store i32 %35, i32* %40, align 8, !noalias !16
  %41 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %67, label %45

45:                                               ; preds = %34, %64
  %46 = phi %"class.std::__1::__tree_node"* [ %66, %64 ], [ %43, %34 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 2, i32 0, i32 0
  %48 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %47, align 8
  %49 = icmp ugt %"class.spvtools::opt::analysis::Constant"* %48, %1
  br i1 %49, label %50, label %57

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, null
  br i1 %53, label %54, label %64

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 0, i32 0
  br label %69

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 0, i32 1
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %61, label %64

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 0, i32 0
  br label %69

64:                                               ; preds = %57, %50
  %65 = phi %"class.std::__1::__tree_node_base"* [ %52, %50 ], [ %59, %57 ]
  %66 = bitcast %"class.std::__1::__tree_node_base"* %65 to %"class.std::__1::__tree_node"*
  br label %45

67:                                               ; preds = %34
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 0, i32 0
  br label %69

69:                                               ; preds = %67, %61, %54
  %70 = phi %"class.std::__1::__tree_end_node"* [ %41, %67 ], [ %56, %54 ], [ %63, %61 ]
  %71 = phi %"class.std::__1::__tree_node_base"** [ %68, %67 ], [ %55, %54 ], [ %62, %61 ]
  %72 = bitcast i8* %36 to %"class.std::__1::__tree_node_base"*
  %73 = getelementptr inbounds i8, i8* %36, i64 16
  %74 = bitcast i8* %73 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %70, %"class.std::__1::__tree_end_node"** %74, align 8
  %75 = bitcast %"class.std::__1::__tree_node_base"** %71 to i8**
  store i8* %36, i8** %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::multimap", %"class.std::__1::multimap"* %26, i64 0, i32 0, i32 0
  %77 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %69
  %82 = ptrtoint %"class.std::__1::__tree_node_base"* %79 to i64
  %83 = bitcast %"class.std::__1::multimap"* %26 to i64*
  store i64 %82, i64* %83, align 8
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  br label %85

85:                                               ; preds = %69, %81
  %86 = phi %"class.std::__1::__tree_node_base"* [ %72, %69 ], [ %84, %81 ]
  %87 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %88, %"class.std::__1::__tree_node_base"* %86) #11
  %89 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, 1
  store i64 %91, i64* %89, align 8
  br label %92

92:                                               ; preds = %15, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt34FoldSpecConstantOpAndCompositePass23ProcessOpSpecConstantOpEPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* nocapture readonly, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !15
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !15
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, i32 1, i32 2
  %12 = xor i1 %10, true
  %13 = zext i1 %12 to i32
  %14 = select i1 %7, i32 %13, i32 %11
  %15 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %4, i32 %14) #11
  switch i32 %15, label %18 [
    i32 81, label %16
    i32 79, label %16
    i32 82, label %16
    i32 116, label %16
  ]

16:                                               ; preds = %2, %2, %2, %2
  %17 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt34FoldSpecConstantOpAndCompositePass25FoldWithInstructionFolderEPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* %0, %"class.spvtools::opt::InstructionList::iterator"* %1)
  br label %20

18:                                               ; preds = %2
  %19 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt34FoldSpecConstantOpAndCompositePass24DoComponentWiseOperationEPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* %0, %"class.spvtools::opt::InstructionList::iterator"* %1)
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi %"class.spvtools::opt::Instruction"* [ %19, %18 ], [ %17, %16 ]
  %22 = icmp eq %"class.spvtools::opt::Instruction"* %21, null
  br i1 %22, label %47, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %21, i64 0, i32 4
  %25 = load i8, i8* %24, align 1, !range !15
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %21, i64 0, i32 3
  %29 = load i8, i8* %28, align 4, !range !15
  %30 = zext i8 %29 to i32
  %31 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %21, i32 %30) #11
  br label %32

32:                                               ; preds = %23, %27
  %33 = phi i32 [ %31, %27 ], [ 0, %23 ]
  %34 = load i8, i8* %8, align 1, !range !15
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %32
  %37 = load i8, i8* %5, align 4, !range !15
  %38 = zext i8 %37 to i32
  %39 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %4, i32 %38) #11
  br label %40

40:                                               ; preds = %32, %36
  %41 = phi i32 [ %39, %36 ], [ 0, %32 ]
  %42 = getelementptr inbounds %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass", %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* %0, i64 0, i32 0, i32 2
  %43 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %42, align 8
  %44 = tail call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %43, i32 %41, i32 %33) #11
  %45 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %42, align 8
  %46 = tail call zeroext i1 @_ZN8spvtools3opt9IRContext7KillDefEj(%"class.spvtools::opt::IRContext"* %45, i32 %41) #11
  br label %47

47:                                               ; preds = %20, %40
  %48 = phi i1 [ true, %40 ], [ false, %20 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt34FoldSpecConstantOpAndCompositePass25FoldWithInstructionFolderEPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* nocapture readonly, %"class.spvtools::opt::InstructionList::iterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = alloca %"class.std::__1::function.910", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %1, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass", %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* %0, i64 0, i32 0, i32 2
  br label %7

7:                                                ; preds = %125, %2
  %8 = phi i32 [ 1, %2 ], [ %126, %125 ]
  %9 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 6
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 6, i32 0, i32 1
  %12 = bitcast %"struct.spvtools::opt::Operand"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = sdiv exact i64 %16, 48
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 3
  %19 = load i8, i8* %18, align 4, !range !15
  %20 = icmp eq i8 %19, 0
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 4
  %22 = load i8, i8* %21, align 1, !range !15
  %23 = icmp eq i8 %22, 0
  %24 = select i1 %23, i32 1, i32 2
  %25 = xor i1 %23, true
  %26 = zext i1 %25 to i32
  %27 = select i1 %20, i32 %26, i32 %24
  %28 = trunc i64 %17 to i32
  %29 = sub i32 %28, %27
  %30 = icmp ult i32 %8, %29
  %31 = inttoptr i64 %15 to %"struct.spvtools::opt::Operand"*
  br i1 %30, label %32, label %127

32:                                               ; preds = %7
  %33 = add i32 %27, %8
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 %34, i32 0
  %36 = load i32, i32* %35, align 8
  switch i32 %36, label %125 [
    i32 1, label %37
    i32 44, label %37
  ]

37:                                               ; preds = %32, %32
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 %34, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  %41 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 %34, i32 1, i32 2
  %43 = select i1 %40, i32** %42, i32** %41
  %44 = load i32*, i32** %43, align 8
  %45 = load i32, i32* %44, align 4
  %46 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 11
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 16384
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %65

51:                                               ; preds = %37
  %52 = tail call i8* @_Znwm(i64 136) #12
  %53 = bitcast i8* %52 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %53, %"class.spvtools::opt::IRContext"* %46) #11
  %54 = ptrtoint i8* %52 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 19
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %56, align 8
  %58 = bitcast %"class.std::__1::unique_ptr.400"* %55 to i64*
  store i64 %54, i64* %58, align 8
  %59 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %57, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %51
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %57) #11
  %61 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %57 to i8*
  tail call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %60, %51
  %63 = load i32, i32* %47, align 8
  %64 = or i32 %63, 16384
  store i32 %64, i32* %47, align 8
  br label %65

65:                                               ; preds = %37, %62
  %66 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 19, i32 0, i32 0, i32 0
  %67 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %66, align 8
  %68 = zext i32 %45 to i64
  %69 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %67, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %390, label %72

72:                                               ; preds = %65
  %73 = tail call i64 @llvm.ctpop.i64(i64 %70) #11, !range !19
  %74 = icmp ugt i64 %73, 1
  br i1 %74, label %78, label %75

75:                                               ; preds = %72
  %76 = add i64 %70, 4294967295
  %77 = and i64 %76, %68
  br label %82

78:                                               ; preds = %72
  %79 = icmp ugt i64 %70, %68
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %68, %70
  br label %82

82:                                               ; preds = %80, %78, %75
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %68, %78 ]
  %84 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %67, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %84, align 8
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %85, i64 %83
  %87 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %86, align 8
  %88 = icmp eq %"struct.std::__1::__hash_node_base.408"* %87, null
  br i1 %88, label %390, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %87, i64 0, i32 0
  %91 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %90, align 8
  %92 = icmp eq %"struct.std::__1::__hash_node_base.408"* %91, null
  br i1 %92, label %390, label %93

93:                                               ; preds = %89
  %94 = add i64 %70, -1
  br label %95

95:                                               ; preds = %116, %93
  %96 = phi %"struct.std::__1::__hash_node_base.408"* [ %91, %93 ], [ %118, %116 ]
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %96, i64 1
  %98 = bitcast %"struct.std::__1::__hash_node_base.408"* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, %68
  br i1 %100, label %111, label %101

101:                                              ; preds = %95
  br i1 %74, label %104, label %102

102:                                              ; preds = %101
  %103 = and i64 %99, %94
  br label %108

104:                                              ; preds = %101
  %105 = icmp ult i64 %99, %70
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = urem i64 %99, %70
  br label %108

108:                                              ; preds = %106, %104, %102
  %109 = phi i64 [ %103, %102 ], [ %107, %106 ], [ %99, %104 ]
  %110 = icmp eq i64 %109, %83
  br i1 %110, label %116, label %390

111:                                              ; preds = %95
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %96, i64 2
  %113 = bitcast %"struct.std::__1::__hash_node_base.408"* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, %45
  br i1 %115, label %120, label %116

116:                                              ; preds = %111, %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %96, i64 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %117, align 8
  %119 = icmp eq %"struct.std::__1::__hash_node_base.408"* %118, null
  br i1 %119, label %390, label %95

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %96, i64 3
  %122 = bitcast %"struct.std::__1::__hash_node_base.408"* %121 to %"class.spvtools::opt::analysis::Constant"**
  %123 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %122, align 8
  %124 = icmp eq %"class.spvtools::opt::analysis::Constant"* %123, null
  br i1 %124, label %390, label %125

125:                                              ; preds = %120, %32
  %126 = add i32 %8, 1
  br label %7

127:                                              ; preds = %7
  %128 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %129 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"* %9, %"class.spvtools::opt::IRContext"* %128) #11
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 3
  %132 = load i8, i8* %131, align 4, !range !15
  %133 = icmp eq i8 %132, 0
  %134 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 4
  %135 = load i8, i8* %134, align 1, !range !15
  %136 = icmp eq i8 %135, 0
  %137 = select i1 %136, i32 1, i32 2
  %138 = xor i1 %136, true
  %139 = zext i1 %138 to i32
  %140 = select i1 %133, i32 %139, i32 %137
  %141 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %130, i32 %140) #11
  %142 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 2
  store i32 %141, i32* %142, align 8
  %143 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 6, i32 0, i32 0
  %144 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %143, align 8
  %145 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %144, i64 2
  %146 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %144, i64 3
  %147 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 6, i32 0, i32 1
  %148 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %147, align 8
  %149 = icmp eq %"struct.spvtools::opt::Operand"* %146, %148
  br i1 %149, label %165, label %150

150:                                              ; preds = %127, %150
  %151 = phi %"struct.spvtools::opt::Operand"* [ %160, %150 ], [ %145, %127 ]
  %152 = phi %"struct.spvtools::opt::Operand"* [ %159, %150 ], [ %146, %127 ]
  %153 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %152, i64 0, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %151, i64 0, i32 0
  store i32 %154, i32* %155, align 8
  %156 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %151, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %152, i64 0, i32 1
  %158 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %156, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %157) #11
  %159 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %152, i64 1
  %160 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %151, i64 1
  %161 = icmp eq %"struct.spvtools::opt::Operand"* %159, %148
  br i1 %161, label %162, label %150

162:                                              ; preds = %150
  %163 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %147, align 8
  %164 = icmp eq %"struct.spvtools::opt::Operand"* %163, %160
  br i1 %164, label %188, label %165

165:                                              ; preds = %162, %127
  %166 = phi %"struct.spvtools::opt::Operand"* [ %160, %162 ], [ %145, %127 ]
  %167 = phi %"struct.spvtools::opt::Operand"* [ %163, %162 ], [ %146, %127 ]
  br label %168

168:                                              ; preds = %186, %165
  %169 = phi %"struct.spvtools::opt::Operand"* [ %170, %186 ], [ %167, %165 ]
  %170 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %169, i64 -1
  %171 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %169, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %171, align 8
  %172 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %169, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %173 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %172, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %172, align 8
  %174 = icmp eq %"class.std::__1::vector.3"* %173, null
  br i1 %174, label %186, label %175

175:                                              ; preds = %168
  %176 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %173, i64 0, i32 0, i32 0
  %177 = load i32*, i32** %176, align 8
  %178 = icmp eq i32* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = ptrtoint i32* %177 to i64
  %181 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %173, i64 0, i32 0, i32 1
  %182 = bitcast i32** %181 to i64*
  store i64 %180, i64* %182, align 8
  %183 = bitcast i32* %177 to i8*
  tail call void @_ZdlPv(i8* %183) #12
  br label %184

184:                                              ; preds = %179, %175
  %185 = bitcast %"class.std::__1::vector.3"* %173 to i8*
  tail call void @_ZdlPv(i8* %185) #12
  br label %186

186:                                              ; preds = %184, %168
  %187 = icmp eq %"struct.spvtools::opt::Operand"* %170, %166
  br i1 %187, label %188, label %168

188:                                              ; preds = %186, %162
  %189 = phi %"struct.spvtools::opt::Operand"* [ %160, %162 ], [ %166, %186 ]
  store %"struct.spvtools::opt::Operand"* %189, %"struct.spvtools::opt::Operand"** %147, align 8
  %190 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %191 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %190, i64 0, i32 4, i32 0, i32 0, i32 0
  %192 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %191, align 8, !noalias !20
  %193 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %192, i64 0, i32 14, i32 0, i32 1, i32 0, i32 2
  %194 = bitcast %"class.spvtools::opt::Instruction"** %193 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %195 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %194, align 8
  %196 = tail call dereferenceable(24) %"class.spvtools::opt::InstructionFolder"* @_ZN8spvtools3opt9IRContext22get_instruction_folderEv(%"class.spvtools::opt::IRContext"* %190)
  %197 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %4, i64 0, i32 0, i32 1, i32 0
  %198 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %4, i64 0, i32 0, i32 2
  store i32 (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFjjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt34FoldSpecConstantOpAndCompositePass25FoldWithInstructionFolderEPNS7_15InstructionList8iteratorEE3$_0S2_EEEEjPKNS0_16__policy_storageEj", i32 (%"union.std::__1::__function::__policy_storage"*, i32)** %197, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt34FoldSpecConstantOpAndCompositePass25FoldWithInstructionFolderEPNS5_15InstructionList8iteratorEE3$_0FjjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %198, align 8
  %199 = call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS0_11InstructionENSt3__18functionIFjjEEE(%"class.spvtools::opt::InstructionFolder"* %196, %"class.spvtools::opt::Instruction"* %129, %"class.std::__1::function.910"* nonnull %4) #11
  %200 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %198, align 8
  %201 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %200, i64 0, i32 1
  %202 = load void (i8*)*, void (i8*)** %201, align 8
  %203 = icmp eq void (i8*)* %202, null
  br i1 %203, label %207, label %204

204:                                              ; preds = %188
  %205 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %4, i64 0, i32 0, i32 0, i32 0
  %206 = load i8*, i8** %205, align 8
  call void %202(i8* %206) #11
  br label %207

207:                                              ; preds = %188, %204
  %208 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %1 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %209 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %208, align 8
  %210 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %209, i64 0, i32 2
  %211 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %210, align 8
  %212 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %211, i64 0, i32 0, i32 3
  %213 = load i8, i8* %212, align 8, !range !15
  %214 = icmp eq i8 %213, 0
  %215 = select i1 %214, %"class.spvtools::opt::Instruction"* %211, %"class.spvtools::opt::Instruction"* null
  %216 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %195, i64 0, i32 1
  %217 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %216, align 8
  %218 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %217, i64 0, i32 0, i32 3
  %219 = load i8, i8* %218, align 8, !range !15
  %220 = icmp ne i8 %219, 0
  %221 = icmp eq %"class.spvtools::opt::Instruction"* %217, null
  %222 = or i1 %221, %220
  br i1 %222, label %270, label %226

223:                                              ; preds = %250
  %224 = and i8 %231, 1
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %382, label %270

226:                                              ; preds = %207, %250
  %227 = phi %"class.spvtools::opt::Instruction"* [ %264, %250 ], [ %217, %207 ]
  %228 = phi i8 [ %231, %250 ], [ 1, %207 ]
  %229 = phi %"class.spvtools::opt::Instruction"* [ %263, %250 ], [ %215, %207 ]
  %230 = icmp eq %"class.spvtools::opt::Instruction"* %227, %199
  %231 = select i1 %230, i8 0, i8 %228
  %232 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %227, i64 0, i32 0, i32 1
  %233 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %232, align 8
  %234 = icmp eq %"class.spvtools::opt::Instruction"* %233, null
  br i1 %234, label %235, label %237

235:                                              ; preds = %226
  %236 = bitcast %"class.spvtools::opt::Instruction"** %232 to i64*
  br label %250

237:                                              ; preds = %226
  %238 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %227, i64 0, i32 0, i32 2
  %239 = bitcast %"class.spvtools::opt::Instruction"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %233, i64 0, i32 0, i32 2
  %242 = bitcast %"class.spvtools::opt::Instruction"** %241 to i64*
  store i64 %240, i64* %242, align 8
  %243 = bitcast %"class.spvtools::opt::Instruction"** %232 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = bitcast %"class.spvtools::opt::Instruction"** %238 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %246 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %245, align 8
  %247 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %246, i64 0, i32 1
  %248 = bitcast %"class.spvtools::opt::Instruction"** %247 to i64*
  store i64 %244, i64* %248, align 8
  %249 = bitcast %"class.spvtools::opt::Instruction"** %232 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %249, i8 0, i64 16, i1 false) #11
  br label %250

250:                                              ; preds = %235, %237
  %251 = phi i64* [ %236, %235 ], [ %243, %237 ]
  %252 = bitcast %"class.spvtools::opt::Instruction"** %232 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %253 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %227, i64 0, i32 0, i32 2
  store %"class.spvtools::opt::Instruction"* %229, %"class.spvtools::opt::Instruction"** %253, align 8
  %254 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %229, i64 0, i32 0, i32 1
  %255 = bitcast %"class.spvtools::opt::Instruction"** %254 to i64*
  %256 = load i64, i64* %255, align 8
  store i64 %256, i64* %251, align 8
  store %"class.spvtools::opt::Instruction"* %227, %"class.spvtools::opt::Instruction"** %254, align 8
  %257 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %252, align 8
  %258 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %257, i64 0, i32 2
  store %"class.spvtools::opt::Instruction"* %227, %"class.spvtools::opt::Instruction"** %258, align 8
  %259 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %254, align 8
  %260 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %259, i64 0, i32 0, i32 3
  %261 = load i8, i8* %260, align 8, !range !15
  %262 = icmp eq i8 %261, 0
  %263 = select i1 %262, %"class.spvtools::opt::Instruction"* %259, %"class.spvtools::opt::Instruction"* null
  %264 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %216, align 8
  %265 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %264, i64 0, i32 0, i32 3
  %266 = load i8, i8* %265, align 8, !range !15
  %267 = icmp ne i8 %266, 0
  %268 = icmp eq %"class.spvtools::opt::Instruction"* %264, null
  %269 = or i1 %268, %267
  br i1 %269, label %223, label %226

270:                                              ; preds = %207, %223
  %271 = phi %"class.spvtools::opt::Instruction"* [ %263, %223 ], [ %215, %207 ]
  %272 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %273 = call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"* %199, %"class.spvtools::opt::IRContext"* %272) #11
  %274 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %275 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %274, i64 0, i32 4, i32 0, i32 0, i32 0
  %276 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %275, align 8
  %277 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %276) #11
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %291

279:                                              ; preds = %270
  %280 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %274, i64 0, i32 5, i32 0, i32 2
  %281 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %280, align 8
  %282 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %281, i64 0, i32 2
  %283 = load i8, i8* %282, align 8, !range !15
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %285, label %291

285:                                              ; preds = %279
  %286 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %286, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37, i1 false) #11
  %287 = getelementptr inbounds i8, i8* %286, i64 37
  store i8 0, i8* %287, align 1
  %288 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %274, i64 0, i32 5, i32 0, i32 1, i32 0
  %289 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %288, align 8
  %290 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %274, i64 0, i32 5, i32 0, i32 0
  call void %289(%"union.std::__1::__function::__policy_storage"* %290, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.3, i8* nonnull %286) #11
  call void @_ZdlPv(i8* nonnull %286) #12
  br label %291

291:                                              ; preds = %270, %279, %285
  %292 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %273, i64 0, i32 3
  %293 = load i8, i8* %292, align 4, !range !15
  %294 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %294) #11
  %295 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %295, align 8
  %296 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %297 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %298 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %299 = bitcast i32** %297 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %298, %"struct.std::__1::aligned_storage<4, 4>::type"** %299, align 8
  %300 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %301 = bitcast %"class.std::__1::unique_ptr.0"* %300 to i64*
  store i64 0, i64* %301, align 8
  %302 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %298 to i32*
  store i64 1, i64* %296, align 8
  store i32 %277, i32* %302, align 8
  %303 = zext i8 %293 to i64
  %304 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %273, i64 0, i32 6, i32 0, i32 0
  %305 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %304, align 8
  %306 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %305, i64 %303, i32 1
  %307 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %306, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %295, align 8
  %308 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %309 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %308, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %308, align 8
  %310 = icmp eq %"class.std::__1::vector.3"* %309, null
  br i1 %310, label %322, label %311

311:                                              ; preds = %291
  %312 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %309, i64 0, i32 0, i32 0
  %313 = load i32*, i32** %312, align 8
  %314 = icmp eq i32* %313, null
  br i1 %314, label %320, label %315

315:                                              ; preds = %311
  %316 = ptrtoint i32* %313 to i64
  %317 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %309, i64 0, i32 0, i32 1
  %318 = bitcast i32** %317 to i64*
  store i64 %316, i64* %318, align 8
  %319 = bitcast i32* %313 to i8*
  call void @_ZdlPv(i8* %319) #12
  br label %320

320:                                              ; preds = %315, %311
  %321 = bitcast %"class.std::__1::vector.3"* %309 to i8*
  call void @_ZdlPv(i8* %321) #12
  br label %322

322:                                              ; preds = %291, %320
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %294) #11
  %323 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %273, i64 0, i32 0, i32 1
  %324 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %323, align 8
  %325 = icmp eq %"class.spvtools::opt::Instruction"* %324, null
  br i1 %325, label %326, label %328

326:                                              ; preds = %322
  %327 = bitcast %"class.spvtools::opt::Instruction"** %323 to i64*
  br label %341

328:                                              ; preds = %322
  %329 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %273, i64 0, i32 0, i32 2
  %330 = bitcast %"class.spvtools::opt::Instruction"** %329 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %324, i64 0, i32 0, i32 2
  %333 = bitcast %"class.spvtools::opt::Instruction"** %332 to i64*
  store i64 %331, i64* %333, align 8
  %334 = bitcast %"class.spvtools::opt::Instruction"** %323 to i64*
  %335 = load i64, i64* %334, align 8
  %336 = bitcast %"class.spvtools::opt::Instruction"** %329 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %337 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %336, align 8
  %338 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %337, i64 0, i32 1
  %339 = bitcast %"class.spvtools::opt::Instruction"** %338 to i64*
  store i64 %335, i64* %339, align 8
  %340 = bitcast %"class.spvtools::opt::Instruction"** %323 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %340, i8 0, i64 16, i1 false) #11
  br label %341

341:                                              ; preds = %326, %328
  %342 = phi i64* [ %327, %326 ], [ %334, %328 ]
  %343 = bitcast %"class.spvtools::opt::Instruction"** %323 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %344 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %273, i64 0, i32 0, i32 2
  store %"class.spvtools::opt::Instruction"* %271, %"class.spvtools::opt::Instruction"** %344, align 8
  %345 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %271, i64 0, i32 0, i32 1
  %346 = bitcast %"class.spvtools::opt::Instruction"** %345 to i64*
  %347 = load i64, i64* %346, align 8
  store i64 %347, i64* %342, align 8
  store %"class.spvtools::opt::Instruction"* %273, %"class.spvtools::opt::Instruction"** %345, align 8
  %348 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %343, align 8
  %349 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %348, i64 0, i32 2
  store %"class.spvtools::opt::Instruction"* %273, %"class.spvtools::opt::Instruction"** %349, align 8
  %350 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %351 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %350, i64 0, i32 11
  %352 = load i32, i32* %351, align 8
  %353 = and i32 %352, 1
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %379

355:                                              ; preds = %341
  %356 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %350, i64 0, i32 4, i32 0, i32 0, i32 0
  %357 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %356, align 8
  %358 = call i8* @_Znwm(i64 104) #12
  %359 = bitcast i8* %358 to %"class.spvtools::opt::analysis::DefUseManager"*
  %360 = getelementptr inbounds i8, i8* %358, i64 32
  %361 = bitcast i8* %360 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %358, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %361, align 4
  %362 = getelementptr inbounds i8, i8* %358, i64 48
  %363 = getelementptr inbounds i8, i8* %358, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %362, i8 0, i64 16, i1 false) #11
  %364 = bitcast i8* %363 to i8**
  store i8* %362, i8** %364, align 8
  %365 = getelementptr inbounds i8, i8* %358, i64 64
  %366 = getelementptr inbounds i8, i8* %358, i64 96
  %367 = bitcast i8* %366 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %365, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %367, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %359, %"class.spvtools::opt::Module"* %357) #11
  %368 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %350, i64 0, i32 6
  %369 = ptrtoint i8* %358 to i64
  %370 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %368, i64 0, i32 0, i32 0, i32 0
  %371 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %370, align 8
  %372 = bitcast %"class.std::__1::unique_ptr.62"* %368 to i64*
  store i64 %369, i64* %372, align 8
  %373 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %371, null
  br i1 %373, label %376, label %374

374:                                              ; preds = %355
  %375 = bitcast %"class.std::__1::unique_ptr.62"* %368 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %375, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %371) #11
  br label %376

376:                                              ; preds = %374, %355
  %377 = load i32, i32* %351, align 8
  %378 = or i32 %377, 1
  store i32 %378, i32* %351, align 8
  br label %379

379:                                              ; preds = %341, %376
  %380 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %350, i64 0, i32 6, i32 0, i32 0, i32 0
  %381 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %380, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %381, %"class.spvtools::opt::Instruction"* %273) #11
  br label %382

382:                                              ; preds = %223, %379
  %383 = phi %"class.spvtools::opt::Instruction"* [ %273, %379 ], [ %199, %223 ]
  %384 = icmp eq %"class.spvtools::opt::Instruction"* %129, null
  br i1 %384, label %390, label %385

385:                                              ; preds = %382
  %386 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %387 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %386, align 8
  %388 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %387, i64 1
  %389 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %388, align 8
  call void %389(%"class.spvtools::opt::Instruction"* nonnull %129) #11
  br label %390

390:                                              ; preds = %89, %65, %82, %120, %116, %108, %385, %382
  %391 = phi %"class.spvtools::opt::Instruction"* [ %383, %382 ], [ %383, %385 ], [ null, %108 ], [ null, %116 ], [ null, %120 ], [ null, %82 ], [ null, %65 ], [ null, %89 ]
  ret %"class.spvtools::opt::Instruction"* %391
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt34FoldSpecConstantOpAndCompositePass24DoComponentWiseOperationEPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* nocapture readonly, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.460", align 8
  %4 = alloca %"class.spvtools::opt::analysis::Constant"*, align 8
  %5 = alloca %"class.std::__1::vector.802", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = alloca %"class.std::__1::vector.3", align 8
  %8 = alloca %"class.std::__1::vector.802", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass", %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* %0, i64 0, i32 0, i32 2
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 11
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 16384
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %32

18:                                               ; preds = %2
  %19 = tail call i8* @_Znwm(i64 136) #12
  %20 = bitcast i8* %19 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %20, %"class.spvtools::opt::IRContext"* %13) #11
  %21 = ptrtoint i8* %19 to i64
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 19
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %23, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.400"* %22 to i64*
  store i64 %21, i64* %25, align 8
  %26 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %24, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %18
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %24) #11
  %28 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %24 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %27, %18
  %30 = load i32, i32* %14, align 8
  %31 = or i32 %30, 16384
  store i32 %31, i32* %14, align 8
  br label %32

32:                                               ; preds = %2, %29
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 19, i32 0, i32 0, i32 0
  %34 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %33, align 8
  %35 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis15ConstantManager7GetTypeEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"* %34, %"class.spvtools::opt::Instruction"* %11) #11
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 3
  %37 = load i8, i8* %36, align 4, !range !15
  %38 = icmp eq i8 %37, 0
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 4
  %40 = load i8, i8* %39, align 1, !range !15
  %41 = icmp eq i8 %40, 0
  %42 = select i1 %41, i32 1, i32 2
  %43 = xor i1 %41, true
  %44 = zext i1 %43 to i32
  %45 = select i1 %38, i32 %44, i32 %42
  %46 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %11, i32 %45) #11
  %47 = bitcast %"class.std::__1::vector.802"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %5, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %5, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #11
  %51 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 6, i32 0, i32 0
  %52 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %51, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 6, i32 0, i32 1
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %53, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %52, %54
  br i1 %55, label %262, label %56

56:                                               ; preds = %32
  %57 = bitcast %"class.spvtools::opt::analysis::Constant"*** %49 to i64*
  %58 = bitcast %"class.std::__1::vector.802"* %5 to i64*
  %59 = bitcast %"class.spvtools::opt::analysis::Constant"*** %50 to i64*
  br label %60

60:                                               ; preds = %257, %56
  %61 = phi i64 [ 0, %56 ], [ %258, %257 ]
  %62 = phi %"class.spvtools::opt::analysis::Constant"** [ null, %56 ], [ %259, %257 ]
  %63 = phi %"struct.spvtools::opt::Operand"* [ %52, %56 ], [ %260, %257 ]
  %64 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %63, i64 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %257

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %63, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %68, align 8
  %70 = icmp eq %"class.std::__1::vector.3"* %69, null
  %71 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %69, i64 0, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %63, i64 0, i32 1, i32 2
  %73 = select i1 %70, i32** %72, i32** %71
  %74 = load i32*, i32** %73, align 8
  %75 = load i32, i32* %74, align 4
  %76 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %76, i64 0, i32 11
  %78 = load i32, i32* %77, align 8
  %79 = and i32 %78, 16384
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %95

81:                                               ; preds = %67
  %82 = tail call i8* @_Znwm(i64 136) #12
  %83 = bitcast i8* %82 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %83, %"class.spvtools::opt::IRContext"* %76) #11
  %84 = ptrtoint i8* %82 to i64
  %85 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %76, i64 0, i32 19
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %86, align 8
  %88 = bitcast %"class.std::__1::unique_ptr.400"* %85 to i64*
  store i64 %84, i64* %88, align 8
  %89 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %87, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %81
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %87) #11
  %91 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %87 to i8*
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %90, %81
  %93 = load i32, i32* %77, align 8
  %94 = or i32 %93, 16384
  store i32 %94, i32* %77, align 8
  br label %95

95:                                               ; preds = %92, %67
  %96 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %76, i64 0, i32 19, i32 0, i32 0, i32 0
  %97 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %96, align 8
  %98 = zext i32 %75 to i64
  %99 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %97, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %649, label %102

102:                                              ; preds = %95
  %103 = tail call i64 @llvm.ctpop.i64(i64 %100) #11, !range !19
  %104 = icmp ugt i64 %103, 1
  br i1 %104, label %108, label %105

105:                                              ; preds = %102
  %106 = add i64 %100, 4294967295
  %107 = and i64 %106, %98
  br label %112

108:                                              ; preds = %102
  %109 = icmp ugt i64 %100, %98
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = urem i64 %98, %100
  br label %112

112:                                              ; preds = %110, %108, %105
  %113 = phi i64 [ %107, %105 ], [ %111, %110 ], [ %98, %108 ]
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %97, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %115, i64 %113
  %117 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %116, align 8
  %118 = icmp eq %"struct.std::__1::__hash_node_base.408"* %117, null
  br i1 %118, label %649, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %117, i64 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.408"* %121, null
  br i1 %122, label %649, label %123

123:                                              ; preds = %119
  %124 = add i64 %100, -1
  br label %125

125:                                              ; preds = %146, %123
  %126 = phi %"struct.std::__1::__hash_node_base.408"* [ %121, %123 ], [ %148, %146 ]
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %126, i64 1
  %128 = bitcast %"struct.std::__1::__hash_node_base.408"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %129, %98
  br i1 %130, label %141, label %131

131:                                              ; preds = %125
  br i1 %104, label %134, label %132

132:                                              ; preds = %131
  %133 = and i64 %129, %124
  br label %138

134:                                              ; preds = %131
  %135 = icmp ult i64 %129, %100
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %129, %100
  br label %138

138:                                              ; preds = %136, %134, %132
  %139 = phi i64 [ %133, %132 ], [ %137, %136 ], [ %129, %134 ]
  %140 = icmp eq i64 %139, %113
  br i1 %140, label %146, label %649

141:                                              ; preds = %125
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %126, i64 2
  %143 = bitcast %"struct.std::__1::__hash_node_base.408"* %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, %75
  br i1 %145, label %150, label %146

146:                                              ; preds = %141, %138
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %126, i64 0, i32 0
  %148 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %147, align 8
  %149 = icmp eq %"struct.std::__1::__hash_node_base.408"* %148, null
  br i1 %149, label %649, label %125

150:                                              ; preds = %141
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %126, i64 3
  %152 = bitcast %"struct.std::__1::__hash_node_base.408"* %151 to %"class.spvtools::opt::analysis::Constant"**
  %153 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %152, align 8
  %154 = ptrtoint %"class.spvtools::opt::analysis::Constant"* %153 to i64
  %155 = icmp eq %"class.spvtools::opt::analysis::Constant"* %153, null
  br i1 %155, label %649, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %153, i64 0, i32 1
  %158 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %157, align 8
  %159 = bitcast %"class.spvtools::opt::analysis::Type"* %158 to %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)***
  %160 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*** %159, align 8
  %161 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %160, i64 9
  %162 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %161, align 8
  %163 = tail call %"class.spvtools::opt::analysis::Bool"* %162(%"class.spvtools::opt::analysis::Type"* %158) #11
  %164 = icmp eq %"class.spvtools::opt::analysis::Bool"* %163, null
  br i1 %164, label %165, label %204

165:                                              ; preds = %156
  %166 = bitcast %"class.spvtools::opt::analysis::Type"* %158 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %167 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %166, align 8
  %168 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %167, i64 11
  %169 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %168, align 8
  %170 = tail call %"class.spvtools::opt::analysis::Integer"* %169(%"class.spvtools::opt::analysis::Type"* %158) #11
  %171 = icmp eq %"class.spvtools::opt::analysis::Integer"* %170, null
  br i1 %171, label %176, label %172

172:                                              ; preds = %165
  %173 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %170, i64 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, 32
  br i1 %175, label %204, label %649

176:                                              ; preds = %165
  %177 = bitcast %"class.spvtools::opt::analysis::Type"* %158 to %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)***
  %178 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*** %177, align 8
  %179 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %178, i64 15
  %180 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %179, align 8
  %181 = tail call %"class.spvtools::opt::analysis::Vector"* %180(%"class.spvtools::opt::analysis::Type"* %158) #11
  %182 = icmp eq %"class.spvtools::opt::analysis::Vector"* %181, null
  br i1 %182, label %649, label %183

183:                                              ; preds = %176
  %184 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %181, i64 0, i32 2
  %185 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %184, align 8
  %186 = bitcast %"class.spvtools::opt::analysis::Type"* %185 to %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)***
  %187 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*** %186, align 8
  %188 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %187, i64 9
  %189 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %188, align 8
  %190 = tail call %"class.spvtools::opt::analysis::Bool"* %189(%"class.spvtools::opt::analysis::Type"* %185) #11
  %191 = icmp eq %"class.spvtools::opt::analysis::Bool"* %190, null
  br i1 %191, label %192, label %204

192:                                              ; preds = %183
  %193 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %184, align 8
  %194 = bitcast %"class.spvtools::opt::analysis::Type"* %193 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %195 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %194, align 8
  %196 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %195, i64 11
  %197 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %196, align 8
  %198 = tail call %"class.spvtools::opt::analysis::Integer"* %197(%"class.spvtools::opt::analysis::Type"* %193) #11
  %199 = icmp eq %"class.spvtools::opt::analysis::Integer"* %198, null
  br i1 %199, label %649, label %200

200:                                              ; preds = %192
  %201 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %198, i64 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 32
  br i1 %203, label %204, label %649

204:                                              ; preds = %200, %183, %172, %156
  %205 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %50, align 8
  %206 = icmp eq %"class.spvtools::opt::analysis::Constant"** %62, %205
  br i1 %206, label %211, label %207

207:                                              ; preds = %204
  %208 = bitcast %"class.spvtools::opt::analysis::Constant"** %62 to i64*
  store i64 %154, i64* %208, align 8
  %209 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %62, i64 1
  %210 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %209 to i64
  store i64 %210, i64* %57, align 8
  br label %257

211:                                              ; preds = %204
  %212 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %205 to i64
  %213 = load i64, i64* %58, align 8
  %214 = sub i64 %212, %213
  %215 = ashr exact i64 %214, 3
  %216 = add nsw i64 %215, 1
  %217 = icmp ugt i64 %216, 2305843009213693951
  br i1 %217, label %218, label %220

218:                                              ; preds = %211
  %219 = bitcast %"class.std::__1::vector.802"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %219) #13
  unreachable

220:                                              ; preds = %211
  %221 = icmp ult i64 %215, 1152921504606846975
  br i1 %221, label %222, label %230

222:                                              ; preds = %220
  %223 = ashr exact i64 %214, 2
  %224 = icmp ult i64 %223, %216
  %225 = select i1 %224, i64 %216, i64 %223
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %235, label %227

227:                                              ; preds = %222
  %228 = icmp ugt i64 %225, 2305843009213693951
  br i1 %228, label %229, label %230

229:                                              ; preds = %227
  tail call void @abort() #13
  unreachable

230:                                              ; preds = %227, %220
  %231 = phi i64 [ %225, %227 ], [ 2305843009213693951, %220 ]
  %232 = shl i64 %231, 3
  %233 = tail call i8* @_Znwm(i64 %232) #12
  %234 = bitcast i8* %233 to %"class.spvtools::opt::analysis::Constant"**
  br label %235

235:                                              ; preds = %230, %222
  %236 = phi i64 [ %231, %230 ], [ 0, %222 ]
  %237 = phi %"class.spvtools::opt::analysis::Constant"** [ %234, %230 ], [ null, %222 ]
  %238 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %237, i64 %215
  %239 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %237, i64 %236
  %240 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %239 to i64
  %241 = bitcast %"class.spvtools::opt::analysis::Constant"** %238 to i64*
  store i64 %154, i64* %241, align 8
  %242 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %238, i64 1
  %243 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %242 to i64
  %244 = sub i64 %61, %213
  %245 = ashr exact i64 %244, 3
  %246 = sub nsw i64 0, %245
  %247 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %238, i64 %246
  %248 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %247 to i64
  %249 = icmp sgt i64 %244, 0
  br i1 %249, label %250, label %253

250:                                              ; preds = %235
  %251 = bitcast %"class.spvtools::opt::analysis::Constant"** %247 to i8*
  %252 = inttoptr i64 %213 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* align 8 %252, i64 %244, i1 false) #11
  br label %253

253:                                              ; preds = %250, %235
  store i64 %248, i64* %58, align 8
  store i64 %243, i64* %57, align 8
  store i64 %240, i64* %59, align 8
  %254 = icmp eq i64 %213, 0
  br i1 %254, label %257, label %255

255:                                              ; preds = %253
  %256 = inttoptr i64 %213 to i8*
  tail call void @_ZdlPv(i8* %256) #12
  br label %257

257:                                              ; preds = %255, %253, %207, %60
  %258 = phi i64 [ %243, %255 ], [ %243, %253 ], [ %210, %207 ], [ %61, %60 ]
  %259 = phi %"class.spvtools::opt::analysis::Constant"** [ %242, %255 ], [ %242, %253 ], [ %209, %207 ], [ %62, %60 ]
  %260 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %63, i64 1
  %261 = icmp eq %"struct.spvtools::opt::Operand"* %260, %54
  br i1 %261, label %262, label %60

262:                                              ; preds = %257, %32
  %263 = bitcast %"class.spvtools::opt::analysis::Type"* %35 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %264 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %263, align 8
  %265 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %264, i64 11
  %266 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %265, align 8
  %267 = tail call %"class.spvtools::opt::analysis::Integer"* %266(%"class.spvtools::opt::analysis::Type"* %35) #11
  %268 = icmp eq %"class.spvtools::opt::analysis::Integer"* %267, null
  br i1 %268, label %269, label %276

269:                                              ; preds = %262
  %270 = bitcast %"class.spvtools::opt::analysis::Type"* %35 to %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)***
  %271 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*** %270, align 8
  %272 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %271, i64 9
  %273 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %272, align 8
  %274 = tail call %"class.spvtools::opt::analysis::Bool"* %273(%"class.spvtools::opt::analysis::Type"* %35) #11
  %275 = icmp eq %"class.spvtools::opt::analysis::Bool"* %274, null
  br i1 %275, label %343, label %276

276:                                              ; preds = %269, %262
  %277 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %278 = tail call dereferenceable(24) %"class.spvtools::opt::InstructionFolder"* @_ZN8spvtools3opt9IRContext22get_instruction_folderEv(%"class.spvtools::opt::IRContext"* %277)
  %279 = call i32 @_ZNK8spvtools3opt17InstructionFolder11FoldScalarsE6SpvOp_RKNSt3__16vectorIPKNS0_8analysis8ConstantENS3_9allocatorIS8_EEEE(%"class.spvtools::opt::InstructionFolder"* %278, i32 %46, %"class.std::__1::vector.802"* nonnull dereferenceable(24) %5) #11
  %280 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %281 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %280, i64 0, i32 11
  %282 = load i32, i32* %281, align 8
  %283 = and i32 %282, 16384
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %299

285:                                              ; preds = %276
  %286 = call i8* @_Znwm(i64 136) #12
  %287 = bitcast i8* %286 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %287, %"class.spvtools::opt::IRContext"* %280) #11
  %288 = ptrtoint i8* %286 to i64
  %289 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %280, i64 0, i32 19
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %289, i64 0, i32 0, i32 0, i32 0
  %291 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %290, align 8
  %292 = bitcast %"class.std::__1::unique_ptr.400"* %289 to i64*
  store i64 %288, i64* %292, align 8
  %293 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %291, null
  br i1 %293, label %296, label %294

294:                                              ; preds = %285
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %291) #11
  %295 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %291 to i8*
  call void @_ZdlPv(i8* %295) #12
  br label %296

296:                                              ; preds = %294, %285
  %297 = load i32, i32* %281, align 8
  %298 = or i32 %297, 16384
  store i32 %298, i32* %281, align 8
  br label %299

299:                                              ; preds = %276, %296
  %300 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %280, i64 0, i32 19, i32 0, i32 0, i32 0
  %301 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %300, align 8
  %302 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %302) #11
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_120EncodeIntegerAsWordsERKNS0_8analysis4TypeEj(%"class.spvtools::utils::SmallVector"* nonnull sret %6, %"class.spvtools::opt::analysis::Type"* dereferenceable(40) %35, i32 %279)
  %303 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantINS_5utils11SmallVectorIjLm2EEEEEPKNS1_8ConstantEPKNS1_4TypeERKT_(%"class.spvtools::opt::analysis::ConstantManager"* %301, %"class.spvtools::opt::analysis::Type"* %35, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6)
  %304 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %304, align 8
  %305 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %306 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %305, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %305, align 8
  %307 = icmp eq %"class.std::__1::vector.3"* %306, null
  br i1 %307, label %319, label %308

308:                                              ; preds = %299
  %309 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %306, i64 0, i32 0, i32 0
  %310 = load i32*, i32** %309, align 8
  %311 = icmp eq i32* %310, null
  br i1 %311, label %317, label %312

312:                                              ; preds = %308
  %313 = ptrtoint i32* %310 to i64
  %314 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %306, i64 0, i32 0, i32 1
  %315 = bitcast i32** %314 to i64*
  store i64 %313, i64* %315, align 8
  %316 = bitcast i32* %310 to i8*
  call void @_ZdlPv(i8* %316) #12
  br label %317

317:                                              ; preds = %312, %308
  %318 = bitcast %"class.std::__1::vector.3"* %306 to i8*
  call void @_ZdlPv(i8* %318) #12
  br label %319

319:                                              ; preds = %299, %317
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %302) #11
  %320 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %321 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %320, i64 0, i32 11
  %322 = load i32, i32* %321, align 8
  %323 = and i32 %322, 16384
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %339

325:                                              ; preds = %319
  %326 = call i8* @_Znwm(i64 136) #12
  %327 = bitcast i8* %326 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %327, %"class.spvtools::opt::IRContext"* %320) #11
  %328 = ptrtoint i8* %326 to i64
  %329 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %320, i64 0, i32 19
  %330 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %329, i64 0, i32 0, i32 0, i32 0
  %331 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %330, align 8
  %332 = bitcast %"class.std::__1::unique_ptr.400"* %329 to i64*
  store i64 %328, i64* %332, align 8
  %333 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %331, null
  br i1 %333, label %336, label %334

334:                                              ; preds = %325
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %331) #11
  %335 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %331 to i8*
  call void @_ZdlPv(i8* %335) #12
  br label %336

336:                                              ; preds = %334, %325
  %337 = load i32, i32* %321, align 8
  %338 = or i32 %337, 16384
  store i32 %338, i32* %321, align 8
  br label %339

339:                                              ; preds = %319, %336
  %340 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %320, i64 0, i32 19, i32 0, i32 0, i32 0
  %341 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %340, align 8
  %342 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager30BuildInstructionAndAddToModuleEPKNS1_8ConstantEPNS0_15InstructionList8iteratorEj(%"class.spvtools::opt::analysis::ConstantManager"* %341, %"class.spvtools::opt::analysis::Constant"* %303, %"class.spvtools::opt::InstructionList::iterator"* %1, i32 0) #11
  br label %649

343:                                              ; preds = %269
  %344 = bitcast %"class.spvtools::opt::analysis::Type"* %35 to %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)***
  %345 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*** %344, align 8
  %346 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %345, i64 15
  %347 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %346, align 8
  %348 = tail call %"class.spvtools::opt::analysis::Vector"* %347(%"class.spvtools::opt::analysis::Type"* %35) #11
  %349 = icmp eq %"class.spvtools::opt::analysis::Vector"* %348, null
  br i1 %349, label %649, label %350

350:                                              ; preds = %343
  %351 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*** %344, align 8
  %352 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %351, i64 15
  %353 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %352, align 8
  %354 = tail call %"class.spvtools::opt::analysis::Vector"* %353(%"class.spvtools::opt::analysis::Type"* %35) #11
  %355 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %354, i64 0, i32 2
  %356 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %355, align 8
  %357 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*** %344, align 8
  %358 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %357, i64 15
  %359 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %358, align 8
  %360 = tail call %"class.spvtools::opt::analysis::Vector"* %359(%"class.spvtools::opt::analysis::Type"* %35) #11
  %361 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %360, i64 0, i32 3
  %362 = load i32, i32* %361, align 8
  %363 = bitcast %"class.std::__1::vector.3"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %363) #11
  %364 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 0
  %365 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 1
  %366 = bitcast %"class.std::__1::vector.3"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %366, i8 -86, i64 24, i1 false)
  %367 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %368 = tail call dereferenceable(24) %"class.spvtools::opt::InstructionFolder"* @_ZN8spvtools3opt9IRContext22get_instruction_folderEv(%"class.spvtools::opt::IRContext"* %367)
  call void @_ZNK8spvtools3opt17InstructionFolder11FoldVectorsE6SpvOp_jRKNSt3__16vectorIPKNS0_8analysis8ConstantENS3_9allocatorIS8_EEEE(%"class.std::__1::vector.3"* nonnull sret %7, %"class.spvtools::opt::InstructionFolder"* %368, i32 %46, i32 %362, %"class.std::__1::vector.802"* nonnull dereferenceable(24) %5) #11
  %369 = bitcast %"class.std::__1::vector.802"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %369) #11
  %370 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %8, i64 0, i32 0, i32 0
  %371 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %8, i64 0, i32 0, i32 1
  %372 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %369, i8 0, i64 24, i1 false) #11
  %373 = load i32*, i32** %364, align 8
  %374 = load i32*, i32** %365, align 8
  %375 = icmp eq i32* %373, %374
  br i1 %375, label %376, label %379

376:                                              ; preds = %350
  %377 = bitcast %"class.spvtools::opt::analysis::Constant"*** %371 to i64*
  %378 = bitcast %"class.std::__1::vector.802"* %8 to i64*
  br label %386

379:                                              ; preds = %350
  %380 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  %381 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  %382 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %383 = bitcast %"class.spvtools::opt::analysis::Constant"*** %371 to i64*
  %384 = bitcast %"class.std::__1::vector.802"* %8 to i64*
  %385 = bitcast %"class.spvtools::opt::analysis::Constant"*** %372 to i64*
  br label %527

386:                                              ; preds = %646, %376
  %387 = phi i64* [ %378, %376 ], [ %384, %646 ]
  %388 = phi i64* [ %377, %376 ], [ %383, %646 ]
  %389 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*** %344, align 8
  %390 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %389, i64 15
  %391 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %390, align 8
  %392 = call %"class.spvtools::opt::analysis::Vector"* %391(%"class.spvtools::opt::analysis::Type"* %35) #11
  %393 = call i8* @_Znwm(i64 48) #12
  %394 = bitcast i8* %393 to i32 (...)***
  %395 = getelementptr inbounds i8, i8* %393, i64 8
  %396 = bitcast i8* %395 to %"class.spvtools::opt::analysis::Vector"**
  store %"class.spvtools::opt::analysis::Vector"* %392, %"class.spvtools::opt::analysis::Vector"** %396, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*] }, { [27 x i8*] }* @_ZTVN8spvtools3opt8analysis17CompositeConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %394, align 8
  %397 = getelementptr inbounds i8, i8* %393, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %397, i8 0, i64 24, i1 false) #11
  %398 = load i64, i64* %388, align 8
  %399 = load i64, i64* %387, align 8
  %400 = sub i64 %398, %399
  %401 = ashr exact i64 %400, 3
  %402 = icmp eq i64 %400, 0
  br i1 %402, label %426, label %403

403:                                              ; preds = %386
  %404 = icmp ugt i64 %401, 2305843009213693951
  br i1 %404, label %405, label %407

405:                                              ; preds = %403
  %406 = bitcast i8* %397 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %406) #13
  unreachable

407:                                              ; preds = %403
  %408 = call i8* @_Znwm(i64 %400) #12
  %409 = bitcast i8* %408 to %"class.spvtools::opt::analysis::Constant"**
  %410 = getelementptr inbounds i8, i8* %393, i64 24
  %411 = bitcast i8* %410 to i8**
  store i8* %408, i8** %411, align 8
  %412 = bitcast i8* %397 to i8**
  store i8* %408, i8** %412, align 8
  %413 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %409, i64 %401
  %414 = getelementptr inbounds i8, i8* %393, i64 32
  %415 = bitcast i8* %414 to %"class.spvtools::opt::analysis::Constant"***
  store %"class.spvtools::opt::analysis::Constant"** %413, %"class.spvtools::opt::analysis::Constant"*** %415, align 8
  %416 = bitcast i8* %410 to i64*
  %417 = ptrtoint i8* %408 to i64
  %418 = icmp sgt i64 %400, 0
  br i1 %418, label %419, label %424

419:                                              ; preds = %407
  %420 = lshr exact i64 %400, 3
  %421 = inttoptr i64 %399 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %408, i8* align 8 %421, i64 %400, i1 false) #11
  %422 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %409, i64 %420
  %423 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %422 to i64
  br label %424

424:                                              ; preds = %419, %407
  %425 = phi i64 [ %423, %419 ], [ %417, %407 ]
  store i64 %425, i64* %416, align 8
  br label %426

426:                                              ; preds = %386, %424
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*] }, { [27 x i8*] }* @_ZTVN8spvtools3opt8analysis14VectorConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %394, align 8
  %427 = getelementptr inbounds i8, i8* %393, i64 40
  %428 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %392, i64 0, i32 2
  %429 = bitcast %"class.spvtools::opt::analysis::Type"** %428 to i64*
  %430 = load i64, i64* %429, align 8
  %431 = bitcast i8* %427 to i64*
  store i64 %430, i64* %431, align 8
  %432 = ptrtoint i8* %393 to i64
  %433 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %434 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %433, i64 0, i32 11
  %435 = load i32, i32* %434, align 8
  %436 = and i32 %435, 16384
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %452

438:                                              ; preds = %426
  %439 = call i8* @_Znwm(i64 136) #12
  %440 = bitcast i8* %439 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %440, %"class.spvtools::opt::IRContext"* %433) #11
  %441 = ptrtoint i8* %439 to i64
  %442 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %433, i64 0, i32 19
  %443 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %442, i64 0, i32 0, i32 0, i32 0
  %444 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %443, align 8
  %445 = bitcast %"class.std::__1::unique_ptr.400"* %442 to i64*
  store i64 %441, i64* %445, align 8
  %446 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %444, null
  br i1 %446, label %449, label %447

447:                                              ; preds = %438
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %444) #11
  %448 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %444 to i8*
  call void @_ZdlPv(i8* %448) #12
  br label %449

449:                                              ; preds = %447, %438
  %450 = load i32, i32* %434, align 8
  %451 = or i32 %450, 16384
  store i32 %451, i32* %434, align 8
  br label %452

452:                                              ; preds = %426, %449
  %453 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %433, i64 0, i32 19, i32 0, i32 0, i32 0
  %454 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %453, align 8
  %455 = bitcast %"class.std::__1::unique_ptr.460"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %455)
  %456 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %3, i64 0, i32 0, i32 0, i32 0
  %457 = bitcast %"class.std::__1::unique_ptr.460"* %3 to i8**
  store i8* %393, i8** %457, align 8
  %458 = bitcast %"class.spvtools::opt::analysis::Constant"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %458) #11
  %459 = bitcast %"class.spvtools::opt::analysis::Constant"** %4 to i8**
  store i8* %393, i8** %459, align 8
  %460 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %454, i64 0, i32 3, i32 0
  %461 = call { %"struct.std::__1::__hash_node_base.441"*, i8 } @_ZNSt3__112__hash_tableIPKN8spvtools3opt8analysis8ConstantENS3_12ConstantHashENS3_13ConstantEqualENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.437"* %460, %"class.spvtools::opt::analysis::Constant"** nonnull dereferenceable(8) %4, %"class.spvtools::opt::analysis::Constant"** nonnull dereferenceable(8) %4) #11
  %462 = extractvalue { %"struct.std::__1::__hash_node_base.441"*, i8 } %461, 0
  %463 = extractvalue { %"struct.std::__1::__hash_node_base.441"*, i8 } %461, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %458) #11
  %464 = and i8 %463, 1
  %465 = icmp eq i8 %464, 0
  br i1 %465, label %479, label %466

466:                                              ; preds = %452
  %467 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %454, i64 0, i32 4, i32 0, i32 1
  %468 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %467, align 8
  %469 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %454, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %470 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %469, align 8
  %471 = icmp ult %"class.std::__1::unique_ptr.460"* %468, %470
  br i1 %471, label %472, label %477

472:                                              ; preds = %466
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %456, align 8
  %473 = bitcast %"class.std::__1::unique_ptr.460"* %468 to i64*
  store i64 %432, i64* %473, align 8
  %474 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %468, i64 1
  %475 = ptrtoint %"class.std::__1::unique_ptr.460"* %474 to i64
  %476 = bitcast %"class.std::__1::unique_ptr.460"** %467 to i64*
  store i64 %475, i64* %476, align 8
  br label %479

477:                                              ; preds = %466
  %478 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %454, i64 0, i32 4
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt8analysis8ConstantENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.458"* %478, %"class.std::__1::unique_ptr.460"* nonnull dereferenceable(8) %3) #11
  br label %479

479:                                              ; preds = %477, %472, %452
  %480 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %462, i64 2
  %481 = bitcast %"struct.std::__1::__hash_node_base.441"* %480 to %"class.spvtools::opt::analysis::Constant"**
  %482 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %481, align 8
  %483 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %456, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %456, align 8
  %484 = icmp eq %"class.spvtools::opt::analysis::Constant"* %483, null
  br i1 %484, label %490, label %485

485:                                              ; preds = %479
  %486 = bitcast %"class.spvtools::opt::analysis::Constant"* %483 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %487 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %486, align 8
  %488 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %487, i64 1
  %489 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %488, align 8
  call void %489(%"class.spvtools::opt::analysis::Constant"* nonnull %483) #11
  br label %490

490:                                              ; preds = %479, %485
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %455)
  %491 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %492 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %491, i64 0, i32 11
  %493 = load i32, i32* %492, align 8
  %494 = and i32 %493, 16384
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %510

496:                                              ; preds = %490
  %497 = call i8* @_Znwm(i64 136) #12
  %498 = bitcast i8* %497 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %498, %"class.spvtools::opt::IRContext"* %491) #11
  %499 = ptrtoint i8* %497 to i64
  %500 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %491, i64 0, i32 19
  %501 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %500, i64 0, i32 0, i32 0, i32 0
  %502 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %501, align 8
  %503 = bitcast %"class.std::__1::unique_ptr.400"* %500 to i64*
  store i64 %499, i64* %503, align 8
  %504 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %502, null
  br i1 %504, label %507, label %505

505:                                              ; preds = %496
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %502) #11
  %506 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %502 to i8*
  call void @_ZdlPv(i8* %506) #12
  br label %507

507:                                              ; preds = %505, %496
  %508 = load i32, i32* %492, align 8
  %509 = or i32 %508, 16384
  store i32 %509, i32* %492, align 8
  br label %510

510:                                              ; preds = %507, %490
  %511 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %491, i64 0, i32 19, i32 0, i32 0, i32 0
  %512 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %511, align 8
  %513 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager30BuildInstructionAndAddToModuleEPKNS1_8ConstantEPNS0_15InstructionList8iteratorEj(%"class.spvtools::opt::analysis::ConstantManager"* %512, %"class.spvtools::opt::analysis::Constant"* %482, %"class.spvtools::opt::InstructionList::iterator"* %1, i32 0) #11
  %514 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %370, align 8
  %515 = icmp eq %"class.spvtools::opt::analysis::Constant"** %514, null
  br i1 %515, label %519, label %516

516:                                              ; preds = %510
  %517 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %514 to i64
  store i64 %517, i64* %388, align 8
  %518 = bitcast %"class.spvtools::opt::analysis::Constant"** %514 to i8*
  call void @_ZdlPv(i8* %518) #12
  br label %519

519:                                              ; preds = %510, %516
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %369) #11
  %520 = load i32*, i32** %364, align 8
  %521 = icmp eq i32* %520, null
  br i1 %521, label %526, label %522

522:                                              ; preds = %519
  %523 = ptrtoint i32* %520 to i64
  %524 = bitcast i32** %365 to i64*
  store i64 %523, i64* %524, align 8
  %525 = bitcast i32* %520 to i8*
  call void @_ZdlPv(i8* %525) #12
  br label %526

526:                                              ; preds = %519, %522
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %363) #11
  br label %649

527:                                              ; preds = %379, %646
  %528 = phi i32* [ %373, %379 ], [ %647, %646 ]
  %529 = load i32, i32* %528, align 4
  %530 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %531 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %530, i64 0, i32 11
  %532 = load i32, i32* %531, align 8
  %533 = and i32 %532, 16384
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %549

535:                                              ; preds = %527
  %536 = call i8* @_Znwm(i64 136) #12
  %537 = bitcast i8* %536 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %537, %"class.spvtools::opt::IRContext"* %530) #11
  %538 = ptrtoint i8* %536 to i64
  %539 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %530, i64 0, i32 19
  %540 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %539, i64 0, i32 0, i32 0, i32 0
  %541 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %540, align 8
  %542 = bitcast %"class.std::__1::unique_ptr.400"* %539 to i64*
  store i64 %538, i64* %542, align 8
  %543 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %541, null
  br i1 %543, label %546, label %544

544:                                              ; preds = %535
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %541) #11
  %545 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %541 to i8*
  call void @_ZdlPv(i8* %545) #12
  br label %546

546:                                              ; preds = %544, %535
  %547 = load i32, i32* %531, align 8
  %548 = or i32 %547, 16384
  store i32 %548, i32* %531, align 8
  br label %549

549:                                              ; preds = %527, %546
  %550 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %530, i64 0, i32 19, i32 0, i32 0, i32 0
  %551 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %550, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %380) #11
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_120EncodeIntegerAsWordsERKNS0_8analysis4TypeEj(%"class.spvtools::utils::SmallVector"* nonnull sret %9, %"class.spvtools::opt::analysis::Type"* dereferenceable(40) %356, i32 %529)
  %552 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantINS_5utils11SmallVectorIjLm2EEEEEPKNS1_8ConstantEPKNS1_4TypeERKT_(%"class.spvtools::opt::analysis::ConstantManager"* %551, %"class.spvtools::opt::analysis::Type"* %356, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %381, align 8
  %553 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %382, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %382, align 8
  %554 = icmp eq %"class.std::__1::vector.3"* %553, null
  br i1 %554, label %566, label %555

555:                                              ; preds = %549
  %556 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %553, i64 0, i32 0, i32 0
  %557 = load i32*, i32** %556, align 8
  %558 = icmp eq i32* %557, null
  br i1 %558, label %564, label %559

559:                                              ; preds = %555
  %560 = ptrtoint i32* %557 to i64
  %561 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %553, i64 0, i32 0, i32 1
  %562 = bitcast i32** %561 to i64*
  store i64 %560, i64* %562, align 8
  %563 = bitcast i32* %557 to i8*
  call void @_ZdlPv(i8* %563) #12
  br label %564

564:                                              ; preds = %559, %555
  %565 = bitcast %"class.std::__1::vector.3"* %553 to i8*
  call void @_ZdlPv(i8* %565) #12
  br label %566

566:                                              ; preds = %549, %564
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %380) #11
  %567 = ptrtoint %"class.spvtools::opt::analysis::Constant"* %552 to i64
  %568 = icmp eq %"class.spvtools::opt::analysis::Constant"* %552, null
  br i1 %568, label %646, label %569

569:                                              ; preds = %566
  %570 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %371, align 8
  %571 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %372, align 8
  %572 = icmp eq %"class.spvtools::opt::analysis::Constant"** %570, %571
  %573 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %571 to i64
  br i1 %572, label %578, label %574

574:                                              ; preds = %569
  %575 = bitcast %"class.spvtools::opt::analysis::Constant"** %570 to i64*
  store i64 %567, i64* %575, align 8
  %576 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %570, i64 1
  %577 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %576 to i64
  store i64 %577, i64* %383, align 8
  br label %622

578:                                              ; preds = %569
  %579 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %570 to i64
  %580 = load i64, i64* %384, align 8
  %581 = sub i64 %579, %580
  %582 = ashr exact i64 %581, 3
  %583 = add nsw i64 %582, 1
  %584 = icmp ugt i64 %583, 2305843009213693951
  br i1 %584, label %585, label %587

585:                                              ; preds = %578
  %586 = bitcast %"class.std::__1::vector.802"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %586) #13
  unreachable

587:                                              ; preds = %578
  %588 = sub i64 %573, %580
  %589 = ashr exact i64 %588, 3
  %590 = icmp ult i64 %589, 1152921504606846975
  br i1 %590, label %591, label %599

591:                                              ; preds = %587
  %592 = ashr exact i64 %588, 2
  %593 = icmp ult i64 %592, %583
  %594 = select i1 %593, i64 %583, i64 %592
  %595 = icmp eq i64 %594, 0
  br i1 %595, label %604, label %596

596:                                              ; preds = %591
  %597 = icmp ugt i64 %594, 2305843009213693951
  br i1 %597, label %598, label %599

598:                                              ; preds = %596
  call void @abort() #13
  unreachable

599:                                              ; preds = %596, %587
  %600 = phi i64 [ %594, %596 ], [ 2305843009213693951, %587 ]
  %601 = shl i64 %600, 3
  %602 = call i8* @_Znwm(i64 %601) #12
  %603 = bitcast i8* %602 to %"class.spvtools::opt::analysis::Constant"**
  br label %604

604:                                              ; preds = %599, %591
  %605 = phi i64 [ %600, %599 ], [ 0, %591 ]
  %606 = phi i8* [ %602, %599 ], [ null, %591 ]
  %607 = phi %"class.spvtools::opt::analysis::Constant"** [ %603, %599 ], [ null, %591 ]
  %608 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %607, i64 %582
  %609 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %607, i64 %605
  %610 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %609 to i64
  %611 = bitcast %"class.spvtools::opt::analysis::Constant"** %608 to i64*
  store i64 %567, i64* %611, align 8
  %612 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %608, i64 1
  %613 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %612 to i64
  %614 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %607 to i64
  %615 = icmp sgt i64 %581, 0
  br i1 %615, label %616, label %618

616:                                              ; preds = %604
  %617 = inttoptr i64 %580 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %606, i8* align 8 %617, i64 %581, i1 false) #11
  br label %618

618:                                              ; preds = %616, %604
  store i64 %614, i64* %384, align 8
  store i64 %613, i64* %383, align 8
  store i64 %610, i64* %385, align 8
  %619 = icmp eq i64 %580, 0
  br i1 %619, label %622, label %620

620:                                              ; preds = %618
  %621 = inttoptr i64 %580 to i8*
  call void @_ZdlPv(i8* %621) #12
  br label %622

622:                                              ; preds = %574, %618, %620
  %623 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %624 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %623, i64 0, i32 11
  %625 = load i32, i32* %624, align 8
  %626 = and i32 %625, 16384
  %627 = icmp eq i32 %626, 0
  br i1 %627, label %628, label %642

628:                                              ; preds = %622
  %629 = call i8* @_Znwm(i64 136) #12
  %630 = bitcast i8* %629 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %630, %"class.spvtools::opt::IRContext"* %623) #11
  %631 = ptrtoint i8* %629 to i64
  %632 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %623, i64 0, i32 19
  %633 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %632, i64 0, i32 0, i32 0, i32 0
  %634 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %633, align 8
  %635 = bitcast %"class.std::__1::unique_ptr.400"* %632 to i64*
  store i64 %631, i64* %635, align 8
  %636 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %634, null
  br i1 %636, label %639, label %637

637:                                              ; preds = %628
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %634) #11
  %638 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %634 to i8*
  call void @_ZdlPv(i8* %638) #12
  br label %639

639:                                              ; preds = %637, %628
  %640 = load i32, i32* %624, align 8
  %641 = or i32 %640, 16384
  store i32 %641, i32* %624, align 8
  br label %642

642:                                              ; preds = %622, %639
  %643 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %623, i64 0, i32 19, i32 0, i32 0, i32 0
  %644 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %643, align 8
  %645 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager30BuildInstructionAndAddToModuleEPKNS1_8ConstantEPNS0_15InstructionList8iteratorEj(%"class.spvtools::opt::analysis::ConstantManager"* %644, %"class.spvtools::opt::analysis::Constant"* nonnull %552, %"class.spvtools::opt::InstructionList::iterator"* %1, i32 0) #11
  br label %646

646:                                              ; preds = %566, %642
  %647 = getelementptr inbounds i32, i32* %528, i64 1
  %648 = icmp eq i32* %647, %374
  br i1 %648, label %386, label %527

649:                                              ; preds = %192, %200, %176, %172, %119, %95, %112, %150, %146, %138, %343, %526, %339
  %650 = phi %"class.spvtools::opt::Instruction"* [ %342, %339 ], [ %513, %526 ], [ null, %343 ], [ null, %138 ], [ null, %146 ], [ null, %150 ], [ null, %112 ], [ null, %95 ], [ null, %119 ], [ null, %172 ], [ null, %176 ], [ null, %200 ], [ null, %192 ]
  %651 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %48, align 8
  %652 = icmp eq %"class.spvtools::opt::analysis::Constant"** %651, null
  br i1 %652, label %657, label %653

653:                                              ; preds = %649
  %654 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %651 to i64
  %655 = bitcast %"class.spvtools::opt::analysis::Constant"*** %49 to i64*
  store i64 %654, i64* %655, align 8
  %656 = bitcast %"class.spvtools::opt::analysis::Constant"** %651 to i8*
  call void @_ZdlPv(i8* %656) #12
  br label %657

657:                                              ; preds = %649, %653
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #11
  ret %"class.spvtools::opt::Instruction"* %650
}

declare zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"*, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN8spvtools3opt9IRContext7KillDefEj(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8spvtools3opt34FoldSpecConstantOpAndCompositePass16GetTypeComponentEjj(%"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass", %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %34

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 104) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::DefUseManager"*
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = getelementptr inbounds i8, i8* %13, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #11
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 64
  %21 = getelementptr inbounds i8, i8* %13, i64 96
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %22, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %14, %"class.spvtools::opt::Module"* %12) #11
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6
  %24 = ptrtoint i8* %13 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %23 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %10
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %23 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %30, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %26) #11
  br label %31

31:                                               ; preds = %29, %10
  %32 = load i32, i32* %6, align 8
  %33 = or i32 %32, 1
  store i32 %33, i32* %6, align 8
  br label %34

34:                                               ; preds = %3, %31
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %35, align 8
  %37 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %36, i32 %1) #11
  %38 = tail call i32 @_ZNK8spvtools3opt11Instruction16GetTypeComponentEj(%"class.spvtools::opt::Instruction"* %37, i32 %2) #11
  ret i32 %38
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

declare i32 @_ZNK8spvtools3opt11Instruction16GetTypeComponentEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.spvtools::opt::InstructionFolder"* @_ZN8spvtools3opt9IRContext22get_instruction_folderEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 26
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.754"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.spvtools::opt::InstructionFolder"*, %"class.spvtools::opt::InstructionFolder"** %3, align 8
  %5 = icmp eq %"class.spvtools::opt::InstructionFolder"* %4, null
  br i1 %5, label %6, label %71

6:                                                ; preds = %1
  %7 = ptrtoint %"class.spvtools::opt::IRContext"* %0 to i64
  %8 = tail call i8* @_Znwm(i64 24) #12
  %9 = bitcast i8* %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = tail call i8* @_Znwm(i64 104) #12
  %12 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8spvtools3opt20ConstantFoldingRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = getelementptr inbounds i8, i8* %11, i64 40
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %11, i64 56
  %17 = getelementptr inbounds i8, i8* %11, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #11
  %18 = bitcast i8* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 72
  %20 = bitcast i8* %19 to i64*
  store i64 %7, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %11, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #11
  %22 = ptrtoint i8* %11 to i64
  %23 = bitcast i8* %10 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %8, i64 16
  %25 = tail call i8* @_Znwm(i64 104) #12
  %26 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8spvtools3opt12FoldingRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 8
  %28 = getelementptr inbounds i8, i8* %25, i64 40
  %29 = bitcast i8* %28 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %25, i64 56
  %31 = getelementptr inbounds i8, i8* %25, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #11
  %32 = bitcast i8* %31 to i8**
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds i8, i8* %25, i64 72
  %34 = bitcast i8* %33 to i64*
  store i64 %7, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %25, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #11
  %36 = ptrtoint i8* %25 to i64
  %37 = bitcast i8* %24 to i64*
  store i64 %36, i64* %37, align 8
  %38 = bitcast i8* %25 to %"class.spvtools::opt::FoldingRules"*
  %39 = load void (%"class.spvtools::opt::FoldingRules"*)*, void (%"class.spvtools::opt::FoldingRules"*)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8spvtools3opt12FoldingRulesE, i64 0, inrange i32 0, i64 4) to void (%"class.spvtools::opt::FoldingRules"*)**), align 8
  tail call void %39(%"class.spvtools::opt::FoldingRules"* nonnull %38) #11
  %40 = bitcast i8* %11 to %"class.spvtools::opt::ConstantFoldingRules"*
  %41 = bitcast i8* %11 to void (%"class.spvtools::opt::ConstantFoldingRules"*)***
  %42 = load void (%"class.spvtools::opt::ConstantFoldingRules"*)**, void (%"class.spvtools::opt::ConstantFoldingRules"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.spvtools::opt::ConstantFoldingRules"*)*, void (%"class.spvtools::opt::ConstantFoldingRules"*)** %42, i64 2
  %44 = load void (%"class.spvtools::opt::ConstantFoldingRules"*)*, void (%"class.spvtools::opt::ConstantFoldingRules"*)** %43, align 8
  tail call void %44(%"class.spvtools::opt::ConstantFoldingRules"* nonnull %40) #11
  %45 = ptrtoint i8* %8 to i64
  %46 = load %"class.spvtools::opt::InstructionFolder"*, %"class.spvtools::opt::InstructionFolder"** %3, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.754"* %2 to i64*
  store i64 %45, i64* %47, align 8
  %48 = icmp eq %"class.spvtools::opt::InstructionFolder"* %46, null
  %49 = bitcast i8* %8 to %"class.spvtools::opt::InstructionFolder"*
  br i1 %48, label %71, label %50

50:                                               ; preds = %6
  %51 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %46, i64 0, i32 2, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::FoldingRules"*, %"class.spvtools::opt::FoldingRules"** %51, align 8
  store %"class.spvtools::opt::FoldingRules"* null, %"class.spvtools::opt::FoldingRules"** %51, align 8
  %53 = icmp eq %"class.spvtools::opt::FoldingRules"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.spvtools::opt::FoldingRules"* %52 to void (%"class.spvtools::opt::FoldingRules"*)***
  %56 = load void (%"class.spvtools::opt::FoldingRules"*)**, void (%"class.spvtools::opt::FoldingRules"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.spvtools::opt::FoldingRules"*)*, void (%"class.spvtools::opt::FoldingRules"*)** %56, i64 1
  %58 = load void (%"class.spvtools::opt::FoldingRules"*)*, void (%"class.spvtools::opt::FoldingRules"*)** %57, align 8
  tail call void %58(%"class.spvtools::opt::FoldingRules"* nonnull %52) #11
  br label %59

59:                                               ; preds = %54, %50
  %60 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %46, i64 0, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.spvtools::opt::ConstantFoldingRules"*, %"class.spvtools::opt::ConstantFoldingRules"** %60, align 8
  store %"class.spvtools::opt::ConstantFoldingRules"* null, %"class.spvtools::opt::ConstantFoldingRules"** %60, align 8
  %62 = icmp eq %"class.spvtools::opt::ConstantFoldingRules"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = bitcast %"class.spvtools::opt::ConstantFoldingRules"* %61 to void (%"class.spvtools::opt::ConstantFoldingRules"*)***
  %65 = load void (%"class.spvtools::opt::ConstantFoldingRules"*)**, void (%"class.spvtools::opt::ConstantFoldingRules"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.spvtools::opt::ConstantFoldingRules"*)*, void (%"class.spvtools::opt::ConstantFoldingRules"*)** %65, i64 1
  %67 = load void (%"class.spvtools::opt::ConstantFoldingRules"*)*, void (%"class.spvtools::opt::ConstantFoldingRules"*)** %66, align 8
  tail call void %67(%"class.spvtools::opt::ConstantFoldingRules"* nonnull %61) #11
  br label %68

68:                                               ; preds = %63, %59
  %69 = bitcast %"class.spvtools::opt::InstructionFolder"* %46 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  %70 = load %"class.spvtools::opt::InstructionFolder"*, %"class.spvtools::opt::InstructionFolder"** %3, align 8
  br label %71

71:                                               ; preds = %1, %6, %68
  %72 = phi %"class.spvtools::opt::InstructionFolder"* [ %4, %1 ], [ %49, %6 ], [ %70, %68 ]
  ret %"class.spvtools::opt::InstructionFolder"* %72
}

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS0_11InstructionENSt3__18functionIFjjEEE(%"class.spvtools::opt::InstructionFolder"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.910"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt34FoldSpecConstantOpAndCompositePass15DoVectorShuffleEPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* nocapture readonly, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.460", align 8
  %4 = alloca %"class.spvtools::opt::analysis::Constant"*, align 8
  %5 = alloca %"class.spvtools::opt::analysis::Constant"*, align 8
  %6 = alloca %"class.std::__1::vector.802", align 8
  %7 = alloca %"class.std::__1::vector.3", align 8
  %8 = alloca %"class.std::__1::vector.802", align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass", %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* %0, i64 0, i32 0, i32 2
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 16384
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %2
  %18 = tail call i8* @_Znwm(i64 136) #12
  %19 = bitcast i8* %18 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %19, %"class.spvtools::opt::IRContext"* %12) #11
  %20 = ptrtoint i8* %18 to i64
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 19
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.400"* %21 to i64*
  store i64 %20, i64* %24, align 8
  %25 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %17
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %23) #11
  %27 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %23 to i8*
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %26, %17
  %29 = load i32, i32* %13, align 8
  %30 = or i32 %29, 16384
  store i32 %30, i32* %13, align 8
  br label %31

31:                                               ; preds = %2, %28
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 19, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %32, align 8
  %34 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis15ConstantManager7GetTypeEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"* %33, %"class.spvtools::opt::Instruction"* %10) #11
  %35 = bitcast %"class.spvtools::opt::analysis::Type"* %34 to %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)***
  %36 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %36, i64 14
  %38 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %37, align 8
  %39 = tail call %"class.spvtools::opt::analysis::Vector"* %38(%"class.spvtools::opt::analysis::Type"* %34) #11
  %40 = bitcast %"class.spvtools::opt::analysis::Constant"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %5, align 8
  %41 = bitcast %"class.std::__1::vector.802"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #11
  %42 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %6, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #11
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %10, i64 0, i32 3
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %10, i64 0, i32 4
  %46 = bitcast %"class.std::__1::vector.3"* %7 to i8*
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 1
  %49 = bitcast i32** %48 to i64*
  br label %50

50:                                               ; preds = %31, %225
  %51 = phi i32* [ getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp, i64 0, i64 0), %31 ], [ %226, %225 ]
  %52 = load i32, i32* %51, align 4
  %53 = load i8, i8* %44, align 4, !range !15
  %54 = icmp eq i8 %53, 0
  %55 = load i8, i8* %45, align 1, !range !15
  %56 = icmp eq i8 %55, 0
  %57 = select i1 %56, i32 1, i32 2
  %58 = xor i1 %56, true
  %59 = zext i1 %58 to i32
  %60 = select i1 %54, i32 %59, i32 %57
  %61 = add i32 %60, %52
  %62 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %10, i32 %61) #11
  %63 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %64 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %63, i64 0, i32 11
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 16384
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %82

68:                                               ; preds = %50
  %69 = call i8* @_Znwm(i64 136) #12
  %70 = bitcast i8* %69 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %70, %"class.spvtools::opt::IRContext"* %63) #11
  %71 = ptrtoint i8* %69 to i64
  %72 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %63, i64 0, i32 19
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %73, align 8
  %75 = bitcast %"class.std::__1::unique_ptr.400"* %72 to i64*
  store i64 %71, i64* %75, align 8
  %76 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %74, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %68
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %74) #11
  %78 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %74 to i8*
  call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %77, %68
  %80 = load i32, i32* %64, align 8
  %81 = or i32 %80, 16384
  store i32 %81, i32* %64, align 8
  br label %82

82:                                               ; preds = %50, %79
  %83 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %63, i64 0, i32 19, i32 0, i32 0, i32 0
  %84 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %83, align 8
  %85 = zext i32 %62 to i64
  %86 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %84, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %478, label %89

89:                                               ; preds = %82
  %90 = call i64 @llvm.ctpop.i64(i64 %87) #11, !range !19
  %91 = icmp ugt i64 %90, 1
  br i1 %91, label %95, label %92

92:                                               ; preds = %89
  %93 = add i64 %87, 4294967295
  %94 = and i64 %93, %85
  br label %99

95:                                               ; preds = %89
  %96 = icmp ugt i64 %87, %85
  br i1 %96, label %99, label %97

97:                                               ; preds = %95
  %98 = urem i64 %85, %87
  br label %99

99:                                               ; preds = %97, %95, %92
  %100 = phi i64 [ %94, %92 ], [ %98, %97 ], [ %85, %95 ]
  %101 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %84, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %102, i64 %100
  %104 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.408"* %104, null
  br i1 %105, label %478, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %104, i64 0, i32 0
  %108 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.408"* %108, null
  br i1 %109, label %478, label %110

110:                                              ; preds = %106
  %111 = add i64 %87, -1
  br label %112

112:                                              ; preds = %133, %110
  %113 = phi %"struct.std::__1::__hash_node_base.408"* [ %108, %110 ], [ %135, %133 ]
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %113, i64 1
  %115 = bitcast %"struct.std::__1::__hash_node_base.408"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %116, %85
  br i1 %117, label %128, label %118

118:                                              ; preds = %112
  br i1 %91, label %121, label %119

119:                                              ; preds = %118
  %120 = and i64 %116, %111
  br label %125

121:                                              ; preds = %118
  %122 = icmp ult i64 %116, %87
  br i1 %122, label %125, label %123

123:                                              ; preds = %121
  %124 = urem i64 %116, %87
  br label %125

125:                                              ; preds = %123, %121, %119
  %126 = phi i64 [ %120, %119 ], [ %124, %123 ], [ %116, %121 ]
  %127 = icmp eq i64 %126, %100
  br i1 %127, label %133, label %478

128:                                              ; preds = %112
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %113, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.408"* %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, %62
  br i1 %132, label %137, label %133

133:                                              ; preds = %128, %125
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %113, i64 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.408"* %135, null
  br i1 %136, label %478, label %112

137:                                              ; preds = %128
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %113, i64 3
  %139 = bitcast %"struct.std::__1::__hash_node_base.408"* %138 to %"class.spvtools::opt::analysis::Constant"**
  %140 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %139, align 8
  %141 = icmp eq %"class.spvtools::opt::analysis::Constant"* %140, null
  br i1 %141, label %478, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %140, i64 0, i32 1
  %144 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %143, align 8
  %145 = bitcast %"class.spvtools::opt::analysis::Constant"* %140 to %"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %146 = load %"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %145, align 8
  %147 = getelementptr inbounds %"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %146, i64 19
  %148 = load %"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %147, align 8
  %149 = call %"class.spvtools::opt::analysis::VectorConstant"* %148(%"class.spvtools::opt::analysis::Constant"* nonnull %140) #11
  %150 = icmp eq %"class.spvtools::opt::analysis::VectorConstant"* %149, null
  br i1 %150, label %168, label %151

151:                                              ; preds = %142
  %152 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %43, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::analysis::VectorConstant", %"class.spvtools::opt::analysis::VectorConstant"* %149, i64 0, i32 0
  %154 = bitcast %"class.spvtools::opt::analysis::VectorConstant"* %149 to %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)***
  %155 = load %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)**, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*** %154, align 8
  %156 = getelementptr inbounds %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)** %155, i64 24
  %157 = load %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)** %156, align 8
  %158 = call dereferenceable(24) %"class.std::__1::vector.802"* %157(%"class.spvtools::opt::analysis::CompositeConstant"* %153) #11
  %159 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %158, i64 0, i32 0, i32 0
  %160 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %159, align 8
  %161 = load %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)**, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*** %154, align 8
  %162 = getelementptr inbounds %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)** %161, i64 24
  %163 = load %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)** %162, align 8
  %164 = call dereferenceable(24) %"class.std::__1::vector.802"* %163(%"class.spvtools::opt::analysis::CompositeConstant"* %153) #11
  %165 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %164, i64 0, i32 0, i32 1
  %166 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %165, align 8
  %167 = call %"class.spvtools::opt::analysis::Constant"** @_ZNSt3__16vectorIPKN8spvtools3opt8analysis8ConstantENS_9allocatorIS6_EEE6insertINS_11__wrap_iterIPKS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISG_E9referenceEEE5valueENSB_IPS6_EEE4typeESE_SG_SG_(%"class.std::__1::vector.802"* nonnull %6, %"class.spvtools::opt::analysis::Constant"** %152, %"class.spvtools::opt::analysis::Constant"** %160, %"class.spvtools::opt::analysis::Constant"** %166)
  br label %225

168:                                              ; preds = %142
  %169 = bitcast %"class.spvtools::opt::analysis::Constant"* %140 to %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %170 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %169, align 8
  %171 = getelementptr inbounds %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %170, i64 22
  %172 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %171, align 8
  %173 = call %"class.spvtools::opt::analysis::NullConstant"* %172(%"class.spvtools::opt::analysis::Constant"* nonnull %140) #11
  %174 = icmp eq %"class.spvtools::opt::analysis::NullConstant"* %173, null
  br i1 %174, label %478, label %175

175:                                              ; preds = %168
  %176 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %5, align 8
  %177 = icmp eq %"class.spvtools::opt::analysis::Constant"* %176, null
  %178 = bitcast %"class.spvtools::opt::analysis::Type"* %144 to %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)***
  br i1 %177, label %179, label %215

179:                                              ; preds = %175
  %180 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*** %178, align 8
  %181 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %180, i64 15
  %182 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %181, align 8
  %183 = call %"class.spvtools::opt::analysis::Vector"* %182(%"class.spvtools::opt::analysis::Type"* %144) #11
  %184 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %183, i64 0, i32 2
  %185 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %184, align 8
  %186 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %187 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %186, i64 0, i32 11
  %188 = load i32, i32* %187, align 8
  %189 = and i32 %188, 16384
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %205

191:                                              ; preds = %179
  %192 = call i8* @_Znwm(i64 136) #12
  %193 = bitcast i8* %192 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %193, %"class.spvtools::opt::IRContext"* %186) #11
  %194 = ptrtoint i8* %192 to i64
  %195 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %186, i64 0, i32 19
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %195, i64 0, i32 0, i32 0, i32 0
  %197 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %196, align 8
  %198 = bitcast %"class.std::__1::unique_ptr.400"* %195 to i64*
  store i64 %194, i64* %198, align 8
  %199 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %197, null
  br i1 %199, label %202, label %200

200:                                              ; preds = %191
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %197) #11
  %201 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %197 to i8*
  call void @_ZdlPv(i8* %201) #12
  br label %202

202:                                              ; preds = %200, %191
  %203 = load i32, i32* %187, align 8
  %204 = or i32 %203, 16384
  store i32 %204, i32* %187, align 8
  br label %205

205:                                              ; preds = %179, %202
  %206 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %186, i64 0, i32 19, i32 0, i32 0, i32 0
  %207 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %206, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 24, i1 false) #11
  %208 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %207, %"class.spvtools::opt::analysis::Type"* %185, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %7) #11
  store %"class.spvtools::opt::analysis::Constant"* %208, %"class.spvtools::opt::analysis::Constant"** %5, align 8
  %209 = load i32*, i32** %47, align 8
  %210 = icmp eq i32* %209, null
  br i1 %210, label %214, label %211

211:                                              ; preds = %205
  %212 = ptrtoint i32* %209 to i64
  store i64 %212, i64* %49, align 8
  %213 = bitcast i32* %209 to i8*
  call void @_ZdlPv(i8* %213) #12
  br label %214

214:                                              ; preds = %205, %211
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #11
  br label %215

215:                                              ; preds = %175, %214
  %216 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %43, align 8
  %217 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*** %178, align 8
  %218 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %217, i64 15
  %219 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %218, align 8
  %220 = call %"class.spvtools::opt::analysis::Vector"* %219(%"class.spvtools::opt::analysis::Type"* %144) #11
  %221 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %220, i64 0, i32 3
  %222 = load i32, i32* %221, align 8
  %223 = zext i32 %222 to i64
  %224 = call %"class.spvtools::opt::analysis::Constant"** @_ZNSt3__16vectorIPKN8spvtools3opt8analysis8ConstantENS_9allocatorIS6_EEE6insertENS_11__wrap_iterIPKS6_EEmRSB_(%"class.std::__1::vector.802"* nonnull %6, %"class.spvtools::opt::analysis::Constant"** %216, i64 %223, %"class.spvtools::opt::analysis::Constant"** nonnull dereferenceable(8) %5)
  br label %225

225:                                              ; preds = %215, %151
  %226 = getelementptr inbounds i32, i32* %51, i64 1
  %227 = icmp eq i32* %226, getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp, i64 1, i64 0)
  br i1 %227, label %228, label %50

228:                                              ; preds = %225
  %229 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %5, align 8
  %230 = icmp eq %"class.spvtools::opt::analysis::Constant"* %229, null
  br i1 %230, label %257, label %231

231:                                              ; preds = %228
  %232 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %233 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %232, i64 0, i32 11
  %234 = load i32, i32* %233, align 8
  %235 = and i32 %234, 16384
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %252

237:                                              ; preds = %231
  %238 = call i8* @_Znwm(i64 136) #12
  %239 = bitcast i8* %238 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %239, %"class.spvtools::opt::IRContext"* %232) #11
  %240 = ptrtoint i8* %238 to i64
  %241 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %232, i64 0, i32 19
  %242 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %241, i64 0, i32 0, i32 0, i32 0
  %243 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %242, align 8
  %244 = bitcast %"class.std::__1::unique_ptr.400"* %241 to i64*
  store i64 %240, i64* %244, align 8
  %245 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %243, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %237
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %243) #11
  %247 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %243 to i8*
  call void @_ZdlPv(i8* %247) #12
  br label %248

248:                                              ; preds = %246, %237
  %249 = load i32, i32* %233, align 8
  %250 = or i32 %249, 16384
  store i32 %250, i32* %233, align 8
  %251 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %5, align 8
  br label %252

252:                                              ; preds = %231, %248
  %253 = phi %"class.spvtools::opt::analysis::Constant"* [ %229, %231 ], [ %251, %248 ]
  %254 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %232, i64 0, i32 19, i32 0, i32 0, i32 0
  %255 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %254, align 8
  %256 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager30BuildInstructionAndAddToModuleEPKNS1_8ConstantEPNS0_15InstructionList8iteratorEj(%"class.spvtools::opt::analysis::ConstantManager"* %255, %"class.spvtools::opt::analysis::Constant"* %253, %"class.spvtools::opt::InstructionList::iterator"* %1, i32 0) #11
  br label %257

257:                                              ; preds = %228, %252
  %258 = bitcast %"class.std::__1::vector.802"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %258) #11
  %259 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %8, i64 0, i32 0, i32 0
  %260 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %8, i64 0, i32 0, i32 1
  %261 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %258, i8 0, i64 24, i1 false) #11
  %262 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %10, i64 0, i32 6
  %263 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %10, i64 0, i32 6, i32 0, i32 1
  %264 = bitcast %"struct.spvtools::opt::Operand"** %263 to i64*
  %265 = bitcast %"class.std::__1::vector"* %262 to i64*
  %266 = bitcast %"class.spvtools::opt::analysis::Constant"*** %260 to i64*
  %267 = bitcast %"class.std::__1::vector.802"* %8 to i64*
  %268 = bitcast %"class.spvtools::opt::analysis::Constant"*** %261 to i64*
  br label %269

269:                                              ; preds = %476, %257
  %270 = phi i32 [ 3, %257 ], [ %477, %476 ]
  %271 = load i64, i64* %264, align 8
  %272 = load i64, i64* %265, align 8
  %273 = sub i64 %271, %272
  %274 = sdiv exact i64 %273, 48
  %275 = load i8, i8* %44, align 4, !range !15
  %276 = icmp eq i8 %275, 0
  %277 = load i8, i8* %45, align 1, !range !15
  %278 = icmp eq i8 %277, 0
  %279 = select i1 %278, i32 1, i32 2
  %280 = xor i1 %278, true
  %281 = zext i1 %280 to i32
  %282 = select i1 %276, i32 %281, i32 %279
  %283 = trunc i64 %274 to i32
  %284 = sub i32 %283, %282
  %285 = icmp ult i32 %270, %284
  br i1 %285, label %414, label %286

286:                                              ; preds = %269
  %287 = call i8* @_Znwm(i64 48) #12
  %288 = bitcast i8* %287 to i32 (...)***
  %289 = getelementptr inbounds i8, i8* %287, i64 8
  %290 = bitcast i8* %289 to %"class.spvtools::opt::analysis::Vector"**
  store %"class.spvtools::opt::analysis::Vector"* %39, %"class.spvtools::opt::analysis::Vector"** %290, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*] }, { [27 x i8*] }* @_ZTVN8spvtools3opt8analysis17CompositeConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %288, align 8
  %291 = getelementptr inbounds i8, i8* %287, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %291, i8 0, i64 24, i1 false) #11
  %292 = load i64, i64* %266, align 8
  %293 = load i64, i64* %267, align 8
  %294 = sub i64 %292, %293
  %295 = ashr exact i64 %294, 3
  %296 = icmp eq i64 %294, 0
  br i1 %296, label %320, label %297

297:                                              ; preds = %286
  %298 = icmp ugt i64 %295, 2305843009213693951
  br i1 %298, label %299, label %301

299:                                              ; preds = %297
  %300 = bitcast i8* %291 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %300) #13
  unreachable

301:                                              ; preds = %297
  %302 = call i8* @_Znwm(i64 %294) #12
  %303 = bitcast i8* %302 to %"class.spvtools::opt::analysis::Constant"**
  %304 = getelementptr inbounds i8, i8* %287, i64 24
  %305 = bitcast i8* %304 to i8**
  store i8* %302, i8** %305, align 8
  %306 = bitcast i8* %291 to i8**
  store i8* %302, i8** %306, align 8
  %307 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %303, i64 %295
  %308 = getelementptr inbounds i8, i8* %287, i64 32
  %309 = bitcast i8* %308 to %"class.spvtools::opt::analysis::Constant"***
  store %"class.spvtools::opt::analysis::Constant"** %307, %"class.spvtools::opt::analysis::Constant"*** %309, align 8
  %310 = bitcast i8* %304 to i64*
  %311 = ptrtoint i8* %302 to i64
  %312 = icmp sgt i64 %294, 0
  br i1 %312, label %313, label %318

313:                                              ; preds = %301
  %314 = lshr exact i64 %294, 3
  %315 = inttoptr i64 %293 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %302, i8* align 8 %315, i64 %294, i1 false) #11
  %316 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %303, i64 %314
  %317 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %316 to i64
  br label %318

318:                                              ; preds = %313, %301
  %319 = phi i64 [ %317, %313 ], [ %311, %301 ]
  store i64 %319, i64* %310, align 8
  br label %320

320:                                              ; preds = %286, %318
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*] }, { [27 x i8*] }* @_ZTVN8spvtools3opt8analysis14VectorConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %288, align 8
  %321 = getelementptr inbounds i8, i8* %287, i64 40
  %322 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %39, i64 0, i32 2
  %323 = bitcast %"class.spvtools::opt::analysis::Type"** %322 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = bitcast i8* %321 to i64*
  store i64 %324, i64* %325, align 8
  %326 = ptrtoint i8* %287 to i64
  %327 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %328 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %327, i64 0, i32 11
  %329 = load i32, i32* %328, align 8
  %330 = and i32 %329, 16384
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %346

332:                                              ; preds = %320
  %333 = call i8* @_Znwm(i64 136) #12
  %334 = bitcast i8* %333 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %334, %"class.spvtools::opt::IRContext"* %327) #11
  %335 = ptrtoint i8* %333 to i64
  %336 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %327, i64 0, i32 19
  %337 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %336, i64 0, i32 0, i32 0, i32 0
  %338 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %337, align 8
  %339 = bitcast %"class.std::__1::unique_ptr.400"* %336 to i64*
  store i64 %335, i64* %339, align 8
  %340 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %338, null
  br i1 %340, label %343, label %341

341:                                              ; preds = %332
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %338) #11
  %342 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %338 to i8*
  call void @_ZdlPv(i8* %342) #12
  br label %343

343:                                              ; preds = %341, %332
  %344 = load i32, i32* %328, align 8
  %345 = or i32 %344, 16384
  store i32 %345, i32* %328, align 8
  br label %346

346:                                              ; preds = %320, %343
  %347 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %327, i64 0, i32 19, i32 0, i32 0, i32 0
  %348 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %347, align 8
  %349 = bitcast %"class.std::__1::unique_ptr.460"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %349)
  %350 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %3, i64 0, i32 0, i32 0, i32 0
  %351 = bitcast %"class.std::__1::unique_ptr.460"* %3 to i8**
  store i8* %287, i8** %351, align 8
  %352 = bitcast %"class.spvtools::opt::analysis::Constant"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %352) #11
  %353 = bitcast %"class.spvtools::opt::analysis::Constant"** %4 to i8**
  store i8* %287, i8** %353, align 8
  %354 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %348, i64 0, i32 3, i32 0
  %355 = call { %"struct.std::__1::__hash_node_base.441"*, i8 } @_ZNSt3__112__hash_tableIPKN8spvtools3opt8analysis8ConstantENS3_12ConstantHashENS3_13ConstantEqualENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.437"* %354, %"class.spvtools::opt::analysis::Constant"** nonnull dereferenceable(8) %4, %"class.spvtools::opt::analysis::Constant"** nonnull dereferenceable(8) %4) #11
  %356 = extractvalue { %"struct.std::__1::__hash_node_base.441"*, i8 } %355, 0
  %357 = extractvalue { %"struct.std::__1::__hash_node_base.441"*, i8 } %355, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %352) #11
  %358 = and i8 %357, 1
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %373, label %360

360:                                              ; preds = %346
  %361 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %348, i64 0, i32 4, i32 0, i32 1
  %362 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %361, align 8
  %363 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %348, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %364 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %363, align 8
  %365 = icmp ult %"class.std::__1::unique_ptr.460"* %362, %364
  br i1 %365, label %366, label %371

366:                                              ; preds = %360
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %350, align 8
  %367 = bitcast %"class.std::__1::unique_ptr.460"* %362 to i64*
  store i64 %326, i64* %367, align 8
  %368 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %362, i64 1
  %369 = ptrtoint %"class.std::__1::unique_ptr.460"* %368 to i64
  %370 = bitcast %"class.std::__1::unique_ptr.460"** %361 to i64*
  store i64 %369, i64* %370, align 8
  br label %373

371:                                              ; preds = %360
  %372 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %348, i64 0, i32 4
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt8analysis8ConstantENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.458"* %372, %"class.std::__1::unique_ptr.460"* nonnull dereferenceable(8) %3) #11
  br label %373

373:                                              ; preds = %371, %366, %346
  %374 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %356, i64 2
  %375 = bitcast %"struct.std::__1::__hash_node_base.441"* %374 to %"class.spvtools::opt::analysis::Constant"**
  %376 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %375, align 8
  %377 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %350, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %350, align 8
  %378 = icmp eq %"class.spvtools::opt::analysis::Constant"* %377, null
  br i1 %378, label %384, label %379

379:                                              ; preds = %373
  %380 = bitcast %"class.spvtools::opt::analysis::Constant"* %377 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %381 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %380, align 8
  %382 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %381, i64 1
  %383 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %382, align 8
  call void %383(%"class.spvtools::opt::analysis::Constant"* nonnull %377) #11
  br label %384

384:                                              ; preds = %373, %379
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %349)
  %385 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %386 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %385, i64 0, i32 11
  %387 = load i32, i32* %386, align 8
  %388 = and i32 %387, 16384
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %390, label %404

390:                                              ; preds = %384
  %391 = call i8* @_Znwm(i64 136) #12
  %392 = bitcast i8* %391 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %392, %"class.spvtools::opt::IRContext"* %385) #11
  %393 = ptrtoint i8* %391 to i64
  %394 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %385, i64 0, i32 19
  %395 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %394, i64 0, i32 0, i32 0, i32 0
  %396 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %395, align 8
  %397 = bitcast %"class.std::__1::unique_ptr.400"* %394 to i64*
  store i64 %393, i64* %397, align 8
  %398 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %396, null
  br i1 %398, label %401, label %399

399:                                              ; preds = %390
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %396) #11
  %400 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %396 to i8*
  call void @_ZdlPv(i8* %400) #12
  br label %401

401:                                              ; preds = %399, %390
  %402 = load i32, i32* %386, align 8
  %403 = or i32 %402, 16384
  store i32 %403, i32* %386, align 8
  br label %404

404:                                              ; preds = %401, %384
  %405 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %385, i64 0, i32 19, i32 0, i32 0, i32 0
  %406 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %405, align 8
  %407 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager30BuildInstructionAndAddToModuleEPKNS1_8ConstantEPNS0_15InstructionList8iteratorEj(%"class.spvtools::opt::analysis::ConstantManager"* %406, %"class.spvtools::opt::analysis::Constant"* %376, %"class.spvtools::opt::InstructionList::iterator"* %1, i32 0) #11
  %408 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %259, align 8
  %409 = icmp eq %"class.spvtools::opt::analysis::Constant"** %408, null
  br i1 %409, label %413, label %410

410:                                              ; preds = %404
  %411 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %408 to i64
  store i64 %411, i64* %266, align 8
  %412 = bitcast %"class.spvtools::opt::analysis::Constant"** %408 to i8*
  call void @_ZdlPv(i8* %412) #12
  br label %413

413:                                              ; preds = %404, %410
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %258) #11
  br label %478

414:                                              ; preds = %269
  %415 = add i32 %282, %270
  %416 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %10, i32 %415) #11
  %417 = zext i32 %416 to i64
  %418 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %42, align 8
  %419 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %418, i64 %417
  %420 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %260, align 8
  %421 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %261, align 8
  %422 = icmp eq %"class.spvtools::opt::analysis::Constant"** %420, %421
  %423 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %421 to i64
  br i1 %422, label %430, label %424

424:                                              ; preds = %414
  %425 = bitcast %"class.spvtools::opt::analysis::Constant"** %419 to i64*
  %426 = load i64, i64* %425, align 8
  %427 = bitcast %"class.spvtools::opt::analysis::Constant"** %420 to i64*
  store i64 %426, i64* %427, align 8
  %428 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %420, i64 1
  %429 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %428 to i64
  store i64 %429, i64* %266, align 8
  br label %476

430:                                              ; preds = %414
  %431 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %420 to i64
  %432 = load i64, i64* %267, align 8
  %433 = sub i64 %431, %432
  %434 = ashr exact i64 %433, 3
  %435 = add nsw i64 %434, 1
  %436 = icmp ugt i64 %435, 2305843009213693951
  br i1 %436, label %437, label %439

437:                                              ; preds = %430
  %438 = bitcast %"class.std::__1::vector.802"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %438) #13
  unreachable

439:                                              ; preds = %430
  %440 = sub i64 %423, %432
  %441 = ashr exact i64 %440, 3
  %442 = icmp ult i64 %441, 1152921504606846975
  br i1 %442, label %443, label %451

443:                                              ; preds = %439
  %444 = ashr exact i64 %440, 2
  %445 = icmp ult i64 %444, %435
  %446 = select i1 %445, i64 %435, i64 %444
  %447 = icmp eq i64 %446, 0
  br i1 %447, label %456, label %448

448:                                              ; preds = %443
  %449 = icmp ugt i64 %446, 2305843009213693951
  br i1 %449, label %450, label %451

450:                                              ; preds = %448
  call void @abort() #13
  unreachable

451:                                              ; preds = %448, %439
  %452 = phi i64 [ %446, %448 ], [ 2305843009213693951, %439 ]
  %453 = shl i64 %452, 3
  %454 = call i8* @_Znwm(i64 %453) #12
  %455 = bitcast i8* %454 to %"class.spvtools::opt::analysis::Constant"**
  br label %456

456:                                              ; preds = %451, %443
  %457 = phi i64 [ %452, %451 ], [ 0, %443 ]
  %458 = phi i8* [ %454, %451 ], [ null, %443 ]
  %459 = phi %"class.spvtools::opt::analysis::Constant"** [ %455, %451 ], [ null, %443 ]
  %460 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %459, i64 %434
  %461 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %459, i64 %457
  %462 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %461 to i64
  %463 = bitcast %"class.spvtools::opt::analysis::Constant"** %419 to i64*
  %464 = load i64, i64* %463, align 8
  %465 = bitcast %"class.spvtools::opt::analysis::Constant"** %460 to i64*
  store i64 %464, i64* %465, align 8
  %466 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %460, i64 1
  %467 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %466 to i64
  %468 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %459 to i64
  %469 = icmp sgt i64 %433, 0
  br i1 %469, label %470, label %472

470:                                              ; preds = %456
  %471 = inttoptr i64 %432 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %458, i8* align 8 %471, i64 %433, i1 false) #11
  br label %472

472:                                              ; preds = %470, %456
  store i64 %468, i64* %267, align 8
  store i64 %467, i64* %266, align 8
  store i64 %462, i64* %268, align 8
  %473 = icmp eq i64 %432, 0
  br i1 %473, label %476, label %474

474:                                              ; preds = %472
  %475 = inttoptr i64 %432 to i8*
  call void @_ZdlPv(i8* %475) #12
  br label %476

476:                                              ; preds = %424, %472, %474
  %477 = add nuw i32 %270, 1
  br label %269

478:                                              ; preds = %168, %106, %82, %99, %137, %133, %125, %413
  %479 = phi %"class.spvtools::opt::Instruction"* [ %407, %413 ], [ null, %125 ], [ null, %133 ], [ null, %137 ], [ null, %99 ], [ null, %82 ], [ null, %106 ], [ null, %168 ]
  %480 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %42, align 8
  %481 = icmp eq %"class.spvtools::opt::analysis::Constant"** %480, null
  br i1 %481, label %486, label %482

482:                                              ; preds = %478
  %483 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %480 to i64
  %484 = bitcast %"class.spvtools::opt::analysis::Constant"*** %43 to i64*
  store i64 %483, i64* %484, align 8
  %485 = bitcast %"class.spvtools::opt::analysis::Constant"** %480 to i8*
  call void @_ZdlPv(i8* %485) #12
  br label %486

486:                                              ; preds = %478, %482
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11
  ret %"class.spvtools::opt::Instruction"* %479
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Constant"** @_ZNSt3__16vectorIPKN8spvtools3opt8analysis8ConstantENS_9allocatorIS6_EEE6insertINS_11__wrap_iterIPKS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISG_E9referenceEEE5valueENSB_IPS6_EEE4typeESE_SG_SG_(%"class.std::__1::vector.802"*, %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.spvtools::opt::analysis::Constant"** %2 to i8*
  %6 = bitcast %"class.spvtools::opt::analysis::Constant"** %1 to i8*
  %7 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %1 to i64
  %8 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %772

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.spvtools::opt::analysis::Constant"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %18, align 8
  %20 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast %"class.spvtools::opt::analysis::Constant"*** %18 to i64*
  br i1 %23, label %359, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %214

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %2, i64 %27
  %31 = icmp eq %"class.spvtools::opt::analysis::Constant"** %30, %3
  br i1 %31, label %209, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %3, i64 %33
  %35 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %3, i64 %41
  %43 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add nsw i64 %48, 1
  %50 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %2, i64 %49
  %51 = icmp ult %"class.spvtools::opt::analysis::Constant"** %19, %50
  %52 = icmp ult %"class.spvtools::opt::analysis::Constant"** %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 4611686018427387900
  %56 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %19, i64 %55
  %57 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %30, i64 %55
  %58 = add nsw i64 %55, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %19, i64 %66
  %69 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %30, i64 %66
  %70 = bitcast %"class.spvtools::opt::analysis::Constant"** %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !23
  %72 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %69, i64 2
  %73 = bitcast %"class.spvtools::opt::analysis::Constant"** %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !23
  %75 = bitcast %"class.spvtools::opt::analysis::Constant"** %68 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !26, !noalias !23
  %76 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %68, i64 2
  %77 = bitcast %"class.spvtools::opt::analysis::Constant"** %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !26, !noalias !23
  %78 = or i64 %66, 4
  %79 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %19, i64 %78
  %80 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %30, i64 %78
  %81 = bitcast %"class.spvtools::opt::analysis::Constant"** %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !23
  %83 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %80, i64 2
  %84 = bitcast %"class.spvtools::opt::analysis::Constant"** %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !23
  %86 = bitcast %"class.spvtools::opt::analysis::Constant"** %79 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !26, !noalias !23
  %87 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %79, i64 2
  %88 = bitcast %"class.spvtools::opt::analysis::Constant"** %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !26, !noalias !23
  %89 = or i64 %66, 8
  %90 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %19, i64 %89
  %91 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %30, i64 %89
  %92 = bitcast %"class.spvtools::opt::analysis::Constant"** %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !23
  %94 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %91, i64 2
  %95 = bitcast %"class.spvtools::opt::analysis::Constant"** %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !23
  %97 = bitcast %"class.spvtools::opt::analysis::Constant"** %90 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !26, !noalias !23
  %98 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %90, i64 2
  %99 = bitcast %"class.spvtools::opt::analysis::Constant"** %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !26, !noalias !23
  %100 = or i64 %66, 12
  %101 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %19, i64 %100
  %102 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %30, i64 %100
  %103 = bitcast %"class.spvtools::opt::analysis::Constant"** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !23
  %105 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %102, i64 2
  %106 = bitcast %"class.spvtools::opt::analysis::Constant"** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !23
  %108 = bitcast %"class.spvtools::opt::analysis::Constant"** %101 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !26, !noalias !23
  %109 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %101, i64 2
  %110 = bitcast %"class.spvtools::opt::analysis::Constant"** %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !26, !noalias !23
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !28

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %19, i64 %118
  %121 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %30, i64 %118
  %122 = bitcast %"class.spvtools::opt::analysis::Constant"** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !23
  %124 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %121, i64 2
  %125 = bitcast %"class.spvtools::opt::analysis::Constant"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !23
  %127 = bitcast %"class.spvtools::opt::analysis::Constant"** %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !26, !noalias !23
  %128 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %120, i64 2
  %129 = bitcast %"class.spvtools::opt::analysis::Constant"** %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !26, !noalias !23
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !30

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %206, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi %"class.spvtools::opt::analysis::Constant"** [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi %"class.spvtools::opt::analysis::Constant"** [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %137 to i64
  %139 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %3, i64 -1
  %140 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %135, %146
  %147 = phi %"class.spvtools::opt::analysis::Constant"** [ %154, %146 ], [ %136, %135 ]
  %148 = phi %"class.spvtools::opt::analysis::Constant"** [ %153, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %155, %146 ], [ %144, %135 ]
  %150 = bitcast %"class.spvtools::opt::analysis::Constant"** %147 to i64*
  %151 = bitcast %"class.spvtools::opt::analysis::Constant"** %148 to i64*
  %152 = load i64, i64* %151, align 8
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %148, i64 1
  %154 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %147, i64 1
  %155 = add i64 %149, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !32

157:                                              ; preds = %146, %135
  %158 = phi %"class.spvtools::opt::analysis::Constant"** [ undef, %135 ], [ %154, %146 ]
  %159 = phi %"class.spvtools::opt::analysis::Constant"** [ %136, %135 ], [ %154, %146 ]
  %160 = phi %"class.spvtools::opt::analysis::Constant"** [ %137, %135 ], [ %153, %146 ]
  %161 = icmp ult i64 %141, 56
  br i1 %161, label %206, label %162

162:                                              ; preds = %157, %162
  %163 = phi %"class.spvtools::opt::analysis::Constant"** [ %204, %162 ], [ %159, %157 ]
  %164 = phi %"class.spvtools::opt::analysis::Constant"** [ %203, %162 ], [ %160, %157 ]
  %165 = bitcast %"class.spvtools::opt::analysis::Constant"** %163 to i64*
  %166 = bitcast %"class.spvtools::opt::analysis::Constant"** %164 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %165, align 8
  %168 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %164, i64 1
  %169 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %163, i64 1
  %170 = bitcast %"class.spvtools::opt::analysis::Constant"** %169 to i64*
  %171 = bitcast %"class.spvtools::opt::analysis::Constant"** %168 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %170, align 8
  %173 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %164, i64 2
  %174 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %163, i64 2
  %175 = bitcast %"class.spvtools::opt::analysis::Constant"** %174 to i64*
  %176 = bitcast %"class.spvtools::opt::analysis::Constant"** %173 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %175, align 8
  %178 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %164, i64 3
  %179 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %163, i64 3
  %180 = bitcast %"class.spvtools::opt::analysis::Constant"** %179 to i64*
  %181 = bitcast %"class.spvtools::opt::analysis::Constant"** %178 to i64*
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %180, align 8
  %183 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %164, i64 4
  %184 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %163, i64 4
  %185 = bitcast %"class.spvtools::opt::analysis::Constant"** %184 to i64*
  %186 = bitcast %"class.spvtools::opt::analysis::Constant"** %183 to i64*
  %187 = load i64, i64* %186, align 8
  store i64 %187, i64* %185, align 8
  %188 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %164, i64 5
  %189 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %163, i64 5
  %190 = bitcast %"class.spvtools::opt::analysis::Constant"** %189 to i64*
  %191 = bitcast %"class.spvtools::opt::analysis::Constant"** %188 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %190, align 8
  %193 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %164, i64 6
  %194 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %163, i64 6
  %195 = bitcast %"class.spvtools::opt::analysis::Constant"** %194 to i64*
  %196 = bitcast %"class.spvtools::opt::analysis::Constant"** %193 to i64*
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %164, i64 7
  %199 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %163, i64 7
  %200 = bitcast %"class.spvtools::opt::analysis::Constant"** %199 to i64*
  %201 = bitcast %"class.spvtools::opt::analysis::Constant"** %198 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  %203 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %164, i64 8
  %204 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %163, i64 8
  %205 = icmp eq %"class.spvtools::opt::analysis::Constant"** %203, %3
  br i1 %205, label %206, label %162, !llvm.loop !33

206:                                              ; preds = %157, %162, %133
  %207 = phi %"class.spvtools::opt::analysis::Constant"** [ %56, %133 ], [ %158, %157 ], [ %204, %162 ]
  %208 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %207 to i64
  br label %209

209:                                              ; preds = %206, %29
  %210 = phi i64 [ %20, %29 ], [ %208, %206 ]
  store i64 %210, i64* %24, align 8
  %211 = icmp sgt i64 %26, 0
  br i1 %211, label %212, label %772

212:                                              ; preds = %209
  %213 = inttoptr i64 %210 to %"class.spvtools::opt::analysis::Constant"**
  br label %214

214:                                              ; preds = %212, %25
  %215 = phi i64 [ %210, %212 ], [ %20, %25 ]
  %216 = phi %"class.spvtools::opt::analysis::Constant"** [ %213, %212 ], [ %19, %25 ]
  %217 = phi %"class.spvtools::opt::analysis::Constant"** [ %30, %212 ], [ %3, %25 ]
  %218 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %12
  %219 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %218 to i64
  %220 = sub i64 %215, %219
  %221 = ashr exact i64 %220, 3
  %222 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %221
  %223 = icmp ult %"class.spvtools::opt::analysis::Constant"** %222, %19
  br i1 %223, label %224, label %337

224:                                              ; preds = %214
  %225 = sub nsw i64 0, %221
  %226 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %19, i64 %225
  %227 = bitcast %"class.spvtools::opt::analysis::Constant"** %226 to i8*
  %228 = xor i64 %7, -1
  %229 = getelementptr i8, i8* %227, i64 %228
  %230 = ptrtoint i8* %229 to i64
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = icmp ult i64 %232, 4
  br i1 %233, label %234, label %237

234:                                              ; preds = %332, %237, %224
  %235 = phi %"class.spvtools::opt::analysis::Constant"** [ %216, %237 ], [ %216, %224 ], [ %255, %332 ]
  %236 = phi %"class.spvtools::opt::analysis::Constant"** [ %222, %237 ], [ %222, %224 ], [ %256, %332 ]
  br label %345

237:                                              ; preds = %224
  %238 = sub nsw i64 0, %221
  %239 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %19, i64 %238
  %240 = bitcast %"class.spvtools::opt::analysis::Constant"** %239 to i8*
  %241 = xor i64 %7, -1
  %242 = getelementptr i8, i8* %240, i64 %241
  %243 = ptrtoint i8* %242 to i64
  %244 = lshr i64 %243, 3
  %245 = add nuw nsw i64 %244, 1
  %246 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %216, i64 %245
  %247 = add nsw i64 %221, %244
  %248 = add nsw i64 %247, 1
  %249 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %248
  %250 = icmp ult %"class.spvtools::opt::analysis::Constant"** %216, %249
  %251 = icmp ult %"class.spvtools::opt::analysis::Constant"** %222, %246
  %252 = and i1 %250, %251
  br i1 %252, label %234, label %253

253:                                              ; preds = %237
  %254 = and i64 %232, 4611686018427387900
  %255 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %216, i64 %254
  %256 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %222, i64 %254
  %257 = add nsw i64 %254, -4
  %258 = lshr exact i64 %257, 2
  %259 = add nuw nsw i64 %258, 1
  %260 = and i64 %259, 3
  %261 = icmp ult i64 %257, 12
  br i1 %261, label %313, label %262

262:                                              ; preds = %253
  %263 = sub nsw i64 %259, %260
  br label %264

264:                                              ; preds = %264, %262
  %265 = phi i64 [ 0, %262 ], [ %310, %264 ]
  %266 = phi i64 [ %263, %262 ], [ %311, %264 ]
  %267 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %216, i64 %265
  %268 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %222, i64 %265
  %269 = bitcast %"class.spvtools::opt::analysis::Constant"** %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !34
  %271 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %268, i64 2
  %272 = bitcast %"class.spvtools::opt::analysis::Constant"** %271 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !34
  %274 = bitcast %"class.spvtools::opt::analysis::Constant"** %267 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %274, align 8, !alias.scope !37, !noalias !34
  %275 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %267, i64 2
  %276 = bitcast %"class.spvtools::opt::analysis::Constant"** %275 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %276, align 8, !alias.scope !37, !noalias !34
  %277 = or i64 %265, 4
  %278 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %216, i64 %277
  %279 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %222, i64 %277
  %280 = bitcast %"class.spvtools::opt::analysis::Constant"** %279 to <2 x i64>*
  %281 = load <2 x i64>, <2 x i64>* %280, align 8, !alias.scope !34
  %282 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %279, i64 2
  %283 = bitcast %"class.spvtools::opt::analysis::Constant"** %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !34
  %285 = bitcast %"class.spvtools::opt::analysis::Constant"** %278 to <2 x i64>*
  store <2 x i64> %281, <2 x i64>* %285, align 8, !alias.scope !37, !noalias !34
  %286 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %278, i64 2
  %287 = bitcast %"class.spvtools::opt::analysis::Constant"** %286 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %287, align 8, !alias.scope !37, !noalias !34
  %288 = or i64 %265, 8
  %289 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %216, i64 %288
  %290 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %222, i64 %288
  %291 = bitcast %"class.spvtools::opt::analysis::Constant"** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !34
  %293 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %290, i64 2
  %294 = bitcast %"class.spvtools::opt::analysis::Constant"** %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !34
  %296 = bitcast %"class.spvtools::opt::analysis::Constant"** %289 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 8, !alias.scope !37, !noalias !34
  %297 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %289, i64 2
  %298 = bitcast %"class.spvtools::opt::analysis::Constant"** %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 8, !alias.scope !37, !noalias !34
  %299 = or i64 %265, 12
  %300 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %216, i64 %299
  %301 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %222, i64 %299
  %302 = bitcast %"class.spvtools::opt::analysis::Constant"** %301 to <2 x i64>*
  %303 = load <2 x i64>, <2 x i64>* %302, align 8, !alias.scope !34
  %304 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %301, i64 2
  %305 = bitcast %"class.spvtools::opt::analysis::Constant"** %304 to <2 x i64>*
  %306 = load <2 x i64>, <2 x i64>* %305, align 8, !alias.scope !34
  %307 = bitcast %"class.spvtools::opt::analysis::Constant"** %300 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %307, align 8, !alias.scope !37, !noalias !34
  %308 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %300, i64 2
  %309 = bitcast %"class.spvtools::opt::analysis::Constant"** %308 to <2 x i64>*
  store <2 x i64> %306, <2 x i64>* %309, align 8, !alias.scope !37, !noalias !34
  %310 = add i64 %265, 16
  %311 = add i64 %266, -4
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %264, !llvm.loop !39

313:                                              ; preds = %264, %253
  %314 = phi i64 [ 0, %253 ], [ %310, %264 ]
  %315 = icmp eq i64 %260, 0
  br i1 %315, label %332, label %316

316:                                              ; preds = %313, %316
  %317 = phi i64 [ %329, %316 ], [ %314, %313 ]
  %318 = phi i64 [ %330, %316 ], [ %260, %313 ]
  %319 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %216, i64 %317
  %320 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %222, i64 %317
  %321 = bitcast %"class.spvtools::opt::analysis::Constant"** %320 to <2 x i64>*
  %322 = load <2 x i64>, <2 x i64>* %321, align 8, !alias.scope !34
  %323 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %320, i64 2
  %324 = bitcast %"class.spvtools::opt::analysis::Constant"** %323 to <2 x i64>*
  %325 = load <2 x i64>, <2 x i64>* %324, align 8, !alias.scope !34
  %326 = bitcast %"class.spvtools::opt::analysis::Constant"** %319 to <2 x i64>*
  store <2 x i64> %322, <2 x i64>* %326, align 8, !alias.scope !37, !noalias !34
  %327 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %319, i64 2
  %328 = bitcast %"class.spvtools::opt::analysis::Constant"** %327 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %328, align 8, !alias.scope !37, !noalias !34
  %329 = add i64 %317, 4
  %330 = add i64 %318, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %316, !llvm.loop !40

332:                                              ; preds = %316, %313
  %333 = icmp eq i64 %232, %254
  br i1 %333, label %334, label %234

334:                                              ; preds = %345, %332
  %335 = phi %"class.spvtools::opt::analysis::Constant"** [ %255, %332 ], [ %352, %345 ]
  %336 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %335 to i64
  br label %337

337:                                              ; preds = %334, %214
  %338 = phi i64 [ %336, %334 ], [ %215, %214 ]
  store i64 %338, i64* %24, align 8
  %339 = icmp eq i64 %220, 0
  br i1 %339, label %354, label %340

340:                                              ; preds = %337
  %341 = sub nsw i64 0, %221
  %342 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %216, i64 %341
  %343 = bitcast %"class.spvtools::opt::analysis::Constant"** %342 to i8*
  %344 = bitcast %"class.spvtools::opt::analysis::Constant"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %343, i8* align 8 %344, i64 %220, i1 false) #11
  br label %354

345:                                              ; preds = %234, %345
  %346 = phi %"class.spvtools::opt::analysis::Constant"** [ %352, %345 ], [ %235, %234 ]
  %347 = phi %"class.spvtools::opt::analysis::Constant"** [ %351, %345 ], [ %236, %234 ]
  %348 = bitcast %"class.spvtools::opt::analysis::Constant"** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %"class.spvtools::opt::analysis::Constant"** %346 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %347, i64 1
  %352 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %346, i64 1
  %353 = icmp ult %"class.spvtools::opt::analysis::Constant"** %351, %19
  br i1 %353, label %345, label %334, !llvm.loop !41

354:                                              ; preds = %337, %340
  %355 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %217 to i64
  %356 = sub i64 %355, %8
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %772, label %358

358:                                              ; preds = %354
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %356, i1 false) #11
  br label %772

359:                                              ; preds = %14
  %360 = bitcast %"class.std::__1::vector.802"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %20, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %12
  %365 = icmp ugt i64 %364, 2305843009213693951
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.802"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #13
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %17, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 1152921504606846975
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %7, %361
  %374 = ashr exact i64 %373, 3
  br label %385

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %7, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %391, label %382

382:                                              ; preds = %375
  %383 = icmp ugt i64 %378, 2305843009213693951
  br i1 %383, label %384, label %385

384:                                              ; preds = %382
  tail call void @abort() #13
  unreachable

385:                                              ; preds = %372, %382
  %386 = phi i64 [ 2305843009213693951, %372 ], [ %378, %382 ]
  %387 = phi i64 [ %374, %372 ], [ %380, %382 ]
  %388 = shl i64 %386, 3
  %389 = tail call i8* @_Znwm(i64 %388) #12
  %390 = bitcast i8* %389 to %"class.spvtools::opt::analysis::Constant"**
  br label %391

391:                                              ; preds = %385, %375
  %392 = phi i64 [ %387, %385 ], [ %380, %375 ]
  %393 = phi i64 [ %386, %385 ], [ 0, %375 ]
  %394 = phi %"class.spvtools::opt::analysis::Constant"** [ %390, %385 ], [ null, %375 ]
  %395 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %394, i64 %392
  %396 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %394, i64 %393
  %397 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %396 to i64
  %398 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %395, i64 %12
  %399 = add i64 %11, -8
  %400 = lshr i64 %399, 3
  %401 = add nuw nsw i64 %400, 1
  %402 = icmp ult i64 %401, 4
  br i1 %402, label %496, label %403

403:                                              ; preds = %391
  %404 = add i64 %11, -8
  %405 = lshr i64 %404, 3
  %406 = add nsw i64 %392, %405
  %407 = add nsw i64 %406, 1
  %408 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %394, i64 %407
  %409 = add nuw nsw i64 %405, 1
  %410 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %2, i64 %409
  %411 = icmp ult %"class.spvtools::opt::analysis::Constant"** %395, %410
  %412 = icmp ugt %"class.spvtools::opt::analysis::Constant"** %408, %2
  %413 = and i1 %411, %412
  br i1 %413, label %496, label %414

414:                                              ; preds = %403
  %415 = and i64 %401, 4611686018427387900
  %416 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %395, i64 %415
  %417 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %395, i64 %415
  %418 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %2, i64 %415
  %419 = add nsw i64 %415, -4
  %420 = lshr exact i64 %419, 2
  %421 = add nuw nsw i64 %420, 1
  %422 = and i64 %421, 3
  %423 = icmp ult i64 %419, 12
  br i1 %423, label %475, label %424

424:                                              ; preds = %414
  %425 = sub nsw i64 %421, %422
  br label %426

426:                                              ; preds = %426, %424
  %427 = phi i64 [ 0, %424 ], [ %472, %426 ]
  %428 = phi i64 [ %425, %424 ], [ %473, %426 ]
  %429 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %395, i64 %427
  %430 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %2, i64 %427
  %431 = bitcast %"class.spvtools::opt::analysis::Constant"** %430 to <2 x i64>*
  %432 = load <2 x i64>, <2 x i64>* %431, align 8, !alias.scope !42
  %433 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %430, i64 2
  %434 = bitcast %"class.spvtools::opt::analysis::Constant"** %433 to <2 x i64>*
  %435 = load <2 x i64>, <2 x i64>* %434, align 8, !alias.scope !42
  %436 = bitcast %"class.spvtools::opt::analysis::Constant"** %429 to <2 x i64>*
  store <2 x i64> %432, <2 x i64>* %436, align 8, !alias.scope !45, !noalias !42
  %437 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %429, i64 2
  %438 = bitcast %"class.spvtools::opt::analysis::Constant"** %437 to <2 x i64>*
  store <2 x i64> %435, <2 x i64>* %438, align 8, !alias.scope !45, !noalias !42
  %439 = or i64 %427, 4
  %440 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %395, i64 %439
  %441 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %2, i64 %439
  %442 = bitcast %"class.spvtools::opt::analysis::Constant"** %441 to <2 x i64>*
  %443 = load <2 x i64>, <2 x i64>* %442, align 8, !alias.scope !42
  %444 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %441, i64 2
  %445 = bitcast %"class.spvtools::opt::analysis::Constant"** %444 to <2 x i64>*
  %446 = load <2 x i64>, <2 x i64>* %445, align 8, !alias.scope !42
  %447 = bitcast %"class.spvtools::opt::analysis::Constant"** %440 to <2 x i64>*
  store <2 x i64> %443, <2 x i64>* %447, align 8, !alias.scope !45, !noalias !42
  %448 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %440, i64 2
  %449 = bitcast %"class.spvtools::opt::analysis::Constant"** %448 to <2 x i64>*
  store <2 x i64> %446, <2 x i64>* %449, align 8, !alias.scope !45, !noalias !42
  %450 = or i64 %427, 8
  %451 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %395, i64 %450
  %452 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %2, i64 %450
  %453 = bitcast %"class.spvtools::opt::analysis::Constant"** %452 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 8, !alias.scope !42
  %455 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %452, i64 2
  %456 = bitcast %"class.spvtools::opt::analysis::Constant"** %455 to <2 x i64>*
  %457 = load <2 x i64>, <2 x i64>* %456, align 8, !alias.scope !42
  %458 = bitcast %"class.spvtools::opt::analysis::Constant"** %451 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %458, align 8, !alias.scope !45, !noalias !42
  %459 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %451, i64 2
  %460 = bitcast %"class.spvtools::opt::analysis::Constant"** %459 to <2 x i64>*
  store <2 x i64> %457, <2 x i64>* %460, align 8, !alias.scope !45, !noalias !42
  %461 = or i64 %427, 12
  %462 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %395, i64 %461
  %463 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %2, i64 %461
  %464 = bitcast %"class.spvtools::opt::analysis::Constant"** %463 to <2 x i64>*
  %465 = load <2 x i64>, <2 x i64>* %464, align 8, !alias.scope !42
  %466 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %463, i64 2
  %467 = bitcast %"class.spvtools::opt::analysis::Constant"** %466 to <2 x i64>*
  %468 = load <2 x i64>, <2 x i64>* %467, align 8, !alias.scope !42
  %469 = bitcast %"class.spvtools::opt::analysis::Constant"** %462 to <2 x i64>*
  store <2 x i64> %465, <2 x i64>* %469, align 8, !alias.scope !45, !noalias !42
  %470 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %462, i64 2
  %471 = bitcast %"class.spvtools::opt::analysis::Constant"** %470 to <2 x i64>*
  store <2 x i64> %468, <2 x i64>* %471, align 8, !alias.scope !45, !noalias !42
  %472 = add i64 %427, 16
  %473 = add i64 %428, -4
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %426, !llvm.loop !47

475:                                              ; preds = %426, %414
  %476 = phi i64 [ 0, %414 ], [ %472, %426 ]
  %477 = icmp eq i64 %422, 0
  br i1 %477, label %494, label %478

478:                                              ; preds = %475, %478
  %479 = phi i64 [ %491, %478 ], [ %476, %475 ]
  %480 = phi i64 [ %492, %478 ], [ %422, %475 ]
  %481 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %395, i64 %479
  %482 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %2, i64 %479
  %483 = bitcast %"class.spvtools::opt::analysis::Constant"** %482 to <2 x i64>*
  %484 = load <2 x i64>, <2 x i64>* %483, align 8, !alias.scope !42
  %485 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %482, i64 2
  %486 = bitcast %"class.spvtools::opt::analysis::Constant"** %485 to <2 x i64>*
  %487 = load <2 x i64>, <2 x i64>* %486, align 8, !alias.scope !42
  %488 = bitcast %"class.spvtools::opt::analysis::Constant"** %481 to <2 x i64>*
  store <2 x i64> %484, <2 x i64>* %488, align 8, !alias.scope !45, !noalias !42
  %489 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %481, i64 2
  %490 = bitcast %"class.spvtools::opt::analysis::Constant"** %489 to <2 x i64>*
  store <2 x i64> %487, <2 x i64>* %490, align 8, !alias.scope !45, !noalias !42
  %491 = add i64 %479, 4
  %492 = add i64 %480, -1
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %478, !llvm.loop !48

494:                                              ; preds = %478, %475
  %495 = icmp eq i64 %401, %415
  br i1 %495, label %572, label %496

496:                                              ; preds = %494, %403, %391
  %497 = phi %"class.spvtools::opt::analysis::Constant"** [ %395, %403 ], [ %395, %391 ], [ %416, %494 ]
  %498 = phi %"class.spvtools::opt::analysis::Constant"** [ %395, %403 ], [ %395, %391 ], [ %417, %494 ]
  %499 = phi %"class.spvtools::opt::analysis::Constant"** [ %2, %403 ], [ %2, %391 ], [ %418, %494 ]
  %500 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %497 to i64
  %501 = add nsw i64 %392, %12
  %502 = add nsw i64 %501, -1
  %503 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %394, i64 %502
  %504 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %503 to i64
  %505 = sub i64 %504, %500
  %506 = lshr i64 %505, 3
  %507 = add nuw nsw i64 %506, 1
  %508 = and i64 %507, 7
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %522, label %510

510:                                              ; preds = %496, %510
  %511 = phi %"class.spvtools::opt::analysis::Constant"** [ %518, %510 ], [ %497, %496 ]
  %512 = phi %"class.spvtools::opt::analysis::Constant"** [ %518, %510 ], [ %498, %496 ]
  %513 = phi %"class.spvtools::opt::analysis::Constant"** [ %519, %510 ], [ %499, %496 ]
  %514 = phi i64 [ %520, %510 ], [ %508, %496 ]
  %515 = bitcast %"class.spvtools::opt::analysis::Constant"** %513 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = bitcast %"class.spvtools::opt::analysis::Constant"** %512 to i64*
  store i64 %516, i64* %517, align 8
  %518 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %511, i64 1
  %519 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %513, i64 1
  %520 = add i64 %514, -1
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %522, label %510, !llvm.loop !49

522:                                              ; preds = %510, %496
  %523 = phi %"class.spvtools::opt::analysis::Constant"** [ %497, %496 ], [ %518, %510 ]
  %524 = phi %"class.spvtools::opt::analysis::Constant"** [ %498, %496 ], [ %518, %510 ]
  %525 = phi %"class.spvtools::opt::analysis::Constant"** [ %499, %496 ], [ %519, %510 ]
  %526 = icmp ult i64 %505, 56
  br i1 %526, label %572, label %527

527:                                              ; preds = %522, %527
  %528 = phi %"class.spvtools::opt::analysis::Constant"** [ %569, %527 ], [ %523, %522 ]
  %529 = phi %"class.spvtools::opt::analysis::Constant"** [ %569, %527 ], [ %524, %522 ]
  %530 = phi %"class.spvtools::opt::analysis::Constant"** [ %570, %527 ], [ %525, %522 ]
  %531 = bitcast %"class.spvtools::opt::analysis::Constant"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"class.spvtools::opt::analysis::Constant"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %528, i64 1
  %535 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %530, i64 1
  %536 = bitcast %"class.spvtools::opt::analysis::Constant"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"class.spvtools::opt::analysis::Constant"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %528, i64 2
  %540 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %530, i64 2
  %541 = bitcast %"class.spvtools::opt::analysis::Constant"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"class.spvtools::opt::analysis::Constant"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %528, i64 3
  %545 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %530, i64 3
  %546 = bitcast %"class.spvtools::opt::analysis::Constant"** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"class.spvtools::opt::analysis::Constant"** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %528, i64 4
  %550 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %530, i64 4
  %551 = bitcast %"class.spvtools::opt::analysis::Constant"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"class.spvtools::opt::analysis::Constant"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %528, i64 5
  %555 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %530, i64 5
  %556 = bitcast %"class.spvtools::opt::analysis::Constant"** %555 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = bitcast %"class.spvtools::opt::analysis::Constant"** %554 to i64*
  store i64 %557, i64* %558, align 8
  %559 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %528, i64 6
  %560 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %530, i64 6
  %561 = bitcast %"class.spvtools::opt::analysis::Constant"** %560 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = bitcast %"class.spvtools::opt::analysis::Constant"** %559 to i64*
  store i64 %562, i64* %563, align 8
  %564 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %528, i64 7
  %565 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %530, i64 7
  %566 = bitcast %"class.spvtools::opt::analysis::Constant"** %565 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = bitcast %"class.spvtools::opt::analysis::Constant"** %564 to i64*
  store i64 %567, i64* %568, align 8
  %569 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %528, i64 8
  %570 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %530, i64 8
  %571 = icmp eq %"class.spvtools::opt::analysis::Constant"** %398, %569
  br i1 %571, label %572, label %527, !llvm.loop !50

572:                                              ; preds = %522, %527, %494
  %573 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %9, align 8
  %574 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %573 to i64
  %575 = sub i64 %7, %574
  %576 = ashr exact i64 %575, 3
  %577 = sub nsw i64 0, %576
  %578 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %395, i64 %577
  %579 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %578 to i64
  %580 = icmp sgt i64 %575, 0
  br i1 %580, label %581, label %584

581:                                              ; preds = %572
  %582 = bitcast %"class.spvtools::opt::analysis::Constant"** %578 to i8*
  %583 = bitcast %"class.spvtools::opt::analysis::Constant"** %573 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %582, i8* align 8 %583, i64 %575, i1 false) #11
  br label %584

584:                                              ; preds = %581, %572
  %585 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %18, align 8
  %586 = icmp eq %"class.spvtools::opt::analysis::Constant"** %585, %1
  br i1 %586, label %765, label %587

587:                                              ; preds = %584
  %588 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %585, i64 -1
  %589 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %588 to i64
  %590 = sub i64 %589, %7
  %591 = lshr i64 %590, 3
  %592 = add nuw nsw i64 %591, 1
  %593 = icmp ult i64 %592, 4
  br i1 %593, label %690, label %594

594:                                              ; preds = %587
  %595 = add nsw i64 %392, %12
  %596 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %585, i64 -1
  %597 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %596 to i64
  %598 = sub i64 %597, %7
  %599 = lshr i64 %598, 3
  %600 = add nsw i64 %595, %599
  %601 = add nsw i64 %600, 1
  %602 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %394, i64 %601
  %603 = add nuw nsw i64 %599, 1
  %604 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %603
  %605 = icmp ult %"class.spvtools::opt::analysis::Constant"** %398, %604
  %606 = icmp ugt %"class.spvtools::opt::analysis::Constant"** %602, %1
  %607 = and i1 %605, %606
  br i1 %607, label %690, label %608

608:                                              ; preds = %594
  %609 = and i64 %592, 4611686018427387900
  %610 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %398, i64 %609
  %611 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %398, i64 %609
  %612 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %609
  %613 = add nsw i64 %609, -4
  %614 = lshr exact i64 %613, 2
  %615 = add nuw nsw i64 %614, 1
  %616 = and i64 %615, 3
  %617 = icmp ult i64 %613, 12
  br i1 %617, label %669, label %618

618:                                              ; preds = %608
  %619 = sub nsw i64 %615, %616
  br label %620

620:                                              ; preds = %620, %618
  %621 = phi i64 [ 0, %618 ], [ %666, %620 ]
  %622 = phi i64 [ %619, %618 ], [ %667, %620 ]
  %623 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %398, i64 %621
  %624 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %621
  %625 = bitcast %"class.spvtools::opt::analysis::Constant"** %624 to <2 x i64>*
  %626 = load <2 x i64>, <2 x i64>* %625, align 8, !alias.scope !51
  %627 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %624, i64 2
  %628 = bitcast %"class.spvtools::opt::analysis::Constant"** %627 to <2 x i64>*
  %629 = load <2 x i64>, <2 x i64>* %628, align 8, !alias.scope !51
  %630 = bitcast %"class.spvtools::opt::analysis::Constant"** %623 to <2 x i64>*
  store <2 x i64> %626, <2 x i64>* %630, align 8, !alias.scope !54, !noalias !51
  %631 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %623, i64 2
  %632 = bitcast %"class.spvtools::opt::analysis::Constant"** %631 to <2 x i64>*
  store <2 x i64> %629, <2 x i64>* %632, align 8, !alias.scope !54, !noalias !51
  %633 = or i64 %621, 4
  %634 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %398, i64 %633
  %635 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %633
  %636 = bitcast %"class.spvtools::opt::analysis::Constant"** %635 to <2 x i64>*
  %637 = load <2 x i64>, <2 x i64>* %636, align 8, !alias.scope !51
  %638 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %635, i64 2
  %639 = bitcast %"class.spvtools::opt::analysis::Constant"** %638 to <2 x i64>*
  %640 = load <2 x i64>, <2 x i64>* %639, align 8, !alias.scope !51
  %641 = bitcast %"class.spvtools::opt::analysis::Constant"** %634 to <2 x i64>*
  store <2 x i64> %637, <2 x i64>* %641, align 8, !alias.scope !54, !noalias !51
  %642 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %634, i64 2
  %643 = bitcast %"class.spvtools::opt::analysis::Constant"** %642 to <2 x i64>*
  store <2 x i64> %640, <2 x i64>* %643, align 8, !alias.scope !54, !noalias !51
  %644 = or i64 %621, 8
  %645 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %398, i64 %644
  %646 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %644
  %647 = bitcast %"class.spvtools::opt::analysis::Constant"** %646 to <2 x i64>*
  %648 = load <2 x i64>, <2 x i64>* %647, align 8, !alias.scope !51
  %649 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %646, i64 2
  %650 = bitcast %"class.spvtools::opt::analysis::Constant"** %649 to <2 x i64>*
  %651 = load <2 x i64>, <2 x i64>* %650, align 8, !alias.scope !51
  %652 = bitcast %"class.spvtools::opt::analysis::Constant"** %645 to <2 x i64>*
  store <2 x i64> %648, <2 x i64>* %652, align 8, !alias.scope !54, !noalias !51
  %653 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %645, i64 2
  %654 = bitcast %"class.spvtools::opt::analysis::Constant"** %653 to <2 x i64>*
  store <2 x i64> %651, <2 x i64>* %654, align 8, !alias.scope !54, !noalias !51
  %655 = or i64 %621, 12
  %656 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %398, i64 %655
  %657 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %655
  %658 = bitcast %"class.spvtools::opt::analysis::Constant"** %657 to <2 x i64>*
  %659 = load <2 x i64>, <2 x i64>* %658, align 8, !alias.scope !51
  %660 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %657, i64 2
  %661 = bitcast %"class.spvtools::opt::analysis::Constant"** %660 to <2 x i64>*
  %662 = load <2 x i64>, <2 x i64>* %661, align 8, !alias.scope !51
  %663 = bitcast %"class.spvtools::opt::analysis::Constant"** %656 to <2 x i64>*
  store <2 x i64> %659, <2 x i64>* %663, align 8, !alias.scope !54, !noalias !51
  %664 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %656, i64 2
  %665 = bitcast %"class.spvtools::opt::analysis::Constant"** %664 to <2 x i64>*
  store <2 x i64> %662, <2 x i64>* %665, align 8, !alias.scope !54, !noalias !51
  %666 = add i64 %621, 16
  %667 = add i64 %622, -4
  %668 = icmp eq i64 %667, 0
  br i1 %668, label %669, label %620, !llvm.loop !56

669:                                              ; preds = %620, %608
  %670 = phi i64 [ 0, %608 ], [ %666, %620 ]
  %671 = icmp eq i64 %616, 0
  br i1 %671, label %688, label %672

672:                                              ; preds = %669, %672
  %673 = phi i64 [ %685, %672 ], [ %670, %669 ]
  %674 = phi i64 [ %686, %672 ], [ %616, %669 ]
  %675 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %398, i64 %673
  %676 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %673
  %677 = bitcast %"class.spvtools::opt::analysis::Constant"** %676 to <2 x i64>*
  %678 = load <2 x i64>, <2 x i64>* %677, align 8, !alias.scope !51
  %679 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %676, i64 2
  %680 = bitcast %"class.spvtools::opt::analysis::Constant"** %679 to <2 x i64>*
  %681 = load <2 x i64>, <2 x i64>* %680, align 8, !alias.scope !51
  %682 = bitcast %"class.spvtools::opt::analysis::Constant"** %675 to <2 x i64>*
  store <2 x i64> %678, <2 x i64>* %682, align 8, !alias.scope !54, !noalias !51
  %683 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %675, i64 2
  %684 = bitcast %"class.spvtools::opt::analysis::Constant"** %683 to <2 x i64>*
  store <2 x i64> %681, <2 x i64>* %684, align 8, !alias.scope !54, !noalias !51
  %685 = add i64 %673, 4
  %686 = add i64 %674, -1
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %688, label %672, !llvm.loop !57

688:                                              ; preds = %672, %669
  %689 = icmp eq i64 %592, %609
  br i1 %689, label %765, label %690

690:                                              ; preds = %688, %594, %587
  %691 = phi %"class.spvtools::opt::analysis::Constant"** [ %398, %594 ], [ %398, %587 ], [ %610, %688 ]
  %692 = phi %"class.spvtools::opt::analysis::Constant"** [ %398, %594 ], [ %398, %587 ], [ %611, %688 ]
  %693 = phi %"class.spvtools::opt::analysis::Constant"** [ %1, %594 ], [ %1, %587 ], [ %612, %688 ]
  %694 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %693 to i64
  %695 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %585, i64 -1
  %696 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %695 to i64
  %697 = sub i64 %696, %694
  %698 = lshr i64 %697, 3
  %699 = add nuw nsw i64 %698, 1
  %700 = and i64 %699, 7
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %714, label %702

702:                                              ; preds = %690, %702
  %703 = phi %"class.spvtools::opt::analysis::Constant"** [ %711, %702 ], [ %691, %690 ]
  %704 = phi %"class.spvtools::opt::analysis::Constant"** [ %711, %702 ], [ %692, %690 ]
  %705 = phi %"class.spvtools::opt::analysis::Constant"** [ %710, %702 ], [ %693, %690 ]
  %706 = phi i64 [ %712, %702 ], [ %700, %690 ]
  %707 = bitcast %"class.spvtools::opt::analysis::Constant"** %704 to i64*
  %708 = bitcast %"class.spvtools::opt::analysis::Constant"** %705 to i64*
  %709 = load i64, i64* %708, align 8
  store i64 %709, i64* %707, align 8
  %710 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %705, i64 1
  %711 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %703, i64 1
  %712 = add i64 %706, -1
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %714, label %702, !llvm.loop !58

714:                                              ; preds = %702, %690
  %715 = phi %"class.spvtools::opt::analysis::Constant"** [ undef, %690 ], [ %711, %702 ]
  %716 = phi %"class.spvtools::opt::analysis::Constant"** [ %691, %690 ], [ %711, %702 ]
  %717 = phi %"class.spvtools::opt::analysis::Constant"** [ %692, %690 ], [ %711, %702 ]
  %718 = phi %"class.spvtools::opt::analysis::Constant"** [ %693, %690 ], [ %710, %702 ]
  %719 = icmp ult i64 %697, 56
  br i1 %719, label %765, label %720

720:                                              ; preds = %714, %720
  %721 = phi %"class.spvtools::opt::analysis::Constant"** [ %763, %720 ], [ %716, %714 ]
  %722 = phi %"class.spvtools::opt::analysis::Constant"** [ %763, %720 ], [ %717, %714 ]
  %723 = phi %"class.spvtools::opt::analysis::Constant"** [ %762, %720 ], [ %718, %714 ]
  %724 = bitcast %"class.spvtools::opt::analysis::Constant"** %722 to i64*
  %725 = bitcast %"class.spvtools::opt::analysis::Constant"** %723 to i64*
  %726 = load i64, i64* %725, align 8
  store i64 %726, i64* %724, align 8
  %727 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %723, i64 1
  %728 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 1
  %729 = bitcast %"class.spvtools::opt::analysis::Constant"** %728 to i64*
  %730 = bitcast %"class.spvtools::opt::analysis::Constant"** %727 to i64*
  %731 = load i64, i64* %730, align 8
  store i64 %731, i64* %729, align 8
  %732 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %723, i64 2
  %733 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 2
  %734 = bitcast %"class.spvtools::opt::analysis::Constant"** %733 to i64*
  %735 = bitcast %"class.spvtools::opt::analysis::Constant"** %732 to i64*
  %736 = load i64, i64* %735, align 8
  store i64 %736, i64* %734, align 8
  %737 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %723, i64 3
  %738 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 3
  %739 = bitcast %"class.spvtools::opt::analysis::Constant"** %738 to i64*
  %740 = bitcast %"class.spvtools::opt::analysis::Constant"** %737 to i64*
  %741 = load i64, i64* %740, align 8
  store i64 %741, i64* %739, align 8
  %742 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %723, i64 4
  %743 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 4
  %744 = bitcast %"class.spvtools::opt::analysis::Constant"** %743 to i64*
  %745 = bitcast %"class.spvtools::opt::analysis::Constant"** %742 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %744, align 8
  %747 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %723, i64 5
  %748 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 5
  %749 = bitcast %"class.spvtools::opt::analysis::Constant"** %748 to i64*
  %750 = bitcast %"class.spvtools::opt::analysis::Constant"** %747 to i64*
  %751 = load i64, i64* %750, align 8
  store i64 %751, i64* %749, align 8
  %752 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %723, i64 6
  %753 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 6
  %754 = bitcast %"class.spvtools::opt::analysis::Constant"** %753 to i64*
  %755 = bitcast %"class.spvtools::opt::analysis::Constant"** %752 to i64*
  %756 = load i64, i64* %755, align 8
  store i64 %756, i64* %754, align 8
  %757 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %723, i64 7
  %758 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 7
  %759 = bitcast %"class.spvtools::opt::analysis::Constant"** %758 to i64*
  %760 = bitcast %"class.spvtools::opt::analysis::Constant"** %757 to i64*
  %761 = load i64, i64* %760, align 8
  store i64 %761, i64* %759, align 8
  %762 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %723, i64 8
  %763 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 8
  %764 = icmp eq %"class.spvtools::opt::analysis::Constant"** %762, %585
  br i1 %764, label %765, label %720, !llvm.loop !59

765:                                              ; preds = %714, %720, %688, %584
  %766 = phi %"class.spvtools::opt::analysis::Constant"** [ %398, %584 ], [ %610, %688 ], [ %715, %714 ], [ %763, %720 ]
  %767 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %766 to i64
  %768 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %9, align 8
  store i64 %579, i64* %360, align 8
  store i64 %767, i64* %24, align 8
  store i64 %397, i64* %16, align 8
  %769 = icmp eq %"class.spvtools::opt::analysis::Constant"** %768, null
  br i1 %769, label %772, label %770

770:                                              ; preds = %765
  %771 = bitcast %"class.spvtools::opt::analysis::Constant"** %768 to i8*
  tail call void @_ZdlPv(i8* %771) #12
  br label %772

772:                                              ; preds = %770, %765, %209, %354, %358, %4
  %773 = phi %"class.spvtools::opt::analysis::Constant"** [ %1, %4 ], [ %1, %358 ], [ %1, %354 ], [ %1, %209 ], [ %395, %765 ], [ %395, %770 ]
  ret %"class.spvtools::opt::analysis::Constant"** %773
}

declare %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.3"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Constant"** @_ZNSt3__16vectorIPKN8spvtools3opt8analysis8ConstantENS_9allocatorIS6_EEE6insertENS_11__wrap_iterIPKS6_EEmRSB_(%"class.std::__1::vector.802"*, %"class.spvtools::opt::analysis::Constant"**, i64, %"class.spvtools::opt::analysis::Constant"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.spvtools::opt::analysis::Constant"** %3 to i8*
  %6 = bitcast %"class.spvtools::opt::analysis::Constant"** %1 to i8*
  %7 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %0, i64 0, i32 0, i32 0
  %9 = icmp eq i64 %2, 0
  br i1 %9, label %770, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.spvtools::opt::analysis::Constant"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %0, i64 0, i32 0, i32 1
  %15 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %14, align 8
  %16 = bitcast %"class.spvtools::opt::analysis::Constant"** %15 to i8*
  %17 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %15 to i64
  %18 = sub i64 %13, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, %2
  br i1 %20, label %416, label %21

21:                                               ; preds = %10
  %22 = sub i64 %17, %7
  %23 = ashr exact i64 %22, 3
  %24 = icmp ult i64 %23, %2
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.spvtools::opt::analysis::Constant"*** %14 to i64*
  br label %158

27:                                               ; preds = %21
  %28 = sub i64 %2, %23
  %29 = bitcast %"class.spvtools::opt::analysis::Constant"*** %14 to i64*
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %15, i64 %28
  %31 = icmp eq i64 %28, 0
  br i1 %31, label %153, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.spvtools::opt::analysis::Constant"** %3 to i64*
  %34 = shl i64 %2, 3
  %35 = add i64 %34, -8
  %36 = sub i64 %35, %22
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %40, label %63

40:                                               ; preds = %122, %63, %32
  %41 = phi %"class.spvtools::opt::analysis::Constant"** [ %15, %63 ], [ %15, %32 ], [ %76, %122 ]
  %42 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %41 to i64
  %43 = xor i64 %23, -1
  %44 = add i64 %43, %2
  %45 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %15, i64 %44
  %46 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %45 to i64
  %47 = sub i64 %46, %42
  %48 = lshr i64 %47, 3
  %49 = add nuw nsw i64 %48, 1
  %50 = and i64 %49, 7
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %40, %52
  %53 = phi %"class.spvtools::opt::analysis::Constant"** [ %57, %52 ], [ %41, %40 ]
  %54 = phi i64 [ %58, %52 ], [ %50, %40 ]
  %55 = load i64, i64* %33, align 8
  %56 = bitcast %"class.spvtools::opt::analysis::Constant"** %53 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %53, i64 1
  %58 = add i64 %54, -1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %52, !llvm.loop !60

60:                                               ; preds = %52, %40
  %61 = phi %"class.spvtools::opt::analysis::Constant"** [ %41, %40 ], [ %57, %52 ]
  %62 = icmp ult i64 %47, 56
  br i1 %62, label %124, label %126

63:                                               ; preds = %32
  %64 = shl i64 %2, 3
  %65 = add i64 %64, -8
  %66 = sub i64 %65, %22
  %67 = lshr i64 %66, 3
  %68 = add nuw nsw i64 %67, 1
  %69 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %15, i64 %68
  %70 = getelementptr i8, i8* %5, i64 1
  %71 = icmp ugt i8* %70, %16
  %72 = icmp ugt %"class.spvtools::opt::analysis::Constant"** %69, %3
  %73 = and i1 %71, %72
  br i1 %73, label %40, label %74

74:                                               ; preds = %63
  %75 = and i64 %38, 4611686018427387900
  %76 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %15, i64 %75
  %77 = add nsw i64 %75, -4
  %78 = lshr exact i64 %77, 2
  %79 = add nuw nsw i64 %78, 1
  %80 = and i64 %79, 1
  %81 = icmp eq i64 %77, 0
  br i1 %81, label %109, label %82

82:                                               ; preds = %74
  %83 = sub nuw nsw i64 %79, %80
  %84 = load i64, i64* %33, align 8, !alias.scope !61
  %85 = insertelement <2 x i64> undef, i64 %84, i32 0
  %86 = shufflevector <2 x i64> %85, <2 x i64> undef, <2 x i32> zeroinitializer
  %87 = insertelement <2 x i64> undef, i64 %84, i32 0
  %88 = shufflevector <2 x i64> %87, <2 x i64> undef, <2 x i32> zeroinitializer
  %89 = load i64, i64* %33, align 8, !alias.scope !61
  %90 = insertelement <2 x i64> undef, i64 %89, i32 0
  %91 = shufflevector <2 x i64> %90, <2 x i64> undef, <2 x i32> zeroinitializer
  %92 = insertelement <2 x i64> undef, i64 %89, i32 0
  %93 = shufflevector <2 x i64> %92, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %94

94:                                               ; preds = %94, %82
  %95 = phi i64 [ 0, %82 ], [ %106, %94 ]
  %96 = phi i64 [ %83, %82 ], [ %107, %94 ]
  %97 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %15, i64 %95
  %98 = bitcast %"class.spvtools::opt::analysis::Constant"** %97 to <2 x i64>*
  store <2 x i64> %86, <2 x i64>* %98, align 8, !alias.scope !64, !noalias !61
  %99 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %97, i64 2
  %100 = bitcast %"class.spvtools::opt::analysis::Constant"** %99 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %100, align 8, !alias.scope !64, !noalias !61
  %101 = or i64 %95, 4
  %102 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %15, i64 %101
  %103 = bitcast %"class.spvtools::opt::analysis::Constant"** %102 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %103, align 8, !alias.scope !64, !noalias !61
  %104 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %102, i64 2
  %105 = bitcast %"class.spvtools::opt::analysis::Constant"** %104 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %105, align 8, !alias.scope !64, !noalias !61
  %106 = add i64 %95, 8
  %107 = add i64 %96, -2
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %94, !llvm.loop !66

109:                                              ; preds = %94, %74
  %110 = phi i64 [ 0, %74 ], [ %106, %94 ]
  %111 = icmp eq i64 %80, 0
  br i1 %111, label %122, label %112

112:                                              ; preds = %109
  %113 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %15, i64 %110
  %114 = load i64, i64* %33, align 8, !alias.scope !61
  %115 = insertelement <2 x i64> undef, i64 %114, i32 0
  %116 = shufflevector <2 x i64> %115, <2 x i64> undef, <2 x i32> zeroinitializer
  %117 = insertelement <2 x i64> undef, i64 %114, i32 0
  %118 = shufflevector <2 x i64> %117, <2 x i64> undef, <2 x i32> zeroinitializer
  %119 = bitcast %"class.spvtools::opt::analysis::Constant"** %113 to <2 x i64>*
  store <2 x i64> %116, <2 x i64>* %119, align 8, !alias.scope !64, !noalias !61
  %120 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %113, i64 2
  %121 = bitcast %"class.spvtools::opt::analysis::Constant"** %120 to <2 x i64>*
  store <2 x i64> %118, <2 x i64>* %121, align 8, !alias.scope !64, !noalias !61
  br label %122

122:                                              ; preds = %109, %112
  %123 = icmp eq i64 %38, %75
  br i1 %123, label %124, label %40

124:                                              ; preds = %60, %126, %122
  %125 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %30 to i64
  br label %153

126:                                              ; preds = %60, %126
  %127 = phi %"class.spvtools::opt::analysis::Constant"** [ %151, %126 ], [ %61, %60 ]
  %128 = load i64, i64* %33, align 8
  %129 = bitcast %"class.spvtools::opt::analysis::Constant"** %127 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %127, i64 1
  %131 = load i64, i64* %33, align 8
  %132 = bitcast %"class.spvtools::opt::analysis::Constant"** %130 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %127, i64 2
  %134 = load i64, i64* %33, align 8
  %135 = bitcast %"class.spvtools::opt::analysis::Constant"** %133 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %127, i64 3
  %137 = load i64, i64* %33, align 8
  %138 = bitcast %"class.spvtools::opt::analysis::Constant"** %136 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %127, i64 4
  %140 = load i64, i64* %33, align 8
  %141 = bitcast %"class.spvtools::opt::analysis::Constant"** %139 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %127, i64 5
  %143 = load i64, i64* %33, align 8
  %144 = bitcast %"class.spvtools::opt::analysis::Constant"** %142 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %127, i64 6
  %146 = load i64, i64* %33, align 8
  %147 = bitcast %"class.spvtools::opt::analysis::Constant"** %145 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %127, i64 7
  %149 = load i64, i64* %33, align 8
  %150 = bitcast %"class.spvtools::opt::analysis::Constant"** %148 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %127, i64 8
  %152 = icmp eq %"class.spvtools::opt::analysis::Constant"** %151, %30
  br i1 %152, label %124, label %126, !llvm.loop !67

153:                                              ; preds = %124, %27
  %154 = phi i64 [ %125, %124 ], [ %17, %27 ]
  store i64 %154, i64* %29, align 8
  %155 = icmp eq i64 %22, 0
  br i1 %155, label %770, label %156

156:                                              ; preds = %153
  %157 = inttoptr i64 %154 to %"class.spvtools::opt::analysis::Constant"**
  br label %158

158:                                              ; preds = %156, %25
  %159 = phi i64* [ %29, %156 ], [ %26, %25 ]
  %160 = phi i64 [ %154, %156 ], [ %17, %25 ]
  %161 = phi %"class.spvtools::opt::analysis::Constant"** [ %157, %156 ], [ %15, %25 ]
  %162 = phi i64 [ %23, %156 ], [ %2, %25 ]
  %163 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %2
  %164 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %163 to i64
  %165 = sub i64 %160, %164
  %166 = ashr exact i64 %165, 3
  %167 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %166
  %168 = icmp ult %"class.spvtools::opt::analysis::Constant"** %167, %15
  br i1 %168, label %169, label %282

169:                                              ; preds = %158
  %170 = sub nsw i64 0, %166
  %171 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %15, i64 %170
  %172 = bitcast %"class.spvtools::opt::analysis::Constant"** %171 to i8*
  %173 = xor i64 %7, -1
  %174 = getelementptr i8, i8* %172, i64 %173
  %175 = ptrtoint i8* %174 to i64
  %176 = lshr i64 %175, 3
  %177 = add nuw nsw i64 %176, 1
  %178 = icmp ult i64 %177, 4
  br i1 %178, label %179, label %182

179:                                              ; preds = %277, %182, %169
  %180 = phi %"class.spvtools::opt::analysis::Constant"** [ %161, %182 ], [ %161, %169 ], [ %200, %277 ]
  %181 = phi %"class.spvtools::opt::analysis::Constant"** [ %167, %182 ], [ %167, %169 ], [ %201, %277 ]
  br label %289

182:                                              ; preds = %169
  %183 = sub nsw i64 0, %166
  %184 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %15, i64 %183
  %185 = bitcast %"class.spvtools::opt::analysis::Constant"** %184 to i8*
  %186 = xor i64 %7, -1
  %187 = getelementptr i8, i8* %185, i64 %186
  %188 = ptrtoint i8* %187 to i64
  %189 = lshr i64 %188, 3
  %190 = add nuw nsw i64 %189, 1
  %191 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %161, i64 %190
  %192 = add nsw i64 %166, %189
  %193 = add nsw i64 %192, 1
  %194 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %193
  %195 = icmp ult %"class.spvtools::opt::analysis::Constant"** %161, %194
  %196 = icmp ult %"class.spvtools::opt::analysis::Constant"** %167, %191
  %197 = and i1 %195, %196
  br i1 %197, label %179, label %198

198:                                              ; preds = %182
  %199 = and i64 %177, 4611686018427387900
  %200 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %161, i64 %199
  %201 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %167, i64 %199
  %202 = add nsw i64 %199, -4
  %203 = lshr exact i64 %202, 2
  %204 = add nuw nsw i64 %203, 1
  %205 = and i64 %204, 3
  %206 = icmp ult i64 %202, 12
  br i1 %206, label %258, label %207

207:                                              ; preds = %198
  %208 = sub nsw i64 %204, %205
  br label %209

209:                                              ; preds = %209, %207
  %210 = phi i64 [ 0, %207 ], [ %255, %209 ]
  %211 = phi i64 [ %208, %207 ], [ %256, %209 ]
  %212 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %161, i64 %210
  %213 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %167, i64 %210
  %214 = bitcast %"class.spvtools::opt::analysis::Constant"** %213 to <2 x i64>*
  %215 = load <2 x i64>, <2 x i64>* %214, align 8, !alias.scope !68
  %216 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %213, i64 2
  %217 = bitcast %"class.spvtools::opt::analysis::Constant"** %216 to <2 x i64>*
  %218 = load <2 x i64>, <2 x i64>* %217, align 8, !alias.scope !68
  %219 = bitcast %"class.spvtools::opt::analysis::Constant"** %212 to <2 x i64>*
  store <2 x i64> %215, <2 x i64>* %219, align 8, !alias.scope !71, !noalias !68
  %220 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %212, i64 2
  %221 = bitcast %"class.spvtools::opt::analysis::Constant"** %220 to <2 x i64>*
  store <2 x i64> %218, <2 x i64>* %221, align 8, !alias.scope !71, !noalias !68
  %222 = or i64 %210, 4
  %223 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %161, i64 %222
  %224 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %167, i64 %222
  %225 = bitcast %"class.spvtools::opt::analysis::Constant"** %224 to <2 x i64>*
  %226 = load <2 x i64>, <2 x i64>* %225, align 8, !alias.scope !68
  %227 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %224, i64 2
  %228 = bitcast %"class.spvtools::opt::analysis::Constant"** %227 to <2 x i64>*
  %229 = load <2 x i64>, <2 x i64>* %228, align 8, !alias.scope !68
  %230 = bitcast %"class.spvtools::opt::analysis::Constant"** %223 to <2 x i64>*
  store <2 x i64> %226, <2 x i64>* %230, align 8, !alias.scope !71, !noalias !68
  %231 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %223, i64 2
  %232 = bitcast %"class.spvtools::opt::analysis::Constant"** %231 to <2 x i64>*
  store <2 x i64> %229, <2 x i64>* %232, align 8, !alias.scope !71, !noalias !68
  %233 = or i64 %210, 8
  %234 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %161, i64 %233
  %235 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %167, i64 %233
  %236 = bitcast %"class.spvtools::opt::analysis::Constant"** %235 to <2 x i64>*
  %237 = load <2 x i64>, <2 x i64>* %236, align 8, !alias.scope !68
  %238 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %235, i64 2
  %239 = bitcast %"class.spvtools::opt::analysis::Constant"** %238 to <2 x i64>*
  %240 = load <2 x i64>, <2 x i64>* %239, align 8, !alias.scope !68
  %241 = bitcast %"class.spvtools::opt::analysis::Constant"** %234 to <2 x i64>*
  store <2 x i64> %237, <2 x i64>* %241, align 8, !alias.scope !71, !noalias !68
  %242 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %234, i64 2
  %243 = bitcast %"class.spvtools::opt::analysis::Constant"** %242 to <2 x i64>*
  store <2 x i64> %240, <2 x i64>* %243, align 8, !alias.scope !71, !noalias !68
  %244 = or i64 %210, 12
  %245 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %161, i64 %244
  %246 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %167, i64 %244
  %247 = bitcast %"class.spvtools::opt::analysis::Constant"** %246 to <2 x i64>*
  %248 = load <2 x i64>, <2 x i64>* %247, align 8, !alias.scope !68
  %249 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %246, i64 2
  %250 = bitcast %"class.spvtools::opt::analysis::Constant"** %249 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 8, !alias.scope !68
  %252 = bitcast %"class.spvtools::opt::analysis::Constant"** %245 to <2 x i64>*
  store <2 x i64> %248, <2 x i64>* %252, align 8, !alias.scope !71, !noalias !68
  %253 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %245, i64 2
  %254 = bitcast %"class.spvtools::opt::analysis::Constant"** %253 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %254, align 8, !alias.scope !71, !noalias !68
  %255 = add i64 %210, 16
  %256 = add i64 %211, -4
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %258, label %209, !llvm.loop !73

258:                                              ; preds = %209, %198
  %259 = phi i64 [ 0, %198 ], [ %255, %209 ]
  %260 = icmp eq i64 %205, 0
  br i1 %260, label %277, label %261

261:                                              ; preds = %258, %261
  %262 = phi i64 [ %274, %261 ], [ %259, %258 ]
  %263 = phi i64 [ %275, %261 ], [ %205, %258 ]
  %264 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %161, i64 %262
  %265 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %167, i64 %262
  %266 = bitcast %"class.spvtools::opt::analysis::Constant"** %265 to <2 x i64>*
  %267 = load <2 x i64>, <2 x i64>* %266, align 8, !alias.scope !68
  %268 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %265, i64 2
  %269 = bitcast %"class.spvtools::opt::analysis::Constant"** %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !68
  %271 = bitcast %"class.spvtools::opt::analysis::Constant"** %264 to <2 x i64>*
  store <2 x i64> %267, <2 x i64>* %271, align 8, !alias.scope !71, !noalias !68
  %272 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %264, i64 2
  %273 = bitcast %"class.spvtools::opt::analysis::Constant"** %272 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %273, align 8, !alias.scope !71, !noalias !68
  %274 = add i64 %262, 4
  %275 = add i64 %263, -1
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %277, label %261, !llvm.loop !74

277:                                              ; preds = %261, %258
  %278 = icmp eq i64 %177, %199
  br i1 %278, label %279, label %179

279:                                              ; preds = %289, %277
  %280 = phi %"class.spvtools::opt::analysis::Constant"** [ %200, %277 ], [ %296, %289 ]
  %281 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %280 to i64
  br label %282

282:                                              ; preds = %279, %158
  %283 = phi i64 [ %281, %279 ], [ %160, %158 ]
  store i64 %283, i64* %159, align 8
  %284 = icmp eq i64 %165, 0
  br i1 %284, label %298, label %285

285:                                              ; preds = %282
  %286 = sub nsw i64 0, %166
  %287 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %161, i64 %286
  %288 = bitcast %"class.spvtools::opt::analysis::Constant"** %287 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %288, i8* align 8 %6, i64 %165, i1 false) #11
  br label %298

289:                                              ; preds = %179, %289
  %290 = phi %"class.spvtools::opt::analysis::Constant"** [ %296, %289 ], [ %180, %179 ]
  %291 = phi %"class.spvtools::opt::analysis::Constant"** [ %295, %289 ], [ %181, %179 ]
  %292 = bitcast %"class.spvtools::opt::analysis::Constant"** %291 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = bitcast %"class.spvtools::opt::analysis::Constant"** %290 to i64*
  store i64 %293, i64* %294, align 8
  %295 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %291, i64 1
  %296 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %290, i64 1
  %297 = icmp ult %"class.spvtools::opt::analysis::Constant"** %295, %15
  br i1 %297, label %289, label %279, !llvm.loop !75

298:                                              ; preds = %282, %285
  %299 = icmp ugt %"class.spvtools::opt::analysis::Constant"** %1, %3
  br i1 %299, label %305, label %300

300:                                              ; preds = %298
  %301 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %14, align 8
  %302 = icmp ugt %"class.spvtools::opt::analysis::Constant"** %301, %3
  %303 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %3, i64 %2
  %304 = select i1 %302, %"class.spvtools::opt::analysis::Constant"** %303, %"class.spvtools::opt::analysis::Constant"** %3
  br label %305

305:                                              ; preds = %298, %300
  %306 = phi %"class.spvtools::opt::analysis::Constant"** [ %3, %298 ], [ %304, %300 ]
  %307 = bitcast %"class.spvtools::opt::analysis::Constant"** %306 to i64*
  %308 = icmp ult i64 %162, 4
  br i1 %308, label %367, label %309

309:                                              ; preds = %305
  %310 = bitcast %"class.spvtools::opt::analysis::Constant"** %306 to i8*
  %311 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %162
  %312 = getelementptr i8, i8* %310, i64 1
  %313 = icmp ugt i8* %312, %6
  %314 = icmp ult %"class.spvtools::opt::analysis::Constant"** %306, %311
  %315 = and i1 %313, %314
  br i1 %315, label %367, label %316

316:                                              ; preds = %309
  %317 = and i64 %162, -4
  %318 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %317
  %319 = sub i64 %162, %317
  %320 = add i64 %317, -4
  %321 = lshr exact i64 %320, 2
  %322 = add nuw nsw i64 %321, 1
  %323 = and i64 %322, 1
  %324 = icmp eq i64 %320, 0
  br i1 %324, label %352, label %325

325:                                              ; preds = %316
  %326 = sub nuw nsw i64 %322, %323
  %327 = load i64, i64* %307, align 8, !alias.scope !76
  %328 = insertelement <2 x i64> undef, i64 %327, i32 0
  %329 = shufflevector <2 x i64> %328, <2 x i64> undef, <2 x i32> zeroinitializer
  %330 = insertelement <2 x i64> undef, i64 %327, i32 0
  %331 = shufflevector <2 x i64> %330, <2 x i64> undef, <2 x i32> zeroinitializer
  %332 = load i64, i64* %307, align 8, !alias.scope !76
  %333 = insertelement <2 x i64> undef, i64 %332, i32 0
  %334 = shufflevector <2 x i64> %333, <2 x i64> undef, <2 x i32> zeroinitializer
  %335 = insertelement <2 x i64> undef, i64 %332, i32 0
  %336 = shufflevector <2 x i64> %335, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %337

337:                                              ; preds = %337, %325
  %338 = phi i64 [ 0, %325 ], [ %349, %337 ]
  %339 = phi i64 [ %326, %325 ], [ %350, %337 ]
  %340 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %338
  %341 = bitcast %"class.spvtools::opt::analysis::Constant"** %340 to <2 x i64>*
  store <2 x i64> %329, <2 x i64>* %341, align 8, !alias.scope !79, !noalias !76
  %342 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %340, i64 2
  %343 = bitcast %"class.spvtools::opt::analysis::Constant"** %342 to <2 x i64>*
  store <2 x i64> %331, <2 x i64>* %343, align 8, !alias.scope !79, !noalias !76
  %344 = or i64 %338, 4
  %345 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %344
  %346 = bitcast %"class.spvtools::opt::analysis::Constant"** %345 to <2 x i64>*
  store <2 x i64> %334, <2 x i64>* %346, align 8, !alias.scope !79, !noalias !76
  %347 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %345, i64 2
  %348 = bitcast %"class.spvtools::opt::analysis::Constant"** %347 to <2 x i64>*
  store <2 x i64> %336, <2 x i64>* %348, align 8, !alias.scope !79, !noalias !76
  %349 = add i64 %338, 8
  %350 = add i64 %339, -2
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %337, !llvm.loop !81

352:                                              ; preds = %337, %316
  %353 = phi i64 [ 0, %316 ], [ %349, %337 ]
  %354 = icmp eq i64 %323, 0
  br i1 %354, label %365, label %355

355:                                              ; preds = %352
  %356 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %353
  %357 = load i64, i64* %307, align 8, !alias.scope !76
  %358 = insertelement <2 x i64> undef, i64 %357, i32 0
  %359 = shufflevector <2 x i64> %358, <2 x i64> undef, <2 x i32> zeroinitializer
  %360 = insertelement <2 x i64> undef, i64 %357, i32 0
  %361 = shufflevector <2 x i64> %360, <2 x i64> undef, <2 x i32> zeroinitializer
  %362 = bitcast %"class.spvtools::opt::analysis::Constant"** %356 to <2 x i64>*
  store <2 x i64> %359, <2 x i64>* %362, align 8, !alias.scope !79, !noalias !76
  %363 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %356, i64 2
  %364 = bitcast %"class.spvtools::opt::analysis::Constant"** %363 to <2 x i64>*
  store <2 x i64> %361, <2 x i64>* %364, align 8, !alias.scope !79, !noalias !76
  br label %365

365:                                              ; preds = %352, %355
  %366 = icmp eq i64 %162, %317
  br i1 %366, label %770, label %367

367:                                              ; preds = %365, %309, %305
  %368 = phi %"class.spvtools::opt::analysis::Constant"** [ %1, %309 ], [ %1, %305 ], [ %318, %365 ]
  %369 = phi i64 [ %162, %309 ], [ %162, %305 ], [ %319, %365 ]
  %370 = add i64 %369, -1
  %371 = and i64 %369, 7
  %372 = icmp eq i64 %371, 0
  br i1 %372, label %383, label %373

373:                                              ; preds = %367, %373
  %374 = phi %"class.spvtools::opt::analysis::Constant"** [ %379, %373 ], [ %368, %367 ]
  %375 = phi i64 [ %380, %373 ], [ %369, %367 ]
  %376 = phi i64 [ %381, %373 ], [ %371, %367 ]
  %377 = load i64, i64* %307, align 8
  %378 = bitcast %"class.spvtools::opt::analysis::Constant"** %374 to i64*
  store i64 %377, i64* %378, align 8
  %379 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %374, i64 1
  %380 = add i64 %375, -1
  %381 = add i64 %376, -1
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %383, label %373, !llvm.loop !82

383:                                              ; preds = %373, %367
  %384 = phi %"class.spvtools::opt::analysis::Constant"** [ %368, %367 ], [ %379, %373 ]
  %385 = phi i64 [ %369, %367 ], [ %380, %373 ]
  %386 = icmp ult i64 %370, 7
  br i1 %386, label %770, label %387

387:                                              ; preds = %383, %387
  %388 = phi %"class.spvtools::opt::analysis::Constant"** [ %413, %387 ], [ %384, %383 ]
  %389 = phi i64 [ %414, %387 ], [ %385, %383 ]
  %390 = load i64, i64* %307, align 8
  %391 = bitcast %"class.spvtools::opt::analysis::Constant"** %388 to i64*
  store i64 %390, i64* %391, align 8
  %392 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %388, i64 1
  %393 = load i64, i64* %307, align 8
  %394 = bitcast %"class.spvtools::opt::analysis::Constant"** %392 to i64*
  store i64 %393, i64* %394, align 8
  %395 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %388, i64 2
  %396 = load i64, i64* %307, align 8
  %397 = bitcast %"class.spvtools::opt::analysis::Constant"** %395 to i64*
  store i64 %396, i64* %397, align 8
  %398 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %388, i64 3
  %399 = load i64, i64* %307, align 8
  %400 = bitcast %"class.spvtools::opt::analysis::Constant"** %398 to i64*
  store i64 %399, i64* %400, align 8
  %401 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %388, i64 4
  %402 = load i64, i64* %307, align 8
  %403 = bitcast %"class.spvtools::opt::analysis::Constant"** %401 to i64*
  store i64 %402, i64* %403, align 8
  %404 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %388, i64 5
  %405 = load i64, i64* %307, align 8
  %406 = bitcast %"class.spvtools::opt::analysis::Constant"** %404 to i64*
  store i64 %405, i64* %406, align 8
  %407 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %388, i64 6
  %408 = load i64, i64* %307, align 8
  %409 = bitcast %"class.spvtools::opt::analysis::Constant"** %407 to i64*
  store i64 %408, i64* %409, align 8
  %410 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %388, i64 7
  %411 = load i64, i64* %307, align 8
  %412 = bitcast %"class.spvtools::opt::analysis::Constant"** %410 to i64*
  store i64 %411, i64* %412, align 8
  %413 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %388, i64 8
  %414 = add i64 %389, -8
  %415 = icmp eq i64 %414, 0
  br i1 %415, label %770, label %387, !llvm.loop !83

416:                                              ; preds = %10
  %417 = bitcast %"class.spvtools::opt::analysis::Constant"*** %14 to i64*
  %418 = bitcast %"class.std::__1::vector.802"* %0 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = sub i64 %17, %419
  %421 = ashr exact i64 %420, 3
  %422 = add i64 %421, %2
  %423 = icmp ugt i64 %422, 2305843009213693951
  br i1 %423, label %424, label %426

424:                                              ; preds = %416
  %425 = bitcast %"class.std::__1::vector.802"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %425) #13
  unreachable

426:                                              ; preds = %416
  %427 = sub i64 %13, %419
  %428 = ashr exact i64 %427, 3
  %429 = icmp ult i64 %428, 1152921504606846975
  br i1 %429, label %433, label %430

430:                                              ; preds = %426
  %431 = sub i64 %7, %419
  %432 = ashr exact i64 %431, 3
  br label %443

433:                                              ; preds = %426
  %434 = ashr exact i64 %427, 2
  %435 = icmp ult i64 %434, %422
  %436 = select i1 %435, i64 %422, i64 %434
  %437 = sub i64 %7, %419
  %438 = ashr exact i64 %437, 3
  %439 = icmp eq i64 %436, 0
  br i1 %439, label %449, label %440

440:                                              ; preds = %433
  %441 = icmp ugt i64 %436, 2305843009213693951
  br i1 %441, label %442, label %443

442:                                              ; preds = %440
  tail call void @abort() #13
  unreachable

443:                                              ; preds = %430, %440
  %444 = phi i64 [ 2305843009213693951, %430 ], [ %436, %440 ]
  %445 = phi i64 [ %432, %430 ], [ %438, %440 ]
  %446 = shl i64 %444, 3
  %447 = tail call i8* @_Znwm(i64 %446) #12
  %448 = bitcast i8* %447 to %"class.spvtools::opt::analysis::Constant"**
  br label %449

449:                                              ; preds = %443, %433
  %450 = phi i64 [ %445, %443 ], [ %438, %433 ]
  %451 = phi i64 [ %444, %443 ], [ 0, %433 ]
  %452 = phi %"class.spvtools::opt::analysis::Constant"** [ %448, %443 ], [ null, %433 ]
  %453 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %452, i64 %450
  %454 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %452, i64 %451
  %455 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %453, i64 %2
  %456 = bitcast %"class.spvtools::opt::analysis::Constant"** %3 to i64*
  %457 = shl nsw i64 %2, 3
  %458 = add i64 %457, -8
  %459 = lshr exact i64 %458, 3
  %460 = add nuw nsw i64 %459, 1
  %461 = icmp ult i64 %460, 4
  br i1 %461, label %524, label %462

462:                                              ; preds = %449
  %463 = bitcast %"class.spvtools::opt::analysis::Constant"** %453 to i8*
  %464 = shl nsw i64 %2, 3
  %465 = add i64 %464, -8
  %466 = lshr exact i64 %465, 3
  %467 = add nsw i64 %450, %466
  %468 = add nsw i64 %467, 1
  %469 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %452, i64 %468
  %470 = getelementptr i8, i8* %5, i64 1
  %471 = icmp ugt i8* %470, %463
  %472 = icmp ugt %"class.spvtools::opt::analysis::Constant"** %469, %3
  %473 = and i1 %471, %472
  br i1 %473, label %524, label %474

474:                                              ; preds = %462
  %475 = and i64 %460, 4611686018427387900
  %476 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %453, i64 %475
  %477 = add nsw i64 %475, -4
  %478 = lshr exact i64 %477, 2
  %479 = add nuw nsw i64 %478, 1
  %480 = and i64 %479, 1
  %481 = icmp eq i64 %477, 0
  br i1 %481, label %509, label %482

482:                                              ; preds = %474
  %483 = sub nuw nsw i64 %479, %480
  %484 = load i64, i64* %456, align 8, !alias.scope !84
  %485 = insertelement <2 x i64> undef, i64 %484, i32 0
  %486 = shufflevector <2 x i64> %485, <2 x i64> undef, <2 x i32> zeroinitializer
  %487 = insertelement <2 x i64> undef, i64 %484, i32 0
  %488 = shufflevector <2 x i64> %487, <2 x i64> undef, <2 x i32> zeroinitializer
  %489 = load i64, i64* %456, align 8, !alias.scope !84
  %490 = insertelement <2 x i64> undef, i64 %489, i32 0
  %491 = shufflevector <2 x i64> %490, <2 x i64> undef, <2 x i32> zeroinitializer
  %492 = insertelement <2 x i64> undef, i64 %489, i32 0
  %493 = shufflevector <2 x i64> %492, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %494

494:                                              ; preds = %494, %482
  %495 = phi i64 [ 0, %482 ], [ %506, %494 ]
  %496 = phi i64 [ %483, %482 ], [ %507, %494 ]
  %497 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %453, i64 %495
  %498 = bitcast %"class.spvtools::opt::analysis::Constant"** %497 to <2 x i64>*
  store <2 x i64> %486, <2 x i64>* %498, align 8, !alias.scope !87, !noalias !84
  %499 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %497, i64 2
  %500 = bitcast %"class.spvtools::opt::analysis::Constant"** %499 to <2 x i64>*
  store <2 x i64> %488, <2 x i64>* %500, align 8, !alias.scope !87, !noalias !84
  %501 = or i64 %495, 4
  %502 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %453, i64 %501
  %503 = bitcast %"class.spvtools::opt::analysis::Constant"** %502 to <2 x i64>*
  store <2 x i64> %491, <2 x i64>* %503, align 8, !alias.scope !87, !noalias !84
  %504 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %502, i64 2
  %505 = bitcast %"class.spvtools::opt::analysis::Constant"** %504 to <2 x i64>*
  store <2 x i64> %493, <2 x i64>* %505, align 8, !alias.scope !87, !noalias !84
  %506 = add i64 %495, 8
  %507 = add i64 %496, -2
  %508 = icmp eq i64 %507, 0
  br i1 %508, label %509, label %494, !llvm.loop !89

509:                                              ; preds = %494, %474
  %510 = phi i64 [ 0, %474 ], [ %506, %494 ]
  %511 = icmp eq i64 %480, 0
  br i1 %511, label %522, label %512

512:                                              ; preds = %509
  %513 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %453, i64 %510
  %514 = load i64, i64* %456, align 8, !alias.scope !84
  %515 = insertelement <2 x i64> undef, i64 %514, i32 0
  %516 = shufflevector <2 x i64> %515, <2 x i64> undef, <2 x i32> zeroinitializer
  %517 = insertelement <2 x i64> undef, i64 %514, i32 0
  %518 = shufflevector <2 x i64> %517, <2 x i64> undef, <2 x i32> zeroinitializer
  %519 = bitcast %"class.spvtools::opt::analysis::Constant"** %513 to <2 x i64>*
  store <2 x i64> %516, <2 x i64>* %519, align 8, !alias.scope !87, !noalias !84
  %520 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %513, i64 2
  %521 = bitcast %"class.spvtools::opt::analysis::Constant"** %520 to <2 x i64>*
  store <2 x i64> %518, <2 x i64>* %521, align 8, !alias.scope !87, !noalias !84
  br label %522

522:                                              ; preds = %509, %512
  %523 = icmp eq i64 %460, %475
  br i1 %523, label %574, label %524

524:                                              ; preds = %522, %462, %449
  %525 = phi %"class.spvtools::opt::analysis::Constant"** [ %453, %462 ], [ %453, %449 ], [ %476, %522 ]
  %526 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %525 to i64
  %527 = add i64 %450, %2
  %528 = add i64 %527, -1
  %529 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %452, i64 %528
  %530 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %529 to i64
  %531 = sub i64 %530, %526
  %532 = lshr i64 %531, 3
  %533 = add nuw nsw i64 %532, 1
  %534 = and i64 %533, 7
  %535 = icmp eq i64 %534, 0
  br i1 %535, label %544, label %536

536:                                              ; preds = %524, %536
  %537 = phi %"class.spvtools::opt::analysis::Constant"** [ %541, %536 ], [ %525, %524 ]
  %538 = phi i64 [ %542, %536 ], [ %534, %524 ]
  %539 = load i64, i64* %456, align 8
  %540 = bitcast %"class.spvtools::opt::analysis::Constant"** %537 to i64*
  store i64 %539, i64* %540, align 8
  %541 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %537, i64 1
  %542 = add i64 %538, -1
  %543 = icmp eq i64 %542, 0
  br i1 %543, label %544, label %536, !llvm.loop !90

544:                                              ; preds = %536, %524
  %545 = phi %"class.spvtools::opt::analysis::Constant"** [ %525, %524 ], [ %541, %536 ]
  %546 = icmp ult i64 %531, 56
  br i1 %546, label %574, label %547

547:                                              ; preds = %544, %547
  %548 = phi %"class.spvtools::opt::analysis::Constant"** [ %572, %547 ], [ %545, %544 ]
  %549 = load i64, i64* %456, align 8
  %550 = bitcast %"class.spvtools::opt::analysis::Constant"** %548 to i64*
  store i64 %549, i64* %550, align 8
  %551 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %548, i64 1
  %552 = load i64, i64* %456, align 8
  %553 = bitcast %"class.spvtools::opt::analysis::Constant"** %551 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %548, i64 2
  %555 = load i64, i64* %456, align 8
  %556 = bitcast %"class.spvtools::opt::analysis::Constant"** %554 to i64*
  store i64 %555, i64* %556, align 8
  %557 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %548, i64 3
  %558 = load i64, i64* %456, align 8
  %559 = bitcast %"class.spvtools::opt::analysis::Constant"** %557 to i64*
  store i64 %558, i64* %559, align 8
  %560 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %548, i64 4
  %561 = load i64, i64* %456, align 8
  %562 = bitcast %"class.spvtools::opt::analysis::Constant"** %560 to i64*
  store i64 %561, i64* %562, align 8
  %563 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %548, i64 5
  %564 = load i64, i64* %456, align 8
  %565 = bitcast %"class.spvtools::opt::analysis::Constant"** %563 to i64*
  store i64 %564, i64* %565, align 8
  %566 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %548, i64 6
  %567 = load i64, i64* %456, align 8
  %568 = bitcast %"class.spvtools::opt::analysis::Constant"** %566 to i64*
  store i64 %567, i64* %568, align 8
  %569 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %548, i64 7
  %570 = load i64, i64* %456, align 8
  %571 = bitcast %"class.spvtools::opt::analysis::Constant"** %569 to i64*
  store i64 %570, i64* %571, align 8
  %572 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %548, i64 8
  %573 = icmp eq %"class.spvtools::opt::analysis::Constant"** %455, %572
  br i1 %573, label %574, label %547, !llvm.loop !91

574:                                              ; preds = %544, %547, %522
  %575 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %454 to i64
  %576 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %8, align 8
  %577 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %576 to i64
  %578 = sub i64 %7, %577
  %579 = ashr exact i64 %578, 3
  %580 = sub nsw i64 0, %579
  %581 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %453, i64 %580
  %582 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %581 to i64
  %583 = icmp sgt i64 %578, 0
  br i1 %583, label %584, label %587

584:                                              ; preds = %574
  %585 = bitcast %"class.spvtools::opt::analysis::Constant"** %581 to i8*
  %586 = bitcast %"class.spvtools::opt::analysis::Constant"** %576 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %585, i8* align 8 %586, i64 %578, i1 false) #11
  br label %587

587:                                              ; preds = %584, %574
  %588 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %14, align 8
  %589 = icmp eq %"class.spvtools::opt::analysis::Constant"** %588, %1
  br i1 %589, label %763, label %590

590:                                              ; preds = %587
  %591 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %588, i64 -1
  %592 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %591 to i64
  %593 = sub i64 %592, %7
  %594 = lshr i64 %593, 3
  %595 = add nuw nsw i64 %594, 1
  %596 = icmp ult i64 %595, 4
  br i1 %596, label %692, label %597

597:                                              ; preds = %590
  %598 = add i64 %450, %2
  %599 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %588, i64 -1
  %600 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %599 to i64
  %601 = sub i64 %600, %7
  %602 = lshr i64 %601, 3
  %603 = add i64 %598, %602
  %604 = add i64 %603, 1
  %605 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %452, i64 %604
  %606 = add nuw nsw i64 %602, 1
  %607 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %606
  %608 = icmp ult %"class.spvtools::opt::analysis::Constant"** %455, %607
  %609 = icmp ugt %"class.spvtools::opt::analysis::Constant"** %605, %1
  %610 = and i1 %608, %609
  br i1 %610, label %692, label %611

611:                                              ; preds = %597
  %612 = and i64 %595, 4611686018427387900
  %613 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %455, i64 %612
  %614 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %612
  %615 = add nsw i64 %612, -4
  %616 = lshr exact i64 %615, 2
  %617 = add nuw nsw i64 %616, 1
  %618 = and i64 %617, 3
  %619 = icmp ult i64 %615, 12
  br i1 %619, label %671, label %620

620:                                              ; preds = %611
  %621 = sub nsw i64 %617, %618
  br label %622

622:                                              ; preds = %622, %620
  %623 = phi i64 [ 0, %620 ], [ %668, %622 ]
  %624 = phi i64 [ %621, %620 ], [ %669, %622 ]
  %625 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %455, i64 %623
  %626 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %623
  %627 = bitcast %"class.spvtools::opt::analysis::Constant"** %626 to <2 x i64>*
  %628 = load <2 x i64>, <2 x i64>* %627, align 8, !alias.scope !92
  %629 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %626, i64 2
  %630 = bitcast %"class.spvtools::opt::analysis::Constant"** %629 to <2 x i64>*
  %631 = load <2 x i64>, <2 x i64>* %630, align 8, !alias.scope !92
  %632 = bitcast %"class.spvtools::opt::analysis::Constant"** %625 to <2 x i64>*
  store <2 x i64> %628, <2 x i64>* %632, align 8, !alias.scope !95, !noalias !92
  %633 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %625, i64 2
  %634 = bitcast %"class.spvtools::opt::analysis::Constant"** %633 to <2 x i64>*
  store <2 x i64> %631, <2 x i64>* %634, align 8, !alias.scope !95, !noalias !92
  %635 = or i64 %623, 4
  %636 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %455, i64 %635
  %637 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %635
  %638 = bitcast %"class.spvtools::opt::analysis::Constant"** %637 to <2 x i64>*
  %639 = load <2 x i64>, <2 x i64>* %638, align 8, !alias.scope !92
  %640 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %637, i64 2
  %641 = bitcast %"class.spvtools::opt::analysis::Constant"** %640 to <2 x i64>*
  %642 = load <2 x i64>, <2 x i64>* %641, align 8, !alias.scope !92
  %643 = bitcast %"class.spvtools::opt::analysis::Constant"** %636 to <2 x i64>*
  store <2 x i64> %639, <2 x i64>* %643, align 8, !alias.scope !95, !noalias !92
  %644 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %636, i64 2
  %645 = bitcast %"class.spvtools::opt::analysis::Constant"** %644 to <2 x i64>*
  store <2 x i64> %642, <2 x i64>* %645, align 8, !alias.scope !95, !noalias !92
  %646 = or i64 %623, 8
  %647 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %455, i64 %646
  %648 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %646
  %649 = bitcast %"class.spvtools::opt::analysis::Constant"** %648 to <2 x i64>*
  %650 = load <2 x i64>, <2 x i64>* %649, align 8, !alias.scope !92
  %651 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %648, i64 2
  %652 = bitcast %"class.spvtools::opt::analysis::Constant"** %651 to <2 x i64>*
  %653 = load <2 x i64>, <2 x i64>* %652, align 8, !alias.scope !92
  %654 = bitcast %"class.spvtools::opt::analysis::Constant"** %647 to <2 x i64>*
  store <2 x i64> %650, <2 x i64>* %654, align 8, !alias.scope !95, !noalias !92
  %655 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %647, i64 2
  %656 = bitcast %"class.spvtools::opt::analysis::Constant"** %655 to <2 x i64>*
  store <2 x i64> %653, <2 x i64>* %656, align 8, !alias.scope !95, !noalias !92
  %657 = or i64 %623, 12
  %658 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %455, i64 %657
  %659 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %657
  %660 = bitcast %"class.spvtools::opt::analysis::Constant"** %659 to <2 x i64>*
  %661 = load <2 x i64>, <2 x i64>* %660, align 8, !alias.scope !92
  %662 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %659, i64 2
  %663 = bitcast %"class.spvtools::opt::analysis::Constant"** %662 to <2 x i64>*
  %664 = load <2 x i64>, <2 x i64>* %663, align 8, !alias.scope !92
  %665 = bitcast %"class.spvtools::opt::analysis::Constant"** %658 to <2 x i64>*
  store <2 x i64> %661, <2 x i64>* %665, align 8, !alias.scope !95, !noalias !92
  %666 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %658, i64 2
  %667 = bitcast %"class.spvtools::opt::analysis::Constant"** %666 to <2 x i64>*
  store <2 x i64> %664, <2 x i64>* %667, align 8, !alias.scope !95, !noalias !92
  %668 = add i64 %623, 16
  %669 = add i64 %624, -4
  %670 = icmp eq i64 %669, 0
  br i1 %670, label %671, label %622, !llvm.loop !97

671:                                              ; preds = %622, %611
  %672 = phi i64 [ 0, %611 ], [ %668, %622 ]
  %673 = icmp eq i64 %618, 0
  br i1 %673, label %690, label %674

674:                                              ; preds = %671, %674
  %675 = phi i64 [ %687, %674 ], [ %672, %671 ]
  %676 = phi i64 [ %688, %674 ], [ %618, %671 ]
  %677 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %455, i64 %675
  %678 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, i64 %675
  %679 = bitcast %"class.spvtools::opt::analysis::Constant"** %678 to <2 x i64>*
  %680 = load <2 x i64>, <2 x i64>* %679, align 8, !alias.scope !92
  %681 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %678, i64 2
  %682 = bitcast %"class.spvtools::opt::analysis::Constant"** %681 to <2 x i64>*
  %683 = load <2 x i64>, <2 x i64>* %682, align 8, !alias.scope !92
  %684 = bitcast %"class.spvtools::opt::analysis::Constant"** %677 to <2 x i64>*
  store <2 x i64> %680, <2 x i64>* %684, align 8, !alias.scope !95, !noalias !92
  %685 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %677, i64 2
  %686 = bitcast %"class.spvtools::opt::analysis::Constant"** %685 to <2 x i64>*
  store <2 x i64> %683, <2 x i64>* %686, align 8, !alias.scope !95, !noalias !92
  %687 = add i64 %675, 4
  %688 = add i64 %676, -1
  %689 = icmp eq i64 %688, 0
  br i1 %689, label %690, label %674, !llvm.loop !98

690:                                              ; preds = %674, %671
  %691 = icmp eq i64 %595, %612
  br i1 %691, label %763, label %692

692:                                              ; preds = %690, %597, %590
  %693 = phi %"class.spvtools::opt::analysis::Constant"** [ %455, %597 ], [ %455, %590 ], [ %613, %690 ]
  %694 = phi %"class.spvtools::opt::analysis::Constant"** [ %1, %597 ], [ %1, %590 ], [ %614, %690 ]
  %695 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %694 to i64
  %696 = getelementptr %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %588, i64 -1
  %697 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %696 to i64
  %698 = sub i64 %697, %695
  %699 = lshr i64 %698, 3
  %700 = add nuw nsw i64 %699, 1
  %701 = and i64 %700, 7
  %702 = icmp eq i64 %701, 0
  br i1 %702, label %714, label %703

703:                                              ; preds = %692, %703
  %704 = phi %"class.spvtools::opt::analysis::Constant"** [ %711, %703 ], [ %693, %692 ]
  %705 = phi %"class.spvtools::opt::analysis::Constant"** [ %710, %703 ], [ %694, %692 ]
  %706 = phi i64 [ %712, %703 ], [ %701, %692 ]
  %707 = bitcast %"class.spvtools::opt::analysis::Constant"** %704 to i64*
  %708 = bitcast %"class.spvtools::opt::analysis::Constant"** %705 to i64*
  %709 = load i64, i64* %708, align 8
  store i64 %709, i64* %707, align 8
  %710 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %705, i64 1
  %711 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %704, i64 1
  %712 = add i64 %706, -1
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %714, label %703, !llvm.loop !99

714:                                              ; preds = %703, %692
  %715 = phi %"class.spvtools::opt::analysis::Constant"** [ undef, %692 ], [ %711, %703 ]
  %716 = phi %"class.spvtools::opt::analysis::Constant"** [ %693, %692 ], [ %711, %703 ]
  %717 = phi %"class.spvtools::opt::analysis::Constant"** [ %694, %692 ], [ %710, %703 ]
  %718 = icmp ult i64 %698, 56
  br i1 %718, label %763, label %719

719:                                              ; preds = %714, %719
  %720 = phi %"class.spvtools::opt::analysis::Constant"** [ %761, %719 ], [ %716, %714 ]
  %721 = phi %"class.spvtools::opt::analysis::Constant"** [ %760, %719 ], [ %717, %714 ]
  %722 = bitcast %"class.spvtools::opt::analysis::Constant"** %720 to i64*
  %723 = bitcast %"class.spvtools::opt::analysis::Constant"** %721 to i64*
  %724 = load i64, i64* %723, align 8
  store i64 %724, i64* %722, align 8
  %725 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 1
  %726 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %720, i64 1
  %727 = bitcast %"class.spvtools::opt::analysis::Constant"** %726 to i64*
  %728 = bitcast %"class.spvtools::opt::analysis::Constant"** %725 to i64*
  %729 = load i64, i64* %728, align 8
  store i64 %729, i64* %727, align 8
  %730 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 2
  %731 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %720, i64 2
  %732 = bitcast %"class.spvtools::opt::analysis::Constant"** %731 to i64*
  %733 = bitcast %"class.spvtools::opt::analysis::Constant"** %730 to i64*
  %734 = load i64, i64* %733, align 8
  store i64 %734, i64* %732, align 8
  %735 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 3
  %736 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %720, i64 3
  %737 = bitcast %"class.spvtools::opt::analysis::Constant"** %736 to i64*
  %738 = bitcast %"class.spvtools::opt::analysis::Constant"** %735 to i64*
  %739 = load i64, i64* %738, align 8
  store i64 %739, i64* %737, align 8
  %740 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 4
  %741 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %720, i64 4
  %742 = bitcast %"class.spvtools::opt::analysis::Constant"** %741 to i64*
  %743 = bitcast %"class.spvtools::opt::analysis::Constant"** %740 to i64*
  %744 = load i64, i64* %743, align 8
  store i64 %744, i64* %742, align 8
  %745 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 5
  %746 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %720, i64 5
  %747 = bitcast %"class.spvtools::opt::analysis::Constant"** %746 to i64*
  %748 = bitcast %"class.spvtools::opt::analysis::Constant"** %745 to i64*
  %749 = load i64, i64* %748, align 8
  store i64 %749, i64* %747, align 8
  %750 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 6
  %751 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %720, i64 6
  %752 = bitcast %"class.spvtools::opt::analysis::Constant"** %751 to i64*
  %753 = bitcast %"class.spvtools::opt::analysis::Constant"** %750 to i64*
  %754 = load i64, i64* %753, align 8
  store i64 %754, i64* %752, align 8
  %755 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 7
  %756 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %720, i64 7
  %757 = bitcast %"class.spvtools::opt::analysis::Constant"** %756 to i64*
  %758 = bitcast %"class.spvtools::opt::analysis::Constant"** %755 to i64*
  %759 = load i64, i64* %758, align 8
  store i64 %759, i64* %757, align 8
  %760 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %721, i64 8
  %761 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %720, i64 8
  %762 = icmp eq %"class.spvtools::opt::analysis::Constant"** %760, %588
  br i1 %762, label %763, label %719, !llvm.loop !100

763:                                              ; preds = %714, %719, %690, %587
  %764 = phi %"class.spvtools::opt::analysis::Constant"** [ %455, %587 ], [ %613, %690 ], [ %715, %714 ], [ %761, %719 ]
  %765 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %764 to i64
  %766 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %8, align 8
  store i64 %582, i64* %418, align 8
  store i64 %765, i64* %417, align 8
  store i64 %575, i64* %12, align 8
  %767 = icmp eq %"class.spvtools::opt::analysis::Constant"** %766, null
  br i1 %767, label %770, label %768

768:                                              ; preds = %763
  %769 = bitcast %"class.spvtools::opt::analysis::Constant"** %766 to i8*
  tail call void @_ZdlPv(i8* %769) #12
  br label %770

770:                                              ; preds = %383, %387, %365, %768, %763, %153, %4
  %771 = phi %"class.spvtools::opt::analysis::Constant"** [ %1, %4 ], [ %1, %153 ], [ %453, %763 ], [ %453, %768 ], [ %1, %365 ], [ %1, %387 ], [ %1, %383 ]
  ret %"class.spvtools::opt::analysis::Constant"** %771
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager30BuildInstructionAndAddToModuleEPKNS1_8ConstantEPNS0_15InstructionList8iteratorEj(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::InstructionList::iterator"*, i32) local_unnamed_addr #2

declare i32 @_ZNK8spvtools3opt17InstructionFolder11FoldScalarsE6SpvOp_RKNSt3__16vectorIPKNS0_8analysis8ConstantENS3_9allocatorIS8_EEEE(%"class.spvtools::opt::InstructionFolder"*, i32, %"class.std::__1::vector.802"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantINS_5utils11SmallVectorIjLm2EEEEEPKNS1_8ConstantEPKNS1_4TypeERKT_(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.3", align 8
  %5 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %2, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %6, align 8
  %8 = icmp eq %"class.std::__1::vector.3"* %7, null
  %9 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %2, i64 0, i32 2
  %11 = select i1 %8, i32** %10, i32** %9
  %12 = load i32*, i32** %11, align 8
  br i1 %8, label %22, label %13

13:                                               ; preds = %3
  %14 = load i32*, i32** %9, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint i32* %14 to i64
  %19 = sub i64 %17, %18
  %20 = ashr exact i64 %19, 2
  %21 = getelementptr inbounds i32, i32* %14, i64 %20
  br label %27

22:                                               ; preds = %3
  %23 = load i32*, i32** %10, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %2, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i32, i32* %23, i64 %25
  br label %27

27:                                               ; preds = %13, %22
  %28 = phi i32* [ %21, %13 ], [ %26, %22 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #11
  %29 = ptrtoint i32* %28 to i64
  %30 = ptrtoint i32* %12 to i64
  %31 = sub i64 %29, %30
  %32 = ashr exact i64 %31, 2
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %56, label %34

34:                                               ; preds = %27
  %35 = icmp ugt i64 %32, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::vector.3"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %37) #13
  unreachable

38:                                               ; preds = %34
  %39 = tail call i8* @_Znwm(i64 %31) #12
  %40 = bitcast i8* %39 to i32*
  %41 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %42 = bitcast i32** %41 to i8**
  store i8* %39, i8** %42, align 8
  %43 = bitcast %"class.std::__1::vector.3"* %4 to i8**
  store i8* %39, i8** %43, align 8
  %44 = getelementptr inbounds i32, i32* %40, i64 %32
  %45 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %44, i32** %45, align 8
  %46 = bitcast i32** %41 to i64*
  %47 = ptrtoint i8* %39 to i64
  %48 = icmp sgt i64 %31, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %38
  %50 = lshr exact i64 %31, 2
  %51 = bitcast i32* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %39, i8* align 4 %51, i64 %31, i1 false) #11
  %52 = getelementptr inbounds i32, i32* %40, i64 %50
  %53 = ptrtoint i32* %52 to i64
  br label %54

54:                                               ; preds = %49, %38
  %55 = phi i64 [ %53, %49 ], [ %47, %38 ]
  store i64 %55, i64* %46, align 8
  br label %56

56:                                               ; preds = %27, %54
  %57 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %0, %"class.spvtools::opt::analysis::Type"* %1, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %4) #11
  %58 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = icmp eq i32* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %56
  %62 = ptrtoint i32* %59 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %64 = bitcast i32** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = bitcast i32* %59 to i8*
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %56, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret %"class.spvtools::opt::analysis::Constant"* %57
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3opt12_GLOBAL__N_120EncodeIntegerAsWordsERKNS0_8analysis4TypeEj(%"class.spvtools::utils::SmallVector"* noalias sret, %"class.spvtools::opt::analysis::Type"* dereferenceable(40), i32) unnamed_addr #0 {
  %4 = bitcast %"class.spvtools::opt::analysis::Type"* %1 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %5 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %5, i64 11
  %7 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %6, align 8
  %8 = tail call %"class.spvtools::opt::analysis::Integer"* %7(%"class.spvtools::opt::analysis::Type"* %1) #11
  %9 = icmp eq %"class.spvtools::opt::analysis::Integer"* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %8, i64 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !15
  %15 = icmp ne i8 %14, 0
  %16 = icmp slt i32 %2, 0
  %17 = and i1 %16, %15
  %18 = sext i1 %17 to i32
  %19 = icmp ult i32 %12, 32
  br i1 %19, label %28, label %43

20:                                               ; preds = %3
  %21 = bitcast %"class.spvtools::opt::analysis::Type"* %1 to %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)***
  %22 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %22, i64 9
  %24 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %23, align 8
  %25 = tail call %"class.spvtools::opt::analysis::Bool"* %24(%"class.spvtools::opt::analysis::Type"* %1) #11
  %26 = icmp ne %"class.spvtools::opt::analysis::Bool"* %25, null
  %27 = zext i1 %26 to i32
  br label %37

28:                                               ; preds = %10
  br i1 %15, label %29, label %37

29:                                               ; preds = %28
  %30 = add nsw i32 %12, -1
  %31 = shl i32 1, %30
  %32 = and i32 %31, %2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = shl i32 -1, %12
  %36 = or i32 %35, %2
  br label %43

37:                                               ; preds = %20, %28, %29
  %38 = phi i32 [ %12, %29 ], [ %27, %20 ], [ %12, %28 ]
  %39 = phi i32 [ %18, %29 ], [ 0, %20 ], [ %18, %28 ]
  %40 = shl i32 -1, %38
  %41 = xor i32 %40, -1
  %42 = and i32 %41, %2
  br label %43

43:                                               ; preds = %34, %37, %10
  %44 = phi i32 [ %12, %10 ], [ %12, %34 ], [ %38, %37 ]
  %45 = phi i32 [ %18, %10 ], [ %18, %34 ], [ %39, %37 ]
  %46 = phi i32 [ %2, %10 ], [ %36, %34 ], [ %42, %37 ]
  %47 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 -86, i64 32, i1 false)
  %48 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %50 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %51 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 3, i64 0
  %52 = bitcast i32** %50 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %51, %"struct.std::__1::aligned_storage<4, 4>::type"** %52, align 8
  %53 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %54 = bitcast %"class.std::__1::unique_ptr.0"* %53 to i64*
  store i64 0, i64* %54, align 8
  %55 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %51 to i32*
  store i64 1, i64* %49, align 8
  store i32 %46, i32* %55, align 8
  %56 = icmp ugt i32 %44, 32
  br i1 %56, label %57, label %150

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %59

59:                                               ; preds = %148, %57
  %60 = phi %"class.std::__1::vector.3"* [ null, %57 ], [ %149, %148 ]
  %61 = phi i32 [ 32, %57 ], [ %146, %148 ]
  %62 = icmp eq %"class.std::__1::vector.3"* %60, null
  br i1 %62, label %63, label %71

63:                                               ; preds = %59
  %64 = load i64, i64* %49, align 8
  %65 = icmp eq i64 %64, 2
  br i1 %65, label %66, label %139

66:                                               ; preds = %63
  call void @_ZN8spvtools5utils11SmallVectorIjLm2EE15MoveToLargeDataEv(%"class.spvtools::utils::SmallVector"* %0) #11
  %67 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %58, align 8
  %68 = icmp eq %"class.std::__1::vector.3"* %67, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = load i64, i64* %49, align 8
  br label %139

71:                                               ; preds = %66, %59
  %72 = phi %"class.std::__1::vector.3"* [ %67, %66 ], [ %60, %59 ]
  %73 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 1
  %74 = load i32*, i32** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 2, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = icmp eq i32* %74, %76
  %78 = ptrtoint i32* %76 to i64
  br i1 %77, label %83, label %79

79:                                               ; preds = %71
  store i32 %45, i32* %74, align 4
  %80 = getelementptr inbounds i32, i32* %74, i64 1
  %81 = ptrtoint i32* %80 to i64
  %82 = bitcast i32** %73 to i64*
  store i64 %81, i64* %82, align 8
  br label %145

83:                                               ; preds = %71
  %84 = ptrtoint i32* %74 to i64
  %85 = bitcast i32** %73 to i64*
  %86 = bitcast %"class.std::__1::vector.3"* %72 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %84, %87
  %89 = ashr exact i64 %88, 2
  %90 = add nsw i64 %89, 1
  %91 = icmp ugt i64 %90, 4611686018427387903
  br i1 %91, label %92, label %94

92:                                               ; preds = %83
  %93 = bitcast %"class.std::__1::vector.3"* %72 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %93) #13
  unreachable

94:                                               ; preds = %83
  %95 = bitcast i32** %75 to i64*
  %96 = sub i64 %78, %87
  %97 = ashr exact i64 %96, 2
  %98 = icmp ult i64 %97, 2305843009213693951
  br i1 %98, label %99, label %107

99:                                               ; preds = %94
  %100 = ashr exact i64 %96, 1
  %101 = icmp ult i64 %100, %90
  %102 = select i1 %101, i64 %90, i64 %100
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %112, label %104

104:                                              ; preds = %99
  %105 = icmp ugt i64 %102, 4611686018427387903
  br i1 %105, label %106, label %107

106:                                              ; preds = %104
  call void @abort() #13
  unreachable

107:                                              ; preds = %104, %94
  %108 = phi i64 [ %102, %104 ], [ 4611686018427387903, %94 ]
  %109 = shl i64 %108, 2
  %110 = call i8* @_Znwm(i64 %109) #12
  %111 = bitcast i8* %110 to i32*
  br label %112

112:                                              ; preds = %107, %99
  %113 = phi i64 [ %108, %107 ], [ 0, %99 ]
  %114 = phi i32* [ %111, %107 ], [ null, %99 ]
  %115 = getelementptr inbounds i32, i32* %114, i64 %89
  %116 = getelementptr inbounds i32, i32* %114, i64 %113
  %117 = ptrtoint i32* %116 to i64
  store i32 %45, i32* %115, align 4
  %118 = getelementptr inbounds i32, i32* %115, i64 1
  %119 = ptrtoint i32* %118 to i64
  %120 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 0
  %121 = load i32*, i32** %120, align 8
  %122 = load i64, i64* %85, align 8
  %123 = ptrtoint i32* %121 to i64
  %124 = sub i64 %122, %123
  %125 = ashr exact i64 %124, 2
  %126 = sub nsw i64 0, %125
  %127 = getelementptr inbounds i32, i32* %115, i64 %126
  %128 = ptrtoint i32* %127 to i64
  %129 = icmp sgt i64 %124, 0
  br i1 %129, label %130, label %134

130:                                              ; preds = %112
  %131 = bitcast i32* %127 to i8*
  %132 = bitcast i32* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %131, i8* align 4 %132, i64 %124, i1 false) #11
  %133 = load i32*, i32** %120, align 8
  br label %134

134:                                              ; preds = %130, %112
  %135 = phi i32* [ %121, %112 ], [ %133, %130 ]
  store i64 %128, i64* %86, align 8
  store i64 %119, i64* %85, align 8
  store i64 %117, i64* %95, align 8
  %136 = icmp eq i32* %135, null
  br i1 %136, label %145, label %137

137:                                              ; preds = %134
  %138 = bitcast i32* %135 to i8*
  call void @_ZdlPv(i8* %138) #12
  br label %145

139:                                              ; preds = %69, %63
  %140 = phi i64 [ %70, %69 ], [ %64, %63 ]
  %141 = load i32*, i32** %50, align 8
  %142 = getelementptr inbounds i32, i32* %141, i64 %140
  store i32 %45, i32* %142, align 4
  %143 = load i64, i64* %49, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %49, align 8
  br label %145

145:                                              ; preds = %137, %134, %79, %139
  %146 = add i32 %61, 32
  %147 = icmp ult i32 %146, %44
  br i1 %147, label %148, label %150

148:                                              ; preds = %145
  %149 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %58, align 8
  br label %59

150:                                              ; preds = %145, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

declare void @_ZNK8spvtools3opt17InstructionFolder11FoldVectorsE6SpvOp_jRKNSt3__16vectorIPKNS0_8analysis8ConstantENS3_9allocatorIS8_EEEE(%"class.std::__1::vector.3"* sret, %"class.spvtools::opt::InstructionFolder"*, i32, i32, %"class.std::__1::vector.802"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt34FoldSpecConstantOpAndCompositePassD0Ev(%"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass", %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass", %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass", %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt34FoldSpecConstantOpAndCompositePass4nameEv(%"class.spvtools::opt::FoldSpecConstantOpAndCompositePass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.460"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.460"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.460"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.460"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::analysis::Constant"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::analysis::Constant"* %15 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %19 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::analysis::Constant"* nonnull %15) #11
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.460"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.458"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.460"* %4, %"class.std::__1::unique_ptr.460"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.441"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"struct.std::__1::__hash_node_base.441"* [ %36, %33 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %35, align 8
  %37 = bitcast %"struct.std::__1::__hash_node_base.441"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  %38 = icmp eq %"struct.std::__1::__hash_node_base.441"* %36, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %29
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  store %"struct.std::__1::__hash_node_base.441"** null, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.441"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.std::__1::__hash_node_base.441"** %41 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node"**
  %49 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %46, %"class.std::__1::__tree_node"* %49) #11
  %50 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.408"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %45, %53
  %54 = phi %"struct.std::__1::__hash_node_base.408"* [ %56, %53 ], [ %51, %45 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %55, align 8
  %57 = bitcast %"struct.std::__1::__hash_node_base.408"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  %58 = icmp eq %"struct.std::__1::__hash_node_base.408"* %56, null
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %45
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  store %"struct.std::__1::__hash_node_base.408"** null, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.408"** %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.std::__1::__hash_node_base.408"** %61 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %59, %63
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.408"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPKN8spvtools3opt8analysis8ConstantEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIjJNS_4pairIKjS7_EEEEENSL_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.404"*, i32* dereferenceable(4), %"struct.std::__1::pair.927"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.404", %"class.std::__1::__hash_table.404"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !19
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.404", %"class.std::__1::__hash_table.404"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.408"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.408"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.408"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.408"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.408"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %139, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 32) #12, !noalias !101
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast %"struct.std::__1::pair.927"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #11, !noalias !101
  %58 = getelementptr inbounds i8, i8* %55, i64 8
  %59 = bitcast i8* %58 to i64*
  store i64 %5, i64* %59, align 8, !noalias !101
  %60 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.408"**
  store %"struct.std::__1::__hash_node_base.408"* null, %"struct.std::__1::__hash_node_base.408"** %60, align 8, !noalias !101
  %61 = getelementptr inbounds %"class.std::__1::__hash_table.404", %"class.std::__1::__hash_table.404"* %0, i64 0, i32 2, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1
  %64 = uitofp i64 %63 to float
  %65 = uitofp i64 %7 to float
  %66 = getelementptr inbounds %"class.std::__1::__hash_table.404", %"class.std::__1::__hash_table.404"* %0, i64 0, i32 3, i32 0, i32 0
  %67 = load float, float* %66, align 4
  %68 = fmul float %67, %65
  %69 = fcmp olt float %68, %64
  %70 = or i1 %8, %69
  br i1 %70, label %71, label %94

71:                                               ; preds = %53
  %72 = shl i64 %7, 1
  %73 = icmp ult i64 %7, 3
  %74 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !19
  %75 = icmp ugt i64 %74, 1
  %76 = or i1 %73, %75
  %77 = zext i1 %76 to i64
  %78 = or i64 %72, %77
  %79 = fdiv float %64, %67
  %80 = tail call float @llvm.ceil.f32(float %79) #11
  %81 = fptoui float %80 to i64
  %82 = icmp ult i64 %78, %81
  %83 = select i1 %82, i64 %81, i64 %78
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPKN8spvtools3opt8analysis8ConstantEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.404"* %0, i64 %83)
  %84 = load i64, i64* %6, align 8
  %85 = tail call i64 @llvm.ctpop.i64(i64 %84) #11, !range !19
  %86 = icmp ugt i64 %85, 1
  br i1 %86, label %90, label %87

87:                                               ; preds = %71
  %88 = add i64 %84, 4294967295
  %89 = and i64 %88, %5
  br label %94

90:                                               ; preds = %71
  %91 = icmp ugt i64 %84, %5
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = urem i64 %5, %84
  br label %94

94:                                               ; preds = %92, %90, %87, %53
  %95 = phi i64 [ %7, %53 ], [ %84, %87 ], [ %84, %90 ], [ %84, %92 ]
  %96 = phi i64 [ %54, %53 ], [ %89, %87 ], [ %5, %90 ], [ %93, %92 ]
  %97 = getelementptr inbounds %"class.std::__1::__hash_table.404", %"class.std::__1::__hash_table.404"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %97, align 8
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %98, i64 %96
  %100 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.408"* %100, null
  br i1 %101, label %102, label %128

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.std::__1::__hash_table.404", %"class.std::__1::__hash_table.404"* %0, i64 0, i32 1, i32 0, i32 0
  %104 = bitcast %"struct.std::__1::__hash_node_base.408"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast i8* %55 to i64*
  store i64 %105, i64* %106, align 8
  %107 = bitcast %"struct.std::__1::__hash_node_base.408"* %103 to i8**
  store i8* %55, i8** %107, align 8
  store %"struct.std::__1::__hash_node_base.408"* %103, %"struct.std::__1::__hash_node_base.408"** %99, align 8
  %108 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %60, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.408"* %108, null
  br i1 %109, label %135, label %110

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %108, i64 1
  %112 = bitcast %"struct.std::__1::__hash_node_base.408"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = tail call i64 @llvm.ctpop.i64(i64 %95) #11, !range !19
  %115 = icmp ugt i64 %114, 1
  br i1 %115, label %119, label %116

116:                                              ; preds = %110
  %117 = add i64 %95, -1
  %118 = and i64 %113, %117
  br label %123

119:                                              ; preds = %110
  %120 = icmp ult i64 %113, %95
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = urem i64 %113, %95
  br label %123

123:                                              ; preds = %116, %119, %121
  %124 = phi i64 [ %118, %116 ], [ %122, %121 ], [ %113, %119 ]
  %125 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %97, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %125, i64 %124
  %127 = bitcast %"struct.std::__1::__hash_node_base.408"** %126 to i8**
  br label %133

128:                                              ; preds = %94
  %129 = bitcast %"struct.std::__1::__hash_node_base.408"* %100 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast i8* %55 to i64*
  store i64 %130, i64* %131, align 8
  %132 = bitcast %"struct.std::__1::__hash_node_base.408"* %100 to i8**
  br label %133

133:                                              ; preds = %123, %128
  %134 = phi i8** [ %132, %128 ], [ %127, %123 ]
  store i8* %55, i8** %134, align 8
  br label %135

135:                                              ; preds = %133, %102
  %136 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.408"*
  %137 = load i64, i64* %61, align 8
  %138 = add i64 %137, 1
  store i64 %138, i64* %61, align 8
  br label %139

139:                                              ; preds = %48, %135
  %140 = phi i8 [ 1, %135 ], [ 0, %48 ]
  %141 = phi %"struct.std::__1::__hash_node_base.408"* [ %136, %135 ], [ %31, %48 ]
  %142 = insertvalue { %"struct.std::__1::__hash_node_base.408"*, i8 } undef, %"struct.std::__1::__hash_node_base.408"* %141, 0
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.408"*, i8 } %142, i8 %140, 1
  ret { %"struct.std::__1::__hash_node_base.408"*, i8 } %143
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPKN8spvtools3opt8analysis8ConstantEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.404"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !19
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.404", %"class.std::__1::__hash_table.404"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPKN8spvtools3opt8analysis8ConstantEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.404"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !19
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.404", %"class.std::__1::__hash_table.404"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.404", %"class.std::__1::__hash_table.404"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !19
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPKN8spvtools3opt8analysis8ConstantEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.404"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPKN8spvtools3opt8analysis8ConstantEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.404"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.404", %"class.std::__1::__hash_table.404"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.404", %"class.std::__1::__hash_table.404"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.404"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.408"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.408"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.410", %"class.std::__1::__bucket_list_deallocator.410"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.408"* null, %"struct.std::__1::__hash_node_base.408"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !104

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.404", %"class.std::__1::__hash_table.404"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.408"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.408"* null, %"struct.std::__1::__hash_node_base.408"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.408"* null, %"struct.std::__1::__hash_node_base.408"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.408"* null, %"struct.std::__1::__hash_node_base.408"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.408"* null, %"struct.std::__1::__hash_node_base.408"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.408"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !19
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.408"* %36, %"struct.std::__1::__hash_node_base.408"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.408"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.408"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.408"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.408"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.408"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.408"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.408"* %82, %"struct.std::__1::__hash_node_base.408"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.408"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.408"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.408"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.408"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.408"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.408"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.408"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.408"* %80, %"struct.std::__1::__hash_node_base.408"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.408"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.408"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.404", %"class.std::__1::__hash_table.404"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.408"** null, %"struct.std::__1::__hash_node_base.408"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.408"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.408"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.410", %"class.std::__1::__bucket_list_deallocator.410"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !15
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !15
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !15
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node.943"**
  %34 = load %"class.std::__1::__tree_node.943"*, %"class.std::__1::__tree_node.943"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node.943"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.943"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.943"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.943"* %1 to %"class.std::__1::__tree_node.943"**
  %6 = load %"class.std::__1::__tree_node.943"*, %"class.std::__1::__tree_node.943"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.943"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.943", %"class.std::__1::__tree_node.943"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.943"**
  %9 = load %"class.std::__1::__tree_node.943"*, %"class.std::__1::__tree_node.943"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.943"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.943"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.441"*, i8 } @_ZNSt3__112__hash_tableIPKN8spvtools3opt8analysis8ConstantENS3_12ConstantHashENS3_13ConstantEqualENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.437"*, %"class.spvtools::opt::analysis::Constant"** dereferenceable(8), %"class.spvtools::opt::analysis::Constant"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::__compressed_pair.453"* %4 to %"struct.spvtools::opt::analysis::ConstantHash"*
  %6 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, align 8
  %7 = tail call i64 @_ZNK8spvtools3opt8analysis12ConstantHashclEPKNS1_8ConstantE(%"struct.spvtools::opt::analysis::ConstantHash"* %5, %"class.spvtools::opt::analysis::Constant"* %6)
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %58, label %11

11:                                               ; preds = %3
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !19
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, -1
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ult i64 %7, %9
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.441"* %26, null
  br i1 %27, label %58, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 3
  %31 = bitcast %"class.std::__1::__compressed_pair.455"* %30 to %"struct.spvtools::opt::analysis::ConstantEqual"*
  br label %32

32:                                               ; preds = %28, %52
  %33 = phi %"struct.std::__1::__hash_node_base.441"* [ %35, %52 ], [ %26, %28 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %33, i64 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.441"* %35, null
  br i1 %36, label %58, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %35, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base.441"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %7
  br i1 %41, label %52, label %42

42:                                               ; preds = %37
  br i1 %13, label %45, label %43

43:                                               ; preds = %42
  %44 = and i64 %40, %29
  br label %49

45:                                               ; preds = %42
  %46 = icmp ult i64 %40, %9
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %40, %9
  br label %49

49:                                               ; preds = %43, %45, %47
  %50 = phi i64 [ %44, %43 ], [ %48, %47 ], [ %40, %45 ]
  %51 = icmp eq i64 %50, %22
  br i1 %51, label %52, label %58

52:                                               ; preds = %37, %49
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %35, i64 2
  %54 = bitcast %"struct.std::__1::__hash_node_base.441"* %53 to %"class.spvtools::opt::analysis::Constant"**
  %55 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %54, align 8
  %56 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %1, align 8
  %57 = tail call zeroext i1 @_ZNK8spvtools3opt8analysis13ConstantEqualclEPKNS1_8ConstantES5_(%"struct.spvtools::opt::analysis::ConstantEqual"* %31, %"class.spvtools::opt::analysis::Constant"* %55, %"class.spvtools::opt::analysis::Constant"* %56)
  br i1 %57, label %146, label %32

58:                                               ; preds = %32, %49, %21, %3
  %59 = phi i64 [ %22, %21 ], [ -6148914691236517206, %3 ], [ %22, %49 ], [ %22, %32 ]
  %60 = tail call i8* @_Znwm(i64 24) #12, !noalias !105
  %61 = getelementptr inbounds i8, i8* %60, i64 16
  %62 = bitcast %"class.spvtools::opt::analysis::Constant"** %2 to i64*
  %63 = load i64, i64* %62, align 8, !noalias !105
  %64 = bitcast i8* %61 to i64*
  store i64 %63, i64* %64, align 8, !noalias !105
  %65 = getelementptr inbounds i8, i8* %60, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !105
  %67 = bitcast i8* %60 to %"struct.std::__1::__hash_node_base.441"**
  store %"struct.std::__1::__hash_node_base.441"* null, %"struct.std::__1::__hash_node_base.441"** %67, align 8, !noalias !105
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %58
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !19
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableIPKN8spvtools3opt8analysis8ConstantENS3_12ConstantHashENS3_13ConstantEqualENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.437"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !19
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, -1
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ult i64 %7, %91
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %58
  %102 = phi i64 [ %9, %58 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %59, %58 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.441"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.441"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %60 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.441"* %110 to i8**
  store i8* %60, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.441"* %110, %"struct.std::__1::__hash_node_base.441"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.441"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.441"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !19
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.441"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.441"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %60 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.441"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %60, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %60 to %"struct.std::__1::__hash_node_base.441"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %52, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %52 ]
  %148 = phi %"struct.std::__1::__hash_node_base.441"* [ %143, %142 ], [ %35, %52 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.441"*, i8 } undef, %"struct.std::__1::__hash_node_base.441"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.441"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.441"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK8spvtools3opt8analysis12ConstantHashclEPKNS1_8ConstantE(%"struct.spvtools::opt::analysis::ConstantHash"*, %"class.spvtools::opt::analysis::Constant"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = alloca %"class.std::__1::basic_string.967", align 8
  %5 = bitcast %"class.std::__1::basic_string.967"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.std::__1::basic_string.967", %"class.std::__1::basic_string.967"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string.967", %"class.std::__1::basic_string.967"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::basic_string.967", %"class.std::__1::basic_string.967"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #11
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %1, i64 0, i32 1
  %10 = bitcast %"class.spvtools::opt::analysis::Type"** %9 to i8**
  %11 = load i8*, i8** %10, align 8
  call void @_ZNK8spvtools3opt8analysis12ConstantHash11add_pointerEPNSt3__112basic_stringIDiNS3_11char_traitsIDiEENS3_9allocatorIDiEEEEPKv(%"struct.spvtools::opt::analysis::ConstantHash"* %0, %"class.std::__1::basic_string.967"* nonnull %4, i8* %11)
  %12 = bitcast %"class.spvtools::opt::analysis::Constant"* %1 to %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %13 = load %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %13, i64 13
  %15 = load %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %14, align 8
  %16 = call %"class.spvtools::opt::analysis::ScalarConstant"* %15(%"class.spvtools::opt::analysis::Constant"* %1) #11
  %17 = icmp eq %"class.spvtools::opt::analysis::ScalarConstant"* %16, null
  br i1 %17, label %65, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.spvtools::opt::analysis::ScalarConstant"* %16 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %20 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %20, i64 24
  %22 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %21, align 8
  %23 = call dereferenceable(24) %"class.std::__1::vector.3"* %22(%"class.spvtools::opt::analysis::ScalarConstant"* nonnull %16) #11
  %24 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %23, i64 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %23, i64 0, i32 0, i32 1
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %25, %27
  br i1 %28, label %127, label %29

29:                                               ; preds = %18
  %30 = bitcast %"class.std::__1::basic_string.967"* %4 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %30, i64 0, i32 1, i32 1
  %32 = bitcast %"class.std::__1::basic_string.967"* %4 to i32*
  br label %33

33:                                               ; preds = %29, %59
  %34 = phi i32* [ %25, %29 ], [ %63, %59 ]
  %35 = load i32, i32* %34, align 4
  %36 = load i8, i8* %31, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  %39 = zext i8 %36 to i64
  br label %45

40:                                               ; preds = %33
  %41 = load i64, i64* %8, align 8
  %42 = and i64 %41, 9223372036854775807
  %43 = add nsw i64 %42, -1
  %44 = load i64, i64* %7, align 8
  br label %45

45:                                               ; preds = %40, %38
  %46 = phi i64 [ 4, %38 ], [ %43, %40 ]
  %47 = phi i64 [ %39, %38 ], [ %44, %40 ]
  %48 = icmp eq i64 %47, %46
  br i1 %48, label %49, label %52

49:                                               ; preds = %45
  call void @_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.967"* nonnull %4, i64 %46, i64 1, i64 %46, i64 %46, i64 0, i64 0) #11
  %50 = load i8, i8* %31, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %56, label %53

52:                                               ; preds = %45
  br i1 %37, label %56, label %53

53:                                               ; preds = %52, %49
  %54 = trunc i64 %47 to i8
  %55 = add i8 %54, 1
  store i8 %55, i8* %31, align 1
  br label %59

56:                                               ; preds = %52, %49
  %57 = load i32*, i32** %6, align 8
  %58 = add i64 %47, 1
  store i64 %58, i64* %7, align 8
  br label %59

59:                                               ; preds = %53, %56
  %60 = phi i32* [ %32, %53 ], [ %57, %56 ]
  %61 = getelementptr inbounds i32, i32* %60, i64 %47
  store i32 %35, i32* %61, align 4
  %62 = getelementptr inbounds i32, i32* %61, i64 1
  store i32 0, i32* %62, align 4
  %63 = getelementptr inbounds i32, i32* %34, i64 1
  %64 = icmp eq i32* %63, %27
  br i1 %64, label %127, label %33

65:                                               ; preds = %2
  %66 = bitcast %"class.spvtools::opt::analysis::Constant"* %1 to %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %67 = load %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %67, i64 17
  %69 = load %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %68, align 8
  %70 = call %"class.spvtools::opt::analysis::CompositeConstant"* %69(%"class.spvtools::opt::analysis::Constant"* %1) #11
  %71 = icmp eq %"class.spvtools::opt::analysis::CompositeConstant"* %70, null
  br i1 %71, label %89, label %72

72:                                               ; preds = %65
  %73 = bitcast %"class.spvtools::opt::analysis::CompositeConstant"* %70 to %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)***
  %74 = load %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)**, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)** %74, i64 24
  %76 = load %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)** %75, align 8
  %77 = call dereferenceable(24) %"class.std::__1::vector.802"* %76(%"class.spvtools::opt::analysis::CompositeConstant"* nonnull %70) #11
  %78 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %77, i64 0, i32 0, i32 0
  %79 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %77, i64 0, i32 0, i32 1
  %81 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %80, align 8
  %82 = icmp eq %"class.spvtools::opt::analysis::Constant"** %79, %81
  br i1 %82, label %127, label %83

83:                                               ; preds = %72, %83
  %84 = phi %"class.spvtools::opt::analysis::Constant"** [ %87, %83 ], [ %79, %72 ]
  %85 = bitcast %"class.spvtools::opt::analysis::Constant"** %84 to i8**
  %86 = load i8*, i8** %85, align 8
  call void @_ZNK8spvtools3opt8analysis12ConstantHash11add_pointerEPNSt3__112basic_stringIDiNS3_11char_traitsIDiEENS3_9allocatorIDiEEEEPKv(%"struct.spvtools::opt::analysis::ConstantHash"* %0, %"class.std::__1::basic_string.967"* nonnull %4, i8* %86)
  %87 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %84, i64 1
  %88 = icmp eq %"class.spvtools::opt::analysis::Constant"** %87, %81
  br i1 %88, label %127, label %83

89:                                               ; preds = %65
  %90 = bitcast %"class.spvtools::opt::analysis::Constant"* %1 to %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %91 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %90, align 8
  %92 = getelementptr inbounds %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %91, i64 22
  %93 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %92, align 8
  %94 = call %"class.spvtools::opt::analysis::NullConstant"* %93(%"class.spvtools::opt::analysis::Constant"* %1) #11
  %95 = icmp eq %"class.spvtools::opt::analysis::NullConstant"* %94, null
  br i1 %95, label %127, label %96

96:                                               ; preds = %89
  %97 = bitcast %"class.std::__1::basic_string.967"* %4 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %97, i64 0, i32 1, i32 1
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %96
  %102 = zext i8 %99 to i64
  br label %108

103:                                              ; preds = %96
  %104 = load i64, i64* %8, align 8
  %105 = and i64 %104, 9223372036854775807
  %106 = add nsw i64 %105, -1
  %107 = load i64, i64* %7, align 8
  br label %108

108:                                              ; preds = %103, %101
  %109 = phi i64 [ 4, %101 ], [ %106, %103 ]
  %110 = phi i64 [ %102, %101 ], [ %107, %103 ]
  %111 = icmp eq i64 %110, %109
  br i1 %111, label %112, label %115

112:                                              ; preds = %108
  call void @_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.967"* nonnull %4, i64 %109, i64 1, i64 %109, i64 %109, i64 0, i64 0) #11
  %113 = load i8, i8* %98, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %120, label %116

115:                                              ; preds = %108
  br i1 %100, label %120, label %116

116:                                              ; preds = %115, %112
  %117 = bitcast %"class.std::__1::basic_string.967"* %4 to i32*
  %118 = trunc i64 %110 to i8
  %119 = add i8 %118, 1
  store i8 %119, i8* %98, align 1
  br label %123

120:                                              ; preds = %115, %112
  %121 = load i32*, i32** %6, align 8
  %122 = add i64 %110, 1
  store i64 %122, i64* %7, align 8
  br label %123

123:                                              ; preds = %116, %120
  %124 = phi i32* [ %117, %116 ], [ %121, %120 ]
  %125 = getelementptr inbounds i32, i32* %124, i64 %110
  store i32 0, i32* %125, align 4
  %126 = getelementptr inbounds i32, i32* %125, i64 1
  store i32 0, i32* %126, align 4
  br label %127

127:                                              ; preds = %59, %83, %18, %72, %123, %89
  %128 = bitcast %"class.std::__1::basic_string.967"* %4 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %128, i64 0, i32 1, i32 1
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  %132 = load i32*, i32** %6, align 8
  %133 = load i64, i64* %7, align 8
  %134 = bitcast %"class.std::__1::basic_string.967"* %4 to i32*
  %135 = zext i8 %130 to i64
  %136 = select i1 %131, i32* %132, i32* %134
  %137 = select i1 %131, i64 %133, i64 %135
  %138 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %138) #11
  %139 = bitcast i32* %136 to i8*
  %140 = shl nuw i64 %137, 2
  %141 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %139, i64 %140) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %138) #11
  %142 = load i8, i8* %129, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %127
  %145 = bitcast %"class.std::__1::basic_string.967"* %4 to i8**
  %146 = load i8*, i8** %145, align 8
  call void @_ZdlPv(i8* %146) #12
  br label %147

147:                                              ; preds = %127, %144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret i64 %141
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis13ConstantEqualclEPKNS1_8ConstantES5_(%"struct.spvtools::opt::analysis::ConstantEqual"*, %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %1, i64 0, i32 1
  %5 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %2, i64 0, i32 1
  %7 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %6, align 8
  %8 = icmp eq %"class.spvtools::opt::analysis::Type"* %5, %7
  br i1 %8, label %9, label %131

9:                                                ; preds = %3
  %10 = bitcast %"class.spvtools::opt::analysis::Constant"* %1 to %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %11 = load %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %11, i64 13
  %13 = load %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %12, align 8
  %14 = tail call %"class.spvtools::opt::analysis::ScalarConstant"* %13(%"class.spvtools::opt::analysis::Constant"* %1) #11
  %15 = icmp eq %"class.spvtools::opt::analysis::ScalarConstant"* %14, null
  br i1 %15, label %63, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.spvtools::opt::analysis::Constant"* %2 to %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %18 = load %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %18, i64 13
  %20 = load %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %19, align 8
  %21 = tail call %"class.spvtools::opt::analysis::ScalarConstant"* %20(%"class.spvtools::opt::analysis::Constant"* %2) #11
  %22 = icmp eq %"class.spvtools::opt::analysis::ScalarConstant"* %21, null
  br i1 %22, label %131, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.spvtools::opt::analysis::ScalarConstant"* %14 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %25 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %25, i64 24
  %27 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %26, align 8
  %28 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %27(%"class.spvtools::opt::analysis::ScalarConstant"* nonnull %14) #11
  %29 = bitcast %"class.spvtools::opt::analysis::ScalarConstant"* %21 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %30 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %30, i64 24
  %32 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %31, align 8
  %33 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %32(%"class.spvtools::opt::analysis::ScalarConstant"* nonnull %21) #11
  %34 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %28, i64 0, i32 0, i32 1
  %35 = bitcast i32** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.3"* %28 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %33, i64 0, i32 0, i32 1
  %41 = bitcast i32** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector.3"* %33 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = icmp eq i64 %39, %45
  %47 = inttoptr i64 %38 to i32*
  %48 = inttoptr i64 %36 to i32*
  br i1 %46, label %49, label %131

49:                                               ; preds = %23
  %50 = icmp eq i32* %47, %48
  br i1 %50, label %131, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %44 to i32*
  br label %53

53:                                               ; preds = %51, %59
  %54 = phi i32* [ %61, %59 ], [ %52, %51 ]
  %55 = phi i32* [ %60, %59 ], [ %47, %51 ]
  %56 = load i32, i32* %55, align 4
  %57 = load i32, i32* %54, align 4
  %58 = icmp eq i32 %56, %57
  br i1 %58, label %59, label %131

59:                                               ; preds = %53
  %60 = getelementptr inbounds i32, i32* %55, i64 1
  %61 = getelementptr inbounds i32, i32* %54, i64 1
  %62 = icmp eq i32* %60, %48
  br i1 %62, label %131, label %53

63:                                               ; preds = %9
  %64 = bitcast %"class.spvtools::opt::analysis::Constant"* %1 to %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %65 = load %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %65, i64 17
  %67 = load %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %66, align 8
  %68 = tail call %"class.spvtools::opt::analysis::CompositeConstant"* %67(%"class.spvtools::opt::analysis::Constant"* %1) #11
  %69 = icmp eq %"class.spvtools::opt::analysis::CompositeConstant"* %68, null
  br i1 %69, label %117, label %70

70:                                               ; preds = %63
  %71 = bitcast %"class.spvtools::opt::analysis::Constant"* %2 to %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %72 = load %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %71, align 8
  %73 = getelementptr inbounds %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %72, i64 17
  %74 = load %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::CompositeConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %73, align 8
  %75 = tail call %"class.spvtools::opt::analysis::CompositeConstant"* %74(%"class.spvtools::opt::analysis::Constant"* %2) #11
  %76 = icmp eq %"class.spvtools::opt::analysis::CompositeConstant"* %75, null
  br i1 %76, label %131, label %77

77:                                               ; preds = %70
  %78 = bitcast %"class.spvtools::opt::analysis::CompositeConstant"* %68 to %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)***
  %79 = load %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)**, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)** %79, i64 24
  %81 = load %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)** %80, align 8
  %82 = tail call dereferenceable(24) %"class.std::__1::vector.802"* %81(%"class.spvtools::opt::analysis::CompositeConstant"* nonnull %68) #11
  %83 = bitcast %"class.spvtools::opt::analysis::CompositeConstant"* %75 to %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)***
  %84 = load %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)**, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)** %84, i64 24
  %86 = load %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)** %85, align 8
  %87 = tail call dereferenceable(24) %"class.std::__1::vector.802"* %86(%"class.spvtools::opt::analysis::CompositeConstant"* nonnull %75) #11
  %88 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %82, i64 0, i32 0, i32 1
  %89 = bitcast %"class.spvtools::opt::analysis::Constant"*** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.std::__1::vector.802"* %82 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = sub i64 %90, %92
  %94 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %87, i64 0, i32 0, i32 1
  %95 = bitcast %"class.spvtools::opt::analysis::Constant"*** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.std::__1::vector.802"* %87 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %96, %98
  %100 = icmp eq i64 %93, %99
  %101 = inttoptr i64 %92 to %"class.spvtools::opt::analysis::Constant"**
  %102 = inttoptr i64 %90 to %"class.spvtools::opt::analysis::Constant"**
  br i1 %100, label %103, label %131

103:                                              ; preds = %77
  %104 = icmp eq %"class.spvtools::opt::analysis::Constant"** %101, %102
  br i1 %104, label %131, label %105

105:                                              ; preds = %103
  %106 = inttoptr i64 %98 to %"class.spvtools::opt::analysis::Constant"**
  br label %107

107:                                              ; preds = %105, %113
  %108 = phi %"class.spvtools::opt::analysis::Constant"** [ %115, %113 ], [ %106, %105 ]
  %109 = phi %"class.spvtools::opt::analysis::Constant"** [ %114, %113 ], [ %101, %105 ]
  %110 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %109, align 8
  %111 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %108, align 8
  %112 = icmp eq %"class.spvtools::opt::analysis::Constant"* %110, %111
  br i1 %112, label %113, label %131

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %109, i64 1
  %115 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %108, i64 1
  %116 = icmp eq %"class.spvtools::opt::analysis::Constant"** %114, %102
  br i1 %116, label %131, label %107

117:                                              ; preds = %63
  %118 = bitcast %"class.spvtools::opt::analysis::Constant"* %1 to %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %119 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %119, i64 22
  %121 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %120, align 8
  %122 = tail call %"class.spvtools::opt::analysis::NullConstant"* %121(%"class.spvtools::opt::analysis::Constant"* %1) #11
  %123 = icmp eq %"class.spvtools::opt::analysis::NullConstant"* %122, null
  br i1 %123, label %131, label %124

124:                                              ; preds = %117
  %125 = bitcast %"class.spvtools::opt::analysis::Constant"* %2 to %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %126 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %125, align 8
  %127 = getelementptr inbounds %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %126, i64 22
  %128 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %127, align 8
  %129 = tail call %"class.spvtools::opt::analysis::NullConstant"* %128(%"class.spvtools::opt::analysis::Constant"* %2) #11
  %130 = icmp ne %"class.spvtools::opt::analysis::NullConstant"* %129, null
  br label %131

131:                                              ; preds = %59, %53, %113, %107, %3, %117, %103, %77, %70, %124, %49, %23, %16
  %132 = phi i1 [ true, %49 ], [ false, %23 ], [ false, %16 ], [ true, %103 ], [ false, %77 ], [ false, %70 ], [ %130, %124 ], [ false, %117 ], [ false, %3 ], [ true, %113 ], [ false, %107 ], [ true, %59 ], [ false, %53 ]
  ret i1 %132
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN8spvtools3opt8analysis8ConstantENS3_12ConstantHashENS3_13ConstantEqualENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.437"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !19
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKN8spvtools3opt8analysis8ConstantENS3_12ConstantHashENS3_13ConstantEqualENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.437"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !19
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !19
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKN8spvtools3opt8analysis8ConstantENS3_12ConstantHashENS3_13ConstantEqualENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.437"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8spvtools3opt8analysis12ConstantHash11add_pointerEPNSt3__112basic_stringIDiNS3_11char_traitsIDiEENS3_9allocatorIDiEEEEPKv(%"struct.spvtools::opt::analysis::ConstantHash"*, %"class.std::__1::basic_string.967"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = lshr i64 %4, 32
  %6 = trunc i64 %5 to i32
  %7 = bitcast %"class.std::__1::basic_string.967"* %1 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = zext i8 %9 to i64
  br label %20

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::basic_string.967", %"class.std::__1::basic_string.967"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 9223372036854775807
  %17 = add nsw i64 %16, -1
  %18 = getelementptr inbounds %"class.std::__1::basic_string.967", %"class.std::__1::basic_string.967"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  br label %20

20:                                               ; preds = %13, %11
  %21 = phi i64 [ 4, %11 ], [ %17, %13 ]
  %22 = phi i64 [ %12, %11 ], [ %19, %13 ]
  %23 = icmp eq i64 %22, %21
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  tail call void @_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.967"* %1, i64 %21, i64 1, i64 %21, i64 %21, i64 0, i64 0) #11
  %25 = load i8, i8* %8, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %32, label %28

27:                                               ; preds = %20
  br i1 %10, label %32, label %28

28:                                               ; preds = %27, %24
  %29 = bitcast %"class.std::__1::basic_string.967"* %1 to i32*
  %30 = trunc i64 %22 to i8
  %31 = add i8 %30, 1
  store i8 %31, i8* %8, align 1
  br label %37

32:                                               ; preds = %27, %24
  %33 = getelementptr inbounds %"class.std::__1::basic_string.967", %"class.std::__1::basic_string.967"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = add i64 %22, 1
  %36 = getelementptr inbounds %"class.std::__1::basic_string.967", %"class.std::__1::basic_string.967"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %35, i64* %36, align 8
  br label %37

37:                                               ; preds = %28, %32
  %38 = phi i32* [ %29, %28 ], [ %34, %32 ]
  %39 = getelementptr inbounds i32, i32* %38, i64 %22
  store i32 %6, i32* %39, align 4
  %40 = getelementptr inbounds i32, i32* %39, i64 1
  store i32 0, i32* %40, align 4
  %41 = trunc i64 %4 to i32
  %42 = load i8, i8* %8, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %37
  %45 = zext i8 %42 to i64
  br label %53

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.std::__1::basic_string.967", %"class.std::__1::basic_string.967"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 9223372036854775807
  %50 = add nsw i64 %49, -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string.967", %"class.std::__1::basic_string.967"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  br label %53

53:                                               ; preds = %46, %44
  %54 = phi i64 [ 4, %44 ], [ %50, %46 ]
  %55 = phi i64 [ %45, %44 ], [ %52, %46 ]
  %56 = icmp eq i64 %55, %54
  br i1 %56, label %57, label %60

57:                                               ; preds = %53
  tail call void @_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.967"* %1, i64 %54, i64 1, i64 %54, i64 %54, i64 0, i64 0) #11
  %58 = load i8, i8* %8, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %65, label %61

60:                                               ; preds = %53
  br i1 %43, label %65, label %61

61:                                               ; preds = %60, %57
  %62 = bitcast %"class.std::__1::basic_string.967"* %1 to i32*
  %63 = trunc i64 %55 to i8
  %64 = add i8 %63, 1
  store i8 %64, i8* %8, align 1
  br label %70

65:                                               ; preds = %60, %57
  %66 = getelementptr inbounds %"class.std::__1::basic_string.967", %"class.std::__1::basic_string.967"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = add i64 %55, 1
  %69 = getelementptr inbounds %"class.std::__1::basic_string.967", %"class.std::__1::basic_string.967"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %68, i64* %69, align 8
  br label %70

70:                                               ; preds = %61, %65
  %71 = phi i32* [ %62, %61 ], [ %67, %65 ]
  %72 = getelementptr inbounds i32, i32* %71, i64 %55
  store i32 %41, i32* %72, align 4
  %73 = getelementptr inbounds i32, i32* %72, i64 1
  store i32 0, i32* %73, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.967"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 4611686018427387887, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string.967"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #13
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string.967"* %0 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string.967", %"class.std::__1::basic_string.967"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string.967"* %0 to i32*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i32* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i32* %23 to i8*
  %25 = icmp ult i64 %1, 2305843009213693927
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 5
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 4
  %34 = and i64 %33, -4
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #13
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 4611686018427387887, %22 ], [ 5, %26 ]
  %39 = shl i64 %38, 2
  %40 = tail call i8* @_Znwm(i64 %39) #12
  %41 = bitcast i8* %40 to i32*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 8
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 2
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i32, i32* %23, i64 %4
  %49 = bitcast i32* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -8
  %55 = sub i64 %4, %54
  %56 = getelementptr i32, i32* %23, i64 %54
  %57 = getelementptr i32, i32* %41, i64 %54
  %58 = add i64 %54, -8
  %59 = lshr exact i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 24
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i32, i32* %23, i64 %66
  %69 = getelementptr i32, i32* %41, i64 %66
  %70 = bitcast i32* %68 to <4 x i32>*
  %71 = load <4 x i32>, <4 x i32>* %70, align 4, !alias.scope !108
  %72 = getelementptr i32, i32* %68, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  %74 = load <4 x i32>, <4 x i32>* %73, align 4, !alias.scope !108
  %75 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %75, align 4, !alias.scope !111, !noalias !108
  %76 = getelementptr i32, i32* %69, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %77, align 4, !alias.scope !111, !noalias !108
  %78 = or i64 %66, 8
  %79 = getelementptr i32, i32* %23, i64 %78
  %80 = getelementptr i32, i32* %41, i64 %78
  %81 = bitcast i32* %79 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4, !alias.scope !108
  %83 = getelementptr i32, i32* %79, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4, !alias.scope !108
  %86 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %82, <4 x i32>* %86, align 4, !alias.scope !111, !noalias !108
  %87 = getelementptr i32, i32* %80, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %88, align 4, !alias.scope !111, !noalias !108
  %89 = or i64 %66, 16
  %90 = getelementptr i32, i32* %23, i64 %89
  %91 = getelementptr i32, i32* %41, i64 %89
  %92 = bitcast i32* %90 to <4 x i32>*
  %93 = load <4 x i32>, <4 x i32>* %92, align 4, !alias.scope !108
  %94 = getelementptr i32, i32* %90, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  %96 = load <4 x i32>, <4 x i32>* %95, align 4, !alias.scope !108
  %97 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4, !alias.scope !111, !noalias !108
  %98 = getelementptr i32, i32* %91, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %96, <4 x i32>* %99, align 4, !alias.scope !111, !noalias !108
  %100 = or i64 %66, 24
  %101 = getelementptr i32, i32* %23, i64 %100
  %102 = getelementptr i32, i32* %41, i64 %100
  %103 = bitcast i32* %101 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !108
  %105 = getelementptr i32, i32* %101, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  %107 = load <4 x i32>, <4 x i32>* %106, align 4, !alias.scope !108
  %108 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4, !alias.scope !111, !noalias !108
  %109 = getelementptr i32, i32* %102, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %107, <4 x i32>* %110, align 4, !alias.scope !111, !noalias !108
  %111 = add i64 %66, 32
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !113

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i32, i32* %23, i64 %118
  %121 = getelementptr i32, i32* %41, i64 %118
  %122 = bitcast i32* %120 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !108
  %124 = getelementptr i32, i32* %120, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !108
  %127 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !111, !noalias !108
  %128 = getelementptr i32, i32* %121, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !111, !noalias !108
  %130 = add i64 %118, 8
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !114

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i32* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i32* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i32* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i32* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i32, i32* %144, align 4
  store i32 %147, i32* %145, align 4
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i32, i32* %145, i64 1
  %150 = getelementptr inbounds i32, i32* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !115

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i32* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i32* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i32* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i32* [ %185, %158 ], [ %156, %153 ]
  %162 = load i32, i32* %160, align 4
  store i32 %162, i32* %161, align 4
  %163 = getelementptr inbounds i32, i32* %161, i64 1
  %164 = getelementptr inbounds i32, i32* %160, i64 1
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %163, align 4
  %166 = getelementptr inbounds i32, i32* %161, i64 2
  %167 = getelementptr inbounds i32, i32* %160, i64 2
  %168 = load i32, i32* %167, align 4
  store i32 %168, i32* %166, align 4
  %169 = getelementptr inbounds i32, i32* %161, i64 3
  %170 = getelementptr inbounds i32, i32* %160, i64 3
  %171 = load i32, i32* %170, align 4
  store i32 %171, i32* %169, align 4
  %172 = getelementptr inbounds i32, i32* %161, i64 4
  %173 = getelementptr inbounds i32, i32* %160, i64 4
  %174 = load i32, i32* %173, align 4
  store i32 %174, i32* %172, align 4
  %175 = getelementptr inbounds i32, i32* %161, i64 5
  %176 = getelementptr inbounds i32, i32* %160, i64 5
  %177 = load i32, i32* %176, align 4
  store i32 %177, i32* %175, align 4
  %178 = getelementptr inbounds i32, i32* %161, i64 6
  %179 = getelementptr inbounds i32, i32* %160, i64 6
  %180 = load i32, i32* %179, align 4
  store i32 %180, i32* %178, align 4
  %181 = getelementptr inbounds i32, i32* %161, i64 7
  %182 = getelementptr inbounds i32, i32* %160, i64 7
  %183 = load i32, i32* %182, align 4
  store i32 %183, i32* %181, align 4
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i32, i32* %161, i64 8
  %186 = getelementptr inbounds i32, i32* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !116

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i32, i32* %41, i64 %4
  %194 = getelementptr inbounds i32, i32* %193, i64 %6
  %195 = getelementptr inbounds i32, i32* %23, i64 %4
  %196 = getelementptr inbounds i32, i32* %195, i64 %5
  %197 = icmp ult i64 %190, 8
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i32* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 2
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 2
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i32, i32* %23, i64 %3
  %208 = bitcast i32* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -8
  %214 = sub i64 %190, %213
  %215 = getelementptr i32, i32* %196, i64 %213
  %216 = getelementptr i32, i32* %194, i64 %213
  %217 = add i64 %213, -8
  %218 = lshr exact i64 %217, 3
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 24
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i32, i32* %196, i64 %225
  %228 = getelementptr i32, i32* %194, i64 %225
  %229 = bitcast i32* %227 to <4 x i32>*
  %230 = load <4 x i32>, <4 x i32>* %229, align 4, !alias.scope !117
  %231 = getelementptr i32, i32* %227, i64 4
  %232 = bitcast i32* %231 to <4 x i32>*
  %233 = load <4 x i32>, <4 x i32>* %232, align 4, !alias.scope !117
  %234 = bitcast i32* %228 to <4 x i32>*
  store <4 x i32> %230, <4 x i32>* %234, align 4, !alias.scope !120, !noalias !117
  %235 = getelementptr i32, i32* %228, i64 4
  %236 = bitcast i32* %235 to <4 x i32>*
  store <4 x i32> %233, <4 x i32>* %236, align 4, !alias.scope !120, !noalias !117
  %237 = or i64 %225, 8
  %238 = getelementptr i32, i32* %196, i64 %237
  %239 = getelementptr i32, i32* %194, i64 %237
  %240 = bitcast i32* %238 to <4 x i32>*
  %241 = load <4 x i32>, <4 x i32>* %240, align 4, !alias.scope !117
  %242 = getelementptr i32, i32* %238, i64 4
  %243 = bitcast i32* %242 to <4 x i32>*
  %244 = load <4 x i32>, <4 x i32>* %243, align 4, !alias.scope !117
  %245 = bitcast i32* %239 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %245, align 4, !alias.scope !120, !noalias !117
  %246 = getelementptr i32, i32* %239, i64 4
  %247 = bitcast i32* %246 to <4 x i32>*
  store <4 x i32> %244, <4 x i32>* %247, align 4, !alias.scope !120, !noalias !117
  %248 = or i64 %225, 16
  %249 = getelementptr i32, i32* %196, i64 %248
  %250 = getelementptr i32, i32* %194, i64 %248
  %251 = bitcast i32* %249 to <4 x i32>*
  %252 = load <4 x i32>, <4 x i32>* %251, align 4, !alias.scope !117
  %253 = getelementptr i32, i32* %249, i64 4
  %254 = bitcast i32* %253 to <4 x i32>*
  %255 = load <4 x i32>, <4 x i32>* %254, align 4, !alias.scope !117
  %256 = bitcast i32* %250 to <4 x i32>*
  store <4 x i32> %252, <4 x i32>* %256, align 4, !alias.scope !120, !noalias !117
  %257 = getelementptr i32, i32* %250, i64 4
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %255, <4 x i32>* %258, align 4, !alias.scope !120, !noalias !117
  %259 = or i64 %225, 24
  %260 = getelementptr i32, i32* %196, i64 %259
  %261 = getelementptr i32, i32* %194, i64 %259
  %262 = bitcast i32* %260 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !117
  %264 = getelementptr i32, i32* %260, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4, !alias.scope !117
  %267 = bitcast i32* %261 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %267, align 4, !alias.scope !120, !noalias !117
  %268 = getelementptr i32, i32* %261, i64 4
  %269 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %266, <4 x i32>* %269, align 4, !alias.scope !120, !noalias !117
  %270 = add i64 %225, 32
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !122

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i32, i32* %196, i64 %277
  %280 = getelementptr i32, i32* %194, i64 %277
  %281 = bitcast i32* %279 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4, !alias.scope !117
  %283 = getelementptr i32, i32* %279, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !117
  %286 = bitcast i32* %280 to <4 x i32>*
  store <4 x i32> %282, <4 x i32>* %286, align 4, !alias.scope !120, !noalias !117
  %287 = getelementptr i32, i32* %280, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %288, align 4, !alias.scope !120, !noalias !117
  %289 = add i64 %277, 8
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !123

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i32* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i32* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i32* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i32* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i32, i32* %303, align 4
  store i32 %306, i32* %304, align 4
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i32, i32* %304, i64 1
  %309 = getelementptr inbounds i32, i32* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !124

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i32* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i32* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i32* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i32* [ %344, %317 ], [ %315, %312 ]
  %321 = load i32, i32* %319, align 4
  store i32 %321, i32* %320, align 4
  %322 = getelementptr inbounds i32, i32* %320, i64 1
  %323 = getelementptr inbounds i32, i32* %319, i64 1
  %324 = load i32, i32* %323, align 4
  store i32 %324, i32* %322, align 4
  %325 = getelementptr inbounds i32, i32* %320, i64 2
  %326 = getelementptr inbounds i32, i32* %319, i64 2
  %327 = load i32, i32* %326, align 4
  store i32 %327, i32* %325, align 4
  %328 = getelementptr inbounds i32, i32* %320, i64 3
  %329 = getelementptr inbounds i32, i32* %319, i64 3
  %330 = load i32, i32* %329, align 4
  store i32 %330, i32* %328, align 4
  %331 = getelementptr inbounds i32, i32* %320, i64 4
  %332 = getelementptr inbounds i32, i32* %319, i64 4
  %333 = load i32, i32* %332, align 4
  store i32 %333, i32* %331, align 4
  %334 = getelementptr inbounds i32, i32* %320, i64 5
  %335 = getelementptr inbounds i32, i32* %319, i64 5
  %336 = load i32, i32* %335, align 4
  store i32 %336, i32* %334, align 4
  %337 = getelementptr inbounds i32, i32* %320, i64 6
  %338 = getelementptr inbounds i32, i32* %319, i64 6
  %339 = load i32, i32* %338, align 4
  store i32 %339, i32* %337, align 4
  %340 = getelementptr inbounds i32, i32* %320, i64 7
  %341 = getelementptr inbounds i32, i32* %319, i64 7
  %342 = load i32, i32* %341, align 4
  store i32 %342, i32* %340, align 4
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i32, i32* %320, i64 8
  %345 = getelementptr inbounds i32, i32* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !125

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 4
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #12
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string.967"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string.967", %"class.std::__1::basic_string.967"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN8spvtools3opt8analysis8ConstantENS3_12ConstantHashENS3_13ConstantEqualENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.437"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %147, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.437"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.441"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.441"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.443", %"class.std::__1::__bucket_list_deallocator.443"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.441"* null, %"struct.std::__1::__hash_node_base.441"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !126

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.441"* %38, null
  br i1 %39, label %155, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.441"* null, %"struct.std::__1::__hash_node_base.441"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.441"* null, %"struct.std::__1::__hash_node_base.441"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.441"* null, %"struct.std::__1::__hash_node_base.441"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.441"* null, %"struct.std::__1::__hash_node_base.441"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.441"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !19
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.441"* %36, %"struct.std::__1::__hash_node_base.441"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.441"* %75, null
  br i1 %76, label %155, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  %79 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 3
  %80 = bitcast %"class.std::__1::__compressed_pair.455"* %79 to %"struct.spvtools::opt::analysis::ConstantEqual"*
  br label %81

81:                                               ; preds = %77, %141
  %82 = phi %"struct.std::__1::__hash_node_base.441"* [ %75, %77 ], [ %145, %141 ]
  %83 = phi i64 [ %71, %77 ], [ %143, %141 ]
  %84 = phi %"struct.std::__1::__hash_node_base.441"* [ %38, %77 ], [ %142, %141 ]
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %82, i64 1
  %86 = bitcast %"struct.std::__1::__hash_node_base.441"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  br i1 %62, label %90, label %88

88:                                               ; preds = %81
  %89 = and i64 %87, %78
  br label %94

90:                                               ; preds = %81
  %91 = icmp ult i64 %87, %1
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = urem i64 %87, %1
  br label %94

94:                                               ; preds = %88, %90, %92
  %95 = phi i64 [ %89, %88 ], [ %93, %92 ], [ %87, %90 ]
  %96 = icmp eq i64 %95, %83
  br i1 %96, label %141, label %97

97:                                               ; preds = %94
  %98 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %11, align 8
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %98, i64 %95
  %100 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.441"* %100, null
  br i1 %101, label %114, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %82, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.441"* %104, null
  br i1 %105, label %127, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %82, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base.441"* %107 to %"class.spvtools::opt::analysis::Constant"**
  %109 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %104, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.441"* %110 to %"class.spvtools::opt::analysis::Constant"**
  %112 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %111, align 8
  %113 = tail call zeroext i1 @_ZNK8spvtools3opt8analysis13ConstantEqualclEPKNS1_8ConstantES5_(%"struct.spvtools::opt::analysis::ConstantEqual"* %80, %"class.spvtools::opt::analysis::Constant"* %109, %"class.spvtools::opt::analysis::Constant"* %112)
  br i1 %113, label %121, label %127

114:                                              ; preds = %97
  store %"struct.std::__1::__hash_node_base.441"* %84, %"struct.std::__1::__hash_node_base.441"** %99, align 8
  br label %141

115:                                              ; preds = %121
  %116 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %108, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %125, i64 2
  %118 = bitcast %"struct.std::__1::__hash_node_base.441"* %117 to %"class.spvtools::opt::analysis::Constant"**
  %119 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %118, align 8
  %120 = tail call zeroext i1 @_ZNK8spvtools3opt8analysis13ConstantEqualclEPKNS1_8ConstantES5_(%"struct.spvtools::opt::analysis::ConstantEqual"* %80, %"class.spvtools::opt::analysis::Constant"* %116, %"class.spvtools::opt::analysis::Constant"* %119)
  br i1 %120, label %121, label %127

121:                                              ; preds = %106, %115
  %122 = phi %"struct.std::__1::__hash_node_base.441"** [ %124, %115 ], [ %103, %106 ]
  %123 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %122, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %123, i64 0, i32 0
  %125 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %124, align 8
  %126 = icmp eq %"struct.std::__1::__hash_node_base.441"* %125, null
  br i1 %126, label %127, label %115

127:                                              ; preds = %121, %115, %106, %102
  %128 = phi %"struct.std::__1::__hash_node_base.441"* [ %82, %102 ], [ %82, %106 ], [ %123, %115 ], [ %123, %121 ]
  %129 = bitcast %"struct.std::__1::__hash_node_base.441"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.std::__1::__hash_node_base.441"* %84 to i64*
  store i64 %130, i64* %131, align 8
  %132 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %11, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %132, i64 %95
  %134 = bitcast %"struct.std::__1::__hash_node_base.441"** %133 to i64**
  %135 = load i64*, i64** %134, align 8
  %136 = load i64, i64* %135, align 8
  store i64 %136, i64* %129, align 8
  %137 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %11, align 8
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %137, i64 %95
  %139 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %138, align 8
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %139, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.441"* %82, %"struct.std::__1::__hash_node_base.441"** %140, align 8
  br label %141

141:                                              ; preds = %94, %127, %114
  %142 = phi %"struct.std::__1::__hash_node_base.441"* [ %82, %114 ], [ %84, %127 ], [ %82, %94 ]
  %143 = phi i64 [ %95, %114 ], [ %83, %127 ], [ %83, %94 ]
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %142, i64 0, i32 0
  %145 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %144, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node_base.441"* %145, null
  br i1 %146, label %155, label %81

147:                                              ; preds = %2
  %148 = getelementptr inbounds %"class.std::__1::__hash_table.437", %"class.std::__1::__hash_table.437"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %149 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %148, align 8
  store %"struct.std::__1::__hash_node_base.441"** null, %"struct.std::__1::__hash_node_base.441"*** %148, align 8
  %150 = icmp eq %"struct.std::__1::__hash_node_base.441"** %149, null
  br i1 %150, label %153, label %151

151:                                              ; preds = %147
  %152 = bitcast %"struct.std::__1::__hash_node_base.441"** %149 to i8*
  tail call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %147, %151
  %154 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.443", %"class.std::__1::__bucket_list_deallocator.443"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %154, align 8
  br label %155

155:                                              ; preds = %141, %70, %35, %153
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt8analysis8ConstantENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.458"*, %"class.std::__1::unique_ptr.460"* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.460"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.458"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.458"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.460"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.460"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.460"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.460"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.460"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.460"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.460"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.460"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.460"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.460"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.460"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.460"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.460"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !127

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.460"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.460"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.460"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.460"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.460"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.460"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.460"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.460"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.460"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.460"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.460"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.460"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.460"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.460"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.460"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.460"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.460"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.460"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.460"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.460"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.460"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.460"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.460"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.460"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.460"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.460"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.460"*
  %138 = icmp eq %"class.std::__1::unique_ptr.460"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.460"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %142, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %142, align 8
  %144 = icmp eq %"class.spvtools::opt::analysis::Constant"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.spvtools::opt::analysis::Constant"* %143 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %147 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %147, i64 1
  %149 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %148, align 8
  tail call void %149(%"class.spvtools::opt::analysis::Constant"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.460"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EE15MoveToLargeDataEv(%"class.spvtools::utils::SmallVector"*) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 24, i1 false) #11
  %3 = ptrtoint i8* %2 to i64
  %4 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.0"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.std::__1::vector.3"* %6, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %13, %9
  %19 = bitcast %"class.std::__1::vector.3"* %6 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %18, %1
  %21 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %27

26:                                               ; preds = %100, %20
  store i64 0, i64* %21, align 8
  ret void

27:                                               ; preds = %24, %100
  %28 = phi i64 [ 0, %24 ], [ %101, %100 ]
  %29 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %5, align 8
  %30 = load i32*, i32** %25, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 %28
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %29, i64 0, i32 0, i32 1
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %29, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = icmp ult i32* %33, %35
  %37 = ptrtoint i32* %35 to i64
  br i1 %36, label %38, label %43

38:                                               ; preds = %27
  %39 = load i32, i32* %31, align 4
  store i32 %39, i32* %33, align 4
  %40 = getelementptr inbounds i32, i32* %33, i64 1
  %41 = ptrtoint i32* %40 to i64
  %42 = bitcast i32** %32 to i64*
  store i64 %41, i64* %42, align 8
  br label %100

43:                                               ; preds = %27
  %44 = ptrtoint i32* %33 to i64
  %45 = bitcast i32** %32 to i64*
  %46 = bitcast %"class.std::__1::vector.3"* %29 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %44, %47
  %49 = ashr exact i64 %48, 2
  %50 = add nsw i64 %49, 1
  %51 = icmp ugt i64 %50, 4611686018427387903
  br i1 %51, label %52, label %54

52:                                               ; preds = %43
  %53 = bitcast %"class.std::__1::vector.3"* %29 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #13
  unreachable

54:                                               ; preds = %43
  %55 = bitcast i32** %34 to i64*
  %56 = sub i64 %37, %47
  %57 = ashr exact i64 %56, 2
  %58 = icmp ult i64 %57, 2305843009213693951
  br i1 %58, label %59, label %67

59:                                               ; preds = %54
  %60 = ashr exact i64 %56, 1
  %61 = icmp ult i64 %60, %50
  %62 = select i1 %61, i64 %50, i64 %60
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %72, label %64

64:                                               ; preds = %59
  %65 = icmp ugt i64 %62, 4611686018427387903
  br i1 %65, label %66, label %67

66:                                               ; preds = %64
  tail call void @abort() #13
  unreachable

67:                                               ; preds = %64, %54
  %68 = phi i64 [ %62, %64 ], [ 4611686018427387903, %54 ]
  %69 = shl i64 %68, 2
  %70 = tail call i8* @_Znwm(i64 %69) #12
  %71 = bitcast i8* %70 to i32*
  br label %72

72:                                               ; preds = %67, %59
  %73 = phi i64 [ %68, %67 ], [ 0, %59 ]
  %74 = phi i32* [ %71, %67 ], [ null, %59 ]
  %75 = getelementptr inbounds i32, i32* %74, i64 %49
  %76 = getelementptr inbounds i32, i32* %74, i64 %73
  %77 = ptrtoint i32* %76 to i64
  %78 = load i32, i32* %31, align 4
  store i32 %78, i32* %75, align 4
  %79 = getelementptr inbounds i32, i32* %75, i64 1
  %80 = ptrtoint i32* %79 to i64
  %81 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %29, i64 0, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = load i64, i64* %45, align 8
  %84 = ptrtoint i32* %82 to i64
  %85 = sub i64 %83, %84
  %86 = ashr exact i64 %85, 2
  %87 = sub nsw i64 0, %86
  %88 = getelementptr inbounds i32, i32* %75, i64 %87
  %89 = ptrtoint i32* %88 to i64
  %90 = icmp sgt i64 %85, 0
  br i1 %90, label %91, label %95

91:                                               ; preds = %72
  %92 = bitcast i32* %88 to i8*
  %93 = bitcast i32* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %93, i64 %85, i1 false) #11
  %94 = load i32*, i32** %81, align 8
  br label %95

95:                                               ; preds = %91, %72
  %96 = phi i32* [ %82, %72 ], [ %94, %91 ]
  store i64 %89, i64* %46, align 8
  store i64 %80, i64* %45, align 8
  store i64 %77, i64* %55, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %95
  %99 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %38, %95, %98
  %101 = add nuw i64 %28, 1
  %102 = load i64, i64* %21, align 8
  %103 = icmp ult i64 %101, %102
  br i1 %103, label %27, label %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @"_ZNSt3__110__function16__policy_invokerIFjjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt34FoldSpecConstantOpAndCompositePass25FoldWithInstructionFolderEPNS7_15InstructionList8iteratorEE3$_0S2_EEEEjPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, i32) #10 align 2 {
  ret i32 %1
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis17CompositeConstantD2Ev(%"class.spvtools::opt::analysis::CompositeConstant"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::CompositeConstant", %"class.spvtools::opt::analysis::CompositeConstant"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*] }, { [27 x i8*] }* @_ZTVN8spvtools3opt8analysis17CompositeConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::CompositeConstant", %"class.spvtools::opt::analysis::CompositeConstant"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %3, align 8
  %5 = icmp eq %"class.spvtools::opt::analysis::Constant"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %4 to i64
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::CompositeConstant", %"class.spvtools::opt::analysis::CompositeConstant"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.spvtools::opt::analysis::Constant"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.spvtools::opt::analysis::Constant"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis14VectorConstantD0Ev(%"class.spvtools::opt::analysis::VectorConstant"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::VectorConstant", %"class.spvtools::opt::analysis::VectorConstant"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*] }, { [27 x i8*] }* @_ZTVN8spvtools3opt8analysis17CompositeConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::VectorConstant", %"class.spvtools::opt::analysis::VectorConstant"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %3, align 8
  %5 = icmp eq %"class.spvtools::opt::analysis::Constant"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %4 to i64
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::VectorConstant", %"class.spvtools::opt::analysis::VectorConstant"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.spvtools::opt::analysis::Constant"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.spvtools::opt::analysis::Constant"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.spvtools::opt::analysis::VectorConstant"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Constant"* @_ZNK8spvtools3opt8analysis14VectorConstant4CopyEv(%"class.spvtools::opt::analysis::VectorConstant"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::VectorConstant", %"class.spvtools::opt::analysis::VectorConstant"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %2, align 8
  %4 = bitcast %"class.spvtools::opt::analysis::Type"* %3 to %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)***
  %5 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %5, i64 15
  %7 = load %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)** %6, align 8
  %8 = tail call %"class.spvtools::opt::analysis::Vector"* %7(%"class.spvtools::opt::analysis::Type"* %3) #11
  %9 = tail call i8* @_Znwm(i64 48) #12
  %10 = bitcast i8* %9 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to %"class.spvtools::opt::analysis::Vector"**
  store %"class.spvtools::opt::analysis::Vector"* %8, %"class.spvtools::opt::analysis::Vector"** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [27 x i8*] }, { [27 x i8*] }* @_ZTVN8spvtools3opt8analysis14VectorConstantE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 40
  %15 = getelementptr inbounds %"class.spvtools::opt::analysis::Vector", %"class.spvtools::opt::analysis::Vector"* %8, i64 0, i32 2
  %16 = bitcast %"class.spvtools::opt::analysis::Type"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = bitcast i8* %13 to %"class.std::__1::vector.802"*
  %20 = getelementptr inbounds %"class.spvtools::opt::analysis::VectorConstant", %"class.spvtools::opt::analysis::VectorConstant"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %21 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %20, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::analysis::VectorConstant", %"class.spvtools::opt::analysis::VectorConstant"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %23 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %22, align 8
  %24 = tail call %"class.spvtools::opt::analysis::Constant"** @_ZNSt3__16vectorIPKN8spvtools3opt8analysis8ConstantENS_9allocatorIS6_EEE6insertINS_11__wrap_iterIPKS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISG_E9referenceEEE5valueENSB_IPS6_EEE4typeESE_SG_SG_(%"class.std::__1::vector.802"* %19, %"class.spvtools::opt::analysis::Constant"** null, %"class.spvtools::opt::analysis::Constant"** %21, %"class.spvtools::opt::analysis::Constant"** %23) #11
  %25 = bitcast i8* %9 to %"class.spvtools::opt::analysis::Constant"*
  ret %"class.spvtools::opt::analysis::Constant"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ScalarConstant"* @_ZN8spvtools3opt8analysis8Constant16AsScalarConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ScalarConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::IntConstant"* @_ZN8spvtools3opt8analysis8Constant13AsIntConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::IntConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::FloatConstant"* @_ZN8spvtools3opt8analysis8Constant15AsFloatConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::FloatConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::BoolConstant"* @_ZN8spvtools3opt8analysis8Constant14AsBoolConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::BoolConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CompositeConstant"* @_ZN8spvtools3opt8analysis17CompositeConstant19AsCompositeConstantEv(%"class.spvtools::opt::analysis::CompositeConstant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CompositeConstant"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::StructConstant"* @_ZN8spvtools3opt8analysis8Constant16AsStructConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::StructConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::VectorConstant"* @_ZN8spvtools3opt8analysis14VectorConstant16AsVectorConstantEv(%"class.spvtools::opt::analysis::VectorConstant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::VectorConstant"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::MatrixConstant"* @_ZN8spvtools3opt8analysis8Constant16AsMatrixConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::MatrixConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ArrayConstant"* @_ZN8spvtools3opt8analysis8Constant15AsArrayConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ArrayConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NullConstant"* @_ZN8spvtools3opt8analysis8Constant14AsNullConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NullConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ScalarConstant"* @_ZNK8spvtools3opt8analysis8Constant16AsScalarConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ScalarConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::IntConstant"* @_ZNK8spvtools3opt8analysis8Constant13AsIntConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::IntConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::FloatConstant"* @_ZNK8spvtools3opt8analysis8Constant15AsFloatConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::FloatConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::BoolConstant"* @_ZNK8spvtools3opt8analysis8Constant14AsBoolConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::BoolConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CompositeConstant"* @_ZNK8spvtools3opt8analysis17CompositeConstant19AsCompositeConstantEv(%"class.spvtools::opt::analysis::CompositeConstant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CompositeConstant"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::StructConstant"* @_ZNK8spvtools3opt8analysis8Constant16AsStructConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::StructConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::VectorConstant"* @_ZNK8spvtools3opt8analysis14VectorConstant16AsVectorConstantEv(%"class.spvtools::opt::analysis::VectorConstant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::VectorConstant"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::MatrixConstant"* @_ZNK8spvtools3opt8analysis8Constant16AsMatrixConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::MatrixConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ArrayConstant"* @_ZNK8spvtools3opt8analysis8Constant15AsArrayConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ArrayConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NullConstant"* @_ZNK8spvtools3opt8analysis8Constant14AsNullConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NullConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis17CompositeConstant6IsZeroEv(%"class.spvtools::opt::analysis::CompositeConstant"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::opt::analysis::CompositeConstant"* %0 to %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)***
  %3 = load %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)**, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)** %3, i64 24
  %5 = load %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*, %"class.std::__1::vector.802"* (%"class.spvtools::opt::analysis::CompositeConstant"*)** %4, align 8
  %6 = tail call dereferenceable(24) %"class.std::__1::vector.802"* %5(%"class.spvtools::opt::analysis::CompositeConstant"* %0) #11
  %7 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.802", %"class.std::__1::vector.802"* %6, i64 0, i32 0, i32 1
  %10 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::analysis::Constant"** %8, %10
  br i1 %11, label %23, label %14

12:                                               ; preds = %14
  %13 = icmp eq %"class.spvtools::opt::analysis::Constant"** %22, %10
  br i1 %13, label %23, label %14

14:                                               ; preds = %1, %12
  %15 = phi %"class.spvtools::opt::analysis::Constant"** [ %22, %12 ], [ %8, %1 ]
  %16 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %15, align 8
  %17 = bitcast %"class.spvtools::opt::analysis::Constant"* %16 to i1 (%"class.spvtools::opt::analysis::Constant"*)***
  %18 = load i1 (%"class.spvtools::opt::analysis::Constant"*)**, i1 (%"class.spvtools::opt::analysis::Constant"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.spvtools::opt::analysis::Constant"*)*, i1 (%"class.spvtools::opt::analysis::Constant"*)** %18, i64 23
  %20 = load i1 (%"class.spvtools::opt::analysis::Constant"*)*, i1 (%"class.spvtools::opt::analysis::Constant"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.spvtools::opt::analysis::Constant"* %16) #11
  %22 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %15, i64 1
  br i1 %21, label %12, label %23

23:                                               ; preds = %14, %12, %1
  %24 = phi i1 [ true, %1 ], [ true, %12 ], [ false, %14 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.802"* @_ZNK8spvtools3opt8analysis17CompositeConstant13GetComponentsEv(%"class.spvtools::opt::analysis::CompositeConstant"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::CompositeConstant", %"class.spvtools::opt::analysis::CompositeConstant"* %0, i64 0, i32 1
  ret %"class.std::__1::vector.802"* %2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis17CompositeConstantD0Ev(%"class.spvtools::opt::analysis::CompositeConstant"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::VectorConstant"* @_ZN8spvtools3opt8analysis8Constant16AsVectorConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::VectorConstant"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::VectorConstant"* @_ZNK8spvtools3opt8analysis8Constant16AsVectorConstantEv(%"class.spvtools::opt::analysis::Constant"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::VectorConstant"* null
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{}
!3 = !{!4, !6, !8, !10}
!4 = distinct !{!4, !5, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!5 = distinct !{!5, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!6 = distinct !{!6, !7, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!7 = distinct !{!7, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!8 = distinct !{!8, !9, !"_ZN8spvtools3opt6Module18types_values_beginEv: argument 0"}
!9 = distinct !{!9, !"_ZN8spvtools3opt6Module18types_values_beginEv"}
!10 = distinct !{!10, !11, !"_ZN8spvtools3opt9IRContext18types_values_beginEv: argument 0"}
!11 = distinct !{!11, !"_ZN8spvtools3opt9IRContext18types_values_beginEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN8spvtools3opt9IRContext16types_values_endEv: argument 0"}
!14 = distinct !{!14, !"_ZN8spvtools3opt9IRContext16types_values_endEv"}
!15 = !{i8 0, i8 2}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJNS_4pairIKS7_jEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISN_EEEEEEDpOT_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJNS_4pairIKS7_jEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISN_EEEEEEDpOT_"}
!19 = !{i64 0, i64 65}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN8spvtools3opt9IRContext16types_values_endEv: argument 0"}
!22 = distinct !{!22, !"_ZN8spvtools3opt9IRContext16types_values_endEv"}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !29}
!29 = !{!"llvm.loop.isvectorized", i32 1}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.unroll.disable"}
!32 = distinct !{!32, !31}
!33 = distinct !{!33, !29}
!34 = !{!35}
!35 = distinct !{!35, !36}
!36 = distinct !{!36, !"LVerDomain"}
!37 = !{!38}
!38 = distinct !{!38, !36}
!39 = distinct !{!39, !29}
!40 = distinct !{!40, !31}
!41 = distinct !{!41, !29}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !29}
!48 = distinct !{!48, !31}
!49 = distinct !{!49, !31}
!50 = distinct !{!50, !29}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !29}
!57 = distinct !{!57, !31}
!58 = distinct !{!58, !31}
!59 = distinct !{!59, !29}
!60 = distinct !{!60, !31}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !29}
!67 = distinct !{!67, !29}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !29}
!74 = distinct !{!74, !31}
!75 = distinct !{!75, !29}
!76 = !{!77}
!77 = distinct !{!77, !78}
!78 = distinct !{!78, !"LVerDomain"}
!79 = !{!80}
!80 = distinct !{!80, !78}
!81 = distinct !{!81, !29}
!82 = distinct !{!82, !31}
!83 = distinct !{!83, !29}
!84 = !{!85}
!85 = distinct !{!85, !86}
!86 = distinct !{!86, !"LVerDomain"}
!87 = !{!88}
!88 = distinct !{!88, !86}
!89 = distinct !{!89, !29}
!90 = distinct !{!90, !31}
!91 = distinct !{!91, !29}
!92 = !{!93}
!93 = distinct !{!93, !94}
!94 = distinct !{!94, !"LVerDomain"}
!95 = !{!96}
!96 = distinct !{!96, !94}
!97 = distinct !{!97, !29}
!98 = distinct !{!98, !31}
!99 = distinct !{!99, !31}
!100 = distinct !{!100, !29}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPKN8spvtools3opt8analysis8ConstantEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashINS_4pairIKjS7_EEJEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISR_EEEEEEmOT_DpOT0_: argument 0"}
!103 = distinct !{!103, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPKN8spvtools3opt8analysis8ConstantEEENS_22__unordered_map_hasherIjS8_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashINS_4pairIKjS7_EEJEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISR_EEEEEEmOT_DpOT0_"}
!104 = distinct !{!104, !31}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZNSt3__112__hash_tableIPKN8spvtools3opt8analysis8ConstantENS3_12ConstantHashENS3_13ConstantEqualENS_9allocatorIS6_EEE21__construct_node_hashIS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!107 = distinct !{!107, !"_ZNSt3__112__hash_tableIPKN8spvtools3opt8analysis8ConstantENS3_12ConstantHashENS3_13ConstantEqualENS_9allocatorIS6_EEE21__construct_node_hashIS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_"}
!108 = !{!109}
!109 = distinct !{!109, !110}
!110 = distinct !{!110, !"LVerDomain"}
!111 = !{!112}
!112 = distinct !{!112, !110}
!113 = distinct !{!113, !29}
!114 = distinct !{!114, !31}
!115 = distinct !{!115, !31}
!116 = distinct !{!116, !29}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !29}
!123 = distinct !{!123, !31}
!124 = distinct !{!124, !31}
!125 = distinct !{!125, !29}
!126 = distinct !{!126, !31}
!127 = distinct !{!127, !31}
