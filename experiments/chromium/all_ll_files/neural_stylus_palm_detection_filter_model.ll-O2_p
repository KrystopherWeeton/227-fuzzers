; ModuleID = '../../ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_model.cc'
source_filename = "../../ui/events/ozone/evdev/touch_filter/neural_stylus_palm_detection_filter_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::NeuralStylusPalmDetectionFilterModelConfig" = type { i32, i32, float, %"class.base::TimeDelta", i32, i32, i32, i8, float, float, i8, %"class.base::TimeDelta", i8, i8, %"class.std::__1::vector" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN2ui42NeuralStylusPalmDetectionFilterModelConfigC1Ev = hidden unnamed_addr alias void (%"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"*), void (%"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"*)* @_ZN2ui42NeuralStylusPalmDetectionFilterModelConfigC2Ev
@_ZN2ui42NeuralStylusPalmDetectionFilterModelConfigC1ERKS0_ = hidden unnamed_addr alias void (%"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"*, %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"*), void (%"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"*, %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"*)* @_ZN2ui42NeuralStylusPalmDetectionFilterModelConfigC2ERKS0_
@_ZN2ui42NeuralStylusPalmDetectionFilterModelConfigD1Ev = hidden unnamed_addr alias void (%"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"*), void (%"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"*)* @_ZN2ui42NeuralStylusPalmDetectionFilterModelConfigD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui42NeuralStylusPalmDetectionFilterModelConfigC2Ev(%"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %4, align 8
  %5 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %0, i64 0, i32 3, i32 0
  %6 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %0, i64 0, i32 8
  %7 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %0, i64 0, i32 11, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %0, i64 0, i32 12
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %0, i64 0, i32 13
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %0, i64 0, i32 14
  %11 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #5
  %12 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 21, i1 false)
  %13 = bitcast float* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 9, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui42NeuralStylusPalmDetectionFilterModelConfigC2ERKS0_(%"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"*, %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* nocapture readonly dereferenceable(96)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %0 to i8*
  %4 = bitcast %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 66, i1 false)
  %5 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %0, i64 0, i32 14
  %6 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %1, i64 0, i32 14
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #5
  %8 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %1, i64 0, i32 14, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = icmp ugt i64 %14, 4611686018427387903
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #6
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #7
  %22 = bitcast i8* %21 to float*
  %23 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %0, i64 0, i32 14, i32 0, i32 1
  %24 = bitcast float** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds float, float* %22, i64 %14
  %27 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  store float* %26, float** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %29 = load float*, float** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast float** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint float* %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = lshr exact i64 %34, 2
  %38 = bitcast float* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 %38, i64 %34, i1 false) #5
  %39 = getelementptr inbounds float, float* %22, i64 %37
  %40 = ptrtoint float* %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %2, %41
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui42NeuralStylusPalmDetectionFilterModelConfigD2Ev(%"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load float*, float** %2, align 8
  %4 = icmp eq float* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint float* %3 to i64
  %7 = getelementptr inbounds %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig", %"struct.ui::NeuralStylusPalmDetectionFilterModelConfig"* %0, i64 0, i32 14, i32 0, i32 1
  %8 = bitcast float** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
