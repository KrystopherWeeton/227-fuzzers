; ModuleID = '../../third_party/blink/renderer/core/svg/animation/svg_smil_element.cc'
source_filename = "../../third_party/blink/renderer/core/svg/animation/svg_smil_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.206", i32, [4 x i8], %"class.std::__1::unique_ptr.342", %"class.std::__1::unique_ptr.342", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.353", %"class.std::__1::unique_ptr.359", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.371", %"class.std::__1::unique_ptr.377", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.384", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.278", %"class.std::__1::unique_ptr.278", %"class.std::__1::unique_ptr.285", %"class.std::__1::unique_ptr.292", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.322", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.242" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.242" = type { %"struct.std::__1::__atomic_base.243" }
%"struct.std::__1::__atomic_base.243" = type { %"struct.std::__1::__atomic_base.244" }
%"struct.std::__1::__atomic_base.244" = type { %"struct.std::__1::__cxx_atomic_impl.245" }
%"struct.std::__1::__cxx_atomic_impl.245" = type { %"struct.std::__1::__cxx_atomic_base_impl.246" }
%"struct.std::__1::__cxx_atomic_base_impl.246" = type { i64 }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::Worklist.253"* }
%"class.blink::Worklist.253" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.242" }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::Worklist.260"* }
%"class.blink::Worklist.260" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.242" }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::Worklist.267"* }
%"class.blink::Worklist.267" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.242" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::Worklist.274"* }
%"class.blink::Worklist.274" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.242" }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::Worklist.281"* }
%"class.blink::Worklist.281" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.242" }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::Worklist.288"* }
%"class.blink::Worklist.288" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.242" }
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::Worklist.295"* }
%"class.blink::Worklist.295" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.242" }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.302", %"class.std::__1::__compressed_pair.309", %"class.std::__1::__compressed_pair.314", %"class.std::__1::__compressed_pair.316", [4 x i8] }>
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304", %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { i64 }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { float }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.325", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.334" }
%"class.WTF::Vector.334" = type { %"class.WTF::VectorBuffer.335" }
%"class.WTF::VectorBuffer.335" = type { %"class.WTF::VectorBufferBase.336" }
%"class.WTF::VectorBufferBase.336" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.350" }
%"class.WTF::VectorBuffer.350" = type { %"class.WTF::VectorBufferBase.351" }
%"class.WTF::VectorBufferBase.351" = type { %"struct.std::__1::pair.352"*, i32, i32 }
%"struct.std::__1::pair.352" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.365" }
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.253"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.260"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.267"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.274"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.281"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.609" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.383 }
%class.scoped_refptr.383 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.384" = type { %"struct.std::__1::__atomic_base.385" }
%"struct.std::__1::__atomic_base.385" = type { %"struct.std::__1::__cxx_atomic_impl.386" }
%"struct.std::__1::__cxx_atomic_impl.386" = type { %"struct.std::__1::__cxx_atomic_base_impl.387" }
%"struct.std::__1::__cxx_atomic_base_impl.387" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.204", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.204" = type { %"class.base::RefCounted.205" }
%"class.base::RefCounted.205" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.73" }
%"struct.std::__1::atomic.73" = type { %"struct.std::__1::__atomic_base.74" }
%"struct.std::__1::__atomic_base.74" = type { %"struct.std::__1::__atomic_base.75" }
%"struct.std::__1::__atomic_base.75" = type { %"struct.std::__1::__cxx_atomic_impl.76" }
%"struct.std::__1::__cxx_atomic_impl.76" = type { %"struct.std::__1::__cxx_atomic_base_impl.77" }
%"struct.std::__1::__cxx_atomic_base_impl.77" = type { i32 }
%"class.blink::SVGSMILElement::Condition" = type { i32, i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::SMILTime", i32, %"class.blink::Member", %"class.blink::Member.40", %"class.blink::Member.46" }
%"class.blink::SMILTime" = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SVGElement"* }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap", %"class.blink::Member.36", %"class.blink::Member.38" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.13" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.4", %"class.blink::Member.4" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.4", %"class.blink::Member.6", %"class.blink::Member.4", %"class.blink::Member.4", %"class.blink::Member.8" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.116", %"class.blink::Member.118", %"class.blink::Member.6", %"class.blink::Member.120", %"class.blink::Member.120", %"class.blink::Member.44", %"class.blink::Member.144", %"class.blink::Member.146", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.151", %"class.blink::HeapVector.153" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.116" = type { %"class.blink::MemberBase.117" }
%"class.blink::MemberBase.117" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.169", %"class.WTF::Vector.169", i8, i32, %"class.blink::Member.176", %"class.blink::Member.178", %"class.blink::Member.180", %"class.blink::Member.182", %"class.blink::Member.184", %"class.blink::Member.186", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.189", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.195", %"class.blink::Member.197", %"class.blink::Member.159", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.200", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.390", %"class.blink::HeapVector.137", %"class.blink::Member.135", %"class.blink::Member.392", %"class.blink::Member.135", %"class.blink::Member.135", %"class.blink::Member.135", %"class.blink::UserActionElementSet", %"class.blink::Member.401", double, double, i64, i64, %"class.blink::HeapHashSet.403", %"class.blink::HeapHashSet.410", i16, i8, %"class.blink::Member.417", %"class.blink::Member.419", %"class.blink::Member.421", %"class.blink::Member.423", %"class.blink::TextLinkColors", %"class.blink::Member.425", i8, [7 x i8], %"class.blink::HeapHashMap.427", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.135", %"class.WTF::Vector.434", %"class.blink::Member.439", %"class.blink::Member.441", i8, %"class.blink::Member.135", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.443", %"class.blink::HeapVector.445", %"class.std::__1::unique_ptr.453", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.459", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.472", %"class.WTF::Vector.474", i8, i8, %"class.std::__1::unique_ptr.479", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.137", %"class.blink::HeapVector.485", i32, i8, %"class.blink::HeapTaskRunnerTimer.390", %"class.blink::HeapTaskRunnerTimer.390", %"class.blink::DocumentTiming", %"class.blink::Member.493", i8, i32, %"class.blink::Member.495", %"class.blink::Member.497", %"class.blink::Member.499", %"class.blink::HeapTaskRunnerTimer.390", %"class.blink::Member.501", %"class.WTF::HashMap.503", %"class.blink::Member.508", %"class.blink::Member.510", %"class.blink::Member.512", %"class.blink::Member.514", %"class.blink::Member.118", %"class.blink::Member.118", %"class.blink::HeapTaskRunnerTimer.390", %"class.blink::HeapHashSet.516", i8, i32, %"class.blink::Member.523", %"class.blink::Member.525", i32, %"class.blink::Member.527", %"class.blink::Member.529", %"class.blink::Member.531", %"class.std::__1::unique_ptr.533", i64, %"class.std::__1::unique_ptr.539", i32, i32, %"class.blink::Member.545", %"class.blink::Member.547", %"class.blink::Member.549", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.551", %"class.WTF::Vector.553", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.558", %"class.blink::Member.565", %"class.std::__1::unique_ptr.567", %"class.blink::Member.573", i8, i8, %"class.WTF::String", %"class.blink::Member.575", i8, [7 x i8], %"class.blink::HeapHashMap.577", %"class.blink::HeapObserverSet", %"class.blink::Member.591", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.593", i32, i8, i8, %"class.blink::WeakMember.595", %"class.blink::Member.596" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.162" }
%"class.blink::HeapHashMap.162" = type { %"class.WTF::HashMap.165" }
%"class.WTF::HashMap.165" = type { %"class.WTF::HashTable.166" }
%"class.WTF::HashTable.166" = type <{ %"struct.WTF::KeyValuePair.168"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.168" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.169" = type { %"class.WTF::VectorBuffer.170" }
%"class.WTF::VectorBuffer.170" = type { %"class.WTF::VectorBufferBase.171" }
%"class.WTF::VectorBufferBase.171" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.172 }
%class.scoped_refptr.172 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.173", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.173" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.73" }
%"class.blink::Member.176" = type { %"class.blink::MemberBase.177" }
%"class.blink::MemberBase.177" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.178" = type { %"class.blink::MemberBase.179" }
%"class.blink::MemberBase.179" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.182" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.184" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.195" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.197" = type { %"class.blink::MemberBase.198" }
%"class.blink::MemberBase.198" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.159" = type { %"class.blink::MemberBase.160" }
%"class.blink::MemberBase.160" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.199 }
%class.scoped_refptr.199 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.200" = type { %"class.WTF::VectorBuffer.201" }
%"class.WTF::VectorBuffer.201" = type { %"class.WTF::VectorBufferBase.202" }
%"class.WTF::VectorBufferBase.202" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.203 }
%class.scoped_refptr.203 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.394" }
%"class.blink::HeapHashMap.394" = type { %"class.WTF::HashMap.397" }
%"class.WTF::HashMap.397" = type { %"class.WTF::HashTable.398" }
%"class.WTF::HashTable.398" = type <{ %"struct.WTF::KeyValuePair.400"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.400" = type opaque
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.403" = type { %"class.WTF::HashSet.406" }
%"class.WTF::HashSet.406" = type { %"class.WTF::HashTable.407" }
%"class.WTF::HashTable.407" = type <{ %"class.blink::WeakMember.409"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.409" = type opaque
%"class.blink::HeapHashSet.410" = type { %"class.WTF::HashSet.413" }
%"class.WTF::HashSet.413" = type { %"class.WTF::HashTable.414" }
%"class.WTF::HashTable.414" = type <{ %"class.blink::WeakMember.416"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.416" = type opaque
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.427" = type { %"class.WTF::HashMap.430" }
%"class.WTF::HashMap.430" = type { %"class.WTF::HashTable.431" }
%"class.WTF::HashTable.431" = type <{ %"struct.WTF::KeyValuePair.433"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.433" = type opaque
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.445" = type { %"class.WTF::Vector.448" }
%"class.WTF::Vector.448" = type { %"class.WTF::VectorBuffer.449" }
%"class.WTF::VectorBuffer.449" = type { %"class.WTF::VectorBufferBase.450" }
%"class.WTF::VectorBufferBase.450" = type { %"class.blink::Member.451"*, i32, i32 }
%"class.blink::Member.451" = type opaque
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.459" = type { %"class.WTF::HashSet.462" }
%"class.WTF::HashSet.462" = type { %"class.WTF::HashTable.463" }
%"class.WTF::HashTable.463" = type <{ %"class.blink::WeakMember.465"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.465" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.466", i32, [4 x i8] }>
%"class.WTF::Vector.466" = type { %"class.WTF::VectorBuffer.467" }
%"class.WTF::VectorBuffer.467" = type { %"class.WTF::VectorBufferBase.468" }
%"class.WTF::VectorBufferBase.468" = type { %"struct.std::__1::pair.469"*, i32, i32 }
%"struct.std::__1::pair.469" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.474" = type { %"class.WTF::VectorBuffer.475" }
%"class.WTF::VectorBuffer.475" = type { %"class.WTF::VectorBufferBase.476" }
%"class.WTF::VectorBufferBase.476" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.137" = type { %"class.WTF::Vector.140" }
%"class.WTF::Vector.140" = type { %"class.WTF::VectorBuffer.141" }
%"class.WTF::VectorBuffer.141" = type { %"class.WTF::VectorBufferBase.142" }
%"class.WTF::VectorBufferBase.142" = type { %"class.blink::Member.135"*, i32, i32 }
%"class.blink::HeapVector.485" = type { %"class.WTF::Vector.488" }
%"class.WTF::Vector.488" = type { %"class.WTF::VectorBuffer.489" }
%"class.WTF::VectorBuffer.489" = type { %"class.WTF::VectorBufferBase.490" }
%"class.WTF::VectorBufferBase.490" = type { %"class.blink::Member.491"*, i32, i32 }
%"class.blink::Member.491" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.118" }
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.503" = type { %"class.WTF::HashTable.504" }
%"class.WTF::HashTable.504" = type <{ %"struct.WTF::KeyValuePair.507"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.507" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.390" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.391", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.72, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.72 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.78 }
%class.scoped_refptr.78 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.79", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.79" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.80" }
%"struct.std::__1::atomic.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__cxx_atomic_impl.83" }
%"struct.std::__1::__cxx_atomic_impl.83" = type { %"struct.std::__1::__cxx_atomic_base_impl.84" }
%"struct.std::__1::__cxx_atomic_base_impl.84" = type { i8 }
%"class.blink::WeakMember.391" = type { %"class.blink::MemberBase.119" }
%"class.blink::HeapHashSet.516" = type { %"class.WTF::HashSet.519" }
%"class.WTF::HashSet.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"class.blink::Member.522"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.522" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.553" = type { %"class.WTF::VectorBuffer.554" }
%"class.WTF::VectorBuffer.554" = type { %"class.WTF::VectorBufferBase.555" }
%"class.WTF::VectorBufferBase.555" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.558" = type { %"class.WTF::HashMap.561" }
%"class.WTF::HashMap.561" = type { %"class.WTF::HashTable.562" }
%"class.WTF::HashTable.562" = type <{ %"struct.WTF::KeyValuePair.564"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.564" = type opaque
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.577" = type { %"class.WTF::HashMap.580" }
%"class.WTF::HashMap.580" = type { %"class.WTF::HashTable.581" }
%"class.WTF::HashTable.581" = type <{ %"struct.WTF::KeyValuePair.583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.583" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.584" }
%"class.blink::HeapHashSet.584" = type { %"class.WTF::HashSet.587" }
%"class.WTF::HashSet.587" = type { %"class.WTF::HashTable.588" }
%"class.WTF::HashTable.588" = type <{ %"class.blink::WeakMember.590"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.590" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.593" = type { %"class.blink::MemberBase.594" }
%"class.blink::MemberBase.594" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.118", %"class.blink::HeapHashSet.600", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.607", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.600" = type { %"class.WTF::HashSet.603" }
%"class.WTF::HashSet.603" = type { %"class.WTF::HashTable.604" }
%"class.WTF::HashTable.604" = type <{ %"class.blink::Member.606"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.606" = type opaque
%"class.blink::HeapTaskRunnerTimer.607" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.608", { i64, i64 } }
%"class.blink::WeakMember.608" = type { %"class.blink::MemberBase.594" }
%"class.blink::WeakMember.595" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::Node"* }
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.120" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.124" }
%"class.blink::HeapHashMap.124" = type { %"class.WTF::HashMap.127" }
%"class.WTF::HashMap.127" = type { %"class.WTF::HashTable.128" }
%"class.WTF::HashTable.128" = type <{ %"struct.WTF::KeyValuePair.130"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.130" = type { %"class.WTF::AtomicString", %"class.blink::Member.131" }
%"class.blink::Member.131" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.135", i32, %"class.blink::HeapVector.137" }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.148" }
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::HeapHashMap.150"* }
%"class.blink::HeapHashMap.150" = type opaque
%"class.blink::Member.151" = type { %"class.blink::MemberBase.152" }
%"class.blink::MemberBase.152" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.153" = type { %"class.WTF::Vector.156" }
%"class.WTF::Vector.156" = type { %"class.WTF::VectorBuffer.157" }
%"class.WTF::VectorBuffer.157" = type { %"class.WTF::VectorBufferBase.158" }
%"class.WTF::VectorBufferBase.158" = type { %"class.blink::Member.159"*, i32, i32 }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.17", %"class.blink::Member.19", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.17" = type { %"class.WTF::SingleThreadedBitField.18" }
%"class.WTF::SingleThreadedBitField.18" = type { i32 }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.22", %"class.WTF::AtomicString", %"class.WTF::Vector.24" }
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.24" = type { %"class.WTF::VectorBuffer.25" }
%"class.WTF::VectorBuffer.25" = type { %"class.WTF::VectorBufferBase.26", [32 x i8] }
%"class.WTF::VectorBufferBase.26" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.34" }
%"class.WTF::HashTable.34" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::Member.40" = type { %"class.blink::MemberBase.41" }
%"class.blink::MemberBase.41" = type { %"class.blink::IdTargetObserver"* }
%"class.blink::IdTargetObserver" = type { i32 (...)**, %"class.blink::Member.44", %"class.WTF::AtomicString" }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ConditionEventListener"* }
%"class.blink::ConditionEventListener" = type { %"class.blink::NativeEventListener", %"class.blink::Member.50", %"class.blink::Member.59" }
%"class.blink::NativeEventListener" = type { %"class.blink::EventListener" }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::SVGSMILElement"* }
%"class.blink::SVGSMILElement" = type <{ %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member", %"class.blink::Member.40", %"class.blink::HeapVector", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.62", %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList", %"struct.blink::SMILInterval", %"struct.blink::SMILInterval", i8, [3 x i8], %"struct.blink::SVGSMILElement::ProgressState", [4 x i8], %"class.blink::Member.68", i32, i32, %"class.blink::SMILTime", %"class.blink::SMILTime", %"class.blink::SMILRepeatCount", %"class.blink::SMILTime", %"class.blink::SMILTime", i8, i8, i8, [5 x i8] }>
%"class.blink::SVGTests" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.52", %"class.blink::Member.52" }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::SVGStaticStringList"* }
%"class.blink::SVGStaticStringList" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::HeapHashSet.62" = type { %"class.WTF::HashSet.65" }
%"class.WTF::HashSet.65" = type { %"class.WTF::HashTable.66" }
%"class.WTF::HashTable.66" = type <{ %"class.blink::Member.50"*, i32, i32, i32, [4 x i8] }>
%"class.blink::SMILInstanceTimeList" = type <{ %"class.WTF::Vector", i32, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::SMILTimeWithOrigin"*, i32, i32 }
%"class.blink::SMILTimeWithOrigin" = type <{ %"class.blink::SMILTime", i32, [4 x i8] }>
%"struct.blink::SMILInterval" = type { %"class.blink::SMILTime", %"class.blink::SMILTime" }
%"struct.blink::SVGSMILElement::ProgressState" = type { float, i32 }
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::SMILTimeContainer"* }
%"class.blink::SMILTimeContainer" = type { %"class.blink::SMILTime", %"class.blink::SMILTime", %"class.blink::SMILTime", %"class.base::TimeDelta", i32, i8, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashCountedSet", %"class.blink::PriorityQueue", %"class.blink::Member.99" }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.85", { i64, i64 } }
%"class.blink::WeakMember.85" = type { %"class.blink::MemberBase.69" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.88" }
%"class.WTF::HashMap.88" = type { %"class.WTF::HashTable.89" }
%"class.WTF::HashTable.89" = type <{ %"struct.WTF::KeyValuePair.91"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.91" = type opaque
%"class.blink::PriorityQueue" = type { %"class.blink::HeapVector.92" }
%"class.blink::HeapVector.92" = type { %"class.WTF::Vector.95" }
%"class.WTF::Vector.95" = type { %"class.WTF::VectorBuffer.96" }
%"class.WTF::VectorBuffer.96" = type { %"class.WTF::VectorBufferBase.97" }
%"class.WTF::VectorBufferBase.97" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::SVGSVGElement"* }
%"class.blink::SVGSVGElement" = type <{ %"class.blink::SVGGraphicsElement", %"class.blink::SVGFitToViewBox", %"class.blink::SVGZoomAndPan.base", [4 x i8], %"class.blink::Member.107", %"class.blink::Member.107", %"class.blink::Member.107", %"class.blink::Member.107", %"class.blink::Member.68", %"class.blink::Member.109", %"class.blink::Member.114", float, [4 x i8] }>
%"class.blink::SVGGraphicsElement" = type { %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.101" }
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::SVGAnimatedTransformList"* }
%"class.blink::SVGAnimatedTransformList" = type opaque
%"class.blink::SVGFitToViewBox" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.103", %"class.blink::Member.105" }
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::SVGAnimatedRect"* }
%"class.blink::SVGAnimatedRect" = type opaque
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::SVGAnimatedPreserveAspectRatio"* }
%"class.blink::SVGAnimatedPreserveAspectRatio" = type opaque
%"class.blink::SVGZoomAndPan.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.107" = type { %"class.blink::MemberBase.108" }
%"class.blink::MemberBase.108" = type { %"class.blink::SVGAnimatedLength"* }
%"class.blink::SVGAnimatedLength" = type opaque
%"class.blink::Member.109" = type { %"class.blink::MemberBase.110" }
%"class.blink::MemberBase.110" = type { %"class.blink::SVGPoint"* }
%"class.blink::SVGPoint" = type { %"class.blink::SVGListablePropertyBase", %"class.blink::FloatPoint" }
%"class.blink::SVGListablePropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::UntracedMember" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::SVGListPropertyBase"* }
%"class.blink::SVGListPropertyBase" = type opaque
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::SVGViewSpec"* }
%"class.blink::SVGViewSpec" = type opaque
%"class.blink::SMILRepeatCount" = type { double }
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::SVGSMILElement::Condition"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.642 }
%union.anon.642 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::__less.718" = type { i8 }
%"struct.blink::SVGSMILElement::NotifyDependentsInfo" = type { i32, i32, %"class.blink::SMILTime", %"class.blink::SMILTime" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.614" }
%"class.blink::PersistentBase.614" = type { %"class.blink::SVGSMILElement"*, %"class.blink::PersistentNodePtr.615" }
%"class.blink::PersistentNodePtr.615" = type { %"class.blink::PersistentNode"* }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.19", %"class.WTF::Vector.693" }
%"class.WTF::Vector.693" = type { %"class.WTF::VectorBuffer.694" }
%"class.WTF::VectorBuffer.694" = type { %"class.WTF::VectorBufferBase.695", [64 x i8] }
%"class.WTF::VectorBufferBase.695" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::Vector.620" = type { %"class.WTF::VectorBuffer.621" }
%"class.WTF::VectorBuffer.621" = type { %"class.WTF::VectorBufferBase.622" }
%"class.WTF::VectorBufferBase.622" = type { %"class.WTF::String"*, i32, i32 }
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::JSEventHandlerForContentAttribute" = type { %"class.blink::JSEventHandler.base", i8, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %"class.WTF::TextPosition", %"class.v8::Isolate"* }
%"class.blink::JSEventHandler.base" = type <{ %"class.blink::JSBasedEventListener", %"class.blink::Member.625", i32 }>
%"class.blink::JSBasedEventListener" = type { %"class.blink::EventListener" }
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::V8EventHandlerNonNull"* }
%"class.blink::V8EventHandlerNonNull" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.629", %"class.blink::Member.629" }
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.633, %"class.blink::Member.634", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.633 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.634" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.636" }
%"class.blink::Persistent.636" = type { %"class.blink::PersistentBase.637" }
%"class.blink::PersistentBase.637" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"struct.blink::SVGElement::SvgAttributeChangedParams" = type <{ %"class.blink::QualifiedName"*, i32, [4 x i8] }>
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.646", %"class.blink::Member.646", %"class.blink::Member.648", %"class.blink::Member.650", %"class.base::TimeTicks" }
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.648" = type { %"class.blink::MemberBase.649" }
%"class.blink::MemberBase.649" = type { %"class.blink::Event"* }
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.652", i8, [7 x i8] }>
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::EventListener"* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.670" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.658" }
%"class.blink::HeapVector.658" = type { %"class.WTF::Vector.661" }
%"class.WTF::Vector.661" = type { %"class.WTF::VectorBuffer.662" }
%"class.WTF::VectorBuffer.662" = type { %"class.WTF::VectorBufferBase.663", [32 x i8] }
%"class.WTF::VectorBufferBase.663" = type { %"struct.std::__1::pair.664"*, i32, i32 }
%"struct.std::__1::pair.664" = type { %"class.WTF::AtomicString", %"class.blink::Member.665" }
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::HeapVector.667"* }
%"class.blink::HeapVector.667" = type opaque
%"class.std::__1::unique_ptr.670" = type { %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.WTF::Vector.673"* }
%"class.WTF::Vector.673" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.677" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.677" = type { %"class.v8::TracedReference.678" }
%"class.v8::TracedReference.678" = type { %"class.v8::BasicTracedReference.679" }
%"class.v8::BasicTracedReference.679" = type { %"class.v8::TracedReferenceBase" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"class.blink::ComputedStyle" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.680", %"class.WTF::String"* }
%"class.blink::HeapVector.680" = type { %"class.WTF::Vector.683" }
%"class.WTF::Vector.683" = type { %"class.WTF::VectorBuffer.684" }
%"class.WTF::VectorBuffer.684" = type { %"class.WTF::VectorBufferBase.685" }
%"class.WTF::VectorBufferBase.685" = type { %"class.blink::Member.4"*, i32, i32 }
%"class.WTF::HashMap.687" = type opaque
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::ShadowRoot" = type opaque
%"class.blink::AffineTransform" = type opaque
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE6insertIRS2_EEvjOT_ = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink10SVGElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink7Element23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink14SVGSMILElement20LayoutObjectIsNeededERKNS_13ComputedStyleE = comdat any

$_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink10SVGElement13SupportsFocusEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZN5blink7Element20BeginParsingChildrenEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25MatchesEnabledPseudoClassEv = comdat any

$_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv = comdat any

$_ZNK5blink7Element27MatchesReadWritePseudoClassEv = comdat any

$_ZNK5blink7Element28MatchesValidityPseudoClassesEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element12willValidateEv = comdat any

$_ZN5blink7Element14IsValidElementEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZNK5blink7Element21IsDisabledFormControlEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink10SVGElement20IsSVGGeometryElementEv = comdat any

$_ZNK5blink10SVGElement20IsSVGGraphicsElementEv = comdat any

$_ZNK5blink10SVGElement14IsFilterEffectEv = comdat any

$_ZNK5blink10SVGElement13IsTextContentEv = comdat any

$_ZNK5blink10SVGElement17IsTextPositioningEv = comdat any

$_ZNK5blink10SVGElement22IsStructurallyExternalEv = comdat any

$_ZNK5blink10SVGElement7IsValidEv = comdat any

$_ZN5blink10SVGElement22AnimateMotionTransformEv = comdat any

$_ZNK5blink10SVGElement22SelfHasRelativeLengthsEv = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZNK4base9TimeDelta6IntDivES0_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18SMILTimeWithOriginEEEmm = comdat any

$_ZNSt3__16__sortIRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEvT0_S7_T_ = comdat any

$_ZNSt3__17__sort4IRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEjT0_S7_S7_S7_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEbT0_S7_T_ = comdat any

$_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_16IdTargetObserverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_22ConditionEventListenerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK5blink22ConditionEventListener5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14SVGSMILElement9ConditionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14SVGSMILElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_14SVGSMILElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink14SVGSMILElementEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink14SVGSMILElementEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink14SVGSMILElementEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_13EventListenerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13EventListenerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13EventListenerEE7GetNameEPKv = comdat any

$_ZNK5blink13EventListener18NameInHeapSnapshotEv = comdat any

$_ZN5blink22ConditionEventListenerD0Ev = comdat any

$_ZN5blink22ConditionEventListener6InvokeEPNS_16ExecutionContextEPNS_5EventE = comdat any

$_ZNK5blink13EventListener14IsEventHandlerEv = comdat any

$_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv = comdat any

$_ZNK5blink13EventListener10ScriptBodyEv = comdat any

$_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE = comdat any

$_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE = comdat any

$_ZNK5blink13EventListener22IsJSBasedEventListenerEv = comdat any

$_ZNK5blink19NativeEventListener21IsNativeEventListenerEv = comdat any

$_ZNK5blink19NativeEventListener20IsImageEventListenerEv = comdat any

$_ZN5blink13EventListenerD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14SVGSMILElement9ConditionEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14SVGSMILElement9ConditionEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14SVGSMILElement9ConditionEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14SVGSMILElement9ConditionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14SVGSMILElement9ConditionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14SVGSMILElement9ConditionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14SVGSMILElement9ConditionEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_ = comdat any

$_ZN5blink10TraceTraitINS_17SMILTimeContainerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink22ConditionEventListenerE = comdat any

$_ZZN5blink11GCInfoTraitINS_14SVGSMILElement9ConditionEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14SVGSMILElement9ConditionEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink14SVGSMILElementE = hidden unnamed_addr constant { [171 x i8*], [3 x i8*], [3 x i8*] } { [171 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*)* @_ZN5blink14SVGSMILElementD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*)* @_ZN5blink14SVGSMILElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)* @_ZNK5blink14SVGSMILElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink14SVGSMILElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink10SVGElement20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast (void ()* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i1)* @_ZN5blink10SVGElement16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::SVGSMILElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink14SVGSMILElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink14SVGSMILElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink10SVGElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.687"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::SVGSMILElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink14SVGSMILElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink10SVGElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink10SVGElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink10SVGElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink14SVGSMILElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::SVGSMILElement"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink14SVGSMILElement20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i32)* @_ZN5blink10SVGElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZN5blink7Element14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*)* @_ZN5blink14SVGSMILElement20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i64)* @_ZN5blink10SVGElement15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink10SVGElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void ()* @_ZNK5blink10SVGElement29LocalCoordinateSpaceTransformENS0_8CTMScopeE to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement20IsSVGGeometryElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement20IsSVGGraphicsElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement14IsFilterEffectEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement13IsTextContentEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement17IsTextPositioningEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement22IsStructurallyExternalEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement7IsValidEv to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)* @_ZN5blink14SVGSMILElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE to i8*), i8* bitcast (%"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)* @_ZN5blink10SVGElement22AnimateMotionTransformEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZN5blink10SVGElement27HaveLoadedRequiredResourcesEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement22SelfHasRelativeLengthsEv to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*)* @_ZN5blink14SVGSMILElement25WillChangeAnimationTargetEv to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*)* @_ZN5blink14SVGSMILElement24DidChangeAnimationTargetEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -168 to i8*), i8* null, i8* bitcast (void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)* @_ZThn168_NK5blink14SVGSMILElement5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZN5blink9svg_names10kBeginAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"ms\00", align 1
@_ZZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringEE18s_indefinite_value = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringEE18s_indefinite_value = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"repeat(\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"repeat\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"begin\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"accesskey(\00", align 1
@_ZN5blink9svg_names8kEndAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names12kOnbeginAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names11kBeginEventE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink9svg_names10kOnendAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names9kEndEventE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink9svg_names13kOnrepeatAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names12kRepeatEventE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink9svg_names12kRestartAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.7 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"whenNotActive\00", align 1
@_ZN5blink9svg_names9kFillAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.9 = private unnamed_addr constant [7 x i8] c"freeze\00", align 1
@_ZN5blink9svg_names8kDurAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kRepeatDurAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kRepeatCountAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names8kMinAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names8kMaxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.10 = private unnamed_addr constant [37 x i8] c"current_iteration++ < kMaxIterations\00", align 1
@.str.11 = private unnamed_addr constant [72 x i8] c"../../third_party/blink/renderer/core/svg/animation/svg_smil_element.cc\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"repeatn\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.13 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.15 = private unnamed_addr constant [11 x i8] c"indefinite\00", align 1
@.str.16 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.20 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink10SVGElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.21 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.23 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.24 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18SMILTimeWithOriginEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SMILTimeWithOrigin]\00", align 1
@.str.25 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@_ZN5blink9svg_names7kSetTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names11kAnimateTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names17kAnimateMotionTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names20kAnimateTransformTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13EventListenerEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EventListener]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13EventListenerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13EventListenerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13EventListenerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink22ConditionEventListenerE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventListener"*)* @_ZN5blink13EventListenerD2Ev to i8*), i8* bitcast (void (%"class.blink::ConditionEventListener"*)* @_ZN5blink22ConditionEventListenerD0Ev to i8*), i8* bitcast (void (%"class.blink::ConditionEventListener"*, %"class.blink::ExecutionContext"*, %"class.blink::Event"*)* @_ZN5blink22ConditionEventListener6InvokeEPNS_16ExecutionContextEPNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener14IsEventHandlerEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv to i8*), i8* bitcast (%"class.WTF::String"* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener10ScriptBodyEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*, %"class.blink::EventListener"*)* @_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE to i8*), i8* bitcast (void (%"class.blink::ConditionEventListener"*, %"class.blink::Visitor"*)* @_ZNK5blink22ConditionEventListener5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener22IsJSBasedEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*)* @_ZNK5blink19NativeEventListener21IsNativeEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*)* @_ZNK5blink19NativeEventListener20IsImageEventListenerEv to i8*)] }, comdat, align 8
@.str.26 = private unnamed_addr constant [14 x i8] c"EventListener\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SVGSMILElement9ConditionEEEPKcv = private unnamed_addr constant [80 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGSMILElement::Condition]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14SVGSMILElement9ConditionEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14SVGSMILElement9ConditionEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14SVGSMILElement9ConditionEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14SVGSMILElement9ConditionEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14SVGSMILElement9ConditionEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.27 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@.str.28 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.29 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.30 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14SVGSMILElement9ConditionEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [191 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::SVGSMILElement::Condition>, WTF::VectorTraits<blink::Member<blink::SVGSMILElement::Condition> > >]\00", align 1
@.str.31 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.32 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.33 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_14SVGSMILElementEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [366 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::SVGSMILElement>, blink::Member<blink::SVGSMILElement>, WTF::IdentityExtractor, WTF::MemberHash<blink::SVGSMILElement>, WTF::HashTraits<blink::Member<blink::SVGSMILElement> >, WTF::HashTraits<blink::Member<blink::SVGSMILElement> >, blink::HeapAllocator> >]\00", align 1

@_ZN5blink14SVGSMILElement9ConditionC1ENS1_4TypeENS0_10BeginOrEndERKN3WTF12AtomicStringES7_NS_8SMILTimeEj = hidden unnamed_addr alias void (%"class.blink::SVGSMILElement::Condition"*, i32, i32, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i64, i32), void (%"class.blink::SVGSMILElement::Condition"*, i32, i32, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i64, i32)* @_ZN5blink14SVGSMILElement9ConditionC2ENS1_4TypeENS0_10BeginOrEndERKN3WTF12AtomicStringES7_NS_8SMILTimeEj
@_ZN5blink14SVGSMILElement9ConditionD1Ev = hidden unnamed_addr alias void (%"class.blink::SVGSMILElement::Condition"*), void (%"class.blink::SVGSMILElement::Condition"*)* @_ZN5blink14SVGSMILElement9ConditionD2Ev
@_ZN5blink14SVGSMILElementC1ERKNS_13QualifiedNameERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::SVGSMILElement"*, %"class.blink::QualifiedName"*, %"class.blink::Document"*), void (%"class.blink::SVGSMILElement"*, %"class.blink::QualifiedName"*, %"class.blink::Document"*)* @_ZN5blink14SVGSMILElementC2ERKNS_13QualifiedNameERNS_8DocumentE
@_ZN5blink14SVGSMILElementD1Ev = hidden unnamed_addr alias void (%"class.blink::SVGSMILElement"*), void (%"class.blink::SVGSMILElement"*)* @_ZN5blink14SVGSMILElementD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SMILInstanceTimeList6AppendENS_8SMILTimeENS_14SMILTimeOriginE(%"class.blink::SMILInstanceTimeList"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::SMILTimeWithOrigin", align 8
  %5 = bitcast %"class.blink::SMILTimeWithOrigin"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %4, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %4, i64 0, i32 1
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %21, label %13, !prof !2

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %14, align 8
  %16 = zext i32 %9 to i64
  %17 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %15, i64 %16
  %18 = bitcast %"class.blink::SMILTimeWithOrigin"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %5, i64 16, i1 false) #16
  %19 = load i32, i32* %8, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %8, align 4
  br label %23

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* %22, %"class.blink::SMILTimeWithOrigin"* nonnull dereferenceable(16) %4) #16
  br label %23

23:                                               ; preds = %13, %21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #16
  %24 = shl i32 1, %2
  %25 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = or i32 %26, %24
  store i32 %27, i32* %25, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SMILInstanceTimeList21InsertSortedAndUniqueENS_8SMILTimeENS_14SMILTimeOriginE(%"class.blink::SMILInstanceTimeList"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::SMILTimeWithOrigin", align 8
  %5 = bitcast %"class.blink::SMILTimeWithOrigin"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %4, i64 0, i32 1
  %8 = bitcast %"class.blink::SMILTimeWithOrigin"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store i64 %1, i64* %6, align 8
  store i32 %2, i32* %7, align 8
  %9 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %11, i64 %14
  %16 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %11 to i64
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %3, %18
  %19 = phi i64 [ %30, %18 ], [ %14, %3 ]
  %20 = phi %"class.blink::SMILTimeWithOrigin"* [ %29, %18 ], [ %11, %3 ]
  %21 = lshr i64 %19, 1
  %22 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %20, i64 %21
  %23 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp slt i64 %24, %1
  %26 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %22, i64 1
  %27 = xor i64 %21, -1
  %28 = add i64 %19, %27
  %29 = select i1 %25, %"class.blink::SMILTimeWithOrigin"* %26, %"class.blink::SMILTimeWithOrigin"* %20
  %30 = select i1 %25, i64 %28, i64 %21
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %18

32:                                               ; preds = %18, %3
  %33 = phi %"class.blink::SMILTimeWithOrigin"* [ %11, %3 ], [ %29, %18 ]
  %34 = icmp eq %"class.blink::SMILTimeWithOrigin"* %33, %15
  br i1 %34, label %48, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %33, i64 0, i32 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %1
  br i1 %38, label %39, label %48

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %33, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, %2
  br label %45

43:                                               ; preds = %45
  %44 = icmp eq %"class.blink::SMILTimeWithOrigin"* %47, %15
  br i1 %44, label %48, label %45

45:                                               ; preds = %39, %43
  %46 = phi %"class.blink::SMILTimeWithOrigin"* [ %47, %43 ], [ %33, %39 ]
  %47 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %46, i64 1
  br i1 %42, label %57, label %43

48:                                               ; preds = %43, %35, %32
  %49 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %33 to i64
  %50 = sub i64 %49, %16
  %51 = lshr exact i64 %50, 4
  %52 = trunc i64 %51 to i32
  call void @_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE6insertIRS2_EEvjOT_(%"class.WTF::Vector"* %9, i32 %52, %"class.blink::SMILTimeWithOrigin"* nonnull dereferenceable(16) %4)
  %53 = shl i32 1, %2
  %54 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = or i32 %55, %53
  store i32 %56, i32* %54, align 8
  br label %57

57:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE6insertIRS2_EEvjOT_(%"class.WTF::Vector"*, i32, %"class.blink::SMILTimeWithOrigin"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25, i64 0, i64 0), i8* %15, i8* %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.21, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = call %"class.blink::SMILTimeWithOrigin"* @_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector"* %0, i32 %29, %"class.blink::SMILTimeWithOrigin"* %2)
  br label %31

31:                                               ; preds = %28, %23
  %32 = phi %"class.blink::SMILTimeWithOrigin"* [ %30, %28 ], [ %2, %23 ]
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %33, align 8
  %35 = zext i32 %1 to i64
  %36 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %34, i64 %35
  %37 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %36, i64 1
  %38 = icmp ne %"class.blink::SMILTimeWithOrigin"* %37, null
  %39 = icmp ne %"class.blink::SMILTimeWithOrigin"* %36, null
  %40 = and i1 %39, %38
  br i1 %40, label %43, label %41, !prof !3

41:                                               ; preds = %31
  %42 = bitcast %"class.blink::SMILTimeWithOrigin"* %36 to i8*
  br label %52

43:                                               ; preds = %31
  %44 = load i32, i32* %9, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %34, i64 %45
  %47 = bitcast %"class.blink::SMILTimeWithOrigin"* %37 to i8*
  %48 = bitcast %"class.blink::SMILTimeWithOrigin"* %36 to i8*
  %49 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %46 to i64
  %50 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %36 to i64
  %51 = sub i64 %49, %50
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* nonnull align 8 %48, i64 %51, i1 false) #16
  br label %52

52:                                               ; preds = %41, %43
  %53 = phi i8* [ %42, %41 ], [ %48, %43 ]
  %54 = bitcast %"class.blink::SMILTimeWithOrigin"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 16, i1 false) #16
  %55 = load i32, i32* %9, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SMILInstanceTimeList16RemoveWithOriginENS_14SMILTimeOriginE(%"class.blink::SMILInstanceTimeList"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = shl i32 1, %1
  %6 = and i32 %4, %5
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %88, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  %16 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %10 to i64
  br i1 %15, label %25, label %17

17:                                               ; preds = %8, %22
  %18 = phi %"class.blink::SMILTimeWithOrigin"* [ %23, %22 ], [ %10, %8 ]
  %19 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, %1
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %18, i64 1
  %24 = icmp eq %"class.blink::SMILTimeWithOrigin"* %23, %14
  br i1 %24, label %78, label %17

25:                                               ; preds = %17, %8
  %26 = phi %"class.blink::SMILTimeWithOrigin"* [ %10, %8 ], [ %18, %17 ]
  %27 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %26 to i64
  %28 = icmp eq %"class.blink::SMILTimeWithOrigin"* %26, %14
  br i1 %28, label %78, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 1
  %31 = icmp eq %"class.blink::SMILTimeWithOrigin"* %30, %14
  br i1 %31, label %78, label %32

32:                                               ; preds = %29
  %33 = add nsw i64 %13, -2
  %34 = getelementptr %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %10, i64 %33, i32 0, i32 0, i32 0
  %35 = ptrtoint i64* %34 to i64
  %36 = sub i64 %35, %27
  %37 = and i64 %36, 16
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %50

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 1, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, %1
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.blink::SMILTimeWithOrigin"* %26 to i8*
  %45 = bitcast %"class.blink::SMILTimeWithOrigin"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 12, i1 false) #16
  %46 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 1
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi %"class.blink::SMILTimeWithOrigin"* [ %26, %39 ], [ %46, %43 ]
  %49 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 2
  br label %50

50:                                               ; preds = %47, %32
  %51 = phi %"class.blink::SMILTimeWithOrigin"* [ undef, %32 ], [ %48, %47 ]
  %52 = phi %"class.blink::SMILTimeWithOrigin"* [ %30, %32 ], [ %49, %47 ]
  %53 = phi %"class.blink::SMILTimeWithOrigin"* [ %26, %32 ], [ %30, %47 ]
  %54 = phi %"class.blink::SMILTimeWithOrigin"* [ %26, %32 ], [ %48, %47 ]
  %55 = icmp ult i64 %36, 16
  br i1 %55, label %73, label %56

56:                                               ; preds = %50, %93
  %57 = phi %"class.blink::SMILTimeWithOrigin"* [ %95, %93 ], [ %52, %50 ]
  %58 = phi %"class.blink::SMILTimeWithOrigin"* [ %69, %93 ], [ %53, %50 ]
  %59 = phi %"class.blink::SMILTimeWithOrigin"* [ %94, %93 ], [ %54, %50 ]
  %60 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %58, i64 1, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, %1
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = bitcast %"class.blink::SMILTimeWithOrigin"* %59 to i8*
  %65 = bitcast %"class.blink::SMILTimeWithOrigin"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 12, i1 false) #16
  %66 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %59, i64 1
  br label %67

67:                                               ; preds = %63, %56
  %68 = phi %"class.blink::SMILTimeWithOrigin"* [ %59, %56 ], [ %66, %63 ]
  %69 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %57, i64 1
  %70 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %57, i64 1, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, %1
  br i1 %72, label %93, label %89

73:                                               ; preds = %93, %50
  %74 = phi %"class.blink::SMILTimeWithOrigin"* [ %51, %50 ], [ %94, %93 ]
  %75 = bitcast %"class.blink::SMILInstanceTimeList"* %0 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = load i32, i32* %3, align 8
  br label %78

78:                                               ; preds = %22, %73, %25, %29
  %79 = phi i32 [ %4, %25 ], [ %4, %29 ], [ %77, %73 ], [ %4, %22 ]
  %80 = phi i64 [ %16, %25 ], [ %16, %29 ], [ %76, %73 ], [ %16, %22 ]
  %81 = phi %"class.blink::SMILTimeWithOrigin"* [ %14, %25 ], [ %26, %29 ], [ %74, %73 ], [ %14, %22 ]
  %82 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %81 to i64
  %83 = sub i64 %82, %80
  %84 = lshr exact i64 %83, 4
  %85 = trunc i64 %84 to i32
  store i32 %85, i32* %11, align 4
  %86 = xor i32 %5, -1
  %87 = and i32 %79, %86
  store i32 %87, i32* %3, align 8
  br label %88

88:                                               ; preds = %2, %78
  ret void

89:                                               ; preds = %67
  %90 = bitcast %"class.blink::SMILTimeWithOrigin"* %68 to i8*
  %91 = bitcast %"class.blink::SMILTimeWithOrigin"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 12, i1 false) #16
  %92 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %68, i64 1
  br label %93

93:                                               ; preds = %89, %67
  %94 = phi %"class.blink::SMILTimeWithOrigin"* [ %68, %67 ], [ %92, %89 ]
  %95 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %57, i64 2
  %96 = icmp eq %"class.blink::SMILTimeWithOrigin"* %95, %14
  br i1 %96, label %73, label %56
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SMILInstanceTimeList4SortEv(%"class.blink::SMILInstanceTimeList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.std::__1::__less.718", align 1
  %3 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %4, i64 %7
  %9 = getelementptr inbounds %"struct.std::__1::__less.718", %"struct.std::__1::__less.718"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #16
  call void @_ZNSt3__16__sortIRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEvT0_S7_T_(%"class.blink::SMILTimeWithOrigin"* %4, %"class.blink::SMILTimeWithOrigin"* %8, %"struct.std::__1::__less.718"* nonnull dereferenceable(1) %2) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink20SMILInstanceTimeList9NextAfterENS_8SMILTimeE(%"class.blink::SMILInstanceTimeList"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %2, %10
  %11 = phi i64 [ %22, %10 ], [ %7, %2 ]
  %12 = phi %"class.blink::SMILTimeWithOrigin"* [ %21, %10 ], [ %4, %2 ]
  %13 = lshr i64 %11, 1
  %14 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %12, i64 %13
  %15 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp sle i64 %16, %1
  %18 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %14, i64 1
  %19 = xor i64 %13, -1
  %20 = add i64 %11, %19
  %21 = select i1 %17, %"class.blink::SMILTimeWithOrigin"* %18, %"class.blink::SMILTimeWithOrigin"* %12
  %22 = select i1 %17, i64 %20, i64 %13
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %10

24:                                               ; preds = %10, %2
  %25 = phi %"class.blink::SMILTimeWithOrigin"* [ %4, %2 ], [ %21, %10 ]
  %26 = icmp eq %"class.blink::SMILTimeWithOrigin"* %25, %8
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %25, i64 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  br label %30

30:                                               ; preds = %24, %27
  %31 = phi i64 [ %29, %27 ], [ 9223372036854775807, %24 ]
  ret i64 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement9ConditionC2ENS1_4TypeENS0_10BeginOrEndERKN3WTF12AtomicStringES7_NS_8SMILTimeEj(%"class.blink::SVGSMILElement::Condition"* nocapture, i32, i32, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), i64, i32) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 1
  store i32 %2, i32* %9, align 4
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #16
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #16
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %7, %14, %29
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #16
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #16
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %31, %36, %51
  %54 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %5, i64* %54, align 8
  %55 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 5
  store i32 %6, i32* %55, align 8
  %56 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 6, i32 0, i32 0
  %57 = bitcast %"class.blink::SVGElement"** %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement9ConditionD2Ev(%"class.blink::SVGSMILElement::Condition"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #16
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #16
  br label %35

35:                                               ; preds = %18, %31, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SVGSMILElement9Condition5TraceEPNS_7VisitorE(%"class.blink::SVGSMILElement::Condition"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 6
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv) #16
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 7
  %15 = bitcast %"class.blink::Member.40"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16IdTargetObserverEE5TraceEPNS_7VisitorEPKv) #16
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 8
  %26 = bitcast %"class.blink::Member.46"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22ConditionEventListenerEE5TraceEPNS_7VisitorEPKv) #16
  br label %35

35:                                               ; preds = %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement9Condition15ConnectSyncBaseERS0_(%"class.blink::SVGSMILElement::Condition"*, %"class.blink::SVGSMILElement"* dereferenceable(416)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SVGSMILElement"*, align 8
  %4 = alloca %"struct.blink::SVGSMILElement::NotifyDependentsInfo", align 8
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = alloca %"class.blink::WeakPersistent", align 8
  %7 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 2
  %11 = bitcast %"class.blink::WeakPersistent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %6, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %6, i64 0, i32 0, i32 0
  store %"class.blink::SVGSMILElement"* %1, %"class.blink::SVGSMILElement"** %13, align 8, !alias.scope !4
  %14 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8, !alias.scope !4
  %15 = ptrtoint %"class.blink::SVGSMILElement"* %1 to i64
  switch i64 %15, label %16 [
    i64 0, label %31
    i64 -1, label %31
  ]

16:                                               ; preds = %2
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8, !noalias !4
  %18 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %18, align 8, !noalias !4
  %20 = icmp eq %"class.blink::PersistentNode"* %19, null
  br i1 %20, label %21, label %24, !prof !2

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %22) #16
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %18, align 8
  br label %24

24:                                               ; preds = %21, %16
  %25 = phi %"class.blink::PersistentNode"* [ %23, %21 ], [ %19, %16 ]
  %26 = bitcast %"class.blink::PersistentNode"* %25 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !4
  %28 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  store i64 %27, i64* %28, align 8, !noalias !4
  %29 = bitcast %"class.blink::PersistentNode"* %25 to %"class.blink::PersistentBase.614"**
  store %"class.blink::PersistentBase.614"* %12, %"class.blink::PersistentBase.614"** %29, align 8, !noalias !4
  %30 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %25, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14SVGSMILElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %30, align 8
  store %"class.blink::PersistentNode"* %25, %"class.blink::PersistentNode"** %14, align 8, !alias.scope !4
  br label %31

31:                                               ; preds = %2, %2, %24
  %32 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %32, align 8, !alias.scope !7
  %33 = call i8* @_Znwm(i64 64) #17, !noalias !10
  %34 = bitcast i8* %33 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %34, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink14SVGSMILElementEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink14SVGSMILElementEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink14SVGSMILElementEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #16, !noalias !10
  %35 = getelementptr inbounds i8, i8* %33, i64 32
  %36 = bitcast i8* %35 to <2 x i64>*
  store <2 x i64> <i64 1113, i64 0>, <2 x i64>* %36, align 8, !noalias !10
  %37 = getelementptr inbounds i8, i8* %33, i64 48
  %38 = bitcast %"class.blink::WeakPersistent"* %6 to i64*
  %39 = load i64, i64* %38, align 8, !noalias !10
  %40 = bitcast i8* %37 to i64*
  store i64 %39, i64* %40, align 8, !noalias !10
  %41 = getelementptr inbounds i8, i8* %33, i64 56
  %42 = bitcast i8* %41 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %42, align 8, !noalias !10
  switch i64 %39, label %43 [
    i64 0, label %58
    i64 -1, label %58
  ]

43:                                               ; preds = %31
  %44 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8, !noalias !10
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %45, align 8, !noalias !10
  %47 = icmp eq %"class.blink::PersistentNode"* %46, null
  br i1 %47, label %48, label %51, !prof !2

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %44, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %49) #16, !noalias !10
  %50 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %45, align 8, !noalias !10
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi %"class.blink::PersistentNode"* [ %50, %48 ], [ %46, %43 ]
  %53 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  %54 = load i64, i64* %53, align 8, !noalias !10
  %55 = bitcast %"class.blink::PersistentRegion"* %44 to i64*
  store i64 %54, i64* %55, align 8, !noalias !10
  %56 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 0
  store i8* %37, i8** %56, align 8, !noalias !10
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14SVGSMILElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %57, align 8, !noalias !10
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %42, align 8, !noalias !10
  br label %58

58:                                               ; preds = %31, %31, %51
  %59 = bitcast %"class.base::RepeatingCallback"* %5 to i8**
  store i8* %33, i8** %59, align 8, !alias.scope !10
  %60 = call %"class.blink::Element"* @_ZN5blink15SVGURIReference13ObserveTargetERNS_6MemberINS_16IdTargetObserverEEERNS_9TreeScopeERKN3WTF12AtomicStringEN4base17RepeatingCallbackIFvvEEE(%"class.blink::Member.40"* dereferenceable(8) %7, %"class.blink::TreeScope"* dereferenceable(104) %9, %"class.WTF::AtomicString"* dereferenceable(8) %10, %"class.base::RepeatingCallback"* nonnull %5) #16
  %61 = icmp eq %"class.blink::Element"* %60, null
  br i1 %61, label %103, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %60, i64 0, i32 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, 48
  %66 = icmp eq i32 %65, 32
  br i1 %66, label %67, label %103

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %60, i64 0, i32 0, i32 0
  %69 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSetTagE, align 8
  %70 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 1, i32 2
  %73 = bitcast %"class.blink::Member.4"* %72 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %76, %78
  br i1 %79, label %101, label %80

80:                                               ; preds = %67
  %81 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names11kAnimateTagE, align 8
  %82 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 3, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %76, %85
  br i1 %86, label %101, label %87

87:                                               ; preds = %80
  %88 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names17kAnimateMotionTagE, align 8
  %89 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %90, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %76, %92
  br i1 %93, label %101, label %94

94:                                               ; preds = %87
  %95 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names20kAnimateTransformTagE, align 8
  %96 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %76, %99
  br i1 %100, label %101, label %103

101:                                              ; preds = %94, %87, %80, %67
  %102 = bitcast %"class.blink::Element"* %60 to %"class.blink::SVGSMILElement"*
  br label %103

103:                                              ; preds = %58, %62, %94, %101
  %104 = phi %"class.blink::SVGSMILElement"* [ %102, %101 ], [ null, %94 ], [ null, %58 ], [ null, %62 ]
  %105 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %105) #16
  %106 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %107 = icmp eq %"class.blink::PersistentNode"* %106, null
  br i1 %107, label %115, label %108

108:                                              ; preds = %103
  %109 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8
  %110 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %109, i64 0, i32 0, i32 0
  %111 = bitcast %"class.blink::PersistentRegion"* %109 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.blink::PersistentNode"* %106 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %106, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %114, align 8
  store %"class.blink::PersistentNode"* %106, %"class.blink::PersistentNode"** %110, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %115

115:                                              ; preds = %103, %108
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #16
  %116 = icmp eq %"class.blink::SVGSMILElement"* %104, null
  br i1 %116, label %141, label %117

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 6
  %119 = ptrtoint %"class.blink::SVGSMILElement"* %104 to i64
  %120 = bitcast %"class.blink::Member"* %118 to i64*
  store atomic i64 %119, i64* %120 monotonic, align 8
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = bitcast %"class.blink::SVGSMILElement"* %104 to i8*
  %125 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %124) #16
  br label %126

126:                                              ; preds = %117, %123
  %127 = bitcast %"class.blink::SVGSMILElement"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #16
  store %"class.blink::SVGSMILElement"* %1, %"class.blink::SVGSMILElement"** %3, align 8
  %128 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %104, i64 0, i32 10, i32 0, i32 0
  %129 = call { %"class.blink::Member.50"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.66"* %128, %"class.blink::SVGSMILElement"** nonnull dereferenceable(8) %3, %"class.blink::SVGSMILElement"** nonnull dereferenceable(8) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #16
  %130 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %104, i64 0, i32 13, i32 0, i32 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = icmp slt i64 %131, 9223372036854775806
  br i1 %132, label %133, label %141

133:                                              ; preds = %126
  %134 = bitcast %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #16
  %135 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 0
  store i32 2, i32* %135, align 8
  %136 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 1
  store i32 0, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 2, i32 0, i32 0
  store i64 %131, i64* %137, align 8
  %138 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %104, i64 0, i32 13, i32 1, i32 0, i32 0
  %139 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 3, i32 0, i32 0
  %140 = load i64, i64* %138, align 8
  store i64 %140, i64* %139, align 8
  call void @_ZN5blink14SVGSMILElement31CreateInstanceTimesFromSyncBaseEPS0_RKNS0_20NotifyDependentsInfoE(%"class.blink::SVGSMILElement"* %1, %"class.blink::SVGSMILElement"* nonnull %104, %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* nonnull dereferenceable(24) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #16
  br label %141

141:                                              ; preds = %133, %126, %115
  ret void
}

declare %"class.blink::Element"* @_ZN5blink15SVGURIReference13ObserveTargetERNS_6MemberINS_16IdTargetObserverEEERNS_9TreeScopeERKN3WTF12AtomicStringEN4base17RepeatingCallbackIFvvEEE(%"class.blink::Member.40"* dereferenceable(8), %"class.blink::TreeScope"* dereferenceable(104), %"class.WTF::AtomicString"* dereferenceable(8), %"class.base::RepeatingCallback"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement20AddSyncBaseDependentERS0_(%"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"* dereferenceable(416)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SVGSMILElement"*, align 8
  %4 = alloca %"struct.blink::SVGSMILElement::NotifyDependentsInfo", align 8
  %5 = bitcast %"class.blink::SVGSMILElement"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  store %"class.blink::SVGSMILElement"* %1, %"class.blink::SVGSMILElement"** %3, align 8
  %6 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 10, i32 0, i32 0
  %7 = call { %"class.blink::Member.50"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.66"* %6, %"class.blink::SVGSMILElement"** nonnull dereferenceable(8) %3, %"class.blink::SVGSMILElement"** nonnull dereferenceable(8) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp slt i64 %9, 9223372036854775806
  br i1 %10, label %11, label %19

11:                                               ; preds = %2
  %12 = bitcast %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 0
  store i32 2, i32* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 1
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 2, i32 0, i32 0
  store i64 %9, i64* %15, align 8
  %16 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 3, i32 0, i32 0
  %18 = load i64, i64* %16, align 8
  store i64 %18, i64* %17, align 8
  call void @_ZN5blink14SVGSMILElement31CreateInstanceTimesFromSyncBaseEPS0_RKNS0_20NotifyDependentsInfoE(%"class.blink::SVGSMILElement"* %1, %"class.blink::SVGSMILElement"* %0, %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  br label %19

19:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement9Condition18DisconnectSyncBaseERS0_(%"class.blink::SVGSMILElement::Condition"*, %"class.blink::SVGSMILElement"* dereferenceable(416)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 7
  tail call void @_ZN5blink15SVGURIReference15UnobserveTargetERNS_6MemberINS_16IdTargetObserverEEE(%"class.blink::Member.40"* dereferenceable(8) %3) #16
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %5, align 8
  %7 = icmp eq %"class.blink::SVGElement"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::SVGElement"* %6 to %"class.blink::SVGSMILElement"*
  tail call void @_ZN5blink14SVGSMILElement23RemoveSyncBaseDependentERS0_(%"class.blink::SVGSMILElement"* nonnull %9, %"class.blink::SVGSMILElement"* dereferenceable(416) %1)
  %10 = bitcast %"class.blink::Member"* %4 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

declare void @_ZN5blink15SVGURIReference15UnobserveTargetERNS_6MemberINS_16IdTargetObserverEEE(%"class.blink::Member.40"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement23RemoveSyncBaseDependentERS0_(%"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"* dereferenceable(416)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 10, i32 0
  %4 = ptrtoint %"class.blink::SVGSMILElement"* %1 to i64
  %5 = getelementptr inbounds %"class.WTF::HashSet.65", %"class.WTF::HashSet.65"* %3, i64 0, i32 0, i32 0
  %6 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %5, align 8
  %7 = icmp eq %"class.blink::Member.50"* %6, null
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  br i1 %7, label %71, label %10

10:                                               ; preds = %2
  %11 = add i32 %9, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %6, i64 %33
  %35 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %35, align 8
  %37 = icmp eq %"class.blink::SVGSMILElement"* %36, %1
  br i1 %37, label %66, label %38

38:                                               ; preds = %10
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %57, %38
  %53 = phi %"class.blink::SVGSMILElement"* [ %36, %38 ], [ %64, %57 ]
  %54 = phi i64 [ %33, %38 ], [ %61, %57 ]
  %55 = phi i64 [ 0, %38 ], [ %59, %57 ]
  %56 = icmp eq %"class.blink::SVGSMILElement"* %53, null
  br i1 %56, label %71, label %57

57:                                               ; preds = %52
  %58 = icmp eq i64 %55, 0
  %59 = select i1 %58, i64 %51, i64 %55
  %60 = add i64 %59, %54
  %61 = and i64 %60, %12
  %62 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %6, i64 %61
  %63 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %63, align 8
  %65 = icmp eq %"class.blink::SVGSMILElement"* %64, %1
  br i1 %65, label %66, label %52

66:                                               ; preds = %57, %10
  %67 = phi %"class.blink::Member.50"* [ %34, %10 ], [ %62, %57 ]
  %68 = icmp eq %"class.blink::Member.50"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = zext i32 %9 to i64
  br label %74

71:                                               ; preds = %52, %66, %2
  %72 = zext i32 %9 to i64
  %73 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %6, i64 %72
  br label %74

74:                                               ; preds = %71, %69
  %75 = phi i64 [ %70, %69 ], [ %72, %71 ]
  %76 = phi %"class.blink::Member.50"* [ %67, %69 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %6, i64 %75
  %78 = icmp eq %"class.blink::Member.50"* %77, %76
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::HashSet.65", %"class.WTF::HashSet.65"* %3, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.66"* %80, %"class.blink::Member.50"* %76) #16
  br label %81

81:                                               ; preds = %74, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement9Condition16ConnectEventBaseERS0_(%"class.blink::SVGSMILElement::Condition"*, %"class.blink::SVGSMILElement"* dereferenceable(416)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = alloca %"class.blink::WeakPersistent", align 8
  %5 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %2, %9
  %14 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %1, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %14, align 8
  br label %91

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 7
  %18 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = bitcast %"class.blink::WeakPersistent"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #16
  %21 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %4, i64 0, i32 0, i32 0
  store %"class.blink::SVGSMILElement"* %1, %"class.blink::SVGSMILElement"** %22, align 8, !alias.scope !15
  %23 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %4, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %23, align 8, !alias.scope !15
  %24 = ptrtoint %"class.blink::SVGSMILElement"* %1 to i64
  switch i64 %24, label %25 [
    i64 0, label %40
    i64 -1, label %40
  ]

25:                                               ; preds = %16
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8, !noalias !15
  %27 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8, !noalias !15
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %30, label %33, !prof !2

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %31) #16
  %32 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  br label %33

33:                                               ; preds = %30, %25
  %34 = phi %"class.blink::PersistentNode"* [ %32, %30 ], [ %28, %25 ]
  %35 = bitcast %"class.blink::PersistentNode"* %34 to i64*
  %36 = load i64, i64* %35, align 8, !noalias !15
  %37 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  store i64 %36, i64* %37, align 8, !noalias !15
  %38 = bitcast %"class.blink::PersistentNode"* %34 to %"class.blink::PersistentBase.614"**
  store %"class.blink::PersistentBase.614"* %21, %"class.blink::PersistentBase.614"** %38, align 8, !noalias !15
  %39 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %34, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14SVGSMILElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %39, align 8
  store %"class.blink::PersistentNode"* %34, %"class.blink::PersistentNode"** %23, align 8, !alias.scope !15
  br label %40

40:                                               ; preds = %16, %16, %33
  %41 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %41, align 8, !alias.scope !18
  %42 = call i8* @_Znwm(i64 64) #17, !noalias !21
  %43 = bitcast i8* %42 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %43, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink14SVGSMILElementEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink14SVGSMILElementEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink14SVGSMILElementEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #16, !noalias !21
  %44 = getelementptr inbounds i8, i8* %42, i64 32
  %45 = bitcast i8* %44 to <2 x i64>*
  store <2 x i64> <i64 1113, i64 0>, <2 x i64>* %45, align 8, !noalias !21
  %46 = getelementptr inbounds i8, i8* %42, i64 48
  %47 = bitcast %"class.blink::WeakPersistent"* %4 to i64*
  %48 = load i64, i64* %47, align 8, !noalias !21
  %49 = bitcast i8* %46 to i64*
  store i64 %48, i64* %49, align 8, !noalias !21
  %50 = getelementptr inbounds i8, i8* %42, i64 56
  %51 = bitcast i8* %50 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %51, align 8, !noalias !21
  switch i64 %48, label %52 [
    i64 0, label %67
    i64 -1, label %67
  ]

52:                                               ; preds = %40
  %53 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8, !noalias !21
  %54 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %54, align 8, !noalias !21
  %56 = icmp eq %"class.blink::PersistentNode"* %55, null
  br i1 %56, label %57, label %60, !prof !2

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %53, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %58) #16, !noalias !21
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %54, align 8, !noalias !21
  br label %60

60:                                               ; preds = %57, %52
  %61 = phi %"class.blink::PersistentNode"* [ %59, %57 ], [ %55, %52 ]
  %62 = bitcast %"class.blink::PersistentNode"* %61 to i64*
  %63 = load i64, i64* %62, align 8, !noalias !21
  %64 = bitcast %"class.blink::PersistentRegion"* %53 to i64*
  store i64 %63, i64* %64, align 8, !noalias !21
  %65 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %61, i64 0, i32 0
  store i8* %46, i8** %65, align 8, !noalias !21
  %66 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %61, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14SVGSMILElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %66, align 8, !noalias !21
  store %"class.blink::PersistentNode"* %61, %"class.blink::PersistentNode"** %51, align 8, !noalias !21
  br label %67

67:                                               ; preds = %40, %40, %60
  %68 = bitcast %"class.base::RepeatingCallback"* %3 to i8**
  store i8* %42, i8** %68, align 8, !alias.scope !21
  %69 = call %"class.blink::Element"* @_ZN5blink15SVGURIReference13ObserveTargetERNS_6MemberINS_16IdTargetObserverEEERNS_9TreeScopeERKN3WTF12AtomicStringEN4base17RepeatingCallbackIFvvEEE(%"class.blink::Member.40"* dereferenceable(8) %17, %"class.blink::TreeScope"* dereferenceable(104) %19, %"class.WTF::AtomicString"* dereferenceable(8) %5, %"class.base::RepeatingCallback"* nonnull %3) #16
  %70 = icmp eq %"class.blink::Element"* %69, null
  br i1 %70, label %78, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %69, i64 0, i32 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = and i32 %73, 48
  %75 = icmp eq i32 %74, 32
  %76 = bitcast %"class.blink::Element"* %69 to %"class.blink::SVGElement"*
  %77 = select i1 %75, %"class.blink::SVGElement"* %76, %"class.blink::SVGElement"* null
  br label %78

78:                                               ; preds = %67, %71
  %79 = phi %"class.blink::SVGElement"* [ %77, %71 ], [ null, %67 ]
  %80 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %80) #16
  %81 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %23, align 8
  %82 = icmp eq %"class.blink::PersistentNode"* %81, null
  br i1 %82, label %90, label %83

83:                                               ; preds = %78
  %84 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8
  %85 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %84, i64 0, i32 0, i32 0
  %86 = bitcast %"class.blink::PersistentRegion"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.blink::PersistentNode"* %81 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %81, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %89, align 8
  store %"class.blink::PersistentNode"* %81, %"class.blink::PersistentNode"** %85, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %23, align 8
  br label %90

90:                                               ; preds = %78, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #16
  br label %91

91:                                               ; preds = %90, %13
  %92 = phi %"class.blink::SVGElement"* [ %15, %13 ], [ %79, %90 ]
  %93 = icmp eq %"class.blink::SVGElement"* %92, null
  br i1 %93, label %138, label %94

94:                                               ; preds = %91
  %95 = ptrtoint %"class.blink::SVGSMILElement"* %1 to i64
  %96 = ptrtoint %"class.blink::SVGSMILElement::Condition"* %0 to i64
  %97 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm(i64 48) #16
  %98 = getelementptr inbounds i8, i8* %97, i64 8
  store i8 0, i8* %98, align 8
  %99 = getelementptr inbounds i8, i8* %97, i64 16
  store i8 0, i8* %99, align 8
  %100 = bitcast i8* %97 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink22ConditionEventListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %100, align 8
  %101 = getelementptr inbounds i8, i8* %97, i64 32
  %102 = bitcast i8* %101 to i64*
  store i64 %95, i64* %102, align 8
  %103 = getelementptr inbounds i8, i8* %97, i64 40
  %104 = bitcast i8* %103 to i64*
  store i64 %96, i64* %104, align 8
  %105 = getelementptr inbounds i8, i8* %97, i64 -4
  %106 = bitcast i8* %105 to i16*
  %107 = load atomic i16, i16* %106 monotonic, align 2
  %108 = or i16 %107, 1
  store atomic i16 %108, i16* %106 release, align 2
  %109 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 8
  %110 = ptrtoint i8* %97 to i64
  %111 = bitcast %"class.blink::Member.46"* %109 to i64*
  store atomic i64 %110, i64* %111 monotonic, align 8
  %112 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %94
  %115 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %97) #16
  br label %116

116:                                              ; preds = %94, %114
  %117 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 6
  %118 = ptrtoint %"class.blink::SVGElement"* %92 to i64
  %119 = bitcast %"class.blink::Member"* %117 to i64*
  store atomic i64 %118, i64* %119 monotonic, align 8
  %120 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %116
  %123 = bitcast %"class.blink::SVGElement"* %92 to i8*
  %124 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %123) #16
  %125 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %117, i64 0, i32 0, i32 0
  %126 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %125, align 8
  br label %127

127:                                              ; preds = %116, %122
  %128 = phi %"class.blink::SVGElement"* [ %92, %116 ], [ %126, %122 ]
  %129 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %117, i64 0, i32 0, i32 0
  %130 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 3
  %132 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %109, i64 0, i32 0, i32 0
  %133 = load %"class.blink::ConditionEventListener"*, %"class.blink::ConditionEventListener"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::ConditionEventListener", %"class.blink::ConditionEventListener"* %133, i64 0, i32 0, i32 0
  %135 = call zeroext i1 @_ZN5blink11EventTarget16addEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerEb(%"class.blink::EventTarget"* %130, %"class.WTF::AtomicString"* dereferenceable(8) %131, %"class.blink::EventListener"* %134, i1 zeroext false) #16
  %136 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %1, i64 0, i32 0
  %137 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %129, align 8
  call void @_ZN5blink10SVGElement14AddReferenceToEPS0_(%"class.blink::SVGElement"* %136, %"class.blink::SVGElement"* %137) #16
  br label %138

138:                                              ; preds = %91, %127
  ret void
}

declare zeroext i1 @_ZN5blink11EventTarget16addEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerEb(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, i1 zeroext) local_unnamed_addr #4

declare void @_ZN5blink10SVGElement14AddReferenceToEPS0_(%"class.blink::SVGElement"*, %"class.blink::SVGElement"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement9Condition19DisconnectEventBaseERS0_(%"class.blink::SVGSMILElement::Condition"*, %"class.blink::SVGSMILElement"* nocapture readnone dereferenceable(416)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 7
  tail call void @_ZN5blink15SVGURIReference15UnobserveTargetERNS_6MemberINS_16IdTargetObserverEEE(%"class.blink::Member.40"* dereferenceable(8) %3) #16
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 8
  %5 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::ConditionEventListener"*, %"class.blink::ConditionEventListener"** %5, align 8
  %7 = icmp eq %"class.blink::ConditionEventListener"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.blink::ConditionEventListener", %"class.blink::ConditionEventListener"* %6, i64 0, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZN5blink11EventTarget19removeEventListenerERKN3WTF12AtomicStringEPKNS_13EventListenerEb(%"class.blink::EventTarget"* %12, %"class.WTF::AtomicString"* dereferenceable(8) %13, %"class.blink::EventListener"* %14, i1 zeroext false) #16
  %16 = bitcast %"class.blink::Member"* %9 to i64*
  store atomic i64 0, i64* %16 monotonic, align 8
  %17 = load %"class.blink::ConditionEventListener"*, %"class.blink::ConditionEventListener"** %5, align 8
  %18 = getelementptr inbounds %"class.blink::ConditionEventListener", %"class.blink::ConditionEventListener"* %17, i64 0, i32 1
  %19 = bitcast %"class.blink::Member.50"* %18 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  %20 = bitcast %"class.blink::Member.46"* %4 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  br label %21

21:                                               ; preds = %2, %8
  ret void
}

declare zeroext i1 @_ZN5blink11EventTarget19removeEventListenerERKN3WTF12AtomicStringEPKNS_13EventListenerEb(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::SVGSMILElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink10SVGElementC2ERKNS_13QualifiedNameERNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::SVGElement"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::Document"* dereferenceable(2848) %2, i32 1058) #16
  %5 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [171 x i8*], [3 x i8*], [3 x i8*] }, { [171 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink14SVGSMILElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [171 x i8*], [3 x i8*], [3 x i8*] }, { [171 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink14SVGSMILElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::SVGTests", %"class.blink::SVGTests"* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [171 x i8*], [3 x i8*], [3 x i8*] }, { [171 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink14SVGSMILElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  tail call void @_ZN5blink8SVGTestsC2EPNS_10SVGElementE(%"class.blink::SVGTests"* %7, %"class.blink::SVGElement"* %4) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [171 x i8*], [3 x i8*], [3 x i8*] }, { [171 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink14SVGSMILElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [171 x i8*], [3 x i8*], [3 x i8*] }, { [171 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink14SVGSMILElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [171 x i8*], [3 x i8*], [3 x i8*] }, { [171 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink14SVGSMILElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 7
  %11 = bitcast %"class.blink::SVGElement"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 34, i1 false)
  store i8 1, i8* %10, align 2
  %12 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 8
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 10
  %14 = bitcast %"class.blink::HeapHashSet.62"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #16
  %15 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11
  %16 = bitcast %"class.blink::SMILInstanceTimeList"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #16
  %17 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 12
  %18 = bitcast %"class.blink::SMILInstanceTimeList"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #16
  %19 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %20 = bitcast i64* %19 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %20, align 8
  %21 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %22 = bitcast i64* %21 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %22, align 8
  %23 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %24 = load i8, i8* %23, align 8
  %25 = and i8 %24, -32
  store i8 %25, i8* %23, align 8
  %26 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 17, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 17, i32 1
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 19, i32 0, i32 0
  store %"class.blink::SMILTimeContainer"* null, %"class.blink::SMILTimeContainer"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 20
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 21
  store i32 -1, i32* %30, align 4
  %31 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 22, i32 0, i32 0
  %32 = bitcast i64* %31 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %32, align 8
  %33 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 24, i32 0
  store double 0xFFF0000000000000, double* %33, align 8
  %34 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 25, i32 0, i32 0
  %35 = bitcast i64* %34 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %35, align 8
  %36 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 27
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 28
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 29
  store i8 0, i8* %38, align 2
  ret void
}

declare void @_ZN5blink10SVGElementC2ERKNS_13QualifiedNameERNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #4

declare void @_ZN5blink8SVGTestsC2EPNS_10SVGElementE(%"class.blink::SVGTests"*, %"class.blink::SVGElement"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElementD2Ev(%"class.blink::SVGSMILElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [171 x i8*], [3 x i8*], [3 x i8*] }, { [171 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink14SVGSMILElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [171 x i8*], [3 x i8*], [3 x i8*] }, { [171 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink14SVGSMILElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [171 x i8*], [3 x i8*], [3 x i8*] }, { [171 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink14SVGSMILElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %5, align 8
  %7 = icmp eq %"class.blink::SMILTimeWithOrigin"* %6, null
  %8 = bitcast %"class.blink::SMILTimeWithOrigin"* %6 to i8*
  br i1 %7, label %15, label %9, !prof !3

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !2

13:                                               ; preds = %9
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %13, %9
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #16
  store %"class.blink::SMILTimeWithOrigin"* null, %"class.blink::SMILTimeWithOrigin"** %5, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %16, align 8
  %18 = icmp eq %"class.blink::SMILTimeWithOrigin"* %17, null
  %19 = bitcast %"class.blink::SMILTimeWithOrigin"* %17 to i8*
  br i1 %18, label %26, label %20, !prof !3

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24, !prof !2

24:                                               ; preds = %20
  store i32 0, i32* %21, align 4
  br label %25

25:                                               ; preds = %24, %20
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %19) #16
  store %"class.blink::SMILTimeWithOrigin"* null, %"class.blink::SMILTimeWithOrigin"** %16, align 8
  br label %26

26:                                               ; preds = %15, %25
  %27 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink10SVGElementD2Ev(%"class.blink::SVGElement"* %27) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink10SVGElementD2Ev(%"class.blink::SVGElement"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElementD0Ev(%"class.blink::SVGSMILElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [171 x i8*], [3 x i8*], [3 x i8*] }, { [171 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink14SVGSMILElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [171 x i8*], [3 x i8*], [3 x i8*] }, { [171 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink14SVGSMILElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [171 x i8*], [3 x i8*], [3 x i8*] }, { [171 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink14SVGSMILElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %5, align 8
  %7 = icmp eq %"class.blink::SMILTimeWithOrigin"* %6, null
  %8 = bitcast %"class.blink::SMILTimeWithOrigin"* %6 to i8*
  br i1 %7, label %15, label %9, !prof !3

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !2

13:                                               ; preds = %9
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %13, %9
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #16
  store %"class.blink::SMILTimeWithOrigin"* null, %"class.blink::SMILTimeWithOrigin"** %5, align 8
  br label %15

15:                                               ; preds = %14, %1
  %16 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %16, align 8
  %18 = icmp eq %"class.blink::SMILTimeWithOrigin"* %17, null
  %19 = bitcast %"class.blink::SMILTimeWithOrigin"* %17 to i8*
  br i1 %18, label %26, label %20, !prof !3

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24, !prof !2

24:                                               ; preds = %20
  store i32 0, i32* %21, align 4
  br label %25

25:                                               ; preds = %24, %20
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %19) #16
  store %"class.blink::SMILTimeWithOrigin"* null, %"class.blink::SMILTimeWithOrigin"** %16, align 8
  br label %26

26:                                               ; preds = %15, %25
  %27 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink10SVGElementD2Ev(%"class.blink::SVGElement"* %27) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement35ClearResourceAndEventBaseReferencesEv(%"class.blink::SVGSMILElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 3
  tail call void @_ZN5blink15SVGURIReference15UnobserveTargetERNS_6MemberINS_16IdTargetObserverEEE(%"class.blink::Member.40"* dereferenceable(8) %2) #16
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink10SVGElement27RemoveAllOutgoingReferencesEv(%"class.blink::SVGElement"* %3) #16
  ret void
}

declare void @_ZN5blink10SVGElement27RemoveAllOutgoingReferencesEv(%"class.blink::SVGElement"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement20BuildPendingResourceEv(%"class.blink::SVGSMILElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 3
  tail call void @_ZN5blink15SVGURIReference15UnobserveTargetERNS_6MemberINS_16IdTargetObserverEEE(%"class.blink::Member.40"* dereferenceable(8) %2) #16
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink10SVGElement27RemoveAllOutgoingReferencesEv(%"class.blink::SVGElement"* %3) #16
  tail call void @_ZN5blink14SVGSMILElement20DisconnectConditionsEv(%"class.blink::SVGSMILElement"* %0)
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 256
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %28

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %11, align 8
  %13 = icmp eq %"class.blink::SVGElement"* %12, null
  br i1 %13, label %112, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::SVGSMILElement"* %0 to void (%"class.blink::SVGSMILElement"*)***
  %16 = load void (%"class.blink::SVGSMILElement"*)**, void (%"class.blink::SVGSMILElement"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %16, i64 167
  %18 = load void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %17, align 8
  tail call void %18(%"class.blink::SVGSMILElement"* %0) #16
  %19 = bitcast %"class.blink::Member"* %10 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %14
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #16
  br label %24

24:                                               ; preds = %22, %14
  %25 = load void (%"class.blink::SVGSMILElement"*)**, void (%"class.blink::SVGSMILElement"*)*** %15, align 8
  %26 = getelementptr inbounds void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %25, i64 168
  %27 = load void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %26, align 8
  tail call void %27(%"class.blink::SVGSMILElement"* %0) #16
  br label %112

28:                                               ; preds = %1
  %29 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15SVGURIReference16LegacyHrefStringERKNS_10SVGElementE(%"class.blink::SVGElement"* dereferenceable(168) %3) #16
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %46

37:                                               ; preds = %28, %33
  %38 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %4) #16
  %39 = icmp eq %"class.blink::ContainerNode"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %38, i64 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 12
  %44 = icmp eq i32 %43, 0
  %45 = bitcast %"class.blink::ContainerNode"* %38 to %"class.blink::Element"*
  br i1 %44, label %49, label %62

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %29, i64 0, i32 0
  %48 = tail call %"class.blink::Element"* @_ZN5blink15SVGURIReference13ObserveTargetERNS_6MemberINS_16IdTargetObserverEEERNS_10SVGElementERKN3WTF6StringE(%"class.blink::Member.40"* dereferenceable(8) %2, %"class.blink::SVGElement"* dereferenceable(168) %3, %"class.WTF::String"* dereferenceable(8) %47) #16
  br label %49

49:                                               ; preds = %40, %46
  %50 = phi %"class.blink::Element"* [ %48, %46 ], [ %45, %40 ]
  %51 = icmp eq %"class.blink::Element"* %50, null
  br i1 %51, label %62, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %50, i64 0, i32 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, 48
  %56 = icmp eq i32 %55, 32
  br i1 %56, label %57, label %62

57:                                               ; preds = %52
  %58 = bitcast %"class.blink::Element"* %50 to %"class.blink::SVGElement"*
  %59 = and i32 %54, 256
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %60, %"class.blink::SVGElement"* null, %"class.blink::SVGElement"* %58
  br label %62

62:                                               ; preds = %52, %37, %40, %49, %57
  %63 = phi %"class.blink::SVGElement"* [ %61, %57 ], [ null, %52 ], [ null, %49 ], [ null, %40 ], [ null, %37 ]
  %64 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 2
  %65 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %65, align 8
  %67 = icmp eq %"class.blink::SVGElement"* %66, %63
  br i1 %67, label %84, label %68

68:                                               ; preds = %62
  %69 = bitcast %"class.blink::SVGSMILElement"* %0 to void (%"class.blink::SVGSMILElement"*)***
  %70 = load void (%"class.blink::SVGSMILElement"*)**, void (%"class.blink::SVGSMILElement"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %70, i64 167
  %72 = load void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %71, align 8
  tail call void %72(%"class.blink::SVGSMILElement"* %0) #16
  %73 = ptrtoint %"class.blink::SVGElement"* %63 to i64
  %74 = bitcast %"class.blink::Member"* %64 to i64*
  store atomic i64 %73, i64* %74 monotonic, align 8
  %75 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %68
  %78 = bitcast %"class.blink::SVGElement"* %63 to i8*
  %79 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %78) #16
  br label %80

80:                                               ; preds = %77, %68
  %81 = load void (%"class.blink::SVGSMILElement"*)**, void (%"class.blink::SVGSMILElement"*)*** %69, align 8
  %82 = getelementptr inbounds void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %81, i64 168
  %83 = load void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %82, align 8
  tail call void %83(%"class.blink::SVGSMILElement"* %0) #16
  br label %84

84:                                               ; preds = %62, %80
  %85 = icmp eq %"class.blink::SVGElement"* %63, null
  br i1 %85, label %87, label %86

86:                                               ; preds = %84
  tail call void @_ZN5blink10SVGElement14AddReferenceToEPS0_(%"class.blink::SVGElement"* %3, %"class.blink::SVGElement"* nonnull %63) #16
  br label %87

87:                                               ; preds = %84, %86
  %88 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 5
  %89 = load i8, i8* %88, align 8, !range !26
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %92, label %91

91:                                               ; preds = %87
  tail call void @_ZN5blink14SVGSMILElement20DisconnectConditionsEv(%"class.blink::SVGSMILElement"* %0) #16
  br label %92

92:                                               ; preds = %91, %87
  %93 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %94 = load %"class.blink::Member.59"*, %"class.blink::Member.59"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %94, i64 %97
  %99 = icmp eq i32 %96, 0
  br i1 %99, label %111, label %100

100:                                              ; preds = %92, %108
  %101 = phi %"class.blink::Member.59"* [ %109, %108 ], [ %94, %92 ]
  %102 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.blink::SVGSMILElement::Condition"*, %"class.blink::SVGSMILElement::Condition"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 8
  switch i32 %105, label %108 [
    i32 1, label %106
    i32 0, label %107
  ]

106:                                              ; preds = %100
  tail call void @_ZN5blink14SVGSMILElement9Condition15ConnectSyncBaseERS0_(%"class.blink::SVGSMILElement::Condition"* %103, %"class.blink::SVGSMILElement"* dereferenceable(416) %0) #16
  br label %108

107:                                              ; preds = %100
  tail call void @_ZN5blink14SVGSMILElement9Condition16ConnectEventBaseERS0_(%"class.blink::SVGSMILElement::Condition"* %103, %"class.blink::SVGSMILElement"* dereferenceable(416) %0) #16
  br label %108

108:                                              ; preds = %107, %106, %100
  %109 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %101, i64 1
  %110 = icmp eq %"class.blink::Member.59"* %109, %98
  br i1 %110, label %111, label %100

111:                                              ; preds = %108, %92
  store i8 1, i8* %88, align 8
  br label %112

112:                                              ; preds = %24, %9, %111
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement20DisconnectConditionsEv(%"class.blink::SVGSMILElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !26
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %51, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.59"*, %"class.blink::Member.59"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %48, %5
  store i8 0, i8* %2, align 8
  br label %51

14:                                               ; preds = %5, %48
  %15 = phi %"class.blink::Member.59"* [ %49, %48 ], [ %7, %5 ]
  %16 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::SVGSMILElement::Condition"*, %"class.blink::SVGSMILElement::Condition"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  switch i32 %19, label %48 [
    i32 1, label %20
    i32 0, label %29
  ]

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %17, i64 0, i32 7
  tail call void @_ZN5blink15SVGURIReference15UnobserveTargetERNS_6MemberINS_16IdTargetObserverEEE(%"class.blink::Member.40"* dereferenceable(8) %21) #16
  %22 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %17, i64 0, i32 6
  %23 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %23, align 8
  %25 = icmp eq %"class.blink::SVGElement"* %24, null
  br i1 %25, label %48, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::SVGElement"* %24 to %"class.blink::SVGSMILElement"*
  tail call void @_ZN5blink14SVGSMILElement23RemoveSyncBaseDependentERS0_(%"class.blink::SVGSMILElement"* nonnull %27, %"class.blink::SVGSMILElement"* dereferenceable(416) %0) #16
  %28 = bitcast %"class.blink::Member"* %22 to i64*
  store atomic i64 0, i64* %28 monotonic, align 8
  br label %48

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %17, i64 0, i32 7
  tail call void @_ZN5blink15SVGURIReference15UnobserveTargetERNS_6MemberINS_16IdTargetObserverEEE(%"class.blink::Member.40"* dereferenceable(8) %30) #16
  %31 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %17, i64 0, i32 8
  %32 = getelementptr inbounds %"class.blink::Member.46", %"class.blink::Member.46"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.blink::ConditionEventListener"*, %"class.blink::ConditionEventListener"** %32, align 8
  %34 = icmp eq %"class.blink::ConditionEventListener"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %17, i64 0, i32 6
  %37 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %17, i64 0, i32 3
  %41 = getelementptr inbounds %"class.blink::ConditionEventListener", %"class.blink::ConditionEventListener"* %33, i64 0, i32 0, i32 0
  %42 = tail call zeroext i1 @_ZN5blink11EventTarget19removeEventListenerERKN3WTF12AtomicStringEPKNS_13EventListenerEb(%"class.blink::EventTarget"* %39, %"class.WTF::AtomicString"* dereferenceable(8) %40, %"class.blink::EventListener"* %41, i1 zeroext false) #16
  %43 = bitcast %"class.blink::Member"* %36 to i64*
  store atomic i64 0, i64* %43 monotonic, align 8
  %44 = load %"class.blink::ConditionEventListener"*, %"class.blink::ConditionEventListener"** %32, align 8
  %45 = getelementptr inbounds %"class.blink::ConditionEventListener", %"class.blink::ConditionEventListener"* %44, i64 0, i32 1
  %46 = bitcast %"class.blink::Member.50"* %45 to i64*
  store atomic i64 0, i64* %46 monotonic, align 8
  %47 = bitcast %"class.blink::Member.46"* %31 to i64*
  store atomic i64 0, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %14, %35, %29, %26, %20
  %49 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %15, i64 1
  %50 = icmp eq %"class.blink::Member.59"* %49, %11
  br i1 %50, label %13, label %14

51:                                               ; preds = %1, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement16SetTargetElementEPNS_10SVGElementE(%"class.blink::SVGSMILElement"*, %"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %4, align 8
  %6 = icmp eq %"class.blink::SVGElement"* %5, %1
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::SVGSMILElement"* %0 to void (%"class.blink::SVGSMILElement"*)***
  %9 = load void (%"class.blink::SVGSMILElement"*)**, void (%"class.blink::SVGSMILElement"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %9, i64 167
  %11 = load void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %10, align 8
  tail call void %11(%"class.blink::SVGSMILElement"* %0) #16
  %12 = ptrtoint %"class.blink::SVGElement"* %1 to i64
  %13 = bitcast %"class.blink::Member"* %3 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %7
  %17 = bitcast %"class.blink::SVGElement"* %1 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #16
  br label %19

19:                                               ; preds = %7, %16
  %20 = load void (%"class.blink::SVGSMILElement"*)**, void (%"class.blink::SVGSMILElement"*)*** %8, align 8
  %21 = getelementptr inbounds void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %20, i64 168
  %22 = load void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %21, align 8
  tail call void %22(%"class.blink::SVGSMILElement"* %0) #16
  br label %23

23:                                               ; preds = %2, %19
  ret void
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15SVGURIReference16LegacyHrefStringERKNS_10SVGElementE(%"class.blink::SVGElement"* dereferenceable(168)) local_unnamed_addr #4

declare %"class.blink::Element"* @_ZN5blink15SVGURIReference13ObserveTargetERNS_6MemberINS_16IdTargetObserverEEERNS_10SVGElementERKN3WTF6StringE(%"class.blink::Member.40"* dereferenceable(8), %"class.blink::SVGElement"* dereferenceable(168), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement17ConnectConditionsEv(%"class.blink::SVGSMILElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !26
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink14SVGSMILElement20DisconnectConditionsEv(%"class.blink::SVGSMILElement"* %0)
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Member.59"*, %"class.blink::Member.59"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %23, %6
  store i8 1, i8* %2, align 8
  ret void

15:                                               ; preds = %6, %23
  %16 = phi %"class.blink::Member.59"* [ %24, %23 ], [ %8, %6 ]
  %17 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::SVGSMILElement::Condition"*, %"class.blink::SVGSMILElement::Condition"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %23 [
    i32 1, label %21
    i32 0, label %22
  ]

21:                                               ; preds = %15
  tail call void @_ZN5blink14SVGSMILElement9Condition15ConnectSyncBaseERS0_(%"class.blink::SVGSMILElement::Condition"* %18, %"class.blink::SVGSMILElement"* dereferenceable(416) %0)
  br label %23

22:                                               ; preds = %15
  tail call void @_ZN5blink14SVGSMILElement9Condition16ConnectEventBaseERS0_(%"class.blink::SVGSMILElement::Condition"* %18, %"class.blink::SVGSMILElement"* dereferenceable(416) %0)
  br label %23

23:                                               ; preds = %15, %22, %21
  %24 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %16, i64 1
  %25 = icmp eq %"class.blink::Member.59"* %24, %12
  br i1 %25, label %14, label %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement5ResetEv(%"class.blink::SVGSMILElement"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, -4
  store i8 %4, i8* %2, align 8
  %5 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 7
  store i8 1, i8* %5, align 2
  %6 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %7 = bitcast i64* %6 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %7, align 8
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 17, i32 0
  store float 0.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 17, i32 1
  store i32 0, i32* %11, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14SVGSMILElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGSMILElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SMILTimeWithOrigin", align 8
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0
  %5 = tail call i32 @_ZN5blink10SVGElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGElement"* %4, %"class.blink::ContainerNode"* dereferenceable(80) %1) #16
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 256
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %140, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %14, i64 0, i32 2
  %16 = bitcast %"class.blink::UseCounter"* %15 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* %15, i32 501) #16
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = tail call zeroext i1 @_ZNK5blink8Document15IsLoadCompletedEv(%"class.blink::Document"* %22) #16
  br i1 %23, label %24, label %37

24:                                               ; preds = %10
  %25 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %26 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::Document"*, %"class.blink::Document"** %26, align 8
  %28 = icmp eq %"class.blink::Document"* %27, null
  %29 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %27, i64 0, i32 2
  %30 = icmp eq %"class.blink::UseCounter"* %29, null
  %31 = or i1 %28, %30
  br i1 %31, label %37, label %32

32:                                               ; preds = %24
  %33 = bitcast %"class.blink::UseCounter"* %29 to void (%"class.blink::UseCounter"*, i32)***
  %34 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %34, i64 3
  %36 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %35, align 8
  tail call void %36(%"class.blink::UseCounter"* nonnull %29, i32 1457) #16
  br label %37

37:                                               ; preds = %32, %24, %10
  %38 = tail call %"class.blink::SVGSVGElement"* @_ZNK5blink10SVGElement15ownerSVGElementEv(%"class.blink::SVGElement"* %4) #16
  %39 = icmp eq %"class.blink::SVGSVGElement"* %38, null
  br i1 %39, label %140, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %38, i64 0, i32 8, i32 0, i32 0
  %42 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 19
  %44 = ptrtoint %"class.blink::SMILTimeContainer"* %42 to i64
  %45 = bitcast %"class.blink::Member.68"* %43 to i64*
  store atomic i64 %44, i64* %45 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %40
  %49 = bitcast %"class.blink::SMILTimeContainer"* %42 to i8*
  %50 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #16
  %51 = getelementptr inbounds %"class.blink::Member.68", %"class.blink::Member.68"* %43, i64 0, i32 0, i32 0
  %52 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %51, align 8
  br label %53

53:                                               ; preds = %40, %48
  %54 = phi %"class.blink::SMILTimeContainer"* [ %42, %40 ], [ %52, %48 ]
  %55 = getelementptr inbounds %"class.blink::SMILTimeContainer", %"class.blink::SMILTimeContainer"* %54, i64 0, i32 5
  %56 = load i8, i8* %55, align 4
  %57 = or i8 %56, 8
  store i8 %57, i8* %55, align 4
  %58 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kBeginAttrE, align 8
  %59 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %59, align 8
  %61 = icmp eq %"class.blink::ElementData"* %60, null
  br i1 %61, label %112, label %62

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %60, i64 0, i32 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %74, label %67

67:                                               ; preds = %62
  %68 = bitcast %"class.blink::ElementData"* %60 to %"class.blink::UniqueElementData"*
  %69 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %60, i64 1, i32 1
  %70 = bitcast %"class.blink::Member.19"* %69 to %"class.blink::Attribute"**
  %71 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %68, i64 0, i32 2, i32 0, i32 0, i32 2
  %73 = load i32, i32* %72, align 4
  br label %79

74:                                               ; preds = %62
  %75 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %60, i64 1
  %76 = bitcast %"class.blink::ElementData"* %75 to %"class.blink::Attribute"*
  %77 = lshr i32 %64, 1
  %78 = and i32 %77, 268435455
  br label %79

79:                                               ; preds = %74, %67
  %80 = phi %"class.blink::Attribute"* [ %76, %74 ], [ %71, %67 ]
  %81 = phi i32 [ %78, %74 ], [ %73, %67 ]
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %80, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %112, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %58, i64 0, i32 0, i32 0
  %87 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %87, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %90

90:                                               ; preds = %106, %85
  %91 = phi %"class.blink::Attribute"* [ %80, %85 ], [ %107, %106 ]
  %92 = phi i32 [ 0, %85 ], [ %108, %106 ]
  %93 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %91, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %93, align 8
  %95 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %94, %87
  br i1 %95, label %110, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %94, i64 0, i32 3, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %98, %99
  br i1 %100, label %101, label %106

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %94, i64 0, i32 4, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %103, %104
  br i1 %105, label %110, label %106

106:                                              ; preds = %101, %96
  %107 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %91, i64 1
  %108 = add i32 %92, 1
  %109 = icmp eq %"class.blink::Attribute"* %107, %83
  br i1 %109, label %112, label %90

110:                                              ; preds = %90, %101
  %111 = icmp eq i32 %92, -1
  br i1 %111, label %112, label %135

112:                                              ; preds = %106, %110, %79, %53
  %113 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11
  %114 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %135

117:                                              ; preds = %112
  %118 = bitcast %"class.blink::SMILTimeWithOrigin"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #16
  %119 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %119, align 8
  %120 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %3, i64 0, i32 1
  store i32 0, i32* %120, align 8
  %121 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %129, label %124, !prof !2

124:                                              ; preds = %117
  %125 = bitcast %"class.blink::SMILInstanceTimeList"* %113 to i8**
  %126 = load i8*, i8** %125, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* nonnull align 8 %118, i64 16, i1 false) #16
  %127 = load i32, i32* %114, align 4
  %128 = add i32 %127, 1
  store i32 %128, i32* %114, align 4
  br label %131

129:                                              ; preds = %117
  %130 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %113, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* %130, %"class.blink::SMILTimeWithOrigin"* nonnull dereferenceable(16) %3) #16
  br label %131

131:                                              ; preds = %124, %129
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #16
  %132 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = or i32 %133, 1
  store i32 %134, i32* %132, align 8
  br label %135

135:                                              ; preds = %110, %131, %112
  %136 = bitcast %"class.blink::SVGSMILElement"* %0 to void (%"class.blink::SVGSMILElement"*)***
  %137 = load void (%"class.blink::SVGSMILElement"*)**, void (%"class.blink::SVGSMILElement"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %137, i64 139
  %139 = load void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %138, align 8
  call void %139(%"class.blink::SVGSMILElement"* %0) #16
  br label %140

140:                                              ; preds = %2, %135, %37
  ret i32 0
}

declare i32 @_ZN5blink10SVGElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #4

declare zeroext i1 @_ZNK5blink8Document15IsLoadCompletedEv(%"class.blink::Document"*) local_unnamed_addr #4

declare %"class.blink::SVGSVGElement"* @_ZNK5blink10SVGElement15ownerSVGElementEv(%"class.blink::SVGElement"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::SVGSMILElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 256
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %48, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 3
  tail call void @_ZN5blink15SVGURIReference15UnobserveTargetERNS_6MemberINS_16IdTargetObserverEEE(%"class.blink::Member.40"* dereferenceable(8) %8) #16
  %9 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink10SVGElement27RemoveAllOutgoingReferencesEv(%"class.blink::SVGElement"* %9) #16
  tail call void @_ZN5blink14SVGSMILElement20DisconnectConditionsEv(%"class.blink::SVGSMILElement"* %0) #16
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0
  %11 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %26, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.WTF::Vector.56"* %10 to i8**
  br i1 %17, label %23, label %19

19:                                               ; preds = %14
  %20 = load i8*, i8** %18, align 8
  %21 = zext i32 %16 to i64
  %22 = shl nuw nsw i64 %21, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %20, i64 %22) #16
  store i32 0, i32* %15, align 4
  br label %23

23:                                               ; preds = %19, %14
  %24 = load i8*, i8** %18, align 8
  %25 = bitcast %"class.WTF::Vector.56"* %10 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  store i32 0, i32* %11, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %24) #16
  br label %26

26:                                               ; preds = %7, %23
  %27 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 2
  %28 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %28, align 8
  %30 = icmp eq %"class.blink::SVGElement"* %29, null
  br i1 %30, label %45, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.blink::SVGSMILElement"* %0 to void (%"class.blink::SVGSMILElement"*)***
  %33 = load void (%"class.blink::SVGSMILElement"*)**, void (%"class.blink::SVGSMILElement"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %33, i64 167
  %35 = load void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %34, align 8
  tail call void %35(%"class.blink::SVGSMILElement"* %0) #16
  %36 = bitcast %"class.blink::Member"* %27 to i64*
  store atomic i64 0, i64* %36 monotonic, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %31
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #16
  br label %41

41:                                               ; preds = %39, %31
  %42 = load void (%"class.blink::SVGSMILElement"*)**, void (%"class.blink::SVGSMILElement"*)*** %32, align 8
  %43 = getelementptr inbounds void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %42, i64 168
  %44 = load void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %43, align 8
  tail call void %44(%"class.blink::SVGSMILElement"* %0) #16
  br label %45

45:                                               ; preds = %26, %41
  %46 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 19
  %47 = bitcast %"class.blink::Member.68"* %46 to i64*
  store atomic i64 0, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %2, %45
  %49 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink10SVGElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::SVGElement"* %49, %"class.blink::ContainerNode"* dereferenceable(80) %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement15ClearConditionsEv(%"class.blink::SVGSMILElement"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14SVGSMILElement20DisconnectConditionsEv(%"class.blink::SVGSMILElement"* %0)
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = bitcast %"class.WTF::Vector.56"* %2 to i8**
  br i1 %9, label %15, label %11

11:                                               ; preds = %6
  %12 = load i8*, i8** %10, align 8
  %13 = zext i32 %8 to i64
  %14 = shl nuw nsw i64 %13, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %12, i64 %14) #16
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %11, %6
  %16 = load i8*, i8** %10, align 8
  %17 = bitcast %"class.WTF::Vector.56"* %2 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %16) #16
  br label %18

18:                                               ; preds = %1, %15
  ret void
}

declare void @_ZN5blink10SVGElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::SVGElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink14SVGSMILElement16ParseOffsetValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #16
  store i8 -86, i8* %2, align 1
  %10 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %12 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %0) #16
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %41, label %14

14:                                               ; preds = %1
  %15 = tail call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"* nonnull %12, i16 zeroext 104) #16
  br i1 %15, label %16, label %41

16:                                               ; preds = %14
  %17 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, -1
  %21 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %3, i32 0, i32 %20) #16
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %22, align 8
  %23 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nonnull %4, i8* nonnull %2) #16
  %24 = fmul double %23, 3.600000e+03
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #16
  br label %40

40:                                               ; preds = %16, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %159

41:                                               ; preds = %1, %14
  %42 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #16
  %43 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %44 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 3, i32* %46, align 8
  br i1 %13, label %47, label %48

47:                                               ; preds = %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #16
  br label %83

48:                                               ; preds = %41
  %49 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #16
  br i1 %49, label %53, label %50

50:                                               ; preds = %48
  %51 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  br label %83

53:                                               ; preds = %48
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %55 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #16
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, -3
  br label %61

61:                                               ; preds = %53, %57
  %62 = phi i32 [ %60, %57 ], [ -3, %53 ]
  %63 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %3, i32 0, i32 %62) #16
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  %65 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nonnull %6, i8* nonnull %2) #16
  %66 = fmul double %65, 6.000000e+01
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #16
  br label %82

82:                                               ; preds = %61, %78, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #16
  br label %159

83:                                               ; preds = %50, %47
  %84 = phi %"class.WTF::StringImpl"* [ %52, %50 ], [ null, %47 ]
  %85 = phi i64 [ %51, %50 ], [ %43, %47 ]
  %86 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #16
  %87 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %85, i64* %87, align 8
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 2, i32* %89, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %90, label %91, label %92

91:                                               ; preds = %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #16
  br label %157

92:                                               ; preds = %83
  %93 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %84, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #16
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  br i1 %93, label %95, label %124

95:                                               ; preds = %92
  %96 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #16
  %97 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = add i32 %100, -2
  br label %102

102:                                              ; preds = %95, %98
  %103 = phi i32 [ %101, %98 ], [ -2, %95 ]
  %104 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %3, i32 0, i32 %103) #16
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %104, %"class.WTF::StringImpl"** %105, align 8
  %106 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nonnull %8, i8* nonnull %2) #16
  %107 = fdiv double %106, 1.000000e+03
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #16
  br label %123

123:                                              ; preds = %102, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #16
  br label %159

124:                                              ; preds = %92
  %125 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %125, label %157, label %126

126:                                              ; preds = %124
  %127 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"* nonnull %94, i16 zeroext 115) #16
  br i1 %127, label %128, label %157

128:                                              ; preds = %126
  %129 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #16
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %136, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = add i32 %134, -1
  br label %136

136:                                              ; preds = %128, %132
  %137 = phi i32 [ %135, %132 ], [ -1, %128 ]
  %138 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %3, i32 0, i32 %137) #16
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %138, %"class.WTF::StringImpl"** %139, align 8
  %140 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nonnull %9, i8* nonnull %2) #16
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %136
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #16
  br label %156

156:                                              ; preds = %136, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #16
  br label %159

157:                                              ; preds = %91, %124, %126
  %158 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nonnull %3, i8* nonnull %2) #16
  br label %159

159:                                              ; preds = %82, %156, %157, %123, %40
  %160 = phi double [ %24, %40 ], [ %66, %82 ], [ %107, %123 ], [ %140, %156 ], [ %158, %157 ]
  %161 = load i8, i8* %2, align 1, !range !26
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %174, label %163

163:                                              ; preds = %159
  %164 = fmul double %160, 1.000000e+06
  %165 = fcmp ult double %164, 0xC3E0000000000000
  %166 = fcmp ugt double %164, 0x43DFFFFFFFFFFFFF
  %167 = fcmp ogt double %164, 0xC3E0000000000000
  %168 = select i1 %167, double %164, double 0xC3E0000000000000
  %169 = fptosi double %168 to i64
  %170 = select i1 %165, i64 0, i64 9223372036854775807
  %171 = select i1 %166, i64 %170, i64 %169
  %172 = icmp slt i64 %171, 9223372036854775805
  %173 = select i1 %172, i64 %171, i64 9223372036854775805
  br label %174

174:                                              ; preds = %159, %163
  %175 = phi i64 [ %173, %163 ], [ 9223372036854775807, %159 ]
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #16
  br label %191

191:                                              ; preds = %174, %187, %190
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #16
  ret i64 %175
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #4

declare double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca i8, align 1
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %281, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %15 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %0) #16
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %14, align 8
  %16 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringEE18s_indefinite_value to i8*) acquire, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %22, !prof !27

18:                                               ; preds = %12
  %19 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringEE18s_indefinite_value) #16
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringEE18s_indefinite_value to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i64 10) #16
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringEE18s_indefinite_value) #16
  br label %22

22:                                               ; preds = %18, %21, %12
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringEE18s_indefinite_value to %"class.WTF::StringImpl"**), align 8
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %25 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"* %24) #16
  br i1 %25, label %263, label %26

26:                                               ; preds = %22
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #16
  store i8 -86, i8* %3, align 1
  %27 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %27, label %103, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 1
  br i1 %32, label %48, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %65, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.WTF::StringImpl"* %33 to i8*
  %40 = zext i32 %36 to i64
  %41 = tail call i8* @memchr(i8* %39, i32 58, i64 %40) #18
  %42 = icmp eq i8* %41, null
  %43 = ptrtoint i8* %41 to i64
  %44 = ptrtoint %"class.WTF::StringImpl"* %33 to i64
  %45 = sub i64 %43, %44
  %46 = trunc i64 %45 to i32
  %47 = select i1 %42, i32 -1, i32 %46
  br label %65

48:                                               ; preds = %28
  %49 = bitcast %"class.WTF::StringImpl"* %33 to i16*
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %65, label %53

53:                                               ; preds = %48
  %54 = zext i32 %51 to i64
  br label %55

55:                                               ; preds = %53, %60
  %56 = phi i64 [ %61, %60 ], [ 0, %53 ]
  %57 = getelementptr inbounds i16, i16* %49, i64 %56
  %58 = load i16, i16* %57, align 2
  %59 = icmp eq i16 %58, 58
  br i1 %59, label %63, label %60

60:                                               ; preds = %55
  %61 = add nuw nsw i64 %56, 1
  %62 = icmp eq i64 %61, %54
  br i1 %62, label %65, label %55

63:                                               ; preds = %55
  %64 = trunc i64 %56 to i32
  br label %65

65:                                               ; preds = %60, %63, %38, %34, %48
  %66 = phi i32 [ 0, %48 ], [ %36, %38 ], [ 0, %34 ], [ %51, %63 ], [ %51, %60 ]
  %67 = phi i32 [ -1, %48 ], [ %47, %38 ], [ -1, %34 ], [ %64, %63 ], [ -1, %60 ]
  %68 = add i32 %67, 1
  %69 = load atomic i32, i32* %29 monotonic, align 4
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %87, label %72

72:                                               ; preds = %65
  %73 = icmp ugt i32 %66, %68
  br i1 %73, label %74, label %103

74:                                               ; preds = %72
  %75 = bitcast %"class.WTF::StringImpl"* %33 to i8*
  %76 = zext i32 %68 to i64
  %77 = getelementptr inbounds i8, i8* %75, i64 %76
  %78 = sub i32 %66, %68
  %79 = zext i32 %78 to i64
  %80 = tail call i8* @memchr(i8* %77, i32 58, i64 %79) #18
  %81 = icmp eq i8* %80, null
  %82 = ptrtoint i8* %80 to i64
  %83 = ptrtoint %"class.WTF::StringImpl"* %33 to i64
  %84 = sub i64 %82, %83
  %85 = trunc i64 %84 to i32
  %86 = select i1 %81, i32 -1, i32 %85
  br label %106

87:                                               ; preds = %65
  %88 = bitcast %"class.WTF::StringImpl"* %33 to i16*
  %89 = icmp ugt i32 %66, %68
  br i1 %89, label %90, label %103

90:                                               ; preds = %87
  %91 = zext i32 %68 to i64
  br label %92

92:                                               ; preds = %97, %90
  %93 = phi i64 [ %91, %90 ], [ %98, %97 ]
  %94 = getelementptr inbounds i16, i16* %88, i64 %93
  %95 = load i16, i16* %94, align 2
  %96 = icmp eq i16 %95, 58
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = add nuw nsw i64 %93, 1
  %99 = trunc i64 %98 to i32
  %100 = icmp eq i32 %66, %99
  br i1 %100, label %103, label %92

101:                                              ; preds = %92
  %102 = trunc i64 %93 to i32
  br label %106

103:                                              ; preds = %97, %72, %87, %26
  %104 = phi i32 [ %67, %87 ], [ %67, %72 ], [ -1, %26 ], [ %67, %97 ]
  %105 = icmp eq i32 %104, 2
  br label %185

106:                                              ; preds = %74, %101
  %107 = phi i32 [ %86, %74 ], [ %102, %101 ]
  %108 = icmp eq i32 %67, 2
  %109 = icmp eq i32 %107, 5
  %110 = and i1 %108, %109
  br i1 %110, label %111, label %185

111:                                              ; preds = %106
  %112 = icmp ugt i32 %66, 7
  br i1 %112, label %113, label %242

113:                                              ; preds = %111
  %114 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #16
  %115 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %2, i32 0, i32 2) #16
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %115, %"class.WTF::StringImpl"** %116, align 8
  %117 = call i32 @_ZNK3WTF6String12ToUIntStrictEPb(%"class.WTF::String"* nonnull %4, i8* nonnull %3) #16
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #16
  br label %133

133:                                              ; preds = %113, %129, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #16
  %134 = load i8, i8* %3, align 1, !range !26
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %260, label %136

136:                                              ; preds = %133
  %137 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #16
  %138 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %2, i32 3, i32 2) #16
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %138, %"class.WTF::StringImpl"** %139, align 8
  %140 = call i32 @_ZNK3WTF6String12ToUIntStrictEPb(%"class.WTF::String"* nonnull %5, i8* nonnull %3) #16
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %136
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #16
  br label %156

156:                                              ; preds = %136, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #16
  %157 = load i8, i8* %3, align 1, !range !26
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %260, label %159

159:                                              ; preds = %156
  %160 = mul i32 %117, 3600
  %161 = uitofp i32 %160 to double
  %162 = mul i32 %140, 60
  %163 = uitofp i32 %162 to double
  %164 = fadd double %161, %163
  %165 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #16
  %166 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %2, i32 6, i32 -1) #16
  %167 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %166, %"class.WTF::StringImpl"** %167, align 8
  %168 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nonnull %6, i8* nonnull %3) #16
  %169 = fadd double %164, %168
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %244, label %172

172:                                              ; preds = %159
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %244

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #16
  br label %244

185:                                              ; preds = %103, %106
  %186 = phi i1 [ %105, %103 ], [ %108, %106 ]
  %187 = phi i32 [ -1, %103 ], [ %107, %106 ]
  %188 = icmp eq i32 %187, -1
  %189 = and i1 %186, %188
  %190 = xor i1 %189, true
  %191 = or i1 %27, %190
  br i1 %191, label %242, label %192

192:                                              ; preds = %185
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = icmp ugt i32 %194, 4
  br i1 %195, label %196, label %242

196:                                              ; preds = %192
  %197 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #16
  %198 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %2, i32 0, i32 2) #16
  %199 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %198, %"class.WTF::StringImpl"** %199, align 8
  %200 = call i32 @_ZNK3WTF6String12ToUIntStrictEPb(%"class.WTF::String"* nonnull %7, i8* nonnull %3) #16
  %201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  %202 = icmp eq %"class.WTF::StringImpl"* %201, null
  br i1 %202, label %216, label %203

203:                                              ; preds = %196
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load atomic i32, i32* %204 monotonic, align 4
  %206 = and i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 0
  %209 = load i32, i32* %208, align 4
  br i1 %207, label %210, label %212

210:                                              ; preds = %203
  %211 = add i32 %209, -1
  store i32 %211, i32* %208, align 4
  br label %212

212:                                              ; preds = %210, %203
  %213 = phi i32 [ %211, %210 ], [ %209, %203 ]
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %212
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %201) #16
  br label %216

216:                                              ; preds = %196, %212, %215
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #16
  %217 = load i8, i8* %3, align 1, !range !26
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %260, label %219

219:                                              ; preds = %216
  %220 = mul i32 %200, 60
  %221 = uitofp i32 %220 to double
  %222 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #16
  %223 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %2, i32 3, i32 -1) #16
  %224 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %223, %"class.WTF::StringImpl"** %224, align 8
  %225 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nonnull %8, i8* nonnull %3) #16
  %226 = fadd double %225, %221
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %244, label %229

229:                                              ; preds = %219
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %244

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #16
  br label %244

242:                                              ; preds = %185, %111, %192
  %243 = call i64 @_ZN5blink14SVGSMILElement16ParseOffsetValueERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %2)
  br label %260

244:                                              ; preds = %241, %238, %219, %184, %181, %159
  %245 = phi i8* [ %165, %159 ], [ %165, %181 ], [ %165, %184 ], [ %222, %219 ], [ %222, %238 ], [ %222, %241 ]
  %246 = phi double [ %169, %159 ], [ %169, %181 ], [ %169, %184 ], [ %226, %219 ], [ %226, %238 ], [ %226, %241 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %245) #16
  %247 = load i8, i8* %3, align 1, !range !26
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %260, label %249

249:                                              ; preds = %244
  %250 = fmul double %246, 1.000000e+06
  %251 = fcmp ult double %250, 0xC3E0000000000000
  %252 = fcmp ugt double %250, 0x43DFFFFFFFFFFFFF
  %253 = fcmp ogt double %250, 0xC3E0000000000000
  %254 = select i1 %253, double %250, double 0xC3E0000000000000
  %255 = fptosi double %254 to i64
  %256 = select i1 %251, i64 0, i64 9223372036854775807
  %257 = select i1 %252, i64 %256, i64 %255
  %258 = icmp slt i64 %257, 9223372036854775805
  %259 = select i1 %258, i64 %257, i64 9223372036854775805
  br label %260

260:                                              ; preds = %244, %216, %156, %133, %249, %242
  %261 = phi i64 [ %259, %249 ], [ %243, %242 ], [ 9223372036854775807, %133 ], [ 9223372036854775807, %156 ], [ 9223372036854775807, %216 ], [ 9223372036854775807, %244 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #16
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  br label %263

263:                                              ; preds = %22, %260
  %264 = phi %"class.WTF::StringImpl"* [ %262, %260 ], [ %24, %22 ]
  %265 = phi i64 [ %261, %260 ], [ 9223372036854775806, %22 ]
  %266 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %266, label %280, label %267

267:                                              ; preds = %263
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  br i1 %271, label %274, label %276

274:                                              ; preds = %267
  %275 = add i32 %273, -1
  store i32 %275, i32* %272, align 4
  br label %276

276:                                              ; preds = %274, %267
  %277 = phi i32 [ %275, %274 ], [ %273, %267 ]
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %264) #16
  br label %280

280:                                              ; preds = %263, %276, %279
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  br label %281

281:                                              ; preds = %1, %280
  %282 = phi i64 [ %265, %280 ], [ 9223372036854775807, %1 ]
  ret i64 %282
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #4

declare i32 @_ZNK3WTF6String12ToUIntStrictEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SVGSMILElement14ParseConditionERKN3WTF6StringENS0_10BeginOrEndE(%"class.blink::SVGSMILElement"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.blink::SVGSMILElement::Condition"*, align 8
  %20 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %22 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %1) #16
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #16
  store i8 -86, i8* %9, align 1
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %93, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 1
  br i1 %28, label %42, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %65, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.WTF::StringImpl"* %29 to i8*
  %36 = zext i32 %32 to i64
  %37 = tail call i8* @memchr(i8* %35, i32 43, i64 %36) #18
  %38 = icmp eq i8* %37, null
  %39 = ptrtoint i8* %37 to i64
  %40 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %41 = sub i64 %39, %40
  br i1 %38, label %65, label %57

42:                                               ; preds = %24
  %43 = bitcast %"class.WTF::StringImpl"* %29 to i16*
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %65, label %47

47:                                               ; preds = %42
  %48 = zext i32 %45 to i64
  br label %49

49:                                               ; preds = %47, %54
  %50 = phi i64 [ %55, %54 ], [ 0, %47 ]
  %51 = getelementptr inbounds i16, i16* %43, i64 %50
  %52 = load i16, i16* %51, align 2
  %53 = icmp eq i16 %52, 43
  br i1 %53, label %57, label %54

54:                                               ; preds = %49
  %55 = add nuw nsw i64 %50, 1
  %56 = icmp eq i64 %55, %48
  br i1 %56, label %65, label %49

57:                                               ; preds = %49, %34
  %58 = phi i32 [ %32, %34 ], [ %45, %49 ]
  %59 = phi i64 [ %41, %34 ], [ %50, %49 ]
  %60 = trunc i64 %59 to i32
  %61 = icmp eq i32 %60, -1
  br i1 %61, label %65, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #16
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %64, align 8
  br label %143

65:                                               ; preds = %54, %57, %42, %30, %34
  %66 = phi i32 [ 0, %42 ], [ 0, %30 ], [ %32, %34 ], [ %58, %57 ], [ %45, %54 ]
  %67 = load atomic i32, i32* %25 monotonic, align 4
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %65
  %71 = icmp eq i32 %66, 0
  br i1 %71, label %93, label %72

72:                                               ; preds = %70
  %73 = bitcast %"class.WTF::StringImpl"* %29 to i8*
  %74 = zext i32 %66 to i64
  %75 = tail call i8* @memchr(i8* %73, i32 45, i64 %74) #18
  %76 = icmp eq i8* %75, null
  %77 = ptrtoint i8* %75 to i64
  %78 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %79 = sub i64 %77, %78
  br i1 %76, label %93, label %96

80:                                               ; preds = %65
  %81 = bitcast %"class.WTF::StringImpl"* %29 to i16*
  %82 = icmp eq i32 %66, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %80
  %84 = zext i32 %66 to i64
  br label %85

85:                                               ; preds = %83, %90
  %86 = phi i64 [ %91, %90 ], [ 0, %83 ]
  %87 = getelementptr inbounds i16, i16* %81, i64 %86
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 45
  br i1 %89, label %96, label %90

90:                                               ; preds = %85
  %91 = add nuw nsw i64 %86, 1
  %92 = icmp eq i64 %91, %84
  br i1 %92, label %93, label %85

93:                                               ; preds = %90, %80, %70, %3, %72
  %94 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #16
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  br label %103

96:                                               ; preds = %85, %72
  %97 = phi i64 [ %79, %72 ], [ %86, %85 ]
  %98 = trunc i64 %97 to i32
  %99 = icmp ne i32 %98, -1
  %100 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #16
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %101, align 8
  %102 = icmp eq i32 %98, -1
  br i1 %102, label %103, label %143

103:                                              ; preds = %93, %96
  %104 = phi %"class.WTF::StringImpl"** [ %95, %93 ], [ %101, %96 ]
  %105 = phi i8* [ %94, %93 ], [ %100, %96 ]
  br i1 %23, label %121, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %121

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i33
  %115 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %114, i33 1) #16
  %116 = extractvalue { i33, i1 } %115, 1
  %117 = extractvalue { i33, i1 } %115, 0
  %118 = icmp slt i33 %117, 0
  %119 = or i1 %116, %118
  br i1 %119, label %120, label %124, !prof !2

120:                                              ; preds = %111
  tail call void @llvm.trap() #16
  unreachable

121:                                              ; preds = %106, %103
  %122 = ptrtoint %"class.WTF::StringImpl"* %22 to i64
  %123 = bitcast %"class.WTF::String"* %10 to i64*
  store i64 %122, i64* %123, align 8
  br label %237

124:                                              ; preds = %111
  %125 = trunc i33 %117 to i32
  store i32 %125, i32* %112, align 4
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %127 = ptrtoint %"class.WTF::StringImpl"* %22 to i64
  %128 = bitcast %"class.WTF::String"* %10 to i64*
  store i64 %127, i64* %128, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %129, label %237, label %130

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %237

142:                                              ; preds = %139
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #16
  br label %237

143:                                              ; preds = %62, %96
  %144 = phi %"class.WTF::StringImpl"** [ %64, %62 ], [ %101, %96 ]
  %145 = phi i8* [ %63, %62 ], [ %100, %96 ]
  %146 = phi i1 [ false, %62 ], [ %99, %96 ]
  %147 = phi i32 [ %60, %62 ], [ %98, %96 ]
  %148 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #16
  %149 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %8, i32 0, i32 %147) #16
  %150 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %149, %"class.WTF::StringImpl"** %150, align 8
  %151 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %11) #16
  %152 = ptrtoint %"class.WTF::StringImpl"* %151 to i64
  %153 = bitcast %"class.WTF::String"* %10 to i64*
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  store i64 %152, i64* %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %143
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #16
  br label %169

169:                                              ; preds = %168, %165, %143
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %185, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #16
  br label %185

185:                                              ; preds = %169, %181, %184
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #16
  %186 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #16
  %187 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %187, align 8
  %188 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #16
  %189 = add nuw i32 %147, 1
  %190 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %8, i32 %189, i32 -1) #16
  %191 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %190, %"class.WTF::StringImpl"** %191, align 8
  %192 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %13) #16
  store %"class.WTF::StringImpl"* %192, %"class.WTF::StringImpl"** %187, align 8
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %185
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #16
  br label %208

208:                                              ; preds = %185, %204, %207
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #16
  %209 = call i64 @_ZN5blink14SVGSMILElement16ParseOffsetValueERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %12)
  %210 = icmp eq i64 %209, 9223372036854775807
  br i1 %210, label %747, label %211

211:                                              ; preds = %208
  br i1 %146, label %212, label %219

212:                                              ; preds = %211
  %213 = add i64 %209, -9223372036854775807
  %214 = icmp ult i64 %213, 2
  %215 = sub nsw i64 0, %209
  %216 = icmp slt i64 %209, 0
  %217 = select i1 %216, i64 9223372036854775807, i64 -9223372036854775808
  %218 = select i1 %214, i64 %217, i64 %215
  br label %219

219:                                              ; preds = %211, %212
  %220 = phi i64 [ %218, %212 ], [ %209, %211 ]
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #16
  br label %236

236:                                              ; preds = %219, %232, %235
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #16
  br label %237

237:                                              ; preds = %121, %142, %139, %124, %236
  %238 = phi %"class.WTF::StringImpl"** [ %144, %236 ], [ %104, %124 ], [ %104, %139 ], [ %104, %142 ], [ %104, %121 ]
  %239 = phi i8* [ %145, %236 ], [ %105, %124 ], [ %105, %139 ], [ %105, %142 ], [ %105, %121 ]
  %240 = phi i64 [ %220, %236 ], [ 0, %124 ], [ 0, %139 ], [ 0, %142 ], [ 0, %121 ]
  %241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  %242 = icmp eq %"class.WTF::StringImpl"* %241, null
  br i1 %242, label %783, label %243

243:                                              ; preds = %237
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 1
  %245 = load i32, i32* %244, align 4
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %764, label %247

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 1
  br i1 %251, label %261, label %253

253:                                              ; preds = %247
  %254 = bitcast %"class.WTF::StringImpl"* %252 to i8*
  %255 = zext i32 %245 to i64
  %256 = call i8* @memchr(i8* %254, i32 46, i64 %255) #18
  %257 = icmp eq i8* %256, null
  %258 = ptrtoint i8* %256 to i64
  %259 = ptrtoint %"class.WTF::StringImpl"* %252 to i64
  %260 = sub i64 %258, %259
  br i1 %257, label %272, label %275

261:                                              ; preds = %247
  %262 = bitcast %"class.WTF::StringImpl"* %252 to i16*
  %263 = zext i32 %245 to i64
  br label %264

264:                                              ; preds = %261, %269
  %265 = phi i64 [ %270, %269 ], [ 0, %261 ]
  %266 = getelementptr inbounds i16, i16* %262, i64 %265
  %267 = load i16, i16* %266, align 2
  %268 = icmp eq i16 %267, 46
  br i1 %268, label %275, label %269

269:                                              ; preds = %264
  %270 = add nuw nsw i64 %265, 1
  %271 = icmp eq i64 %270, %263
  br i1 %271, label %272, label %264

272:                                              ; preds = %269, %253
  %273 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %273) #16
  %274 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %274, align 8
  br label %281

275:                                              ; preds = %264, %253
  %276 = phi i64 [ %260, %253 ], [ %265, %264 ]
  %277 = trunc i64 %276 to i32
  %278 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #16
  %279 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %279, align 8
  %280 = icmp eq i32 %277, -1
  br i1 %280, label %281, label %319

281:                                              ; preds = %275, %272
  %282 = phi %"class.WTF::StringImpl"** [ %274, %272 ], [ %279, %275 ]
  %283 = phi i8* [ %273, %272 ], [ %278, %275 ]
  %284 = load atomic i32, i32* %248 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %290, label %287

287:                                              ; preds = %281
  %288 = ptrtoint %"class.WTF::StringImpl"* %241 to i64
  %289 = bitcast %"class.WTF::String"* %14 to i64*
  store i64 %288, i64* %289, align 8
  br label %341

290:                                              ; preds = %281
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  %293 = zext i32 %292 to i33
  %294 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %293, i33 1) #16
  %295 = extractvalue { i33, i1 } %294, 1
  %296 = extractvalue { i33, i1 } %294, 0
  %297 = icmp slt i33 %296, 0
  %298 = or i1 %295, %297
  br i1 %298, label %299, label %300, !prof !2

299:                                              ; preds = %290
  call void @llvm.trap() #16
  unreachable

300:                                              ; preds = %290
  %301 = trunc i33 %296 to i32
  store i32 %301, i32* %291, align 4
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %282, align 8
  %303 = ptrtoint %"class.WTF::StringImpl"* %241 to i64
  %304 = bitcast %"class.WTF::String"* %14 to i64*
  store i64 %303, i64* %304, align 8
  %305 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %305, label %341, label %306

306:                                              ; preds = %300
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = and i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %312 = load i32, i32* %311, align 4
  br i1 %310, label %313, label %315

313:                                              ; preds = %306
  %314 = add i32 %312, -1
  store i32 %314, i32* %311, align 4
  br label %315

315:                                              ; preds = %313, %306
  %316 = phi i32 [ %314, %313 ], [ %312, %306 ]
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %341

318:                                              ; preds = %315
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #16
  br label %341

319:                                              ; preds = %275
  %320 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %10, i32 0, i32 %277) #16
  %321 = ptrtoint %"class.WTF::StringImpl"* %320 to i64
  %322 = add nuw i32 %277, 1
  %323 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %10, i32 %322, i32 -1) #16
  %324 = ptrtoint %"class.WTF::StringImpl"* %323 to i64
  %325 = bitcast %"class.WTF::String"* %14 to i64*
  %326 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  store i64 %324, i64* %325, align 8
  %327 = icmp eq %"class.WTF::StringImpl"* %326, null
  br i1 %327, label %346, label %328

328:                                              ; preds = %319
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = load atomic i32, i32* %329 monotonic, align 4
  %331 = and i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 0
  %334 = load i32, i32* %333, align 4
  br i1 %332, label %335, label %337

335:                                              ; preds = %328
  %336 = add i32 %334, -1
  store i32 %336, i32* %333, align 4
  br label %337

337:                                              ; preds = %335, %328
  %338 = phi i32 [ %336, %335 ], [ %334, %328 ]
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %337
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %326) #16
  br label %341

341:                                              ; preds = %287, %300, %315, %318, %340, %337
  %342 = phi %"class.WTF::StringImpl"** [ %279, %337 ], [ %279, %340 ], [ %282, %318 ], [ %282, %315 ], [ %282, %300 ], [ %282, %287 ]
  %343 = phi i8* [ %278, %337 ], [ %278, %340 ], [ %283, %318 ], [ %283, %315 ], [ %283, %300 ], [ %283, %287 ]
  %344 = phi i64 [ %321, %337 ], [ %321, %340 ], [ 0, %318 ], [ 0, %315 ], [ 0, %300 ], [ 0, %287 ]
  %345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %342, align 8
  br label %346

346:                                              ; preds = %341, %319
  %347 = phi %"class.WTF::StringImpl"* [ %345, %341 ], [ %323, %319 ]
  %348 = phi %"class.WTF::StringImpl"** [ %342, %341 ], [ %279, %319 ]
  %349 = phi i8* [ %343, %341 ], [ %278, %319 ]
  %350 = phi i64 [ %344, %341 ], [ %321, %319 ]
  %351 = icmp eq %"class.WTF::StringImpl"* %347, null
  br i1 %351, label %714, label %352

352:                                              ; preds = %346
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 1
  %354 = load i32, i32* %353, align 4
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %714, label %356

356:                                              ; preds = %352
  %357 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %357) #16
  %358 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %359 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8** %360, align 8
  %361 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 7, i32* %361, align 8
  %362 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %347, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #16
  br i1 %362, label %363, label %437

363:                                              ; preds = %356
  %364 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %348, align 8
  %365 = icmp eq %"class.WTF::StringImpl"* %364, null
  br i1 %365, label %437, label %366

366:                                              ; preds = %363
  %367 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"* nonnull %364, i16 zeroext 41) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %357) #16
  br i1 %367, label %368, label %438

368:                                              ; preds = %366
  %369 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %369) #16
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %348, align 8
  %371 = icmp eq %"class.WTF::StringImpl"* %370, null
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 1
  %374 = load i32, i32* %373, align 4
  br label %375

375:                                              ; preds = %368, %372
  %376 = phi i32 [ %374, %372 ], [ 0, %368 ]
  %377 = add i32 %376, -8
  %378 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %14, i32 7, i32 %377) #16
  %379 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %378, %"class.WTF::StringImpl"** %379, align 8
  %380 = call i32 @_ZNK3WTF6String12ToUIntStrictEPb(%"class.WTF::String"* nonnull %16, i8* nonnull %9) #16
  %381 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %379, align 8
  %382 = icmp eq %"class.WTF::StringImpl"* %381, null
  br i1 %382, label %396, label %383

383:                                              ; preds = %375
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load atomic i32, i32* %384 monotonic, align 4
  %386 = and i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 0
  %389 = load i32, i32* %388, align 4
  br i1 %387, label %390, label %392

390:                                              ; preds = %383
  %391 = add i32 %389, -1
  store i32 %391, i32* %388, align 4
  br label %392

392:                                              ; preds = %390, %383
  %393 = phi i32 [ %391, %390 ], [ %389, %383 ]
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %396

395:                                              ; preds = %392
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %381) #16
  br label %396

396:                                              ; preds = %375, %392, %395
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %369) #16
  %397 = load i8, i8* %9, align 1, !range !26
  %398 = icmp eq i8 %397, 0
  br i1 %398, label %714, label %399

399:                                              ; preds = %396
  %400 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %400) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i64 6) #16
  %401 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %402 = bitcast %"class.WTF::String"* %17 to i64*
  %403 = load i64, i64* %402, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %401, align 8
  %404 = bitcast %"class.WTF::String"* %14 to i64*
  %405 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %348, align 8
  store i64 %403, i64* %404, align 8
  %406 = icmp eq %"class.WTF::StringImpl"* %405, null
  br i1 %406, label %436, label %407

407:                                              ; preds = %399
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = load atomic i32, i32* %408 monotonic, align 4
  %410 = and i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 0
  %413 = load i32, i32* %412, align 4
  br i1 %411, label %414, label %416

414:                                              ; preds = %407
  %415 = add i32 %413, -1
  store i32 %415, i32* %412, align 4
  br label %416

416:                                              ; preds = %414, %407
  %417 = phi i32 [ %415, %414 ], [ %413, %407 ]
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %420

419:                                              ; preds = %416
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %405) #16
  br label %420

420:                                              ; preds = %416, %419
  %421 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %401, align 8
  %422 = icmp eq %"class.WTF::StringImpl"* %421, null
  br i1 %422, label %436, label %423

423:                                              ; preds = %420
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = load atomic i32, i32* %424 monotonic, align 4
  %426 = and i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 0
  %429 = load i32, i32* %428, align 4
  br i1 %427, label %430, label %432

430:                                              ; preds = %423
  %431 = add i32 %429, -1
  store i32 %431, i32* %428, align 4
  br label %432

432:                                              ; preds = %430, %423
  %433 = phi i32 [ %431, %430 ], [ %429, %423 ]
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %436

435:                                              ; preds = %432
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %421) #16
  br label %436

436:                                              ; preds = %399, %420, %432, %435
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %400) #16
  br label %537

437:                                              ; preds = %356, %363
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %357) #16
  br label %438

438:                                              ; preds = %437, %366
  %439 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %439) #16
  %440 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %348, align 8
  %441 = icmp eq %"class.WTF::StringImpl"* %440, null
  br i1 %441, label %442, label %446

442:                                              ; preds = %438
  %443 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %443, align 8
  %444 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %445 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %444, i64* %445, align 8
  br label %454

446:                                              ; preds = %438
  %447 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %440, %"class.WTF::StringImpl"** %447, align 8
  %448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %440, i64 0, i32 1
  %449 = load i32, i32* %448, align 4
  %450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %440, i64 1
  %451 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %452 = bitcast i8** %451 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %450, %"class.WTF::StringImpl"** %452, align 8
  %453 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %454

454:                                              ; preds = %446, %442
  %455 = phi i64 [ %453, %446 ], [ %444, %442 ]
  %456 = phi i32 [ %449, %446 ], [ 0, %442 ]
  %457 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %456, i32* %457, align 8
  %458 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %458) #16
  %459 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %455, i64* %459, align 8
  %460 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8** %460, align 8
  %461 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 5, i32* %461, align 8
  %462 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %458) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %439) #16
  br i1 %462, label %488, label %463

463:                                              ; preds = %454
  %464 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %464) #16
  %465 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %348, align 8
  %466 = icmp eq %"class.WTF::StringImpl"* %465, null
  br i1 %466, label %467, label %471

467:                                              ; preds = %463
  %468 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %468, align 8
  %469 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %470 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %469, i64* %470, align 8
  br label %479

471:                                              ; preds = %463
  %472 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %465, %"class.WTF::StringImpl"** %472, align 8
  %473 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %465, i64 0, i32 1
  %474 = load i32, i32* %473, align 4
  %475 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %465, i64 1
  %476 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %477 = bitcast i8** %476 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %475, %"class.WTF::StringImpl"** %477, align 8
  %478 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %479

479:                                              ; preds = %471, %467
  %480 = phi i64 [ %478, %471 ], [ %469, %467 ]
  %481 = phi i32 [ %474, %471 ], [ 0, %467 ]
  %482 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %481, i32* %482, align 8
  %483 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %483) #16
  %484 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %480, i64* %484, align 8
  %485 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8** %485, align 8
  %486 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 3, i32* %486, align 8
  %487 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %483) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %464) #16
  br i1 %487, label %488, label %509

488:                                              ; preds = %479, %454
  %489 = icmp eq i64 %350, 0
  br i1 %489, label %714, label %490

490:                                              ; preds = %488
  %491 = inttoptr i64 %350 to %"class.WTF::StringImpl"*
  %492 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %491, i64 0, i32 1
  %493 = load i32, i32* %492, align 4
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %714, label %495

495:                                              ; preds = %490
  %496 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %497 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %496, align 8
  %498 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %497, i64 0, i32 2, i32 0, i32 0
  %499 = load %"class.blink::Document"*, %"class.blink::Document"** %498, align 8
  %500 = icmp eq %"class.blink::Document"* %499, null
  %501 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %499, i64 0, i32 2
  %502 = icmp eq %"class.blink::UseCounter"* %501, null
  %503 = or i1 %500, %502
  br i1 %503, label %534, label %504

504:                                              ; preds = %495
  %505 = bitcast %"class.blink::UseCounter"* %501 to void (%"class.blink::UseCounter"*, i32)***
  %506 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %505, align 8
  %507 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %506, i64 3
  %508 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %507, align 8
  call void %508(%"class.blink::UseCounter"* nonnull %501, i32 1456) #16
  br label %534

509:                                              ; preds = %479
  %510 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %510) #16
  %511 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %512 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %511, i64* %512, align 8
  %513 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8** %513, align 8
  %514 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 10, i32* %514, align 8
  %515 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %348, align 8
  %516 = icmp eq %"class.WTF::StringImpl"* %515, null
  br i1 %516, label %517, label %518

517:                                              ; preds = %509
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %510) #16
  br label %520

518:                                              ; preds = %509
  %519 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %515, %"class.WTF::StringView"* nonnull dereferenceable(24) %18) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %510) #16
  br i1 %519, label %537, label %520

520:                                              ; preds = %517, %518
  %521 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %522 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %521, align 8
  %523 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %522, i64 0, i32 2, i32 0, i32 0
  %524 = load %"class.blink::Document"*, %"class.blink::Document"** %523, align 8
  %525 = icmp eq %"class.blink::Document"* %524, null
  %526 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %524, i64 0, i32 2
  %527 = icmp eq %"class.blink::UseCounter"* %526, null
  %528 = or i1 %525, %527
  br i1 %528, label %537, label %529

529:                                              ; preds = %520
  %530 = bitcast %"class.blink::UseCounter"* %526 to void (%"class.blink::UseCounter"*, i32)***
  %531 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %530, align 8
  %532 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %531, i64 3
  %533 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %532, align 8
  call void %533(%"class.blink::UseCounter"* nonnull %526, i32 1455) #16
  br label %537

534:                                              ; preds = %504, %495
  %535 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0
  %536 = bitcast %"class.blink::SVGSMILElement::Condition"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %536) #16
  br label %543

537:                                              ; preds = %529, %520, %518, %436
  %538 = phi i32 [ 1, %436 ], [ 2, %518 ], [ 0, %520 ], [ 0, %529 ]
  %539 = phi i32 [ %380, %436 ], [ -1, %518 ], [ -1, %520 ], [ -1, %529 ]
  %540 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0
  %541 = bitcast %"class.blink::SVGSMILElement::Condition"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %541) #16
  %542 = icmp eq i64 %350, 0
  br i1 %542, label %571, label %543

543:                                              ; preds = %534, %537
  %544 = phi i8* [ %536, %534 ], [ %541, %537 ]
  %545 = phi %"class.WTF::Vector.56"* [ %535, %534 ], [ %540, %537 ]
  %546 = phi i32 [ -1, %534 ], [ %539, %537 ]
  %547 = phi i32 [ 1, %534 ], [ %538, %537 ]
  %548 = inttoptr i64 %350 to %"class.WTF::StringImpl"*
  %549 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %548, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %550 = load atomic i32, i32* %549 acquire, align 4
  %551 = and i32 %550, 4
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %569, label %553

553:                                              ; preds = %543
  %554 = load atomic i32, i32* %549 monotonic, align 4
  %555 = and i32 %554, 2
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %571

557:                                              ; preds = %553
  %558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %548, i64 0, i32 0
  %559 = load i32, i32* %558, align 4
  %560 = zext i32 %559 to i33
  %561 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %560, i33 1) #16
  %562 = extractvalue { i33, i1 } %561, 1
  %563 = extractvalue { i33, i1 } %561, 0
  %564 = icmp slt i33 %563, 0
  %565 = or i1 %562, %564
  br i1 %565, label %566, label %567, !prof !2

566:                                              ; preds = %557
  call void @llvm.trap() #16
  unreachable

567:                                              ; preds = %557
  %568 = trunc i33 %563 to i32
  store i32 %568, i32* %558, align 4
  br label %571

569:                                              ; preds = %543
  %570 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %548) #16
  br label %571

571:                                              ; preds = %537, %553, %567, %569
  %572 = phi i8* [ %544, %569 ], [ %544, %553 ], [ %544, %567 ], [ %541, %537 ]
  %573 = phi %"class.WTF::Vector.56"* [ %545, %569 ], [ %545, %553 ], [ %545, %567 ], [ %540, %537 ]
  %574 = phi i32 [ %546, %569 ], [ %546, %553 ], [ %546, %567 ], [ %539, %537 ]
  %575 = phi i32 [ %547, %569 ], [ %547, %553 ], [ %547, %567 ], [ %538, %537 ]
  %576 = phi %"class.WTF::StringImpl"* [ %570, %569 ], [ %548, %553 ], [ %548, %567 ], [ null, %537 ]
  %577 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %348, align 8
  %578 = icmp eq %"class.WTF::StringImpl"* %577, null
  br i1 %578, label %602, label %579

579:                                              ; preds = %571
  %580 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %577, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %581 = load atomic i32, i32* %580 acquire, align 4
  %582 = and i32 %581, 4
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %600, label %584

584:                                              ; preds = %579
  %585 = load atomic i32, i32* %580 monotonic, align 4
  %586 = and i32 %585, 2
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %588, label %602

588:                                              ; preds = %584
  %589 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %577, i64 0, i32 0
  %590 = load i32, i32* %589, align 4
  %591 = zext i32 %590 to i33
  %592 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %591, i33 1) #16
  %593 = extractvalue { i33, i1 } %592, 1
  %594 = extractvalue { i33, i1 } %592, 0
  %595 = icmp slt i33 %594, 0
  %596 = or i1 %593, %595
  br i1 %596, label %597, label %598, !prof !2

597:                                              ; preds = %588
  call void @llvm.trap() #16
  unreachable

598:                                              ; preds = %588
  %599 = trunc i33 %594 to i32
  store i32 %599, i32* %589, align 4
  br label %602

600:                                              ; preds = %579
  %601 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %577) #16
  br label %602

602:                                              ; preds = %571, %584, %598, %600
  %603 = phi %"class.WTF::StringImpl"* [ %601, %600 ], [ %577, %584 ], [ %577, %598 ], [ null, %571 ]
  %604 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14SVGSMILElement9ConditionEEEPhm(i64 64) #16
  %605 = bitcast i8* %604 to i32*
  store i32 %575, i32* %605, align 8
  %606 = getelementptr inbounds i8, i8* %604, i64 4
  %607 = bitcast i8* %606 to i32*
  store i32 %2, i32* %607, align 4
  %608 = getelementptr inbounds i8, i8* %604, i64 8
  %609 = bitcast i8* %608 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %576, %"class.WTF::StringImpl"** %609, align 8
  %610 = icmp eq %"class.WTF::StringImpl"* %576, null
  br i1 %610, label %628, label %611

611:                                              ; preds = %602
  %612 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %576, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %613 = load atomic i32, i32* %612 monotonic, align 4
  %614 = and i32 %613, 2
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %616, label %628

616:                                              ; preds = %611
  %617 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %576, i64 0, i32 0
  %618 = load i32, i32* %617, align 4
  %619 = zext i32 %618 to i33
  %620 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %619, i33 1) #16
  %621 = extractvalue { i33, i1 } %620, 1
  %622 = extractvalue { i33, i1 } %620, 0
  %623 = icmp slt i33 %622, 0
  %624 = or i1 %621, %623
  br i1 %624, label %625, label %626, !prof !2

625:                                              ; preds = %616
  call void @llvm.trap() #16
  unreachable

626:                                              ; preds = %616
  %627 = trunc i33 %622 to i32
  store i32 %627, i32* %617, align 4
  br label %628

628:                                              ; preds = %626, %611, %602
  %629 = getelementptr inbounds i8, i8* %604, i64 16
  %630 = bitcast i8* %629 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %603, %"class.WTF::StringImpl"** %630, align 8
  %631 = icmp eq %"class.WTF::StringImpl"* %603, null
  br i1 %631, label %649, label %632

632:                                              ; preds = %628
  %633 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %603, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %634 = load atomic i32, i32* %633 monotonic, align 4
  %635 = and i32 %634, 2
  %636 = icmp eq i32 %635, 0
  br i1 %636, label %637, label %649

637:                                              ; preds = %632
  %638 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %603, i64 0, i32 0
  %639 = load i32, i32* %638, align 4
  %640 = zext i32 %639 to i33
  %641 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %640, i33 1) #16
  %642 = extractvalue { i33, i1 } %641, 1
  %643 = extractvalue { i33, i1 } %641, 0
  %644 = icmp slt i33 %643, 0
  %645 = or i1 %642, %644
  br i1 %645, label %646, label %647, !prof !2

646:                                              ; preds = %637
  call void @llvm.trap() #16
  unreachable

647:                                              ; preds = %637
  %648 = trunc i33 %643 to i32
  store i32 %648, i32* %638, align 4
  br label %649

649:                                              ; preds = %628, %632, %647
  %650 = getelementptr inbounds i8, i8* %604, i64 24
  %651 = bitcast i8* %650 to i64*
  store i64 %240, i64* %651, align 8
  %652 = getelementptr inbounds i8, i8* %604, i64 32
  %653 = bitcast i8* %652 to i32*
  store i32 %574, i32* %653, align 8
  %654 = getelementptr inbounds i8, i8* %604, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %654, i8 0, i64 24, i1 false) #16
  %655 = getelementptr inbounds i8, i8* %604, i64 -4
  %656 = bitcast i8* %655 to i16*
  %657 = load atomic i16, i16* %656 monotonic, align 2
  %658 = or i16 %657, 1
  store atomic i16 %658, i16* %656 release, align 2
  %659 = bitcast %"class.blink::SVGSMILElement::Condition"** %19 to i8**
  store i8* %604, i8** %659, align 8
  %660 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %661 = load i32, i32* %660, align 4
  %662 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %663 = load i32, i32* %662, align 8
  %664 = icmp eq i32 %661, %663
  br i1 %664, label %679, label %665, !prof !2

665:                                              ; preds = %649
  %666 = ptrtoint i8* %604 to i64
  %667 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %573, i64 0, i32 0, i32 0, i32 0
  %668 = load %"class.blink::Member.59"*, %"class.blink::Member.59"** %667, align 8
  %669 = zext i32 %661 to i64
  %670 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %668, i64 %669
  %671 = bitcast %"class.blink::Member.59"* %670 to i64*
  store atomic i64 %666, i64* %671 monotonic, align 8
  %672 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %673 = icmp eq i32 %672, 0
  br i1 %673, label %676, label %674

674:                                              ; preds = %665
  %675 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %604) #16
  br label %676

676:                                              ; preds = %674, %665
  %677 = load i32, i32* %660, align 4
  %678 = add i32 %677, 1
  store i32 %678, i32* %660, align 4
  br label %680

679:                                              ; preds = %649
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14SVGSMILElement9ConditionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_(%"class.WTF::Vector.56"* %573, %"class.blink::SVGSMILElement::Condition"** nonnull dereferenceable(8) %19) #16
  br label %680

680:                                              ; preds = %676, %679
  br i1 %631, label %694, label %681

681:                                              ; preds = %680
  %682 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %603, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %683 = load atomic i32, i32* %682 monotonic, align 4
  %684 = and i32 %683, 2
  %685 = icmp eq i32 %684, 0
  %686 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %603, i64 0, i32 0
  %687 = load i32, i32* %686, align 4
  br i1 %685, label %688, label %690

688:                                              ; preds = %681
  %689 = add i32 %687, -1
  store i32 %689, i32* %686, align 4
  br label %690

690:                                              ; preds = %688, %681
  %691 = phi i32 [ %689, %688 ], [ %687, %681 ]
  %692 = icmp eq i32 %691, 0
  br i1 %692, label %693, label %694

693:                                              ; preds = %690
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %603) #16
  br label %694

694:                                              ; preds = %680, %690, %693
  br i1 %610, label %708, label %695

695:                                              ; preds = %694
  %696 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %576, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %697 = load atomic i32, i32* %696 monotonic, align 4
  %698 = and i32 %697, 2
  %699 = icmp eq i32 %698, 0
  %700 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %576, i64 0, i32 0
  %701 = load i32, i32* %700, align 4
  br i1 %699, label %702, label %704

702:                                              ; preds = %695
  %703 = add i32 %701, -1
  store i32 %703, i32* %700, align 4
  br label %704

704:                                              ; preds = %702, %695
  %705 = phi i32 [ %703, %702 ], [ %701, %695 ]
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %707, label %708

707:                                              ; preds = %704
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %576) #16
  br label %708

708:                                              ; preds = %694, %704, %707
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %572) #16
  %709 = icmp eq i32 %575, 0
  %710 = icmp eq i32 %2, 1
  %711 = and i1 %710, %709
  br i1 %711, label %712, label %714

712:                                              ; preds = %708
  %713 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 6
  store i8 1, i8* %713, align 1
  br label %714

714:                                              ; preds = %488, %346, %396, %490, %712, %708, %352
  %715 = phi i1 [ false, %352 ], [ false, %396 ], [ false, %490 ], [ true, %712 ], [ true, %708 ], [ false, %346 ], [ false, %488 ]
  %716 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %348, align 8
  %717 = icmp eq %"class.WTF::StringImpl"* %716, null
  br i1 %717, label %731, label %718

718:                                              ; preds = %714
  %719 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %716, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %720 = load atomic i32, i32* %719 monotonic, align 4
  %721 = and i32 %720, 2
  %722 = icmp eq i32 %721, 0
  %723 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %716, i64 0, i32 0
  %724 = load i32, i32* %723, align 4
  br i1 %722, label %725, label %727

725:                                              ; preds = %718
  %726 = add i32 %724, -1
  store i32 %726, i32* %723, align 4
  br label %727

727:                                              ; preds = %725, %718
  %728 = phi i32 [ %726, %725 ], [ %724, %718 ]
  %729 = icmp eq i32 %728, 0
  br i1 %729, label %730, label %731

730:                                              ; preds = %727
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %716) #16
  br label %731

731:                                              ; preds = %714, %727, %730
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %349) #16
  %732 = inttoptr i64 %350 to %"class.WTF::StringImpl"*
  %733 = icmp eq i64 %350, 0
  br i1 %733, label %764, label %734

734:                                              ; preds = %731
  %735 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %732, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %736 = load atomic i32, i32* %735 monotonic, align 4
  %737 = and i32 %736, 2
  %738 = icmp eq i32 %737, 0
  %739 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %732, i64 0, i32 0
  %740 = load i32, i32* %739, align 4
  br i1 %738, label %741, label %743

741:                                              ; preds = %734
  %742 = add i32 %740, -1
  store i32 %742, i32* %739, align 4
  br label %743

743:                                              ; preds = %741, %734
  %744 = phi i32 [ %742, %741 ], [ %740, %734 ]
  %745 = icmp eq i32 %744, 0
  br i1 %745, label %746, label %764

746:                                              ; preds = %743
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %732) #16
  br label %764

747:                                              ; preds = %208
  %748 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %749 = icmp eq %"class.WTF::StringImpl"* %748, null
  br i1 %749, label %763, label %750

750:                                              ; preds = %747
  %751 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %748, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %752 = load atomic i32, i32* %751 monotonic, align 4
  %753 = and i32 %752, 2
  %754 = icmp eq i32 %753, 0
  %755 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %748, i64 0, i32 0
  %756 = load i32, i32* %755, align 4
  br i1 %754, label %757, label %759

757:                                              ; preds = %750
  %758 = add i32 %756, -1
  store i32 %758, i32* %755, align 4
  br label %759

759:                                              ; preds = %757, %750
  %760 = phi i32 [ %758, %757 ], [ %756, %750 ]
  %761 = icmp eq i32 %760, 0
  br i1 %761, label %762, label %763

762:                                              ; preds = %759
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %748) #16
  br label %763

763:                                              ; preds = %747, %759, %762
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #16
  br label %764

764:                                              ; preds = %746, %743, %731, %243, %763
  %765 = phi %"class.WTF::StringImpl"** [ %238, %746 ], [ %238, %743 ], [ %238, %731 ], [ %238, %243 ], [ %144, %763 ]
  %766 = phi i8* [ %239, %746 ], [ %239, %743 ], [ %239, %731 ], [ %239, %243 ], [ %145, %763 ]
  %767 = phi i1 [ %715, %746 ], [ %715, %743 ], [ %715, %731 ], [ false, %243 ], [ false, %763 ]
  %768 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %765, align 8
  %769 = icmp eq %"class.WTF::StringImpl"* %768, null
  br i1 %769, label %783, label %770

770:                                              ; preds = %764
  %771 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %768, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %772 = load atomic i32, i32* %771 monotonic, align 4
  %773 = and i32 %772, 2
  %774 = icmp eq i32 %773, 0
  %775 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %768, i64 0, i32 0
  %776 = load i32, i32* %775, align 4
  br i1 %774, label %777, label %779

777:                                              ; preds = %770
  %778 = add i32 %776, -1
  store i32 %778, i32* %775, align 4
  br label %779

779:                                              ; preds = %777, %770
  %780 = phi i32 [ %778, %777 ], [ %776, %770 ]
  %781 = icmp eq i32 %780, 0
  br i1 %781, label %782, label %783

782:                                              ; preds = %779
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %768) #16
  br label %783

783:                                              ; preds = %237, %764, %779, %782
  %784 = phi i1 [ %767, %764 ], [ %767, %779 ], [ %767, %782 ], [ false, %237 ]
  %785 = phi i8* [ %766, %764 ], [ %766, %779 ], [ %766, %782 ], [ %239, %237 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %785) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #16
  %786 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %787 = icmp eq %"class.WTF::StringImpl"* %786, null
  br i1 %787, label %801, label %788

788:                                              ; preds = %783
  %789 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %786, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %790 = load atomic i32, i32* %789 monotonic, align 4
  %791 = and i32 %790, 2
  %792 = icmp eq i32 %791, 0
  %793 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %786, i64 0, i32 0
  %794 = load i32, i32* %793, align 4
  br i1 %792, label %795, label %797

795:                                              ; preds = %788
  %796 = add i32 %794, -1
  store i32 %796, i32* %793, align 4
  br label %797

797:                                              ; preds = %795, %788
  %798 = phi i32 [ %796, %795 ], [ %794, %788 ]
  %799 = icmp eq i32 %798, 0
  br i1 %799, label %800, label %801

800:                                              ; preds = %797
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %786) #16
  br label %801

801:                                              ; preds = %783, %797, %800
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  ret i1 %784
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement15ParseBeginOrEndERKN3WTF6StringENS0_10BeginOrEndE(%"class.blink::SVGSMILElement"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::SMILTimeWithOrigin", align 8
  %5 = alloca %"class.blink::SMILTimeWithOrigin", align 8
  %6 = alloca %"struct.std::__1::__less.718", align 1
  %7 = alloca %"class.WTF::Vector.620", align 8
  %8 = icmp eq i32 %2, 0
  %9 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 12
  %11 = select i1 %8, %"class.blink::SMILInstanceTimeList"* %9, %"class.blink::SMILInstanceTimeList"* %10
  %12 = icmp eq i32 %2, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 6
  store i8 0, i8* %14, align 1
  br label %15

15:                                               ; preds = %13, %3
  %16 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %11, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %99, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %22, i64 %25
  %27 = icmp eq i32 %24, 0
  %28 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %22 to i64
  br i1 %27, label %37, label %29

29:                                               ; preds = %20, %34
  %30 = phi %"class.blink::SMILTimeWithOrigin"* [ %35, %34 ], [ %22, %20 ]
  %31 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %30, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %30, i64 1
  %36 = icmp eq %"class.blink::SMILTimeWithOrigin"* %35, %26
  br i1 %36, label %90, label %29

37:                                               ; preds = %29, %20
  %38 = phi %"class.blink::SMILTimeWithOrigin"* [ %22, %20 ], [ %30, %29 ]
  %39 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %38 to i64
  %40 = icmp eq %"class.blink::SMILTimeWithOrigin"* %38, %26
  br i1 %40, label %90, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %38, i64 1
  %43 = icmp eq %"class.blink::SMILTimeWithOrigin"* %42, %26
  br i1 %43, label %90, label %44

44:                                               ; preds = %41
  %45 = add nsw i64 %25, -2
  %46 = getelementptr %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %22, i64 %45, i32 0, i32 0, i32 0
  %47 = ptrtoint i64* %46 to i64
  %48 = sub i64 %47, %39
  %49 = and i64 %48, 16
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %62

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %38, i64 1, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.blink::SMILTimeWithOrigin"* %38 to i8*
  %57 = bitcast %"class.blink::SMILTimeWithOrigin"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 12, i1 false) #16
  %58 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %38, i64 1
  br label %59

59:                                               ; preds = %55, %51
  %60 = phi %"class.blink::SMILTimeWithOrigin"* [ %38, %51 ], [ %58, %55 ]
  %61 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %38, i64 2
  br label %62

62:                                               ; preds = %59, %44
  %63 = phi %"class.blink::SMILTimeWithOrigin"* [ undef, %44 ], [ %60, %59 ]
  %64 = phi %"class.blink::SMILTimeWithOrigin"* [ %42, %44 ], [ %61, %59 ]
  %65 = phi %"class.blink::SMILTimeWithOrigin"* [ %38, %44 ], [ %42, %59 ]
  %66 = phi %"class.blink::SMILTimeWithOrigin"* [ %38, %44 ], [ %60, %59 ]
  %67 = icmp ult i64 %48, 16
  br i1 %67, label %85, label %68

68:                                               ; preds = %62, %216
  %69 = phi %"class.blink::SMILTimeWithOrigin"* [ %218, %216 ], [ %64, %62 ]
  %70 = phi %"class.blink::SMILTimeWithOrigin"* [ %81, %216 ], [ %65, %62 ]
  %71 = phi %"class.blink::SMILTimeWithOrigin"* [ %217, %216 ], [ %66, %62 ]
  %72 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %70, i64 1, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %68
  %76 = bitcast %"class.blink::SMILTimeWithOrigin"* %71 to i8*
  %77 = bitcast %"class.blink::SMILTimeWithOrigin"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 12, i1 false) #16
  %78 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %71, i64 1
  br label %79

79:                                               ; preds = %75, %68
  %80 = phi %"class.blink::SMILTimeWithOrigin"* [ %71, %68 ], [ %78, %75 ]
  %81 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %69, i64 1
  %82 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %69, i64 1, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %216, label %212

85:                                               ; preds = %216, %62
  %86 = phi %"class.blink::SMILTimeWithOrigin"* [ %63, %62 ], [ %217, %216 ]
  %87 = bitcast %"class.blink::SMILInstanceTimeList"* %11 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = load i32, i32* %16, align 8
  br label %90

90:                                               ; preds = %34, %85, %41, %37
  %91 = phi i32 [ %17, %37 ], [ %17, %41 ], [ %89, %85 ], [ %17, %34 ]
  %92 = phi i64 [ %28, %37 ], [ %28, %41 ], [ %88, %85 ], [ %28, %34 ]
  %93 = phi %"class.blink::SMILTimeWithOrigin"* [ %26, %37 ], [ %38, %41 ], [ %86, %85 ], [ %26, %34 ]
  %94 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %93 to i64
  %95 = sub i64 %94, %92
  %96 = lshr exact i64 %95, 4
  %97 = trunc i64 %96 to i32
  store i32 %97, i32* %23, align 4
  %98 = and i32 %91, -2
  store i32 %98, i32* %16, align 8
  br label %99

99:                                               ; preds = %15, %90
  %100 = bitcast %"class.WTF::Vector.620"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #16
  %101 = getelementptr inbounds %"class.WTF::Vector.620", %"class.WTF::Vector.620"* %7, i64 0, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.WTF::Vector.620", %"class.WTF::Vector.620"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 0, i64 16, i1 false) #16
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %1, i16 zeroext 59, i1 zeroext false, %"class.WTF::Vector.620"* nonnull dereferenceable(16) %7) #16
  %103 = load %"class.WTF::String"*, %"class.WTF::String"** %101, align 8
  %104 = load i32, i32* %102, align 4
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %103, i64 %105
  %107 = icmp eq i32 %104, 0
  br i1 %107, label %116, label %108

108:                                              ; preds = %99
  %109 = bitcast %"class.blink::SMILTimeWithOrigin"* %4 to i8*
  %110 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %4, i64 0, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %4, i64 0, i32 1
  %112 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %113 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %11, i64 0, i32 0, i32 0, i32 0, i32 1
  %114 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %11, i64 0, i32 0
  br label %117

116:                                              ; preds = %138, %99
  br i1 %8, label %141, label %168

117:                                              ; preds = %108, %138
  %118 = phi %"class.WTF::String"* [ %103, %108 ], [ %139, %138 ]
  %119 = call i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %118)
  %120 = icmp eq i64 %119, 9223372036854775807
  br i1 %120, label %121, label %123

121:                                              ; preds = %117
  %122 = call zeroext i1 @_ZN5blink14SVGSMILElement14ParseConditionERKN3WTF6StringENS0_10BeginOrEndE(%"class.blink::SVGSMILElement"* %0, %"class.WTF::String"* dereferenceable(8) %118, i32 %2)
  br label %138

123:                                              ; preds = %117
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #16
  store i64 %119, i64* %110, align 8
  store i32 0, i32* %111, align 8
  %124 = load i32, i32* %112, align 4
  %125 = load i32, i32* %113, align 8
  %126 = icmp eq i32 %124, %125
  br i1 %126, label %134, label %127, !prof !2

127:                                              ; preds = %123
  %128 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %114, align 8
  %129 = zext i32 %124 to i64
  %130 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %128, i64 %129
  %131 = bitcast %"class.blink::SMILTimeWithOrigin"* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* nonnull align 8 %109, i64 16, i1 false) #16
  %132 = load i32, i32* %112, align 4
  %133 = add i32 %132, 1
  store i32 %133, i32* %112, align 4
  br label %135

134:                                              ; preds = %123
  call void @_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* %115, %"class.blink::SMILTimeWithOrigin"* nonnull dereferenceable(16) %4) #16
  br label %135

135:                                              ; preds = %127, %134
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #16
  %136 = load i32, i32* %16, align 8
  %137 = or i32 %136, 1
  store i32 %137, i32* %16, align 8
  br label %138

138:                                              ; preds = %135, %121
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %118, i64 1
  %140 = icmp eq %"class.WTF::String"* %139, %106
  br i1 %140, label %116, label %117

141:                                              ; preds = %116
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %145, label %168

145:                                              ; preds = %141
  %146 = bitcast %"class.blink::SMILTimeWithOrigin"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %146) #16
  %147 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %147, align 8
  %148 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 0, i32 1
  store i32 0, i32* %148, align 8
  %149 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %150, %152
  br i1 %153, label %162, label %154, !prof !2

154:                                              ; preds = %145
  %155 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %156 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %155, align 8
  %157 = zext i32 %150 to i64
  %158 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %156, i64 %157
  %159 = bitcast %"class.blink::SMILTimeWithOrigin"* %158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %159, i8* nonnull align 8 %146, i64 16, i1 false) #16
  %160 = load i32, i32* %149, align 4
  %161 = add i32 %160, 1
  store i32 %161, i32* %149, align 4
  br label %164

162:                                              ; preds = %145
  %163 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %9, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* %163, %"class.blink::SMILTimeWithOrigin"* nonnull dereferenceable(16) %5) #16
  br label %164

164:                                              ; preds = %154, %162
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %146) #16
  %165 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = or i32 %166, 1
  store i32 %167, i32* %165, align 8
  br label %168

168:                                              ; preds = %164, %141, %116
  %169 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %170 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %169, align 8
  %171 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %170, i64 %173
  %175 = getelementptr inbounds %"struct.std::__1::__less.718", %"struct.std::__1::__less.718"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %175) #16
  call void @_ZNSt3__16__sortIRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEvT0_S7_T_(%"class.blink::SMILTimeWithOrigin"* %170, %"class.blink::SMILTimeWithOrigin"* %174, %"struct.std::__1::__less.718"* nonnull dereferenceable(1) %6) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %175) #16
  %176 = load %"class.WTF::String"*, %"class.WTF::String"** %101, align 8
  %177 = icmp eq %"class.WTF::String"* %176, null
  br i1 %177, label %211, label %178, !prof !3

178:                                              ; preds = %168
  %179 = bitcast %"class.WTF::String"* %176 to i8*
  %180 = load i32, i32* %102, align 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %209, label %182, !prof !2

182:                                              ; preds = %178
  %183 = zext i32 %180 to i64
  %184 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %183
  br label %185

185:                                              ; preds = %203, %182
  %186 = phi %"class.WTF::String"* [ %204, %203 ], [ %176, %182 ]
  %187 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %186, i64 0, i32 0, i32 0
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #16
  br label %203

203:                                              ; preds = %202, %199, %185
  %204 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %186, i64 1
  %205 = icmp eq %"class.WTF::String"* %204, %184
  br i1 %205, label %206, label %185

206:                                              ; preds = %203
  store i32 0, i32* %102, align 4
  %207 = bitcast %"class.WTF::Vector.620"* %7 to i8**
  %208 = load i8*, i8** %207, align 8
  br label %209

209:                                              ; preds = %206, %178
  %210 = phi i8* [ %208, %206 ], [ %179, %178 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %210) #16
  store %"class.WTF::String"* null, %"class.WTF::String"** %101, align 8
  br label %211

211:                                              ; preds = %168, %209
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #16
  ret void

212:                                              ; preds = %79
  %213 = bitcast %"class.blink::SMILTimeWithOrigin"* %80 to i8*
  %214 = bitcast %"class.blink::SMILTimeWithOrigin"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %213, i8* align 8 %214, i64 12, i1 false) #16
  %215 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %80, i64 1
  br label %216

216:                                              ; preds = %212, %79
  %217 = phi %"class.blink::SMILTimeWithOrigin"* [ %80, %79 ], [ %215, %212 ]
  %218 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %69, i64 2
  %219 = icmp eq %"class.blink::SMILTimeWithOrigin"* %218, %26
  br i1 %219, label %85, label %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGSMILElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %11, align 8
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kBeginAttrE, align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %15, %17
  br i1 %18, label %19, label %130

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0
  %21 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %99, label %24

24:                                               ; preds = %19
  tail call void @_ZN5blink14SVGSMILElement20DisconnectConditionsEv(%"class.blink::SVGSMILElement"* %0) #16
  %25 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %24
  %29 = load i32, i32* %21, align 4
  %30 = icmp eq i32 %29, 0
  %31 = bitcast %"class.WTF::Vector.56"* %20 to i8**
  br i1 %30, label %36, label %32

32:                                               ; preds = %28
  %33 = load i8*, i8** %31, align 8
  %34 = zext i32 %29 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %33, i64 %35) #16
  store i32 0, i32* %21, align 4
  br label %36

36:                                               ; preds = %32, %28
  %37 = load i8*, i8** %31, align 8
  %38 = bitcast %"class.WTF::Vector.56"* %20 to i64*
  store atomic i64 0, i64* %38 monotonic, align 8
  store i32 0, i32* %25, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %37) #16
  br label %39

39:                                               ; preds = %24, %36
  %40 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kEndAttrE, align 8
  %41 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %41, align 8
  %43 = icmp eq %"class.blink::ElementData"* %42, null
  br i1 %43, label %94, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %42, i64 0, i32 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %44
  %50 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::UniqueElementData"*
  %51 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %42, i64 1, i32 1
  %52 = bitcast %"class.blink::Member.19"* %51 to %"class.blink::Attribute"**
  %53 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %50, i64 0, i32 2, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  br label %61

56:                                               ; preds = %44
  %57 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %42, i64 1
  %58 = bitcast %"class.blink::ElementData"* %57 to %"class.blink::Attribute"*
  %59 = lshr i32 %46, 1
  %60 = and i32 %59, 268435455
  br label %61

61:                                               ; preds = %56, %49
  %62 = phi %"class.blink::Attribute"* [ %58, %56 ], [ %53, %49 ]
  %63 = phi i32 [ %60, %56 ], [ %55, %49 ]
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %62, i64 %64
  %66 = icmp eq i32 %63, 0
  br i1 %66, label %94, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %40, i64 0, i32 0, i32 0
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %72

72:                                               ; preds = %87, %67
  %73 = phi %"class.blink::Attribute"* [ %62, %67 ], [ %88, %87 ]
  %74 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %75, %69
  br i1 %76, label %90, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %79, %80
  br i1 %81, label %82, label %87

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 4, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %84, %85
  br i1 %86, label %90, label %87

87:                                               ; preds = %82, %77
  %88 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %73, i64 1
  %89 = icmp eq %"class.blink::Attribute"* %88, %65
  br i1 %89, label %94, label %72

90:                                               ; preds = %82, %72
  %91 = icmp eq %"class.blink::Attribute"* %73, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %73, i64 0, i32 1
  br label %96

94:                                               ; preds = %87, %90, %61, %39
  %95 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %96

96:                                               ; preds = %92, %94
  %97 = phi %"class.WTF::AtomicString"* [ %95, %94 ], [ %93, %92 ]
  %98 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %97, i64 0, i32 0
  tail call void @_ZN5blink14SVGSMILElement15ParseBeginOrEndERKN3WTF6StringENS0_10BeginOrEndE(%"class.blink::SVGSMILElement"* %0, %"class.WTF::String"* dereferenceable(8) %98, i32 1)
  br label %99

99:                                               ; preds = %96, %19
  %100 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0
  tail call void @_ZN5blink14SVGSMILElement15ParseBeginOrEndERKN3WTF6StringENS0_10BeginOrEndE(%"class.blink::SVGSMILElement"* %0, %"class.WTF::String"* dereferenceable(8) %100, i32 0)
  %101 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = and i32 %102, 256
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %436, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 5
  %107 = load i8, i8* %106, align 8, !range !26
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %110, label %109

109:                                              ; preds = %105
  tail call void @_ZN5blink14SVGSMILElement20DisconnectConditionsEv(%"class.blink::SVGSMILElement"* %0) #16
  br label %110

110:                                              ; preds = %109, %105
  %111 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %112 = load %"class.blink::Member.59"*, %"class.blink::Member.59"** %111, align 8
  %113 = load i32, i32* %21, align 4
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %112, i64 %114
  %116 = icmp eq i32 %113, 0
  br i1 %116, label %128, label %117

117:                                              ; preds = %110, %125
  %118 = phi %"class.blink::Member.59"* [ %126, %125 ], [ %112, %110 ]
  %119 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %118, i64 0, i32 0, i32 0
  %120 = load %"class.blink::SVGSMILElement::Condition"*, %"class.blink::SVGSMILElement::Condition"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %120, i64 0, i32 0
  %122 = load i32, i32* %121, align 8
  switch i32 %122, label %125 [
    i32 1, label %123
    i32 0, label %124
  ]

123:                                              ; preds = %117
  tail call void @_ZN5blink14SVGSMILElement9Condition15ConnectSyncBaseERS0_(%"class.blink::SVGSMILElement::Condition"* %120, %"class.blink::SVGSMILElement"* dereferenceable(416) %0) #16
  br label %125

124:                                              ; preds = %117
  tail call void @_ZN5blink14SVGSMILElement9Condition16ConnectEventBaseERS0_(%"class.blink::SVGSMILElement::Condition"* %120, %"class.blink::SVGSMILElement"* dereferenceable(416) %0) #16
  br label %125

125:                                              ; preds = %124, %123, %117
  %126 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %118, i64 1
  %127 = icmp eq %"class.blink::Member.59"* %126, %115
  br i1 %127, label %128, label %117

128:                                              ; preds = %125, %110
  store i8 1, i8* %106, align 8
  %129 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 28
  store i8 1, i8* %129, align 1
  tail call void @_ZN5blink14SVGSMILElement19InstanceListChangedEv(%"class.blink::SVGSMILElement"* %0)
  br label %436

130:                                              ; preds = %2
  %131 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kEndAttrE, align 8
  %132 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %131, i64 0, i32 0, i32 0
  %133 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %132, align 8
  %134 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %15, %133
  br i1 %134, label %135, label %244

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0
  %137 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %213, label %140

140:                                              ; preds = %135
  tail call void @_ZN5blink14SVGSMILElement20DisconnectConditionsEv(%"class.blink::SVGSMILElement"* %0) #16
  %141 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %140
  %145 = load i32, i32* %137, align 4
  %146 = icmp eq i32 %145, 0
  %147 = bitcast %"class.WTF::Vector.56"* %136 to i8**
  br i1 %146, label %152, label %148

148:                                              ; preds = %144
  %149 = load i8*, i8** %147, align 8
  %150 = zext i32 %145 to i64
  %151 = shl nuw nsw i64 %150, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %149, i64 %151) #16
  store i32 0, i32* %137, align 4
  br label %152

152:                                              ; preds = %148, %144
  %153 = load i8*, i8** %147, align 8
  %154 = bitcast %"class.WTF::Vector.56"* %136 to i64*
  store atomic i64 0, i64* %154 monotonic, align 8
  store i32 0, i32* %141, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %153) #16
  br label %155

155:                                              ; preds = %140, %152
  %156 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %157 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %156, align 8
  %158 = icmp eq %"class.blink::ElementData"* %157, null
  br i1 %158, label %208, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %157, i64 0, i32 0, i32 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %171, label %164

164:                                              ; preds = %159
  %165 = bitcast %"class.blink::ElementData"* %157 to %"class.blink::UniqueElementData"*
  %166 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %157, i64 1, i32 1
  %167 = bitcast %"class.blink::Member.19"* %166 to %"class.blink::Attribute"**
  %168 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %165, i64 0, i32 2, i32 0, i32 0, i32 2
  %170 = load i32, i32* %169, align 4
  br label %176

171:                                              ; preds = %159
  %172 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %157, i64 1
  %173 = bitcast %"class.blink::ElementData"* %172 to %"class.blink::Attribute"*
  %174 = lshr i32 %161, 1
  %175 = and i32 %174, 268435455
  br label %176

176:                                              ; preds = %171, %164
  %177 = phi %"class.blink::Attribute"* [ %173, %171 ], [ %168, %164 ]
  %178 = phi i32 [ %175, %171 ], [ %170, %164 ]
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %177, i64 %179
  %181 = icmp eq i32 %178, 0
  br i1 %181, label %208, label %182

182:                                              ; preds = %176
  %183 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %184 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %183, i64 0, i32 3, i32 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %183, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %186

186:                                              ; preds = %201, %182
  %187 = phi %"class.blink::Attribute"* [ %177, %182 ], [ %202, %201 ]
  %188 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %187, i64 0, i32 0, i32 0, i32 0
  %189 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %188, align 8
  %190 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %189, %183
  br i1 %190, label %204, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %189, i64 0, i32 3, i32 0, i32 0, i32 0
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %193, %194
  br i1 %195, label %196, label %201

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %189, i64 0, i32 4, i32 0, i32 0, i32 0
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %198, %199
  br i1 %200, label %204, label %201

201:                                              ; preds = %196, %191
  %202 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %187, i64 1
  %203 = icmp eq %"class.blink::Attribute"* %202, %180
  br i1 %203, label %208, label %186

204:                                              ; preds = %196, %186
  %205 = icmp eq %"class.blink::Attribute"* %187, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %204
  %207 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %187, i64 0, i32 1
  br label %210

208:                                              ; preds = %201, %204, %176, %155
  %209 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %210

210:                                              ; preds = %206, %208
  %211 = phi %"class.WTF::AtomicString"* [ %209, %208 ], [ %207, %206 ]
  %212 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %211, i64 0, i32 0
  tail call void @_ZN5blink14SVGSMILElement15ParseBeginOrEndERKN3WTF6StringENS0_10BeginOrEndE(%"class.blink::SVGSMILElement"* %0, %"class.WTF::String"* dereferenceable(8) %212, i32 0)
  br label %213

213:                                              ; preds = %210, %135
  %214 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0
  tail call void @_ZN5blink14SVGSMILElement15ParseBeginOrEndERKN3WTF6StringENS0_10BeginOrEndE(%"class.blink::SVGSMILElement"* %0, %"class.WTF::String"* dereferenceable(8) %214, i32 1)
  %215 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %216 = load i32, i32* %215, align 8
  %217 = and i32 %216, 256
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %436, label %219

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 5
  %221 = load i8, i8* %220, align 8, !range !26
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %224, label %223

223:                                              ; preds = %219
  tail call void @_ZN5blink14SVGSMILElement20DisconnectConditionsEv(%"class.blink::SVGSMILElement"* %0) #16
  br label %224

224:                                              ; preds = %223, %219
  %225 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %226 = load %"class.blink::Member.59"*, %"class.blink::Member.59"** %225, align 8
  %227 = load i32, i32* %137, align 4
  %228 = zext i32 %227 to i64
  %229 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %226, i64 %228
  %230 = icmp eq i32 %227, 0
  br i1 %230, label %242, label %231

231:                                              ; preds = %224, %239
  %232 = phi %"class.blink::Member.59"* [ %240, %239 ], [ %226, %224 ]
  %233 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %232, i64 0, i32 0, i32 0
  %234 = load %"class.blink::SVGSMILElement::Condition"*, %"class.blink::SVGSMILElement::Condition"** %233, align 8
  %235 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %234, i64 0, i32 0
  %236 = load i32, i32* %235, align 8
  switch i32 %236, label %239 [
    i32 1, label %237
    i32 0, label %238
  ]

237:                                              ; preds = %231
  tail call void @_ZN5blink14SVGSMILElement9Condition15ConnectSyncBaseERS0_(%"class.blink::SVGSMILElement::Condition"* %234, %"class.blink::SVGSMILElement"* dereferenceable(416) %0) #16
  br label %239

238:                                              ; preds = %231
  tail call void @_ZN5blink14SVGSMILElement9Condition16ConnectEventBaseERS0_(%"class.blink::SVGSMILElement::Condition"* %234, %"class.blink::SVGSMILElement"* dereferenceable(416) %0) #16
  br label %239

239:                                              ; preds = %238, %237, %231
  %240 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %232, i64 1
  %241 = icmp eq %"class.blink::Member.59"* %240, %229
  br i1 %241, label %242, label %231

242:                                              ; preds = %239, %224
  store i8 1, i8* %220, align 8
  %243 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 28
  store i8 1, i8* %243, align 1
  tail call void @_ZN5blink14SVGSMILElement19InstanceListChangedEv(%"class.blink::SVGSMILElement"* %0)
  br label %436

244:                                              ; preds = %130
  %245 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names12kOnbeginAttrE, align 8
  %246 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %245, i64 0, i32 0, i32 0
  %247 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %246, align 8
  %248 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %15, %247
  br i1 %248, label %249, label %261

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kBeginEventE, align 8
  %252 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %253 = bitcast %"class.blink::SVGSMILElement"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %254 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %253, align 8
  %255 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %254, i64 10
  %256 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %255, align 8
  %257 = tail call %"class.blink::ExecutionContext"* %256(%"class.blink::Node"* %252) #16
  %258 = tail call %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"* %257, %"class.blink::QualifiedName"* dereferenceable(8) %10, %"class.WTF::AtomicString"* dereferenceable(8) %12, i32 0) #16
  %259 = getelementptr inbounds %"class.blink::JSEventHandlerForContentAttribute", %"class.blink::JSEventHandlerForContentAttribute"* %258, i64 0, i32 0, i32 0, i32 0
  %260 = tail call zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"* %250, %"class.WTF::AtomicString"* dereferenceable(8) %251, %"class.blink::EventListener"* %259) #16
  br label %436

261:                                              ; preds = %244
  %262 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kOnendAttrE, align 8
  %263 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %262, i64 0, i32 0, i32 0
  %264 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %263, align 8
  %265 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %15, %264
  br i1 %265, label %266, label %278

266:                                              ; preds = %261
  %267 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kEndEventE, align 8
  %269 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %270 = bitcast %"class.blink::SVGSMILElement"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %271 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %270, align 8
  %272 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %271, i64 10
  %273 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %272, align 8
  %274 = tail call %"class.blink::ExecutionContext"* %273(%"class.blink::Node"* %269) #16
  %275 = tail call %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"* %274, %"class.blink::QualifiedName"* dereferenceable(8) %10, %"class.WTF::AtomicString"* dereferenceable(8) %12, i32 0) #16
  %276 = getelementptr inbounds %"class.blink::JSEventHandlerForContentAttribute", %"class.blink::JSEventHandlerForContentAttribute"* %275, i64 0, i32 0, i32 0, i32 0
  %277 = tail call zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"* %267, %"class.WTF::AtomicString"* dereferenceable(8) %268, %"class.blink::EventListener"* %276) #16
  br label %436

278:                                              ; preds = %261
  %279 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names13kOnrepeatAttrE, align 8
  %280 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %279, i64 0, i32 0, i32 0
  %281 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %280, align 8
  %282 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %15, %281
  br i1 %282, label %283, label %295

283:                                              ; preds = %278
  %284 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kRepeatEventE, align 8
  %286 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %287 = bitcast %"class.blink::SVGSMILElement"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %288 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %287, align 8
  %289 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %288, i64 10
  %290 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %289, align 8
  %291 = tail call %"class.blink::ExecutionContext"* %290(%"class.blink::Node"* %286) #16
  %292 = tail call %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"* %291, %"class.blink::QualifiedName"* dereferenceable(8) %10, %"class.WTF::AtomicString"* dereferenceable(8) %12, i32 0) #16
  %293 = getelementptr inbounds %"class.blink::JSEventHandlerForContentAttribute", %"class.blink::JSEventHandlerForContentAttribute"* %292, i64 0, i32 0, i32 0, i32 0
  %294 = tail call zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"* %284, %"class.WTF::AtomicString"* dereferenceable(8) %285, %"class.blink::EventListener"* %293) #16
  br label %436

295:                                              ; preds = %278
  %296 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names12kRestartAttrE, align 8
  %297 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %296, i64 0, i32 0, i32 0
  %298 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %297, align 8
  %299 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %15, %298
  br i1 %299, label %300, label %362

300:                                              ; preds = %295
  %301 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %301) #16
  %302 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %303 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8
  %304 = icmp eq %"class.WTF::StringImpl"* %303, null
  br i1 %304, label %305, label %309

305:                                              ; preds = %300
  %306 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %306, align 8
  %307 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %308 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %307, i64* %308, align 8
  br label %317

309:                                              ; preds = %300
  %310 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %303, %"class.WTF::StringImpl"** %310, align 8
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 1
  %312 = load i32, i32* %311, align 4
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 1
  %314 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %315 = bitcast i8** %314 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %313, %"class.WTF::StringImpl"** %315, align 8
  %316 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %317

317:                                              ; preds = %309, %305
  %318 = phi i64 [ %316, %309 ], [ %307, %305 ]
  %319 = phi i32 [ %312, %309 ], [ 0, %305 ]
  %320 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %319, i32* %320, align 8
  %321 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %321) #16
  %322 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %318, i64* %322, align 8
  %323 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i8** %323, align 8
  %324 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 5, i32* %324, align 8
  %325 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %321) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %301) #16
  br i1 %325, label %326, label %331

326:                                              ; preds = %317
  %327 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %328 = load i8, i8* %327, align 8
  %329 = and i8 %328, -13
  %330 = or i8 %329, 8
  store i8 %330, i8* %327, align 8
  br label %436

331:                                              ; preds = %317
  %332 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %332) #16
  %333 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8
  %334 = icmp eq %"class.WTF::StringImpl"* %333, null
  br i1 %334, label %335, label %339

335:                                              ; preds = %331
  %336 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %336, align 8
  %337 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %338 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %337, i64* %338, align 8
  br label %347

339:                                              ; preds = %331
  %340 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %333, %"class.WTF::StringImpl"** %340, align 8
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 0, i32 1
  %342 = load i32, i32* %341, align 4
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 1
  %344 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %345 = bitcast i8** %344 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %343, %"class.WTF::StringImpl"** %345, align 8
  %346 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %347

347:                                              ; preds = %339, %335
  %348 = phi i64 [ %346, %339 ], [ %337, %335 ]
  %349 = phi i32 [ %342, %339 ], [ 0, %335 ]
  %350 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %349, i32* %350, align 8
  %351 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %351) #16
  %352 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %348, i64* %352, align 8
  %353 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i8** %353, align 8
  %354 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 13, i32* %354, align 8
  %355 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %351) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %332) #16
  %356 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %357 = load i8, i8* %356, align 8
  %358 = and i8 %357, -13
  br i1 %355, label %359, label %361

359:                                              ; preds = %347
  %360 = or i8 %358, 4
  store i8 %360, i8* %356, align 8
  br label %436

361:                                              ; preds = %347
  store i8 %358, i8* %356, align 8
  br label %436

362:                                              ; preds = %295
  %363 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names9kFillAttrE, align 8
  %364 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %363, i64 0, i32 0, i32 0
  %365 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %364, align 8
  %366 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %15, %365
  br i1 %366, label %367, label %399

367:                                              ; preds = %362
  %368 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %368) #16
  %369 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %369, align 8
  %371 = icmp eq %"class.WTF::StringImpl"* %370, null
  br i1 %371, label %372, label %376

372:                                              ; preds = %367
  %373 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %373, align 8
  %374 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %375 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %374, i64* %375, align 8
  br label %384

376:                                              ; preds = %367
  %377 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %370, %"class.WTF::StringImpl"** %377, align 8
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 1
  %379 = load i32, i32* %378, align 4
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 1
  %381 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %382 = bitcast i8** %381 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %380, %"class.WTF::StringImpl"** %382, align 8
  %383 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %384

384:                                              ; preds = %376, %372
  %385 = phi i64 [ %383, %376 ], [ %374, %372 ]
  %386 = phi i32 [ %379, %376 ], [ 0, %372 ]
  %387 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %386, i32* %387, align 8
  %388 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %388) #16
  %389 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %385, i64* %389, align 8
  %390 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i8** %390, align 8
  %391 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 6, i32* %391, align 8
  %392 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %388) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %368) #16
  %393 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %394 = zext i1 %392 to i8
  %395 = load i8, i8* %393, align 8
  %396 = shl nuw nsw i8 %394, 4
  %397 = and i8 %395, -17
  %398 = or i8 %397, %396
  store i8 %398, i8* %393, align 8
  br label %436

399:                                              ; preds = %362
  %400 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kDurAttrE, align 8
  %401 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %400, i64 0, i32 0, i32 0
  %402 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %401, align 8
  %403 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %15, %402
  br i1 %403, label %404, label %406

404:                                              ; preds = %399
  %405 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 22, i32 0, i32 0
  store i64 -9223372036854775808, i64* %405, align 8
  br label %436

406:                                              ; preds = %399
  %407 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names14kRepeatDurAttrE, align 8
  %408 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %407, i64 0, i32 0, i32 0
  %409 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %408, align 8
  %410 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %15, %409
  br i1 %410, label %411, label %413

411:                                              ; preds = %406
  %412 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 23, i32 0, i32 0
  store i64 -9223372036854775808, i64* %412, align 8
  br label %436

413:                                              ; preds = %406
  %414 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names16kRepeatCountAttrE, align 8
  %415 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %414, i64 0, i32 0, i32 0
  %416 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %415, align 8
  %417 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %15, %416
  br i1 %417, label %418, label %420

418:                                              ; preds = %413
  %419 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 24, i32 0
  store double 0xFFF0000000000000, double* %419, align 8
  br label %436

420:                                              ; preds = %413
  %421 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kMinAttrE, align 8
  %422 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %421, i64 0, i32 0, i32 0
  %423 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %422, align 8
  %424 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %15, %423
  br i1 %424, label %425, label %427

425:                                              ; preds = %420
  %426 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 25, i32 0, i32 0
  store i64 -9223372036854775808, i64* %426, align 8
  br label %436

427:                                              ; preds = %420
  %428 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kMaxAttrE, align 8
  %429 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %428, i64 0, i32 0, i32 0
  %430 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %429, align 8
  %431 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %15, %430
  br i1 %431, label %432, label %434

432:                                              ; preds = %427
  %433 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 26, i32 0, i32 0
  store i64 -9223372036854775808, i64* %433, align 8
  br label %436

434:                                              ; preds = %427
  %435 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink10SVGElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGElement"* %435, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #16
  br label %436

436:                                              ; preds = %99, %213, %242, %266, %359, %361, %326, %404, %418, %432, %434, %425, %411, %384, %283, %249, %128
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement19InstanceListChangedEv(%"class.blink::SVGSMILElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 19, i32 0, i32 0
  %3 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %2, align 8
  %4 = icmp eq %"class.blink::SMILTimeContainer"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @_ZNK5blink17SMILTimeContainer28LatestUpdatePresentationTimeEv(%"class.blink::SMILTimeContainer"* nonnull %3) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i64 [ %6, %5 ], [ 0, %1 ]
  %9 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %10 = load i8, i8* %9, align 8
  %11 = and i8 %10, 3
  %12 = icmp eq i8 %11, 1
  tail call void @_ZN5blink14SVGSMILElement14UpdateIntervalENS_8SMILTimeE(%"class.blink::SVGSMILElement"* %0, i64 %8)
  %13 = icmp slt i64 %8, 9223372036854775806
  br i1 %13, label %14, label %21

14:                                               ; preds = %7
  %15 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %8, i64 -1)
  %16 = extractvalue { i64, i1 } %15, 1
  %17 = extractvalue { i64, i1 } %15, 0
  %18 = select i1 %16, i64 -9223372036854775808, i64 %17, !prof !2
  %19 = icmp slt i64 %18, 9223372036854775805
  %20 = select i1 %19, i64 %18, i64 9223372036854775805
  br label %21

21:                                               ; preds = %7, %14
  %22 = phi i64 [ %20, %14 ], [ %8, %7 ]
  br i1 %12, label %23, label %62

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13
  %25 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp slt i64 %26, 9223372036854775806
  %28 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14
  br i1 %27, label %29, label %36

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %28, i64 0, i32 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp slt i64 %31, 9223372036854775806
  %33 = icmp sgt i64 %26, %22
  %34 = and i1 %33, %32
  %35 = select i1 %34, %"struct.blink::SMILInterval"* %28, %"struct.blink::SMILInterval"* %24
  br label %36

36:                                               ; preds = %23, %29
  %37 = phi %"struct.blink::SMILInterval"* [ %35, %29 ], [ %28, %23 ]
  %38 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp sgt i64 %39, %22
  br i1 %40, label %45, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %37, i64 0, i32 1, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp sgt i64 %43, %22
  br i1 %44, label %53, label %45

45:                                               ; preds = %41, %36
  %46 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 7
  %47 = load i8, i8* %46, align 2, !range !26
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %57

49:                                               ; preds = %45
  %50 = load i8, i8* %9, align 8
  %51 = lshr i8 %50, 3
  %52 = and i8 %51, 2
  br label %57

53:                                               ; preds = %41
  %54 = load i8, i8* %9, align 8
  %55 = and i8 %54, -4
  %56 = or i8 %55, 1
  store i8 %56, i8* %9, align 8
  br label %62

57:                                               ; preds = %49, %45
  %58 = phi i8 [ 0, %45 ], [ %52, %49 ]
  %59 = load i8, i8* %9, align 8
  %60 = and i8 %59, -4
  %61 = or i8 %60, %58
  store i8 %61, i8* %9, align 8
  tail call void @_ZN5blink14SVGSMILElement19EndedActiveIntervalEv(%"class.blink::SVGSMILElement"* %0)
  br label %62

62:                                               ; preds = %53, %57, %21
  %63 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %2, align 8
  %64 = icmp eq %"class.blink::SMILTimeContainer"* %63, null
  br i1 %64, label %79, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = icmp slt i64 %67, 9223372036854775806
  br i1 %68, label %69, label %73

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14, i32 1, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = icmp sgt i64 %71, %22
  br i1 %72, label %76, label %73

73:                                               ; preds = %69, %65
  %74 = tail call i64 @_ZNK5blink14SVGSMILElement23ComputeNextIntervalTimeENS_8SMILTimeENS0_14IncludeRepeatsE(%"class.blink::SVGSMILElement"* %0, i64 %22, i32 0)
  %75 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %2, align 8
  br label %76

76:                                               ; preds = %69, %73
  %77 = phi %"class.blink::SMILTimeContainer"* [ %75, %73 ], [ %63, %69 ]
  %78 = phi i64 [ %74, %73 ], [ %71, %69 ]
  tail call void @_ZN5blink17SMILTimeContainer10RescheduleEPNS_14SVGSMILElementENS_8SMILTimeE(%"class.blink::SMILTimeContainer"* %77, %"class.blink::SVGSMILElement"* %0, i64 %78) #16
  br label %79

79:                                               ; preds = %62, %76
  ret void
}

declare zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*) local_unnamed_addr #4

declare %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #4

declare void @_ZN5blink10SVGElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE(%"class.blink::SVGSMILElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::SVGElement::SvgAttributeChangedParams", %"struct.blink::SVGElement::SvgAttributeChangedParams"* %1, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = tail call zeroext i1 @_ZN5blink15SVGURIReference16IsKnownAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %4) #16
  %6 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0
  br i1 %5, label %7, label %12

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::SVGSMILElement"* %0 to void (%"class.blink::SVGSMILElement"*)***
  %9 = load void (%"class.blink::SVGSMILElement"*)**, void (%"class.blink::SVGSMILElement"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %9, i64 139
  %11 = load void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %10, align 8
  tail call void %11(%"class.blink::SVGSMILElement"* %0) #16
  tail call void @_ZN5blink10SVGElement19InvalidateInstancesEv(%"class.blink::SVGElement"* %6) #16
  br label %13

12:                                               ; preds = %2
  tail call void @_ZN5blink10SVGElement19SvgAttributeChangedERKNS0_25SvgAttributeChangedParamsE(%"class.blink::SVGElement"* %6, %"struct.blink::SVGElement::SvgAttributeChangedParams"* dereferenceable(16) %1) #16
  br label %13

13:                                               ; preds = %12, %7
  ret void
}

declare zeroext i1 @_ZN5blink15SVGURIReference16IsKnownAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN5blink10SVGElement19SvgAttributeChangedERKNS0_25SvgAttributeChangedParamsE(%"class.blink::SVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"* dereferenceable(16)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SVGSMILElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::SVGSMILElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names9kFillAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0
  %11 = tail call zeroext i1 @_ZNK5blink10SVGElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %10, %"class.blink::QualifiedName"* dereferenceable(8) %1) #16
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i1 [ %11, %9 ], [ false, %2 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink10SVGElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14SVGSMILElement7ElapsedEv(%"class.blink::SVGSMILElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 19, i32 0, i32 0
  %3 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %2, align 8
  %4 = icmp eq %"class.blink::SMILTimeContainer"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @_ZNK5blink17SMILTimeContainer7ElapsedEv(%"class.blink::SMILTimeContainer"* nonnull %3) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i64 [ %6, %5 ], [ 0, %1 ]
  ret i64 %8
}

declare i64 @_ZNK5blink17SMILTimeContainer7ElapsedEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink14SVGSMILElement26BeginTimeForPrioritizationENS_8SMILTimeE(%"class.blink::SVGSMILElement"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %4 = load i8, i8* %3, align 8
  %5 = and i8 %4, 3
  %6 = icmp eq i8 %5, 2
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp sgt i64 %9, %1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  br label %15

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %13, %11
  %16 = phi i64* [ %12, %11 ], [ %14, %13 ]
  %17 = load i64, i64* %16, align 8
  ret i64 %17
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* nocapture readonly, %"class.blink::SVGSMILElement"* nocapture readonly, i64) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, 3
  %7 = icmp eq i8 %6, 2
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %10, %2
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  br label %16

14:                                               ; preds = %8, %3
  %15 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi i64* [ %13, %12 ], [ %15, %14 ]
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %1, i64 0, i32 15
  %20 = load i8, i8* %19, align 8
  %21 = and i8 %20, 3
  %22 = icmp eq i8 %21, 2
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %1, i64 0, i32 13, i32 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp sgt i64 %25, %2
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %1, i64 0, i32 14, i32 0, i32 0, i32 0
  br label %31

29:                                               ; preds = %23, %16
  %30 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %1, i64 0, i32 13, i32 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %27, %29
  %32 = phi i64* [ %28, %27 ], [ %30, %29 ]
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %18, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 20
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %1, i64 0, i32 20
  %39 = load i32, i32* %38, align 8
  %40 = icmp ugt i32 %37, %39
  br label %43

41:                                               ; preds = %31
  %42 = icmp sgt i64 %18, %33
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi i1 [ %40, %35 ], [ %42, %41 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14SVGSMILElement3DurEv(%"class.blink::SVGSMILElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 22, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, -9223372036854775808
  br i1 %4, label %5, label %68

5:                                                ; preds = %1
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kDurAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %7, align 8
  %9 = icmp eq %"class.blink::ElementData"* %8, null
  br i1 %9, label %60, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::ElementData"* %8 to %"class.blink::UniqueElementData"*
  %17 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1, i32 1
  %18 = bitcast %"class.blink::Member.19"* %17 to %"class.blink::Attribute"**
  %19 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %16, i64 0, i32 2, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  br label %27

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1
  %24 = bitcast %"class.blink::ElementData"* %23 to %"class.blink::Attribute"*
  %25 = lshr i32 %12, 1
  %26 = and i32 %25, 268435455
  br label %27

27:                                               ; preds = %22, %15
  %28 = phi %"class.blink::Attribute"* [ %24, %22 ], [ %19, %15 ]
  %29 = phi i32 [ %26, %22 ], [ %21, %15 ]
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %28, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %60, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %38

38:                                               ; preds = %53, %33
  %39 = phi %"class.blink::Attribute"* [ %28, %33 ], [ %54, %53 ]
  %40 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, %35
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %45, %46
  br i1 %47, label %48, label %53

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, %51
  br i1 %52, label %56, label %53

53:                                               ; preds = %48, %43
  %54 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 1
  %55 = icmp eq %"class.blink::Attribute"* %54, %31
  br i1 %55, label %60, label %38

56:                                               ; preds = %48, %38
  %57 = icmp eq %"class.blink::Attribute"* %39, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 0, i32 1
  br label %62

60:                                               ; preds = %53, %56, %27, %5
  %61 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %62

62:                                               ; preds = %58, %60
  %63 = phi %"class.WTF::AtomicString"* [ %61, %60 ], [ %59, %58 ]
  %64 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %63, i64 0, i32 0
  %65 = tail call i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %64)
  %66 = icmp slt i64 %65, 1
  %67 = select i1 %66, i64 9223372036854775807, i64 %65
  store i64 %67, i64* %2, align 8
  br label %68

68:                                               ; preds = %1, %62
  %69 = phi i64 [ %67, %62 ], [ %3, %1 ]
  ret i64 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14SVGSMILElement9RepeatDurEv(%"class.blink::SVGSMILElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 23, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, -9223372036854775808
  br i1 %4, label %5, label %68

5:                                                ; preds = %1
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names14kRepeatDurAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %7, align 8
  %9 = icmp eq %"class.blink::ElementData"* %8, null
  br i1 %9, label %60, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::ElementData"* %8 to %"class.blink::UniqueElementData"*
  %17 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1, i32 1
  %18 = bitcast %"class.blink::Member.19"* %17 to %"class.blink::Attribute"**
  %19 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %16, i64 0, i32 2, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  br label %27

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1
  %24 = bitcast %"class.blink::ElementData"* %23 to %"class.blink::Attribute"*
  %25 = lshr i32 %12, 1
  %26 = and i32 %25, 268435455
  br label %27

27:                                               ; preds = %22, %15
  %28 = phi %"class.blink::Attribute"* [ %24, %22 ], [ %19, %15 ]
  %29 = phi i32 [ %26, %22 ], [ %21, %15 ]
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %28, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %60, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %38

38:                                               ; preds = %53, %33
  %39 = phi %"class.blink::Attribute"* [ %28, %33 ], [ %54, %53 ]
  %40 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, %35
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %45, %46
  br i1 %47, label %48, label %53

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, %51
  br i1 %52, label %56, label %53

53:                                               ; preds = %48, %43
  %54 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 1
  %55 = icmp eq %"class.blink::Attribute"* %54, %31
  br i1 %55, label %60, label %38

56:                                               ; preds = %48, %38
  %57 = icmp eq %"class.blink::Attribute"* %39, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 0, i32 1
  br label %62

60:                                               ; preds = %53, %56, %27, %5
  %61 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %62

62:                                               ; preds = %58, %60
  %63 = phi %"class.WTF::AtomicString"* [ %61, %60 ], [ %59, %58 ]
  %64 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %63, i64 0, i32 0
  %65 = tail call i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %64)
  %66 = icmp slt i64 %65, 1
  %67 = select i1 %66, i64 9223372036854775807, i64 %65
  store i64 %67, i64* %2, align 8
  br label %68

68:                                               ; preds = %1, %62
  %69 = phi i64 [ %67, %62 ], [ %3, %1 ]
  ret i64 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink14SVGSMILElement11RepeatCountEv(%"class.blink::SVGSMILElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 24, i32 0
  %6 = load double, double* %5, align 8
  %7 = fcmp une double %6, 0xFFF0000000000000
  br i1 %7, label %98, label %8

8:                                                ; preds = %1
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names16kRepeatCountAttrE, align 8
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %10, align 8
  %12 = icmp eq %"class.blink::ElementData"* %11, null
  br i1 %12, label %63, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %11, i64 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.blink::ElementData"* %11 to %"class.blink::UniqueElementData"*
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %11, i64 1, i32 1
  %21 = bitcast %"class.blink::Member.19"* %20 to %"class.blink::Attribute"**
  %22 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %19, i64 0, i32 2, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  br label %30

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %11, i64 1
  %27 = bitcast %"class.blink::ElementData"* %26 to %"class.blink::Attribute"*
  %28 = lshr i32 %15, 1
  %29 = and i32 %28, 268435455
  br label %30

30:                                               ; preds = %25, %18
  %31 = phi %"class.blink::Attribute"* [ %27, %25 ], [ %22, %18 ]
  %32 = phi i32 [ %29, %25 ], [ %24, %18 ]
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %31, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %63, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %9, i64 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %56, %36
  %42 = phi %"class.blink::Attribute"* [ %31, %36 ], [ %57, %56 ]
  %43 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %44, %38
  br i1 %45, label %59, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %53, %54
  br i1 %55, label %59, label %56

56:                                               ; preds = %51, %46
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %42, i64 1
  %58 = icmp eq %"class.blink::Attribute"* %57, %34
  br i1 %58, label %63, label %41

59:                                               ; preds = %51, %41
  %60 = icmp eq %"class.blink::Attribute"* %42, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %42, i64 0, i32 1
  br label %65

63:                                               ; preds = %56, %59, %30, %8
  %64 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %65

65:                                               ; preds = %61, %63
  %66 = phi %"class.WTF::AtomicString"* [ %64, %63 ], [ %62, %61 ]
  %67 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %96, label %70

70:                                               ; preds = %65
  %71 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #16
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %72, align 8
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 1
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %77 = bitcast i8** %76 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %77, align 8
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %74, i32* %78, align 8
  %79 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #16
  %80 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %81 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8** %82, align 8
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 10, i32* %83, align 8
  %84 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #16
  br i1 %84, label %96, label %85

85:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %66, i64 0, i32 0
  %87 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* %86, i8* nonnull %4) #16
  %88 = load i8, i8* %4, align 1, !range !26
  %89 = icmp ne i8 %88, 0
  %90 = fcmp ogt double %87, 0.000000e+00
  %91 = and i1 %90, %89
  %92 = call double @llvm.fabs.f64(double %87) #19
  %93 = fcmp one double %92, 0x7FF0000000000000
  %94 = and i1 %93, %91
  %95 = select i1 %94, double %87, double 0x7FF8000000000000
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  br label %96

96:                                               ; preds = %65, %70, %85
  %97 = phi double [ %95, %85 ], [ 0x7FF8000000000000, %65 ], [ 0x7FF0000000000000, %70 ]
  store double %97, double* %5, align 8
  br label %98

98:                                               ; preds = %96, %1
  %99 = phi double [ %97, %96 ], [ %6, %1 ]
  ret double %99
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14SVGSMILElement8MaxValueEv(%"class.blink::SVGSMILElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 26, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, -9223372036854775808
  br i1 %4, label %5, label %70

5:                                                ; preds = %1
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kMaxAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %7, align 8
  %9 = icmp eq %"class.blink::ElementData"* %8, null
  br i1 %9, label %60, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::ElementData"* %8 to %"class.blink::UniqueElementData"*
  %17 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1, i32 1
  %18 = bitcast %"class.blink::Member.19"* %17 to %"class.blink::Attribute"**
  %19 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %16, i64 0, i32 2, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  br label %27

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1
  %24 = bitcast %"class.blink::ElementData"* %23 to %"class.blink::Attribute"*
  %25 = lshr i32 %12, 1
  %26 = and i32 %25, 268435455
  br label %27

27:                                               ; preds = %22, %15
  %28 = phi %"class.blink::Attribute"* [ %24, %22 ], [ %19, %15 ]
  %29 = phi i32 [ %26, %22 ], [ %21, %15 ]
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %28, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %60, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %38

38:                                               ; preds = %53, %33
  %39 = phi %"class.blink::Attribute"* [ %28, %33 ], [ %54, %53 ]
  %40 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, %35
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %45, %46
  br i1 %47, label %48, label %53

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, %51
  br i1 %52, label %56, label %53

53:                                               ; preds = %48, %43
  %54 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 1
  %55 = icmp eq %"class.blink::Attribute"* %54, %31
  br i1 %55, label %60, label %38

56:                                               ; preds = %48, %38
  %57 = icmp eq %"class.blink::Attribute"* %39, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 0, i32 1
  br label %62

60:                                               ; preds = %53, %56, %27, %5
  %61 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %62

62:                                               ; preds = %58, %60
  %63 = phi %"class.WTF::AtomicString"* [ %61, %60 ], [ %59, %58 ]
  %64 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %63, i64 0, i32 0
  %65 = tail call i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %64)
  %66 = icmp eq i64 %65, 9223372036854775807
  %67 = icmp slt i64 %65, 1
  %68 = or i1 %66, %67
  %69 = select i1 %68, i64 9223372036854775806, i64 %65
  store i64 %69, i64* %2, align 8
  br label %70

70:                                               ; preds = %1, %62
  %71 = phi i64 [ %69, %62 ], [ %3, %1 ]
  ret i64 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14SVGSMILElement8MinValueEv(%"class.blink::SVGSMILElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 25, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, -9223372036854775808
  br i1 %4, label %5, label %70

5:                                                ; preds = %1
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kMinAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %7, align 8
  %9 = icmp eq %"class.blink::ElementData"* %8, null
  br i1 %9, label %60, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::ElementData"* %8 to %"class.blink::UniqueElementData"*
  %17 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1, i32 1
  %18 = bitcast %"class.blink::Member.19"* %17 to %"class.blink::Attribute"**
  %19 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %16, i64 0, i32 2, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  br label %27

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1
  %24 = bitcast %"class.blink::ElementData"* %23 to %"class.blink::Attribute"*
  %25 = lshr i32 %12, 1
  %26 = and i32 %25, 268435455
  br label %27

27:                                               ; preds = %22, %15
  %28 = phi %"class.blink::Attribute"* [ %24, %22 ], [ %19, %15 ]
  %29 = phi i32 [ %26, %22 ], [ %21, %15 ]
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %28, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %60, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %38

38:                                               ; preds = %53, %33
  %39 = phi %"class.blink::Attribute"* [ %28, %33 ], [ %54, %53 ]
  %40 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, %35
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %45, %46
  br i1 %47, label %48, label %53

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, %51
  br i1 %52, label %56, label %53

53:                                               ; preds = %48, %43
  %54 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 1
  %55 = icmp eq %"class.blink::Attribute"* %54, %31
  br i1 %55, label %60, label %38

56:                                               ; preds = %48, %38
  %57 = icmp eq %"class.blink::Attribute"* %39, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 0, i32 1
  br label %62

60:                                               ; preds = %53, %56, %27, %5
  %61 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %62

62:                                               ; preds = %58, %60
  %63 = phi %"class.WTF::AtomicString"* [ %61, %60 ], [ %59, %58 ]
  %64 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %63, i64 0, i32 0
  %65 = tail call i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %64)
  %66 = icmp eq i64 %65, 9223372036854775807
  %67 = icmp slt i64 %65, 0
  %68 = or i1 %66, %67
  %69 = select i1 %68, i64 0, i64 %65
  store i64 %69, i64* %2, align 8
  br label %70

70:                                               ; preds = %1, %62
  %71 = phi i64 [ %69, %62 ], [ %3, %1 ]
  ret i64 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14SVGSMILElement14SimpleDurationEv(%"class.blink::SVGSMILElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 22, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, -9223372036854775808
  br i1 %4, label %5, label %68

5:                                                ; preds = %1
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kDurAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %7, align 8
  %9 = icmp eq %"class.blink::ElementData"* %8, null
  br i1 %9, label %60, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::ElementData"* %8 to %"class.blink::UniqueElementData"*
  %17 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1, i32 1
  %18 = bitcast %"class.blink::Member.19"* %17 to %"class.blink::Attribute"**
  %19 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %16, i64 0, i32 2, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  br label %27

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1
  %24 = bitcast %"class.blink::ElementData"* %23 to %"class.blink::Attribute"*
  %25 = lshr i32 %12, 1
  %26 = and i32 %25, 268435455
  br label %27

27:                                               ; preds = %22, %15
  %28 = phi %"class.blink::Attribute"* [ %24, %22 ], [ %19, %15 ]
  %29 = phi i32 [ %26, %22 ], [ %21, %15 ]
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %28, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %60, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %38

38:                                               ; preds = %53, %33
  %39 = phi %"class.blink::Attribute"* [ %28, %33 ], [ %54, %53 ]
  %40 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, %35
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %45, %46
  br i1 %47, label %48, label %53

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, %51
  br i1 %52, label %56, label %53

53:                                               ; preds = %48, %43
  %54 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 1
  %55 = icmp eq %"class.blink::Attribute"* %54, %31
  br i1 %55, label %60, label %38

56:                                               ; preds = %48, %38
  %57 = icmp eq %"class.blink::Attribute"* %39, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 0, i32 1
  br label %62

60:                                               ; preds = %53, %56, %27, %5
  %61 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %62

62:                                               ; preds = %60, %58
  %63 = phi %"class.WTF::AtomicString"* [ %61, %60 ], [ %59, %58 ]
  %64 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %63, i64 0, i32 0
  %65 = tail call i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %64) #16
  %66 = icmp slt i64 %65, 1
  %67 = select i1 %66, i64 9223372036854775807, i64 %65
  store i64 %67, i64* %2, align 8
  br label %68

68:                                               ; preds = %1, %62
  %69 = phi i64 [ %67, %62 ], [ %3, %1 ]
  %70 = icmp eq i64 %69, 9223372036854775807
  %71 = select i1 %70, i64 9223372036854775806, i64 %69
  ret i64 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement15AddInstanceTimeENS0_10BeginOrEndENS_8SMILTimeENS_14SMILTimeOriginE(%"class.blink::SVGSMILElement"*, i32, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::SMILTimeWithOrigin", align 8
  %6 = icmp eq i32 %1, 0
  %7 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 12
  %9 = select i1 %6, %"class.blink::SMILInstanceTimeList"* %7, %"class.blink::SMILInstanceTimeList"* %8
  %10 = bitcast %"class.blink::SMILTimeWithOrigin"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false) #16
  store i64 %2, i64* %11, align 8
  store i32 %3, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %9, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %15, i64 %18
  %20 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %15 to i64
  %21 = icmp eq i32 %17, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %4, %22
  %23 = phi i64 [ %34, %22 ], [ %18, %4 ]
  %24 = phi %"class.blink::SMILTimeWithOrigin"* [ %33, %22 ], [ %15, %4 ]
  %25 = lshr i64 %23, 1
  %26 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %24, i64 %25
  %27 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp slt i64 %28, %2
  %30 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 1
  %31 = xor i64 %25, -1
  %32 = add i64 %23, %31
  %33 = select i1 %29, %"class.blink::SMILTimeWithOrigin"* %30, %"class.blink::SMILTimeWithOrigin"* %24
  %34 = select i1 %29, i64 %32, i64 %25
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %22

36:                                               ; preds = %22, %4
  %37 = phi %"class.blink::SMILTimeWithOrigin"* [ %15, %4 ], [ %33, %22 ]
  %38 = icmp eq %"class.blink::SMILTimeWithOrigin"* %37, %19
  br i1 %38, label %47, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %37, i64 0, i32 0, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, %2
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %37, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, %3
  br i1 %46, label %56, label %47

47:                                               ; preds = %43, %39, %36
  %48 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %37 to i64
  %49 = sub i64 %48, %20
  %50 = lshr exact i64 %49, 4
  %51 = trunc i64 %50 to i32
  call void @_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE6insertIRS2_EEvjOT_(%"class.WTF::Vector"* %13, i32 %51, %"class.blink::SMILTimeWithOrigin"* nonnull dereferenceable(16) %5) #16
  %52 = shl i32 1, %3
  %53 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %9, i64 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = or i32 %54, %52
  store i32 %55, i32* %53, align 8
  br label %56

56:                                               ; preds = %43, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  %57 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 28
  store i8 1, i8* %57, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement24AddInstanceTimeAndUpdateENS0_10BeginOrEndENS_8SMILTimeENS_14SMILTimeOriginE(%"class.blink::SVGSMILElement"*, i32, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::SMILTimeWithOrigin", align 8
  %6 = icmp eq i32 %1, 1
  br i1 %6, label %7, label %14

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %9 = load i8, i8* %8, align 8
  %10 = and i8 %9, 3
  %11 = icmp eq i8 %10, 0
  %12 = icmp eq i32 %3, 1
  %13 = and i1 %12, %11
  br i1 %13, label %67, label %14

14:                                               ; preds = %7, %4
  %15 = icmp eq i32 %1, 0
  %16 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11
  %17 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 12
  %18 = select i1 %15, %"class.blink::SMILInstanceTimeList"* %16, %"class.blink::SMILInstanceTimeList"* %17
  %19 = bitcast %"class.blink::SMILTimeWithOrigin"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #16
  %20 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false) #16
  store i64 %2, i64* %20, align 8
  store i32 %3, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %18, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %18, i64 0, i32 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %24, i64 %27
  %29 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %24 to i64
  %30 = icmp eq i32 %26, 0
  br i1 %30, label %45, label %31

31:                                               ; preds = %14, %31
  %32 = phi i64 [ %43, %31 ], [ %27, %14 ]
  %33 = phi %"class.blink::SMILTimeWithOrigin"* [ %42, %31 ], [ %24, %14 ]
  %34 = lshr i64 %32, 1
  %35 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %33, i64 %34
  %36 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp slt i64 %37, %2
  %39 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %35, i64 1
  %40 = xor i64 %34, -1
  %41 = add i64 %32, %40
  %42 = select i1 %38, %"class.blink::SMILTimeWithOrigin"* %39, %"class.blink::SMILTimeWithOrigin"* %33
  %43 = select i1 %38, i64 %41, i64 %34
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %31

45:                                               ; preds = %31, %14
  %46 = phi %"class.blink::SMILTimeWithOrigin"* [ %24, %14 ], [ %42, %31 ]
  %47 = icmp eq %"class.blink::SMILTimeWithOrigin"* %46, %28
  br i1 %47, label %56, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %46, i64 0, i32 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %2
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %46, i64 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, %3
  br i1 %55, label %65, label %56

56:                                               ; preds = %52, %48, %45
  %57 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %46 to i64
  %58 = sub i64 %57, %29
  %59 = lshr exact i64 %58, 4
  %60 = trunc i64 %59 to i32
  call void @_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE6insertIRS2_EEvjOT_(%"class.WTF::Vector"* %22, i32 %60, %"class.blink::SMILTimeWithOrigin"* nonnull dereferenceable(16) %5) #16
  %61 = shl i32 1, %3
  %62 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %18, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = or i32 %63, %61
  store i32 %64, i32* %62, align 8
  br label %65

65:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #16
  %66 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 28
  store i8 1, i8* %66, align 1
  call void @_ZN5blink14SVGSMILElement19InstanceListChangedEv(%"class.blink::SVGSMILElement"* %0)
  br label %67

67:                                               ; preds = %7, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14SVGSMILElement17RepeatingDurationEv(%"class.blink::SVGSMILElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca %"class.blink::SMILTime", align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = tail call double @_ZNK5blink14SVGSMILElement11RepeatCountEv(%"class.blink::SVGSMILElement"* %0)
  %7 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  store i64 -6148914691236517206, i64* %2, align 8
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 23, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, -9223372036854775808
  br i1 %10, label %11, label %74

11:                                               ; preds = %1
  %12 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names14kRepeatDurAttrE, align 8
  %13 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %13, align 8
  %15 = icmp eq %"class.blink::ElementData"* %14, null
  br i1 %15, label %66, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %14, i64 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::ElementData"* %14 to %"class.blink::UniqueElementData"*
  %23 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %14, i64 1, i32 1
  %24 = bitcast %"class.blink::Member.19"* %23 to %"class.blink::Attribute"**
  %25 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %22, i64 0, i32 2, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  br label %33

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %14, i64 1
  %30 = bitcast %"class.blink::ElementData"* %29 to %"class.blink::Attribute"*
  %31 = lshr i32 %18, 1
  %32 = and i32 %31, 268435455
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi %"class.blink::Attribute"* [ %30, %28 ], [ %25, %21 ]
  %35 = phi i32 [ %32, %28 ], [ %27, %21 ]
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %34, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %66, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %12, i64 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %44

44:                                               ; preds = %59, %39
  %45 = phi %"class.blink::Attribute"* [ %34, %39 ], [ %60, %59 ]
  %46 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %46, align 8
  %48 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %47, %41
  br i1 %48, label %62, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %51, %52
  br i1 %53, label %54, label %59

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 4, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %56, %57
  br i1 %58, label %62, label %59

59:                                               ; preds = %54, %49
  %60 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %45, i64 1
  %61 = icmp eq %"class.blink::Attribute"* %60, %37
  br i1 %61, label %66, label %44

62:                                               ; preds = %54, %44
  %63 = icmp eq %"class.blink::Attribute"* %45, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %45, i64 0, i32 1
  br label %68

66:                                               ; preds = %59, %62, %33, %11
  %67 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %68

68:                                               ; preds = %66, %64
  %69 = phi %"class.WTF::AtomicString"* [ %67, %66 ], [ %65, %64 ]
  %70 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %69, i64 0, i32 0
  %71 = tail call i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %70) #16
  %72 = icmp slt i64 %71, 1
  %73 = select i1 %72, i64 9223372036854775807, i64 %71
  store i64 %73, i64* %8, align 8
  br label %74

74:                                               ; preds = %1, %68
  %75 = phi i64 [ %73, %68 ], [ %9, %1 ]
  store i64 %75, i64* %2, align 8
  %76 = bitcast %"class.blink::SMILTime"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #16
  %77 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %3, i64 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %77, align 8
  %78 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 22, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, -9223372036854775808
  br i1 %80, label %81, label %144

81:                                               ; preds = %74
  %82 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kDurAttrE, align 8
  %83 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %84 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %83, align 8
  %85 = icmp eq %"class.blink::ElementData"* %84, null
  br i1 %85, label %136, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %84, i64 0, i32 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %86
  %92 = bitcast %"class.blink::ElementData"* %84 to %"class.blink::UniqueElementData"*
  %93 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %84, i64 1, i32 1
  %94 = bitcast %"class.blink::Member.19"* %93 to %"class.blink::Attribute"**
  %95 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %92, i64 0, i32 2, i32 0, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  br label %103

98:                                               ; preds = %86
  %99 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %84, i64 1
  %100 = bitcast %"class.blink::ElementData"* %99 to %"class.blink::Attribute"*
  %101 = lshr i32 %88, 1
  %102 = and i32 %101, 268435455
  br label %103

103:                                              ; preds = %98, %91
  %104 = phi %"class.blink::Attribute"* [ %100, %98 ], [ %95, %91 ]
  %105 = phi i32 [ %102, %98 ], [ %97, %91 ]
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %104, i64 %106
  %108 = icmp eq i32 %105, 0
  br i1 %108, label %136, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %82, i64 0, i32 0, i32 0
  %111 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 3, i32 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %114

114:                                              ; preds = %129, %109
  %115 = phi %"class.blink::Attribute"* [ %104, %109 ], [ %130, %129 ]
  %116 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %115, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %116, align 8
  %118 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %117, %111
  br i1 %118, label %132, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %117, i64 0, i32 3, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %121, %122
  br i1 %123, label %124, label %129

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %117, i64 0, i32 4, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %126, %127
  br i1 %128, label %132, label %129

129:                                              ; preds = %124, %119
  %130 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %115, i64 1
  %131 = icmp eq %"class.blink::Attribute"* %130, %107
  br i1 %131, label %136, label %114

132:                                              ; preds = %124, %114
  %133 = icmp eq %"class.blink::Attribute"* %115, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %115, i64 0, i32 1
  br label %138

136:                                              ; preds = %129, %132, %103, %81
  %137 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %138

138:                                              ; preds = %136, %134
  %139 = phi %"class.WTF::AtomicString"* [ %137, %136 ], [ %135, %134 ]
  %140 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %139, i64 0, i32 0
  %141 = tail call i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %140) #16
  %142 = icmp slt i64 %141, 1
  %143 = select i1 %142, i64 9223372036854775807, i64 %141
  store i64 %143, i64* %78, align 8
  br label %144

144:                                              ; preds = %74, %138
  %145 = phi i64 [ %143, %138 ], [ %79, %74 ]
  %146 = icmp eq i64 %145, 9223372036854775807
  %147 = select i1 %146, i64 9223372036854775806, i64 %145
  store i64 %147, i64* %77, align 8
  switch i64 %147, label %148 [
    i64 9223372036854775807, label %170
    i64 9223372036854775806, label %170
    i64 0, label %170
  ]

148:                                              ; preds = %144
  %149 = icmp eq i64 %75, 9223372036854775807
  %150 = fcmp uno double %6, 0.000000e+00
  %151 = and i1 %150, %149
  br i1 %151, label %170, label %152

152:                                              ; preds = %148
  %153 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153)
  store i64 9223372036854775806, i64* %4, align 8
  %154 = bitcast i64* %4 to %"class.blink::SMILTime"*
  %155 = bitcast i64* %2 to %"class.blink::SMILTime"*
  %156 = select i1 %149, %"class.blink::SMILTime"* %154, %"class.blink::SMILTime"* %155
  %157 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %156, i64 0, i32 0, i32 0
  %158 = load i64, i64* %157, align 8
  store i64 %158, i64* %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153)
  %159 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159)
  %160 = call i64 @_ZNK5blink8SMILTime6RepeatENS_15SMILRepeatCountE(%"class.blink::SMILTime"* nonnull %3, double %6) #16
  store i64 %160, i64* %5, align 8
  %161 = icmp eq i64 %160, 9223372036854775807
  br i1 %161, label %168, label %162

162:                                              ; preds = %152
  %163 = icmp slt i64 %160, %158
  %164 = bitcast i64* %5 to %"class.blink::SMILTime"*
  %165 = select i1 %163, %"class.blink::SMILTime"* %164, %"class.blink::SMILTime"* %155
  %166 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %165, i64 0, i32 0, i32 0
  %167 = load i64, i64* %166, align 8
  br label %168

168:                                              ; preds = %152, %162
  %169 = phi i64 [ %167, %162 ], [ %158, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159)
  br label %170

170:                                              ; preds = %148, %144, %144, %144, %168
  %171 = phi i64 [ %169, %168 ], [ %147, %144 ], [ %147, %144 ], [ %147, %144 ], [ %147, %148 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  ret i64 %171
}

declare i64 @_ZNK5blink8SMILTime6RepeatENS_15SMILRepeatCountE(%"class.blink::SMILTime"*, double) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14SVGSMILElement16ResolveActiveEndENS_8SMILTimeE(%"class.blink::SVGSMILElement"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.blink::SMILTime", align 8
  %5 = alloca i64, align 8
  %6 = bitcast %"class.blink::SMILTime"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %4, i64 0, i32 0, i32 0
  store i64 9223372036854775806, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  store i64 0, i64* %5, align 8
  br label %46

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %14, align 8
  %16 = zext i32 %9 to i64
  br label %17

17:                                               ; preds = %13, %17
  %18 = phi i64 [ %29, %17 ], [ %16, %13 ]
  %19 = phi %"class.blink::SMILTimeWithOrigin"* [ %28, %17 ], [ %15, %13 ]
  %20 = lshr i64 %18, 1
  %21 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %19, i64 %20
  %22 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp sle i64 %23, %1
  %25 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %18, %26
  %28 = select i1 %24, %"class.blink::SMILTimeWithOrigin"* %25, %"class.blink::SMILTimeWithOrigin"* %19
  %29 = select i1 %24, i64 %27, i64 %20
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %15, i64 %16
  %33 = icmp eq %"class.blink::SMILTimeWithOrigin"* %28, %32
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %28, i64 0, i32 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 9223372036854775807
  br i1 %37, label %38, label %42

38:                                               ; preds = %31, %34
  %39 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 6
  %40 = load i8, i8* %39, align 1, !range !26
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %391, label %44

42:                                               ; preds = %34
  store i64 %36, i64* %7, align 8
  %43 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  store i64 0, i64* %5, align 8
  br label %46

44:                                               ; preds = %38
  %45 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  store i64 0, i64* %5, align 8
  br label %46

46:                                               ; preds = %44, %42, %11
  %47 = phi i64 [ 9223372036854775806, %11 ], [ 9223372036854775806, %44 ], [ %36, %42 ]
  %48 = phi i8* [ %12, %11 ], [ %45, %44 ], [ %43, %42 ]
  %49 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 22, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, -9223372036854775808
  br i1 %51, label %52, label %115

52:                                               ; preds = %46
  %53 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kDurAttrE, align 8
  %54 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %54, align 8
  %56 = icmp eq %"class.blink::ElementData"* %55, null
  br i1 %56, label %107, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %55, i64 0, i32 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.blink::ElementData"* %55 to %"class.blink::UniqueElementData"*
  %64 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %55, i64 1, i32 1
  %65 = bitcast %"class.blink::Member.19"* %64 to %"class.blink::Attribute"**
  %66 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %63, i64 0, i32 2, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  br label %74

69:                                               ; preds = %57
  %70 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %55, i64 1
  %71 = bitcast %"class.blink::ElementData"* %70 to %"class.blink::Attribute"*
  %72 = lshr i32 %59, 1
  %73 = and i32 %72, 268435455
  br label %74

74:                                               ; preds = %69, %62
  %75 = phi %"class.blink::Attribute"* [ %71, %69 ], [ %66, %62 ]
  %76 = phi i32 [ %73, %69 ], [ %68, %62 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %75, i64 %77
  %79 = icmp eq i32 %76, 0
  br i1 %79, label %107, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %53, i64 0, i32 0, i32 0
  %82 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %82, i64 0, i32 3, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %82, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %85

85:                                               ; preds = %100, %80
  %86 = phi %"class.blink::Attribute"* [ %75, %80 ], [ %101, %100 ]
  %87 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %87, align 8
  %89 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %88, %82
  br i1 %89, label %103, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %92, %93
  br i1 %94, label %95, label %100

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 4, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %97, %98
  br i1 %99, label %103, label %100

100:                                              ; preds = %95, %90
  %101 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %86, i64 1
  %102 = icmp eq %"class.blink::Attribute"* %101, %78
  br i1 %102, label %107, label %85

103:                                              ; preds = %95, %85
  %104 = icmp eq %"class.blink::Attribute"* %86, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %103
  %106 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %86, i64 0, i32 1
  br label %109

107:                                              ; preds = %100, %103, %74, %52
  %108 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %109

109:                                              ; preds = %107, %105
  %110 = phi %"class.WTF::AtomicString"* [ %108, %107 ], [ %106, %105 ]
  %111 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %110, i64 0, i32 0
  %112 = tail call i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %111) #16
  %113 = icmp slt i64 %112, 1
  %114 = select i1 %113, i64 9223372036854775807, i64 %112
  store i64 %114, i64* %49, align 8
  br label %115

115:                                              ; preds = %46, %109
  %116 = phi i64 [ %114, %109 ], [ %50, %46 ]
  %117 = icmp eq i64 %116, 9223372036854775807
  br i1 %117, label %118, label %202

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 23, i32 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = icmp eq i64 %120, -9223372036854775808
  br i1 %121, label %122, label %185

122:                                              ; preds = %118
  %123 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names14kRepeatDurAttrE, align 8
  %124 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %125 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %124, align 8
  %126 = icmp eq %"class.blink::ElementData"* %125, null
  br i1 %126, label %177, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %125, i64 0, i32 0, i32 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %139, label %132

132:                                              ; preds = %127
  %133 = bitcast %"class.blink::ElementData"* %125 to %"class.blink::UniqueElementData"*
  %134 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %125, i64 1, i32 1
  %135 = bitcast %"class.blink::Member.19"* %134 to %"class.blink::Attribute"**
  %136 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %133, i64 0, i32 2, i32 0, i32 0, i32 2
  %138 = load i32, i32* %137, align 4
  br label %144

139:                                              ; preds = %127
  %140 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %125, i64 1
  %141 = bitcast %"class.blink::ElementData"* %140 to %"class.blink::Attribute"*
  %142 = lshr i32 %129, 1
  %143 = and i32 %142, 268435455
  br label %144

144:                                              ; preds = %139, %132
  %145 = phi %"class.blink::Attribute"* [ %141, %139 ], [ %136, %132 ]
  %146 = phi i32 [ %143, %139 ], [ %138, %132 ]
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %145, i64 %147
  %149 = icmp eq i32 %146, 0
  br i1 %149, label %177, label %150

150:                                              ; preds = %144
  %151 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %123, i64 0, i32 0, i32 0
  %152 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %152, i64 0, i32 3, i32 0, i32 0, i32 0
  %154 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %152, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %155

155:                                              ; preds = %170, %150
  %156 = phi %"class.blink::Attribute"* [ %145, %150 ], [ %171, %170 ]
  %157 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %156, i64 0, i32 0, i32 0, i32 0
  %158 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %157, align 8
  %159 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %158, %152
  br i1 %159, label %173, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %158, i64 0, i32 3, i32 0, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %162, %163
  br i1 %164, label %165, label %170

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %158, i64 0, i32 4, i32 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %167, %168
  br i1 %169, label %173, label %170

170:                                              ; preds = %165, %160
  %171 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %156, i64 1
  %172 = icmp eq %"class.blink::Attribute"* %171, %148
  br i1 %172, label %177, label %155

173:                                              ; preds = %165, %155
  %174 = icmp eq %"class.blink::Attribute"* %156, null
  br i1 %174, label %177, label %175

175:                                              ; preds = %173
  %176 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %156, i64 0, i32 1
  br label %179

177:                                              ; preds = %170, %173, %144, %122
  %178 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %179

179:                                              ; preds = %177, %175
  %180 = phi %"class.WTF::AtomicString"* [ %178, %177 ], [ %176, %175 ]
  %181 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %180, i64 0, i32 0
  %182 = tail call i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %181) #16
  %183 = icmp slt i64 %182, 1
  %184 = select i1 %183, i64 9223372036854775807, i64 %182
  store i64 %184, i64* %119, align 8
  br label %185

185:                                              ; preds = %118, %179
  %186 = phi i64 [ %184, %179 ], [ %120, %118 ]
  %187 = icmp eq i64 %186, 9223372036854775807
  br i1 %187, label %188, label %202

188:                                              ; preds = %185
  %189 = tail call double @_ZNK5blink14SVGSMILElement11RepeatCountEv(%"class.blink::SVGSMILElement"* %0)
  %190 = fcmp uno double %189, 0.000000e+00
  br i1 %190, label %191, label %202

191:                                              ; preds = %188
  %192 = icmp slt i64 %47, 9223372036854775806
  br i1 %192, label %193, label %200

193:                                              ; preds = %191
  %194 = icmp slt i64 %1, 9223372036854775806
  br i1 %194, label %195, label %200

195:                                              ; preds = %193
  %196 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %4, i64 0, i32 0
  %197 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %196, i64 %1) #16
  %198 = icmp slt i64 %197, 9223372036854775805
  %199 = select i1 %198, i64 %197, i64 9223372036854775805
  br label %200

200:                                              ; preds = %191, %193, %195
  %201 = phi i64 [ %199, %195 ], [ %47, %191 ], [ %1, %193 ]
  store i64 %201, i64* %5, align 8
  br label %217

202:                                              ; preds = %115, %185, %188
  %203 = icmp slt i64 %47, 9223372036854775806
  %204 = tail call i64 @_ZNK5blink14SVGSMILElement17RepeatingDurationEv(%"class.blink::SVGSMILElement"* %0)
  br i1 %203, label %206, label %205

205:                                              ; preds = %202
  store i64 %204, i64* %5, align 8
  br label %217

206:                                              ; preds = %202
  %207 = icmp slt i64 %1, 9223372036854775806
  br i1 %207, label %208, label %213

208:                                              ; preds = %206
  %209 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %4, i64 0, i32 0
  %210 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %209, i64 %1) #16
  %211 = icmp slt i64 %210, 9223372036854775805
  %212 = select i1 %211, i64 %210, i64 9223372036854775805
  br label %213

213:                                              ; preds = %206, %208
  %214 = phi i64 [ %212, %208 ], [ %1, %206 ]
  %215 = icmp slt i64 %214, %204
  %216 = select i1 %215, i64 %214, i64 %204
  store i64 %216, i64* %5, align 8
  br label %217

217:                                              ; preds = %205, %213, %200
  %218 = phi i64 [ %204, %205 ], [ %216, %213 ], [ %201, %200 ]
  %219 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 25, i32 0, i32 0
  %220 = load i64, i64* %219, align 8
  %221 = icmp eq i64 %220, -9223372036854775808
  br i1 %221, label %222, label %287

222:                                              ; preds = %217
  %223 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kMinAttrE, align 8
  %224 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %225 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %224, align 8
  %226 = icmp eq %"class.blink::ElementData"* %225, null
  br i1 %226, label %277, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %225, i64 0, i32 0, i32 0, i32 0
  %229 = load i32, i32* %228, align 4
  %230 = and i32 %229, 1
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %239, label %232

232:                                              ; preds = %227
  %233 = bitcast %"class.blink::ElementData"* %225 to %"class.blink::UniqueElementData"*
  %234 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %225, i64 1, i32 1
  %235 = bitcast %"class.blink::Member.19"* %234 to %"class.blink::Attribute"**
  %236 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %235, align 8
  %237 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %233, i64 0, i32 2, i32 0, i32 0, i32 2
  %238 = load i32, i32* %237, align 4
  br label %244

239:                                              ; preds = %227
  %240 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %225, i64 1
  %241 = bitcast %"class.blink::ElementData"* %240 to %"class.blink::Attribute"*
  %242 = lshr i32 %229, 1
  %243 = and i32 %242, 268435455
  br label %244

244:                                              ; preds = %239, %232
  %245 = phi %"class.blink::Attribute"* [ %241, %239 ], [ %236, %232 ]
  %246 = phi i32 [ %243, %239 ], [ %238, %232 ]
  %247 = zext i32 %246 to i64
  %248 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %245, i64 %247
  %249 = icmp eq i32 %246, 0
  br i1 %249, label %277, label %250

250:                                              ; preds = %244
  %251 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %223, i64 0, i32 0, i32 0
  %252 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %251, align 8
  %253 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %252, i64 0, i32 3, i32 0, i32 0, i32 0
  %254 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %252, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %255

255:                                              ; preds = %270, %250
  %256 = phi %"class.blink::Attribute"* [ %245, %250 ], [ %271, %270 ]
  %257 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %256, i64 0, i32 0, i32 0, i32 0
  %258 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %257, align 8
  %259 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %258, %252
  br i1 %259, label %273, label %260

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %258, i64 0, i32 3, i32 0, i32 0, i32 0
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  %264 = icmp eq %"class.WTF::StringImpl"* %262, %263
  br i1 %264, label %265, label %270

265:                                              ; preds = %260
  %266 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %258, i64 0, i32 4, i32 0, i32 0, i32 0
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %266, align 8
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %267, %268
  br i1 %269, label %273, label %270

270:                                              ; preds = %265, %260
  %271 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %256, i64 1
  %272 = icmp eq %"class.blink::Attribute"* %271, %248
  br i1 %272, label %277, label %255

273:                                              ; preds = %265, %255
  %274 = icmp eq %"class.blink::Attribute"* %256, null
  br i1 %274, label %277, label %275

275:                                              ; preds = %273
  %276 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %256, i64 0, i32 1
  br label %279

277:                                              ; preds = %270, %273, %244, %222
  %278 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %279

279:                                              ; preds = %277, %275
  %280 = phi %"class.WTF::AtomicString"* [ %278, %277 ], [ %276, %275 ]
  %281 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %280, i64 0, i32 0
  %282 = call i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %281) #16
  %283 = icmp eq i64 %282, 9223372036854775807
  %284 = icmp slt i64 %282, 0
  %285 = or i1 %283, %284
  %286 = select i1 %285, i64 0, i64 %282
  store i64 %286, i64* %219, align 8
  br label %287

287:                                              ; preds = %217, %279
  %288 = phi i64 [ %286, %279 ], [ %220, %217 ]
  %289 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 26, i32 0, i32 0
  %290 = load i64, i64* %289, align 8
  %291 = icmp eq i64 %290, -9223372036854775808
  br i1 %291, label %292, label %357

292:                                              ; preds = %287
  %293 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kMaxAttrE, align 8
  %294 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %295 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %294, align 8
  %296 = icmp eq %"class.blink::ElementData"* %295, null
  br i1 %296, label %347, label %297

297:                                              ; preds = %292
  %298 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %295, i64 0, i32 0, i32 0, i32 0
  %299 = load i32, i32* %298, align 4
  %300 = and i32 %299, 1
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %309, label %302

302:                                              ; preds = %297
  %303 = bitcast %"class.blink::ElementData"* %295 to %"class.blink::UniqueElementData"*
  %304 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %295, i64 1, i32 1
  %305 = bitcast %"class.blink::Member.19"* %304 to %"class.blink::Attribute"**
  %306 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %305, align 8
  %307 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %303, i64 0, i32 2, i32 0, i32 0, i32 2
  %308 = load i32, i32* %307, align 4
  br label %314

309:                                              ; preds = %297
  %310 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %295, i64 1
  %311 = bitcast %"class.blink::ElementData"* %310 to %"class.blink::Attribute"*
  %312 = lshr i32 %299, 1
  %313 = and i32 %312, 268435455
  br label %314

314:                                              ; preds = %309, %302
  %315 = phi %"class.blink::Attribute"* [ %311, %309 ], [ %306, %302 ]
  %316 = phi i32 [ %313, %309 ], [ %308, %302 ]
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %315, i64 %317
  %319 = icmp eq i32 %316, 0
  br i1 %319, label %347, label %320

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %293, i64 0, i32 0, i32 0
  %322 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %321, align 8
  %323 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %322, i64 0, i32 3, i32 0, i32 0, i32 0
  %324 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %322, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %325

325:                                              ; preds = %340, %320
  %326 = phi %"class.blink::Attribute"* [ %315, %320 ], [ %341, %340 ]
  %327 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %326, i64 0, i32 0, i32 0, i32 0
  %328 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %327, align 8
  %329 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %328, %322
  br i1 %329, label %343, label %330

330:                                              ; preds = %325
  %331 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %328, i64 0, i32 3, i32 0, i32 0, i32 0
  %332 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %331, align 8
  %333 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %323, align 8
  %334 = icmp eq %"class.WTF::StringImpl"* %332, %333
  br i1 %334, label %335, label %340

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %328, i64 0, i32 4, i32 0, i32 0, i32 0
  %337 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %336, align 8
  %338 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  %339 = icmp eq %"class.WTF::StringImpl"* %337, %338
  br i1 %339, label %343, label %340

340:                                              ; preds = %335, %330
  %341 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %326, i64 1
  %342 = icmp eq %"class.blink::Attribute"* %341, %318
  br i1 %342, label %347, label %325

343:                                              ; preds = %335, %325
  %344 = icmp eq %"class.blink::Attribute"* %326, null
  br i1 %344, label %347, label %345

345:                                              ; preds = %343
  %346 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %326, i64 0, i32 1
  br label %349

347:                                              ; preds = %340, %343, %314, %292
  %348 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %349

349:                                              ; preds = %347, %345
  %350 = phi %"class.WTF::AtomicString"* [ %348, %347 ], [ %346, %345 ]
  %351 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %350, i64 0, i32 0
  %352 = call i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %351) #16
  %353 = icmp eq i64 %352, 9223372036854775807
  %354 = icmp slt i64 %352, 1
  %355 = or i1 %353, %354
  %356 = select i1 %355, i64 9223372036854775806, i64 %352
  store i64 %356, i64* %289, align 8
  br label %357

357:                                              ; preds = %287, %349
  %358 = phi i64 [ %356, %349 ], [ %290, %287 ]
  %359 = icmp sgt i64 %288, %358
  %360 = select i1 %359, i64 9223372036854775806, i64 %358
  %361 = select i1 %359, i64 0, i64 %288
  %362 = icmp slt i64 %361, %218
  %363 = select i1 %362, i64 %218, i64 %361
  %364 = icmp slt i64 %363, %360
  %365 = select i1 %364, i64 %363, i64 %360
  %366 = icmp slt i64 %1, 9223372036854775806
  br i1 %366, label %367, label %389

367:                                              ; preds = %357
  %368 = icmp slt i64 %365, 9223372036854775806
  br i1 %368, label %369, label %389

369:                                              ; preds = %367
  %370 = add i64 %365, -9223372036854775807
  %371 = icmp ult i64 %370, 2
  br i1 %371, label %372, label %380

372:                                              ; preds = %369
  %373 = add i64 %1, -9223372036854775807
  %374 = icmp ugt i64 %373, 1
  %375 = icmp eq i64 %365, %1
  %376 = or i1 %374, %375
  br i1 %376, label %389, label %377

377:                                              ; preds = %372
  %378 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %378) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i64 0, i64 0)) #16
  %379 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %378) #16
  br label %389

380:                                              ; preds = %369
  %381 = icmp slt i64 %365, 0
  %382 = select i1 %381, i64 -9223372036854775808, i64 9223372036854775807
  %383 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1, i64 %365) #16
  %384 = extractvalue { i64, i1 } %383, 1
  %385 = extractvalue { i64, i1 } %383, 0
  %386 = select i1 %384, i64 %382, i64 %385, !prof !2
  %387 = icmp slt i64 %386, 9223372036854775805
  %388 = select i1 %387, i64 %386, i64 9223372036854775805
  br label %389

389:                                              ; preds = %357, %367, %372, %377, %380
  %390 = phi i64 [ %388, %380 ], [ %1, %357 ], [ %365, %367 ], [ -9223372036854775808, %372 ], [ -9223372036854775808, %377 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48)
  br label %391

391:                                              ; preds = %38, %389
  %392 = phi i64 [ %390, %389 ], [ 9223372036854775807, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  ret i64 %392
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink14SVGSMILElement15ResolveIntervalENS_8SMILTimeES1_(%"class.blink::SVGSMILElement"* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = shl i32 %8, 2
  %10 = icmp ugt i32 %9, 1000000
  %11 = select i1 %10, i32 %9, i32 1000000
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %13, align 8
  %15 = icmp eq i32 %8, 0
  br i1 %15, label %82, label %16

16:                                               ; preds = %3
  %17 = zext i32 %8 to i64
  %18 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %14, i64 %17
  %19 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  %22 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %23 = bitcast %"class.logging::CheckError"* %6 to i8*
  br label %24

24:                                               ; preds = %16, %72
  %25 = phi %"class.blink::SMILTimeWithOrigin"* [ %18, %16 ], [ %77, %72 ]
  %26 = phi i64 [ 0, %16 ], [ %62, %72 ]
  %27 = phi %"class.blink::SMILTimeWithOrigin"* [ %14, %16 ], [ %73, %72 ]
  %28 = phi i64 [ %1, %16 ], [ %57, %72 ]
  %29 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %25 to i64
  %30 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %27 to i64
  %31 = sub i64 %29, %30
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %49, label %33

33:                                               ; preds = %24
  %34 = ashr exact i64 %31, 4
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ %34, %33 ], [ %47, %35 ]
  %37 = phi %"class.blink::SMILTimeWithOrigin"* [ %27, %33 ], [ %46, %35 ]
  %38 = lshr i64 %36, 1
  %39 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %37, i64 %38
  %40 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp slt i64 %41, %28
  %43 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %39, i64 1
  %44 = xor i64 %38, -1
  %45 = add i64 %36, %44
  %46 = select i1 %42, %"class.blink::SMILTimeWithOrigin"* %43, %"class.blink::SMILTimeWithOrigin"* %37
  %47 = select i1 %42, i64 %45, i64 %38
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %35

49:                                               ; preds = %35, %24
  %50 = phi %"class.blink::SMILTimeWithOrigin"* [ %27, %24 ], [ %46, %35 ]
  %51 = icmp eq %"class.blink::SMILTimeWithOrigin"* %50, %25
  br i1 %51, label %82, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %50, i64 0, i32 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 9223372036854775806
  br i1 %55, label %82, label %56

56:                                               ; preds = %52
  %57 = call i64 @_ZNK5blink14SVGSMILElement16ResolveActiveEndENS_8SMILTimeE(%"class.blink::SVGSMILElement"* %0, i64 %54)
  %58 = icmp eq i64 %57, 9223372036854775807
  br i1 %58, label %82, label %59

59:                                               ; preds = %56
  %60 = icmp sgt i64 %57, %2
  br i1 %60, label %79, label %61

61:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %62 = add i64 %26, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %63 = icmp ult i64 %26, %12
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %20, align 8
  br label %72

65:                                               ; preds = %61
  %66 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %26) #16
  %67 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %12) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0), i8* %66, i8* %67) #16
  %68 = load i8*, i8** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %68, i8** %20, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.11, i64 0, i64 0), i32 812, %"class.logging::CheckOpResult"* nonnull %5) #16
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #16
  br label %72

72:                                               ; preds = %64, %65, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #16
  %73 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %50, i64 1
  %74 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %13, align 8
  %75 = load i32, i32* %7, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %74, i64 %76
  %78 = icmp eq %"class.blink::SMILTimeWithOrigin"* %73, %77
  br i1 %78, label %82, label %24

79:                                               ; preds = %59
  %80 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %50, i64 0, i32 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  br label %82

82:                                               ; preds = %72, %56, %49, %52, %3, %79
  %83 = phi i64 [ %81, %79 ], [ 9223372036854775807, %3 ], [ 9223372036854775807, %52 ], [ 9223372036854775807, %49 ], [ 9223372036854775807, %56 ], [ 9223372036854775807, %72 ]
  %84 = phi i64 [ %57, %79 ], [ 9223372036854775807, %3 ], [ 9223372036854775807, %52 ], [ 9223372036854775807, %49 ], [ 9223372036854775807, %56 ], [ 9223372036854775807, %72 ]
  %85 = insertvalue { i64, i64 } undef, i64 %83, 0
  %86 = insertvalue { i64, i64 } %85, i64 %84, 1
  ret { i64, i64 } %86
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement14SetNewIntervalERKNS_12SMILIntervalE(%"class.blink::SVGSMILElement"*, %"struct.blink::SMILInterval"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::SVGSMILElement::NotifyDependentsInfo", align 8
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13
  %5 = bitcast %"struct.blink::SMILInterval"* %4 to i8*
  %6 = bitcast %"struct.blink::SMILInterval"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false)
  %7 = bitcast %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 0
  store i32 2, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 1
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 2, i32 0, i32 0
  %11 = bitcast %"struct.blink::SMILInterval"* %4 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 8
  %13 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %13, align 8
  call void @_ZN5blink14SVGSMILElement16NotifyDependentsERKNS0_20NotifyDependentsInfoE(%"class.blink::SVGSMILElement"* %0, %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* nonnull dereferenceable(24) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement29NotifyDependentsOnNewIntervalERKNS_12SMILIntervalE(%"class.blink::SVGSMILElement"*, %"struct.blink::SMILInterval"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::SVGSMILElement::NotifyDependentsInfo", align 8
  %4 = bitcast %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 0
  store i32 2, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 2, i32 0, i32 0
  %8 = bitcast %"struct.blink::SMILInterval"* %1 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = bitcast i64* %7 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %10, align 8
  call void @_ZN5blink14SVGSMILElement16NotifyDependentsERKNS0_20NotifyDependentsInfoE(%"class.blink::SVGSMILElement"* %0, %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement17SetNewIntervalEndENS_8SMILTimeE(%"class.blink::SVGSMILElement"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::SVGSMILElement::NotifyDependentsInfo", align 8
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = bitcast %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 0
  store i32 2, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 1
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 3, i32 0, i32 0
  store i64 %1, i64* %11, align 8
  call void @_ZN5blink14SVGSMILElement16NotifyDependentsERKNS0_20NotifyDependentsInfoE(%"class.blink::SVGSMILElement"* %0, %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* nonnull dereferenceable(24) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14SVGSMILElement23ComputeNextIntervalTimeENS_8SMILTimeENS0_14IncludeRepeatsE(%"class.blink::SVGSMILElement"* nocapture, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.blink::SMILTime", align 8
  %6 = alloca %"class.blink::SMILTime", align 8
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp sgt i64 %9, %1
  br i1 %10, label %160, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp sgt i64 %13, %1
  br i1 %14, label %15, label %160

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 22, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, -9223372036854775808
  br i1 %18, label %19, label %82

19:                                               ; preds = %15
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kDurAttrE, align 8
  %21 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %21, align 8
  %23 = icmp eq %"class.blink::ElementData"* %22, null
  br i1 %23, label %74, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %22, i64 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::ElementData"* %22 to %"class.blink::UniqueElementData"*
  %31 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %22, i64 1, i32 1
  %32 = bitcast %"class.blink::Member.19"* %31 to %"class.blink::Attribute"**
  %33 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %30, i64 0, i32 2, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  br label %41

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %22, i64 1
  %38 = bitcast %"class.blink::ElementData"* %37 to %"class.blink::Attribute"*
  %39 = lshr i32 %26, 1
  %40 = and i32 %39, 268435455
  br label %41

41:                                               ; preds = %36, %29
  %42 = phi %"class.blink::Attribute"* [ %38, %36 ], [ %33, %29 ]
  %43 = phi i32 [ %40, %36 ], [ %35, %29 ]
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %42, i64 %44
  %46 = icmp eq i32 %43, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %52

52:                                               ; preds = %67, %47
  %53 = phi %"class.blink::Attribute"* [ %42, %47 ], [ %68, %67 ]
  %54 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8
  %56 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %55, %49
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %59, %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 4, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %70, label %67

67:                                               ; preds = %62, %57
  %68 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %53, i64 1
  %69 = icmp eq %"class.blink::Attribute"* %68, %45
  br i1 %69, label %74, label %52

70:                                               ; preds = %62, %52
  %71 = icmp eq %"class.blink::Attribute"* %53, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %53, i64 0, i32 1
  br label %76

74:                                               ; preds = %67, %70, %41, %19
  %75 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %76

76:                                               ; preds = %74, %72
  %77 = phi %"class.WTF::AtomicString"* [ %75, %74 ], [ %73, %72 ]
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %77, i64 0, i32 0
  %79 = tail call i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %78) #16
  %80 = icmp slt i64 %79, 1
  %81 = select i1 %80, i64 9223372036854775807, i64 %79
  store i64 %81, i64* %16, align 8
  br label %82

82:                                               ; preds = %15, %76
  %83 = phi i64 [ %81, %76 ], [ %17, %15 ]
  %84 = icmp eq i64 %83, 9223372036854775807
  %85 = select i1 %84, i64 9223372036854775806, i64 %83
  %86 = icmp eq i32 %2, 0
  br i1 %86, label %87, label %158

87:                                               ; preds = %82
  switch i64 %85, label %88 [
    i64 9223372036854775807, label %158
    i64 9223372036854775806, label %158
    i64 0, label %158
  ]

88:                                               ; preds = %87
  %89 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89)
  store i64 -6148914691236517206, i64* %7, align 8
  %90 = load i64, i64* %8, align 8
  %91 = bitcast %"class.blink::SMILTime"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91)
  %92 = bitcast %"class.blink::SMILTime"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %5, i64 0, i32 0, i32 0
  store i64 %85, i64* %93, align 8
  %94 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %6, i64 0, i32 0, i32 0
  store i64 %1, i64* %94, align 8
  %95 = icmp slt i64 %1, 9223372036854775806
  br i1 %95, label %96, label %104

96:                                               ; preds = %88
  %97 = icmp slt i64 %90, 9223372036854775806
  br i1 %97, label %98, label %104

98:                                               ; preds = %96
  %99 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %6, i64 0, i32 0
  %100 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %99, i64 %90) #16
  %101 = icmp slt i64 %100, 9223372036854775805
  %102 = select i1 %101, i64 %100, i64 9223372036854775805
  %103 = load i64, i64* %93, align 8
  br label %104

104:                                              ; preds = %98, %96, %88
  %105 = phi i64 [ %85, %88 ], [ %85, %96 ], [ %103, %98 ]
  %106 = phi i64 [ %1, %88 ], [ %90, %96 ], [ %102, %98 ]
  %107 = add i64 %106, -9223372036854775807
  %108 = icmp ult i64 %107, 2
  br i1 %108, label %112, label %109

109:                                              ; preds = %104
  switch i64 %105, label %110 [
    i64 -9223372036854775808, label %112
    i64 9223372036854775807, label %112
    i64 0, label %112
  ]

110:                                              ; preds = %109
  %111 = srem i64 %106, %105
  br label %112

112:                                              ; preds = %110, %109, %109, %109, %104
  %113 = phi i64 [ %111, %110 ], [ %106, %109 ], [ %106, %104 ], [ %106, %109 ], [ %106, %109 ]
  %114 = icmp slt i64 %105, 9223372036854775806
  br i1 %114, label %115, label %122

115:                                              ; preds = %112
  %116 = icmp slt i64 %113, 9223372036854775806
  br i1 %116, label %117, label %122

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %5, i64 0, i32 0
  %119 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %118, i64 %113) #16
  %120 = icmp slt i64 %119, 9223372036854775805
  %121 = select i1 %120, i64 %119, i64 9223372036854775805
  br label %122

122:                                              ; preds = %117, %115, %112
  %123 = phi i64 [ %121, %117 ], [ %105, %112 ], [ %113, %115 ]
  %124 = load i64, i64* %94, align 8
  %125 = icmp slt i64 %124, 9223372036854775806
  br i1 %125, label %126, label %148

126:                                              ; preds = %122
  %127 = icmp slt i64 %123, 9223372036854775806
  br i1 %127, label %128, label %148

128:                                              ; preds = %126
  %129 = add i64 %123, -9223372036854775807
  %130 = icmp ult i64 %129, 2
  br i1 %130, label %131, label %139

131:                                              ; preds = %128
  %132 = add i64 %124, -9223372036854775807
  %133 = icmp ugt i64 %132, 1
  %134 = icmp eq i64 %124, %123
  %135 = or i1 %134, %133
  br i1 %135, label %148, label %136

136:                                              ; preds = %131
  %137 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i64 0, i64 0)) #16
  %138 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #16
  br label %148

139:                                              ; preds = %128
  %140 = icmp slt i64 %123, 0
  %141 = select i1 %140, i64 -9223372036854775808, i64 9223372036854775807
  %142 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %124, i64 %123) #16
  %143 = extractvalue { i64, i1 } %142, 1
  %144 = extractvalue { i64, i1 } %142, 0
  %145 = select i1 %143, i64 %141, i64 %144, !prof !2
  %146 = icmp slt i64 %145, 9223372036854775805
  %147 = select i1 %146, i64 %145, i64 9223372036854775805
  br label %148

148:                                              ; preds = %122, %126, %131, %136, %139
  %149 = phi i64 [ %147, %139 ], [ %124, %122 ], [ %123, %126 ], [ -9223372036854775808, %131 ], [ -9223372036854775808, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i64 %149, i64* %7, align 8
  %150 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1
  %151 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %150, i64 0, i32 0, i32 0
  %152 = load i64, i64* %151, align 8
  %153 = icmp slt i64 %152, %149
  %154 = bitcast i64* %7 to %"class.blink::SMILTime"*
  %155 = select i1 %153, %"class.blink::SMILTime"* %150, %"class.blink::SMILTime"* %154
  %156 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %155, i64 0, i32 0, i32 0
  %157 = load i64, i64* %156, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  br label %160

158:                                              ; preds = %87, %87, %87, %82
  %159 = load i64, i64* %12, align 8
  br label %160

160:                                              ; preds = %3, %148, %158, %11
  %161 = phi i64 [ %157, %148 ], [ %159, %158 ], [ 9223372036854775807, %11 ], [ %9, %3 ]
  %162 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %163 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %163, i64 %166
  %168 = icmp eq i32 %165, 0
  br i1 %168, label %183, label %169

169:                                              ; preds = %160, %169
  %170 = phi i64 [ %181, %169 ], [ %166, %160 ]
  %171 = phi %"class.blink::SMILTimeWithOrigin"* [ %180, %169 ], [ %163, %160 ]
  %172 = lshr i64 %170, 1
  %173 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %171, i64 %172
  %174 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %173, i64 0, i32 0, i32 0, i32 0
  %175 = load i64, i64* %174, align 8
  %176 = icmp sle i64 %175, %1
  %177 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %173, i64 1
  %178 = xor i64 %172, -1
  %179 = add i64 %170, %178
  %180 = select i1 %176, %"class.blink::SMILTimeWithOrigin"* %177, %"class.blink::SMILTimeWithOrigin"* %171
  %181 = select i1 %176, i64 %179, i64 %172
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %169

183:                                              ; preds = %169, %160
  %184 = phi %"class.blink::SMILTimeWithOrigin"* [ %163, %160 ], [ %180, %169 ]
  %185 = icmp eq %"class.blink::SMILTimeWithOrigin"* %184, %167
  br i1 %185, label %193, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %184, i64 0, i32 0, i32 0, i32 0
  %188 = load i64, i64* %187, align 8
  %189 = icmp slt i64 %188, 9223372036854775806
  br i1 %189, label %190, label %193

190:                                              ; preds = %186
  %191 = icmp slt i64 %188, %161
  %192 = select i1 %191, i64 %188, i64 %161
  br label %193

193:                                              ; preds = %183, %190, %186
  %194 = phi i64 [ %192, %190 ], [ %161, %186 ], [ %161, %183 ]
  ret i64 %194
}

declare i64 @_ZNK5blink17SMILTimeContainer28LatestUpdatePresentationTimeEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement14UpdateIntervalENS_8SMILTimeE(%"class.blink::SVGSMILElement"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::SVGSMILElement::NotifyDependentsInfo", align 8
  %4 = alloca %"struct.blink::SVGSMILElement::NotifyDependentsInfo", align 8
  %5 = alloca %"struct.blink::SVGSMILElement::NotifyDependentsInfo", align 8
  %6 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 28
  %7 = load i8, i8* %6, align 1, !range !26
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %41, label %9

9:                                                ; preds = %2
  store i8 0, i8* %6, align 1
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp slt i64 %11, 9223372036854775806
  br i1 %12, label %13, label %41

13:                                               ; preds = %9
  %14 = icmp sgt i64 %11, %1
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  %16 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %16, align 8
  br label %41

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp sgt i64 %19, %1
  br i1 %20, label %21, label %41

21:                                               ; preds = %17
  %22 = tail call i64 @_ZNK5blink14SVGSMILElement16ResolveActiveEndENS_8SMILTimeE(%"class.blink::SVGSMILElement"* %0, i64 %11) #16
  %23 = icmp eq i64 %22, 9223372036854775807
  br i1 %23, label %24, label %31

24:                                               ; preds = %21
  %25 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %25, align 8
  %26 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %27, 9223372036854775806
  br i1 %28, label %41, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 7
  store i8 1, i8* %30, align 2
  br label %41

31:                                               ; preds = %21
  %32 = load i64, i64* %18, align 8
  %33 = icmp eq i64 %22, %32
  br i1 %33, label %41, label %34

34:                                               ; preds = %31
  store i64 %22, i64* %18, align 8
  %35 = bitcast %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #16
  %36 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 0
  store i32 2, i32* %36, align 8
  %37 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 1
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 2, i32 0, i32 0
  %39 = load i64, i64* %10, align 8
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 3, i32 0, i32 0
  store i64 %22, i64* %40, align 8
  call void @_ZN5blink14SVGSMILElement16NotifyDependentsERKNS0_20NotifyDependentsInfoE(%"class.blink::SVGSMILElement"* %0, %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* nonnull dereferenceable(24) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #16
  br label %41

41:                                               ; preds = %31, %34, %29, %24, %17, %15, %9, %2
  %42 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %43 = load i8, i8* %42, align 8
  %44 = lshr i8 %43, 2
  %45 = and i8 %44, 3
  %46 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 7
  %47 = load i8, i8* %46, align 2, !range !26
  %48 = icmp eq i8 %47, 0
  %49 = icmp eq i8 %45, 2
  %50 = and i1 %48, %49
  br i1 %50, label %145, label %51

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp slt i64 %53, 9223372036854775806
  br i1 %54, label %55, label %100

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp sgt i64 %57, %1
  br i1 %58, label %59, label %100

59:                                               ; preds = %55
  %60 = icmp eq i8 %45, 0
  br i1 %60, label %61, label %145

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %63, i64 %66
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %83, label %69

69:                                               ; preds = %61, %69
  %70 = phi i64 [ %81, %69 ], [ %66, %61 ]
  %71 = phi %"class.blink::SMILTimeWithOrigin"* [ %80, %69 ], [ %63, %61 ]
  %72 = lshr i64 %70, 1
  %73 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %71, i64 %72
  %74 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp sle i64 %75, %53
  %77 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %73, i64 1
  %78 = xor i64 %72, -1
  %79 = add i64 %70, %78
  %80 = select i1 %76, %"class.blink::SMILTimeWithOrigin"* %77, %"class.blink::SMILTimeWithOrigin"* %71
  %81 = select i1 %76, i64 %79, i64 %72
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %69

83:                                               ; preds = %69, %61
  %84 = phi %"class.blink::SMILTimeWithOrigin"* [ %63, %61 ], [ %80, %69 ]
  %85 = icmp eq %"class.blink::SMILTimeWithOrigin"* %84, %67
  br i1 %85, label %145, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %84, i64 0, i32 0, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = icmp sgt i64 %57, %88
  br i1 %89, label %90, label %145

90:                                               ; preds = %86
  store i64 %88, i64* %56, align 8
  %91 = bitcast %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #16
  %92 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 0
  store i32 2, i32* %92, align 8
  %93 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 1
  store i32 0, i32* %93, align 4
  %94 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 2, i32 0, i32 0
  store i64 %53, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 3, i32 0, i32 0
  store i64 %88, i64* %95, align 8
  call void @_ZN5blink14SVGSMILElement16NotifyDependentsERKNS0_20NotifyDependentsInfoE(%"class.blink::SVGSMILElement"* %0, %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* nonnull dereferenceable(24) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #16
  %96 = load i64, i64* %56, align 8
  %97 = icmp sgt i64 %96, %1
  br i1 %97, label %145, label %98

98:                                               ; preds = %90
  %99 = load i8, i8* %46, align 2, !range !26
  br label %100

100:                                              ; preds = %98, %55, %51
  %101 = phi i8 [ %99, %98 ], [ %47, %55 ], [ %47, %51 ]
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %116

103:                                              ; preds = %100
  %104 = load i64, i64* %52, align 8
  %105 = icmp slt i64 %104, 9223372036854775806
  br i1 %105, label %106, label %109

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %108 = load i64, i64* %107, align 8
  br label %116

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = icmp slt i64 %111, 9223372036854775806
  br i1 %112, label %113, label %116

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14, i32 1, i32 0, i32 0
  %115 = load i64, i64* %114, align 8
  br label %116

116:                                              ; preds = %100, %106, %109, %113
  %117 = phi i64 [ %108, %106 ], [ %115, %113 ], [ -9223372036854775808, %100 ], [ -9223372036854775808, %109 ]
  %118 = call { i64, i64 } @_ZNK5blink14SVGSMILElement15ResolveIntervalENS_8SMILTimeES1_(%"class.blink::SVGSMILElement"* %0, i64 %117, i64 %1)
  %119 = extractvalue { i64, i64 } %118, 0
  %120 = extractvalue { i64, i64 } %118, 1
  %121 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13
  %122 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %119, %123
  br i1 %124, label %125, label %129

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %120, %127
  br i1 %128, label %145, label %129

129:                                              ; preds = %116, %125
  %130 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 27
  store i8 1, i8* %130, align 8
  %131 = icmp slt i64 %123, 9223372036854775806
  br i1 %131, label %132, label %136

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14
  %134 = bitcast %"struct.blink::SMILInterval"* %133 to i8*
  %135 = bitcast %"struct.blink::SMILInterval"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 16, i1 false)
  br label %136

136:                                              ; preds = %132, %129
  %137 = icmp slt i64 %119, 9223372036854775806
  store i64 %119, i64* %52, align 8
  %138 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  store i64 %120, i64* %138, align 8
  br i1 %137, label %139, label %145

139:                                              ; preds = %136
  %140 = bitcast %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #16
  %141 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %5, i64 0, i32 0
  store i32 2, i32* %141, align 8
  %142 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %5, i64 0, i32 1
  store i32 0, i32* %142, align 4
  %143 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %5, i64 0, i32 2, i32 0, i32 0
  store i64 %119, i64* %143, align 8
  %144 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %5, i64 0, i32 3, i32 0, i32 0
  store i64 %120, i64* %144, align 8
  call void @_ZN5blink14SVGSMILElement16NotifyDependentsERKNS0_20NotifyDependentsInfoE(%"class.blink::SVGSMILElement"* %0, %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* nonnull dereferenceable(24) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #16
  br label %145

145:                                              ; preds = %90, %136, %83, %86, %59, %41, %139, %125
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(16) %"struct.blink::SMILInterval"* @_ZNK5blink14SVGSMILElement17GetActiveIntervalENS_8SMILTimeE(%"class.blink::SVGSMILElement"* readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13
  %4 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp slt i64 %5, 9223372036854775806
  %7 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14
  br i1 %6, label %8, label %15

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp slt i64 %10, 9223372036854775806
  %12 = icmp sgt i64 %5, %1
  %13 = and i1 %12, %11
  %14 = select i1 %13, %"struct.blink::SMILInterval"* %7, %"struct.blink::SMILInterval"* %3
  ret %"struct.blink::SMILInterval"* %14

15:                                               ; preds = %2
  ret %"struct.blink::SMILInterval"* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink14SVGSMILElement20DetermineActiveStateERKNS_12SMILIntervalENS_8SMILTimeE(%"class.blink::SVGSMILElement"* nocapture readonly, %"struct.blink::SMILInterval"* nocapture readonly dereferenceable(16), i64) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp sgt i64 %5, %2
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %1, i64 0, i32 1, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp sgt i64 %9, %2
  br i1 %10, label %21, label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 7
  %13 = load i8, i8* %12, align 2, !range !26
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %17 = load i8, i8* %16, align 8
  %18 = lshr i8 %17, 3
  %19 = and i8 %18, 2
  %20 = zext i8 %19 to i32
  br label %21

21:                                               ; preds = %11, %7, %15
  %22 = phi i32 [ %20, %15 ], [ 1, %7 ], [ 0, %11 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement19EndedActiveIntervalEv(%"class.blink::SVGSMILElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 2
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %86, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  %15 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %9 to i64
  br i1 %14, label %24, label %16

16:                                               ; preds = %7, %21
  %17 = phi %"class.blink::SMILTimeWithOrigin"* [ %22, %21 ], [ %9, %7 ]
  %18 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %17, i64 1
  %23 = icmp eq %"class.blink::SMILTimeWithOrigin"* %22, %13
  br i1 %23, label %77, label %16

24:                                               ; preds = %16, %7
  %25 = phi %"class.blink::SMILTimeWithOrigin"* [ %9, %7 ], [ %17, %16 ]
  %26 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %25 to i64
  %27 = icmp eq %"class.blink::SMILTimeWithOrigin"* %25, %13
  br i1 %27, label %77, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %25, i64 1
  %30 = icmp eq %"class.blink::SMILTimeWithOrigin"* %29, %13
  br i1 %30, label %77, label %31

31:                                               ; preds = %28
  %32 = add nsw i64 %12, -2
  %33 = getelementptr %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %9, i64 %32, i32 0, i32 0, i32 0
  %34 = ptrtoint i64* %33 to i64
  %35 = sub i64 %34, %26
  %36 = and i64 %35, 16
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %49

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %25, i64 1, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::SMILTimeWithOrigin"* %25 to i8*
  %44 = bitcast %"class.blink::SMILTimeWithOrigin"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 12, i1 false) #16
  %45 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %25, i64 1
  br label %46

46:                                               ; preds = %42, %38
  %47 = phi %"class.blink::SMILTimeWithOrigin"* [ %25, %38 ], [ %45, %42 ]
  %48 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %25, i64 2
  br label %49

49:                                               ; preds = %46, %31
  %50 = phi %"class.blink::SMILTimeWithOrigin"* [ undef, %31 ], [ %47, %46 ]
  %51 = phi %"class.blink::SMILTimeWithOrigin"* [ %29, %31 ], [ %48, %46 ]
  %52 = phi %"class.blink::SMILTimeWithOrigin"* [ %25, %31 ], [ %29, %46 ]
  %53 = phi %"class.blink::SMILTimeWithOrigin"* [ %25, %31 ], [ %47, %46 ]
  %54 = icmp ult i64 %35, 16
  br i1 %54, label %72, label %55

55:                                               ; preds = %49, %184
  %56 = phi %"class.blink::SMILTimeWithOrigin"* [ %186, %184 ], [ %51, %49 ]
  %57 = phi %"class.blink::SMILTimeWithOrigin"* [ %68, %184 ], [ %52, %49 ]
  %58 = phi %"class.blink::SMILTimeWithOrigin"* [ %185, %184 ], [ %53, %49 ]
  %59 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %57, i64 1, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %66, label %62

62:                                               ; preds = %55
  %63 = bitcast %"class.blink::SMILTimeWithOrigin"* %58 to i8*
  %64 = bitcast %"class.blink::SMILTimeWithOrigin"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 12, i1 false) #16
  %65 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %58, i64 1
  br label %66

66:                                               ; preds = %62, %55
  %67 = phi %"class.blink::SMILTimeWithOrigin"* [ %58, %55 ], [ %65, %62 ]
  %68 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %56, i64 1
  %69 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %56, i64 1, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %184, label %180

72:                                               ; preds = %184, %49
  %73 = phi %"class.blink::SMILTimeWithOrigin"* [ %50, %49 ], [ %185, %184 ]
  %74 = bitcast %"class.blink::SMILInstanceTimeList"* %2 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = load i32, i32* %3, align 8
  br label %77

77:                                               ; preds = %21, %72, %28, %24
  %78 = phi i32 [ %4, %24 ], [ %4, %28 ], [ %76, %72 ], [ %4, %21 ]
  %79 = phi i64 [ %15, %24 ], [ %15, %28 ], [ %75, %72 ], [ %15, %21 ]
  %80 = phi %"class.blink::SMILTimeWithOrigin"* [ %13, %24 ], [ %25, %28 ], [ %73, %72 ], [ %13, %21 ]
  %81 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %80 to i64
  %82 = sub i64 %81, %79
  %83 = lshr exact i64 %82, 4
  %84 = trunc i64 %83 to i32
  store i32 %84, i32* %10, align 4
  %85 = and i32 %78, -3
  store i32 %85, i32* %3, align 8
  br label %86

86:                                               ; preds = %1, %77
  %87 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 12
  %88 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 12, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %171, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %94, i64 %97
  %99 = icmp eq i32 %96, 0
  %100 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %94 to i64
  br i1 %99, label %109, label %101

101:                                              ; preds = %92, %106
  %102 = phi %"class.blink::SMILTimeWithOrigin"* [ %107, %106 ], [ %94, %92 ]
  %103 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %102, i64 0, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %109, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %102, i64 1
  %108 = icmp eq %"class.blink::SMILTimeWithOrigin"* %107, %98
  br i1 %108, label %162, label %101

109:                                              ; preds = %101, %92
  %110 = phi %"class.blink::SMILTimeWithOrigin"* [ %94, %92 ], [ %102, %101 ]
  %111 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %110 to i64
  %112 = icmp eq %"class.blink::SMILTimeWithOrigin"* %110, %98
  br i1 %112, label %162, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %110, i64 1
  %115 = icmp eq %"class.blink::SMILTimeWithOrigin"* %114, %98
  br i1 %115, label %162, label %116

116:                                              ; preds = %113
  %117 = add nsw i64 %97, -2
  %118 = getelementptr %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %94, i64 %117, i32 0, i32 0, i32 0
  %119 = ptrtoint i64* %118 to i64
  %120 = sub i64 %119, %111
  %121 = and i64 %120, 16
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %134

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %110, i64 1, i32 1
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %131, label %127

127:                                              ; preds = %123
  %128 = bitcast %"class.blink::SMILTimeWithOrigin"* %110 to i8*
  %129 = bitcast %"class.blink::SMILTimeWithOrigin"* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 12, i1 false) #16
  %130 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %110, i64 1
  br label %131

131:                                              ; preds = %127, %123
  %132 = phi %"class.blink::SMILTimeWithOrigin"* [ %110, %123 ], [ %130, %127 ]
  %133 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %110, i64 2
  br label %134

134:                                              ; preds = %131, %116
  %135 = phi %"class.blink::SMILTimeWithOrigin"* [ undef, %116 ], [ %132, %131 ]
  %136 = phi %"class.blink::SMILTimeWithOrigin"* [ %114, %116 ], [ %133, %131 ]
  %137 = phi %"class.blink::SMILTimeWithOrigin"* [ %110, %116 ], [ %114, %131 ]
  %138 = phi %"class.blink::SMILTimeWithOrigin"* [ %110, %116 ], [ %132, %131 ]
  %139 = icmp ult i64 %120, 16
  br i1 %139, label %157, label %140

140:                                              ; preds = %134, %176
  %141 = phi %"class.blink::SMILTimeWithOrigin"* [ %178, %176 ], [ %136, %134 ]
  %142 = phi %"class.blink::SMILTimeWithOrigin"* [ %153, %176 ], [ %137, %134 ]
  %143 = phi %"class.blink::SMILTimeWithOrigin"* [ %177, %176 ], [ %138, %134 ]
  %144 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %142, i64 1, i32 1
  %145 = load i32, i32* %144, align 8
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %151, label %147

147:                                              ; preds = %140
  %148 = bitcast %"class.blink::SMILTimeWithOrigin"* %143 to i8*
  %149 = bitcast %"class.blink::SMILTimeWithOrigin"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 12, i1 false) #16
  %150 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %143, i64 1
  br label %151

151:                                              ; preds = %147, %140
  %152 = phi %"class.blink::SMILTimeWithOrigin"* [ %143, %140 ], [ %150, %147 ]
  %153 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %141, i64 1
  %154 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %141, i64 1, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = icmp eq i32 %155, 1
  br i1 %156, label %176, label %172

157:                                              ; preds = %176, %134
  %158 = phi %"class.blink::SMILTimeWithOrigin"* [ %135, %134 ], [ %177, %176 ]
  %159 = bitcast %"class.blink::SMILInstanceTimeList"* %87 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = load i32, i32* %88, align 8
  br label %162

162:                                              ; preds = %106, %157, %113, %109
  %163 = phi i32 [ %89, %109 ], [ %89, %113 ], [ %161, %157 ], [ %89, %106 ]
  %164 = phi i64 [ %100, %109 ], [ %100, %113 ], [ %160, %157 ], [ %100, %106 ]
  %165 = phi %"class.blink::SMILTimeWithOrigin"* [ %98, %109 ], [ %110, %113 ], [ %158, %157 ], [ %98, %106 ]
  %166 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %165 to i64
  %167 = sub i64 %166, %164
  %168 = lshr exact i64 %167, 4
  %169 = trunc i64 %168 to i32
  store i32 %169, i32* %95, align 4
  %170 = and i32 %163, -3
  store i32 %170, i32* %88, align 8
  br label %171

171:                                              ; preds = %86, %162
  ret void

172:                                              ; preds = %151
  %173 = bitcast %"class.blink::SMILTimeWithOrigin"* %152 to i8*
  %174 = bitcast %"class.blink::SMILTimeWithOrigin"* %153 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 12, i1 false) #16
  %175 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %152, i64 1
  br label %176

176:                                              ; preds = %172, %151
  %177 = phi %"class.blink::SMILTimeWithOrigin"* [ %152, %151 ], [ %175, %172 ]
  %178 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %141, i64 2
  %179 = icmp eq %"class.blink::SMILTimeWithOrigin"* %178, %98
  br i1 %179, label %157, label %140

180:                                              ; preds = %66
  %181 = bitcast %"class.blink::SMILTimeWithOrigin"* %67 to i8*
  %182 = bitcast %"class.blink::SMILTimeWithOrigin"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* align 8 %182, i64 12, i1 false) #16
  %183 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %67, i64 1
  br label %184

184:                                              ; preds = %180, %66
  %185 = phi %"class.blink::SMILTimeWithOrigin"* [ %67, %66 ], [ %183, %180 ]
  %186 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %56, i64 2
  %187 = icmp eq %"class.blink::SMILTimeWithOrigin"* %186, %13
  br i1 %187, label %72, label %55
}

declare void @_ZN5blink17SMILTimeContainer10RescheduleEPNS_14SVGSMILElementENS_8SMILTimeE(%"class.blink::SMILTimeContainer"*, %"class.blink::SVGSMILElement"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement34DiscardOrRevalidateCurrentIntervalENS_8SMILTimeE(%"class.blink::SVGSMILElement"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::SVGSMILElement::NotifyDependentsInfo", align 8
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp slt i64 %5, 9223372036854775806
  br i1 %6, label %7, label %35

7:                                                ; preds = %2
  %8 = icmp sgt i64 %5, %1
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %10, align 8
  br label %35

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp sgt i64 %13, %1
  br i1 %14, label %15, label %35

15:                                               ; preds = %11
  %16 = tail call i64 @_ZNK5blink14SVGSMILElement16ResolveActiveEndENS_8SMILTimeE(%"class.blink::SVGSMILElement"* %0, i64 %5)
  %17 = icmp eq i64 %16, 9223372036854775807
  br i1 %17, label %18, label %25

18:                                               ; preds = %15
  %19 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %19, align 8
  %20 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp slt i64 %21, 9223372036854775806
  br i1 %22, label %35, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 7
  store i8 1, i8* %24, align 2
  br label %35

25:                                               ; preds = %15
  %26 = load i64, i64* %12, align 8
  %27 = icmp eq i64 %16, %26
  br i1 %27, label %35, label %28

28:                                               ; preds = %25
  store i64 %16, i64* %12, align 8
  %29 = bitcast %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #16
  %30 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 0
  store i32 2, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 2, i32 0, i32 0
  %33 = load i64, i64* %4, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 3, i32 0, i32 0
  store i64 %16, i64* %34, align 8
  call void @_ZN5blink14SVGSMILElement16NotifyDependentsERKNS0_20NotifyDependentsInfoE(%"class.blink::SVGSMILElement"* %0, %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* nonnull dereferenceable(24) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #16
  br label %35

35:                                               ; preds = %25, %11, %9, %2, %28, %18, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SVGSMILElement21HandleIntervalRestartENS_8SMILTimeE(%"class.blink::SVGSMILElement"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::SVGSMILElement::NotifyDependentsInfo", align 8
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %5 = load i8, i8* %4, align 8
  %6 = lshr i8 %5, 2
  %7 = and i8 %6, 3
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 7
  %9 = load i8, i8* %8, align 2, !range !26
  %10 = icmp eq i8 %9, 0
  %11 = icmp eq i8 %7, 2
  %12 = and i1 %10, %11
  br i1 %12, label %60, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp slt i64 %15, 9223372036854775806
  br i1 %16, label %17, label %60

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp sgt i64 %19, %1
  br i1 %20, label %21, label %60

21:                                               ; preds = %17
  %22 = icmp eq i8 %7, 0
  br i1 %22, label %23, label %60

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %25, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %45, label %31

31:                                               ; preds = %23, %31
  %32 = phi i64 [ %43, %31 ], [ %28, %23 ]
  %33 = phi %"class.blink::SMILTimeWithOrigin"* [ %42, %31 ], [ %25, %23 ]
  %34 = lshr i64 %32, 1
  %35 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %33, i64 %34
  %36 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp sle i64 %37, %15
  %39 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %35, i64 1
  %40 = xor i64 %34, -1
  %41 = add i64 %32, %40
  %42 = select i1 %38, %"class.blink::SMILTimeWithOrigin"* %39, %"class.blink::SMILTimeWithOrigin"* %33
  %43 = select i1 %38, i64 %41, i64 %34
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %31

45:                                               ; preds = %31, %23
  %46 = phi %"class.blink::SMILTimeWithOrigin"* [ %25, %23 ], [ %42, %31 ]
  %47 = icmp eq %"class.blink::SMILTimeWithOrigin"* %46, %29
  br i1 %47, label %60, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %46, i64 0, i32 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp sgt i64 %19, %50
  br i1 %51, label %52, label %60

52:                                               ; preds = %48
  store i64 %50, i64* %18, align 8
  %53 = bitcast %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #16
  %54 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 0
  store i32 2, i32* %54, align 8
  %55 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 1
  store i32 0, i32* %55, align 4
  %56 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 2, i32 0, i32 0
  store i64 %15, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %3, i64 0, i32 3, i32 0, i32 0
  store i64 %50, i64* %57, align 8
  call void @_ZN5blink14SVGSMILElement16NotifyDependentsERKNS0_20NotifyDependentsInfoE(%"class.blink::SVGSMILElement"* %0, %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* nonnull dereferenceable(24) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #16
  %58 = load i64, i64* %18, align 8
  %59 = icmp sle i64 %58, %1
  br label %60

60:                                               ; preds = %17, %45, %48, %21, %52, %13, %2
  %61 = phi i1 [ %59, %52 ], [ false, %2 ], [ true, %17 ], [ true, %13 ], [ false, %21 ], [ false, %48 ], [ false, %45 ]
  ret i1 %61
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink14SVGSMILElement19LastIntervalEndTimeEv(%"class.blink::SVGSMILElement"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 2, !range !26
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %19

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp slt i64 %7, 9223372036854775806
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  br label %19

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp slt i64 %14, 9223372036854775806
  br i1 %15, label %16, label %19

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14, i32 1, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  br label %19

19:                                               ; preds = %12, %1, %16, %9
  %20 = phi i64 [ %11, %9 ], [ %18, %16 ], [ -9223372036854775808, %1 ], [ -9223372036854775808, %12 ]
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement20AddedToTimeContainerEv(%"class.blink::SVGSMILElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 19, i32 0, i32 0
  %3 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %2, align 8
  %4 = tail call i64 @_ZNK5blink17SMILTimeContainer28LatestUpdatePresentationTimeEv(%"class.blink::SMILTimeContainer"* %3) #16
  tail call void @_ZN5blink14SVGSMILElement14UpdateIntervalENS_8SMILTimeE(%"class.blink::SVGSMILElement"* %0, i64 %4)
  %5 = icmp slt i64 %4, 9223372036854775806
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %4, i64 -1)
  %8 = extractvalue { i64, i1 } %7, 1
  %9 = extractvalue { i64, i1 } %7, 0
  %10 = select i1 %8, i64 -9223372036854775808, i64 %9, !prof !2
  %11 = icmp slt i64 %10, 9223372036854775805
  %12 = select i1 %11, i64 %10, i64 9223372036854775805
  br label %13

13:                                               ; preds = %1, %6
  %14 = phi i64 [ %12, %6 ], [ %4, %1 ]
  %15 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp sgt i64 %16, %14
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp sgt i64 %20, %14
  br i1 %21, label %31, label %22

22:                                               ; preds = %18, %13
  %23 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 7
  %24 = load i8, i8* %23, align 2, !range !26
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %28 = load i8, i8* %27, align 8
  %29 = lshr i8 %28, 3
  %30 = and i8 %29, 2
  br label %31

31:                                               ; preds = %18, %22, %26
  %32 = phi i8 [ %30, %26 ], [ 1, %18 ], [ 0, %22 ]
  %33 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %34 = load i8, i8* %33, align 8
  %35 = and i8 %34, -4
  %36 = or i8 %35, %32
  store i8 %36, i8* %33, align 8
  %37 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %2, align 8
  %38 = tail call i64 @_ZNK5blink14SVGSMILElement23ComputeNextIntervalTimeENS_8SMILTimeENS0_14IncludeRepeatsE(%"class.blink::SVGSMILElement"* %0, i64 %14, i32 0)
  tail call void @_ZN5blink17SMILTimeContainer10RescheduleEPNS_14SVGSMILElementENS_8SMILTimeE(%"class.blink::SMILTimeContainer"* %37, %"class.blink::SVGSMILElement"* %0, i64 %38) #16
  %39 = load i8, i8* %33, align 8
  %40 = and i8 %39, 3
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 7
  store i8 0, i8* %43, align 2
  br label %44

44:                                               ; preds = %31, %42
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink14SVGSMILElement21StartedActiveIntervalEv(%"class.blink::SVGSMILElement"* nocapture) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 7
  store i8 0, i8* %2, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement24RemovedFromTimeContainerEv(%"class.blink::SVGSMILElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink14SVGSMILElement19EndedActiveIntervalEv(%"class.blink::SVGSMILElement"* %0)
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14SVGSMILElement22CalculateProgressStateENS_8SMILTimeE(%"class.blink::SVGSMILElement"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SMILTime", align 8
  %4 = alloca %"class.blink::SMILTime", align 8
  %5 = alloca %"class.blink::SMILTime", align 8
  %6 = alloca %"class.blink::SMILTime", align 8
  %7 = alloca %"class.blink::SMILTime", align 8
  %8 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %3, i64 0, i32 0, i32 0
  store i64 %1, i64* %8, align 8
  %9 = bitcast %"class.blink::SMILTime"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %4, i64 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 22, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, -9223372036854775808
  br i1 %13, label %14, label %77

14:                                               ; preds = %2
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kDurAttrE, align 8
  %16 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %16, align 8
  %18 = icmp eq %"class.blink::ElementData"* %17, null
  br i1 %18, label %69, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::ElementData"* %17 to %"class.blink::UniqueElementData"*
  %26 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %17, i64 1, i32 1
  %27 = bitcast %"class.blink::Member.19"* %26 to %"class.blink::Attribute"**
  %28 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %25, i64 0, i32 2, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  br label %36

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %17, i64 1
  %33 = bitcast %"class.blink::ElementData"* %32 to %"class.blink::Attribute"*
  %34 = lshr i32 %21, 1
  %35 = and i32 %34, 268435455
  br label %36

36:                                               ; preds = %31, %24
  %37 = phi %"class.blink::Attribute"* [ %33, %31 ], [ %28, %24 ]
  %38 = phi i32 [ %35, %31 ], [ %30, %24 ]
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 %39
  %41 = icmp eq i32 %38, 0
  br i1 %41, label %69, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %47

47:                                               ; preds = %62, %42
  %48 = phi %"class.blink::Attribute"* [ %37, %42 ], [ %63, %62 ]
  %49 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %50, %44
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 4, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %59, %60
  br i1 %61, label %65, label %62

62:                                               ; preds = %57, %52
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 1
  %64 = icmp eq %"class.blink::Attribute"* %63, %40
  br i1 %64, label %69, label %47

65:                                               ; preds = %57, %47
  %66 = icmp eq %"class.blink::Attribute"* %48, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 0, i32 1
  br label %71

69:                                               ; preds = %62, %65, %36, %14
  %70 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %71

71:                                               ; preds = %69, %67
  %72 = phi %"class.WTF::AtomicString"* [ %70, %69 ], [ %68, %67 ]
  %73 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %72, i64 0, i32 0
  %74 = tail call i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %73) #16
  %75 = icmp slt i64 %74, 1
  %76 = select i1 %75, i64 9223372036854775807, i64 %74
  store i64 %76, i64* %11, align 8
  br label %77

77:                                               ; preds = %2, %71
  %78 = phi i64 [ %76, %71 ], [ %12, %2 ]
  %79 = icmp eq i64 %78, 9223372036854775807
  %80 = select i1 %79, i64 9223372036854775806, i64 %78
  store i64 %80, i64* %10, align 8
  switch i64 %80, label %81 [
    i64 9223372036854775806, label %201
    i64 9223372036854775807, label %200
    i64 0, label %200
  ]

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13
  %83 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp slt i64 %84, 9223372036854775806
  %86 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14
  br i1 %85, label %87, label %94

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %86, i64 0, i32 0, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = icmp slt i64 %89, 9223372036854775806
  %91 = icmp sgt i64 %84, %1
  %92 = and i1 %91, %90
  %93 = select i1 %92, %"struct.blink::SMILInterval"* %86, %"struct.blink::SMILInterval"* %82
  br label %94

94:                                               ; preds = %81, %87
  %95 = phi %"struct.blink::SMILInterval"* [ %93, %87 ], [ %86, %81 ]
  %96 = bitcast %"class.blink::SMILTime"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #16
  %97 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %5, i64 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %95, i64 0, i32 0, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = icmp slt i64 %1, 9223372036854775806
  br i1 %100, label %101, label %108

101:                                              ; preds = %94
  %102 = icmp slt i64 %99, 9223372036854775806
  br i1 %102, label %103, label %108

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %3, i64 0, i32 0
  %105 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %104, i64 %99) #16
  %106 = icmp slt i64 %105, 9223372036854775805
  %107 = select i1 %106, i64 %105, i64 9223372036854775805
  br label %108

108:                                              ; preds = %94, %101, %103
  %109 = phi i64 [ %107, %103 ], [ %1, %94 ], [ %99, %101 ]
  store i64 %109, i64* %97, align 8
  %110 = call i64 @_ZNK5blink14SVGSMILElement17RepeatingDurationEv(%"class.blink::SVGSMILElement"* %0)
  %111 = bitcast %"class.blink::SMILTime"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #16
  %112 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %6, i64 0, i32 0, i32 0
  store i64 0, i64* %112, align 8
  %113 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %95, i64 0, i32 1, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = load i64, i64* %8, align 8
  %116 = icmp slt i64 %115, %114
  br i1 %116, label %117, label %119

117:                                              ; preds = %108
  %118 = icmp sgt i64 %109, %110
  br i1 %118, label %133, label %166

119:                                              ; preds = %108
  %120 = bitcast %"class.blink::SMILTime"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #16
  %121 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %7, i64 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %121, align 8
  %122 = load i64, i64* %98, align 8
  %123 = icmp slt i64 %114, 9223372036854775806
  br i1 %123, label %124, label %131

124:                                              ; preds = %119
  %125 = icmp slt i64 %122, 9223372036854775806
  br i1 %125, label %126, label %131

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %95, i64 0, i32 1, i32 0
  %128 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* %127, i64 %122) #16
  %129 = icmp slt i64 %128, 9223372036854775805
  %130 = select i1 %129, i64 %128, i64 9223372036854775805
  br label %131

131:                                              ; preds = %119, %124, %126
  %132 = phi i64 [ %130, %126 ], [ %114, %119 ], [ %122, %124 ]
  store i64 %132, i64* %121, align 8
  br label %136

133:                                              ; preds = %117
  %134 = bitcast %"class.blink::SMILTime"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #16
  %135 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %7, i64 0, i32 0, i32 0
  store i64 %110, i64* %135, align 8
  br label %136

136:                                              ; preds = %133, %131
  %137 = phi i64 [ %110, %133 ], [ %132, %131 ]
  %138 = phi i64* [ %135, %133 ], [ %121, %131 ]
  %139 = phi i8* [ %134, %133 ], [ %120, %131 ]
  %140 = icmp slt i64 %137, 9223372036854775806
  br i1 %140, label %141, label %165

141:                                              ; preds = %136
  %142 = load i64, i64* %10, align 8
  %143 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %7, i64 0, i32 0
  %144 = call i64 @_ZNK4base9TimeDelta6IntDivES0_(%"class.base::TimeDelta"* nonnull %143, i64 %142) #16
  %145 = load i64, i64* %10, align 8
  %146 = load i64, i64* %138, align 8
  %147 = add i64 %146, -9223372036854775807
  %148 = icmp ult i64 %147, 2
  br i1 %148, label %152, label %149

149:                                              ; preds = %141
  switch i64 %145, label %150 [
    i64 -9223372036854775808, label %152
    i64 9223372036854775807, label %152
    i64 0, label %152
  ]

150:                                              ; preds = %149
  %151 = srem i64 %146, %145
  br label %152

152:                                              ; preds = %141, %149, %149, %149, %150
  %153 = phi i64 [ %151, %150 ], [ %146, %149 ], [ %146, %141 ], [ %146, %149 ], [ %146, %149 ]
  store i64 %153, i64* %112, align 8
  switch i64 %153, label %154 [
    i64 9223372036854775807, label %161
    i64 9223372036854775806, label %161
    i64 0, label %161
  ]

154:                                              ; preds = %152
  %155 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %153, i64 -1)
  %156 = extractvalue { i64, i1 } %155, 1
  %157 = extractvalue { i64, i1 } %155, 0
  %158 = select i1 %156, i64 -9223372036854775808, i64 %157, !prof !2
  %159 = icmp slt i64 %158, 9223372036854775805
  %160 = select i1 %159, i64 %158, i64 9223372036854775805
  store i64 %160, i64* %112, align 8
  br label %163

161:                                              ; preds = %152, %152, %152
  store i64 %145, i64* %112, align 8
  %162 = add nsw i64 %144, -1
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i64 [ %162, %161 ], [ %144, %154 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #16
  br label %179

165:                                              ; preds = %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #16
  br label %197

166:                                              ; preds = %117
  %167 = load i64, i64* %10, align 8
  %168 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %5, i64 0, i32 0
  %169 = call i64 @_ZNK4base9TimeDelta6IntDivES0_(%"class.base::TimeDelta"* nonnull %168, i64 %167) #16
  %170 = load i64, i64* %10, align 8
  %171 = load i64, i64* %97, align 8
  %172 = add i64 %171, -9223372036854775807
  %173 = icmp ult i64 %172, 2
  br i1 %173, label %177, label %174

174:                                              ; preds = %166
  switch i64 %170, label %175 [
    i64 -9223372036854775808, label %177
    i64 9223372036854775807, label %177
    i64 0, label %177
  ]

175:                                              ; preds = %174
  %176 = srem i64 %171, %170
  br label %177

177:                                              ; preds = %166, %174, %174, %174, %175
  %178 = phi i64 [ %176, %175 ], [ %171, %174 ], [ %171, %166 ], [ %171, %174 ], [ %171, %174 ]
  store i64 %178, i64* %112, align 8
  br label %179

179:                                              ; preds = %163, %177
  %180 = phi i64 [ %169, %177 ], [ %164, %163 ]
  %181 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %6, i64 0, i32 0
  %182 = call double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"* nonnull %181) #16
  %183 = getelementptr inbounds %"class.blink::SMILTime", %"class.blink::SMILTime"* %4, i64 0, i32 0
  %184 = call double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"* nonnull %183) #16
  %185 = fdiv double %182, %184
  %186 = fcmp ult double %185, 0x47EFFFFFE0000000
  br i1 %186, label %187, label %191

187:                                              ; preds = %179
  %188 = fcmp ole double %185, 0xC7EFFFFFE0000000
  %189 = select i1 %188, double 0xC7EFFFFFE0000000, double %185
  %190 = fptrunc double %189 to float
  br label %191

191:                                              ; preds = %179, %187
  %192 = phi float [ %190, %187 ], [ 0x47EFFFFFE0000000, %179 ]
  %193 = icmp slt i64 %180, 4294967295
  br i1 %193, label %194, label %197

194:                                              ; preds = %191
  %195 = icmp sgt i64 %180, 0
  %196 = select i1 %195, i64 %180, i64 0
  br label %197

197:                                              ; preds = %194, %191, %165
  %198 = phi float [ 0.000000e+00, %165 ], [ %192, %191 ], [ %192, %194 ]
  %199 = phi i64 [ 0, %165 ], [ 4294967295, %191 ], [ %196, %194 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #16
  br label %201

200:                                              ; preds = %77, %77
  br label %201

201:                                              ; preds = %77, %200, %197
  %202 = phi float [ %198, %197 ], [ 0.000000e+00, %77 ], [ 1.000000e+00, %200 ]
  %203 = phi i64 [ %199, %197 ], [ 0, %77 ], [ 0, %200 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %204 = bitcast float %202 to i32
  %205 = shl i64 %203, 32
  %206 = zext i32 %204 to i64
  %207 = or i64 %205, %206
  ret i64 %207
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14SVGSMILElement16NextProgressTimeENS_8SMILTimeE(%"class.blink::SVGSMILElement"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, 3
  %7 = icmp eq i8 %6, 1
  br i1 %7, label %8, label %138

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 22, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, -9223372036854775808
  br i1 %11, label %12, label %75

12:                                               ; preds = %8
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names8kDurAttrE, align 8
  %14 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %14, align 8
  %16 = icmp eq %"class.blink::ElementData"* %15, null
  br i1 %16, label %67, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.blink::ElementData"* %15 to %"class.blink::UniqueElementData"*
  %24 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %15, i64 1, i32 1
  %25 = bitcast %"class.blink::Member.19"* %24 to %"class.blink::Attribute"**
  %26 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %23, i64 0, i32 2, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  br label %34

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %15, i64 1
  %31 = bitcast %"class.blink::ElementData"* %30 to %"class.blink::Attribute"*
  %32 = lshr i32 %19, 1
  %33 = and i32 %32, 268435455
  br label %34

34:                                               ; preds = %29, %22
  %35 = phi %"class.blink::Attribute"* [ %31, %29 ], [ %26, %22 ]
  %36 = phi i32 [ %33, %29 ], [ %28, %22 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %67, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %45

45:                                               ; preds = %60, %40
  %46 = phi %"class.blink::Attribute"* [ %35, %40 ], [ %61, %60 ]
  %47 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %48, %42
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %52, %53
  br i1 %54, label %55, label %60

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 4, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %57, %58
  br i1 %59, label %63, label %60

60:                                               ; preds = %55, %50
  %61 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %46, i64 1
  %62 = icmp eq %"class.blink::Attribute"* %61, %38
  br i1 %62, label %67, label %45

63:                                               ; preds = %55, %45
  %64 = icmp eq %"class.blink::Attribute"* %46, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %46, i64 0, i32 1
  br label %69

67:                                               ; preds = %60, %63, %34, %12
  %68 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi %"class.WTF::AtomicString"* [ %68, %67 ], [ %66, %65 ]
  %71 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %70, i64 0, i32 0
  %72 = tail call i64 @_ZN5blink14SVGSMILElement15ParseClockValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %71) #16
  %73 = icmp slt i64 %72, 1
  %74 = select i1 %73, i64 9223372036854775807, i64 %72
  store i64 %74, i64* %9, align 8
  br label %75

75:                                               ; preds = %8, %69
  %76 = phi i64 [ %74, %69 ], [ %10, %8 ]
  %77 = or i64 %76, 1
  %78 = icmp eq i64 %77, 9223372036854775807
  br i1 %78, label %99, label %79

79:                                               ; preds = %75
  %80 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSetTagE, align 8
  %81 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = icmp eq %"class.blink::SVGSMILElement"* %0, null
  br i1 %82, label %143, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, 48
  %87 = icmp eq i32 %86, 32
  br i1 %87, label %88, label %143

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %80, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %81, i64 1, i32 2
  %92 = bitcast %"class.blink::Member.4"* %91 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %93 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %93, i64 0, i32 3, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %90, i64 0, i32 3, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %95, %97
  br i1 %98, label %99, label %143

99:                                               ; preds = %88, %75
  %100 = tail call i64 @_ZNK5blink14SVGSMILElement17RepeatingDurationEv(%"class.blink::SVGSMILElement"* %0)
  %101 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = icmp slt i64 %102, 9223372036854775806
  br i1 %103, label %104, label %126

104:                                              ; preds = %99
  %105 = icmp slt i64 %100, 9223372036854775806
  br i1 %105, label %106, label %126

106:                                              ; preds = %104
  %107 = add i64 %100, -9223372036854775807
  %108 = icmp ult i64 %107, 2
  br i1 %108, label %109, label %117

109:                                              ; preds = %106
  %110 = add i64 %102, -9223372036854775807
  %111 = icmp ugt i64 %110, 1
  %112 = icmp eq i64 %102, %100
  %113 = or i1 %112, %111
  br i1 %113, label %135, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i64 0, i64 0)) #16
  %116 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #16
  br label %135

117:                                              ; preds = %106
  %118 = icmp slt i64 %100, 0
  %119 = select i1 %118, i64 -9223372036854775808, i64 9223372036854775807
  %120 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %102, i64 %100) #16
  %121 = extractvalue { i64, i1 } %120, 1
  %122 = extractvalue { i64, i1 } %120, 0
  %123 = select i1 %121, i64 %119, i64 %122, !prof !2
  %124 = icmp slt i64 %123, 9223372036854775805
  %125 = select i1 %124, i64 %123, i64 9223372036854775805
  br label %126

126:                                              ; preds = %99, %104, %117
  %127 = phi i64 [ %125, %117 ], [ %102, %99 ], [ %100, %104 ]
  %128 = icmp sgt i64 %127, %1
  br i1 %128, label %129, label %135

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = icmp sgt i64 %131, %127
  %133 = icmp slt i64 %127, 9223372036854775806
  %134 = and i1 %133, %132
  br i1 %134, label %143, label %135

135:                                              ; preds = %114, %109, %129, %126
  %136 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %137 = load i64, i64* %136, align 8
  br label %143

138:                                              ; preds = %2
  %139 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %140 = load i64, i64* %139, align 8
  %141 = icmp slt i64 %140, %1
  %142 = select i1 %141, i64 9223372036854775807, i64 %140
  ret i64 %142

143:                                              ; preds = %129, %79, %83, %135, %88
  %144 = phi i64 [ %137, %135 ], [ %1, %88 ], [ %1, %83 ], [ %1, %79 ], [ %127, %129 ]
  ret i64 %144
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SVGSMILElement14IsContributingENS_8SMILTimeE(%"class.blink::SVGSMILElement"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, 3
  %7 = icmp eq i8 %6, 1
  br i1 %7, label %8, label %44

8:                                                ; preds = %2
  %9 = and i8 %5, 16
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %47

11:                                               ; preds = %8
  %12 = tail call i64 @_ZNK5blink14SVGSMILElement17RepeatingDurationEv(%"class.blink::SVGSMILElement"* %0)
  %13 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp slt i64 %14, 9223372036854775806
  br i1 %15, label %16, label %38

16:                                               ; preds = %11
  %17 = icmp slt i64 %12, 9223372036854775806
  br i1 %17, label %18, label %38

18:                                               ; preds = %16
  %19 = add i64 %12, -9223372036854775807
  %20 = icmp ult i64 %19, 2
  br i1 %20, label %21, label %29

21:                                               ; preds = %18
  %22 = add i64 %14, -9223372036854775807
  %23 = icmp ugt i64 %22, 1
  %24 = icmp eq i64 %14, %12
  %25 = or i1 %24, %23
  br i1 %25, label %38, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i64 0, i64 0)) #16
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  br label %38

29:                                               ; preds = %18
  %30 = icmp slt i64 %12, 0
  %31 = select i1 %30, i64 -9223372036854775808, i64 9223372036854775807
  %32 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %14, i64 %12) #16
  %33 = extractvalue { i64, i1 } %32, 1
  %34 = extractvalue { i64, i1 } %32, 0
  %35 = select i1 %33, i64 %31, i64 %34, !prof !2
  %36 = icmp slt i64 %35, 9223372036854775805
  %37 = select i1 %36, i64 %35, i64 9223372036854775805
  br label %38

38:                                               ; preds = %11, %16, %21, %26, %29
  %39 = phi i64 [ %37, %29 ], [ %14, %11 ], [ %12, %16 ], [ -9223372036854775808, %21 ], [ -9223372036854775808, %26 ]
  %40 = icmp slt i64 %39, %1
  br i1 %40, label %41, label %47

41:                                               ; preds = %38
  %42 = load i8, i8* %4, align 8
  %43 = and i8 %42, 3
  br label %44

44:                                               ; preds = %41, %2
  %45 = phi i8 [ %43, %41 ], [ %6, %2 ]
  %46 = icmp eq i8 %45, 2
  br label %47

47:                                               ; preds = %38, %8, %44
  %48 = phi i1 [ true, %38 ], [ true, %8 ], [ %46, %44 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14SVGSMILElement17UpdateActiveStateENS_8SMILTimeEb(%"class.blink::SVGSMILElement"*, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::SVGSMILElement::NotifyDependentsInfo", align 8
  %5 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %6 = load i8, i8* %5, align 8
  %7 = and i8 %6, 3
  %8 = icmp eq i8 %7, 1
  %9 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %10, %1
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %1
  br i1 %15, label %23, label %16

16:                                               ; preds = %12, %3
  %17 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 7
  %18 = load i8, i8* %17, align 2, !range !26
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = lshr i8 %6, 3
  %22 = and i8 %21, 2
  br label %23

23:                                               ; preds = %12, %16, %20
  %24 = phi i8 [ %22, %20 ], [ 1, %12 ], [ 0, %16 ]
  %25 = and i8 %6, -4
  %26 = or i8 %24, %25
  store i8 %26, i8* %5, align 8
  %27 = icmp eq i8 %24, 1
  %28 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 27
  %29 = load i8, i8* %28, align 8, !range !26
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 14, i32 1, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, %10
  br label %35

35:                                               ; preds = %23, %31
  %36 = phi i1 [ false, %23 ], [ %34, %31 ]
  store i8 0, i8* %28, align 8
  %37 = xor i1 %27, true
  %38 = and i1 %8, %37
  %39 = or i1 %38, %36
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  tail call void @_ZN5blink14SVGSMILElement19EndedActiveIntervalEv(%"class.blink::SVGSMILElement"* %0)
  br label %41

41:                                               ; preds = %35, %40
  %42 = phi i32 [ 4, %40 ], [ 0, %35 ]
  %43 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement14IsContributingENS_8SMILTimeE(%"class.blink::SVGSMILElement"* %0, i64 %1)
  br i1 %43, label %44, label %117

44:                                               ; preds = %41
  %45 = xor i1 %8, true
  %46 = and i1 %27, %45
  %47 = or i1 %46, %36
  br i1 %47, label %48, label %51

48:                                               ; preds = %44
  %49 = or i32 %42, 1
  %50 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 7
  store i8 0, i8* %50, align 2
  br label %51

51:                                               ; preds = %44, %48
  %52 = phi i32 [ %49, %48 ], [ %42, %44 ]
  br i1 %2, label %117, label %53

53:                                               ; preds = %51
  %54 = tail call i64 @_ZNK5blink14SVGSMILElement22CalculateProgressStateENS_8SMILTimeE(%"class.blink::SVGSMILElement"* %0, i64 %1)
  %55 = trunc i64 %54 to i32
  %56 = lshr i64 %54, 32
  %57 = trunc i64 %56 to i32
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %112, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 17, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %57
  br i1 %62, label %112, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #16
  %65 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 0
  store i32 3, i32* %65, align 8
  %66 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 1
  store i32 %57, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 2, i32 0, i32 0
  store i64 %1, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 3, i32 0, i32 0
  store i64 9223372036854775807, i64* %68, align 8
  %69 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 29
  %70 = load i8, i8* %69, align 2, !range !26
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %110

72:                                               ; preds = %63
  store i8 1, i8* %69, align 1
  %73 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %77 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %77, i64 %80
  br i1 %75, label %94, label %82

82:                                               ; preds = %72
  %83 = icmp eq i32 %79, 0
  br i1 %83, label %91, label %84

84:                                               ; preds = %82, %88
  %85 = phi %"class.blink::Member.50"* [ %89, %88 ], [ %77, %82 ]
  %86 = bitcast %"class.blink::Member.50"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  switch i64 %87, label %91 [
    i64 -1, label %88
    i64 0, label %88
  ]

88:                                               ; preds = %84, %84
  %89 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %85, i64 1
  %90 = icmp eq %"class.blink::Member.50"* %89, %81
  br i1 %90, label %94, label %84

91:                                               ; preds = %84, %82
  %92 = phi %"class.blink::Member.50"* [ %77, %82 ], [ %85, %84 ]
  %93 = icmp eq %"class.blink::Member.50"* %92, %81
  br i1 %93, label %94, label %95

94:                                               ; preds = %88, %108, %95, %105, %91, %72
  store i8 0, i8* %69, align 1
  br label %110

95:                                               ; preds = %91, %108
  %96 = phi %"class.blink::Member.50"* [ %102, %108 ], [ %92, %91 ]
  %97 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %96, i64 0, i32 0, i32 0
  %98 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %97, align 8
  call void @_ZN5blink14SVGSMILElement31CreateInstanceTimesFromSyncBaseEPS0_RKNS0_20NotifyDependentsInfoE(%"class.blink::SVGSMILElement"* %98, %"class.blink::SVGSMILElement"* %0, %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* nonnull dereferenceable(24) %4) #16
  %99 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %96, i64 1
  %100 = icmp eq %"class.blink::Member.50"* %99, %81
  br i1 %100, label %94, label %101

101:                                              ; preds = %95, %105
  %102 = phi %"class.blink::Member.50"* [ %106, %105 ], [ %99, %95 ]
  %103 = bitcast %"class.blink::Member.50"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  switch i64 %104, label %108 [
    i64 -1, label %105
    i64 0, label %105
  ]

105:                                              ; preds = %101, %101
  %106 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %102, i64 1
  %107 = icmp eq %"class.blink::Member.50"* %106, %81
  br i1 %107, label %94, label %101

108:                                              ; preds = %101
  %109 = icmp eq %"class.blink::Member.50"* %102, %81
  br i1 %109, label %94, label %95

110:                                              ; preds = %63, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #16
  %111 = or i32 %52, 2
  br label %112

112:                                              ; preds = %59, %53, %110
  %113 = phi i32 [ %111, %110 ], [ %52, %59 ], [ %52, %53 ]
  %114 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 17, i32 0
  %115 = bitcast float* %114 to i32*
  store i32 %55, i32* %115, align 4
  %116 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 17, i32 1
  store i32 %57, i32* %116, align 4
  br label %117

117:                                              ; preds = %51, %112, %41
  %118 = phi i32 [ %52, %51 ], [ %113, %112 ], [ %42, %41 ]
  ret i32 %118
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement24NotifyDependentsOnRepeatEjNS_8SMILTimeE(%"class.blink::SVGSMILElement"*, i32, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::SVGSMILElement::NotifyDependentsInfo", align 8
  %5 = bitcast %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 0
  store i32 3, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 1
  store i32 %1, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 2, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %4, i64 0, i32 3, i32 0, i32 0
  store i64 9223372036854775807, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 29
  %11 = load i8, i8* %10, align 2, !range !26
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %51

13:                                               ; preds = %3
  store i8 1, i8* %10, align 1
  %14 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %18, i64 %21
  br i1 %16, label %35, label %23

23:                                               ; preds = %13
  %24 = icmp eq i32 %20, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %23, %29
  %26 = phi %"class.blink::Member.50"* [ %30, %29 ], [ %18, %23 ]
  %27 = bitcast %"class.blink::Member.50"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  switch i64 %28, label %32 [
    i64 -1, label %29
    i64 0, label %29
  ]

29:                                               ; preds = %25, %25
  %30 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %26, i64 1
  %31 = icmp eq %"class.blink::Member.50"* %30, %22
  br i1 %31, label %35, label %25

32:                                               ; preds = %25, %23
  %33 = phi %"class.blink::Member.50"* [ %18, %23 ], [ %26, %25 ]
  %34 = icmp eq %"class.blink::Member.50"* %33, %22
  br i1 %34, label %35, label %36

35:                                               ; preds = %29, %49, %36, %46, %32, %13
  store i8 0, i8* %10, align 1
  br label %51

36:                                               ; preds = %32, %49
  %37 = phi %"class.blink::Member.50"* [ %43, %49 ], [ %33, %32 ]
  %38 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %38, align 8
  call void @_ZN5blink14SVGSMILElement31CreateInstanceTimesFromSyncBaseEPS0_RKNS0_20NotifyDependentsInfoE(%"class.blink::SVGSMILElement"* %39, %"class.blink::SVGSMILElement"* %0, %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* nonnull dereferenceable(24) %4) #16
  %40 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %37, i64 1
  %41 = icmp eq %"class.blink::Member.50"* %40, %22
  br i1 %41, label %35, label %42

42:                                               ; preds = %36, %46
  %43 = phi %"class.blink::Member.50"* [ %47, %46 ], [ %40, %36 ]
  %44 = bitcast %"class.blink::Member.50"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %49 [
    i64 -1, label %46
    i64 0, label %46
  ]

46:                                               ; preds = %42, %42
  %47 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %43, i64 1
  %48 = icmp eq %"class.blink::Member.50"* %47, %22
  br i1 %48, label %35, label %42

49:                                               ; preds = %42
  %50 = icmp eq %"class.blink::Member.50"* %43, %22
  br i1 %50, label %35, label %36

51:                                               ; preds = %3, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink14SVGSMILElement17ComputeSeekEventsERKNS_12SMILIntervalE(%"class.blink::SVGSMILElement"* nocapture readonly, %"struct.blink::SMILInterval"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %4 = load i8, i8* %3, align 8
  %5 = and i8 %4, 3
  %6 = icmp eq i8 %5, 1
  %7 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp slt i64 %8, 9223372036854775806
  br i1 %6, label %12, label %10

10:                                               ; preds = %2
  %11 = select i1 %9, i32 4, i32 0
  br label %24

12:                                               ; preds = %2
  br i1 %9, label %13, label %24

13:                                               ; preds = %12
  %14 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, %8
  br i1 %16, label %17, label %24

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.blink::SMILInterval", %"struct.blink::SMILInterval"* %1, i64 0, i32 1, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 13, i32 1, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, %19
  %23 = select i1 %22, i32 0, i32 5
  ret i32 %23

24:                                               ; preds = %13, %12, %10
  %25 = phi i32 [ %11, %10 ], [ 1, %12 ], [ 5, %13 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement14DispatchEventsENS0_17EventDispatchMaskE(%"class.blink::SVGSMILElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = and i32 %1, 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kEndEventE, align 8
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #16
  %10 = bitcast i8* %9 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %10, %"class.WTF::AtomicString"* dereferenceable(8) %8, i32 1, i32 1, i32 1) #16
  %11 = getelementptr inbounds i8, i8* %9, i64 -4
  %12 = bitcast i8* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = or i16 %13, 1
  store atomic i16 %14, i16* %12 release, align 2
  tail call void @_ZN5blink11EventTarget12EnqueueEventERNS_5EventENS_8TaskTypeE(%"class.blink::EventTarget"* %7, %"class.blink::Event"* dereferenceable(104) %10, i8 zeroext 1) #16
  br label %15

15:                                               ; preds = %2, %6
  %16 = and i32 %1, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names11kBeginEventE, align 8
  %21 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #16
  %22 = bitcast i8* %21 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %22, %"class.WTF::AtomicString"* dereferenceable(8) %20, i32 1, i32 1, i32 1) #16
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  tail call void @_ZN5blink11EventTarget12EnqueueEventERNS_5EventENS_8TaskTypeE(%"class.blink::EventTarget"* %19, %"class.blink::Event"* dereferenceable(104) %22, i8 zeroext 1) #16
  br label %27

27:                                               ; preds = %15, %18
  %28 = and i32 %1, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %63, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kRepeatEventE, align 8
  %33 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #16
  %34 = bitcast i8* %33 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %34, %"class.WTF::AtomicString"* dereferenceable(8) %32, i32 1, i32 1, i32 1) #16
  %35 = getelementptr inbounds i8, i8* %33, i64 -4
  %36 = bitcast i8* %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = or i16 %37, 1
  store atomic i16 %38, i16* %36 release, align 2
  tail call void @_ZN5blink11EventTarget12EnqueueEventERNS_5EventENS_8TaskTypeE(%"class.blink::EventTarget"* %31, %"class.blink::Event"* dereferenceable(104) %34, i8 zeroext 1) #16
  %39 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i64 7) #16
  %40 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #16
  %41 = bitcast i8* %40 to %"class.blink::Event"*
  call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %41, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, i32 1, i32 1, i32 1) #16
  %42 = getelementptr inbounds i8, i8* %40, i64 -4
  %43 = bitcast i8* %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = or i16 %44, 1
  store atomic i16 %45, i16* %43 release, align 2
  call void @_ZN5blink11EventTarget12EnqueueEventERNS_5EventENS_8TaskTypeE(%"class.blink::EventTarget"* %31, %"class.blink::Event"* dereferenceable(104) %41, i8 zeroext 1) #16
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %30
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #16
  br label %62

62:                                               ; preds = %30, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  br label %63

63:                                               ; preds = %27, %62
  ret void
}

declare void @_ZN5blink11EventTarget12EnqueueEventERNS_5EventENS_8TaskTypeE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104), i8 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::SVGSMILElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink10SVGElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::SVGElement"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::RegisteredEventListener"* dereferenceable(16) %2) #16
  %7 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %13, i64* %14, align 8
  br label %23

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %21 = bitcast i8** %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %21, align 8
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %23

23:                                               ; preds = %15, %11
  %24 = phi i64 [ %22, %15 ], [ %13, %11 ]
  %25 = phi i32 [ %18, %15 ], [ 0, %11 ]
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %25, i32* %26, align 8
  %27 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #16
  %28 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %24, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 7, i32* %30, align 8
  %31 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #16
  br i1 %31, label %32, label %42

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %36, i64 0, i32 2
  %38 = bitcast %"class.blink::UseCounter"* %37 to void (%"class.blink::UseCounter"*, i32)***
  %39 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %39, i64 3
  %41 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %40, align 8
  call void %41(%"class.blink::UseCounter"* %37, i32 3471) #16
  br label %42

42:                                               ; preds = %32, %23
  ret void
}

declare void @_ZN5blink10SVGElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::SVGElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement19UpdateProgressStateENS_8SMILTimeE(%"class.blink::SVGSMILElement"*, i64) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZNK5blink14SVGSMILElement22CalculateProgressStateENS_8SMILTimeE(%"class.blink::SVGSMILElement"* %0, i64 %1)
  %4 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 17
  %5 = bitcast %"struct.blink::SVGSMILElement::ProgressState"* %4 to i64*
  store i64 %3, i64* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement16NotifyDependentsERKNS0_20NotifyDependentsInfoE(%"class.blink::SVGSMILElement"*, %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 29
  %4 = load i8, i8* %3, align 2, !range !26
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %46

6:                                                ; preds = %2
  store i8 1, i8* %3, align 1
  %7 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %11 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %11, i64 %14
  br i1 %9, label %28, label %16

16:                                               ; preds = %6
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"class.blink::Member.50"* [ %23, %22 ], [ %11, %16 ]
  %20 = bitcast %"class.blink::Member.50"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %25 [
    i64 -1, label %22
    i64 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %19, i64 1
  %24 = icmp eq %"class.blink::Member.50"* %23, %15
  br i1 %24, label %28, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"class.blink::Member.50"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"class.blink::Member.50"* %26, %15
  br i1 %27, label %28, label %31

28:                                               ; preds = %22, %31, %44, %41, %6, %25
  %29 = icmp eq i8* %3, null
  br i1 %29, label %46, label %30

30:                                               ; preds = %28
  store i8 0, i8* %3, align 1
  br label %46

31:                                               ; preds = %25, %44
  %32 = phi %"class.blink::Member.50"* [ %38, %44 ], [ %26, %25 ]
  %33 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %33, align 8
  tail call void @_ZN5blink14SVGSMILElement31CreateInstanceTimesFromSyncBaseEPS0_RKNS0_20NotifyDependentsInfoE(%"class.blink::SVGSMILElement"* %34, %"class.blink::SVGSMILElement"* %0, %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* dereferenceable(24) %1)
  %35 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %32, i64 1
  %36 = icmp eq %"class.blink::Member.50"* %35, %15
  br i1 %36, label %28, label %37

37:                                               ; preds = %31, %41
  %38 = phi %"class.blink::Member.50"* [ %42, %41 ], [ %35, %31 ]
  %39 = bitcast %"class.blink::Member.50"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %44 [
    i64 -1, label %41
    i64 0, label %41
  ]

41:                                               ; preds = %37, %37
  %42 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %38, i64 1
  %43 = icmp eq %"class.blink::Member.50"* %42, %15
  br i1 %43, label %28, label %37

44:                                               ; preds = %37
  %45 = icmp eq %"class.blink::Member.50"* %38, %15
  br i1 %45, label %28, label %31

46:                                               ; preds = %30, %28, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement31CreateInstanceTimesFromSyncBaseEPS0_RKNS0_20NotifyDependentsInfoE(%"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"* readnone, %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.blink::SMILTimeWithOrigin", align 8
  %12 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member.59"*, %"class.blink::Member.59"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %54, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %1, i64 0, i32 0
  %21 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %2, i64 0, i32 0
  %22 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %2, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %2, i64 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.logging::CheckError"* %10 to i8*
  %25 = bitcast %"class.WTF::StringView"* %5 to i8*
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  %29 = bitcast %"class.WTF::StringView"* %5 to i64*
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %31 = bitcast %"class.WTF::StringView"* %6 to i8*
  %32 = bitcast %"class.WTF::StringView"* %6 to i64*
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %35 = bitcast %"class.WTF::StringView"* %7 to i8*
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %38 = bitcast i8** %37 to %"class.WTF::StringImpl"**
  %39 = bitcast %"class.WTF::StringView"* %7 to i64*
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %41 = bitcast %"class.WTF::StringView"* %8 to i8*
  %42 = bitcast %"class.WTF::StringView"* %8 to i64*
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %45 = getelementptr inbounds %"struct.blink::SVGSMILElement::NotifyDependentsInfo", %"struct.blink::SVGSMILElement::NotifyDependentsInfo"* %2, i64 0, i32 3, i32 0, i32 0
  %46 = bitcast %"class.logging::CheckError"* %9 to i8*
  %47 = bitcast %"class.logging::CheckError"* %4 to i8*
  %48 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11
  %49 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 12
  %50 = bitcast %"class.blink::SMILTimeWithOrigin"* %11 to i8*
  %51 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %11, i64 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %11, i64 0, i32 1
  %53 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 28
  br label %58

54:                                               ; preds = %235, %3
  %55 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 28
  %56 = load i8, i8* %55, align 1, !range !26
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %243, label %238

58:                                               ; preds = %19, %235
  %59 = phi %"class.blink::Member.59"* [ %13, %19 ], [ %236, %235 ]
  %60 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.blink::SVGSMILElement::Condition"*, %"class.blink::SVGSMILElement::Condition"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %61, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %235

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %61, i64 0, i32 6, i32 0, i32 0
  %67 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %66, align 8
  %68 = icmp eq %"class.blink::SVGElement"* %67, %20
  br i1 %68, label %69, label %235

69:                                               ; preds = %65
  %70 = load i32, i32* %21, align 8
  %71 = icmp eq i32 %70, 2
  br i1 %71, label %72, label %153

72:                                               ; preds = %69
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #16
  %73 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %61, i64 0, i32 3, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  store i8* null, i8** %27, align 8
  %77 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %77, i64* %29, align 8
  br label %83

78:                                               ; preds = %72
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %26, align 8
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 1
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %28, align 8
  %82 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %83

83:                                               ; preds = %78, %76
  %84 = phi i64 [ %82, %78 ], [ %77, %76 ]
  %85 = phi i32 [ %80, %78 ], [ 0, %76 ]
  store i32 %85, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  store i64 %84, i64* %32, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8** %33, align 8
  store i32 5, i32* %34, align 8
  %86 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #16
  br i1 %86, label %87, label %113

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %61, i64 0, i32 4, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = load i64, i64* %23, align 8
  %91 = icmp slt i64 %90, 9223372036854775806
  %92 = icmp slt i64 %89, 9223372036854775806
  %93 = and i1 %92, %91
  br i1 %93, label %94, label %235

94:                                               ; preds = %87
  %95 = add i64 %89, -9223372036854775807
  %96 = icmp ult i64 %95, 2
  br i1 %96, label %97, label %104

97:                                               ; preds = %94
  %98 = add i64 %90, -9223372036854775807
  %99 = icmp ugt i64 %98, 1
  %100 = icmp eq i64 %90, %89
  %101 = or i1 %100, %99
  br i1 %101, label %184, label %102

102:                                              ; preds = %97
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i64 0, i64 0)) #16
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #16
  br label %184

104:                                              ; preds = %94
  %105 = icmp slt i64 %89, 0
  %106 = select i1 %105, i64 -9223372036854775808, i64 9223372036854775807
  %107 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %90, i64 %89) #16
  %108 = extractvalue { i64, i1 } %107, 1
  %109 = extractvalue { i64, i1 } %107, 0
  %110 = select i1 %108, i64 %106, i64 %109, !prof !2
  %111 = icmp slt i64 %110, 9223372036854775805
  %112 = select i1 %111, i64 %110, i64 9223372036854775805
  br label %184

113:                                              ; preds = %83
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #16
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %116, label %118

116:                                              ; preds = %113
  store i8* null, i8** %37, align 8
  %117 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %117, i64* %39, align 8
  br label %123

118:                                              ; preds = %113
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %36, align 8
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 1
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %38, align 8
  %122 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %123

123:                                              ; preds = %118, %116
  %124 = phi i64 [ %122, %118 ], [ %117, %116 ]
  %125 = phi i32 [ %120, %118 ], [ 0, %116 ]
  store i32 %125, i32* %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #16
  store i64 %124, i64* %42, align 8
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8** %43, align 8
  store i32 3, i32* %44, align 8
  %126 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #16
  br i1 %126, label %127, label %235

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %61, i64 0, i32 4, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = load i64, i64* %45, align 8
  %131 = icmp slt i64 %130, 9223372036854775806
  %132 = icmp slt i64 %129, 9223372036854775806
  %133 = and i1 %132, %131
  br i1 %133, label %134, label %235

134:                                              ; preds = %127
  %135 = add i64 %129, -9223372036854775807
  %136 = icmp ult i64 %135, 2
  br i1 %136, label %137, label %144

137:                                              ; preds = %134
  %138 = add i64 %130, -9223372036854775807
  %139 = icmp ugt i64 %138, 1
  %140 = icmp eq i64 %130, %129
  %141 = or i1 %140, %139
  br i1 %141, label %184, label %142

142:                                              ; preds = %137
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i64 0, i64 0)) #16
  %143 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #16
  br label %184

144:                                              ; preds = %134
  %145 = icmp slt i64 %129, 0
  %146 = select i1 %145, i64 -9223372036854775808, i64 9223372036854775807
  %147 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %130, i64 %129) #16
  %148 = extractvalue { i64, i1 } %147, 1
  %149 = extractvalue { i64, i1 } %147, 0
  %150 = select i1 %148, i64 %146, i64 %149, !prof !2
  %151 = icmp slt i64 %150, 9223372036854775805
  %152 = select i1 %151, i64 %150, i64 9223372036854775805
  br label %184

153:                                              ; preds = %69
  %154 = load i32, i32* %22, align 4
  %155 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %61, i64 0, i32 5
  %156 = load i32, i32* %155, align 8
  %157 = icmp eq i32 %154, %156
  br i1 %157, label %158, label %235

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %61, i64 0, i32 4, i32 0, i32 0
  %160 = load i64, i64* %159, align 8
  %161 = load i64, i64* %23, align 8
  %162 = icmp slt i64 %161, 9223372036854775806
  %163 = icmp slt i64 %160, 9223372036854775806
  %164 = and i1 %163, %162
  br i1 %164, label %165, label %235

165:                                              ; preds = %158
  %166 = add i64 %160, -9223372036854775807
  %167 = icmp ult i64 %166, 2
  br i1 %167, label %168, label %175

168:                                              ; preds = %165
  %169 = add i64 %161, -9223372036854775807
  %170 = icmp ugt i64 %169, 1
  %171 = icmp eq i64 %161, %160
  %172 = or i1 %171, %170
  br i1 %172, label %184, label %173

173:                                              ; preds = %168
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i64 0, i64 0)) #16
  %174 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  br label %184

175:                                              ; preds = %165
  %176 = icmp slt i64 %160, 0
  %177 = select i1 %176, i64 -9223372036854775808, i64 9223372036854775807
  %178 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %161, i64 %160) #16
  %179 = extractvalue { i64, i1 } %178, 1
  %180 = extractvalue { i64, i1 } %178, 0
  %181 = select i1 %179, i64 %177, i64 %180, !prof !2
  %182 = icmp slt i64 %181, 9223372036854775805
  %183 = select i1 %182, i64 %181, i64 9223372036854775805
  br label %184

184:                                              ; preds = %175, %144, %104, %97, %102, %137, %142, %168, %173
  %185 = phi i64 [ -9223372036854775808, %173 ], [ -9223372036854775808, %168 ], [ -9223372036854775808, %142 ], [ -9223372036854775808, %137 ], [ -9223372036854775808, %102 ], [ -9223372036854775808, %97 ], [ %112, %104 ], [ %152, %144 ], [ %183, %175 ]
  %186 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %61, i64 0, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = load i32, i32* %21, align 8
  %189 = icmp eq i32 %187, 0
  %190 = select i1 %189, %"class.blink::SMILInstanceTimeList"* %48, %"class.blink::SMILInstanceTimeList"* %49
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 16, i1 false) #16
  store i64 %185, i64* %51, align 8
  store i32 %188, i32* %52, align 8
  %191 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %190, i64 0, i32 0
  %192 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %190, i64 0, i32 0, i32 0, i32 0, i32 0
  %193 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %192, align 8
  %194 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %190, i64 0, i32 0, i32 0, i32 0, i32 2
  %195 = load i32, i32* %194, align 4
  %196 = zext i32 %195 to i64
  %197 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %193, i64 %196
  %198 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %193 to i64
  %199 = icmp eq i32 %195, 0
  br i1 %199, label %214, label %200

200:                                              ; preds = %184, %200
  %201 = phi i64 [ %212, %200 ], [ %196, %184 ]
  %202 = phi %"class.blink::SMILTimeWithOrigin"* [ %211, %200 ], [ %193, %184 ]
  %203 = lshr i64 %201, 1
  %204 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %202, i64 %203
  %205 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %204, i64 0, i32 0, i32 0, i32 0
  %206 = load i64, i64* %205, align 8
  %207 = icmp slt i64 %206, %185
  %208 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %204, i64 1
  %209 = xor i64 %203, -1
  %210 = add i64 %201, %209
  %211 = select i1 %207, %"class.blink::SMILTimeWithOrigin"* %208, %"class.blink::SMILTimeWithOrigin"* %202
  %212 = select i1 %207, i64 %210, i64 %203
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %200

214:                                              ; preds = %200, %184
  %215 = phi %"class.blink::SMILTimeWithOrigin"* [ %193, %184 ], [ %211, %200 ]
  %216 = icmp eq %"class.blink::SMILTimeWithOrigin"* %215, %197
  br i1 %216, label %225, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %215, i64 0, i32 0, i32 0, i32 0
  %219 = load i64, i64* %218, align 8
  %220 = icmp eq i64 %219, %185
  br i1 %220, label %221, label %225

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %215, i64 0, i32 1
  %223 = load i32, i32* %222, align 8
  %224 = icmp eq i32 %223, %188
  br i1 %224, label %234, label %225

225:                                              ; preds = %221, %217, %214
  %226 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %215 to i64
  %227 = sub i64 %226, %198
  %228 = lshr exact i64 %227, 4
  %229 = trunc i64 %228 to i32
  call void @_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE6insertIRS2_EEvjOT_(%"class.WTF::Vector"* %191, i32 %229, %"class.blink::SMILTimeWithOrigin"* nonnull dereferenceable(16) %11) #16
  %230 = shl i32 1, %188
  %231 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %190, i64 0, i32 1
  %232 = load i32, i32* %231, align 8
  %233 = or i32 %232, %230
  store i32 %233, i32* %231, align 8
  br label %234

234:                                              ; preds = %221, %225
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #16
  store i8 1, i8* %53, align 1
  br label %235

235:                                              ; preds = %58, %153, %158, %127, %87, %123, %65, %234
  %236 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %59, i64 1
  %237 = icmp eq %"class.blink::Member.59"* %236, %17
  br i1 %237, label %54, label %58

238:                                              ; preds = %54
  %239 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 29
  %240 = load i8, i8* %239, align 2, !range !26
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %238
  call void @_ZN5blink14SVGSMILElement19InstanceListChangedEv(%"class.blink::SVGSMILElement"* %0)
  br label %243

243:                                              ; preds = %238, %54, %242
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement21BeginByLinkActivationEv(%"class.blink::SVGSMILElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SMILTimeWithOrigin", align 8
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 19, i32 0, i32 0
  %4 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %3, align 8
  %5 = icmp eq %"class.blink::SMILTimeContainer"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call i64 @_ZNK5blink17SMILTimeContainer7ElapsedEv(%"class.blink::SMILTimeContainer"* nonnull %4) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i64 [ %7, %6 ], [ 0, %1 ]
  %10 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11
  %11 = bitcast %"class.blink::SMILTimeWithOrigin"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #16
  store i64 %9, i64* %12, align 8
  store i32 5, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %10, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %16, i64 %19
  %21 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %16 to i64
  %22 = icmp eq i32 %18, 0
  br i1 %22, label %37, label %23

23:                                               ; preds = %8, %23
  %24 = phi i64 [ %35, %23 ], [ %19, %8 ]
  %25 = phi %"class.blink::SMILTimeWithOrigin"* [ %34, %23 ], [ %16, %8 ]
  %26 = lshr i64 %24, 1
  %27 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %25, i64 %26
  %28 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp slt i64 %29, %9
  %31 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %27, i64 1
  %32 = xor i64 %26, -1
  %33 = add i64 %24, %32
  %34 = select i1 %30, %"class.blink::SMILTimeWithOrigin"* %31, %"class.blink::SMILTimeWithOrigin"* %25
  %35 = select i1 %30, i64 %33, i64 %26
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %23

37:                                               ; preds = %23, %8
  %38 = phi %"class.blink::SMILTimeWithOrigin"* [ %16, %8 ], [ %34, %23 ]
  %39 = icmp eq %"class.blink::SMILTimeWithOrigin"* %38, %20
  br i1 %39, label %48, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %38, i64 0, i32 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, %9
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %38, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 5
  br i1 %47, label %56, label %48

48:                                               ; preds = %44, %40, %37
  %49 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %38 to i64
  %50 = sub i64 %49, %21
  %51 = lshr exact i64 %50, 4
  %52 = trunc i64 %51 to i32
  call void @_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE6insertIRS2_EEvjOT_(%"class.WTF::Vector"* %14, i32 %52, %"class.blink::SMILTimeWithOrigin"* nonnull dereferenceable(16) %2) #16
  %53 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 11, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = or i32 %54, 32
  store i32 %55, i32* %53, align 8
  br label %56

56:                                               ; preds = %44, %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #16
  %57 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 28
  store i8 1, i8* %57, align 1
  call void @_ZN5blink14SVGSMILElement19InstanceListChangedEv(%"class.blink::SVGSMILElement"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SVGSMILElement14HasValidTargetEv(%"class.blink::SVGSMILElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElement"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %6) #16
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i1 [ false, %1 ], [ %7, %5 ]
  ret i1 %9
}

declare zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement25WillChangeAnimationTargetEv(%"class.blink::SVGSMILElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 1, !range !26
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 19, i32 0, i32 0
  %7 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %6, align 8
  tail call void @_ZN5blink17SMILTimeContainer10UnscheduleEPNS_14SVGSMILElementE(%"class.blink::SMILTimeContainer"* %7, %"class.blink::SVGSMILElement"* %0) #16
  %8 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 15
  %9 = load i8, i8* %8, align 8
  %10 = and i8 %9, 3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %5
  tail call void @_ZN5blink14SVGSMILElement19EndedActiveIntervalEv(%"class.blink::SVGSMILElement"* %0) #16
  br label %13

13:                                               ; preds = %5, %12
  store i8 0, i8* %2, align 1
  br label %14

14:                                               ; preds = %1, %13
  ret void
}

declare void @_ZN5blink17SMILTimeContainer10UnscheduleEPNS_14SVGSMILElementE(%"class.blink::SMILTimeContainer"*, %"class.blink::SVGSMILElement"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SVGSMILElement24DidChangeAnimationTargetEv(%"class.blink::SVGSMILElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 19, i32 0, i32 0
  %3 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %2, align 8
  %4 = icmp eq %"class.blink::SMILTimeContainer"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %6, align 8
  %8 = icmp eq %"class.blink::SVGElement"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %7, i64 0, i32 0, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %10) #16
  br i1 %11, label %12, label %15

12:                                               ; preds = %9
  %13 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %2, align 8
  tail call void @_ZN5blink17SMILTimeContainer8ScheduleEPNS_14SVGSMILElementE(%"class.blink::SMILTimeContainer"* %13, %"class.blink::SVGSMILElement"* %0) #16
  tail call void @_ZN5blink14SVGSMILElement20AddedToTimeContainerEv(%"class.blink::SVGSMILElement"* %0)
  %14 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 8
  store i8 1, i8* %14, align 1
  br label %15

15:                                               ; preds = %1, %5, %9, %12
  ret void
}

declare void @_ZN5blink17SMILTimeContainer8ScheduleEPNS_14SVGSMILElementE(%"class.blink::SMILTimeContainer"*, %"class.blink::SVGSMILElement"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SVGSMILElement5TraceEPNS_7VisitorE(%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv) #16
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.40"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16IdTargetObserverEE5TraceEPNS_7VisitorEPKv) #16
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 19
  %26 = bitcast %"class.blink::Member.68"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SMILTimeContainerEE5TraceEPNS_7VisitorEPKv) #16
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 4
  %37 = bitcast %"class.blink::HeapVector"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  %40 = bitcast %"class.blink::HeapVector"* %36 to i8**
  %41 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %42 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %42, i64 11
  %44 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %1, i8** %40) #16
  br i1 %39, label %51, label %45

45:                                               ; preds = %35
  %46 = inttoptr i64 %38 to i8*
  %47 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, i64 5
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %49, align 8
  tail call void %50(%"class.blink::Visitor"* %1, i8* nonnull %46, i8* nonnull %46, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #16
  br label %51

51:                                               ; preds = %35, %45
  %52 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 10
  %53 = bitcast %"class.blink::HeapHashSet.62"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = bitcast %"class.blink::HeapHashSet.62"* %52 to i8**
  %56 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %41, align 8
  %57 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %56, i64 11
  %58 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %57, align 8
  tail call void %58(%"class.blink::Visitor"* %1, i8** %55) #16
  %59 = icmp eq i64 %54, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %51
  %61 = inttoptr i64 %54 to i8*
  %62 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, i64 5
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %64, align 8
  tail call void %65(%"class.blink::Visitor"* %1, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #16
  br label %66

66:                                               ; preds = %51, %60
  %67 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 0
  tail call void @_ZNK5blink10SVGElement5TraceEPNS_7VisitorE(%"class.blink::SVGElement"* %67, %"class.blink::Visitor"* %1) #16
  %68 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 0, i32 1
  tail call void @_ZNK5blink8SVGTests5TraceEPNS_7VisitorE(%"class.blink::SVGTests"* %68, %"class.blink::Visitor"* %1) #16
  ret void
}

declare void @_ZNK5blink10SVGElement5TraceEPNS_7VisitorE(%"class.blink::SVGElement"*, %"class.blink::Visitor"*) unnamed_addr #4

declare void @_ZNK5blink8SVGTests5TraceEPNS_7VisitorE(%"class.blink::SVGTests"*, %"class.blink::Visitor"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn168_NK5blink14SVGSMILElement5TraceEPNS_7VisitorE(%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %0, i64 -1, i32 10, i32 0, i32 0, i32 3
  %4 = bitcast i32* %3 to %"class.blink::SVGSMILElement"*
  tail call void @_ZNK5blink14SVGSMILElement5TraceEPNS_7VisitorE(%"class.blink::SVGSMILElement"* %4, %"class.blink::Visitor"* %1)
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #16
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink10SVGElement18GetWrapperTypeInfoEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink10SVGElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #4

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #4

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #4

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #4

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #4

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #4

declare void @_ZN5blink10SVGElement20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::SVGElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #4

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #4

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #4

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element8nodeNameEv(%"class.blink::Element"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #4

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #4

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #4

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #4

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #4

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23CanContainRangeEndPointEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #4

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #4

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #4

declare void @_ZNK5blink13ContainerNode11BoundingBoxEv() unnamed_addr

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #4

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #4

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #4

declare void @_ZN5blink10SVGElement16DetachLayoutTreeEb(%"class.blink::SVGElement"*, i1 zeroext) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #4

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #4

declare void @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #4

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #4

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #4

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #4

declare void @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node13DebugNodeNameEv(%"class.blink::Node"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #16
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink10SVGElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::SVGElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #4

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #4

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #4

declare %"class.WTF::HashMap.687"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #4

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #4

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

declare void @_ZN5blink10SVGElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGElement"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #4

declare void @_ZN5blink10SVGElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #4

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #4

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14SVGSMILElement20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::SVGSMILElement"*, %"class.blink::ComputedStyle"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::SVGElement"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #4

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #4

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement13SupportsFocusEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"*) unnamed_addr #4

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #4

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #4

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #4

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink10SVGElement5titleEv(%"class.blink::SVGElement"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #4

declare void @_ZN5blink7Element21FinishParsingChildrenEv(%"class.blink::Element"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BeginParsingChildrenEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, -1025
  store i32 %4, i32* %2, align 8
  ret void
}

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesEnabledPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27MatchesReadWritePseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element28MatchesValidityPseudoClassesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12willValidateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink7Element14IsValidElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDisabledFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #4

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::SVGElement"*, i64) unnamed_addr #4

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #4

declare void @_ZN5blink10SVGElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink7Element15DefaultTabIndexEv(%"class.blink::Element"*) unnamed_addr #4

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink10SVGElement29LocalCoordinateSpaceTransformENS0_8CTMScopeE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement20IsSVGGeometryElementEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement20IsSVGGraphicsElementEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement14IsFilterEffectEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement13IsTextContentEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement17IsTextPositioningEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement22IsStructurallyExternalEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement7IsValidEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AffineTransform"* @_ZN5blink10SVGElement22AnimateMotionTransformEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AffineTransform"* null
}

declare zeroext i1 @_ZN5blink10SVGElement27HaveLoadedRequiredResourcesEv(%"class.blink::SVGElement"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement22SelfHasRelativeLengthsEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"*, i16 zeroext) local_unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #16
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #16
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %26, i8* %27) #16
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #16
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #16
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #10

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #12

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #4

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, i16 zeroext, i1 zeroext, %"class.WTF::Vector.620"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN5blink10SVGElement19InvalidateInstancesEv(%"class.blink::SVGElement"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #10

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #10

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDelta6IntDivES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -9223372036854775807
  %8 = icmp ult i64 %7, 2
  br i1 %8, label %20, label %9

9:                                                ; preds = %2
  %10 = icmp eq i64 %1, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  %12 = sdiv i64 %6, %1
  br label %38

13:                                               ; preds = %9
  %14 = icmp eq i64 %6, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %13
  %16 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i32 313, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0)) #16
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  %18 = load i64, i64* %5, align 8
  %19 = add i64 %18, -9223372036854775807
  br label %20

20:                                               ; preds = %2, %13, %15
  %21 = phi i64 [ %7, %2 ], [ %7, %13 ], [ %19, %15 ]
  %22 = phi i64 [ %6, %2 ], [ %6, %13 ], [ %18, %15 ]
  %23 = add i64 %1, -9223372036854775807
  %24 = or i64 %21, %23
  %25 = icmp ult i64 %24, 2
  br i1 %25, label %26, label %30

26:                                               ; preds = %20
  %27 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i32 314, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i64 0, i64 0)) #16
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  %29 = load i64, i64* %5, align 8
  br label %30

30:                                               ; preds = %20, %26
  %31 = phi i64 [ %22, %20 ], [ %29, %26 ]
  %32 = lshr i64 %31, 63
  %33 = trunc i64 %32 to i32
  %34 = lshr i64 %1, 63
  %35 = trunc i64 %34 to i32
  %36 = icmp eq i32 %33, %35
  %37 = select i1 %36, i64 9223372036854775807, i64 -9223372036854775808
  br label %38

38:                                               ; preds = %30, %11
  %39 = phi i64 [ %37, %30 ], [ %12, %11 ]
  ret i64 %39
}

declare double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #4

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #2 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #16
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* %21, i8* %22) #16
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #16
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #16
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #16
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #16
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #4

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #4

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"*, %"class.blink::SMILTimeWithOrigin"* dereferenceable(16)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.blink::SMILTimeWithOrigin"* @_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector"* %0, i32 %5, %"class.blink::SMILTimeWithOrigin"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %8, i64 %10
  %12 = bitcast %"class.blink::SMILTimeWithOrigin"* %11 to i8*
  %13 = bitcast %"class.blink::SMILTimeWithOrigin"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false) #16
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SMILTimeWithOrigin"* @_ZN3WTF6VectorIN5blink18SMILTimeWithOriginELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector"*, i32, %"class.blink::SMILTimeWithOrigin"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %4, align 8
  %6 = icmp ugt %"class.blink::SMILTimeWithOrigin"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 %10
  %12 = icmp ugt %"class.blink::SMILTimeWithOrigin"* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::SMILTimeWithOrigin"* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18SMILTimeWithOriginEEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18SMILTimeWithOriginEEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 4
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"class.blink::SMILTimeWithOrigin"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"class.blink::SMILTimeWithOrigin"* %37 to i8*
  br i1 %40, label %42, label %49, !prof !3

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %2 to i64
  %55 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 4
  %58 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !3

68:                                               ; preds = %53
  %69 = icmp eq %"class.blink::SMILTimeWithOrigin"* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18SMILTimeWithOriginEEEmm(i64 %70) #16
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18SMILTimeWithOriginEEEPKcv, i64 0, i64 0)) #16
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"class.blink::SMILTimeWithOrigin"* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"class.blink::SMILTimeWithOrigin"* %77 to i8*
  br i1 %80, label %82, label %88, !prof !3

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #16
  %86 = bitcast %"class.WTF::Vector"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #16
  %90 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 4
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"class.blink::SMILTimeWithOrigin"*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"class.blink::SMILTimeWithOrigin"* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"class.blink::SMILTimeWithOrigin"* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"class.blink::SMILTimeWithOrigin"* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18SMILTimeWithOriginEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.23, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.24, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEvT0_S7_T_(%"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"*, %"struct.std::__1::__less.718"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %412, %3
  %5 = phi %"class.blink::SMILTimeWithOrigin"* [ %1, %3 ], [ %389, %412 ]
  %6 = phi %"class.blink::SMILTimeWithOrigin"* [ %0, %3 ], [ %26, %412 ]
  %7 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %5 to i64
  %8 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 -1
  %9 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::SMILTimeWithOrigin"* %8 to i8*
  %11 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 -1, i32 1
  %12 = bitcast %"class.blink::SMILTimeWithOrigin"* %8 to i8*
  %13 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 -1, i32 1
  %14 = bitcast %"class.blink::SMILTimeWithOrigin"* %8 to i8*
  %15 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 -1, i32 1
  %16 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %8, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.blink::SMILTimeWithOrigin"* %8 to i8*
  %18 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 -1, i32 1
  %19 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %8, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.blink::SMILTimeWithOrigin"* %8 to i8*
  %21 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 -1, i32 1
  %22 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %5 to i64
  br label %23

23:                                               ; preds = %421, %4
  %24 = phi %"class.blink::SMILTimeWithOrigin"* [ %6, %4 ], [ %422, %421 ]
  br label %25

25:                                               ; preds = %328, %23
  %26 = phi %"class.blink::SMILTimeWithOrigin"* [ %24, %23 ], [ %317, %328 ]
  %27 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %26 to i64
  %28 = sub i64 %7, %27
  %29 = ashr exact i64 %28, 4
  switch i64 %29, label %129 [
    i64 0, label %425
    i64 1, label %425
    i64 2, label %30
    i64 3, label %43
    i64 4, label %83
    i64 5, label %88
  ]

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 -1
  %32 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %31, i64 0, i32 0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp slt i64 %35, %33
  br i1 %36, label %37, label %425

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = bitcast %"class.blink::SMILTimeWithOrigin"* %26 to i8*
  %41 = bitcast %"class.blink::SMILTimeWithOrigin"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 12, i1 false) #16
  store i64 %33, i64* %34, align 8
  %42 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 -1, i32 1
  store i32 %39, i32* %42, align 8
  br label %425

43:                                               ; preds = %25
  %44 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 1
  %45 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 -1
  %46 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 0, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %44, i64 0, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp slt i64 %49, %47
  %51 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %45, i64 0, i32 0, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp slt i64 %52, %49
  br i1 %50, label %68, label %54

54:                                               ; preds = %43
  br i1 %53, label %55, label %425

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 1, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = bitcast %"class.blink::SMILTimeWithOrigin"* %44 to i8*
  %59 = bitcast %"class.blink::SMILTimeWithOrigin"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 12, i1 false) #16
  store i64 %49, i64* %51, align 8
  %60 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 -1, i32 1
  store i32 %57, i32* %60, align 8
  %61 = load i64, i64* %46, align 8
  %62 = load i64, i64* %48, align 8
  %63 = icmp slt i64 %62, %61
  br i1 %63, label %64, label %425

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = bitcast %"class.blink::SMILTimeWithOrigin"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %58, i64 12, i1 false) #16
  store i64 %61, i64* %48, align 8
  store i32 %66, i32* %56, align 8
  br label %425

68:                                               ; preds = %43
  %69 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = bitcast %"class.blink::SMILTimeWithOrigin"* %26 to i8*
  br i1 %53, label %72, label %75

72:                                               ; preds = %68
  %73 = bitcast %"class.blink::SMILTimeWithOrigin"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %73, i64 12, i1 false) #16
  store i64 %47, i64* %51, align 8
  %74 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 -1, i32 1
  store i32 %70, i32* %74, align 8
  br label %425

75:                                               ; preds = %68
  %76 = bitcast %"class.blink::SMILTimeWithOrigin"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %76, i64 12, i1 false) #16
  store i64 %47, i64* %48, align 8
  %77 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 1, i32 1
  store i32 %70, i32* %77, align 8
  %78 = load i64, i64* %51, align 8
  %79 = icmp slt i64 %78, %47
  br i1 %79, label %80, label %425

80:                                               ; preds = %75
  %81 = bitcast %"class.blink::SMILTimeWithOrigin"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %81, i64 12, i1 false) #16
  store i64 %47, i64* %51, align 8
  %82 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 -1, i32 1
  store i32 %70, i32* %82, align 8
  br label %425

83:                                               ; preds = %25
  %84 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 1
  %85 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 2
  %86 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 -1
  %87 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEjT0_S7_S7_S7_T_(%"class.blink::SMILTimeWithOrigin"* %26, %"class.blink::SMILTimeWithOrigin"* %84, %"class.blink::SMILTimeWithOrigin"* %85, %"class.blink::SMILTimeWithOrigin"* %86, %"struct.std::__1::__less.718"* dereferenceable(1) %2)
  br label %425

88:                                               ; preds = %25
  %89 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 1
  %90 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 2
  %91 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 3
  %92 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 -1
  %93 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEjT0_S7_S7_S7_T_(%"class.blink::SMILTimeWithOrigin"* %26, %"class.blink::SMILTimeWithOrigin"* %89, %"class.blink::SMILTimeWithOrigin"* %90, %"class.blink::SMILTimeWithOrigin"* %91, %"struct.std::__1::__less.718"* dereferenceable(1) %2) #16
  %94 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %91, i64 0, i32 0, i32 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %92, i64 0, i32 0, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = icmp slt i64 %97, %95
  br i1 %98, label %99, label %425

99:                                               ; preds = %88
  %100 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 3, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = bitcast %"class.blink::SMILTimeWithOrigin"* %91 to i8*
  %103 = bitcast %"class.blink::SMILTimeWithOrigin"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 12, i1 false) #16
  store i64 %95, i64* %96, align 8
  %104 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %5, i64 -1, i32 1
  store i32 %101, i32* %104, align 8
  %105 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %90, i64 0, i32 0, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = load i64, i64* %94, align 8
  %108 = icmp slt i64 %107, %106
  br i1 %108, label %109, label %425

109:                                              ; preds = %99
  %110 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 2, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = bitcast %"class.blink::SMILTimeWithOrigin"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %102, i64 12, i1 false) #16
  store i64 %106, i64* %94, align 8
  store i32 %111, i32* %100, align 8
  %113 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %89, i64 0, i32 0, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = load i64, i64* %105, align 8
  %116 = icmp slt i64 %115, %114
  br i1 %116, label %117, label %425

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 1, i32 1
  %119 = load i32, i32* %118, align 8
  %120 = bitcast %"class.blink::SMILTimeWithOrigin"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %112, i64 12, i1 false) #16
  store i64 %114, i64* %105, align 8
  store i32 %119, i32* %110, align 8
  %121 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 0, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = load i64, i64* %113, align 8
  %124 = icmp slt i64 %123, %122
  br i1 %124, label %125, label %425

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 1
  %127 = load i32, i32* %126, align 8
  %128 = bitcast %"class.blink::SMILTimeWithOrigin"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %120, i64 12, i1 false) #16
  store i64 %122, i64* %113, align 8
  store i32 %127, i32* %118, align 8
  br label %425

129:                                              ; preds = %25
  %130 = icmp slt i64 %28, 496
  br i1 %130, label %131, label %203

131:                                              ; preds = %129
  %132 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 2
  %133 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 1
  %134 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 0, i32 0, i32 0
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %133, i64 0, i32 0, i32 0, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = icmp slt i64 %137, %135
  %139 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %132, i64 0, i32 0, i32 0, i32 0
  %140 = load i64, i64* %139, align 8
  %141 = icmp slt i64 %140, %137
  br i1 %138, label %155, label %142

142:                                              ; preds = %131
  br i1 %141, label %143, label %169

143:                                              ; preds = %142
  %144 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 1, i32 1
  %145 = load i32, i32* %144, align 8
  %146 = bitcast %"class.blink::SMILTimeWithOrigin"* %133 to i8*
  %147 = bitcast %"class.blink::SMILTimeWithOrigin"* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 12, i1 false) #16
  store i64 %137, i64* %139, align 8
  %148 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 2, i32 1
  store i32 %145, i32* %148, align 8
  %149 = load i64, i64* %136, align 8
  %150 = icmp slt i64 %149, %135
  br i1 %150, label %151, label %169

151:                                              ; preds = %143
  %152 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = bitcast %"class.blink::SMILTimeWithOrigin"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %146, i64 12, i1 false) #16
  store i64 %135, i64* %136, align 8
  store i32 %153, i32* %144, align 8
  br label %169

155:                                              ; preds = %131
  %156 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 1
  %157 = load i32, i32* %156, align 8
  %158 = bitcast %"class.blink::SMILTimeWithOrigin"* %26 to i8*
  br i1 %141, label %159, label %162

159:                                              ; preds = %155
  %160 = bitcast %"class.blink::SMILTimeWithOrigin"* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %160, i64 12, i1 false) #16
  store i64 %135, i64* %139, align 8
  %161 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 2, i32 1
  store i32 %157, i32* %161, align 8
  br label %169

162:                                              ; preds = %155
  %163 = bitcast %"class.blink::SMILTimeWithOrigin"* %133 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %163, i64 12, i1 false) #16
  store i64 %135, i64* %136, align 8
  %164 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 1, i32 1
  store i32 %157, i32* %164, align 8
  %165 = icmp slt i64 %140, %135
  br i1 %165, label %166, label %169

166:                                              ; preds = %162
  %167 = bitcast %"class.blink::SMILTimeWithOrigin"* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %167, i64 12, i1 false) #16
  store i64 %135, i64* %139, align 8
  %168 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 2, i32 1
  store i32 %157, i32* %168, align 8
  br label %169

169:                                              ; preds = %166, %162, %159, %151, %143, %142
  %170 = phi i64 [ %140, %142 ], [ %137, %143 ], [ %137, %151 ], [ %135, %159 ], [ %140, %162 ], [ %135, %166 ]
  %171 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 3
  %172 = icmp eq %"class.blink::SMILTimeWithOrigin"* %171, %5
  br i1 %172, label %425, label %173

173:                                              ; preds = %169, %201
  %174 = phi i64 [ %202, %201 ], [ %170, %169 ]
  %175 = phi %"class.blink::SMILTimeWithOrigin"* [ %199, %201 ], [ %171, %169 ]
  %176 = phi %"class.blink::SMILTimeWithOrigin"* [ %175, %201 ], [ %132, %169 ]
  %177 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %175, i64 0, i32 0, i32 0, i32 0
  %178 = load i64, i64* %177, align 8
  %179 = icmp slt i64 %178, %174
  br i1 %179, label %180, label %198

180:                                              ; preds = %173
  %181 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %175, i64 0, i32 1
  %182 = load i32, i32* %181, align 8
  br label %183

183:                                              ; preds = %189, %180
  %184 = phi %"class.blink::SMILTimeWithOrigin"* [ %175, %180 ], [ %185, %189 ]
  %185 = phi %"class.blink::SMILTimeWithOrigin"* [ %176, %180 ], [ %190, %189 ]
  %186 = bitcast %"class.blink::SMILTimeWithOrigin"* %184 to i8*
  %187 = bitcast %"class.blink::SMILTimeWithOrigin"* %185 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %186, i8* align 8 %187, i64 12, i1 false) #16
  %188 = icmp eq %"class.blink::SMILTimeWithOrigin"* %185, %26
  br i1 %188, label %194, label %189

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %185, i64 -1
  %191 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %190, i64 0, i32 0, i32 0, i32 0
  %192 = load i64, i64* %191, align 8
  %193 = icmp slt i64 %178, %192
  br i1 %193, label %183, label %194

194:                                              ; preds = %189, %183
  %195 = phi %"class.blink::SMILTimeWithOrigin"* [ %26, %183 ], [ %185, %189 ]
  %196 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %195, i64 0, i32 0, i32 0, i32 0
  store i64 %178, i64* %196, align 8
  %197 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %195, i64 0, i32 1
  store i32 %182, i32* %197, align 8
  br label %198

198:                                              ; preds = %194, %173
  %199 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %175, i64 1
  %200 = icmp eq %"class.blink::SMILTimeWithOrigin"* %199, %5
  br i1 %200, label %425, label %201

201:                                              ; preds = %198
  %202 = load i64, i64* %177, align 8
  br label %173

203:                                              ; preds = %129
  %204 = icmp sgt i64 %28, 15984
  %205 = sdiv i64 %29, 2
  %206 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 %205
  br i1 %204, label %207, label %248

207:                                              ; preds = %203
  %208 = sdiv i64 %29, 4
  %209 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 %208
  %210 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %206, i64 %208
  %211 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEjT0_S7_S7_S7_T_(%"class.blink::SMILTimeWithOrigin"* %26, %"class.blink::SMILTimeWithOrigin"* %209, %"class.blink::SMILTimeWithOrigin"* %206, %"class.blink::SMILTimeWithOrigin"* %210, %"struct.std::__1::__less.718"* dereferenceable(1) %2) #16
  %212 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %210, i64 0, i32 0, i32 0, i32 0
  %213 = load i64, i64* %212, align 8
  %214 = load i64, i64* %16, align 8
  %215 = icmp slt i64 %214, %213
  br i1 %215, label %216, label %279

216:                                              ; preds = %207
  %217 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %210, i64 0, i32 1
  %218 = load i32, i32* %217, align 8
  %219 = bitcast %"class.blink::SMILTimeWithOrigin"* %210 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* align 8 %17, i64 12, i1 false) #16
  store i64 %213, i64* %16, align 8
  store i32 %218, i32* %18, align 8
  %220 = add i32 %211, 1
  %221 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %206, i64 0, i32 0, i32 0, i32 0
  %222 = load i64, i64* %221, align 8
  %223 = load i64, i64* %212, align 8
  %224 = icmp slt i64 %223, %222
  br i1 %224, label %225, label %279

225:                                              ; preds = %216
  %226 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 %205, i32 1
  %227 = load i32, i32* %226, align 8
  %228 = bitcast %"class.blink::SMILTimeWithOrigin"* %206 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %228, i8* align 8 %219, i64 12, i1 false) #16
  store i64 %222, i64* %212, align 8
  store i32 %227, i32* %217, align 8
  %229 = add i32 %211, 2
  %230 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %209, i64 0, i32 0, i32 0, i32 0
  %231 = load i64, i64* %230, align 8
  %232 = load i64, i64* %221, align 8
  %233 = icmp slt i64 %232, %231
  br i1 %233, label %234, label %279

234:                                              ; preds = %225
  %235 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 %208, i32 1
  %236 = load i32, i32* %235, align 8
  %237 = bitcast %"class.blink::SMILTimeWithOrigin"* %209 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %237, i8* align 8 %228, i64 12, i1 false) #16
  store i64 %231, i64* %221, align 8
  store i32 %236, i32* %226, align 8
  %238 = add i32 %211, 3
  %239 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 0, i32 0, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = load i64, i64* %230, align 8
  %242 = icmp slt i64 %241, %240
  br i1 %242, label %243, label %279

243:                                              ; preds = %234
  %244 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 1
  %245 = load i32, i32* %244, align 8
  %246 = bitcast %"class.blink::SMILTimeWithOrigin"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %246, i8* align 8 %237, i64 12, i1 false) #16
  store i64 %240, i64* %230, align 8
  store i32 %245, i32* %235, align 8
  %247 = add i32 %211, 4
  br label %279

248:                                              ; preds = %203
  %249 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 0, i32 0, i32 0
  %250 = load i64, i64* %249, align 8
  %251 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %206, i64 0, i32 0, i32 0, i32 0
  %252 = load i64, i64* %251, align 8
  %253 = icmp slt i64 %252, %250
  %254 = load i64, i64* %9, align 8
  %255 = icmp slt i64 %254, %252
  br i1 %253, label %268, label %256

256:                                              ; preds = %248
  br i1 %255, label %257, label %279

257:                                              ; preds = %256
  %258 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 %205, i32 1
  %259 = load i32, i32* %258, align 8
  %260 = bitcast %"class.blink::SMILTimeWithOrigin"* %206 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %260, i8* align 8 %10, i64 12, i1 false) #16
  store i64 %252, i64* %9, align 8
  store i32 %259, i32* %11, align 8
  %261 = load i64, i64* %249, align 8
  %262 = load i64, i64* %251, align 8
  %263 = icmp slt i64 %262, %261
  br i1 %263, label %264, label %279

264:                                              ; preds = %257
  %265 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 1
  %266 = load i32, i32* %265, align 8
  %267 = bitcast %"class.blink::SMILTimeWithOrigin"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %267, i8* align 8 %260, i64 12, i1 false) #16
  store i64 %261, i64* %251, align 8
  store i32 %266, i32* %258, align 8
  br label %279

268:                                              ; preds = %248
  %269 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 1
  %270 = load i32, i32* %269, align 8
  %271 = bitcast %"class.blink::SMILTimeWithOrigin"* %26 to i8*
  br i1 %255, label %272, label %273

272:                                              ; preds = %268
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %271, i8* align 8 %14, i64 12, i1 false) #16
  store i64 %250, i64* %9, align 8
  store i32 %270, i32* %15, align 8
  br label %279

273:                                              ; preds = %268
  %274 = bitcast %"class.blink::SMILTimeWithOrigin"* %206 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %271, i8* align 8 %274, i64 12, i1 false) #16
  store i64 %250, i64* %251, align 8
  %275 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 %205, i32 1
  store i32 %270, i32* %275, align 8
  %276 = load i64, i64* %9, align 8
  %277 = icmp slt i64 %276, %250
  br i1 %277, label %278, label %279

278:                                              ; preds = %273
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %274, i8* align 8 %12, i64 12, i1 false) #16
  store i64 %250, i64* %9, align 8
  store i32 %270, i32* %13, align 8
  br label %279

279:                                              ; preds = %278, %273, %272, %264, %257, %256, %243, %234, %225, %216, %207
  %280 = phi i32 [ %247, %243 ], [ %238, %234 ], [ %229, %225 ], [ %220, %216 ], [ %211, %207 ], [ 1, %272 ], [ 0, %256 ], [ 2, %264 ], [ 1, %257 ], [ 2, %278 ], [ 1, %273 ]
  %281 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %206, i64 0, i32 0, i32 0, i32 0
  %282 = load i64, i64* %281, align 8
  %283 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 0, i32 0, i32 0
  %284 = load i64, i64* %283, align 8
  %285 = icmp slt i64 %284, %282
  br i1 %285, label %349, label %286

286:                                              ; preds = %279, %337
  %287 = phi %"class.blink::SMILTimeWithOrigin"* [ %288, %337 ], [ %8, %279 ]
  %288 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %287, i64 -1
  %289 = icmp eq %"class.blink::SMILTimeWithOrigin"* %26, %288
  br i1 %289, label %290, label %337

290:                                              ; preds = %286
  %291 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 1
  %292 = load i64, i64* %19, align 8
  %293 = icmp slt i64 %284, %292
  br i1 %293, label %309, label %294

294:                                              ; preds = %290
  %295 = icmp eq %"class.blink::SMILTimeWithOrigin"* %291, %8
  br i1 %295, label %425, label %296

296:                                              ; preds = %294, %306
  %297 = phi %"class.blink::SMILTimeWithOrigin"* [ %307, %306 ], [ %291, %294 ]
  %298 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %297, i64 0, i32 0, i32 0, i32 0
  %299 = load i64, i64* %298, align 8
  %300 = icmp slt i64 %284, %299
  br i1 %300, label %301, label %306

301:                                              ; preds = %296
  %302 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %297, i64 0, i32 1
  %303 = load i32, i32* %302, align 8
  %304 = bitcast %"class.blink::SMILTimeWithOrigin"* %297 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %304, i8* align 8 %20, i64 12, i1 false) #16
  store i64 %299, i64* %19, align 8
  store i32 %303, i32* %21, align 8
  %305 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %297, i64 1
  br label %309

306:                                              ; preds = %296
  %307 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %297, i64 1
  %308 = icmp eq %"class.blink::SMILTimeWithOrigin"* %307, %8
  br i1 %308, label %425, label %296

309:                                              ; preds = %301, %290
  %310 = phi %"class.blink::SMILTimeWithOrigin"* [ %291, %290 ], [ %305, %301 ]
  %311 = icmp eq %"class.blink::SMILTimeWithOrigin"* %310, %8
  br i1 %311, label %425, label %312

312:                                              ; preds = %309, %330
  %313 = phi %"class.blink::SMILTimeWithOrigin"* [ %321, %330 ], [ %310, %309 ]
  %314 = phi %"class.blink::SMILTimeWithOrigin"* [ %324, %330 ], [ %8, %309 ]
  %315 = load i64, i64* %283, align 8
  br label %316

316:                                              ; preds = %316, %312
  %317 = phi %"class.blink::SMILTimeWithOrigin"* [ %313, %312 ], [ %321, %316 ]
  %318 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %317, i64 0, i32 0, i32 0, i32 0
  %319 = load i64, i64* %318, align 8
  %320 = icmp slt i64 %315, %319
  %321 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %317, i64 1
  br i1 %320, label %322, label %316

322:                                              ; preds = %316, %322
  %323 = phi %"class.blink::SMILTimeWithOrigin"* [ %324, %322 ], [ %314, %316 ]
  %324 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %323, i64 -1
  %325 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %324, i64 0, i32 0, i32 0, i32 0
  %326 = load i64, i64* %325, align 8
  %327 = icmp slt i64 %315, %326
  br i1 %327, label %322, label %328

328:                                              ; preds = %322
  %329 = icmp ult %"class.blink::SMILTimeWithOrigin"* %317, %324
  br i1 %329, label %330, label %25

330:                                              ; preds = %328
  %331 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %324, i64 0, i32 0, i32 0, i32 0
  %332 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %317, i64 0, i32 1
  %333 = load i32, i32* %332, align 8
  %334 = bitcast %"class.blink::SMILTimeWithOrigin"* %317 to i8*
  %335 = bitcast %"class.blink::SMILTimeWithOrigin"* %324 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %334, i8* align 8 %335, i64 12, i1 false) #16
  store i64 %319, i64* %331, align 8
  %336 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %323, i64 -1, i32 1
  store i32 %333, i32* %336, align 8
  br label %312

337:                                              ; preds = %286
  %338 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %288, i64 0, i32 0, i32 0, i32 0
  %339 = load i64, i64* %338, align 8
  %340 = icmp slt i64 %339, %282
  br i1 %340, label %341, label %286

341:                                              ; preds = %337
  %342 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %288, i64 0, i32 0, i32 0, i32 0
  %343 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 0, i32 1
  %344 = load i32, i32* %343, align 8
  %345 = bitcast %"class.blink::SMILTimeWithOrigin"* %26 to i8*
  %346 = bitcast %"class.blink::SMILTimeWithOrigin"* %288 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %345, i8* align 8 %346, i64 12, i1 false) #16
  store i64 %284, i64* %342, align 8
  %347 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %287, i64 -1, i32 1
  store i32 %344, i32* %347, align 8
  %348 = add i32 %280, 1
  br label %349

349:                                              ; preds = %279, %341
  %350 = phi i32 [ %348, %341 ], [ %280, %279 ]
  %351 = phi %"class.blink::SMILTimeWithOrigin"* [ %288, %341 ], [ %8, %279 ]
  %352 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %26 to i64
  %353 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %26, i64 1
  %354 = icmp ult %"class.blink::SMILTimeWithOrigin"* %353, %351
  br i1 %354, label %355, label %386

355:                                              ; preds = %349, %376
  %356 = phi %"class.blink::SMILTimeWithOrigin"* [ %385, %376 ], [ %206, %349 ]
  %357 = phi i32 [ %383, %376 ], [ %350, %349 ]
  %358 = phi %"class.blink::SMILTimeWithOrigin"* [ %367, %376 ], [ %353, %349 ]
  %359 = phi %"class.blink::SMILTimeWithOrigin"* [ %370, %376 ], [ %351, %349 ]
  %360 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %356, i64 0, i32 0, i32 0, i32 0
  %361 = load i64, i64* %360, align 8
  br label %362

362:                                              ; preds = %362, %355
  %363 = phi %"class.blink::SMILTimeWithOrigin"* [ %358, %355 ], [ %367, %362 ]
  %364 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %363, i64 0, i32 0, i32 0, i32 0
  %365 = load i64, i64* %364, align 8
  %366 = icmp slt i64 %365, %361
  %367 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %363, i64 1
  br i1 %366, label %362, label %368

368:                                              ; preds = %362, %368
  %369 = phi %"class.blink::SMILTimeWithOrigin"* [ %370, %368 ], [ %359, %362 ]
  %370 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %369, i64 -1
  %371 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %370, i64 0, i32 0, i32 0, i32 0
  %372 = load i64, i64* %371, align 8
  %373 = icmp slt i64 %372, %361
  br i1 %373, label %374, label %368

374:                                              ; preds = %368
  %375 = icmp ugt %"class.blink::SMILTimeWithOrigin"* %363, %370
  br i1 %375, label %386, label %376

376:                                              ; preds = %374
  %377 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %370, i64 0, i32 0, i32 0, i32 0
  %378 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %363, i64 0, i32 1
  %379 = load i32, i32* %378, align 8
  %380 = bitcast %"class.blink::SMILTimeWithOrigin"* %363 to i8*
  %381 = bitcast %"class.blink::SMILTimeWithOrigin"* %370 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %380, i8* align 8 %381, i64 12, i1 false) #16
  store i64 %365, i64* %377, align 8
  %382 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %369, i64 -1, i32 1
  store i32 %379, i32* %382, align 8
  %383 = add i32 %357, 1
  %384 = icmp eq %"class.blink::SMILTimeWithOrigin"* %356, %363
  %385 = select i1 %384, %"class.blink::SMILTimeWithOrigin"* %370, %"class.blink::SMILTimeWithOrigin"* %356
  br label %355

386:                                              ; preds = %374, %349
  %387 = phi %"class.blink::SMILTimeWithOrigin"* [ %206, %349 ], [ %356, %374 ]
  %388 = phi i32 [ %350, %349 ], [ %357, %374 ]
  %389 = phi %"class.blink::SMILTimeWithOrigin"* [ %353, %349 ], [ %363, %374 ]
  %390 = icmp eq %"class.blink::SMILTimeWithOrigin"* %389, %387
  br i1 %390, label %404, label %391

391:                                              ; preds = %386
  %392 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %389, i64 0, i32 0, i32 0, i32 0
  %393 = load i64, i64* %392, align 8
  %394 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %387, i64 0, i32 0, i32 0, i32 0
  %395 = load i64, i64* %394, align 8
  %396 = icmp slt i64 %395, %393
  br i1 %396, label %397, label %404

397:                                              ; preds = %391
  %398 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %389, i64 0, i32 1
  %399 = load i32, i32* %398, align 8
  %400 = bitcast %"class.blink::SMILTimeWithOrigin"* %389 to i8*
  %401 = bitcast %"class.blink::SMILTimeWithOrigin"* %387 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %400, i8* align 8 %401, i64 12, i1 false) #16
  store i64 %393, i64* %394, align 8
  %402 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %387, i64 0, i32 1
  store i32 %399, i32* %402, align 8
  %403 = add i32 %388, 1
  br label %404

404:                                              ; preds = %386, %397, %391
  %405 = phi i32 [ %403, %397 ], [ %388, %391 ], [ %388, %386 ]
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %414

407:                                              ; preds = %404
  %408 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEbT0_S7_T_(%"class.blink::SMILTimeWithOrigin"* %26, %"class.blink::SMILTimeWithOrigin"* %389, %"struct.std::__1::__less.718"* dereferenceable(1) %2)
  %409 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %389, i64 1
  %410 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEbT0_S7_T_(%"class.blink::SMILTimeWithOrigin"* %409, %"class.blink::SMILTimeWithOrigin"* %5, %"struct.std::__1::__less.718"* dereferenceable(1) %2)
  br i1 %410, label %411, label %413

411:                                              ; preds = %407
  br i1 %408, label %425, label %412

412:                                              ; preds = %411, %423
  br label %4

413:                                              ; preds = %407
  br i1 %408, label %421, label %414

414:                                              ; preds = %413, %404
  %415 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %389 to i64
  %416 = sub i64 %415, %352
  %417 = sub i64 %22, %415
  %418 = icmp slt i64 %416, %417
  br i1 %418, label %419, label %423

419:                                              ; preds = %414
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEvT0_S7_T_(%"class.blink::SMILTimeWithOrigin"* %26, %"class.blink::SMILTimeWithOrigin"* %389, %"struct.std::__1::__less.718"* dereferenceable(1) %2)
  %420 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %389, i64 1
  br label %421

421:                                              ; preds = %419, %413
  %422 = phi %"class.blink::SMILTimeWithOrigin"* [ %409, %413 ], [ %420, %419 ]
  br label %23

423:                                              ; preds = %414
  %424 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %389, i64 1
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEvT0_S7_T_(%"class.blink::SMILTimeWithOrigin"* %424, %"class.blink::SMILTimeWithOrigin"* %5, %"struct.std::__1::__less.718"* dereferenceable(1) %2)
  br label %412

425:                                              ; preds = %411, %309, %25, %25, %294, %306, %198, %169, %125, %117, %109, %99, %88, %80, %75, %72, %64, %55, %54, %30, %37, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEjT0_S7_S7_S7_T_(%"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"*, %"struct.std::__1::__less.718"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp slt i64 %9, %7
  %11 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %12, %9
  br i1 %10, label %29, label %14

14:                                               ; preds = %5
  br i1 %13, label %15, label %44

15:                                               ; preds = %14
  %16 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = bitcast %"class.blink::SMILTimeWithOrigin"* %1 to i8*
  %19 = bitcast %"class.blink::SMILTimeWithOrigin"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 12, i1 false) #16
  store i64 %9, i64* %11, align 8
  %20 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %2, i64 0, i32 1
  store i32 %17, i32* %20, align 8
  %21 = load i64, i64* %6, align 8
  %22 = load i64, i64* %8, align 8
  %23 = icmp slt i64 %22, %21
  br i1 %23, label %24, label %44

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = bitcast %"class.blink::SMILTimeWithOrigin"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %18, i64 12, i1 false) #16
  store i64 %21, i64* %8, align 8
  store i32 %26, i32* %16, align 8
  %28 = load i64, i64* %11, align 8
  br label %44

29:                                               ; preds = %5
  %30 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = bitcast %"class.blink::SMILTimeWithOrigin"* %0 to i8*
  br i1 %13, label %33, label %36

33:                                               ; preds = %29
  %34 = bitcast %"class.blink::SMILTimeWithOrigin"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %34, i64 12, i1 false) #16
  store i64 %7, i64* %11, align 8
  %35 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %2, i64 0, i32 1
  store i32 %31, i32* %35, align 8
  br label %44

36:                                               ; preds = %29
  %37 = bitcast %"class.blink::SMILTimeWithOrigin"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %37, i64 12, i1 false) #16
  store i64 %7, i64* %8, align 8
  %38 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %1, i64 0, i32 1
  store i32 %31, i32* %38, align 8
  %39 = load i64, i64* %11, align 8
  %40 = icmp slt i64 %39, %7
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = bitcast %"class.blink::SMILTimeWithOrigin"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %42, i64 12, i1 false) #16
  store i64 %7, i64* %11, align 8
  %43 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %2, i64 0, i32 1
  store i32 %31, i32* %43, align 8
  br label %44

44:                                               ; preds = %14, %15, %24, %33, %36, %41
  %45 = phi i64 [ %7, %33 ], [ %12, %14 ], [ %28, %24 ], [ %9, %15 ], [ %7, %41 ], [ %39, %36 ]
  %46 = phi i32 [ 1, %33 ], [ 0, %14 ], [ 2, %24 ], [ 1, %15 ], [ 2, %41 ], [ 1, %36 ]
  %47 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = icmp slt i64 %48, %45
  br i1 %49, label %50, label %73

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %2, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = bitcast %"class.blink::SMILTimeWithOrigin"* %2 to i8*
  %54 = bitcast %"class.blink::SMILTimeWithOrigin"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 12, i1 false) #16
  store i64 %45, i64* %47, align 8
  %55 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %3, i64 0, i32 1
  store i32 %52, i32* %55, align 8
  %56 = add nuw nsw i32 %46, 1
  %57 = load i64, i64* %8, align 8
  %58 = load i64, i64* %11, align 8
  %59 = icmp slt i64 %58, %57
  br i1 %59, label %60, label %73

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %1, i64 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = bitcast %"class.blink::SMILTimeWithOrigin"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %53, i64 12, i1 false) #16
  store i64 %57, i64* %11, align 8
  store i32 %62, i32* %51, align 8
  %64 = add nuw nsw i32 %46, 2
  %65 = load i64, i64* %6, align 8
  %66 = load i64, i64* %8, align 8
  %67 = icmp slt i64 %66, %65
  br i1 %67, label %68, label %73

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = bitcast %"class.blink::SMILTimeWithOrigin"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %63, i64 12, i1 false) #16
  store i64 %65, i64* %8, align 8
  store i32 %70, i32* %61, align 8
  %72 = add nuw nsw i32 %46, 3
  br label %73

73:                                               ; preds = %50, %68, %60, %44
  %74 = phi i32 [ %72, %68 ], [ %64, %60 ], [ %56, %50 ], [ %46, %44 ]
  ret i32 %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEbT0_S7_T_(%"class.blink::SMILTimeWithOrigin"*, %"class.blink::SMILTimeWithOrigin"*, %"struct.std::__1::__less.718"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %1 to i64
  %5 = ptrtoint %"class.blink::SMILTimeWithOrigin"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 4
  switch i64 %7, label %107 [
    i64 0, label %187
    i64 1, label %187
    i64 2, label %8
    i64 3, label %21
    i64 4, label %61
    i64 5, label %66
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %1, i64 -1
  %10 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %9, i64 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp slt i64 %13, %11
  br i1 %14, label %15, label %187

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = bitcast %"class.blink::SMILTimeWithOrigin"* %0 to i8*
  %19 = bitcast %"class.blink::SMILTimeWithOrigin"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 12, i1 false) #16
  store i64 %11, i64* %12, align 8
  %20 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %1, i64 -1, i32 1
  store i32 %17, i32* %20, align 8
  br label %187

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 1
  %23 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %1, i64 -1
  %24 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 0, i32 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %22, i64 0, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %27, %25
  %29 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %23, i64 0, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp slt i64 %30, %27
  br i1 %28, label %46, label %32

32:                                               ; preds = %21
  br i1 %31, label %33, label %187

33:                                               ; preds = %32
  %34 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 1, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = bitcast %"class.blink::SMILTimeWithOrigin"* %22 to i8*
  %37 = bitcast %"class.blink::SMILTimeWithOrigin"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 12, i1 false) #16
  store i64 %27, i64* %29, align 8
  %38 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %1, i64 -1, i32 1
  store i32 %35, i32* %38, align 8
  %39 = load i64, i64* %24, align 8
  %40 = load i64, i64* %26, align 8
  %41 = icmp slt i64 %40, %39
  br i1 %41, label %42, label %187

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = bitcast %"class.blink::SMILTimeWithOrigin"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %36, i64 12, i1 false) #16
  store i64 %39, i64* %26, align 8
  store i32 %44, i32* %34, align 8
  br label %187

46:                                               ; preds = %21
  %47 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = bitcast %"class.blink::SMILTimeWithOrigin"* %0 to i8*
  br i1 %31, label %50, label %53

50:                                               ; preds = %46
  %51 = bitcast %"class.blink::SMILTimeWithOrigin"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %51, i64 12, i1 false) #16
  store i64 %25, i64* %29, align 8
  %52 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %1, i64 -1, i32 1
  store i32 %48, i32* %52, align 8
  br label %187

53:                                               ; preds = %46
  %54 = bitcast %"class.blink::SMILTimeWithOrigin"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %54, i64 12, i1 false) #16
  store i64 %25, i64* %26, align 8
  %55 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 1, i32 1
  store i32 %48, i32* %55, align 8
  %56 = load i64, i64* %29, align 8
  %57 = icmp slt i64 %56, %25
  br i1 %57, label %58, label %187

58:                                               ; preds = %53
  %59 = bitcast %"class.blink::SMILTimeWithOrigin"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %59, i64 12, i1 false) #16
  store i64 %25, i64* %29, align 8
  %60 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %1, i64 -1, i32 1
  store i32 %48, i32* %60, align 8
  br label %187

61:                                               ; preds = %3
  %62 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 1
  %63 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 2
  %64 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %1, i64 -1
  %65 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEjT0_S7_S7_S7_T_(%"class.blink::SMILTimeWithOrigin"* %0, %"class.blink::SMILTimeWithOrigin"* %62, %"class.blink::SMILTimeWithOrigin"* %63, %"class.blink::SMILTimeWithOrigin"* %64, %"struct.std::__1::__less.718"* dereferenceable(1) %2)
  br label %187

66:                                               ; preds = %3
  %67 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 1
  %68 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 2
  %69 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 3
  %70 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %1, i64 -1
  %71 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN5blink18SMILTimeWithOriginES3_EEPS3_EEjT0_S7_S7_S7_T_(%"class.blink::SMILTimeWithOrigin"* %0, %"class.blink::SMILTimeWithOrigin"* %67, %"class.blink::SMILTimeWithOrigin"* %68, %"class.blink::SMILTimeWithOrigin"* %69, %"struct.std::__1::__less.718"* dereferenceable(1) %2) #16
  %72 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %69, i64 0, i32 0, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp slt i64 %75, %73
  br i1 %76, label %77, label %187

77:                                               ; preds = %66
  %78 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 3, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = bitcast %"class.blink::SMILTimeWithOrigin"* %69 to i8*
  %81 = bitcast %"class.blink::SMILTimeWithOrigin"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 12, i1 false) #16
  store i64 %73, i64* %74, align 8
  %82 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %1, i64 -1, i32 1
  store i32 %79, i32* %82, align 8
  %83 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %68, i64 0, i32 0, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = load i64, i64* %72, align 8
  %86 = icmp slt i64 %85, %84
  br i1 %86, label %87, label %187

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 2, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = bitcast %"class.blink::SMILTimeWithOrigin"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %80, i64 12, i1 false) #16
  store i64 %84, i64* %72, align 8
  store i32 %89, i32* %78, align 8
  %91 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %67, i64 0, i32 0, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = load i64, i64* %83, align 8
  %94 = icmp slt i64 %93, %92
  br i1 %94, label %95, label %187

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 1, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = bitcast %"class.blink::SMILTimeWithOrigin"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %90, i64 12, i1 false) #16
  store i64 %92, i64* %83, align 8
  store i32 %97, i32* %88, align 8
  %99 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 0, i32 0, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = load i64, i64* %91, align 8
  %102 = icmp slt i64 %101, %100
  br i1 %102, label %103, label %187

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = bitcast %"class.blink::SMILTimeWithOrigin"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %98, i64 12, i1 false) #16
  store i64 %100, i64* %91, align 8
  store i32 %105, i32* %96, align 8
  br label %187

107:                                              ; preds = %3
  %108 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 2
  %109 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 1
  %110 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 0, i32 0, i32 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %109, i64 0, i32 0, i32 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = icmp slt i64 %113, %111
  %115 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %108, i64 0, i32 0, i32 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = icmp slt i64 %116, %113
  br i1 %114, label %131, label %118

118:                                              ; preds = %107
  br i1 %117, label %119, label %145

119:                                              ; preds = %118
  %120 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 1, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = bitcast %"class.blink::SMILTimeWithOrigin"* %109 to i8*
  %123 = bitcast %"class.blink::SMILTimeWithOrigin"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 12, i1 false) #16
  store i64 %113, i64* %115, align 8
  %124 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 2, i32 1
  store i32 %121, i32* %124, align 8
  %125 = load i64, i64* %112, align 8
  %126 = icmp slt i64 %125, %111
  br i1 %126, label %127, label %145

127:                                              ; preds = %119
  %128 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = bitcast %"class.blink::SMILTimeWithOrigin"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %122, i64 12, i1 false) #16
  store i64 %111, i64* %112, align 8
  store i32 %129, i32* %120, align 8
  br label %145

131:                                              ; preds = %107
  %132 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = bitcast %"class.blink::SMILTimeWithOrigin"* %0 to i8*
  br i1 %117, label %135, label %138

135:                                              ; preds = %131
  %136 = bitcast %"class.blink::SMILTimeWithOrigin"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %136, i64 12, i1 false) #16
  store i64 %111, i64* %115, align 8
  %137 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 2, i32 1
  store i32 %133, i32* %137, align 8
  br label %145

138:                                              ; preds = %131
  %139 = bitcast %"class.blink::SMILTimeWithOrigin"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %139, i64 12, i1 false) #16
  store i64 %111, i64* %112, align 8
  %140 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 1, i32 1
  store i32 %133, i32* %140, align 8
  %141 = icmp slt i64 %116, %111
  br i1 %141, label %142, label %145

142:                                              ; preds = %138
  %143 = bitcast %"class.blink::SMILTimeWithOrigin"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %143, i64 12, i1 false) #16
  store i64 %111, i64* %115, align 8
  %144 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 2, i32 1
  store i32 %133, i32* %144, align 8
  br label %145

145:                                              ; preds = %118, %119, %127, %135, %138, %142
  %146 = phi i64 [ %116, %118 ], [ %113, %119 ], [ %113, %127 ], [ %111, %135 ], [ %116, %138 ], [ %111, %142 ]
  %147 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %0, i64 3
  %148 = icmp eq %"class.blink::SMILTimeWithOrigin"* %147, %1
  br i1 %148, label %187, label %149

149:                                              ; preds = %145, %181
  %150 = phi i64 [ %183, %181 ], [ %146, %145 ]
  %151 = phi %"class.blink::SMILTimeWithOrigin"* [ %179, %181 ], [ %147, %145 ]
  %152 = phi i32 [ %178, %181 ], [ 0, %145 ]
  %153 = phi %"class.blink::SMILTimeWithOrigin"* [ %151, %181 ], [ %108, %145 ]
  %154 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %151, i64 0, i32 0, i32 0, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = icmp slt i64 %155, %150
  br i1 %156, label %157, label %177

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %151, i64 0, i32 1
  %159 = load i32, i32* %158, align 8
  br label %160

160:                                              ; preds = %166, %157
  %161 = phi %"class.blink::SMILTimeWithOrigin"* [ %151, %157 ], [ %162, %166 ]
  %162 = phi %"class.blink::SMILTimeWithOrigin"* [ %153, %157 ], [ %167, %166 ]
  %163 = bitcast %"class.blink::SMILTimeWithOrigin"* %161 to i8*
  %164 = bitcast %"class.blink::SMILTimeWithOrigin"* %162 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %164, i64 12, i1 false)
  %165 = icmp eq %"class.blink::SMILTimeWithOrigin"* %162, %0
  br i1 %165, label %171, label %166

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %162, i64 -1
  %168 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load i64, i64* %168, align 8
  %170 = icmp slt i64 %155, %169
  br i1 %170, label %160, label %171

171:                                              ; preds = %160, %166
  %172 = phi %"class.blink::SMILTimeWithOrigin"* [ %0, %160 ], [ %162, %166 ]
  %173 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %172, i64 0, i32 0, i32 0, i32 0
  store i64 %155, i64* %173, align 8
  %174 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %172, i64 0, i32 1
  store i32 %159, i32* %174, align 8
  %175 = add i32 %152, 1
  %176 = icmp eq i32 %175, 8
  br i1 %176, label %184, label %177

177:                                              ; preds = %171, %149
  %178 = phi i32 [ %175, %171 ], [ %152, %149 ]
  %179 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %151, i64 1
  %180 = icmp eq %"class.blink::SMILTimeWithOrigin"* %179, %1
  br i1 %180, label %187, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %151, i64 0, i32 0, i32 0, i32 0
  %183 = load i64, i64* %182, align 8
  br label %149

184:                                              ; preds = %171
  %185 = getelementptr inbounds %"class.blink::SMILTimeWithOrigin", %"class.blink::SMILTimeWithOrigin"* %151, i64 1
  %186 = icmp eq %"class.blink::SMILTimeWithOrigin"* %185, %1
  br label %187

187:                                              ; preds = %177, %184, %145, %103, %95, %87, %77, %66, %58, %53, %50, %42, %33, %32, %8, %15, %3, %3, %61
  %188 = phi i1 [ true, %61 ], [ true, %3 ], [ true, %3 ], [ true, %15 ], [ true, %8 ], [ true, %32 ], [ true, %33 ], [ true, %42 ], [ true, %50 ], [ true, %53 ], [ true, %58 ], [ true, %66 ], [ true, %77 ], [ true, %87 ], [ true, %95 ], [ true, %103 ], [ true, %145 ], [ %186, %184 ], [ true, %177 ]
  ret i1 %188
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGElement"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGElement"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16IdTargetObserverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IdTargetObserver"*
  %4 = bitcast i8* %1 to void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)**, void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)*, void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)*, void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IdTargetObserver"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22ConditionEventListenerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv) #16
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 40
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SVGSMILElement9ConditionEE5TraceEPNS_7VisitorEPKv) #16
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink22ConditionEventListener5TraceEPNS_7VisitorE(%"class.blink::ConditionEventListener"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ConditionEventListener", %"class.blink::ConditionEventListener"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.50"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv) #16
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ConditionEventListener", %"class.blink::ConditionEventListener"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.59"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SVGSMILElement9ConditionEE5TraceEPNS_7VisitorEPKv) #16
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGSMILElement"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGSMILElement"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14SVGSMILElement9ConditionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 40
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv) #16
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 48
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16IdTargetObserverEE5TraceEPNS_7VisitorEPKv) #16
  br label %24

24:                                               ; preds = %18, %13
  %25 = getelementptr inbounds i8, i8* %1, i64 56
  %26 = bitcast i8* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %0, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22ConditionEventListenerEE5TraceEPNS_7VisitorEPKv) #16
  br label %35

35:                                               ; preds = %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14SVGSMILElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_14SVGSMILElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_14SVGSMILElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGSMILElement"**
  %4 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %3, align 8
  %5 = icmp eq %"class.blink::SVGSMILElement"* %4, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #16
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #16
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %4, i64 -1, i32 27
  %20 = getelementptr inbounds i8, i8* %19, i64 6
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %18
  store %"class.blink::SVGSMILElement"* null, %"class.blink::SVGSMILElement"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %25
  %31 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8
  %32 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %31, i64 0, i32 0, i32 0
  %33 = bitcast %"class.blink::PersistentRegion"* %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %36, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %32, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %37

37:                                               ; preds = %18, %13, %30, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink14SVGSMILElementEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %3 = bitcast void (%"class.base::internal::BindStateBase"*)** %2 to %"class.blink::SVGSMILElement"**
  %4 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %3, align 8
  %5 = icmp eq %"class.blink::SVGSMILElement"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %8 = bitcast %"class.blink::SVGSMILElement"* %4 to i8*
  %9 = bitcast %"class.base::internal::BindStateBase"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 %13
  %15 = bitcast i8* %14 to %"class.blink::SVGSMILElement"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %6
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.blink::SVGSMILElement"*)**
  %24 = load void (%"class.blink::SVGSMILElement"*)*, void (%"class.blink::SVGSMILElement"*)** %23, align 8
  br label %27

25:                                               ; preds = %6
  %26 = inttoptr i64 %10 to void (%"class.blink::SVGSMILElement"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.blink::SVGSMILElement"*)* [ %24, %18 ], [ %26, %25 ]
  tail call void %28(%"class.blink::SVGSMILElement"* %15) #16
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink14SVGSMILElementEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8
  %10 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %9, i64 0, i32 0, i32 0
  %11 = bitcast %"class.blink::PersistentRegion"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::PersistentNode"* %6 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %6, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %14, align 8
  store %"class.blink::PersistentNode"* %6, %"class.blink::PersistentNode"** %10, align 8
  br label %15

15:                                               ; preds = %3, %8
  %16 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink14SVGSMILElementEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::SVGSMILElement"**
  %6 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %5, align 8
  %7 = icmp eq %"class.blink::SVGSMILElement"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #15

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13EventListenerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13EventListenerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EventListener"*
  %4 = bitcast i8* %1 to void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)**, void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)** %5, i64 9
  %7 = load void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::EventListener"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13EventListenerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::EventListener"*
  %3 = bitcast i8* %0 to void (%"class.blink::EventListener"*)***
  %4 = load void (%"class.blink::EventListener"*)**, void (%"class.blink::EventListener"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::EventListener"*)*, void (%"class.blink::EventListener"*)** %4, i64 1
  %6 = load void (%"class.blink::EventListener"*)*, void (%"class.blink::EventListener"*)** %5, align 8
  tail call void %6(%"class.blink::EventListener"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13EventListenerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #16
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink13EventListener18NameInHeapSnapshotEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i64 0, i64 0)
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ConditionEventListenerD0Ev(%"class.blink::ConditionEventListener"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ConditionEventListener6InvokeEPNS_16ExecutionContextEPNS_5EventE(%"class.blink::ConditionEventListener"*, %"class.blink::ExecutionContext"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::ConditionEventListener", %"class.blink::ConditionEventListener"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %5, align 8
  %7 = icmp eq %"class.blink::SVGSMILElement"* %6, null
  br i1 %7, label %49, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::ConditionEventListener", %"class.blink::ConditionEventListener"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::SVGSMILElement::Condition"*, %"class.blink::SVGSMILElement::Condition"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::SVGSMILElement", %"class.blink::SVGSMILElement"* %6, i64 0, i32 19, i32 0, i32 0
  %14 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %13, align 8
  %15 = icmp eq %"class.blink::SMILTimeContainer"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = tail call i64 @_ZNK5blink17SMILTimeContainer7ElapsedEv(%"class.blink::SMILTimeContainer"* nonnull %14) #16
  %18 = icmp slt i64 %17, 9223372036854775806
  br i1 %18, label %19, label %47

19:                                               ; preds = %16
  %20 = load %"class.blink::SVGSMILElement::Condition"*, %"class.blink::SVGSMILElement::Condition"** %9, align 8
  br label %21

21:                                               ; preds = %19, %8
  %22 = phi %"class.blink::SVGSMILElement::Condition"* [ %20, %19 ], [ %10, %8 ]
  %23 = phi i64 [ %17, %19 ], [ 0, %8 ]
  %24 = getelementptr inbounds %"class.blink::SVGSMILElement::Condition", %"class.blink::SVGSMILElement::Condition"* %22, i64 0, i32 4, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp slt i64 %25, 9223372036854775806
  br i1 %26, label %27, label %47

27:                                               ; preds = %21
  %28 = add i64 %25, -9223372036854775807
  %29 = icmp ult i64 %28, 2
  br i1 %29, label %30, label %38

30:                                               ; preds = %27
  %31 = add i64 %23, -9223372036854775807
  %32 = icmp ugt i64 %31, 1
  %33 = icmp eq i64 %23, %25
  %34 = or i1 %32, %33
  br i1 %34, label %47, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i64 0, i64 0)) #16
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  br label %47

38:                                               ; preds = %27
  %39 = icmp slt i64 %25, 0
  %40 = select i1 %39, i64 -9223372036854775808, i64 9223372036854775807
  %41 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %23, i64 %25) #16
  %42 = extractvalue { i64, i1 } %41, 1
  %43 = extractvalue { i64, i1 } %41, 0
  %44 = select i1 %42, i64 %40, i64 %43, !prof !2
  %45 = icmp slt i64 %44, 9223372036854775805
  %46 = select i1 %45, i64 %44, i64 9223372036854775805
  br label %47

47:                                               ; preds = %16, %21, %30, %35, %38
  %48 = phi i64 [ %46, %38 ], [ %17, %16 ], [ %25, %21 ], [ -9223372036854775808, %30 ], [ -9223372036854775808, %35 ]
  call void @_ZN5blink14SVGSMILElement24AddInstanceTimeAndUpdateENS0_10BeginOrEndENS_8SMILTimeENS_14SMILTimeOriginE(%"class.blink::SVGSMILElement"* nonnull %6, i32 %12, i64 %48, i32 4)
  br label %49

49:                                               ; preds = %3, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener14IsEventHandlerEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13EventListener10ScriptBodyEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  ret %"class.WTF::String"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE(%"class.blink::EventListener"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE(%"class.blink::NativeEventListener"*, %"class.blink::EventListener"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::NativeEventListener", %"class.blink::NativeEventListener"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::EventListener"* %3, %1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener22IsJSBasedEventListenerEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19NativeEventListener21IsNativeEventListenerEv(%"class.blink::NativeEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19NativeEventListener20IsImageEventListenerEv(%"class.blink::NativeEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13EventListenerD2Ev(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14SVGSMILElement9ConditionEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14SVGSMILElement9ConditionEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14SVGSMILElement9ConditionEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14SVGSMILElement9ConditionEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14SVGSMILElement9ConditionEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14SVGSMILElement9ConditionEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 16
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 8
  %21 = bitcast i8* %20 to %"class.WTF::StringImpl"**
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #16
  br label %37

37:                                               ; preds = %19, %33, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14SVGSMILElement9ConditionEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14SVGSMILElement9ConditionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_(%"class.WTF::Vector.56"*, %"class.blink::SVGSMILElement::Condition"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14SVGSMILElement9ConditionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.56"* %0, i32 %14) #16
  %15 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.59"*, %"class.blink::Member.59"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %16, i64 %18
  %20 = bitcast %"class.blink::SVGSMILElement::Condition"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.59"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #16
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14SVGSMILElement9ConditionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.56"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.59"*, %"class.blink::Member.59"** %8, align 8
  %10 = icmp eq %"class.blink::Member.59"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14SVGSMILElement9ConditionEEEEEmm(i64 %11) #16
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #16
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.56"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #16
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.59"*, %"class.blink::Member.59"** %8, align 8
  %26 = icmp eq %"class.blink::Member.59"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.59"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #16
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #16
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #16
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !26
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.21, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0)) #16
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #16
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14SVGSMILElement9ConditionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.56"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14SVGSMILElement9ConditionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.56"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.56"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.56"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #16
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #16
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14SVGSMILElement9ConditionEEEEEmm(i64 %14) #16
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #16
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.59"*, %"class.blink::Member.59"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.59"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.59"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.56"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #16
  %33 = bitcast %"class.WTF::Vector.56"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #16
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #16
  %42 = bitcast %"class.WTF::Vector.56"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #16
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14SVGSMILElement9ConditionEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.23, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.28, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.30, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([191 x i8], [191 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14SVGSMILElement9ConditionEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.59"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.59", %"class.blink::Member.59"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.59"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SVGSMILElement9ConditionEE5TraceEPNS_7VisitorEPKv) #16
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14SVGSMILElement9ConditionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #4

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #4

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #4

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.50"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.66"*, %"class.blink::SVGSMILElement"** dereferenceable(8), %"class.blink::SVGSMILElement"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %4, align 8
  %6 = icmp eq %"class.blink::Member.50"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.66"* %0, %"class.blink::Member.50"* null)
  %9 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.50"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::SVGSMILElement"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %40, align 8
  %42 = icmp eq %"class.blink::SVGSMILElement"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::SVGSMILElement"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::SVGSMILElement"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.50"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.50"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::SVGSMILElement"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::SVGSMILElement"* %59, inttoptr (i64 -1 to %"class.blink::SVGSMILElement"*)
  %67 = select i1 %66, %"class.blink::Member.50"* %60, %"class.blink::Member.50"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %73, align 8
  %75 = icmp eq %"class.blink::SVGSMILElement"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.50"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.50"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #16
  %80 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.50"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %2, align 8
  %89 = ptrtoint %"class.blink::SVGSMILElement"* %88 to i64
  %90 = bitcast %"class.blink::Member.50"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::SVGSMILElement"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #16
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.50"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #16
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.66"* %0, %"class.blink::Member.50"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.50"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.50"*, i8 } undef, %"class.blink::Member.50"* %117, 0
  %119 = insertvalue { %"class.blink::Member.50"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.50"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.66"*, %"class.blink::Member.50"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #16
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i64 0, i64 0), i8* %23, i8* %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.32, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #16
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.66"* %0, i32 %35, %"class.blink::Member.50"* %1, i8* nonnull dereferenceable(1) %4) #16
  %37 = load i8, i8* %4, align 1, !range !26
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #16
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.50"*
  %44 = call %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.66"* %0, %"class.blink::Member.50"* %43, i32 %40, %"class.blink::Member.50"* %1) #16
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.50"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.50"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.66"*, i32, %"class.blink::Member.50"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !26
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.32, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0)) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %31, align 8
  %33 = icmp eq %"class.blink::Member.50"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.50"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #16
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #16
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.50"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.50"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.50"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.50"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.50"* %61, %"class.blink::Member.50"* %55
  %63 = bitcast %"class.blink::Member.50"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.50"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.50"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.66"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #16
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.50"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.66"* %0, %"class.blink::Member.50"* %42, i32 %1, %"class.blink::Member.50"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.50"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.50"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.50"* %87, %"class.blink::Member.50"* %82
  %89 = bitcast %"class.blink::Member.50"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.50"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.50"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.50"* %99, %"class.blink::Member.50"* %88
  %101 = bitcast %"class.blink::Member.50"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.50"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.50"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.50"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.66"*, %"class.blink::Member.50"*, i32, %"class.blink::Member.50"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.50"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.50"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.50"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #16
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.66"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.50"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #16
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.50"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.50"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #16
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.50"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.50"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.50"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.50"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.50"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %70, align 8
  %72 = icmp eq %"class.blink::SVGSMILElement"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::SVGSMILElement"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.50"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.50"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.50"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.50"* %93, null
  %95 = ptrtoint %"class.blink::Member.50"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::SVGSMILElement"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::SVGSMILElement"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::SVGSMILElement"* %99, inttoptr (i64 -1 to %"class.blink::SVGSMILElement"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.50"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %113, align 8
  %115 = icmp eq %"class.blink::SVGSMILElement"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.50"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.50"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.50"* %118, %"class.blink::Member.50"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.50"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.50"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.33, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 5, i32 %28, i8* getelementptr inbounds ([366 x i8], [366 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_14SVGSMILElementEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0)) #16
  %30 = bitcast i8* %29 to %"class.blink::HeapHashTableBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.50"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #16
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.50"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv) #16
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14SVGSMILElementEE5TraceEPNS_7VisitorEPKv) #16
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #4

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.66"*, %"class.blink::Member.50"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member.50"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  %7 = and i32 %6, 2147483647
  %8 = and i32 %5, -2147483648
  %9 = or i32 %7, %8
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 4
  %13 = mul i32 %12, 6
  %14 = getelementptr inbounds %"class.WTF::HashTable.66", %"class.WTF::HashTable.66"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  %17 = icmp ugt i32 %15, 8
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %48

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #16
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #16
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !26
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 16
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %48, label %37

37:                                               ; preds = %26, %33
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = load i32, i32* %14, align 8
  %43 = lshr i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14SVGSMILElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #16
  %46 = bitcast %"class.blink::HeapHashTableBacking"* %45 to %"class.blink::Member.50"*
  %47 = tail call %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14SVGSMILElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.66"* %0, %"class.blink::Member.50"* %46, i32 %43, %"class.blink::Member.50"* null) #16
  br label %48

48:                                               ; preds = %33, %2, %41, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17SMILTimeContainerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SMILTimeContainer"*
  tail call void @_ZNK5blink17SMILTimeContainer5TraceEPNS_7VisitorE(%"class.blink::SMILTimeContainer"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink17SMILTimeContainer5TraceEPNS_7VisitorE(%"class.blink::SMILTimeContainer"*, %"class.blink::Visitor"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { nounwind readonly }
attributes #19 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink18WrapWeakPersistentINS_14SVGSMILElementEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!6 = distinct !{!6, !"_ZN5blink18WrapWeakPersistentINS_14SVGSMILElementEEENS_14WeakPersistentIT_EEPS3_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTF13BindRepeatingIMN5blink14SVGSMILElementEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF13BindRepeatingIMN5blink14SVGSMILElementEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!10 = !{!11, !13, !8}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink14SVGSMILElementEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink14SVGSMILElementEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base13BindRepeatingIRMN5blink14SVGSMILElementEFvvEJNS1_14WeakPersistentIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!14 = distinct !{!14, !"_ZN4base13BindRepeatingIRMN5blink14SVGSMILElementEFvvEJNS1_14WeakPersistentIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN5blink18WrapWeakPersistentINS_14SVGSMILElementEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!17 = distinct !{!17, !"_ZN5blink18WrapWeakPersistentINS_14SVGSMILElementEEENS_14WeakPersistentIT_EEPS3_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN3WTF13BindRepeatingIMN5blink14SVGSMILElementEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!20 = distinct !{!20, !"_ZN3WTF13BindRepeatingIMN5blink14SVGSMILElementEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!21 = !{!22, !24, !19}
!22 = distinct !{!22, !23, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink14SVGSMILElementEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink14SVGSMILElementEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_"}
!24 = distinct !{!24, !25, !"_ZN4base13BindRepeatingIRMN5blink14SVGSMILElementEFvvEJNS1_14WeakPersistentIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!25 = distinct !{!25, !"_ZN4base13BindRepeatingIRMN5blink14SVGSMILElementEFvvEJNS1_14WeakPersistentIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!26 = !{i8 0, i8 2}
!27 = !{!"branch_weights", i32 1, i32 1048575}
