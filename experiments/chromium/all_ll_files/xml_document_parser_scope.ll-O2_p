; ModuleID = '../../third_party/blink/renderer/core/xml/parser/xml_document_parser_scope.cc'
source_filename = "../../third_party/blink/renderer/core/xml/parser/xml_document_parser_scope.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::Document" = type opaque
%struct._xmlError = type { i32, i32, i8*, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, i8* }
%"class.blink::XMLDocumentParserScope" = type { %"class.blink::Document"*, void (i8*, i8*, ...)*, void (i8*, %struct._xmlError*)*, i8* }

@_ZN5blink22XMLDocumentParserScope17current_document_E = hidden local_unnamed_addr global %"class.blink::Document"* null, align 8
@xmlGenericError = external local_unnamed_addr global void (i8*, i8*, ...)*, align 8
@xmlStructuredError = external local_unnamed_addr global void (i8*, %struct._xmlError*)*, align 8
@xmlGenericErrorContext = external local_unnamed_addr global i8*, align 8

@_ZN5blink22XMLDocumentParserScopeC1EPNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::XMLDocumentParserScope"*, %"class.blink::Document"*), void (%"class.blink::XMLDocumentParserScope"*, %"class.blink::Document"*)* @_ZN5blink22XMLDocumentParserScopeC2EPNS_8DocumentE
@_ZN5blink22XMLDocumentParserScopeC1EPNS_8DocumentEPFvPvPKczEPFvS3_P9_xmlErrorES3_ = hidden unnamed_addr alias void (%"class.blink::XMLDocumentParserScope"*, %"class.blink::Document"*, void (i8*, i8*, ...)*, void (i8*, %struct._xmlError*)*, i8*), void (%"class.blink::XMLDocumentParserScope"*, %"class.blink::Document"*, void (i8*, i8*, ...)*, void (i8*, %struct._xmlError*)*, i8*)* @_ZN5blink22XMLDocumentParserScopeC2EPNS_8DocumentEPFvPvPKczEPFvS3_P9_xmlErrorES3_
@_ZN5blink22XMLDocumentParserScopeD1Ev = hidden unnamed_addr alias void (%"class.blink::XMLDocumentParserScope"*), void (%"class.blink::XMLDocumentParserScope"*)* @_ZN5blink22XMLDocumentParserScopeD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink22XMLDocumentParserScopeC2EPNS_8DocumentE(%"class.blink::XMLDocumentParserScope"* nocapture, %"class.blink::Document"*) unnamed_addr #0 align 2 {
  %3 = load i64, i64* bitcast (%"class.blink::Document"** @_ZN5blink22XMLDocumentParserScope17current_document_E to i64*), align 8
  %4 = bitcast %"class.blink::XMLDocumentParserScope"* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"class.blink::XMLDocumentParserScope", %"class.blink::XMLDocumentParserScope"* %0, i64 0, i32 1
  %6 = load i64, i64* bitcast (void (i8*, i8*, ...)** @xmlGenericError to i64*), align 8
  %7 = bitcast void (i8*, i8*, ...)** %5 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::XMLDocumentParserScope", %"class.blink::XMLDocumentParserScope"* %0, i64 0, i32 2
  %9 = load i64, i64* bitcast (void (i8*, %struct._xmlError*)** @xmlStructuredError to i64*), align 8
  %10 = bitcast void (i8*, %struct._xmlError*)** %8 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::XMLDocumentParserScope", %"class.blink::XMLDocumentParserScope"* %0, i64 0, i32 3
  %12 = load i64, i64* bitcast (i8** @xmlGenericErrorContext to i64*), align 8
  %13 = bitcast i8** %11 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.blink::Document"* %1, %"class.blink::Document"** @_ZN5blink22XMLDocumentParserScope17current_document_E, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22XMLDocumentParserScopeC2EPNS_8DocumentEPFvPvPKczEPFvS3_P9_xmlErrorES3_(%"class.blink::XMLDocumentParserScope"* nocapture, %"class.blink::Document"*, void (i8*, i8*, ...)*, void (i8*, %struct._xmlError*)*, i8*) unnamed_addr #1 align 2 {
  %6 = load i64, i64* bitcast (%"class.blink::Document"** @_ZN5blink22XMLDocumentParserScope17current_document_E to i64*), align 8
  %7 = bitcast %"class.blink::XMLDocumentParserScope"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::XMLDocumentParserScope", %"class.blink::XMLDocumentParserScope"* %0, i64 0, i32 1
  %9 = load i64, i64* bitcast (void (i8*, i8*, ...)** @xmlGenericError to i64*), align 8
  %10 = bitcast void (i8*, i8*, ...)** %8 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::XMLDocumentParserScope", %"class.blink::XMLDocumentParserScope"* %0, i64 0, i32 2
  %12 = load i64, i64* bitcast (void (i8*, %struct._xmlError*)** @xmlStructuredError to i64*), align 8
  %13 = bitcast void (i8*, %struct._xmlError*)** %11 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::XMLDocumentParserScope", %"class.blink::XMLDocumentParserScope"* %0, i64 0, i32 3
  %15 = load i64, i64* bitcast (i8** @xmlGenericErrorContext to i64*), align 8
  %16 = bitcast i8** %14 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.blink::Document"* %1, %"class.blink::Document"** @_ZN5blink22XMLDocumentParserScope17current_document_E, align 8
  %17 = icmp eq void (i8*, i8*, ...)* %2, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %5
  tail call void @xmlSetGenericErrorFunc(i8* %4, void (i8*, i8*, ...)* nonnull %2) #3
  br label %19

19:                                               ; preds = %5, %18
  %20 = icmp eq void (i8*, %struct._xmlError*)* %3, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %19
  tail call void @xmlSetStructuredErrorFunc(i8* %4, void (i8*, %struct._xmlError*)* nonnull %3) #3
  br label %22

22:                                               ; preds = %19, %21
  ret void
}

declare void @xmlSetGenericErrorFunc(i8*, void (i8*, i8*, ...)*) local_unnamed_addr #2

declare void @xmlSetStructuredErrorFunc(i8*, void (i8*, %struct._xmlError*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22XMLDocumentParserScopeD2Ev(%"class.blink::XMLDocumentParserScope"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.blink::XMLDocumentParserScope"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  store i64 %3, i64* bitcast (%"class.blink::Document"** @_ZN5blink22XMLDocumentParserScope17current_document_E to i64*), align 8
  %4 = getelementptr inbounds %"class.blink::XMLDocumentParserScope", %"class.blink::XMLDocumentParserScope"* %0, i64 0, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.blink::XMLDocumentParserScope", %"class.blink::XMLDocumentParserScope"* %0, i64 0, i32 1
  %7 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** %6, align 8
  tail call void @xmlSetGenericErrorFunc(i8* %5, void (i8*, i8*, ...)* %7) #3
  %8 = load i8*, i8** %4, align 8
  %9 = getelementptr inbounds %"class.blink::XMLDocumentParserScope", %"class.blink::XMLDocumentParserScope"* %0, i64 0, i32 2
  %10 = load void (i8*, %struct._xmlError*)*, void (i8*, %struct._xmlError*)** %9, align 8
  tail call void @xmlSetStructuredErrorFunc(i8* %8, void (i8*, %struct._xmlError*)* %10) #3
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
