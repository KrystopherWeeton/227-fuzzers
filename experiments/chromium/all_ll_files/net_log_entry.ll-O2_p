; ModuleID = '../../net/log/net_log_entry.cc'
source_filename = "../../net/log/net_log_entry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::NetLogEntry" = type { i32, %"struct.net::NetLogSource", i32, %"class.base::TimeTicks", %"class.base::Value" }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.0" }
%"union.absl::variant_internal::DestructibleUnionImpl.0" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"start_time\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"source\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"phase\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"params\00", align 1

@_ZN3net11NetLogEntryC1ENS_15NetLogEventTypeENS_12NetLogSourceENS_16NetLogEventPhaseEN4base9TimeTicksENS4_5ValueE = hidden unnamed_addr alias void (%"struct.net::NetLogEntry"*, i32, i64, i64, i32, i64, %"class.base::Value"*), void (%"struct.net::NetLogEntry"*, i32, i64, i64, i32, i64, %"class.base::Value"*)* @_ZN3net11NetLogEntryC2ENS_15NetLogEventTypeENS_12NetLogSourceENS_16NetLogEventPhaseEN4base9TimeTicksENS4_5ValueE
@_ZN3net11NetLogEntryD1Ev = hidden unnamed_addr alias void (%"struct.net::NetLogEntry"*), void (%"struct.net::NetLogEntry"*)* @_ZN3net11NetLogEntryD2Ev
@_ZN3net11NetLogEntryC1EOS0_ = hidden unnamed_addr alias void (%"struct.net::NetLogEntry"*, %"struct.net::NetLogEntry"*), void (%"struct.net::NetLogEntry"*, %"struct.net::NetLogEntry"*)* @_ZN3net11NetLogEntryC2EOS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11NetLogEntryC2ENS_15NetLogEventTypeENS_12NetLogSourceENS_16NetLogEventPhaseEN4base9TimeTicksENS4_5ValueE(%"struct.net::NetLogEntry"*, i32, i64, i64, i32, i64, %"class.base::Value"*) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %0, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %0, i64 0, i32 1
  %10 = bitcast %"struct.net::NetLogSource"* %9 to i64*
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  store i64 %3, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %0, i64 0, i32 2
  store i32 %4, i32* %12, align 8
  %13 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %5, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %0, i64 0, i32 4
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %14, %"class.base::Value"* dereferenceable(32) %6) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11NetLogEntryD2Ev(%"struct.net::NetLogEntry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %0, i64 0, i32 4
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %2) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11NetLogEntryC2EOS0_(%"struct.net::NetLogEntry"*, %"struct.net::NetLogEntry"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::NetLogEntry"* %0 to i8*
  %4 = bitcast %"struct.net::NetLogEntry"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  %5 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 4
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %5, %"class.base::Value"* dereferenceable(32) %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"struct.net::NetLogEntry"* @_ZN3net11NetLogEntryaSEOS0_(%"struct.net::NetLogEntry"* returned, %"struct.net::NetLogEntry"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::NetLogEntry"* %0 to i8*
  %4 = bitcast %"struct.net::NetLogEntry"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  %5 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 4
  %7 = tail call dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"* %5, %"class.base::Value"* dereferenceable(32) %6) #6
  ret %"struct.net::NetLogEntry"* %0
}

; Function Attrs: nounwind
declare dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net11NetLogEntry7ToValueEv(%"class.base::Value"* noalias sret, %"struct.net::NetLogEntry"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::Value", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #6
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 3
  call void @_ZN3net6NetLog17TickCountToStringERKN4base9TimeTicksE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.base::TimeTicks"* dereferenceable(8) %9) #6
  %10 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #6
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %17) #7
  br label %18

18:                                               ; preds = %2, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #6
  %19 = bitcast %"class.base::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #6
  %20 = bitcast %"class.base::Value"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %4, i8 zeroext 6) #6
  %21 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64 2, i32 %22) #6
  %24 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4, i32 %25) #6
  %27 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #6
  %28 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 1, i32 2
  call void @_ZN3net6NetLog17TickCountToStringERKN4base9TimeTicksE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.base::TimeTicks"* dereferenceable(8) %28) #6
  %29 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i64 10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #6
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %18
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #7
  br label %37

37:                                               ; preds = %18, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #6
  %38 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %4) #6
  %39 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4, i32 %40) #6
  %42 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5, i32 %43) #6
  %45 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = trunc i64 %46 to i8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 4
  %51 = bitcast %"class.base::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #6
  call void @_ZNK4base5Value5CloneEv(%"class.base::Value"* nonnull sret %6, %"class.base::Value"* %50) #6
  %52 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %6) #6
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #6
  br label %53

53:                                               ; preds = %49, %37
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #6
  ret void
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #3

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"*, i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net6NetLog17TickCountToStringERKN4base9TimeTicksE(%"class.std::__1::basic_string"* sret, %"class.base::TimeTicks"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #3

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #3

declare void @_ZNK4base5Value5CloneEv(%"class.base::Value"* sret, %"class.base::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net11NetLogEntry5CloneEv(%"struct.net::NetLogEntry"* noalias sret, %"struct.net::NetLogEntry"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Value", align 8
  %4 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 1
  %7 = bitcast %"struct.net::NetLogSource"* %6 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  %9 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 3, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 4
  call void @_ZNK4base5Value5CloneEv(%"class.base::Value"* nonnull sret %3, %"class.base::Value"* %13) #6
  %14 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %0, i64 0, i32 0
  store i32 %5, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %0, i64 0, i32 1
  %16 = bitcast %"struct.net::NetLogSource"* %15 to <2 x i64>*
  store <2 x i64> %8, <2 x i64>* %16, align 8
  %17 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %0, i64 0, i32 2
  store i32 %10, i32* %17, align 8
  %18 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %12, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %0, i64 0, i32 4
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %19, %"class.base::Value"* nonnull dereferenceable(32) %3) #6
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net11NetLogEntry9HasParamsEv(%"struct.net::NetLogEntry"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i8
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
