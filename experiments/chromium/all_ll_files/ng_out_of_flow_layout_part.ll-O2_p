; ModuleID = '../../third_party/blink/renderer/core/layout/ng/ng_out_of_flow_layout_part.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/ng_out_of_flow_layout_part.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::NGOutOfFlowLayoutPart" = type <{ %"class.blink::NGBoxFragmentBuilder"*, %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"class.WTF::HashMap.2202", i8, %"class.blink::WritingDirectionMode", [5 x i8], %"class.WTF::Vector.2207"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo" = type { %"class.blink::WritingDirectionMode", %"struct.blink::LogicalRect", %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }
%"struct.blink::LogicalRect" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalSize" }
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashMap.2202" = type { %"class.WTF::HashTable.2203" }
%"class.WTF::HashTable.2203" = type <{ %"struct.WTF::KeyValuePair.2206"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2206" = type <{ %"class.blink::LayoutObject"*, %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2304 }
%class.scoped_refptr.2304 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2305", %"class.WTF::Vector.630", %"class.WTF::Vector.2307", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2305" = type { %"class.base::RefCounted.2306" }
%"class.base::RefCounted.2306" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2307" = type { %"class.WTF::VectorBuffer.2308" }
%"class.WTF::VectorBuffer.2308" = type { %"class.WTF::VectorBufferBase.2309" }
%"class.WTF::VectorBufferBase.2309" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2310 }
%union.anon.2310 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2295" }
%"class.blink::Member.2295" = type { %"class.blink::MemberBase.2296" }
%"class.blink::MemberBase.2296" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2297" }
%"class.blink::Member.2297" = type { %"class.blink::MemberBase.2298" }
%"class.blink::MemberBase.2298" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2318 }
%class.scoped_refptr.2318 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2328" }
%"class.blink::Member.2328" = type { %"class.blink::MemberBase.2329" }
%"class.blink::MemberBase.2329" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2324" }
%"class.blink::MemberBase.2324" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2325" }
%"class.blink::MemberBase.2325" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2326" }
%"class.blink::MemberBase.2326" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2327" }
%"class.blink::MemberBase.2327" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2319", %"class.WTF::Vector.2319" }
%"class.WTF::Vector.2319" = type { %"class.WTF::VectorBuffer.2320" }
%"class.WTF::VectorBuffer.2320" = type { %"class.WTF::VectorBufferBase.2321" }
%"class.WTF::VectorBufferBase.2321" = type { %class.scoped_refptr.2318*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2299" }
%"class.WTF::Vector.2299" = type { %"class.WTF::VectorBuffer.2300" }
%"class.WTF::VectorBuffer.2300" = type { %"class.WTF::VectorBufferBase.2301" }
%"class.WTF::VectorBufferBase.2301" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1733", %"class.absl::optional.1733", %"class.absl::optional.1733" }
%"class.absl::optional.1733" = type { %"class.absl::optional_internal::optional_data.1734" }
%"class.absl::optional_internal::optional_data.1734" = type { %"class.absl::optional_internal::optional_data_base.1735" }
%"class.absl::optional_internal::optional_data_base.1735" = type { %"class.absl::optional_internal::optional_data_dtor_base.1736" }
%"class.absl::optional_internal::optional_data_dtor_base.1736" = type { i8, %union.anon.1737 }
%union.anon.1737 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2314" }
%"class.WTF::VectorBuffer.2314" = type { %"class.WTF::VectorBufferBase.2315", [32 x i8] }
%"class.WTF::VectorBufferBase.2315" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.1631", %"class.blink::Persistent.1637", %"class.std::__1::unique_ptr.1678", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1694" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1631" = type { %"class.std::__1::__compressed_pair.1632" }
%"class.std::__1::__compressed_pair.1632" = type { %"struct.std::__1::__compressed_pair_elem.1633" }
%"struct.std::__1::__compressed_pair_elem.1633" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.1637" = type { %"class.blink::PersistentBase.1638" }
%"class.blink::PersistentBase.1638" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.1655", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.1673" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1641", %"class.blink::Member.1643", %"class.blink::Member.1645", %"class.blink::Member.1647", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1641" = type { %"class.blink::MemberBase.1642" }
%"class.blink::MemberBase.1642" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1643" = type { %"class.blink::MemberBase.1644" }
%"class.blink::MemberBase.1644" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1645" = type { %"class.blink::MemberBase.1646" }
%"class.blink::MemberBase.1646" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1647" = type { %"class.blink::MemberBase.1648" }
%"class.blink::MemberBase.1648" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.1649", %"class.blink::Member.1651", %"class.blink::Member.1651", i8, [7 x i8] }>
%"class.blink::Member.1649" = type { %"class.blink::MemberBase.1650" }
%"class.blink::MemberBase.1650" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.1651" = type { %"class.blink::MemberBase.1652" }
%"class.blink::MemberBase.1652" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1653", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1718", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1653" = type { %"class.blink::MemberBase.1654" }
%"class.blink::MemberBase.1654" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1718" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1719", { i64, i64 } }
%"class.blink::WeakMember.1719" = type { %"class.blink::MemberBase.1652" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1653", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.1658", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1663" }
%"class.WTF::HashMap.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"struct.WTF::KeyValuePair.1662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1662" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.1663" = type { %"class.WTF::VectorBuffer.1664" }
%"class.WTF::VectorBuffer.1664" = type { %"class.WTF::VectorBufferBase.1665" }
%"class.WTF::VectorBufferBase.1665" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1671" }
%"class.blink::Member.1671" = type { %"class.blink::MemberBase.1672" }
%"class.blink::MemberBase.1672" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1671" }
%"class.absl::optional.1673" = type { %"class.absl::optional_internal::optional_data.1674" }
%"class.absl::optional_internal::optional_data.1674" = type { %"class.absl::optional_internal::optional_data_base.1675" }
%"class.absl::optional_internal::optional_data_base.1675" = type { %"class.absl::optional_internal::optional_data_dtor_base.1676" }
%"class.absl::optional_internal::optional_data_dtor_base.1676" = type { i8, %union.anon.1677 }
%union.anon.1677 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.1678" = type { %"class.std::__1::__compressed_pair.1679" }
%"class.std::__1::__compressed_pair.1679" = type { %"struct.std::__1::__compressed_pair_elem.1680" }
%"struct.std::__1::__compressed_pair_elem.1680" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.1681", %"class.WTF::Vector.1681", %"class.WTF::HashMap.1686", %"class.WTF::Vector.1681", i8, [7 x i8] }>
%"class.WTF::HashMap.1686" = type { %"class.WTF::HashTable.1687" }
%"class.WTF::HashTable.1687" = type <{ %"struct.WTF::KeyValuePair.1690"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1690" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.1681" }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683" }
%"class.WTF::VectorBufferBase.1683" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.1694" = type { %"class.std::__1::__compressed_pair.1695" }
%"class.std::__1::__compressed_pair.1695" = type { %"struct.std::__1::__compressed_pair_elem.1696" }
%"struct.std::__1::__compressed_pair_elem.1696" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1697", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.1703", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.1709", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.1703" = type { %"class.std::__1::__compressed_pair.1704" }
%"class.std::__1::__compressed_pair.1704" = type { %"struct.std::__1::__compressed_pair_elem.1705" }
%"struct.std::__1::__compressed_pair_elem.1705" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.1709" = type { %"class.blink::PersistentBase.1710" }
%"class.blink::PersistentBase.1710" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%"class.WTF::Vector.2207" = type { %"class.WTF::VectorBuffer.2208" }
%"class.WTF::VectorBuffer.2208" = type { %"class.WTF::VectorBufferBase.2209" }
%"class.WTF::VectorBufferBase.2209" = type { %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"*, i32, i32 }
%"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo" = type { %"struct.blink::NGLink"*, %"class.blink::NGBlockBreakToken"* }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1872", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1874, %"class.std::__1::unique_ptr.1875" }
%"class.WTF::RefCounted.1872" = type { %"class.base::RefCounted.1873" }
%"class.base::RefCounted.1873" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1874 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1721", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1721" = type { %"class.base::RefCounted.1722" }
%"class.base::RefCounted.1722" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1723, %"class.WTF::Vector.1911", %"class.std::__1::unique_ptr.1916", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1937, %"class.blink::Persistent.1938" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1723 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1724", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1871, %union.anon.1887, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1724" = type { %"class.base::RefCounted.1725" }
%"class.base::RefCounted.1725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1726, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%union.anon.1726 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1727 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1727 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1761 }
%class.scoped_refptr.1761 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1762", [4 x i8], %"class.std::__1::unique_ptr.1764", i64, %"class.WTF::Vector.1768", %"class.WTF::Vector.1773", %"class.WTF::Vector.1779", %"class.WTF::Vector.1797", %class.scoped_refptr.1546, %"class.WTF::HashMap.1803", %"class.WTF::Vector.1808", %"class.WTF::Vector.1768", %"class.WTF::Vector.1813", %"class.WTF::HashMap.1818", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1762" = type { %"class.base::RefCountedThreadSafe.1763" }
%"class.base::RefCountedThreadSafe.1763" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1764" = type { %"class.std::__1::__compressed_pair.1765" }
%"class.std::__1::__compressed_pair.1765" = type { %"struct.std::__1::__compressed_pair_elem.1766" }
%"struct.std::__1::__compressed_pair_elem.1766" = type { i8* }
%"class.WTF::Vector.1773" = type { %"class.WTF::VectorBuffer.1774" }
%"class.WTF::VectorBuffer.1774" = type { %"class.WTF::VectorBufferBase.1775", [8 x i8] }
%"class.WTF::VectorBufferBase.1775" = type { %class.scoped_refptr.1776*, i32, i32 }
%class.scoped_refptr.1776 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1779" = type { %"class.WTF::VectorBuffer.1780" }
%"class.WTF::VectorBuffer.1780" = type { %"class.WTF::VectorBufferBase.1781" }
%"class.WTF::VectorBufferBase.1781" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1783", %"class.std::__1::unique_ptr.1789" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1782 }
%class.scoped_refptr.1782 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1783" = type { %"class.std::__1::__compressed_pair.1784" }
%"class.std::__1::__compressed_pair.1784" = type { %"struct.std::__1::__compressed_pair_elem.1785" }
%"struct.std::__1::__compressed_pair_elem.1785" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1789" = type { %"class.std::__1::__compressed_pair.1790" }
%"class.std::__1::__compressed_pair.1790" = type { %"struct.std::__1::__compressed_pair_elem.1791" }
%"struct.std::__1::__compressed_pair_elem.1791" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1797" = type { %"class.WTF::VectorBuffer.1798" }
%"class.WTF::VectorBuffer.1798" = type { %"class.WTF::VectorBufferBase.1799" }
%"class.WTF::VectorBufferBase.1799" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1800", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1800" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1803" = type { %"class.WTF::HashTable.1804" }
%"class.WTF::HashTable.1804" = type <{ %"struct.WTF::KeyValuePair.1807"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1807" = type opaque
%"class.WTF::Vector.1808" = type { %"class.WTF::VectorBuffer.1809" }
%"class.WTF::VectorBuffer.1809" = type { %"class.WTF::VectorBufferBase.1810" }
%"class.WTF::VectorBufferBase.1810" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1768" = type { %"class.WTF::VectorBuffer.1769" }
%"class.WTF::VectorBuffer.1769" = type { %"class.WTF::VectorBufferBase.1770", [16 x i8] }
%"class.WTF::VectorBufferBase.1770" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1813" = type { %"class.WTF::VectorBuffer.1814" }
%"class.WTF::VectorBuffer.1814" = type { %"class.WTF::VectorBufferBase.1815" }
%"class.WTF::VectorBufferBase.1815" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1818" = type { %"class.WTF::HashTable.1819" }
%"class.WTF::HashTable.1819" = type <{ %"struct.WTF::KeyValuePair.1822"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1822" = type { i8**, %"class.std::__1::unique_ptr.2330" }
%"class.std::__1::unique_ptr.2330" = type { %"class.std::__1::__compressed_pair.2331" }
%"class.std::__1::__compressed_pair.2331" = type { %"struct.std::__1::__compressed_pair_elem.2332" }
%"struct.std::__1::__compressed_pair_elem.2332" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1823" }
%"class.std::__1::unique_ptr.1823" = type { %"class.std::__1::__compressed_pair.1824" }
%"class.std::__1::__compressed_pair.1824" = type { %"struct.std::__1::__compressed_pair_elem.1825" }
%"struct.std::__1::__compressed_pair_elem.1825" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1826, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1843" }
%class.scoped_refptr.1826 = type { %"class.base::RefCountedData.1827"* }
%"class.base::RefCountedData.1827" = type { %"class.base::RefCountedThreadSafe.1828", %"class.WTF::Vector.1829" }
%"class.base::RefCountedThreadSafe.1828" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1829" = type { %"class.WTF::VectorBuffer.1830" }
%"class.WTF::VectorBuffer.1830" = type { %"class.WTF::VectorBufferBase.1831" }
%"class.WTF::VectorBufferBase.1831" = type { %class.scoped_refptr.1832*, i32, i32 }
%class.scoped_refptr.1832 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1833", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1835" }
%"class.WTF::RefCounted.1833" = type { %"class.base::RefCounted.1834" }
%"class.base::RefCounted.1834" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1835" = type { %"class.std::__1::__compressed_pair.1836" }
%"class.std::__1::__compressed_pair.1836" = type { %"struct.std::__1::__compressed_pair_elem.1837" }
%"struct.std::__1::__compressed_pair_elem.1837" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1843" = type { %"class.std::__1::__compressed_pair.1844" }
%"class.std::__1::__compressed_pair.1844" = type { %"struct.std::__1::__compressed_pair_elem.1845" }
%"struct.std::__1::__compressed_pair_elem.1845" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1846", %"class.WTF::Vector.1859", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1846" = type { %"class.WTF::VectorBuffer.1847" }
%"class.WTF::VectorBuffer.1847" = type { %"class.WTF::VectorBufferBase.1848", [320 x i8] }
%"class.WTF::VectorBufferBase.1848" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1849", %"class.WTF::Vector.1849", %class.scoped_refptr.1854, i8, [7 x i8] }>
%"class.WTF::Vector.1849" = type { %"class.WTF::VectorBuffer.1850" }
%"class.WTF::VectorBuffer.1850" = type { %"class.WTF::VectorBufferBase.1851", [8 x i8] }
%"class.WTF::VectorBufferBase.1851" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1854 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1855", %"class.WTF::Vector.1829", %"class.WTF::Vector.1829" }
%"class.WTF::RefCounted.1855" = type { %"class.base::RefCounted.1856" }
%"class.base::RefCounted.1856" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1859" = type { %"class.WTF::VectorBuffer.1860" }
%"class.WTF::VectorBuffer.1860" = type { %"class.WTF::VectorBufferBase.1861", [288 x i8] }
%"class.WTF::VectorBufferBase.1861" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1849", %"class.WTF::Vector.1849" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1862 }
%class.scoped_refptr.1862 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1871 = type { %"class.blink::NGPhysicalFragment"* }
%union.anon.1887 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1728", %class.scoped_refptr.1888, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1889, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1761, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1890", %"class.absl::optional.1906" }
%"class.absl::optional.1728" = type { %"class.absl::optional_internal::optional_data.1729" }
%"class.absl::optional_internal::optional_data.1729" = type { %"class.absl::optional_internal::optional_data_base.1730" }
%"class.absl::optional_internal::optional_data_base.1730" = type { %"class.absl::optional_internal::optional_data_dtor_base.1731" }
%"class.absl::optional_internal::optional_data_dtor_base.1731" = type { i8, %union.anon.1732 }
%union.anon.1732 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1888 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.2214", [4 x i8], %union.anon.2216, %class.scoped_refptr.1888, i32, [4 x i8] }>
%"class.WTF::RefCounted.2214" = type { %"class.base::RefCounted.2215" }
%"class.base::RefCounted.2215" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.2216 = type { %"class.blink::LayoutBox"* }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.1889 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1890" = type { %"class.std::__1::__compressed_pair.1891" }
%"class.std::__1::__compressed_pair.1891" = type { %"struct.std::__1::__compressed_pair_elem.1892" }
%"struct.std::__1::__compressed_pair_elem.1892" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1893", %"class.WTF::Vector.1898", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1893" = type { %"class.WTF::VectorBuffer.1894" }
%"class.WTF::VectorBuffer.1894" = type { %"class.WTF::VectorBufferBase.1895" }
%"class.WTF::VectorBufferBase.1895" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1898" = type { %"class.WTF::VectorBuffer.1899" }
%"class.WTF::VectorBuffer.1899" = type { %"class.WTF::VectorBufferBase.1900" }
%"class.WTF::VectorBufferBase.1900" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1906" = type { %"class.absl::optional_internal::optional_data.1907" }
%"class.absl::optional_internal::optional_data.1907" = type { %"class.absl::optional_internal::optional_data_base.1908" }
%"class.absl::optional_internal::optional_data_base.1908" = type { %"class.absl::optional_internal::optional_data_dtor_base.1909" }
%"class.absl::optional_internal::optional_data_dtor_base.1909" = type { i8, %union.anon.1910 }
%union.anon.1910 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1911" = type { %"class.WTF::VectorBuffer.1912" }
%"class.WTF::VectorBuffer.1912" = type { %"class.WTF::VectorBufferBase.1913", [8 x i8] }
%"class.WTF::VectorBufferBase.1913" = type { %class.scoped_refptr.1723*, i32, i32 }
%"class.std::__1::unique_ptr.1916" = type { %"class.std::__1::__compressed_pair.1917" }
%"class.std::__1::__compressed_pair.1917" = type { %"struct.std::__1::__compressed_pair_elem.1918" }
%"struct.std::__1::__compressed_pair_elem.1918" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1919", %"class.absl::optional.1924", %"class.absl::optional.1929" }
%"class.absl::optional.1919" = type { %"class.absl::optional_internal::optional_data.1920" }
%"class.absl::optional_internal::optional_data.1920" = type { %"class.absl::optional_internal::optional_data_base.1921" }
%"class.absl::optional_internal::optional_data_base.1921" = type { %"class.absl::optional_internal::optional_data_dtor_base.1922" }
%"class.absl::optional_internal::optional_data_dtor_base.1922" = type { i8, %union.anon.1923 }
%union.anon.1923 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1924" = type { %"class.absl::optional_internal::optional_data.1925" }
%"class.absl::optional_internal::optional_data.1925" = type { %"class.absl::optional_internal::optional_data_base.1926" }
%"class.absl::optional_internal::optional_data_base.1926" = type { %"class.absl::optional_internal::optional_data_dtor_base.1927" }
%"class.absl::optional_internal::optional_data_dtor_base.1927" = type { i8, [3 x i8], %union.anon.1928 }
%union.anon.1928 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1929" = type { %"class.absl::optional_internal::optional_data.1930" }
%"class.absl::optional_internal::optional_data.1930" = type { %"class.absl::optional_internal::optional_data_base.1931" }
%"class.absl::optional_internal::optional_data_base.1931" = type { %"class.absl::optional_internal::optional_data_dtor_base.1932" }
%"class.absl::optional_internal::optional_data_dtor_base.1932" = type { i8, %union.anon.1933 }
%union.anon.1933 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1937 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1938" = type { %"class.blink::PersistentBase.1939" }
%"class.blink::PersistentBase.1939" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1942", %"struct.blink::PhysicalRect", %"class.blink::Member.1952" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1942" = type { %"class.std::__1::__compressed_pair.1943" }
%"class.std::__1::__compressed_pair.1943" = type { %"struct.std::__1::__compressed_pair_elem.1944" }
%"struct.std::__1::__compressed_pair_elem.1944" = type { %"class.WTF::HashSet.1945"* }
%"class.WTF::HashSet.1945" = type { %"class.WTF::HashTable.1946" }
%"class.WTF::HashTable.1946" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1952" = type { %"class.blink::MemberBase.1953" }
%"class.blink::MemberBase.1953" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.std::__1::unique_ptr.1875" = type { %"class.std::__1::__compressed_pair.1876" }
%"class.std::__1::__compressed_pair.1876" = type { %"struct.std::__1::__compressed_pair_elem.1877" }
%"struct.std::__1::__compressed_pair_elem.1877" = type { %"class.WTF::Vector.1878"* }
%"class.WTF::Vector.1878" = type { %"class.WTF::VectorBuffer.1879" }
%"class.WTF::VectorBuffer.1879" = type { %"class.WTF::VectorBufferBase.1880" }
%"class.WTF::VectorBufferBase.1880" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1881 }
%union.anon.1881 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::NGBlockBreakToken" = type { %"class.blink::NGBreakToken.base", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, [0 x %"class.blink::NGBreakToken"*] }
%"class.blink::NGBreakToken.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1721", [4 x i8], %"class.blink::LayoutBox"*, i16 }>
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::NGBoxFragmentBuilder" = type { %"class.blink::NGContainerFragmentBuilder.base", %"struct.blink::NGFragmentGeometry"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.absl::optional.1957", %"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGBlockNode", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.absl::optional.2135", i32, %"class.absl::optional.1728", %"class.absl::optional.1728", %"class.absl::optional.2140", %"class.absl::optional.2145", %class.scoped_refptr.2155, %"class.std::__1::unique_ptr.2173", %"class.absl::optional.2184", %"class.absl::optional.2184", %"class.std::__1::unique_ptr.2189", %"struct.blink::LogicalBoxSides", %class.scoped_refptr.1761, %"class.absl::optional.1733", %"class.std::__1::unique_ptr.2195", %"class.absl::optional.1906", %class.scoped_refptr.2201 }
%"class.blink::NGContainerFragmentBuilder.base" = type <{ %"class.blink::NGFragmentBuilder.base", [6 x i8], %"class.blink::NGLayoutInputNode", %"class.blink::NGConstraintSpace"*, %"class.blink::LayoutUnit", %"class.absl::optional.1728", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGExclusionSpace", %"class.WTF::Vector.1954", %"class.WTF::Vector.1954", %"class.WTF::Vector.1954", %"class.WTF::HashMap.1964", %"class.blink::NGUnpositionedListMarker", %"class.WTF::Vector.2095", %"class.WTF::Vector.2100", %class.scoped_refptr.2105, %class.scoped_refptr.1888, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"class.blink::NGFragmentBuilder.base" = type <{ %class.scoped_refptr, %"class.blink::WritingDirectionMode", [2 x i8], i32, %"struct.blink::LogicalSize", %"class.blink::LayoutObject"*, %class.scoped_refptr.1720, i8, i8 }>
%class.scoped_refptr.1720 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGLayoutInputNode" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.WTF::Vector.1954" = type { %"class.WTF::VectorBuffer.1955" }
%"class.WTF::VectorBuffer.1955" = type { %"class.WTF::VectorBufferBase.1956" }
%"class.WTF::VectorBufferBase.1956" = type { %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGLogicalOutOfFlowPositionedNode" = type <{ %"class.blink::LayoutBox"*, %"struct.blink::NGLogicalStaticPosition", %"class.blink::LayoutInline"*, i8, [3 x i8], %"class.blink::LayoutUnit", %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock", %"class.absl::optional.1957", [4 x i8] }>
%"struct.blink::NGLogicalStaticPosition" = type { %"struct.blink::LogicalOffset", i32, i32 }
%"struct.blink::NGContainingBlock" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset", %class.scoped_refptr.1871 }
%"class.WTF::HashMap.1964" = type { %"class.WTF::HashTable.1965" }
%"class.WTF::HashTable.1965" = type <{ %"struct.WTF::KeyValuePair.1968"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1968" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGMulticolWithPendingOOFs" }
%"struct.blink::NGMulticolWithPendingOOFs" = type { %"struct.blink::LogicalOffset", %"struct.blink::NGContainingBlock" }
%"class.blink::NGUnpositionedListMarker" = type { %"class.blink::LayoutNGOutsideListMarker"* }
%"class.blink::LayoutNGOutsideListMarker" = type <{ %"class.blink::LayoutNGBlockFlowMixin", %"class.blink::ListMarker", [4 x i8] }>
%"class.blink::LayoutNGBlockFlowMixin" = type { %"class.blink::LayoutNGMixin", %"class.std::__1::unique_ptr.2020" }
%"class.blink::LayoutNGMixin" = type { %"class.blink::LayoutBlockFlow" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1969", %"class.std::__1::unique_ptr.1989" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::Persistent.1969" = type { %"class.blink::PersistentBase.1970" }
%"class.blink::PersistentBase.1970" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1973", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1973" = type { %"class.std::__1::__compressed_pair.1974" }
%"class.std::__1::__compressed_pair.1974" = type { %"struct.std::__1::__compressed_pair_elem.1975" }
%"struct.std::__1::__compressed_pair_elem.1975" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1976", %"class.WTF::HashMap.1981", %"class.WTF::String" }
%"class.WTF::Vector.1976" = type { %"class.WTF::VectorBuffer.1977" }
%"class.WTF::VectorBuffer.1977" = type { %"class.WTF::VectorBufferBase.1978" }
%"class.WTF::VectorBufferBase.1978" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.1981" = type { %"class.WTF::HashTable.1982" }
%"class.WTF::HashTable.1982" = type <{ %"struct.WTF::KeyValuePair.1985"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1985" = type opaque
%"class.std::__1::unique_ptr.1989" = type { %"class.std::__1::__compressed_pair.1990" }
%"class.std::__1::__compressed_pair.1990" = type { %"struct.std::__1::__compressed_pair_elem.1991" }
%"struct.std::__1::__compressed_pair_elem.1991" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1992", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1992" = type { %"class.WTF::HashTable.1995", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1995" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1998", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1998" = type { %"class.std::__1::__compressed_pair.1999" }
%"class.std::__1::__compressed_pair.1999" = type { %"struct.std::__1::__compressed_pair_elem.2000" }
%"struct.std::__1::__compressed_pair_elem.2000" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.2001, %"class.std::__1::unique_ptr.2002", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.2001 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2212", i16, %class.scoped_refptr.2001 }
%"class.WTF::ThreadSafeRefCounted.2212" = type { %"class.base::RefCountedThreadSafe.2213" }
%"class.base::RefCountedThreadSafe.2213" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2002" = type { %"class.std::__1::__compressed_pair.2003" }
%"class.std::__1::__compressed_pair.2003" = type { %"struct.std::__1::__compressed_pair_elem.2004" }
%"struct.std::__1::__compressed_pair_elem.2004" = type { %"class.WTF::Vector.2005"* }
%"class.WTF::Vector.2005" = type { %"class.WTF::VectorBuffer.2006" }
%"class.WTF::VectorBuffer.2006" = type { %"class.WTF::VectorBufferBase.2007" }
%"class.WTF::VectorBufferBase.2007" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.2016, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.2016 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2020" = type { %"class.std::__1::__compressed_pair.2021" }
%"class.std::__1::__compressed_pair.2021" = type { %"struct.std::__1::__compressed_pair_elem.2022" }
%"struct.std::__1::__compressed_pair_elem.2022" = type { %"struct.blink::NGInlineNodeData"* }
%"struct.blink::NGInlineNodeData" = type <{ %"struct.blink::NGInlineItemsData", %"class.std::__1::unique_ptr.2064", %"class.std::__1::unique_ptr.2070", i8, [7 x i8] }>
%"struct.blink::NGInlineItemsData" = type { %"class.WTF::String", %"class.WTF::Vector.2023", %"class.std::__1::unique_ptr.2049", %"class.std::__1::unique_ptr.1973" }
%"class.WTF::Vector.2023" = type { %"class.WTF::VectorBuffer.2024" }
%"class.WTF::VectorBuffer.2024" = type { %"class.WTF::VectorBufferBase.2025" }
%"class.WTF::VectorBufferBase.2025" = type { %"class.blink::NGInlineItem"*, i32, i32 }
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.2026, %"class.blink::LayoutObject"*, i32, i32 }
%class.scoped_refptr.2026 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.2027", float, %"class.blink::FloatRect", %"class.WTF::Vector.2029", %class.scoped_refptr.2035, %"class.std::__1::unique_ptr.2036", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.2027" = type { %"class.base::RefCounted.2028" }
%"class.base::RefCounted.2028" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2029" = type { %"class.WTF::VectorBuffer.2030" }
%"class.WTF::VectorBuffer.2030" = type { %"class.WTF::VectorBufferBase.2031" }
%"class.WTF::VectorBufferBase.2031" = type { %class.scoped_refptr.2032*, i32, i32 }
%class.scoped_refptr.2032 = type opaque
%class.scoped_refptr.2035 = type { %"class.blink::SimpleFontData"* }
%"class.std::__1::unique_ptr.2036" = type { %"class.std::__1::__compressed_pair.2037" }
%"class.std::__1::__compressed_pair.2037" = type { %"struct.std::__1::__compressed_pair_elem.2038" }
%"struct.std::__1::__compressed_pair_elem.2038" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.2039", i32, float }
%"class.WTF::Vector.2039" = type { %"class.WTF::VectorBuffer.2040" }
%"class.WTF::VectorBuffer.2040" = type { %"class.WTF::VectorBufferBase.2041" }
%"class.WTF::VectorBufferBase.2041" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.std::__1::unique_ptr.2049" = type { %"class.std::__1::__compressed_pair.2050" }
%"class.std::__1::__compressed_pair.2050" = type { %"struct.std::__1::__compressed_pair_elem.2051" }
%"struct.std::__1::__compressed_pair_elem.2051" = type { %"class.blink::NGInlineItemSegments"* }
%"class.blink::NGInlineItemSegments" = type { %"class.WTF::Vector.2052", %"class.WTF::Vector.2057" }
%"class.WTF::Vector.2052" = type { %"class.WTF::VectorBuffer.2053" }
%"class.WTF::VectorBuffer.2053" = type { %"class.WTF::VectorBufferBase.2054" }
%"class.WTF::VectorBufferBase.2054" = type { %"class.blink::NGInlineItemSegment"*, i32, i32 }
%"class.blink::NGInlineItemSegment" = type <{ i32, i16, [2 x i8] }>
%"class.WTF::Vector.2057" = type { %"class.WTF::VectorBuffer.2058" }
%"class.WTF::VectorBuffer.2058" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.std::__1::unique_ptr.2064" = type { %"class.std::__1::__compressed_pair.2065" }
%"class.std::__1::__compressed_pair.2065" = type { %"struct.std::__1::__compressed_pair_elem.2066" }
%"struct.std::__1::__compressed_pair_elem.2066" = type { %"struct.blink::NGInlineItemsData"* }
%"class.std::__1::unique_ptr.2070" = type { %"class.std::__1::__compressed_pair.2071" }
%"class.std::__1::__compressed_pair.2071" = type { %"struct.std::__1::__compressed_pair_elem.2072" }
%"struct.std::__1::__compressed_pair_elem.2072" = type { %"struct.blink::SvgInlineNodeData"* }
%"struct.blink::SvgInlineNodeData" = type { %"class.WTF::Vector.2073", %"class.WTF::Vector.2079", %"class.WTF::Vector.2079", %"class.WTF::HashMap.2084" }
%"class.WTF::Vector.2073" = type { %"class.WTF::VectorBuffer.2074" }
%"class.WTF::VectorBuffer.2074" = type { %"class.WTF::VectorBufferBase.2075" }
%"class.WTF::VectorBufferBase.2075" = type { %"struct.std::__1::pair.2076"*, i32, i32 }
%"struct.std::__1::pair.2076" = type opaque
%"class.WTF::Vector.2079" = type { %"class.WTF::VectorBuffer.2080" }
%"class.WTF::VectorBuffer.2080" = type { %"class.WTF::VectorBufferBase.2081" }
%"class.WTF::VectorBufferBase.2081" = type { %"struct.blink::SvgTextContentRange"*, i32, i32 }
%"struct.blink::SvgTextContentRange" = type { %"class.blink::LayoutObject"*, i32, i32 }
%"class.WTF::HashMap.2084" = type { %"class.WTF::HashTable.2085" }
%"class.WTF::HashTable.2085" = type <{ %"struct.WTF::KeyValuePair.2088"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2088" = type opaque
%"class.blink::ListMarker" = type { i8, [3 x i8] }
%"class.WTF::Vector.2095" = type { %"class.WTF::VectorBuffer.2096" }
%"class.WTF::VectorBuffer.2096" = type { %"class.WTF::VectorBufferBase.2097", [64 x i8] }
%"class.WTF::VectorBufferBase.2097" = type { %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, i32, i32 }
%"struct.blink::NGContainerFragmentBuilder::ChildWithOffset" = type { %"struct.blink::LogicalOffset", %class.scoped_refptr.1871 }
%"class.WTF::Vector.2100" = type { %"class.WTF::VectorBuffer.2101" }
%"class.WTF::VectorBuffer.2101" = type { %"class.WTF::VectorBufferBase.2102" }
%"class.WTF::VectorBufferBase.2102" = type { %class.scoped_refptr.1874*, i32, i32 }
%class.scoped_refptr.2105 = type { %"class.blink::NGInlineBreakToken"* }
%"class.blink::NGInlineBreakToken" = type { %"class.blink::NGBreakToken.base", %class.scoped_refptr, i32, i32 }
%"struct.blink::NGFragmentGeometry" = type { %"struct.blink::LogicalSize", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.absl::optional.1957" = type { %"class.absl::optional_internal::optional_data.1958" }
%"class.absl::optional_internal::optional_data.1958" = type { %"class.absl::optional_internal::optional_data_base.1959" }
%"class.absl::optional_internal::optional_data_base.1959" = type { %"class.absl::optional_internal::optional_data_dtor_base.1960" }
%"class.absl::optional_internal::optional_data_dtor_base.1960" = type { i8, %union.anon.1961 }
%union.anon.1961 = type { %"struct.blink::LogicalRect" }
%"class.blink::NGFragmentItemsBuilder" = type <{ %"class.WTF::Vector.2106", %"class.WTF::String", %"class.WTF::String", %"class.blink::NGLogicalLineItems"*, %"class.blink::NGPhysicalFragment"*, %"class.WTF::HashMap.2130", %"class.blink::NGLogicalLineItems"*, %"class.blink::NGInlineNode", %"class.blink::WritingDirectionMode", i8, i8, i8, [3 x i8] }>
%"class.WTF::Vector.2106" = type { %"class.WTF::VectorBuffer.2107" }
%"class.WTF::VectorBuffer.2107" = type { %"class.WTF::VectorBufferBase.2108", [9216 x i8] }
%"class.WTF::VectorBufferBase.2108" = type { %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, i32, i32 }
%"struct.blink::NGFragmentItemsBuilder::ItemWithOffset" = type { %"class.blink::NGFragmentItem", %"struct.blink::LogicalOffset" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.2109, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.2109 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.2110, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.2110 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.2111", %class.scoped_refptr.2035, i32, i32, i32, i32, float, i32, [0 x %struct.anon.2113] }
%"class.WTF::RefCounted.2111" = type { %"class.base::RefCounted.2112" }
%"class.base::RefCounted.2112" = type { %"class.base::subtle::RefCountedBase" }
%struct.anon.2113 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInkOverflow" = type { %union.anon.2122 }
%union.anon.2122 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.WTF::HashMap.2130" = type { %"class.WTF::HashTable.2131" }
%"class.WTF::HashTable.2131" = type <{ %"struct.WTF::KeyValuePair.2134"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2134" = type opaque
%"class.blink::NGLogicalLineItems" = type { %"class.WTF::Vector.2125" }
%"class.WTF::Vector.2125" = type { %"class.WTF::VectorBuffer.2126" }
%"class.WTF::VectorBuffer.2126" = type { %"class.WTF::VectorBufferBase.2127", [1920 x i8] }
%"class.WTF::VectorBufferBase.2127" = type { %"struct.blink::NGLogicalLineItem"*, i32, i32 }
%"struct.blink::NGLogicalLineItem" = type <{ %class.scoped_refptr.1723, %"class.blink::NGInlineItem"*, %class.scoped_refptr.2110, %"struct.blink::NGTextOffset", %"class.WTF::String", %"class.blink::LayoutObject"*, i32, [4 x i8], %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"struct.blink::LogicalRect", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::NGInlineNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.absl::optional.2135" = type { %"class.absl::optional_internal::optional_data.2136" }
%"class.absl::optional_internal::optional_data.2136" = type { %"class.absl::optional_internal::optional_data_base.2137" }
%"class.absl::optional_internal::optional_data_base.2137" = type { %"class.absl::optional_internal::optional_data_dtor_base.2138" }
%"class.absl::optional_internal::optional_data_dtor_base.2138" = type { i8, %union.anon.2139 }
%union.anon.2139 = type { i32 }
%"class.absl::optional.2140" = type { %"class.absl::optional_internal::optional_data.2141" }
%"class.absl::optional_internal::optional_data.2141" = type { %"class.absl::optional_internal::optional_data_base.2142" }
%"class.absl::optional_internal::optional_data_base.2142" = type { %"class.absl::optional_internal::optional_data_dtor_base.2143" }
%"class.absl::optional_internal::optional_data_dtor_base.2143" = type { i8, %union.anon.2144 }
%union.anon.2144 = type { %"struct.blink::PhysicalRect" }
%"class.absl::optional.2145" = type { %"class.absl::optional_internal::optional_data.2146" }
%"class.absl::optional_internal::optional_data.2146" = type { %"class.absl::optional_internal::optional_data_base.2147" }
%"class.absl::optional_internal::optional_data_base.2147" = type { %"class.absl::optional_internal::optional_data_dtor_base.2148" }
%"class.absl::optional_internal::optional_data_dtor_base.2148" = type { i8, %union.anon.2149 }
%union.anon.2149 = type { %"class.WTF::Vector.2150" }
%"class.WTF::Vector.2150" = type { %"class.WTF::VectorBuffer.2151" }
%"class.WTF::VectorBuffer.2151" = type { %"class.WTF::VectorBufferBase.2152" }
%"class.WTF::VectorBufferBase.2152" = type { %"struct.blink::NGTableFragmentData::ColumnGeometry"*, i32, i32 }
%"struct.blink::NGTableFragmentData::ColumnGeometry" = type { i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGLayoutInputNode" }
%class.scoped_refptr.2155 = type { %"class.blink::NGTableBorders"* }
%"class.blink::NGTableBorders" = type <{ %"class.WTF::RefCounted.2156", [4 x i8], %"class.WTF::Vector.2158", %"class.WTF::Vector.2163", i32, %"class.absl::optional.2168", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.2156" = type { %"class.base::RefCounted.2157" }
%"class.base::RefCounted.2157" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2158" = type { %"class.WTF::VectorBuffer.2159" }
%"class.WTF::VectorBuffer.2159" = type { %"class.WTF::VectorBufferBase.2160" }
%"class.WTF::VectorBufferBase.2160" = type { %"struct.blink::NGTableBorders::Edge"*, i32, i32 }
%"struct.blink::NGTableBorders::Edge" = type { %class.scoped_refptr, i32, i32 }
%"class.WTF::Vector.2163" = type { %"class.WTF::VectorBuffer.2164" }
%"class.WTF::VectorBuffer.2164" = type { %"class.WTF::VectorBufferBase.2165" }
%"class.WTF::VectorBufferBase.2165" = type { %"struct.blink::NGTableBorders::Section"*, i32, i32 }
%"struct.blink::NGTableBorders::Section" = type { i32, i32 }
%"class.absl::optional.2168" = type { %"class.absl::optional_internal::optional_data.2169" }
%"class.absl::optional_internal::optional_data.2169" = type { %"class.absl::optional_internal::optional_data_base.2170" }
%"class.absl::optional_internal::optional_data_base.2170" = type { %"class.absl::optional_internal::optional_data_dtor_base.2171" }
%"class.absl::optional_internal::optional_data_dtor_base.2171" = type { i8, %union.anon.2172 }
%union.anon.2172 = type { %"struct.blink::NGBoxStrut" }
%"class.std::__1::unique_ptr.2173" = type { %"class.std::__1::__compressed_pair.2174" }
%"class.std::__1::__compressed_pair.2174" = type { %"struct.std::__1::__compressed_pair_elem.2175" }
%"struct.std::__1::__compressed_pair_elem.2175" = type { %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* }
%"struct.blink::NGTableFragmentData::CollapsedBordersGeometry" = type { %"class.WTF::Vector.2176", %"class.WTF::Vector.2176" }
%"class.WTF::Vector.2176" = type { %"class.WTF::VectorBuffer.2177" }
%"class.WTF::VectorBuffer.2177" = type { %"class.WTF::VectorBufferBase.2178" }
%"class.WTF::VectorBufferBase.2178" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"class.absl::optional.2184" = type { %"class.absl::optional_internal::optional_data.2185" }
%"class.absl::optional_internal::optional_data.2185" = type { %"class.absl::optional_internal::optional_data_base.2186" }
%"class.absl::optional_internal::optional_data_base.2186" = type { %"class.absl::optional_internal::optional_data_dtor_base.2187" }
%"class.absl::optional_internal::optional_data_dtor_base.2187" = type { i8, %union.anon.2188 }
%union.anon.2188 = type { i32 }
%"class.std::__1::unique_ptr.2189" = type { %"class.std::__1::__compressed_pair.2190" }
%"class.std::__1::__compressed_pair.2190" = type { %"struct.std::__1::__compressed_pair_elem.2191" }
%"struct.std::__1::__compressed_pair_elem.2191" = type { %"struct.blink::NGGridData"* }
%"struct.blink::LogicalBoxSides" = type { i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.2195" = type { %"class.std::__1::__compressed_pair.2196" }
%"class.std::__1::__compressed_pair.2196" = type { %"struct.std::__1::__compressed_pair_elem.2197" }
%"struct.std::__1::__compressed_pair_elem.2197" = type { %"struct.blink::NGMathMLPaintInfo"* }
%"struct.blink::NGMathMLPaintInfo" = type <{ i16, [6 x i8], %class.scoped_refptr.2110, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBoxStrut", %"class.absl::optional.1728", [4 x i8] }>
%class.scoped_refptr.2201 = type { %"class.blink::NGBlockBreakToken"* }
%"class.absl::optional.2217" = type { %"class.absl::optional_internal::optional_data.2218" }
%"class.absl::optional_internal::optional_data.2218" = type { %"class.absl::optional_internal::optional_data_base.2219" }
%"class.absl::optional_internal::optional_data_base.2219" = type { %"class.absl::optional_internal::optional_data_dtor_base.2220" }
%"class.absl::optional_internal::optional_data_dtor_base.2220" = type { i8, %union.anon.2221 }
%union.anon.2221 = type { %"struct.blink::LogicalSize" }
%"class.WTF::HashSet.2222" = type { %"class.WTF::HashTable.2223" }
%"class.WTF::HashTable.2223" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::NGContainerFragmentBuilder" = type <{ %"class.blink::NGFragmentBuilder.base", [6 x i8], %"class.blink::NGLayoutInputNode", %"class.blink::NGConstraintSpace"*, %"class.blink::LayoutUnit", %"class.absl::optional.1728", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGExclusionSpace", %"class.WTF::Vector.1954", %"class.WTF::Vector.1954", %"class.WTF::Vector.1954", %"class.WTF::HashMap.1964", %"class.blink::NGUnpositionedListMarker", %"class.WTF::Vector.2095", %"class.WTF::Vector.2100", %class.scoped_refptr.2105, %class.scoped_refptr.1888, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::NGFragmentBuilder" = type <{ %class.scoped_refptr, %"class.blink::WritingDirectionMode", [2 x i8], i32, %"struct.blink::LogicalSize", %"class.blink::LayoutObject"*, %class.scoped_refptr.1720, i8, i8, [6 x i8] }>
%"class.WTF::ConditionalDestructor.1962" = type { i8 }
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.2347", %"class.blink::WeakMember.966", i32, [4 x i8], %"class.blink::HeapHashSet.1251", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.2348", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.2347" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.2348" = type { %"class.absl::optional_internal::optional_data.2349" }
%"class.absl::optional_internal::optional_data.2349" = type { %"class.absl::optional_internal::optional_data_base.2350" }
%"class.absl::optional_internal::optional_data_base.2350" = type { %"class.absl::optional_internal::optional_data_dtor_base.2351" }
%"class.absl::optional_internal::optional_data_dtor_base.2351" = type { i8, %union.anon.2352 }
%union.anon.2352 = type { %"class.blink::FloatSize" }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2354", %"class.blink::Member.2356", %"class.blink::Member.2358", %"class.blink::Member.2377", %"class.blink::Member.2379" }
%"class.blink::Member.2354" = type { %"class.blink::MemberBase.2355" }
%"class.blink::MemberBase.2355" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.2356" = type { %"class.blink::MemberBase.2357" }
%"class.blink::MemberBase.2357" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2358" = type { %"class.blink::MemberBase.2359" }
%"class.blink::MemberBase.2359" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2362", %"class.blink::HeapHashSet.2371" }
%"class.blink::HeapVector.2362" = type { %"class.WTF::Vector.2365" }
%"class.WTF::Vector.2365" = type { %"class.WTF::VectorBuffer.2366" }
%"class.WTF::VectorBuffer.2366" = type { %"class.WTF::VectorBufferBase.2367" }
%"class.WTF::VectorBufferBase.2367" = type { %"class.blink::Member.2368"*, i32, i32 }
%"class.blink::Member.2368" = type { %"class.blink::MemberBase.2369" }
%"class.blink::MemberBase.2369" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2371" = type { %"class.WTF::HashSet.2374" }
%"class.WTF::HashSet.2374" = type { %"class.WTF::HashTable.2375" }
%"class.WTF::HashTable.2375" = type <{ %"class.blink::Member.2368"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2377" = type { %"class.blink::MemberBase.2378" }
%"class.blink::MemberBase.2378" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2379" = type { %"class.blink::MemberBase.2380" }
%"class.blink::MemberBase.2380" = type { %"class.blink::HeapHashSet.2381"* }
%"class.blink::HeapHashSet.2381" = type opaque
%"class.WTF::Vector.2275" = type { %"class.WTF::VectorBuffer.2276" }
%"class.WTF::VectorBuffer.2276" = type { %"class.WTF::VectorBufferBase.2277" }
%"class.WTF::VectorBufferBase.2277" = type { %"class.WTF::Vector.2278"*, i32, i32 }
%"class.WTF::Vector.2278" = type { %"class.WTF::VectorBuffer.2279" }
%"class.WTF::VectorBuffer.2279" = type { %"class.WTF::VectorBufferBase.2280" }
%"class.WTF::VectorBufferBase.2280" = type { %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*, i32, i32 }
%"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout" = type { %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"class.blink::NGBlockBreakToken"*, %class.scoped_refptr.1871 }
%"struct.blink::NGOutOfFlowLayoutPart::NodeInfo" = type <{ %"class.blink::NGBlockNode", %"class.blink::NGConstraintSpace", %"struct.blink::NGLogicalStaticPosition", %"struct.blink::PhysicalSize", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"class.blink::WritingDirectionMode", [2 x i8], %"struct.blink::NGContainingBlock"*, i8, [7 x i8] }>
%"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo" = type <{ %"struct.blink::LogicalOffset", %class.scoped_refptr.1723, %"class.absl::optional.1728", %"struct.blink::NGLogicalOutOfFlowDimensions", i8, i8, i8, i8, %"struct.blink::LogicalOffset", [4 x i8] }>
%"struct.blink::NGLogicalOutOfFlowDimensions" = type { %"struct.blink::NGBoxStrut", %"struct.blink::LogicalSize", %"struct.blink::NGBoxStrut" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.absl::optional.2262" = type { %"class.absl::optional_internal::optional_data.2263" }
%"class.absl::optional_internal::optional_data.2263" = type { %"class.absl::optional_internal::optional_data_base.2264" }
%"class.absl::optional_internal::optional_data_base.2264" = type { %"class.absl::optional_internal::optional_data_dtor_base.2265" }
%"class.absl::optional_internal::optional_data_dtor_base.2265" = type { i8, %union.anon.2266 }
%union.anon.2266 = type { %"struct.blink::LogicalOffset" }
%"class.WTF::ListHashSet.2226" = type { %"class.WTF::HashTable.2229", %"class.WTF::MallocedListHashSetNode.2232"*, %"class.WTF::MallocedListHashSetNode.2232"*, %"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider" }
%"class.WTF::HashTable.2229" = type <{ %"class.WTF::MallocedListHashSetNode.2232"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode.2232" = type { %"class.blink::LayoutBox"*, %"class.WTF::MallocedListHashSetNode.2232"*, %"class.WTF::MallocedListHashSetNode.2232"* }
%"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator.2233"* }
%"struct.WTF::MallocedListHashSetAllocator.2233" = type { %"class.WTF::MallocedListHashSetNode.2232"*, i8, [7 x i8], [384 x i8] }
%"class.blink::LayoutFlexibleBox" = type <{ %"class.blink::LayoutBlock.base", [6 x i8], %"class.WTF::HashMap.2234", %"class.WTF::HashSet.2222", %"class.blink::OrderIterator", i32, i32, i8, [7 x i8] }>
%"class.WTF::HashMap.2234" = type { %"class.WTF::HashTable.2235" }
%"class.WTF::HashTable.2235" = type <{ %"struct.WTF::KeyValuePair.2238"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2238" = type opaque
%"class.blink::OrderIterator" = type <{ %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*, %"class.std::__1::set", %"class.std::__1::__tree_const_iterator", i8, [7 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2239", %"class.std::__1::__compressed_pair.2244" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2239" = type { %"struct.std::__1::__compressed_pair_elem.2240" }
%"struct.std::__1::__compressed_pair_elem.2240" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2244" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__tree_const_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"struct.blink::NGPhysicalStaticPosition" = type { %"struct.blink::PhysicalOffset", i32, i32 }
%"class.blink::WritingModeConverter" = type { %"class.blink::WritingDirectionMode", %"struct.blink::PhysicalSize" }
%"class.blink::NGConstraintSpaceBuilder" = type { %"class.blink::NGConstraintSpace", %"class.blink::LayoutUnit", i8, i8, i8, i8 }
%"class.blink::PaintLayerScrollableArea::FreezeScrollbarsRootScope" = type <{ %"class.blink::PaintLayerScrollableArea"*, %"class.absl::optional.2285", [6 x i8] }>
%"class.absl::optional.2285" = type { %"class.absl::optional_internal::optional_data.2286" }
%"class.absl::optional_internal::optional_data.2286" = type { %"class.absl::optional_internal::optional_data_base.2287" }
%"class.absl::optional_internal::optional_data_base.2287" = type { %"class.absl::optional_internal::optional_data_dtor_base.2288" }
%"class.absl::optional_internal::optional_data_dtor_base.2288" = type { i8, %union.anon.2289 }
%union.anon.2289 = type { %"class.blink::PaintLayerScrollableArea::FreezeScrollbarsScope" }
%"class.blink::PaintLayerScrollableArea::FreezeScrollbarsScope" = type { i8 }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"class.WTF::HashMap.2247" = type { %"class.WTF::HashTable.2248" }
%"class.WTF::HashTable.2248" = type <{ %"struct.WTF::KeyValuePair.2251"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2251" = type <{ %"class.blink::LayoutObject"*, %"class.absl::optional.2252", [4 x i8] }>
%"class.absl::optional.2252" = type { %"class.absl::optional_internal::optional_data.2253" }
%"class.absl::optional_internal::optional_data.2253" = type { %"class.absl::optional_internal::optional_data_base.2254" }
%"class.absl::optional_internal::optional_data_base.2254" = type { %"class.absl::optional_internal::optional_data_dtor_base.2255" }
%"class.absl::optional_internal::optional_data_dtor_base.2255" = type { i8, %union.anon.2256 }
%union.anon.2256 = type { %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry" }
%"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator" = type { %class.scoped_refptr.1723* }
%"class.base::CheckedContiguousIterator" = type { %"struct.blink::NGLink"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"* }
%"class.base::CheckedContiguousIterator.2274" = type { %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"* }
%"struct.blink::NGPhysicalOOFNodeForFragmentation" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode", %"struct.blink::NGContainingBlock.2273", %"struct.blink::NGContainingBlock.2273" }
%"struct.blink::NGContainingBlock.2273" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %class.scoped_refptr.1871 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::default_delete.2193" = type { i8 }
%"struct.blink::NGLayoutAlgorithmParams" = type { %"class.blink::NGBlockNode", %"struct.blink::NGFragmentGeometry"*, %"class.blink::NGConstraintSpace"*, %"class.blink::NGBlockBreakToken"*, %"class.blink::NGEarlyBreak"*, %"class.blink::NGLayoutResult"* }
%"class.blink::NGSimplifiedOOFLayoutAlgorithm" = type { %"class.blink::NGLayoutAlgorithm", %"class.blink::WritingDirectionMode", %"struct.blink::PhysicalSize", %"class.base::span.2290", %"class.base::CheckedContiguousIterator.2291", %"class.blink::NGBlockBreakToken"*, %"class.base::CheckedContiguousIterator.2292" }
%"class.blink::NGLayoutAlgorithm" = type { %"class.blink::NGLayoutAlgorithmOperations", %"class.blink::NGBlockNode", %"class.blink::NGEarlyBreak"*, %class.scoped_refptr.2201, %"class.blink::NGBoxFragmentBuilder" }
%"class.blink::NGLayoutAlgorithmOperations" = type { i32 (...)** }
%"class.base::span.2290" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::NGLink"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.base::CheckedContiguousIterator.2291" = type { %"struct.blink::NGLink"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"* }
%"class.base::CheckedContiguousIterator.2292" = type { %"class.blink::NGBreakToken"**, %"class.blink::NGBreakToken"**, %"class.blink::NGBreakToken"** }
%"struct.blink::NGPhysicalBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::NGTableConstraintSpaceData" = type <{ %"class.WTF::RefCounted.1739", [4 x i8], %"class.WTF::Vector.1741", %"class.WTF::Vector.1746", %"class.WTF::Vector.1751", %"class.WTF::Vector.1756", %"class.blink::LayoutUnit", %"class.blink::WritingDirectionMode", [2 x i8], %"struct.blink::LogicalSize", i8, i8, i8, [5 x i8] }>
%"class.WTF::RefCounted.1739" = type { %"class.base::RefCounted.1740" }
%"class.base::RefCounted.1740" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1741" = type { %"class.WTF::VectorBuffer.1742" }
%"class.WTF::VectorBuffer.1742" = type { %"class.WTF::VectorBufferBase.1743" }
%"class.WTF::VectorBufferBase.1743" = type { %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::ColumnLocation" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1746" = type { %"class.WTF::VectorBuffer.1747" }
%"class.WTF::VectorBuffer.1747" = type { %"class.WTF::VectorBufferBase.1748" }
%"class.WTF::VectorBufferBase.1748" = type { %"struct.blink::NGTableConstraintSpaceData::Section"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Section" = type { i32, i32 }
%"class.WTF::Vector.1751" = type { %"class.WTF::VectorBuffer.1752" }
%"class.WTF::VectorBuffer.1752" = type { %"class.WTF::VectorBufferBase.1753" }
%"class.WTF::VectorBufferBase.1753" = type { %"struct.blink::NGTableConstraintSpaceData::Row"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Row" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1756" = type { %"class.WTF::VectorBuffer.1757" }
%"class.WTF::VectorBuffer.1757" = type { %"class.WTF::VectorBufferBase.1758" }
%"class.WTF::VectorBufferBase.1758" = type { %"struct.blink::NGTableConstraintSpaceData::Cell"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Cell" = type <{ %"struct.blink::NGBoxStrut", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.WTF::VectorBuffer.302" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8], [4 x i8] }>
%"struct.std::__1::default_delete.473" = type { i8 }
%"struct.std::__1::default_delete.1866" = type { i8 }

$_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZN5blink21NGOutOfFlowLayoutPart12NodeToLayoutD2Ev = comdat any

$_ZNK4base25CheckedContiguousIteratorIN5blink6NGLinkEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIN5blink6NGLinkEEppEv = comdat any

$_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEdeEv = comdat any

$_ZNK5blink24NGPhysicalStaticPosition16ConvertToLogicalERKNS_20WritingModeConverterE = comdat any

$_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEppEv = comdat any

$_ZN5blink20NGBoxFragmentBuilderD2Ev = comdat any

$_ZN3WTF6VectorINS0_IN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEEELj0ES4_E6resizeEj = comdat any

$_ZNK5blink23NGLogicalStaticPosition17ConvertToPhysicalERKNS_20WritingModeConverterE = comdat any

$_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEED2Ev = comdat any

$_ZN5blink17NGConstraintSpace8RareDataC2ERKS1_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZZN7logging15CheckOpValueStrIPN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZN4base25CheckedContiguousIteratorIN5blink6NGLinkEEC2EPKS2_PS2_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIN5blink6NGLinkEE15CheckComparableERKS3_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEC2EPKS2_PS2_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEE15CheckComparableERKS3_ = comdat any

$_ZN5blink26NGContainerFragmentBuilderD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink10NGGridDataEEclEPS2_ = comdat any

$_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev = comdat any

$_ZN5blink17ComputedStyleBaseD2Ev = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink23StyleInheritedVariablesD2Ev = comdat any

$_ZN5blink14StyleVariablesD2Ev = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev = comdat any

$_ZN5blink18NinePieceImageDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev = comdat any

$_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev = comdat any

$_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN5blink13CSSTimingDataD2Ev = comdat any

$_ZN5blink16CSSAnimationDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev = comdat any

$_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE5clearEv = comdat any

$_ZN5blink16NGExclusionSpaceD2Ev = comdat any

$_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm = comdat any

$_ZN5blink12NGEarlyBreakD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink17NGShapeExclusionsD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink17NGConstraintSpace8RareDataD2Ev = comdat any

$_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEED0Ev = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS4_RS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERKPKNS1_12LayoutInlineERS9_EENS_18HashTableAddResultISL_SB_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSB_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSB_jSM_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERKS4_S7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPNS1_9LayoutBoxERSG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21NGOutOfFlowLayoutPart17MulticolChildInfoEEEmm = comdat any

$_ZN3WTF6VectorIN5blink21NGOutOfFlowLayoutPart17MulticolChildInfoELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF6VectorINS0_IN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ES0_EEEEmm = comdat any

$_ZN3WTF6VectorINS0_IN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEEELj0ES4_E2atEj = comdat any

$_ZN3WTF6VectorIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutEEEmm = comdat any

$_ZN3WTF15ConstructTraitsIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutENS_12VectorTraitsIS3_EENS_18PartitionAllocatorEE9ConstructIJS3_EEEPS3_PvDpOT_ = comdat any

$_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZTVN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEEE = comdat any

@_ZN5blink26RuntimeEnabledFeaturesBase40is_layout_ng_fragment_traversal_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase41is_layout_ng_block_fragmentation_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase30is_layout_ng_printing_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32NGLogicalOutOfFlowPositionedNodeEEEPKcv = private unnamed_addr constant [87 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGLogicalOutOfFlowPositionedNode]\00", align 1
@_ZTVN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::NGLayoutAlgorithm"*)* @_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEED2Ev to i8*), i8* bitcast (void (%"class.blink::NGLayoutAlgorithm"*)* @_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEED0Ev to i8*)] }, comdat, align 8
@.str.12 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink12LayoutObjectENS2_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEEEEPKcv = private unnamed_addr constant [145 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::LayoutObject *, blink::NGOutOfFlowLayoutPart::ContainingBlockInfo>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink12LayoutObjectEN4absl8optionalINS2_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEEEEPKcv = private unnamed_addr constant [171 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::LayoutObject *, absl::optional<blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink12LayoutObjectEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::LayoutObject *]\00", align 1
@.str.14 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21NGOutOfFlowLayoutPart17MulticolChildInfoEEEPKcv = private unnamed_addr constant [95 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGOutOfFlowLayoutPart::MulticolChildInfo]\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [131 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<blink::NGOutOfFlowLayoutPart::NodeToLayout, 0, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutEEEPKcv = private unnamed_addr constant [90 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGOutOfFlowLayoutPart::NodeToLayout]\00", align 1

@_ZN5blink21NGOutOfFlowLayoutPartC1ERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceEPNS_20NGBoxFragmentBuilderE = hidden unnamed_addr alias void (%"class.blink::NGOutOfFlowLayoutPart"*, %"class.blink::NGBlockNode"*, %"class.blink::NGConstraintSpace"*, %"class.blink::NGBoxFragmentBuilder"*), void (%"class.blink::NGOutOfFlowLayoutPart"*, %"class.blink::NGBlockNode"*, %"class.blink::NGConstraintSpace"*, %"class.blink::NGBoxFragmentBuilder"*)* @_ZN5blink21NGOutOfFlowLayoutPartC2ERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceEPNS_20NGBoxFragmentBuilderE
@_ZN5blink21NGOutOfFlowLayoutPartC1EbbRKNS_13ComputedStyleERKNS_17NGConstraintSpaceEPNS_20NGBoxFragmentBuilderEN4absl8optionalINS_11LogicalSizeEEE = hidden unnamed_addr alias void (%"class.blink::NGOutOfFlowLayoutPart"*, i1, i1, %"class.blink::ComputedStyle"*, %"class.blink::NGConstraintSpace"*, %"class.blink::NGBoxFragmentBuilder"*, %"class.absl::optional.2217"*), void (%"class.blink::NGOutOfFlowLayoutPart"*, i1, i1, %"class.blink::ComputedStyle"*, %"class.blink::NGConstraintSpace"*, %"class.blink::NGBoxFragmentBuilder"*, %"class.absl::optional.2217"*)* @_ZN5blink21NGOutOfFlowLayoutPartC2EbbRKNS_13ComputedStyleERKNS_17NGConstraintSpaceEPNS_20NGBoxFragmentBuilderEN4absl8optionalINS_11LogicalSizeEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGOutOfFlowLayoutPartC2ERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceEPNS_20NGBoxFragmentBuilderE(%"class.blink::NGOutOfFlowLayoutPart"*, %"class.blink::NGBlockNode"* nocapture readonly dereferenceable(16), %"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), %"class.blink::NGBoxFragmentBuilder"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.absl::optional.2217", align 8
  %6 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::LayoutObject"**
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = lshr i160 %12, 80
  %14 = trunc i160 %13 to i32
  %15 = and i32 %14, 7
  %16 = icmp eq i32 %15, 4
  %17 = and i160 %12, 128849018880
  %18 = icmp eq i160 %17, 42949672960
  %19 = and i1 %18, %16
  %20 = icmp ne i32 %15, 3
  %21 = xor i1 %20, %19
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 4
  %23 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %22 to i96*
  %24 = load i96, i96* %23, align 4
  %25 = and i96 %24, 68719476736
  %26 = icmp ne i96 %25, 0
  %27 = or i1 %21, %26
  %28 = icmp ne i96 %25, 0
  %29 = getelementptr inbounds %"class.absl::optional.2217", %"class.absl::optional.2217"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %29, align 8
  tail call void @_ZN5blink21NGOutOfFlowLayoutPartC2EbbRKNS_13ComputedStyleERKNS_17NGConstraintSpaceEPNS_20NGBoxFragmentBuilderEN4absl8optionalINS_11LogicalSizeEEE(%"class.blink::NGOutOfFlowLayoutPart"* %0, i1 zeroext %27, i1 zeroext %28, %"class.blink::ComputedStyle"* dereferenceable(104) %9, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::NGBoxFragmentBuilder"* %3, %"class.absl::optional.2217"* nonnull byval(%"class.absl::optional.2217") align 8 %5)
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %31 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_layout_ng_printing_enabled_E, align 1, !range !2
  %32 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase41is_layout_ng_block_fragmentation_enabled_E, align 1
  %33 = or i8 %32, %31
  %34 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_layout_ng_fragment_traversal_enabled_E, align 1
  %35 = or i8 %33, %34
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %76, label %37, !prof !3

37:                                               ; preds = %4
  %38 = bitcast %"class.blink::LayoutObject"* %30 to i1 (%"class.blink::LayoutObject"*)***
  %39 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %39, i64 28
  %41 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* %30) #12
  br i1 %42, label %49, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %30, i64 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = and i96 %46, 335544320
  %48 = icmp eq i96 %47, 268435456
  br i1 %48, label %49, label %76

49:                                               ; preds = %43, %37
  %50 = bitcast %"class.blink::LayoutObject"* %30 to i1 (%"class.blink::LayoutObject"*, i32)***
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, i64 92
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::LayoutObject"* %30, i32 39) #12
  br i1 %54, label %76, label %55

55:                                               ; preds = %49
  %56 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %50, align 8
  %57 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, i64 92
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %57, align 8
  %59 = tail call zeroext i1 %58(%"class.blink::LayoutObject"* %30, i32 47) #12
  br i1 %59, label %76, label %60

60:                                               ; preds = %55
  %61 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %50, align 8
  %62 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %61, i64 92
  %63 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %62, align 8
  %64 = tail call zeroext i1 %63(%"class.blink::LayoutObject"* %30, i32 51) #12
  br i1 %64, label %75, label %65

65:                                               ; preds = %60
  %66 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %50, align 8
  %67 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, i64 92
  %68 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %67, align 8
  %69 = tail call zeroext i1 %68(%"class.blink::LayoutObject"* %30, i32 34) #12
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %50, align 8
  %72 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %71, i64 92
  %73 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %72, align 8
  %74 = tail call zeroext i1 %73(%"class.blink::LayoutObject"* %30, i32 35) #12
  br i1 %74, label %75, label %76

75:                                               ; preds = %70, %65, %60
  br label %76

76:                                               ; preds = %4, %43, %49, %55, %70, %75
  %77 = phi i8 [ 0, %4 ], [ 0, %43 ], [ 0, %49 ], [ 0, %55 ], [ 0, %75 ], [ 1, %70 ]
  %78 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 14
  store i8 %77, i8* %78, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGOutOfFlowLayoutPartC2EbbRKNS_13ComputedStyleERKNS_17NGConstraintSpaceEPNS_20NGBoxFragmentBuilderEN4absl8optionalINS_11LogicalSizeEEE(%"class.blink::NGOutOfFlowLayoutPart"*, i1 zeroext, i1 zeroext, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), %"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), %"class.blink::NGBoxFragmentBuilder"*, %"class.absl::optional.2217"* nocapture readonly byval(%"class.absl::optional.2217") align 8) unnamed_addr #0 align 2 {
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"struct.blink::NGBoxStrut"*
  %10 = zext i1 %1 to i8
  %11 = zext i1 %2 to i8
  %12 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 0
  store %"class.blink::NGBoxFragmentBuilder"* %5, %"class.blink::NGBoxFragmentBuilder"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %13, i64 0, i32 0, i32 0
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 1, i32 0, i32 1
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 1, i32 1
  %17 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 2, i32 1
  %19 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 4
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = bitcast %"struct.blink::LogicalRect"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 34, i1 false)
  %23 = bitcast %"struct.blink::LogicalRect"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 52, i1 false)
  %24 = load i160, i160* %21, align 8
  %25 = lshr i160 %24, 102
  %26 = trunc i160 %25 to i8
  %27 = and i8 %26, 3
  store i8 %27, i8* %19, align 8
  %28 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 5
  %29 = load i160, i160* %21, align 8
  %30 = lshr i160 %29, 102
  %31 = trunc i160 %30 to i16
  %32 = and i16 %31, 3
  %33 = lshr i160 %29, 107
  %34 = trunc i160 %33 to i16
  %35 = and i16 %34, 256
  %36 = or i16 %35, %32
  %37 = bitcast %"class.blink::WritingDirectionMode"* %28 to i16*
  store i16 %36, i16* %37, align 1
  %38 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 8, i32 0
  store i32 -64, i32* %38, align 4
  %39 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 9, i32 0
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 10
  store i8 %10, i8* %40, align 8
  %41 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 11
  store i8 %11, i8* %41, align 1
  %42 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 12
  store i8 0, i8* %42, align 2
  %43 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 13
  %44 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %4, i64 0, i32 3, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %56, label %48

48:                                               ; preds = %7
  %49 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %4, i64 0, i32 1, i32 0
  %50 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %49, align 8
  %51 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %50, i64 0, i32 6
  %52 = load i16, i16* %51, align 8
  %53 = and i16 %52, 384
  %54 = icmp ne i16 %53, 0
  %55 = zext i1 %54 to i8
  br label %56

56:                                               ; preds = %7, %48
  %57 = phi i8 [ %55, %48 ], [ 0, %7 ]
  store i8 %57, i8* %43, align 1
  %58 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 14
  store i8 0, i8* %58, align 4
  %59 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 15
  store i8 0, i8* %59, align 1
  %60 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %5, i64 0, i32 0, i32 9, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %71

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %5, i64 0, i32 0, i32 0, i32 5
  %65 = bitcast %"class.blink::LayoutObject"** %64 to %"class.blink::LayoutBlock"**
  %66 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %66, i64 0, i32 2
  %68 = load i16, i16* %67, align 8
  %69 = trunc i16 %68 to i8
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %164

71:                                               ; preds = %56, %63
  %72 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %13 to i16*
  store i16 %36, i16* %72, align 8
  %73 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %17 to i16*
  store i16 %36, i16* %73, align 4
  %74 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #12
  %75 = bitcast { i64, i64 }* %8 to i32*
  %76 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %77 = bitcast i64* %76 to i32*
  %78 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %5, i64 0, i32 1
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  store i64 -6148914691236517206, i64* %79, align 8
  %80 = load %"struct.blink::NGFragmentGeometry"*, %"struct.blink::NGFragmentGeometry"** %78, align 8
  %81 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %80, i64 0, i32 1
  %82 = bitcast %"struct.blink::NGBoxStrut"* %81 to i64*
  %83 = load i64, i64* %82, align 4
  %84 = trunc i64 %83 to i32
  %85 = lshr i64 %83, 32
  %86 = trunc i64 %85 to i32
  %87 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %80, i64 0, i32 1, i32 2
  %88 = bitcast %"class.blink::LayoutUnit"* %87 to i64*
  %89 = load i64, i64* %88, align 4
  %90 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %80, i64 0, i32 2, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp slt i32 %91, 0
  %93 = select i1 %92, i32 -2147483648, i32 2147483647
  %94 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %84, i32 %91) #12
  %95 = extractvalue { i32, i1 } %94, 1
  %96 = extractvalue { i32, i1 } %94, 0
  %97 = select i1 %95, i32 %93, i32 %96, !prof !4
  %98 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %80, i64 0, i32 2, i32 1, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %86, i32 %99) #12
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !4
  %106 = trunc i64 %89 to i32
  %107 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %80, i64 0, i32 2, i32 2, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp slt i32 %108, 0
  %110 = select i1 %109, i32 -2147483648, i32 2147483647
  %111 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %106, i32 %108) #12
  %112 = extractvalue { i32, i1 } %111, 1
  %113 = extractvalue { i32, i1 } %111, 0
  %114 = select i1 %112, i32 %110, i32 %113, !prof !4
  %115 = zext i32 %114 to i64
  %116 = lshr i64 %89, 32
  %117 = trunc i64 %116 to i32
  %118 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %80, i64 0, i32 2, i32 3, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp slt i32 %119, 0
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  %122 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %117, i32 %119) #12
  %123 = extractvalue { i32, i1 } %122, 1
  %124 = extractvalue { i32, i1 } %122, 0
  %125 = select i1 %123, i32 %121, i32 %124, !prof !4
  %126 = zext i32 %125 to i64
  %127 = shl nuw i64 %126, 32
  %128 = or i64 %127, %115
  %129 = zext i32 %105 to i64
  %130 = shl nuw i64 %129, 32
  %131 = zext i32 %97 to i64
  %132 = or i64 %130, %131
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  store i64 %132, i64* %133, align 8
  store i64 %128, i64* %76, align 8
  %134 = or i32 %105, %97
  %135 = or i32 %134, %114
  %136 = or i32 %135, %125
  %137 = icmp eq i32 %136, 0
  %138 = zext i1 %137 to i8
  store i8 %138, i8* %42, align 2
  %139 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %5, i64 0, i32 0, i32 0, i32 4
  %140 = bitcast %"struct.blink::LogicalSize"* %139 to i64*
  %141 = load i64, i64* %140, align 4
  %142 = call i64 @_ZN5blink17ShrinkLogicalSizeENS_11LogicalSizeERKNS_10NGBoxStrutE(i64 %141, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %9) #12
  %143 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 1, i32 1, i32 1
  %144 = bitcast %"struct.blink::LogicalSize"* %143 to i64*
  store i64 %142, i64* %144, align 4
  %145 = getelementptr inbounds %"class.absl::optional.2217", %"class.absl::optional.2217"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i8, i8* %145, align 8, !range !2
  %147 = icmp eq i8 %146, 0
  %148 = getelementptr inbounds %"class.absl::optional.2217", %"class.absl::optional.2217"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %149 = select i1 %147, %"struct.blink::LogicalSize"* %143, %"struct.blink::LogicalSize"* %148
  %150 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 2, i32 1, i32 1
  %151 = bitcast %"struct.blink::LogicalSize"* %149 to i64*
  %152 = bitcast %"struct.blink::LogicalSize"* %150 to i64*
  %153 = load i64, i64* %151, align 4
  store i64 %153, i64* %152, align 4
  %154 = load i32, i32* %75, align 8
  %155 = load i32, i32* %77, align 8
  %156 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 1, i32 1, i32 0
  %157 = bitcast %"struct.blink::LogicalOffset"* %156 to i64*
  %158 = zext i32 %155 to i64
  %159 = shl nuw i64 %158, 32
  %160 = zext i32 %154 to i64
  %161 = or i64 %159, %160
  store i64 %161, i64* %157, align 4
  %162 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 2, i32 1, i32 0
  %163 = bitcast %"struct.blink::LogicalOffset"* %162 to i64*
  store i64 %161, i64* %163, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #12
  br label %164

164:                                              ; preds = %63, %71
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN5blink17ShrinkLogicalSizeENS_11LogicalSizeERKNS_10NGBoxStrutE(i64, %"struct.blink::NGBoxStrut"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGOutOfFlowLayoutPart3RunEPKNS_9LayoutBoxE(%"class.blink::NGOutOfFlowLayoutPart"*, %"class.blink::LayoutBox"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.1954", align 8
  %4 = alloca %"class.WTF::Vector.1954", align 8
  %5 = alloca %"class.WTF::HashSet.2222", align 8
  %6 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 0
  %7 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGContainerFragmentBuilder"**
  %8 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %8, i64 0, i32 30
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = bitcast %"class.blink::NGContainerFragmentBuilder"* %8 to %"class.blink::NGBoxFragmentBuilder"*
  %13 = bitcast %"class.blink::NGContainerFragmentBuilder"* %8 to %"class.blink::NGFragmentBuilder"*
  br i1 %11, label %49, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 13
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %49

18:                                               ; preds = %14
  %19 = bitcast %"class.WTF::Vector.1954"* %3 to i8*
  %20 = bitcast %"class.WTF::Vector.1954"* %3 to %"class.WTF::ConditionalDestructor.1962"*
  br label %21

21:                                               ; preds = %18, %45
  %22 = phi %"class.blink::NGBoxFragmentBuilder"* [ %12, %18 ], [ %47, %45 ]
  %23 = phi %"class.blink::NGContainerFragmentBuilder"* [ %8, %18 ], [ %46, %45 ]
  %24 = phi %"class.blink::NGFragmentBuilder"* [ %13, %18 ], [ %48, %45 ]
  %25 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %23, i64 0, i32 10, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %23, i64 0, i32 12, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %28, %21
  call void @_ZN5blink21NGOutOfFlowLayoutPart30HandleMulticolsWithPendingOOFsEPNS_20NGBoxFragmentBuilderE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"class.blink::NGBoxFragmentBuilder"* %22)
  %33 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %7, align 8
  %34 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %33, i64 0, i32 10, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 16, i1 false) #12
  call void @_ZN5blink26NGContainerFragmentBuilder37SwapOutOfFlowFragmentainerDescendantsEPN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGContainerFragmentBuilder"* %33, %"class.WTF::Vector.1954"* nonnull %3) #12
  %38 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %38, i64 0, i32 4, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %41, align 8
  %43 = call i32 @_ZN5blink23ColumnInlineProgressionENS_10LayoutUnitERKNS_13ComputedStyleE(i32 %40, %"class.blink::ComputedStyle"* dereferenceable(104) %42) #12
  call void @_ZN5blink21NGOutOfFlowLayoutPart30LayoutFragmentainerDescendantsEPN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEENS_10LayoutUnitEbPNS2_INS0_17MulticolChildInfoELj0ES4_EE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"class.WTF::Vector.1954"* nonnull %3, i32 %43, i1 zeroext false, %"class.WTF::Vector.2207"* null)
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1962"* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  %44 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %7, align 8
  br label %45

45:                                               ; preds = %32, %37
  %46 = phi %"class.blink::NGContainerFragmentBuilder"* [ %33, %32 ], [ %44, %37 ]
  %47 = bitcast %"class.blink::NGContainerFragmentBuilder"* %46 to %"class.blink::NGBoxFragmentBuilder"*
  %48 = bitcast %"class.blink::NGContainerFragmentBuilder"* %46 to %"class.blink::NGFragmentBuilder"*
  br label %21

49:                                               ; preds = %28, %2, %14
  %50 = phi %"class.blink::NGBoxFragmentBuilder"* [ %12, %2 ], [ %12, %14 ], [ %22, %28 ]
  %51 = phi %"class.blink::NGContainerFragmentBuilder"* [ %8, %2 ], [ %8, %14 ], [ %23, %28 ]
  %52 = phi %"class.blink::NGFragmentBuilder"* [ %13, %2 ], [ %13, %14 ], [ %24, %28 ]
  %53 = getelementptr inbounds %"class.blink::NGFragmentBuilder", %"class.blink::NGFragmentBuilder"* %52, i64 0, i32 5
  %54 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %51, i64 0, i32 9, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %66

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %54, i64 2, i32 8
  %60 = bitcast %"class.blink::LayoutObject"** %59 to i16*
  %61 = load i16, i16* %60, align 8
  %62 = trunc i16 %61 to i8
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %58
  call void @_ZN5blink20NGBoxFragmentBuilder56AdjustFixedposContainingBlockForFragmentainerDescendantsEv(%"class.blink::NGBoxFragmentBuilder"* %50) #12
  %65 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %6, align 8
  call void @_ZN5blink20NGBoxFragmentBuilder46AdjustFixedposContainingBlockForInnerMulticolsEv(%"class.blink::NGBoxFragmentBuilder"* %65) #12
  br label %420

66:                                               ; preds = %49, %58
  %67 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %90, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %54, i64 0, i32 4
  %71 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %70 to i96*
  %72 = load i96, i96* %71, align 4
  %73 = and i96 %72, 16777216
  %74 = icmp eq i96 %73, 0
  br i1 %74, label %75, label %90

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %54, i64 0, i32 6, i32 0, i32 0
  %77 = load %"class.blink::Node"*, %"class.blink::Node"** %76, align 8
  %78 = icmp eq %"class.blink::Node"* %77, null
  br i1 %78, label %90, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %77, i64 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, 67108876
  %83 = icmp eq i32 %82, 67108864
  br i1 %83, label %84, label %90, !prof !5

84:                                               ; preds = %79
  %85 = bitcast %"class.blink::Node"* %77 to %"class.blink::Element"*
  %86 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %85) #12
  %87 = icmp eq %"class.blink::DisplayLockContext"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %86) #12
  br i1 %89, label %90, label %420

90:                                               ; preds = %88, %69, %75, %79, %66, %84
  %91 = bitcast %"class.WTF::Vector.1954"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #12
  %92 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %4, i64 0, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 16, i1 false) #12
  %94 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %7, align 8
  call void @_ZN5blink26NGContainerFragmentBuilder33SwapOutOfFlowPositionedCandidatesEPN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGContainerFragmentBuilder"* %94, %"class.WTF::Vector.1954"* nonnull %4) #12
  %95 = load i32, i32* %93, align 4
  %96 = icmp eq i32 %95, 0
  %97 = icmp eq %"class.blink::LayoutObject"* %54, null
  %98 = or i1 %97, %96
  %99 = icmp ne %"class.blink::LayoutBox"* %1, null
  %100 = or i1 %99, %98
  br i1 %100, label %394, label %101

101:                                              ; preds = %90
  %102 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %54, i64 0, i32 4
  %103 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %102 to i96*
  %104 = load i96, i96* %103, align 4
  %105 = and i96 %104, 16777216
  %106 = icmp eq i96 %105, 0
  br i1 %106, label %394, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %54, i64 0, i32 5, i32 0
  %109 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %109, i64 0, i32 0, i32 9
  %111 = bitcast [20 x i8]* %110 to i160*
  %112 = load i160, i160* %111, align 8
  %113 = lshr i160 %112, 32
  %114 = trunc i160 %113 to i32
  %115 = and i32 %114, 31
  switch i32 %115, label %394 [
    i32 1, label %116
    i32 14, label %116
  ]

116:                                              ; preds = %107, %107
  %117 = and i160 %112, 2113929216
  %118 = icmp eq i160 %117, 0
  br i1 %118, label %119, label %394

119:                                              ; preds = %116
  %120 = bitcast %"class.blink::LayoutObject"* %54 to i1 (%"class.blink::LayoutObject"*)***
  %121 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %120, align 8
  %122 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %121, i64 23
  %123 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %122, align 8
  %124 = call zeroext i1 %123(%"class.blink::LayoutObject"* nonnull %54) #12
  br i1 %124, label %125, label %394

125:                                              ; preds = %119
  %126 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %120, align 8
  %127 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %126, i64 25
  %128 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %127, align 8
  %129 = call zeroext i1 %128(%"class.blink::LayoutObject"* nonnull %54) #12
  br i1 %129, label %394, label %130

130:                                              ; preds = %125
  %131 = bitcast %"class.blink::LayoutObject"* %54 to i1 (%"class.blink::LayoutObject"*, i32)***
  %132 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %131, align 8
  %133 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %132, i64 92
  %134 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %133, align 8
  %135 = call zeroext i1 %134(%"class.blink::LayoutObject"* nonnull %54, i32 20) #12
  br i1 %135, label %394, label %136

136:                                              ; preds = %130
  %137 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %108, align 8
  %138 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %137, i64 0, i32 0, i32 9
  %139 = bitcast [20 x i8]* %138 to i160*
  %140 = load i160, i160* %139, align 8
  %141 = lshr i160 %140, 80
  %142 = trunc i160 %141 to i32
  %143 = and i32 %142, 7
  %144 = icmp eq i32 %143, 4
  %145 = and i160 %140, 128849018880
  %146 = icmp eq i160 %145, 42949672960
  %147 = and i1 %146, %144
  %148 = icmp ne i32 %143, 3
  %149 = xor i1 %148, %147
  br i1 %149, label %154, label %150

150:                                              ; preds = %136
  %151 = load i96, i96* %103, align 4
  %152 = and i96 %151, 68719476736
  %153 = icmp eq i96 %152, 0
  br i1 %153, label %394, label %154

154:                                              ; preds = %150, %136
  %155 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 10
  %156 = load i8, i8* %155, align 8, !range !2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %237, label %158

158:                                              ; preds = %154
  %159 = bitcast %"class.blink::LayoutObject"* %54 to %"class.blink::LayoutBoxModelObject"*
  %160 = call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %159) #12
  %161 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %160, i64 0, i32 0
  %162 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %160, i64 0, i32 0, i32 5, i32 0
  %163 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %163, i64 0, i32 0, i32 9
  %165 = bitcast [20 x i8]* %164 to i160*
  %166 = load i160, i160* %165, align 8
  %167 = lshr i160 %166, 80
  %168 = trunc i160 %167 to i32
  %169 = and i32 %168, 7
  %170 = icmp eq i32 %169, 4
  %171 = and i160 %166, 128849018880
  %172 = icmp eq i160 %171, 42949672960
  %173 = and i1 %172, %170
  %174 = icmp eq i32 %169, 3
  %175 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %160, i64 0, i32 0, i32 4
  %176 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %175 to i96*
  %177 = load i96, i96* %176, align 4
  %178 = xor i1 %174, %173
  %179 = and i96 %177, 68719476736
  %180 = icmp eq i96 %179, 0
  %181 = and i1 %180, %178
  br i1 %181, label %182, label %207

182:                                              ; preds = %158, %182
  %183 = phi %"class.blink::LayoutObject"* [ %184, %182 ], [ %161, %158 ]
  %184 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %183, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #12
  %185 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %184, i64 0, i32 5, i32 0
  %186 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %186, i64 0, i32 0, i32 9
  %188 = bitcast [20 x i8]* %187 to i160*
  %189 = load i160, i160* %188, align 8
  %190 = lshr i160 %189, 80
  %191 = trunc i160 %190 to i32
  %192 = and i32 %191, 7
  %193 = icmp eq i32 %192, 4
  %194 = and i160 %189, 128849018880
  %195 = icmp eq i160 %194, 42949672960
  %196 = and i1 %195, %193
  %197 = icmp eq i32 %192, 3
  %198 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %184, i64 0, i32 4
  %199 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %198 to i96*
  %200 = load i96, i96* %199, align 4
  %201 = xor i1 %197, %196
  %202 = and i96 %200, 68719476736
  %203 = icmp eq i96 %202, 0
  %204 = and i1 %203, %201
  br i1 %204, label %182, label %205

205:                                              ; preds = %182
  %206 = bitcast %"class.blink::LayoutObject"* %184 to %"class.blink::LayoutBoxModelObject"*
  br label %207

207:                                              ; preds = %205, %158
  %208 = phi %"class.blink::LayoutBoxModelObject"* [ %206, %205 ], [ %160, %158 ]
  %209 = phi %"class.blink::LayoutObject"* [ %184, %205 ], [ %161, %158 ]
  %210 = phi i96 [ %200, %205 ], [ %177, %158 ]
  %211 = and i96 %210, 16777216
  %212 = icmp eq i96 %211, 0
  br i1 %212, label %213, label %234

213:                                              ; preds = %207
  %214 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %208, i64 0, i32 0, i32 6, i32 0, i32 0
  %215 = load %"class.blink::Node"*, %"class.blink::Node"** %214, align 8
  %216 = icmp eq %"class.blink::Node"* %215, null
  br i1 %216, label %234, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %215, i64 0, i32 1
  %219 = load i32, i32* %218, align 8
  %220 = and i32 %219, 1
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %215, i64 0, i32 6, i32 0, i32 0
  br i1 %221, label %227, label %223

223:                                              ; preds = %217
  %224 = bitcast %"class.blink::NodeData"** %222 to %"class.blink::NodeRareData"**
  %225 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %225, i64 0, i32 1, i32 0, i32 0
  br label %229

227:                                              ; preds = %217
  %228 = bitcast %"class.blink::NodeData"** %222 to %"class.blink::NodeRenderingData"**
  br label %229

229:                                              ; preds = %227, %223
  %230 = phi %"class.blink::NodeRenderingData"** [ %226, %223 ], [ %228, %227 ]
  %231 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %230, align 8
  %232 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %231, i64 0, i32 1
  %233 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %232, align 8
  br label %234

234:                                              ; preds = %207, %213, %229
  %235 = phi %"class.blink::LayoutObject"* [ %233, %229 ], [ %209, %213 ], [ %209, %207 ]
  %236 = bitcast %"class.blink::LayoutObject"* %235 to %"class.blink::LayoutInline"*
  br label %237

237:                                              ; preds = %154, %234
  %238 = phi %"class.blink::LayoutInline"* [ %236, %234 ], [ null, %154 ]
  %239 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 11
  %240 = load i8, i8* %239, align 1, !range !2
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %291, label %242

242:                                              ; preds = %237
  %243 = bitcast %"class.blink::LayoutObject"* %54 to %"class.blink::LayoutBoxModelObject"*
  %244 = call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %243) #12
  %245 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %244, i64 0, i32 0
  %246 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %244, i64 0, i32 0, i32 4
  %247 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %246 to i96*
  %248 = load i96, i96* %247, align 4
  %249 = and i96 %248, 68719476736
  %250 = icmp eq i96 %249, 0
  br i1 %250, label %251, label %261

251:                                              ; preds = %242, %251
  %252 = phi %"class.blink::LayoutObject"* [ %253, %251 ], [ %245, %242 ]
  %253 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %252, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #12
  %254 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %253, i64 0, i32 4
  %255 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %254 to i96*
  %256 = load i96, i96* %255, align 4
  %257 = and i96 %256, 68719476736
  %258 = icmp eq i96 %257, 0
  br i1 %258, label %251, label %259

259:                                              ; preds = %251
  %260 = bitcast %"class.blink::LayoutObject"* %253 to %"class.blink::LayoutBoxModelObject"*
  br label %261

261:                                              ; preds = %259, %242
  %262 = phi %"class.blink::LayoutBoxModelObject"* [ %260, %259 ], [ %244, %242 ]
  %263 = phi %"class.blink::LayoutObject"* [ %253, %259 ], [ %245, %242 ]
  %264 = phi i96 [ %256, %259 ], [ %248, %242 ]
  %265 = and i96 %264, 16777216
  %266 = icmp eq i96 %265, 0
  br i1 %266, label %267, label %288

267:                                              ; preds = %261
  %268 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %262, i64 0, i32 0, i32 6, i32 0, i32 0
  %269 = load %"class.blink::Node"*, %"class.blink::Node"** %268, align 8
  %270 = icmp eq %"class.blink::Node"* %269, null
  br i1 %270, label %288, label %271

271:                                              ; preds = %267
  %272 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %269, i64 0, i32 1
  %273 = load i32, i32* %272, align 8
  %274 = and i32 %273, 1
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %269, i64 0, i32 6, i32 0, i32 0
  br i1 %275, label %281, label %277

277:                                              ; preds = %271
  %278 = bitcast %"class.blink::NodeData"** %276 to %"class.blink::NodeRareData"**
  %279 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %278, align 8
  %280 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %279, i64 0, i32 1, i32 0, i32 0
  br label %283

281:                                              ; preds = %271
  %282 = bitcast %"class.blink::NodeData"** %276 to %"class.blink::NodeRenderingData"**
  br label %283

283:                                              ; preds = %281, %277
  %284 = phi %"class.blink::NodeRenderingData"** [ %280, %277 ], [ %282, %281 ]
  %285 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %284, align 8
  %286 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %285, i64 0, i32 1
  %287 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %286, align 8
  br label %288

288:                                              ; preds = %261, %267, %283
  %289 = phi %"class.blink::LayoutObject"* [ %287, %283 ], [ %263, %267 ], [ %263, %261 ]
  %290 = bitcast %"class.blink::LayoutObject"* %289 to %"class.blink::LayoutInline"*
  br label %291

291:                                              ; preds = %237, %288
  %292 = phi %"class.blink::LayoutInline"* [ %290, %288 ], [ null, %237 ]
  %293 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %92, align 8
  %294 = load i32, i32* %93, align 4
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %293, i64 %295
  %297 = icmp eq i32 %294, 0
  br i1 %297, label %418, label %298

298:                                              ; preds = %291
  %299 = icmp eq %"class.blink::LayoutInline"* %238, null
  %300 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %238, i64 0, i32 0, i32 0, i32 4
  %301 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %300 to i96*
  %302 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %238, i64 0, i32 0, i32 0, i32 5, i32 0
  %303 = icmp eq %"class.blink::LayoutInline"* %292, null
  %304 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %292, i64 0, i32 0, i32 0, i32 4
  %305 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %304 to i96*
  %306 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %292, i64 0, i32 0, i32 0, i32 5, i32 0
  br label %307

307:                                              ; preds = %298, %390
  %308 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %293, %298 ], [ %392, %390 ]
  br i1 %299, label %349, label %309

309:                                              ; preds = %307
  %310 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %308 to %"class.blink::LayoutObject"**
  %311 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %310, align 8
  %312 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %311, i64 0, i32 5, i32 0
  %313 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %312, align 8
  %314 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %313, i64 0, i32 0, i32 9
  %315 = bitcast [20 x i8]* %314 to i160*
  %316 = load i160, i160* %315, align 8
  %317 = lshr i160 %316, 80
  %318 = trunc i160 %317 to i32
  %319 = and i32 %318, 7
  %320 = icmp eq i32 %319, 4
  %321 = and i160 %316, 128849018880
  %322 = icmp eq i160 %321, 42949672960
  %323 = and i1 %322, %320
  %324 = select i1 %323, i32 3, i32 %319
  switch i32 %324, label %349 [
    i32 0, label %325
    i32 1, label %343
  ]

325:                                              ; preds = %309
  %326 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %302, align 8
  %327 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %326, i64 0, i32 0, i32 9
  %328 = bitcast [20 x i8]* %327 to i160*
  %329 = load i160, i160* %328, align 8
  %330 = lshr i160 %329, 80
  %331 = trunc i160 %330 to i32
  %332 = and i32 %331, 7
  %333 = icmp eq i32 %332, 4
  %334 = and i160 %329, 128849018880
  %335 = icmp eq i160 %334, 42949672960
  %336 = and i1 %335, %333
  %337 = icmp ne i32 %332, 3
  %338 = xor i1 %337, %336
  br i1 %338, label %347, label %339

339:                                              ; preds = %325
  %340 = load i96, i96* %301, align 4
  %341 = and i96 %340, 68719476736
  %342 = icmp eq i96 %341, 0
  br i1 %342, label %349, label %347

343:                                              ; preds = %309
  %344 = load i96, i96* %301, align 4
  %345 = and i96 %344, 68719476736
  %346 = icmp eq i96 %345, 0
  br i1 %346, label %349, label %347

347:                                              ; preds = %339, %343, %325
  %348 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %308, i64 0, i32 2
  store %"class.blink::LayoutInline"* %238, %"class.blink::LayoutInline"** %348, align 8
  br label %390

349:                                              ; preds = %339, %343, %309, %307
  br i1 %303, label %390, label %350

350:                                              ; preds = %349
  %351 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %308 to %"class.blink::LayoutObject"**
  %352 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %351, align 8
  %353 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %352, i64 0, i32 5, i32 0
  %354 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %353, align 8
  %355 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %354, i64 0, i32 0, i32 9
  %356 = bitcast [20 x i8]* %355 to i160*
  %357 = load i160, i160* %356, align 8
  %358 = lshr i160 %357, 80
  %359 = trunc i160 %358 to i32
  %360 = and i32 %359, 7
  %361 = icmp eq i32 %360, 4
  %362 = and i160 %357, 128849018880
  %363 = icmp eq i160 %362, 42949672960
  %364 = and i1 %363, %361
  %365 = select i1 %364, i32 3, i32 %360
  switch i32 %365, label %390 [
    i32 0, label %366
    i32 1, label %384
  ]

366:                                              ; preds = %350
  %367 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %306, align 8
  %368 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %367, i64 0, i32 0, i32 9
  %369 = bitcast [20 x i8]* %368 to i160*
  %370 = load i160, i160* %369, align 8
  %371 = lshr i160 %370, 80
  %372 = trunc i160 %371 to i32
  %373 = and i32 %372, 7
  %374 = icmp eq i32 %373, 4
  %375 = and i160 %370, 128849018880
  %376 = icmp eq i160 %375, 42949672960
  %377 = and i1 %376, %374
  %378 = icmp ne i32 %373, 3
  %379 = xor i1 %378, %377
  br i1 %379, label %388, label %380

380:                                              ; preds = %366
  %381 = load i96, i96* %305, align 4
  %382 = and i96 %381, 68719476736
  %383 = icmp eq i96 %382, 0
  br i1 %383, label %390, label %388

384:                                              ; preds = %350
  %385 = load i96, i96* %305, align 4
  %386 = and i96 %385, 68719476736
  %387 = icmp eq i96 %386, 0
  br i1 %387, label %390, label %388

388:                                              ; preds = %380, %384, %366
  %389 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %308, i64 0, i32 2
  store %"class.blink::LayoutInline"* %292, %"class.blink::LayoutInline"** %389, align 8
  br label %390

390:                                              ; preds = %380, %384, %350, %349, %388, %347
  %391 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %7, align 8
  call void @_ZN5blink26NGContainerFragmentBuilder22AddOutOfFlowDescendantERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"class.blink::NGContainerFragmentBuilder"* %391, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112) %308) #12
  %392 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %308, i64 1
  %393 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %392, %296
  br i1 %393, label %418, label %307

394:                                              ; preds = %150, %107, %101, %116, %119, %125, %130, %90
  %395 = bitcast %"class.WTF::HashSet.2222"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %395) #12
  %396 = getelementptr inbounds %"class.WTF::HashSet.2222", %"class.WTF::HashSet.2222"* %5, i64 0, i32 0, i32 0
  %397 = getelementptr inbounds %"class.WTF::HashSet.2222", %"class.WTF::HashSet.2222"* %5, i64 0, i32 0, i32 2
  %398 = bitcast %"class.WTF::HashSet.2222"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %398, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %395, i8 0, i64 20, i1 false) #12
  call void @_ZN5blink21NGOutOfFlowLayoutPart16LayoutCandidatesEPN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEEPKNS_9LayoutBoxEPNS1_7HashSetIPKNS_12LayoutObjectENS1_7PtrHashISC_EENS1_10HashTraitsISD_EES4_EE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"class.WTF::Vector.1954"* nonnull %4, %"class.blink::LayoutBox"* %1, %"class.WTF::HashSet.2222"* nonnull %5)
  br i1 %99, label %412, label %399

399:                                              ; preds = %394
  %400 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 13
  %401 = load i8, i8* %400, align 1, !range !2
  %402 = icmp eq i8 %401, 0
  br i1 %402, label %403, label %412

403:                                              ; preds = %399
  %404 = load i32, i32* %397, align 4
  br label %405

405:                                              ; preds = %408, %403
  %406 = phi i32 [ %404, %403 ], [ %410, %408 ]
  %407 = call zeroext i1 @_ZN5blink21NGOutOfFlowLayoutPart21SweepLegacyCandidatesEPN3WTF7HashSetIPKNS_12LayoutObjectENS1_7PtrHashIS4_EENS1_10HashTraitsIS5_EENS1_18PartitionAllocatorEEE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"class.WTF::HashSet.2222"* nonnull %5)
  br i1 %407, label %408, label %412

408:                                              ; preds = %405
  %409 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %7, align 8
  call void @_ZN5blink26NGContainerFragmentBuilder33SwapOutOfFlowPositionedCandidatesEPN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGContainerFragmentBuilder"* %409, %"class.WTF::Vector.1954"* nonnull %4) #12
  call void @_ZN5blink21NGOutOfFlowLayoutPart16LayoutCandidatesEPN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEEPKNS_9LayoutBoxEPNS1_7HashSetIPKNS_12LayoutObjectENS1_7PtrHashISC_EENS1_10HashTraitsISD_EES4_EE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"class.WTF::Vector.1954"* nonnull %4, %"class.blink::LayoutBox"* null, %"class.WTF::HashSet.2222"* nonnull %5)
  %410 = load i32, i32* %397, align 4
  %411 = icmp eq i32 %406, %410
  br i1 %411, label %412, label %405

412:                                              ; preds = %408, %405, %399, %394
  %413 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %396, align 8
  %414 = icmp eq %"class.blink::LayoutObject"** %413, null
  br i1 %414, label %417, label %415, !prof !3

415:                                              ; preds = %412
  %416 = bitcast %"class.blink::LayoutObject"** %413 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %416) #12
  store %"class.blink::LayoutObject"** null, %"class.blink::LayoutObject"*** %396, align 8
  br label %417

417:                                              ; preds = %412, %415
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %395) #12
  br label %418

418:                                              ; preds = %390, %291, %417
  %419 = bitcast %"class.WTF::Vector.1954"* %4 to %"class.WTF::ConditionalDestructor.1962"*
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1962"* nonnull %419) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #12
  br label %420

420:                                              ; preds = %88, %418, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGOutOfFlowLayoutPart30HandleMulticolsWithPendingOOFsEPNS_20NGBoxFragmentBuilderE(%"class.blink::NGOutOfFlowLayoutPart"* nocapture readonly, %"class.blink::NGBoxFragmentBuilder"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::HashMap.1964", align 8
  %4 = alloca %"class.blink::NGBlockNode", align 8
  %5 = bitcast %"class.blink::NGBoxFragmentBuilder"* %1 to %"class.blink::NGContainerFragmentBuilder"*
  %6 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %1, i64 0, i32 0, i32 12, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %120, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.WTF::HashMap.1964"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::HashMap.1964", %"class.WTF::HashMap.1964"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::HashMap.1964", %"class.WTF::HashMap.1964"* %3, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::HashMap.1964", %"class.WTF::HashMap.1964"* %3, i64 0, i32 0, i32 2
  %14 = bitcast %"class.WTF::HashMap.1964"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 20, i1 false) #12
  call void @_ZN5blink26NGContainerFragmentBuilder28SwapMulticolsWithPendingOOFsEPN3WTF7HashMapIPNS_9LayoutBoxENS_25NGMulticolWithPendingOOFsINS_13LogicalOffsetEEENS1_7PtrHashIS3_EENS1_10HashTraitsIS4_EENSA_IS7_EENS1_18PartitionAllocatorEEE(%"class.blink::NGContainerFragmentBuilder"* %5, %"class.WTF::HashMap.1964"* nonnull %3) #12
  %15 = load i32, i32* %13, align 4
  %16 = icmp eq i32 %15, 0
  %17 = load %"struct.WTF::KeyValuePair.1968"*, %"struct.WTF::KeyValuePair.1968"** %11, align 8
  br i1 %16, label %91, label %18

18:                                               ; preds = %9
  %19 = bitcast %"class.blink::NGBlockNode"* %4 to i8*
  %20 = bitcast %"class.blink::NGBlockNode"* %4 to i64*
  %21 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %4, i64 0, i32 0, i32 1
  %22 = bitcast %"class.WTF::HashMap.1964"* %3 to i64*
  br label %23

23:                                               ; preds = %18, %69
  %24 = phi %"struct.WTF::KeyValuePair.1968"* [ %17, %18 ], [ %72, %69 ]
  %25 = load i32, i32* %12, align 8
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.1968", %"struct.WTF::KeyValuePair.1968"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %23, %33
  %30 = phi %"struct.WTF::KeyValuePair.1968"* [ %34, %33 ], [ %24, %23 ]
  %31 = bitcast %"struct.WTF::KeyValuePair.1968"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  switch i64 %32, label %36 [
    i64 -1, label %33
    i64 0, label %33
  ]

33:                                               ; preds = %29, %29
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1968", %"struct.WTF::KeyValuePair.1968"* %30, i64 1
  %35 = icmp eq %"struct.WTF::KeyValuePair.1968"* %34, %27
  br i1 %35, label %41, label %29

36:                                               ; preds = %29, %23
  %37 = phi %"struct.WTF::KeyValuePair.1968"* [ %24, %23 ], [ %30, %29 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair.1968"* %37, %27
  br i1 %38, label %41, label %73

39:                                               ; preds = %73, %89, %86
  %40 = load %"struct.WTF::KeyValuePair.1968"*, %"struct.WTF::KeyValuePair.1968"** %11, align 8
  br label %41

41:                                               ; preds = %33, %39, %36
  %42 = phi %"struct.WTF::KeyValuePair.1968"* [ %40, %39 ], [ %24, %36 ], [ %24, %33 ]
  %43 = icmp eq %"struct.WTF::KeyValuePair.1968"* %42, null
  br i1 %43, label %69, label %44

44:                                               ; preds = %41
  %45 = load i32, i32* %12, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %67, label %47

47:                                               ; preds = %44
  %48 = zext i32 %45 to i64
  br label %49

49:                                               ; preds = %64, %47
  %50 = phi i64 [ 0, %47 ], [ %65, %64 ]
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.1968", %"struct.WTF::KeyValuePair.1968"* %42, i64 %50, i32 0
  %52 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %51, align 8
  %53 = icmp eq %"class.blink::LayoutBox"* %52, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1968", %"struct.WTF::KeyValuePair.1968"* %42, i64 %50, i32 1, i32 1, i32 2, i32 0
  %56 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %55, align 8
  %57 = icmp eq %"class.blink::NGPhysicalFragment"* %56, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %56, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %59) #12
  %60 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %58
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %56) #12
  br label %64

64:                                               ; preds = %63, %58, %54, %49
  %65 = add nuw nsw i64 %50, 1
  %66 = icmp eq i64 %65, %48
  br i1 %66, label %67, label %49

67:                                               ; preds = %64, %44
  %68 = bitcast %"struct.WTF::KeyValuePair.1968"* %42 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %68) #12
  store atomic i64 0, i64* %22 monotonic, align 8
  store i32 0, i32* %12, align 8
  store i32 0, i32* %13, align 4
  br label %69

69:                                               ; preds = %41, %67
  call void @_ZN5blink26NGContainerFragmentBuilder28SwapMulticolsWithPendingOOFsEPN3WTF7HashMapIPNS_9LayoutBoxENS_25NGMulticolWithPendingOOFsINS_13LogicalOffsetEEENS1_7PtrHashIS3_EENS1_10HashTraitsIS4_EENSA_IS7_EENS1_18PartitionAllocatorEEE(%"class.blink::NGContainerFragmentBuilder"* %5, %"class.WTF::HashMap.1964"* nonnull %3) #12
  %70 = load i32, i32* %13, align 4
  %71 = icmp eq i32 %70, 0
  %72 = load %"struct.WTF::KeyValuePair.1968"*, %"struct.WTF::KeyValuePair.1968"** %11, align 8
  br i1 %71, label %91, label %23

73:                                               ; preds = %36, %89
  %74 = phi %"struct.WTF::KeyValuePair.1968"* [ %83, %89 ], [ %37, %36 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %75 = bitcast %"struct.WTF::KeyValuePair.1968"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  store i64 %76, i64* %20, align 8
  %77 = load i8, i8* %21, align 8
  %78 = and i8 %77, -2
  store i8 %78, i8* %21, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.1968", %"struct.WTF::KeyValuePair.1968"* %74, i64 0, i32 1
  call void @_ZN5blink21NGOutOfFlowLayoutPart20LayoutOOFsInMulticolERKNS_11NGBlockNodeEPKNS_25NGMulticolWithPendingOOFsINS_13LogicalOffsetEEE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %4, %"struct.blink::NGMulticolWithPendingOOFs"* %79)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.1968", %"struct.WTF::KeyValuePair.1968"* %74, i64 1
  %81 = icmp eq %"struct.WTF::KeyValuePair.1968"* %80, %27
  br i1 %81, label %39, label %82

82:                                               ; preds = %73, %86
  %83 = phi %"struct.WTF::KeyValuePair.1968"* [ %87, %86 ], [ %80, %73 ]
  %84 = bitcast %"struct.WTF::KeyValuePair.1968"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  switch i64 %85, label %89 [
    i64 -1, label %86
    i64 0, label %86
  ]

86:                                               ; preds = %82, %82
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.1968", %"struct.WTF::KeyValuePair.1968"* %83, i64 1
  %88 = icmp eq %"struct.WTF::KeyValuePair.1968"* %87, %27
  br i1 %88, label %39, label %82

89:                                               ; preds = %82
  %90 = icmp eq %"struct.WTF::KeyValuePair.1968"* %83, %27
  br i1 %90, label %39, label %73

91:                                               ; preds = %69, %9
  %92 = phi %"struct.WTF::KeyValuePair.1968"* [ %17, %9 ], [ %72, %69 ]
  %93 = icmp eq %"struct.WTF::KeyValuePair.1968"* %92, null
  br i1 %93, label %119, label %94, !prof !3

94:                                               ; preds = %91
  %95 = load i32, i32* %12, align 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %117, label %97

97:                                               ; preds = %94
  %98 = zext i32 %95 to i64
  br label %99

99:                                               ; preds = %114, %97
  %100 = phi i64 [ 0, %97 ], [ %115, %114 ]
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.1968", %"struct.WTF::KeyValuePair.1968"* %92, i64 %100, i32 0
  %102 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %101, align 8
  %103 = icmp eq %"class.blink::LayoutBox"* %102, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  br i1 %103, label %114, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.1968", %"struct.WTF::KeyValuePair.1968"* %92, i64 %100, i32 1, i32 1, i32 2, i32 0
  %106 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %105, align 8
  %107 = icmp eq %"class.blink::NGPhysicalFragment"* %106, null
  br i1 %107, label %114, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %106, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %109) #12
  %110 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %106, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %108
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %106) #12
  br label %114

114:                                              ; preds = %113, %108, %104, %99
  %115 = add nuw nsw i64 %100, 1
  %116 = icmp eq i64 %115, %98
  br i1 %116, label %117, label %99

117:                                              ; preds = %114, %94
  %118 = bitcast %"struct.WTF::KeyValuePair.1968"* %92 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %118) #12
  store %"struct.WTF::KeyValuePair.1968"* null, %"struct.WTF::KeyValuePair.1968"** %11, align 8
  br label %119

119:                                              ; preds = %91, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  br label %120

120:                                              ; preds = %2, %119
  ret void
}

declare void @_ZN5blink26NGContainerFragmentBuilder37SwapOutOfFlowFragmentainerDescendantsEPN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGContainerFragmentBuilder"*, %"class.WTF::Vector.1954"*) local_unnamed_addr #2

declare i32 @_ZN5blink23ColumnInlineProgressionENS_10LayoutUnitERKNS_13ComputedStyleE(i32, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGOutOfFlowLayoutPart30LayoutFragmentainerDescendantsEPN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEENS_10LayoutUnitEbPNS2_INS0_17MulticolChildInfoELj0ES4_EE(%"class.blink::NGOutOfFlowLayoutPart"*, %"class.WTF::Vector.1954"*, i32, i1 zeroext, %"class.WTF::Vector.2207"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::Vector.2275", align 8
  %7 = alloca %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", align 8
  %8 = alloca %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.WTF::Vector.2278", align 8
  %11 = zext i1 %3 to i8
  %12 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 7
  store %"class.WTF::Vector.2207"* %4, %"class.WTF::Vector.2207"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 15
  store i8 %11, i8* %13, align 1
  %14 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 0
  %15 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %15, i64 0, i32 1
  %17 = bitcast %"struct.blink::NGFragmentGeometry"** %16 to i64**
  %18 = load i64*, i64** %17, align 8
  %19 = load i64, i64* %18, align 4
  %20 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %15, i64 0, i32 3
  %21 = tail call i64 @_ZN5blink17ShrinkLogicalSizeENS_11LogicalSizeERKNS_10NGBoxStrutE(i64 %19, %"struct.blink::NGBoxStrut"* dereferenceable(16) %20) #12
  %22 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 8, i32 0
  %23 = lshr i64 %21, 32
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %22, align 8
  %25 = bitcast %"class.WTF::Vector.2275"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.WTF::Vector.2275", %"class.WTF::Vector.2275"* %6, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::Vector.2275", %"class.WTF::Vector.2275"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 16, i1 false) #12
  %28 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %1, i64 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %432, label %31

31:                                               ; preds = %5
  %32 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %1, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %7 to i8*
  %34 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8 to i8*
  %35 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %7, i64 0, i32 1
  %37 = bitcast %"class.blink::NGConstraintSpace"* %36 to i64*
  %38 = bitcast %"class.blink::NGConstraintSpace"* %35 to i64*
  %39 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 0, i32 1, i32 2
  %40 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %7, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.blink::NGExclusionSpace"* %39 to i64*
  %42 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %7, i64 0, i32 1, i32 3, i32 0
  %43 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 0, i32 1, i32 3, i32 0
  %44 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %7, i64 0, i32 1, i32 1, i32 0
  %45 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 0, i32 1, i32 1, i32 0
  %46 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %45 to i8**
  %47 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %7, i64 0, i32 1, i32 1
  %48 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 0, i32 1, i32 1
  %49 = bitcast %union.anon.1726* %47 to i64*
  %50 = bitcast %union.anon.1726* %48 to i64*
  %51 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 0, i32 2
  %52 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %7, i64 0, i32 2
  %53 = bitcast %"struct.blink::NGLogicalStaticPosition"* %51 to i8*
  %54 = bitcast %"struct.blink::NGLogicalStaticPosition"* %52 to i8*
  %55 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 1
  %56 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 2
  %57 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 3
  %58 = getelementptr inbounds %class.scoped_refptr.1871, %class.scoped_refptr.1871* %57, i64 0, i32 0
  %59 = bitcast %class.scoped_refptr.1871* %57 to i64*
  %60 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 1, i32 8
  %61 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %55 to i64*
  %62 = bitcast %"struct.blink::LogicalOffset"* %60 to i64*
  %63 = bitcast i32* %9 to i8*
  %64 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %7, i64 0, i32 5, i32 0
  %66 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %55, i64 0, i32 0
  %67 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 1, i32 1, i32 0
  %70 = bitcast %"class.blink::NGBlockBreakToken"** %56 to i64*
  %71 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 3, i32 0
  %72 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %7, i64 0, i32 1, i32 2
  %73 = bitcast %"class.WTF::Vector.2278"* %10 to i8*
  %74 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %10, i64 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %10, i64 0, i32 0, i32 0, i32 2
  %76 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 9, i32 0
  %77 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGContainerFragmentBuilder"**
  %78 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::ComputedStyleBase"***
  %79 = bitcast %"class.WTF::Vector.2278"* %10 to i8**
  %80 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %8, i64 0, i32 0, i32 1, i32 1
  %81 = bitcast %union.anon.1726* %80 to i8*
  %82 = bitcast %"class.blink::NGBlockBreakToken"** %56 to i8*
  br label %83

83:                                               ; preds = %326, %31
  %84 = phi i32 [ %29, %31 ], [ %327, %326 ]
  %85 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %32, align 8
  %86 = zext i32 %84 to i64
  %87 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 %86
  br label %96

88:                                               ; preds = %240
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 16, i1 false) #12
  store i32 0, i32* %76, align 4
  %89 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %77, align 8
  %90 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %89, i64 0, i32 14, i32 0, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = load i32, i32* %27, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %243, label %94

94:                                               ; preds = %88
  %95 = add i32 %91, -1
  br label %329

96:                                               ; preds = %83, %240
  %97 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %241, %240 ], [ %85, %83 ]
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %33) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 128, i1 false)
  call void @_ZN5blink21NGOutOfFlowLayoutPart13SetupNodeInfoERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* nonnull sret %7, %"class.blink::NGOutOfFlowLayoutPart"* %0, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112) %97)
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %34) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 -86, i64 200, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %33, i64 16, i1 false) #12
  %98 = load i64, i64* %37, align 8
  store i64 %98, i64* %38, align 8
  %99 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %40, align 8
  %100 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %99, null
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = call noalias i8* @malloc(i64 40) #12
  %103 = bitcast i8* %102 to %"class.blink::NGExclusionSpaceInternal"*
  call void @_ZN5blink24NGExclusionSpaceInternalC1ERKS0_(%"class.blink::NGExclusionSpaceInternal"* %103, %"class.blink::NGExclusionSpaceInternal"* nonnull dereferenceable(40) %99) #12
  %104 = ptrtoint i8* %102 to i64
  br label %105

105:                                              ; preds = %101, %96
  %106 = phi i64 [ %104, %101 ], [ 0, %96 ]
  store i64 %106, i64* %41, align 8
  %107 = load i32, i32* %42, align 8
  store i32 %107, i32* %43, align 8
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %105
  %111 = call noalias i8* @malloc(i64 88) #12
  %112 = bitcast i8* %111 to %"struct.blink::NGConstraintSpace::RareData"*
  %113 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %44, align 8
  call void @_ZN5blink17NGConstraintSpace8RareDataC2ERKS1_(%"struct.blink::NGConstraintSpace::RareData"* %112, %"struct.blink::NGConstraintSpace::RareData"* dereferenceable(88) %113) #12
  store i8* %111, i8** %46, align 8
  br label %116

114:                                              ; preds = %105
  %115 = load i64, i64* %49, align 8
  store i64 %115, i64* %50, align 8
  br label %116

116:                                              ; preds = %110, %114
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 73, i1 false) #12
  call void @_ZN5blink21NGOutOfFlowLayoutPart15CalculateOffsetERKNS0_8NodeInfoEPKNS_9LayoutBoxEb(%"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* sret %55, %"class.blink::NGOutOfFlowLayoutPart"* %0, %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* nonnull dereferenceable(128) %7, %"class.blink::LayoutBox"* null, i1 zeroext true)
  %117 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %97, i64 0, i32 6, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 16, i1 false)
  %118 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %117, align 8
  %119 = icmp eq %"class.blink::NGPhysicalFragment"* %118, null
  br i1 %119, label %120, label %121

120:                                              ; preds = %116
  store i64 0, i64* %59, align 8
  br label %132

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %118, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %122) #12
  %123 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %58, align 8
  %124 = ptrtoint %"class.blink::NGPhysicalFragment"* %118 to i64
  store i64 %124, i64* %59, align 8
  %125 = icmp eq %"class.blink::NGPhysicalFragment"* %123, null
  br i1 %125, label %132, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %123, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %127) #12
  %128 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %126
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %123) #12
  br label %132

132:                                              ; preds = %120, %121, %126, %131
  %133 = load i64, i64* %61, align 8
  store i64 %133, i64* %62, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #12
  store i32 0, i32* %9, align 4
  %134 = load i8, i8* %64, align 8, !range !2
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %137, !prof !4

136:                                              ; preds = %132
  call void @llvm.trap() #12
  unreachable

137:                                              ; preds = %132
  %138 = load i8, i8* %65, align 4
  %139 = load i32, i32* %67, align 4
  call void @_ZNK5blink21NGOutOfFlowLayoutPart42ComputeStartFragmentIndexAndRelativeOffsetERKNS0_19ContainingBlockInfoENS_11WritingModeENS_10LayoutUnitEPjPNS_13LogicalOffsetE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* dereferenceable(36) undef, i8 zeroext %138, i32 %139, i32* nonnull %9, %"struct.blink::LogicalOffset"* %66)
  %140 = load i32, i32* %9, align 4
  %141 = load i32, i32* %27, align 4
  %142 = icmp ult i32 %140, %141
  br i1 %142, label %145, label %143

143:                                              ; preds = %137
  %144 = add i32 %140, 1
  call void @_ZN3WTF6VectorINS0_IN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEEELj0ES4_E6resizeEj(%"class.WTF::Vector.2275"* nonnull %6, i32 %144)
  br label %145

145:                                              ; preds = %137, %143
  %146 = call dereferenceable(16) %"class.WTF::Vector.2278"* @_ZN3WTF6VectorINS0_IN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.2275"* nonnull %6, i32 %140) #12
  %147 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %146, i64 0, i32 0, i32 0, i32 2
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %146, i64 0, i32 0, i32 0, i32 1
  %150 = load i32, i32* %149, align 8
  %151 = icmp eq i32 %148, %150
  br i1 %151, label %152, label %174, !prof !4

152:                                              ; preds = %145
  %153 = add i32 %148, 1
  %154 = lshr i32 %148, 2
  %155 = add i32 %153, %154
  %156 = icmp ugt i32 %155, 4
  %157 = select i1 %156, i32 %155, i32 4
  %158 = icmp ugt i32 %157, %153
  %159 = select i1 %158, i32 %157, i32 %153
  %160 = icmp ult i32 %148, %159
  br i1 %160, label %161, label %174, !prof !3

161:                                              ; preds = %152
  %162 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %146, i64 0, i32 0, i32 0, i32 0
  %163 = load %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %162, align 8
  %164 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %163, null
  br i1 %164, label %165, label %173

165:                                              ; preds = %161
  %166 = zext i32 %159 to i64
  %167 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutEEEmm(i64 %166) #12
  %168 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %167, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutEEEPKcv, i64 0, i64 0)) #12
  %169 = ptrtoint i8* %168 to i64
  %170 = bitcast %"class.WTF::Vector.2278"* %146 to i64*
  store atomic i64 %169, i64* %170 monotonic, align 8
  %171 = udiv i64 %167, 224
  %172 = trunc i64 %171 to i32
  store i32 %172, i32* %149, align 8
  br label %174

173:                                              ; preds = %161
  call void @_ZN3WTF6VectorIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2278"* %146, i32 %159) #12
  br label %174

174:                                              ; preds = %145, %152, %165, %173
  %175 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %146, i64 0, i32 0, i32 0, i32 0
  %176 = load %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %175, align 8
  %177 = load i32, i32* %147, align 4
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %176, i64 %178
  %180 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* nonnull align 8 %34, i64 16, i1 false) #12
  %181 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %176, i64 %178, i32 0, i32 1
  %182 = bitcast %"class.blink::NGConstraintSpace"* %181 to i64*
  %183 = load i64, i64* %38, align 8
  store i64 %183, i64* %182, align 8
  %184 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %176, i64 %178, i32 0, i32 1, i32 2
  %185 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %68, align 8
  %186 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %185, null
  br i1 %186, label %191, label %187

187:                                              ; preds = %174
  %188 = call noalias i8* @malloc(i64 40) #12
  %189 = bitcast i8* %188 to %"class.blink::NGExclusionSpaceInternal"*
  call void @_ZN5blink24NGExclusionSpaceInternalC1ERKS0_(%"class.blink::NGExclusionSpaceInternal"* %189, %"class.blink::NGExclusionSpaceInternal"* nonnull dereferenceable(40) %185) #12
  %190 = ptrtoint i8* %188 to i64
  br label %191

191:                                              ; preds = %187, %174
  %192 = phi i64 [ %190, %187 ], [ 0, %174 ]
  %193 = bitcast %"class.blink::NGExclusionSpace"* %184 to i64*
  store i64 %192, i64* %193, align 8
  %194 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %176, i64 %178, i32 0, i32 1, i32 3, i32 0
  %195 = load i32, i32* %43, align 8
  store i32 %195, i32* %194, align 8
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %204, label %198

198:                                              ; preds = %191
  %199 = call noalias i8* @malloc(i64 88) #12
  %200 = bitcast i8* %199 to %"struct.blink::NGConstraintSpace::RareData"*
  %201 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %45, align 8
  call void @_ZN5blink17NGConstraintSpace8RareDataC2ERKS1_(%"struct.blink::NGConstraintSpace::RareData"* %200, %"struct.blink::NGConstraintSpace::RareData"* dereferenceable(88) %201) #12
  %202 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %176, i64 %178, i32 0, i32 1, i32 1, i32 0
  %203 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %202 to i8**
  store i8* %199, i8** %203, align 8
  br label %208

204:                                              ; preds = %191
  %205 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %176, i64 %178, i32 0, i32 1, i32 1
  %206 = bitcast %union.anon.1726* %205 to i64*
  %207 = load i64, i64* %50, align 8
  store i64 %207, i64* %206, align 8
  br label %208

208:                                              ; preds = %204, %198
  %209 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %176, i64 %178, i32 0, i32 2
  %210 = bitcast %"struct.blink::NGLogicalStaticPosition"* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %210, i8* align 8 %53, i64 73, i1 false) #12
  %211 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %176, i64 %178, i32 1
  %212 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %211 to i64*
  %213 = load i64, i64* %61, align 8
  store i64 %213, i64* %212, align 8
  %214 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %69, align 8
  %215 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %176, i64 %178, i32 1, i32 1, i32 0
  store %"class.blink::NGLayoutResult"* %214, %"class.blink::NGLayoutResult"** %215, align 8
  %216 = icmp eq %"class.blink::NGLayoutResult"* %214, null
  br i1 %216, label %219, label %217

217:                                              ; preds = %208
  %218 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %214, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %218) #12
  br label %219

219:                                              ; preds = %217, %208
  %220 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %176, i64 %178, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* align 8 %64, i64 60, i1 false) #12
  %221 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %176, i64 %178, i32 2
  %222 = load i64, i64* %70, align 8
  %223 = bitcast %"class.blink::NGBlockBreakToken"** %221 to i64*
  store i64 %222, i64* %223, align 8
  %224 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %71, align 8
  %225 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %176, i64 %178, i32 3, i32 0
  store %"class.blink::NGPhysicalFragment"* %224, %"class.blink::NGPhysicalFragment"** %225, align 8
  %226 = icmp eq %"class.blink::NGPhysicalFragment"* %224, null
  br i1 %226, label %229, label %227

227:                                              ; preds = %219
  %228 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %224, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %228) #12
  br label %229

229:                                              ; preds = %219, %227
  %230 = load i32, i32* %147, align 4
  %231 = add i32 %230, 1
  store i32 %231, i32* %147, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #12
  call void @_ZN5blink21NGOutOfFlowLayoutPart12NodeToLayoutD2Ev(%"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %34) #12
  %232 = load i32, i32* %42, align 8
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %240, label %235

235:                                              ; preds = %229
  %236 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %44, align 8
  %237 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %236, null
  br i1 %237, label %240, label %238

238:                                              ; preds = %235
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %236) #12
  %239 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %236 to i8*
  call void @free(i8* %239) #12
  br label %240

240:                                              ; preds = %229, %235, %238
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %72) #12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %33) #12
  %241 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %97, i64 1
  %242 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %241, %87
  br i1 %242, label %88, label %96

243:                                              ; preds = %388, %88
  %244 = phi i32 [ 0, %88 ], [ %389, %388 ]
  %245 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %32, align 8
  %246 = load i32, i32* %28, align 4
  %247 = zext i32 %246 to i64
  %248 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %245, i64 %247
  %249 = icmp eq i32 %246, 0
  br i1 %249, label %276, label %250

250:                                              ; preds = %243, %271
  %251 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %272, %271 ], [ %245, %243 ]
  %252 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %251, i64 0, i32 7, i32 2, i32 0
  %253 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %252, align 8
  %254 = icmp eq %"class.blink::NGPhysicalFragment"* %253, null
  br i1 %254, label %261, label %255

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %253, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %256) #12
  %257 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %253, i64 0, i32 0, i32 0, i32 0, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %255
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %253) #12
  br label %261

261:                                              ; preds = %260, %255, %250
  %262 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %251, i64 0, i32 6, i32 2, i32 0
  %263 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %262, align 8
  %264 = icmp eq %"class.blink::NGPhysicalFragment"* %263, null
  br i1 %264, label %271, label %265

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %263, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %266) #12
  %267 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %263, i64 0, i32 0, i32 0, i32 0, i32 0
  %268 = load i32, i32* %267, align 4
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %265
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %263) #12
  br label %271

271:                                              ; preds = %270, %265, %261
  %272 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %251, i64 1
  %273 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %272, %248
  br i1 %273, label %274, label %250

274:                                              ; preds = %271
  %275 = load i32, i32* %27, align 4
  br label %276

276:                                              ; preds = %274, %243
  %277 = phi i32 [ %275, %274 ], [ %244, %243 ]
  store i32 0, i32* %28, align 4
  %278 = load %"class.WTF::Vector.2278"*, %"class.WTF::Vector.2278"** %26, align 8
  %279 = zext i32 %277 to i64
  %280 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %278, i64 %279
  %281 = icmp eq i32 %277, 0
  br i1 %281, label %307, label %282

282:                                              ; preds = %276, %304
  %283 = phi %"class.WTF::Vector.2278"* [ %305, %304 ], [ %278, %276 ]
  %284 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %283, i64 0, i32 0, i32 0, i32 0
  %285 = load %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %284, align 8
  %286 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %285, null
  br i1 %286, label %304, label %287, !prof !3

287:                                              ; preds = %282
  %288 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %285 to i8*
  %289 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %283, i64 0, i32 0, i32 0, i32 2
  %290 = load i32, i32* %289, align 4
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %302, label %292, !prof !4

292:                                              ; preds = %287
  %293 = zext i32 %290 to i64
  %294 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %285, i64 %293
  br label %295

295:                                              ; preds = %295, %292
  %296 = phi %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* [ %297, %295 ], [ %285, %292 ]
  call void @_ZN5blink21NGOutOfFlowLayoutPart12NodeToLayoutD2Ev(%"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %296) #12
  %297 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %296, i64 1
  %298 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %297, %294
  br i1 %298, label %299, label %295

299:                                              ; preds = %295
  store i32 0, i32* %289, align 4
  %300 = bitcast %"class.WTF::Vector.2278"* %283 to i8**
  %301 = load i8*, i8** %300, align 8
  br label %302

302:                                              ; preds = %299, %287
  %303 = phi i8* [ %301, %299 ], [ %288, %287 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %303) #12
  store %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* null, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %284, align 8
  br label %304

304:                                              ; preds = %302, %282
  %305 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %283, i64 1
  %306 = icmp eq %"class.WTF::Vector.2278"* %305, %280
  br i1 %306, label %307, label %282

307:                                              ; preds = %304, %276
  store i32 0, i32* %27, align 4
  %308 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %77, align 8
  call void @_ZN5blink26NGContainerFragmentBuilder37SwapOutOfFlowFragmentainerDescendantsEPN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGContainerFragmentBuilder"* %308, %"class.WTF::Vector.1954"* %1) #12
  %309 = load %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %74, align 8
  %310 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %309, null
  br i1 %310, label %326, label %311, !prof !3

311:                                              ; preds = %307
  %312 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %309 to i8*
  %313 = load i32, i32* %75, align 4
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %324, label %315, !prof !4

315:                                              ; preds = %311
  %316 = zext i32 %313 to i64
  %317 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %309, i64 %316
  br label %318

318:                                              ; preds = %318, %315
  %319 = phi %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* [ %320, %318 ], [ %309, %315 ]
  call void @_ZN5blink21NGOutOfFlowLayoutPart12NodeToLayoutD2Ev(%"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %319) #12
  %320 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %319, i64 1
  %321 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %320, %317
  br i1 %321, label %322, label %318

322:                                              ; preds = %318
  store i32 0, i32* %75, align 4
  %323 = load i8*, i8** %79, align 8
  br label %324

324:                                              ; preds = %322, %311
  %325 = phi i8* [ %323, %322 ], [ %312, %311 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %325) #12
  store %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* null, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %74, align 8
  br label %326

326:                                              ; preds = %307, %324
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #12
  %327 = load i32, i32* %28, align 4
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %392, label %83

329:                                              ; preds = %94, %388
  %330 = phi i32 [ 0, %94 ], [ %390, %388 ]
  %331 = icmp ult i32 %330, %91
  br i1 %331, label %332, label %347

332:                                              ; preds = %329
  %333 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %77, align 8
  %334 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %333, i64 0, i32 14
  %335 = call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %334, i32 %330) #12
  %336 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %335, i64 0, i32 1, i32 0
  %337 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %336, align 8
  %338 = icmp eq %"class.blink::NGPhysicalFragment"* %337, null
  br i1 %338, label %347, label %339

339:                                              ; preds = %332
  %340 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %337, i64 0, i32 3
  %341 = bitcast i24* %340 to i32*
  %342 = load i32, i32* %341, align 8
  %343 = and i32 %342, 960
  %344 = icmp eq i32 %343, 256
  br i1 %344, label %345, label %378

345:                                              ; preds = %339
  %346 = call dereferenceable(16) %"class.WTF::Vector.2278"* @_ZN3WTF6VectorINS0_IN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.2275"* nonnull %6, i32 %330) #12
  call void @_ZN5blink21NGOutOfFlowLayoutPart25LayoutOOFsInFragmentainerERKN3WTF6VectorINS0_12NodeToLayoutELj0ENS1_18PartitionAllocatorEEEjNS_10LayoutUnitEPS5_(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"class.WTF::Vector.2278"* dereferenceable(16) %346, i32 %330, i32 %2, %"class.WTF::Vector.2278"* nonnull %10)
  br label %352

347:                                              ; preds = %332, %329
  %348 = call dereferenceable(16) %"class.WTF::Vector.2278"* @_ZN3WTF6VectorINS0_IN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.2275"* nonnull %6, i32 %330) #12
  call void @_ZN5blink21NGOutOfFlowLayoutPart25LayoutOOFsInFragmentainerERKN3WTF6VectorINS0_12NodeToLayoutELj0ENS1_18PartitionAllocatorEEEjNS_10LayoutUnitEPS5_(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"class.WTF::Vector.2278"* dereferenceable(16) %348, i32 %330, i32 %2, %"class.WTF::Vector.2278"* nonnull %10)
  %349 = load %"class.WTF::Vector.2207"*, %"class.WTF::Vector.2207"** %12, align 8
  %350 = icmp eq %"class.WTF::Vector.2207"* %349, null
  %351 = select i1 %350, i32 %330, i32 %95
  br label %352

352:                                              ; preds = %345, %347
  %353 = phi i32 [ %330, %345 ], [ %351, %347 ]
  %354 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %77, align 8
  %355 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %354, i64 0, i32 14
  %356 = call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %355, i32 %353) #12
  %357 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %356, i64 0, i32 1, i32 0
  %358 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %357, align 8
  %359 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %358, i64 0, i32 2, i32 0, i32 0
  %360 = load i32, i32* %359, align 8
  %361 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %358, i64 0, i32 2, i32 1, i32 0
  %362 = load i32, i32* %361, align 4
  %363 = load %"class.blink::ComputedStyleBase"**, %"class.blink::ComputedStyleBase"*** %78, align 8
  %364 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %363, align 8
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %364, i64 0, i32 9
  %366 = bitcast [20 x i8]* %365 to i160*
  %367 = load i160, i160* %366, align 8
  %368 = and i160 %367, 15211807202738752817960438464512
  %369 = icmp eq i160 %368, 0
  %370 = select i1 %369, i32 %362, i32 %360
  %371 = load i32, i32* %76, align 4
  %372 = icmp slt i32 %370, 0
  %373 = select i1 %372, i32 -2147483648, i32 2147483647
  %374 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %371, i32 %370) #12
  %375 = extractvalue { i32, i1 } %374, 1
  %376 = extractvalue { i32, i1 } %374, 0
  %377 = select i1 %375, i32 %373, i32 %376, !prof !4
  store i32 %377, i32* %76, align 4
  br label %378

378:                                              ; preds = %352, %339
  %379 = load i32, i32* %27, align 4
  %380 = add i32 %379, -1
  %381 = icmp ne i32 %330, %380
  %382 = load i32, i32* %75, align 4
  %383 = icmp eq i32 %382, 0
  %384 = or i1 %381, %383
  br i1 %384, label %388, label %385

385:                                              ; preds = %378
  %386 = add i32 %330, 2
  call void @_ZN3WTF6VectorINS0_IN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEEELj0ES4_E6resizeEj(%"class.WTF::Vector.2275"* nonnull %6, i32 %386)
  %387 = load i32, i32* %27, align 4
  br label %388

388:                                              ; preds = %378, %385
  %389 = phi i32 [ %379, %378 ], [ %387, %385 ]
  %390 = add nuw i32 %330, 1
  %391 = icmp ult i32 %390, %389
  br i1 %391, label %329, label %243

392:                                              ; preds = %326
  %393 = load %"class.WTF::Vector.2278"*, %"class.WTF::Vector.2278"** %26, align 8
  %394 = icmp eq %"class.WTF::Vector.2278"* %393, null
  br i1 %394, label %432, label %395, !prof !3

395:                                              ; preds = %392
  %396 = bitcast %"class.WTF::Vector.2278"* %393 to i8*
  %397 = load i32, i32* %27, align 4
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %430, label %399, !prof !4

399:                                              ; preds = %395
  %400 = zext i32 %397 to i64
  %401 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %393, i64 %400
  br label %402

402:                                              ; preds = %424, %399
  %403 = phi %"class.WTF::Vector.2278"* [ %425, %424 ], [ %393, %399 ]
  %404 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %403, i64 0, i32 0, i32 0, i32 0
  %405 = load %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %404, align 8
  %406 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %405, null
  br i1 %406, label %424, label %407, !prof !3

407:                                              ; preds = %402
  %408 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %405 to i8*
  %409 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %403, i64 0, i32 0, i32 0, i32 2
  %410 = load i32, i32* %409, align 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %422, label %412, !prof !4

412:                                              ; preds = %407
  %413 = zext i32 %410 to i64
  %414 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %405, i64 %413
  br label %415

415:                                              ; preds = %415, %412
  %416 = phi %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* [ %417, %415 ], [ %405, %412 ]
  call void @_ZN5blink21NGOutOfFlowLayoutPart12NodeToLayoutD2Ev(%"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %416) #12
  %417 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %416, i64 1
  %418 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %417, %414
  br i1 %418, label %419, label %415

419:                                              ; preds = %415
  store i32 0, i32* %409, align 4
  %420 = bitcast %"class.WTF::Vector.2278"* %403 to i8**
  %421 = load i8*, i8** %420, align 8
  br label %422

422:                                              ; preds = %419, %407
  %423 = phi i8* [ %421, %419 ], [ %408, %407 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %423) #12
  store %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* null, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %404, align 8
  br label %424

424:                                              ; preds = %422, %402
  %425 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %403, i64 1
  %426 = icmp eq %"class.WTF::Vector.2278"* %425, %401
  br i1 %426, label %427, label %402

427:                                              ; preds = %424
  store i32 0, i32* %27, align 4
  %428 = bitcast %"class.WTF::Vector.2275"* %6 to i8**
  %429 = load i8*, i8** %428, align 8
  br label %430

430:                                              ; preds = %427, %395
  %431 = phi i8* [ %429, %427 ], [ %396, %395 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %431) #12
  store %"class.WTF::Vector.2278"* null, %"class.WTF::Vector.2278"** %26, align 8
  br label %432

432:                                              ; preds = %5, %392, %430
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1962"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.1962"* %0 to %"struct.blink::NGLogicalOutOfFlowPositionedNode"**
  %3 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %2, align 8
  %4 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %3, null
  br i1 %4, label %43, label %5, !prof !3

5:                                                ; preds = %1
  %6 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %3 to i8*
  %7 = getelementptr inbounds %"class.WTF::ConditionalDestructor.1962", %"class.WTF::ConditionalDestructor.1962"* %0, i64 12
  %8 = bitcast %"class.WTF::ConditionalDestructor.1962"* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %41, label %11, !prof !4

11:                                               ; preds = %5
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %3, i64 %12
  br label %14

14:                                               ; preds = %11, %35
  %15 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %36, %35 ], [ %3, %11 ]
  %16 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 7, i32 2, i32 0
  %17 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %16, align 8
  %18 = icmp eq %"class.blink::NGPhysicalFragment"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #12
  %21 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %19
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %17) #12
  br label %25

25:                                               ; preds = %24, %19, %14
  %26 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 6, i32 2, i32 0
  %27 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %26, align 8
  %28 = icmp eq %"class.blink::NGPhysicalFragment"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #12
  %31 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %27) #12
  br label %35

35:                                               ; preds = %34, %29, %25
  %36 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 1
  %37 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %36, %13
  br i1 %37, label %38, label %14

38:                                               ; preds = %35
  store i32 0, i32* %8, align 4
  %39 = bitcast %"class.WTF::ConditionalDestructor.1962"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %5
  %42 = phi i8* [ %40, %38 ], [ %6, %5 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #12
  store %"struct.blink::NGLogicalOutOfFlowPositionedNode"* null, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %2, align 8
  br label %43

43:                                               ; preds = %1, %41
  ret void
}

declare void @_ZN5blink20NGBoxFragmentBuilder56AdjustFixedposContainingBlockForFragmentainerDescendantsEv(%"class.blink::NGBoxFragmentBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink20NGBoxFragmentBuilder46AdjustFixedposContainingBlockForInnerMulticolsEv(%"class.blink::NGBoxFragmentBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink26NGContainerFragmentBuilder33SwapOutOfFlowPositionedCandidatesEPN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGContainerFragmentBuilder"*, %"class.WTF::Vector.1954"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::LayoutInline"* @_ZN5blink12_GLOBAL__N_134GetOOFContainingBlockFromAnonymousEPKNS_12LayoutObjectENS_9EPositionE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 {
  %3 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutBoxModelObject"*
  %4 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %3) #12
  br label %5

5:                                                ; preds = %35, %2
  %6 = phi %"class.blink::LayoutBoxModelObject"* [ %4, %2 ], [ %37, %35 ]
  %7 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %6, i64 0, i32 0
  switch i32 %1, label %35 [
    i32 0, label %8
    i32 1, label %29
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %6, i64 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = lshr i160 %13, 80
  %15 = trunc i160 %14 to i32
  %16 = and i32 %15, 7
  %17 = icmp eq i32 %16, 4
  %18 = and i160 %13, 128849018880
  %19 = icmp eq i160 %18, 42949672960
  %20 = and i1 %19, %17
  %21 = icmp eq i32 %16, 3
  %22 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %6, i64 0, i32 0, i32 4
  %23 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %22 to i96*
  %24 = load i96, i96* %23, align 4
  %25 = xor i1 %20, %21
  %26 = and i96 %24, 68719476736
  %27 = icmp eq i96 %26, 0
  %28 = and i1 %25, %27
  br i1 %28, label %35, label %38

29:                                               ; preds = %5
  %30 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %6, i64 0, i32 0, i32 4
  %31 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %30 to i96*
  %32 = load i96, i96* %31, align 4
  %33 = and i96 %32, 68719476736
  %34 = icmp eq i96 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %8, %29, %5
  %36 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %7, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #12
  %37 = bitcast %"class.blink::LayoutObject"* %36 to %"class.blink::LayoutBoxModelObject"*
  br label %5

38:                                               ; preds = %8, %29
  %39 = phi i96 [ %24, %8 ], [ %32, %29 ]
  %40 = and i96 %39, 16777216
  %41 = icmp eq i96 %40, 0
  br i1 %41, label %42, label %63

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %6, i64 0, i32 0, i32 6, i32 0, i32 0
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %45 = icmp eq %"class.blink::Node"* %44, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 0, i32 6, i32 0, i32 0
  br i1 %50, label %56, label %52

52:                                               ; preds = %46
  %53 = bitcast %"class.blink::NodeData"** %51 to %"class.blink::NodeRareData"**
  %54 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %54, i64 0, i32 1, i32 0, i32 0
  br label %58

56:                                               ; preds = %46
  %57 = bitcast %"class.blink::NodeData"** %51 to %"class.blink::NodeRenderingData"**
  br label %58

58:                                               ; preds = %56, %52
  %59 = phi %"class.blink::NodeRenderingData"** [ %55, %52 ], [ %57, %56 ]
  %60 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %60, i64 0, i32 1
  %62 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %61, align 8
  br label %63

63:                                               ; preds = %38, %42, %58
  %64 = phi %"class.blink::LayoutObject"* [ %62, %58 ], [ %7, %42 ], [ %7, %38 ]
  %65 = bitcast %"class.blink::LayoutObject"* %64 to %"class.blink::LayoutInline"*
  ret %"class.blink::LayoutInline"* %65
}

declare void @_ZN5blink26NGContainerFragmentBuilder22AddOutOfFlowDescendantERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"class.blink::NGContainerFragmentBuilder"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGOutOfFlowLayoutPart16LayoutCandidatesEPN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEEPKNS_9LayoutBoxEPNS1_7HashSetIPKNS_12LayoutObjectENS1_7PtrHashISC_EENS1_10HashTraitsISD_EES4_EE(%"class.blink::NGOutOfFlowLayoutPart"*, %"class.WTF::Vector.1954"*, %"class.blink::LayoutBox"*, %"class.WTF::HashSet.2222"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::LayoutBox"*, align 8
  %6 = alloca { %"class.blink::LayoutBox"*, i64 }, align 8
  %7 = bitcast { %"class.blink::LayoutBox"*, i64 }* %6 to %"class.blink::NGBlockNode"*
  %8 = alloca %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", align 8
  %9 = alloca %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", align 8
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"struct.blink::LogicalOffset"*
  %12 = alloca %"class.absl::optional.2262", align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %232, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.blink::LayoutBox"** %5 to i8*
  %19 = bitcast %"class.blink::LayoutBox"** %5 to i64*
  %20 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 0
  %21 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGContainerFragmentBuilder"**
  %22 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGFragmentBuilder"**
  %23 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 10
  %24 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 11
  %25 = icmp eq %"class.blink::LayoutBox"* %2, null
  %26 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 13
  %27 = bitcast { %"class.blink::LayoutBox"*, i64 }* %6 to i8*
  %28 = bitcast { %"class.blink::LayoutBox"*, i64 }* %6 to i64*
  %29 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %6, i64 0, i32 1
  %30 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %8 to i8*
  %31 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %9 to i8*
  %32 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %9, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %8, i64 0, i32 1
  %34 = bitcast %"class.blink::NGConstraintSpace"* %33 to i64*
  %35 = bitcast %"class.blink::NGConstraintSpace"* %32 to i64*
  %36 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %9, i64 0, i32 0, i32 1, i32 2
  %37 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %8, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.blink::NGExclusionSpace"* %36 to i64*
  %39 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %8, i64 0, i32 1, i32 3, i32 0
  %40 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %9, i64 0, i32 0, i32 1, i32 3, i32 0
  %41 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %8, i64 0, i32 1, i32 1, i32 0
  %42 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %9, i64 0, i32 0, i32 1, i32 1, i32 0
  %43 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %42 to i8**
  %44 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %8, i64 0, i32 1, i32 1
  %45 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %9, i64 0, i32 0, i32 1, i32 1
  %46 = bitcast %union.anon.1726* %44 to i64*
  %47 = bitcast %union.anon.1726* %45 to i64*
  %48 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %9, i64 0, i32 0, i32 2
  %49 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %8, i64 0, i32 2
  %50 = bitcast %"struct.blink::NGLogicalStaticPosition"* %48 to i8*
  %51 = bitcast %"struct.blink::NGLogicalStaticPosition"* %49 to i8*
  %52 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %9, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %9, i64 0, i32 2
  %54 = bitcast i64* %10 to i8*
  %55 = getelementptr inbounds %"class.absl::optional.2262", %"class.absl::optional.2262"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.WTF::HashSet.2222", %"class.WTF::HashSet.2222"* %3, i64 0, i32 0
  %57 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %8, i64 0, i32 1, i32 2
  %58 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %9, i64 0, i32 0, i32 1, i32 1
  %59 = bitcast %union.anon.1726* %58 to i8*
  %60 = bitcast %"class.blink::NGBlockBreakToken"** %53 to i8*
  br label %61

61:                                               ; preds = %16, %97
  call void @_ZN5blink21NGOutOfFlowLayoutPart29ComputeInlineContainingBlocksERKN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"class.WTF::Vector.1954"* dereferenceable(16) %1)
  %62 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %17, align 8
  %63 = load i32, i32* %13, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %62, i64 %64
  %66 = icmp eq i32 %63, 0
  br i1 %66, label %97, label %101

67:                                               ; preds = %229
  %68 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %17, align 8
  %69 = load i32, i32* %13, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %68, i64 %70
  %72 = icmp eq i32 %69, 0
  br i1 %72, label %97, label %73

73:                                               ; preds = %67, %94
  %74 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %95, %94 ], [ %68, %67 ]
  %75 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %74, i64 0, i32 7, i32 2, i32 0
  %76 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %75, align 8
  %77 = icmp eq %"class.blink::NGPhysicalFragment"* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %76, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %79) #12
  %80 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %78
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %76) #12
  br label %84

84:                                               ; preds = %83, %78, %73
  %85 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %74, i64 0, i32 6, i32 2, i32 0
  %86 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %85, align 8
  %87 = icmp eq %"class.blink::NGPhysicalFragment"* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %86, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %89) #12
  %90 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %88
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %86) #12
  br label %94

94:                                               ; preds = %93, %88, %84
  %95 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %74, i64 1
  %96 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %95, %71
  br i1 %96, label %97, label %73

97:                                               ; preds = %94, %61, %67
  store i32 0, i32* %13, align 4
  %98 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %21, align 8
  call void @_ZN5blink26NGContainerFragmentBuilder33SwapOutOfFlowPositionedCandidatesEPN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGContainerFragmentBuilder"* %98, %"class.WTF::Vector.1954"* %1) #12
  %99 = load i32, i32* %13, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %232, label %61

101:                                              ; preds = %61, %229
  %102 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %230, %229 ], [ %62, %61 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  store %"class.blink::LayoutBox"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutBox"*), %"class.blink::LayoutBox"** %5, align 8
  %103 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %19, align 8
  %105 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %21, align 8
  %106 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %105, i64 0, i32 30
  %107 = load i8, i8* %106, align 1, !range !2
  %108 = icmp eq i8 %107, 0
  %109 = bitcast %"class.blink::NGContainerFragmentBuilder"* %105 to %"class.blink::NGBoxFragmentBuilder"*
  br i1 %108, label %110, label %114

110:                                              ; preds = %101
  %111 = inttoptr i64 %104 to %"class.blink::LayoutBox"*
  %112 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %102, i64 0, i32 1
  call void @_ZNK5blink21NGOutOfFlowLayoutPart30SaveStaticPositionOnPaintLayerEPNS_9LayoutBoxERKNS_23NGLogicalStaticPositionE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"class.blink::LayoutBox"* %111, %"struct.blink::NGLogicalStaticPosition"* dereferenceable(16) %112)
  %113 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %20, align 8
  br label %114

114:                                              ; preds = %101, %110
  %115 = phi %"class.blink::NGBoxFragmentBuilder"* [ %109, %101 ], [ %113, %110 ]
  %116 = call i32 @_ZNK5blink20NGBoxFragmentBuilder7BoxTypeEv(%"class.blink::NGBoxFragmentBuilder"* %115) #12
  %117 = icmp eq i32 %116, 2
  br i1 %117, label %227, label %118

118:                                              ; preds = %114
  %119 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %102 to %"class.blink::LayoutObject"**
  %120 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %120, i64 0, i32 5, i32 0
  %122 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %122, i64 0, i32 0, i32 9
  %124 = bitcast [20 x i8]* %123 to i160*
  %125 = load i160, i160* %124, align 8
  %126 = lshr i160 %125, 80
  %127 = trunc i160 %126 to i32
  %128 = and i32 %127, 7
  %129 = icmp eq i32 %128, 4
  %130 = and i160 %125, 128849018880
  %131 = icmp eq i160 %130, 42949672960
  %132 = and i1 %131, %129
  %133 = select i1 %132, i32 3, i32 %128
  %134 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %102, i64 0, i32 2
  %135 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %134, align 8
  %136 = icmp eq %"class.blink::LayoutInline"* %135, null
  br i1 %136, label %144, label %137

137:                                              ; preds = %118
  %138 = load %"class.blink::NGFragmentBuilder"*, %"class.blink::NGFragmentBuilder"** %22, align 8
  %139 = getelementptr inbounds %"class.blink::NGFragmentBuilder", %"class.blink::NGFragmentBuilder"* %138, i64 0, i32 5
  %140 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %139, align 8
  %141 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %120, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #12
  %142 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = icmp eq %"class.blink::LayoutObject"* %140, %142
  br i1 %143, label %154, label %227

144:                                              ; preds = %118
  %145 = load i8, i8* %23, align 8, !range !2
  %146 = icmp ne i8 %145, 0
  %147 = icmp eq i32 %133, 0
  %148 = and i1 %147, %146
  br i1 %148, label %154, label %149

149:                                              ; preds = %144
  %150 = load i8, i8* %24, align 1, !range !2
  %151 = icmp ne i8 %150, 0
  %152 = icmp eq i32 %133, 1
  %153 = and i1 %152, %151
  br i1 %153, label %154, label %227

154:                                              ; preds = %144, %137, %149
  %155 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %5, align 8
  %156 = icmp eq %"class.blink::LayoutBox"* %155, %2
  %157 = or i1 %25, %156
  br i1 %157, label %158, label %227

158:                                              ; preds = %154
  %159 = load i8, i8* %26, align 1, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %165, label %161

161:                                              ; preds = %158
  %162 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %20, align 8
  call void @_ZN5blink20NGBoxFragmentBuilder39AdjustOffsetsForFragmentainerDescendantERNS_32NGLogicalOutOfFlowPositionedNodeEb(%"class.blink::NGBoxFragmentBuilder"* %162, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112) %102, i1 zeroext false) #12
  %163 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %20, align 8
  call void @_ZN5blink20NGBoxFragmentBuilder46AdjustFixedposContainingBlockForInnerMulticolsEv(%"class.blink::NGBoxFragmentBuilder"* %163) #12
  %164 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %21, align 8
  call void @_ZN5blink26NGContainerFragmentBuilder35AddOutOfFlowFragmentainerDescendantERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"class.blink::NGContainerFragmentBuilder"* %164, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112) %102) #12
  br label %229

165:                                              ; preds = %158
  br i1 %156, label %168, label %166

166:                                              ; preds = %165
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #12
  %167 = load i64, i64* %103, align 8
  store i64 %167, i64* %28, align 8
  store i64 0, i64* %29, align 8
  call void @_ZNK5blink11NGBlockNode33InsertIntoLegacyPositionedObjectsEv(%"class.blink::NGBlockNode"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #12
  br label %168

168:                                              ; preds = %165, %166
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %30) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 128, i1 false)
  call void @_ZN5blink21NGOutOfFlowLayoutPart13SetupNodeInfoERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* nonnull sret %8, %"class.blink::NGOutOfFlowLayoutPart"* %0, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112) %102)
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %31) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 -86, i64 200, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %30, i64 16, i1 false) #12
  %169 = load i64, i64* %34, align 8
  store i64 %169, i64* %35, align 8
  %170 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %37, align 8
  %171 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %170, null
  br i1 %171, label %176, label %172

172:                                              ; preds = %168
  %173 = call noalias i8* @malloc(i64 40) #12
  %174 = bitcast i8* %173 to %"class.blink::NGExclusionSpaceInternal"*
  call void @_ZN5blink24NGExclusionSpaceInternalC1ERKS0_(%"class.blink::NGExclusionSpaceInternal"* %174, %"class.blink::NGExclusionSpaceInternal"* nonnull dereferenceable(40) %170) #12
  %175 = ptrtoint i8* %173 to i64
  br label %176

176:                                              ; preds = %172, %168
  %177 = phi i64 [ %175, %172 ], [ 0, %168 ]
  store i64 %177, i64* %38, align 8
  %178 = load i32, i32* %39, align 8
  store i32 %178, i32* %40, align 8
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = call noalias i8* @malloc(i64 88) #12
  %183 = bitcast i8* %182 to %"struct.blink::NGConstraintSpace::RareData"*
  %184 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %41, align 8
  call void @_ZN5blink17NGConstraintSpace8RareDataC2ERKS1_(%"struct.blink::NGConstraintSpace::RareData"* %183, %"struct.blink::NGConstraintSpace::RareData"* dereferenceable(88) %184) #12
  store i8* %182, i8** %43, align 8
  br label %187

185:                                              ; preds = %176
  %186 = load i64, i64* %46, align 8
  store i64 %186, i64* %47, align 8
  br label %187

187:                                              ; preds = %181, %185
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 73, i1 false) #12
  call void @_ZN5blink21NGOutOfFlowLayoutPart15CalculateOffsetERKNS0_8NodeInfoEPKNS_9LayoutBoxEb(%"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* sret %52, %"class.blink::NGOutOfFlowLayoutPart"* %0, %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* nonnull dereferenceable(128) %8, %"class.blink::LayoutBox"* %2, i1 zeroext true)
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false)
  %188 = call %"class.blink::NGLayoutResult"* @_ZN5blink21NGOutOfFlowLayoutPart13LayoutOOFNodeERKNS0_12NodeToLayoutEPKNS_9LayoutBoxEPKNS_17NGConstraintSpaceE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* nonnull dereferenceable(224) %9, %"class.blink::LayoutBox"* %2, %"class.blink::NGConstraintSpace"* null)
  %189 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %20, align 8
  %190 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %188, i64 0, i32 3, i32 0
  %191 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %190, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  %192 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %188, i64 0, i32 6, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = and i32 %193, 1
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %188, i64 0, i32 4
  br i1 %195, label %201, label %197

197:                                              ; preds = %187
  %198 = getelementptr inbounds %union.anon.1887, %union.anon.1887* %196, i64 0, i32 0
  %199 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %198, align 8
  %200 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %199, i64 0, i32 4
  br label %203

201:                                              ; preds = %187
  %202 = bitcast %union.anon.1887* %196 to %"struct.blink::LogicalOffset"*
  br label %203

203:                                              ; preds = %197, %201
  %204 = phi %"struct.blink::LogicalOffset"* [ %200, %197 ], [ %202, %201 ]
  %205 = bitcast %"struct.blink::LogicalOffset"* %204 to i64*
  %206 = load i64, i64* %205, align 4
  store i64 %206, i64* %10, align 8
  %207 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %134, align 8
  store i8 0, i8* %55, align 8
  call void @_ZN5blink20NGBoxFragmentBuilder8AddChildERKNS_18NGPhysicalFragmentERKNS_13LogicalOffsetEPKNS_12LayoutInlineEPKNS_13NGMarginStrutEbN4absl8optionalIS4_EENSE_INS_10LayoutUnitEEE(%"class.blink::NGBoxFragmentBuilder"* %189, %"class.blink::NGPhysicalFragment"* dereferenceable(48) %191, %"struct.blink::LogicalOffset"* nonnull dereferenceable(8) %11, %"class.blink::LayoutInline"* %207, %"struct.blink::NGMarginStrut"* null, i1 zeroext false, %"class.absl::optional.2262"* nonnull byval(%"class.absl::optional.2262") align 8 %12, i64 1) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  %208 = call { %"class.blink::LayoutObject"**, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPNS1_9LayoutBoxERSG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2223"* %56, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %5, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %5) #12
  %209 = icmp eq %"class.blink::NGLayoutResult"* %188, null
  br i1 %209, label %217, label %210

210:                                              ; preds = %203
  %211 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %188, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %211) #12
  %212 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %188, i64 0, i32 0, i32 0, i32 0, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %217

215:                                              ; preds = %210
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %188) #12
  %216 = bitcast %"class.blink::NGLayoutResult"* %188 to i8*
  call void @free(i8* %216) #12
  br label %217

217:                                              ; preds = %203, %210, %215
  call void @_ZN5blink21NGOutOfFlowLayoutPart12NodeToLayoutD2Ev(%"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %31) #12
  %218 = load i32, i32* %39, align 8
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %226, label %221

221:                                              ; preds = %217
  %222 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %41, align 8
  %223 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %222, null
  br i1 %223, label %226, label %224

224:                                              ; preds = %221
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %222) #12
  %225 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %222 to i8*
  call void @free(i8* %225) #12
  br label %226

226:                                              ; preds = %217, %221, %224
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %57) #12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %30) #12
  br label %229

227:                                              ; preds = %114, %137, %154, %149
  %228 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %21, align 8
  call void @_ZN5blink26NGContainerFragmentBuilder22AddOutOfFlowDescendantERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"class.blink::NGContainerFragmentBuilder"* %228, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112) %102) #12
  br label %229

229:                                              ; preds = %227, %226, %161
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %230 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %102, i64 1
  %231 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %230, %65
  br i1 %231, label %67, label %101

232:                                              ; preds = %97, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21NGOutOfFlowLayoutPart21SweepLegacyCandidatesEPN3WTF7HashSetIPKNS_12LayoutObjectENS1_7PtrHashIS4_EENS1_10HashTraitsIS5_EENS1_18PartitionAllocatorEEE(%"class.blink::NGOutOfFlowLayoutPart"*, %"class.WTF::HashSet.2222"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::NGLogicalOutOfFlowPositionedNode", align 8
  %4 = alloca [19 x i8], align 1
  %5 = alloca %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", align 8
  %6 = alloca %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"struct.blink::NGLogicalStaticPosition"*
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"struct.blink::NGBoxStrut"*
  %11 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGFragmentBuilder"**
  %13 = load %"class.blink::NGFragmentBuilder"*, %"class.blink::NGFragmentBuilder"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NGFragmentBuilder", %"class.blink::NGFragmentBuilder"* %13, i64 0, i32 5
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = icmp eq %"class.blink::LayoutObject"* %15, null
  br i1 %16, label %379, label %17

17:                                               ; preds = %2
  %18 = bitcast %"class.blink::LayoutObject"* %15 to i1 (%"class.blink::LayoutObject"*)***
  %19 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %19, i64 23
  %21 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::LayoutObject"* nonnull %15) #12
  %23 = bitcast %"class.blink::LayoutObject"* %15 to %"class.blink::LayoutBlock"*
  br i1 %22, label %24, label %379

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 2, i32 8
  %26 = bitcast %"class.blink::LayoutObject"** %25 to i16*
  %27 = load i16, i16* %26, align 8
  %28 = trunc i16 %27 to i8
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %379, !prof !4

30:                                               ; preds = %24
  %31 = tail call %"class.WTF::ListHashSet.2226"* @_ZNK5blink11LayoutBlock25PositionedObjectsInternalEv(%"class.blink::LayoutBlock"* nonnull %23) #12
  %32 = icmp eq %"class.WTF::ListHashSet.2226"* %31, null
  br i1 %32, label %379, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::ListHashSet.2226", %"class.WTF::ListHashSet.2226"* %31, i64 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::HashSet.2222", %"class.WTF::HashSet.2222"* %1, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %35, %37
  br i1 %38, label %379, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::ListHashSet.2226", %"class.WTF::ListHashSet.2226"* %31, i64 0, i32 1
  %41 = load %"class.WTF::MallocedListHashSetNode.2232"*, %"class.WTF::MallocedListHashSetNode.2232"** %40, align 8
  %42 = icmp eq %"class.WTF::MallocedListHashSetNode.2232"* %41, null
  br i1 %42, label %379, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::HashSet.2222", %"class.WTF::HashSet.2222"* %1, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.WTF::HashSet.2222", %"class.WTF::HashSet.2222"* %1, i64 0, i32 0, i32 1
  %46 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %3 to i8*
  %47 = getelementptr inbounds [19 x i8], [19 x i8]* %4, i64 0, i64 0
  %48 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %3 to %"class.blink::LayoutObject"**
  %49 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %3, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %3, i64 0, i32 5, i32 0
  %51 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %3, i64 0, i32 6, i32 2, i32 0
  %52 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %3, i64 0, i32 7, i32 2, i32 0
  %53 = getelementptr inbounds i8, i8* %46, i64 89
  %54 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %5 to i8*
  %55 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %6 to i8*
  %56 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %6, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %5, i64 0, i32 1
  %58 = bitcast %"class.blink::NGConstraintSpace"* %57 to i64*
  %59 = bitcast %"class.blink::NGConstraintSpace"* %56 to i64*
  %60 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %6, i64 0, i32 0, i32 1, i32 2
  %61 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.blink::NGExclusionSpace"* %60 to i64*
  %63 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %5, i64 0, i32 1, i32 3, i32 0
  %64 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %6, i64 0, i32 0, i32 1, i32 3, i32 0
  %65 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %5, i64 0, i32 1, i32 1, i32 0
  %66 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %6, i64 0, i32 0, i32 1, i32 1, i32 0
  %67 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %66 to i8**
  %68 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %5, i64 0, i32 1, i32 1
  %69 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %6, i64 0, i32 0, i32 1, i32 1
  %70 = bitcast %union.anon.1726* %68 to i64*
  %71 = bitcast %union.anon.1726* %69 to i64*
  %72 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %6, i64 0, i32 0, i32 2
  %73 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %5, i64 0, i32 2
  %74 = bitcast %"struct.blink::NGLogicalStaticPosition"* %72 to i8*
  %75 = bitcast %"struct.blink::NGLogicalStaticPosition"* %73 to i8*
  %76 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %6, i64 0, i32 1
  %77 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %6, i64 0, i32 2
  %78 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %5, i64 0, i32 1, i32 2
  %79 = bitcast { i64, i64 }* %7 to i8*
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %81 = bitcast { i64, i64 }* %9 to i8*
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %84 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %85 = bitcast %"struct.blink::NGLogicalStaticPosition"* %49 to i8*
  %86 = bitcast i32* %50 to i8*
  %87 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %6, i64 0, i32 0, i32 1, i32 1
  %88 = bitcast %union.anon.1726* %87 to i8*
  %89 = bitcast %"class.blink::NGBlockBreakToken"** %77 to i8*
  %90 = bitcast { i64, i64 }* %7 to i8*
  br label %91

91:                                               ; preds = %43, %374
  %92 = phi %"class.WTF::MallocedListHashSetNode.2232"* [ %41, %43 ], [ %377, %374 ]
  %93 = phi i8 [ undef, %43 ], [ %375, %374 ]
  %94 = bitcast %"class.WTF::MallocedListHashSetNode.2232"* %92 to %"class.blink::LayoutObject"**
  %95 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %94, align 8
  %96 = ptrtoint %"class.blink::LayoutObject"* %95 to i64
  %97 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %44, align 8
  %98 = icmp eq %"class.blink::LayoutObject"** %97, null
  br i1 %98, label %159, label %99

99:                                               ; preds = %91
  %100 = load i32, i32* %45, align 8
  %101 = add i32 %100, -1
  %102 = zext i32 %101 to i64
  %103 = shl i64 %96, 32
  %104 = xor i64 %103, -1
  %105 = add i64 %104, %96
  %106 = lshr i64 %105, 22
  %107 = xor i64 %106, %105
  %108 = shl i64 %107, 13
  %109 = xor i64 %108, -1
  %110 = add i64 %107, %109
  %111 = lshr i64 %110, 8
  %112 = xor i64 %111, %110
  %113 = mul i64 %112, 9
  %114 = lshr i64 %113, 15
  %115 = xor i64 %114, %113
  %116 = shl i64 %115, 27
  %117 = xor i64 %116, -1
  %118 = add i64 %115, %117
  %119 = lshr i64 %118, 31
  %120 = xor i64 %119, %118
  %121 = trunc i64 %120 to i32
  %122 = and i32 %101, %121
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %97, i64 %123
  %125 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %124, align 8
  %126 = icmp eq %"class.blink::LayoutObject"* %125, %95
  br i1 %126, label %156, label %127

127:                                              ; preds = %99
  %128 = xor i32 %121, -1
  %129 = lshr i32 %121, 23
  %130 = add i32 %129, %128
  %131 = shl i32 %130, 12
  %132 = xor i32 %131, %130
  %133 = lshr i32 %132, 7
  %134 = xor i32 %133, %132
  %135 = shl i32 %134, 2
  %136 = xor i32 %135, %134
  %137 = lshr i32 %136, 20
  %138 = xor i32 %137, %136
  %139 = or i32 %138, 1
  %140 = zext i32 %139 to i64
  br label %141

141:                                              ; preds = %146, %127
  %142 = phi %"class.blink::LayoutObject"* [ %125, %127 ], [ %152, %146 ]
  %143 = phi i64 [ %123, %127 ], [ %150, %146 ]
  %144 = phi i64 [ 0, %127 ], [ %148, %146 ]
  %145 = icmp eq %"class.blink::LayoutObject"* %142, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %141
  %147 = icmp eq i64 %144, 0
  %148 = select i1 %147, i64 %140, i64 %144
  %149 = add i64 %148, %143
  %150 = and i64 %149, %102
  %151 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %97, i64 %150
  %152 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %151, align 8
  %153 = icmp eq %"class.blink::LayoutObject"* %152, %95
  br i1 %153, label %154, label %141

154:                                              ; preds = %146
  %155 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %97, i64 %150
  br label %156

156:                                              ; preds = %154, %99
  %157 = phi %"class.blink::LayoutObject"** [ %124, %99 ], [ %155, %154 ]
  %158 = icmp eq %"class.blink::LayoutObject"** %157, null
  br i1 %158, label %159, label %374

159:                                              ; preds = %141, %156, %91
  %160 = bitcast %"class.blink::LayoutObject"* %95 to %"class.blink::LayoutBox"*
  %161 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %95, i64 0, i32 7
  %162 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %161, align 8
  %163 = bitcast %"class.blink::LayoutObject"* %162 to i1 (%"class.blink::LayoutObject"*)***
  %164 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %163, align 8
  %165 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %164, i64 78
  %166 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %165, align 8
  %167 = call zeroext i1 %166(%"class.blink::LayoutObject"* %162) #12
  br i1 %167, label %168, label %230

168:                                              ; preds = %159
  %169 = bitcast %"class.blink::LayoutObject"** %161 to %"class.blink::LayoutFlexibleBox"**
  %170 = load %"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutFlexibleBox"** %169, align 8
  %171 = call zeroext i1 @_ZN5blink17LayoutFlexibleBox36SetStaticPositionForPositionedLayoutERNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %170, %"class.blink::LayoutBox"* dereferenceable(216) %160) #12
  br i1 %171, label %172, label %230

172:                                              ; preds = %168
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %46) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 112, i1 false)
  store %"class.blink::LayoutObject"* %95, %"class.blink::LayoutObject"** %48, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 25, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %86, i8 0, i64 53, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* nonnull align 1 %47, i64 19, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %54) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 128, i1 false)
  call void @_ZN5blink21NGOutOfFlowLayoutPart13SetupNodeInfoERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* nonnull sret %5, %"class.blink::NGOutOfFlowLayoutPart"* %0, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* nonnull dereferenceable(112) %3)
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %55) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 -86, i64 200, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* nonnull align 8 %54, i64 16, i1 false) #12
  %173 = load i64, i64* %58, align 8
  store i64 %173, i64* %59, align 8
  %174 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %61, align 8
  %175 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %174, null
  br i1 %175, label %180, label %176

176:                                              ; preds = %172
  %177 = call noalias i8* @malloc(i64 40) #12
  %178 = bitcast i8* %177 to %"class.blink::NGExclusionSpaceInternal"*
  call void @_ZN5blink24NGExclusionSpaceInternalC1ERKS0_(%"class.blink::NGExclusionSpaceInternal"* %178, %"class.blink::NGExclusionSpaceInternal"* nonnull dereferenceable(40) %174) #12
  %179 = ptrtoint i8* %177 to i64
  br label %180

180:                                              ; preds = %176, %172
  %181 = phi i64 [ %179, %176 ], [ 0, %172 ]
  store i64 %181, i64* %62, align 8
  %182 = load i32, i32* %63, align 8
  store i32 %182, i32* %64, align 8
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %180
  %186 = call noalias i8* @malloc(i64 88) #12
  %187 = bitcast i8* %186 to %"struct.blink::NGConstraintSpace::RareData"*
  %188 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %65, align 8
  call void @_ZN5blink17NGConstraintSpace8RareDataC2ERKS1_(%"struct.blink::NGConstraintSpace::RareData"* %187, %"struct.blink::NGConstraintSpace::RareData"* dereferenceable(88) %188) #12
  store i8* %186, i8** %67, align 8
  br label %191

189:                                              ; preds = %180
  %190 = load i64, i64* %70, align 8
  store i64 %190, i64* %71, align 8
  br label %191

191:                                              ; preds = %185, %189
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 73, i1 false) #12
  call void @_ZN5blink21NGOutOfFlowLayoutPart15CalculateOffsetERKNS0_8NodeInfoEPKNS_9LayoutBoxEb(%"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* sret %76, %"class.blink::NGOutOfFlowLayoutPart"* %0, %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* nonnull dereferenceable(128) %5, %"class.blink::LayoutBox"* null, i1 zeroext true)
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false)
  %192 = call %"class.blink::NGLayoutResult"* @_ZN5blink21NGOutOfFlowLayoutPart13LayoutOOFNodeERKNS0_12NodeToLayoutEPKNS_9LayoutBoxEPKNS_17NGConstraintSpaceE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* nonnull dereferenceable(224) %6, %"class.blink::LayoutBox"* null, %"class.blink::NGConstraintSpace"* null)
  %193 = icmp eq %"class.blink::NGLayoutResult"* %192, null
  br i1 %193, label %201, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %192, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %195) #12
  %196 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %192, i64 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %201

199:                                              ; preds = %194
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %192) #12
  %200 = bitcast %"class.blink::NGLayoutResult"* %192 to i8*
  call void @free(i8* %200) #12
  br label %201

201:                                              ; preds = %191, %194, %199
  %202 = call zeroext i1 @_ZN5blink17LayoutFlexibleBox36SetStaticPositionForPositionedLayoutERNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %170, %"class.blink::LayoutBox"* dereferenceable(216) %160) #12
  call void @_ZN5blink21NGOutOfFlowLayoutPart12NodeToLayoutD2Ev(%"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %55) #12
  %203 = load i32, i32* %63, align 8
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %211, label %206

206:                                              ; preds = %201
  %207 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %65, align 8
  %208 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %207, null
  br i1 %208, label %211, label %209

209:                                              ; preds = %206
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %207) #12
  %210 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %207 to i8*
  call void @free(i8* %210) #12
  br label %211

211:                                              ; preds = %201, %206, %209
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %78) #12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %54) #12
  %212 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %52, align 8
  %213 = icmp eq %"class.blink::NGPhysicalFragment"* %212, null
  br i1 %213, label %220, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %212, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %215) #12
  %216 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %212, i64 0, i32 0, i32 0, i32 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %214
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %212) #12
  br label %220

220:                                              ; preds = %219, %214, %211
  %221 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %51, align 8
  %222 = icmp eq %"class.blink::NGPhysicalFragment"* %221, null
  br i1 %222, label %229, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %221, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %224) #12
  %225 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %221, i64 0, i32 0, i32 0, i32 0, i32 0
  %226 = load i32, i32* %225, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %223
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %221) #12
  br label %229

229:                                              ; preds = %220, %223, %228
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %46) #12
  br label %230

230:                                              ; preds = %168, %229, %159
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #12
  %231 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %11, align 8
  %232 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %231, i64 0, i32 1
  %233 = load %"struct.blink::NGFragmentGeometry"*, %"struct.blink::NGFragmentGeometry"** %232, align 8
  %234 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %233, i64 0, i32 1
  %235 = bitcast %"struct.blink::NGBoxStrut"* %234 to i64*
  %236 = load i64, i64* %235, align 4
  %237 = trunc i64 %236 to i32
  %238 = lshr i64 %236, 32
  %239 = trunc i64 %238 to i32
  %240 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %233, i64 0, i32 1, i32 2
  %241 = bitcast %"class.blink::LayoutUnit"* %240 to i64*
  %242 = load i64, i64* %241, align 4
  %243 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %233, i64 0, i32 2, i32 0, i32 0
  %244 = load i32, i32* %243, align 4
  %245 = icmp slt i32 %244, 0
  %246 = select i1 %245, i32 -2147483648, i32 2147483647
  %247 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %237, i32 %244) #12
  %248 = extractvalue { i32, i1 } %247, 1
  %249 = extractvalue { i32, i1 } %247, 0
  %250 = select i1 %248, i32 %246, i32 %249, !prof !4
  %251 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %233, i64 0, i32 2, i32 1, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = icmp slt i32 %252, 0
  %254 = select i1 %253, i32 -2147483648, i32 2147483647
  %255 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %239, i32 %252) #12
  %256 = extractvalue { i32, i1 } %255, 1
  %257 = extractvalue { i32, i1 } %255, 0
  %258 = select i1 %256, i32 %254, i32 %257, !prof !4
  %259 = trunc i64 %242 to i32
  %260 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %233, i64 0, i32 2, i32 2, i32 0
  %261 = load i32, i32* %260, align 4
  %262 = icmp slt i32 %261, 0
  %263 = select i1 %262, i32 -2147483648, i32 2147483647
  %264 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %259, i32 %261) #12
  %265 = extractvalue { i32, i1 } %264, 1
  %266 = extractvalue { i32, i1 } %264, 0
  %267 = select i1 %265, i32 %263, i32 %266, !prof !4
  %268 = zext i32 %267 to i64
  %269 = lshr i64 %242, 32
  %270 = trunc i64 %269 to i32
  %271 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %233, i64 0, i32 2, i32 3, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp slt i32 %272, 0
  %274 = select i1 %273, i32 -2147483648, i32 2147483647
  %275 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %270, i32 %272) #12
  %276 = extractvalue { i32, i1 } %275, 1
  %277 = extractvalue { i32, i1 } %275, 0
  %278 = select i1 %276, i32 %274, i32 %277, !prof !4
  %279 = zext i32 %278 to i64
  %280 = shl nuw i64 %279, 32
  %281 = or i64 %280, %268
  %282 = zext i32 %258 to i64
  %283 = shl nuw i64 %282, 32
  %284 = zext i32 %250 to i64
  %285 = or i64 %283, %284
  store i64 %285, i64* %82, align 8
  store i64 %281, i64* %83, align 8
  %286 = call { i64, i64 } @_ZN5blink14LayoutBoxUtils31ComputeStaticPositionFromLegacyERKNS_9LayoutBoxERKNS_10NGBoxStrutEPKNS_20NGBoxFragmentBuilderE(%"class.blink::LayoutBox"* dereferenceable(216) %160, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %10, %"class.blink::NGBoxFragmentBuilder"* %231) #12
  %287 = extractvalue { i64, i64 } %286, 0
  store i64 %287, i64* %84, align 8
  %288 = extractvalue { i64, i64 } %286, 1
  store i64 %288, i64* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #12
  %289 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %95, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #12
  %290 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %289, i64 0, i32 4
  %291 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %290 to i96*
  %292 = load i96, i96* %291, align 4
  %293 = and i96 %292, 16777216
  %294 = icmp eq i96 %293, 0
  br i1 %294, label %358, label %295

295:                                              ; preds = %230
  %296 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %289, i64 0, i32 5, i32 0
  %297 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %296, align 8
  %298 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %297, i64 0, i32 0, i32 9
  %299 = bitcast [20 x i8]* %298 to i160*
  %300 = load i160, i160* %299, align 8
  %301 = lshr i160 %300, 32
  %302 = trunc i160 %301 to i32
  %303 = and i32 %302, 31
  switch i32 %303, label %358 [
    i32 1, label %304
    i32 14, label %304
  ]

304:                                              ; preds = %295, %295
  %305 = and i160 %300, 2113929216
  %306 = icmp eq i160 %305, 0
  br i1 %306, label %307, label %358

307:                                              ; preds = %304
  %308 = bitcast %"class.blink::LayoutObject"* %289 to i1 (%"class.blink::LayoutObject"*)***
  %309 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %308, align 8
  %310 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %309, i64 23
  %311 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %310, align 8
  %312 = call zeroext i1 %311(%"class.blink::LayoutObject"* %289) #12
  br i1 %312, label %313, label %358

313:                                              ; preds = %307
  %314 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %308, align 8
  %315 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %314, i64 25
  %316 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %315, align 8
  %317 = call zeroext i1 %316(%"class.blink::LayoutObject"* %289) #12
  br i1 %317, label %358, label %318

318:                                              ; preds = %313
  %319 = bitcast %"class.blink::LayoutObject"* %289 to i1 (%"class.blink::LayoutObject"*, i32)***
  %320 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %319, align 8
  %321 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %320, i64 92
  %322 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %321, align 8
  %323 = call zeroext i1 %322(%"class.blink::LayoutObject"* %289, i32 20) #12
  br i1 %323, label %358, label %324

324:                                              ; preds = %318
  %325 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %296, align 8
  %326 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %325, i64 0, i32 0, i32 9
  %327 = bitcast [20 x i8]* %326 to i160*
  %328 = load i160, i160* %327, align 8
  %329 = lshr i160 %328, 80
  %330 = trunc i160 %329 to i32
  %331 = and i32 %330, 7
  %332 = icmp eq i32 %331, 4
  %333 = and i160 %328, 128849018880
  %334 = icmp eq i160 %333, 42949672960
  %335 = and i1 %334, %332
  %336 = icmp ne i32 %331, 3
  %337 = xor i1 %336, %335
  br i1 %337, label %342, label %338

338:                                              ; preds = %324
  %339 = load i96, i96* %291, align 4
  %340 = and i96 %339, 68719476736
  %341 = icmp eq i96 %340, 0
  br i1 %341, label %358, label %342

342:                                              ; preds = %338, %324
  %343 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %95, i64 0, i32 5, i32 0
  %344 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %343, align 8
  %345 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %344, i64 0, i32 0, i32 9
  %346 = bitcast [20 x i8]* %345 to i160*
  %347 = load i160, i160* %346, align 8
  %348 = lshr i160 %347, 80
  %349 = trunc i160 %348 to i32
  %350 = and i32 %349, 7
  %351 = icmp eq i32 %350, 4
  %352 = and i160 %347, 128849018880
  %353 = icmp eq i160 %352, 42949672960
  %354 = and i1 %353, %351
  %355 = select i1 %354, i32 3, i32 %350
  %356 = call fastcc %"class.blink::LayoutInline"* @_ZN5blink12_GLOBAL__N_134GetOOFContainingBlockFromAnonymousEPKNS_12LayoutObjectENS_9EPositionE(%"class.blink::LayoutObject"* %289, i32 %355)
  %357 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %356, i64 0, i32 0, i32 0
  br label %358

358:                                              ; preds = %338, %295, %230, %304, %307, %313, %318, %342
  %359 = phi %"class.blink::LayoutObject"* [ %357, %342 ], [ %289, %338 ], [ %289, %318 ], [ %289, %313 ], [ %289, %307 ], [ %289, %304 ], [ %289, %230 ], [ %289, %295 ]
  %360 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %11, align 8
  %361 = and i8 %93, -2
  %362 = icmp eq %"class.blink::LayoutObject"* %359, null
  br i1 %362, label %371, label %363

363:                                              ; preds = %358
  %364 = bitcast %"class.blink::LayoutObject"* %359 to i1 (%"class.blink::LayoutObject"*)***
  %365 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %364, align 8
  %366 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %365, i64 26
  %367 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %366, align 8
  %368 = call zeroext i1 %367(%"class.blink::LayoutObject"* nonnull %359) #12
  %369 = bitcast %"class.blink::LayoutObject"* %359 to %"class.blink::LayoutInline"*
  %370 = select i1 %368, %"class.blink::LayoutInline"* %369, %"class.blink::LayoutInline"* null
  br label %371

371:                                              ; preds = %358, %363
  %372 = phi %"class.blink::LayoutInline"* [ %370, %363 ], [ null, %358 ]
  %373 = zext i8 %361 to i64
  call void @_ZN5blink20NGBoxFragmentBuilder27AddOutOfFlowLegacyCandidateENS_11NGBlockNodeERKNS_23NGLogicalStaticPositionEPKNS_12LayoutInlineE(%"class.blink::NGBoxFragmentBuilder"* %360, %"class.blink::LayoutBox"* %160, i64 %373, %"struct.blink::NGLogicalStaticPosition"* nonnull dereferenceable(16) %8, %"class.blink::LayoutInline"* %372) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #12
  br label %374

374:                                              ; preds = %156, %371
  %375 = phi i8 [ %93, %156 ], [ %361, %371 ]
  %376 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.2232", %"class.WTF::MallocedListHashSetNode.2232"* %92, i64 0, i32 2
  %377 = load %"class.WTF::MallocedListHashSetNode.2232"*, %"class.WTF::MallocedListHashSetNode.2232"** %376, align 8
  %378 = icmp eq %"class.WTF::MallocedListHashSetNode.2232"* %377, null
  br i1 %378, label %379, label %91

379:                                              ; preds = %374, %39, %17, %24, %2, %30, %33
  %380 = phi i1 [ false, %30 ], [ false, %33 ], [ false, %17 ], [ false, %2 ], [ false, %24 ], [ true, %39 ], [ true, %374 ]
  ret i1 %380
}

declare zeroext i1 @_ZN5blink17LayoutFlexibleBox36SetStaticPositionForPositionedLayoutERNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGOutOfFlowLayoutPart13SetupNodeInfoERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* noalias nocapture sret, %"class.blink::NGOutOfFlowLayoutPart"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", align 8
  %5 = alloca %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", align 4
  %6 = alloca %"struct.blink::NGLogicalStaticPosition", align 4
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"struct.blink::NGPhysicalStaticPosition"*
  %9 = alloca %"class.blink::WritingModeConverter", align 4
  %10 = alloca %"class.blink::WritingModeConverter", align 4
  %11 = alloca %"class.blink::NGConstraintSpaceBuilder", align 8
  %12 = alloca %"class.blink::NGConstraintSpace", align 8
  %13 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %2, i64 0, i32 0
  %14 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %13, align 8
  %15 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %2, i64 0, i32 6, i32 2, i32 0
  %16 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %15, align 8
  %17 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %17) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 -86, i64 36, i1 false)
  call void @_ZN5blink21NGOutOfFlowLayoutPart22GetContainingBlockInfoERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* nonnull sret %5, %"class.blink::NGOutOfFlowLayoutPart"* %1, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112) %2)
  %18 = icmp eq %"class.blink::NGPhysicalFragment"* %16, null
  br i1 %18, label %45, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %16, i64 0, i32 1
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %16, i64 0, i32 3
  %23 = bitcast i24* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = lshr i32 %24, 10
  %26 = and i32 %25, 3
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 5, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  br label %33

31:                                               ; preds = %19
  %32 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %21, i32 %26) #12
  br label %33

33:                                               ; preds = %28, %31
  %34 = phi %"class.blink::ComputedStyle"* [ %30, %28 ], [ %32, %31 ]
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8
  %38 = lshr i160 %37, 102
  %39 = trunc i160 %38 to i16
  %40 = and i16 %39, 3
  %41 = lshr i160 %37, 107
  %42 = trunc i160 %41 to i16
  %43 = and i16 %42, 256
  %44 = or i16 %43, %40
  br label %49

45:                                               ; preds = %3
  %46 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %1, i64 0, i32 5, i32 0
  %47 = bitcast i8* %46 to i16*
  %48 = load i16, i16* %47, align 1
  br label %49

49:                                               ; preds = %45, %33
  %50 = phi i16 [ %44, %33 ], [ %48, %45 ]
  %51 = trunc i16 %50 to i8
  %52 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %14, i64 0, i32 0, i32 0, i32 5, i32 0
  %53 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %53, i64 0, i32 0, i32 9
  %55 = bitcast [20 x i8]* %54 to i160*
  %56 = load i160, i160* %55, align 8
  %57 = lshr i160 %56, 102
  %58 = trunc i160 %57 to i16
  %59 = and i16 %58, 3
  %60 = lshr i160 %56, 107
  %61 = trunc i160 %60 to i16
  %62 = and i16 %61, 256
  %63 = or i16 %62, %59
  %64 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %5, i64 0, i32 1, i32 1
  %65 = bitcast %"struct.blink::LogicalSize"* %64 to i64*
  %66 = load i64, i64* %65, align 4
  %67 = lshr i64 %66, 32
  %68 = icmp eq i8 %51, 0
  %69 = select i1 %68, i64 %67, i64 %66
  %70 = select i1 %68, i64 %66, i64 %67
  %71 = shl i64 %69, 32
  %72 = bitcast %"struct.blink::NGLogicalStaticPosition"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #12
  %73 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %6, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %6, i64 0, i32 0, i32 1, i32 0
  %75 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %2, i64 0, i32 1
  %76 = bitcast %"struct.blink::NGLogicalStaticPosition"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %72, i8* align 8 %76, i64 16, i1 false)
  %77 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %2, i64 0, i32 6, i32 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp sgt i32 %80, -1
  %82 = select i1 %81, i32 -2147483648, i32 2147483647
  %83 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %78, i32 %80) #12
  %84 = extractvalue { i32, i1 } %83, 1
  %85 = extractvalue { i32, i1 } %83, 0
  %86 = select i1 %84, i32 %82, i32 %85, !prof !4
  %87 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %5, i64 0, i32 1, i32 0, i32 1, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %2, i64 0, i32 6, i32 0, i32 1, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp sgt i32 %90, -1
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  %93 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %88, i32 %90) #12
  %94 = extractvalue { i32, i1 } %93, 1
  %95 = extractvalue { i32, i1 } %93, 0
  %96 = select i1 %94, i32 %92, i32 %95, !prof !4
  %97 = load i32, i32* %73, align 4
  %98 = icmp sgt i32 %86, -1
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %97, i32 %86) #12
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 %99, i32 %102, !prof !4
  store i32 %103, i32* %73, align 4
  %104 = load i32, i32* %74, align 4
  %105 = icmp sgt i32 %96, -1
  %106 = select i1 %105, i32 -2147483648, i32 2147483647
  %107 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %104, i32 %96) #12
  %108 = extractvalue { i32, i1 } %107, 1
  %109 = extractvalue { i32, i1 } %107, 0
  %110 = select i1 %108, i32 %106, i32 %109, !prof !4
  store i32 %110, i32* %74, align 4
  %111 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #12
  %112 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %9, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %112) #12
  %113 = bitcast %"class.blink::WritingModeConverter"* %9 to i16*
  store i16 %50, i16* %113, align 4
  %114 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %9, i64 0, i32 1
  %115 = bitcast %"struct.blink::PhysicalSize"* %114 to i64*
  %116 = and i64 %70, 4294967295
  %117 = or i64 %71, %116
  store i64 %117, i64* %115, align 4
  %118 = call { i64, i64 } @_ZNK5blink23NGLogicalStaticPosition17ConvertToPhysicalERKNS_20WritingModeConverterE(%"struct.blink::NGLogicalStaticPosition"* nonnull %6, %"class.blink::WritingModeConverter"* nonnull dereferenceable(12) %9)
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %120 = extractvalue { i64, i64 } %118, 0
  store i64 %120, i64* %119, align 8
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %122 = extractvalue { i64, i64 } %118, 1
  store i64 %122, i64* %121, align 8
  %123 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %10, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %123) #12
  %124 = bitcast %"class.blink::WritingModeConverter"* %10 to i16*
  store i16 %63, i16* %124, align 4
  %125 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %10, i64 0, i32 1
  %126 = bitcast %"struct.blink::PhysicalSize"* %125 to i64*
  store i64 %117, i64* %126, align 4
  %127 = call { i64, i64 } @_ZNK5blink24NGPhysicalStaticPosition16ConvertToLogicalERKNS_20WritingModeConverterE(%"struct.blink::NGPhysicalStaticPosition"* nonnull %8, %"class.blink::WritingModeConverter"* nonnull dereferenceable(12) %10)
  %128 = extractvalue { i64, i64 } %127, 0
  %129 = extractvalue { i64, i64 } %127, 1
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %123) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %112) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #12
  %130 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %130) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 -86, i64 32, i1 false)
  %131 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %132 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %11, i64 0, i32 0, i32 1
  %133 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %11, i64 0, i32 0, i32 3, i32 0
  %134 = shl nuw nsw i16 %59, 4
  %135 = lshr i160 %56, 108
  %136 = trunc i160 %135 to i16
  %137 = and i16 %136, 128
  %138 = or i16 %134, %137
  %139 = zext i16 %138 to i32
  %140 = bitcast %union.anon.1726* %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 16, i1 false) #12
  %141 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %11, i64 0, i32 1, i32 0
  store i32 -64, i32* %141, align 8
  %142 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %11, i64 0, i32 2
  %143 = icmp ne i8 %51, 0
  %144 = icmp eq i16 %59, 0
  %145 = xor i1 %143, %144
  %146 = zext i1 %145 to i8
  store i8 %146, i8* %142, align 4
  %147 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %11, i64 0, i32 3
  store i8 1, i8* %147, align 1
  %148 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %11, i64 0, i32 4
  store i8 0, i8* %148, align 2
  %149 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %11, i64 0, i32 5
  store i8 1, i8* %149, align 1
  %150 = select i1 %145, i32 1024, i32 3072
  %151 = or i32 %150, %139
  store i32 %151, i32* %133, align 8
  %152 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %11 to i64*
  store i64 %66, i64* %152, align 8
  %153 = trunc i64 %67 to i32
  br i1 %145, label %159, label %154, !prof !3

154:                                              ; preds = %49
  %155 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %11, i64 0, i32 0, i32 0, i32 1, i32 0
  %156 = trunc i64 %66 to i32
  store i32 %153, i32* %131, align 8
  store i32 %156, i32* %155, align 4
  %157 = icmp eq i32 %153, -64
  br i1 %157, label %158, label %159

158:                                              ; preds = %154
  store i32 -64, i32* %131, align 8
  br label %159

159:                                              ; preds = %49, %154, %158
  call void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"* nonnull %11, i64 %66) #12
  %160 = bitcast %"class.blink::NGConstraintSpace"* %12 to i64*
  %161 = load i64, i64* %152, align 8, !noalias !6
  store i64 %161, i64* %160, align 8, !alias.scope !6
  %162 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %12, i64 0, i32 2
  %163 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %11, i64 0, i32 0, i32 2
  %164 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %163, i64 0, i32 0, i32 0, i32 0, i32 0
  %165 = bitcast %"class.blink::NGExclusionSpace"* %163 to i64*
  %166 = load i64, i64* %165, align 8, !noalias !6
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %164, align 8, !noalias !6
  %167 = bitcast %"class.blink::NGExclusionSpace"* %162 to i64*
  store i64 %166, i64* %167, align 8, !alias.scope !6
  %168 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %12, i64 0, i32 3, i32 0
  %169 = load i32, i32* %133, align 8, !noalias !6
  store i32 %169, i32* %168, align 8, !alias.scope !6
  %170 = and i32 %169, 1
  %171 = icmp eq i32 %170, 0
  %172 = inttoptr i64 %166 to %"class.blink::NGExclusionSpaceInternal"*
  br i1 %171, label %179, label %173

173:                                              ; preds = %159
  %174 = getelementptr inbounds %union.anon.1726, %union.anon.1726* %132, i64 0, i32 0
  %175 = bitcast %union.anon.1726* %132 to i64*
  %176 = load i64, i64* %175, align 8, !noalias !6
  %177 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %12, i64 0, i32 1
  %178 = bitcast %union.anon.1726* %177 to i64*
  store i64 %176, i64* %178, align 8, !alias.scope !6
  store %"struct.blink::NGConstraintSpace::RareData"* null, %"struct.blink::NGConstraintSpace::RareData"** %174, align 8, !noalias !6
  br label %184

179:                                              ; preds = %159
  %180 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %12, i64 0, i32 1
  %181 = bitcast %union.anon.1726* %132 to i64*
  %182 = bitcast %union.anon.1726* %180 to i64*
  %183 = load i64, i64* %181, align 8, !noalias !6
  store i64 %183, i64* %182, align 8, !alias.scope !6
  br label %184

184:                                              ; preds = %173, %179
  %185 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %2, i64 0, i32 7
  %186 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %2, i64 0, i32 2
  %187 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %186, align 8
  %188 = icmp ne %"class.blink::LayoutInline"* %187, null
  %189 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %189)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %189, i8* nonnull align 4 %17, i64 36, i1 false)
  %190 = zext i1 %188 to i8
  %191 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutBox"* %14, %"class.blink::LayoutBox"** %191, align 8
  %192 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %0, i64 0, i32 0, i32 0, i32 1
  %193 = bitcast i8* %192 to i64*
  store i64 0, i64* %193, align 8
  %194 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %0, i64 0, i32 1
  %195 = bitcast %"class.blink::NGConstraintSpace"* %194 to i64*
  store i64 %161, i64* %195, align 8
  %196 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %0, i64 0, i32 1, i32 2
  %197 = icmp eq i64 %166, 0
  br i1 %197, label %203, label %198

198:                                              ; preds = %184
  %199 = call noalias i8* @malloc(i64 40) #12
  %200 = bitcast i8* %199 to %"class.blink::NGExclusionSpaceInternal"*
  call void @_ZN5blink24NGExclusionSpaceInternalC1ERKS0_(%"class.blink::NGExclusionSpaceInternal"* %200, %"class.blink::NGExclusionSpaceInternal"* nonnull dereferenceable(40) %172) #12
  %201 = ptrtoint i8* %199 to i64
  %202 = load i32, i32* %168, align 8
  br label %203

203:                                              ; preds = %198, %184
  %204 = phi i32 [ %202, %198 ], [ %169, %184 ]
  %205 = phi i64 [ %201, %198 ], [ 0, %184 ]
  %206 = bitcast %"class.blink::NGExclusionSpace"* %196 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %0, i64 0, i32 1, i32 3, i32 0
  store i32 %204, i32* %207, align 8
  %208 = and i32 %204, 1
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %220, label %210

210:                                              ; preds = %203
  %211 = call noalias i8* @malloc(i64 88) #12
  %212 = bitcast i8* %211 to %"struct.blink::NGConstraintSpace::RareData"*
  %213 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %12, i64 0, i32 1, i32 0
  %214 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %213, align 8
  call void @_ZN5blink17NGConstraintSpace8RareDataC2ERKS1_(%"struct.blink::NGConstraintSpace::RareData"* %212, %"struct.blink::NGConstraintSpace::RareData"* dereferenceable(88) %214) #12
  %215 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %0, i64 0, i32 1, i32 1, i32 0
  %216 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %215 to i8**
  store i8* %211, i8** %216, align 8
  %217 = load i32, i32* %168, align 8
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  br label %226

220:                                              ; preds = %203
  %221 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %12, i64 0, i32 1
  %222 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %0, i64 0, i32 1, i32 1
  %223 = bitcast %union.anon.1726* %221 to i64*
  %224 = bitcast %union.anon.1726* %222 to i64*
  %225 = load i64, i64* %223, align 8
  store i64 %225, i64* %224, align 8
  br label %226

226:                                              ; preds = %210, %220
  %227 = phi i1 [ %219, %210 ], [ true, %220 ]
  %228 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %0, i64 0, i32 2
  %229 = bitcast %"struct.blink::NGLogicalStaticPosition"* %228 to i64*
  store i64 %128, i64* %229, align 8
  %230 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %0, i64 0, i32 2, i32 1
  %231 = bitcast i32* %230 to i64*
  store i64 %129, i64* %231, align 8
  %232 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %0, i64 0, i32 3
  %233 = bitcast %"struct.blink::PhysicalSize"* %232 to i64*
  store i64 %117, i64* %233, align 8
  %234 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %0, i64 0, i32 4, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* nonnull align 8 %189, i64 36, i1 false) #12
  %235 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %0, i64 0, i32 5
  %236 = bitcast %"class.blink::WritingDirectionMode"* %235 to i16*
  store i16 %50, i16* %236, align 4
  %237 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %0, i64 0, i32 7
  store %"struct.blink::NGContainingBlock"* %185, %"struct.blink::NGContainingBlock"** %237, align 8
  %238 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %0, i64 0, i32 8
  store i8 %190, i8* %238, align 8
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %189)
  br i1 %227, label %245, label %239

239:                                              ; preds = %226
  %240 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %12, i64 0, i32 1, i32 0
  %241 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %240, align 8
  %242 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %241, null
  br i1 %242, label %245, label %243

243:                                              ; preds = %239
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %241) #12
  %244 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %241 to i8*
  call void @free(i8* %244) #12
  br label %245

245:                                              ; preds = %226, %239, %243
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %162) #12
  %246 = load i32, i32* %133, align 8
  %247 = and i32 %246, 1
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %255, label %249

249:                                              ; preds = %245
  %250 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %11, i64 0, i32 0, i32 1, i32 0
  %251 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %250, align 8
  %252 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %251, null
  br i1 %252, label %255, label %253

253:                                              ; preds = %249
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %251) #12
  %254 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %251 to i8*
  call void @free(i8* %254) #12
  br label %255

255:                                              ; preds = %245, %249, %253
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %163) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %130) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %17) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGOutOfFlowLayoutPart15CalculateOffsetERKNS0_8NodeInfoEPKNS_9LayoutBoxEb(%"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* noalias sret, %"class.blink::NGOutOfFlowLayoutPart"* nocapture readonly, %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* dereferenceable(128), %"class.blink::LayoutBox"* readnone, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"struct.blink::NGBoxStrut"*
  %8 = alloca %"class.absl::optional.2217", align 4
  %9 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 80, i1 false)
  %10 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 3
  %11 = bitcast %"struct.blink::NGLogicalOutOfFlowDimensions"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 16, i1 false) #12
  %12 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 17, i1 false) #12
  store i32 -64, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 3, i32 1, i32 1, i32 0
  store i32 -64, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 3, i32 2
  %15 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 8, i32 0, i32 0
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 8, i32 1, i32 0
  store i32 0, i32* %16, align 4
  %17 = bitcast %"struct.blink::NGBoxStrut"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 19, i1 false) #12
  %18 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %2, i64 0, i32 0
  %19 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %2 to %"class.blink::LayoutObject"**
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = lshr i160 %25, 102
  %27 = trunc i160 %26 to i16
  %28 = and i16 %27, 3
  %29 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %2, i64 0, i32 4, i32 0, i32 0
  %30 = load i8, i8* %29, align 8
  %31 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %2, i64 0, i32 4, i32 0, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i16 %28, 0
  %34 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %2, i64 0, i32 3, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %2, i64 0, i32 3, i32 1, i32 0
  %36 = select i1 %33, i32* %35, i32* %34
  %37 = select i1 %33, i32* %34, i32* %35
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %36, align 4
  %40 = zext i32 %39 to i64
  %41 = shl nuw i64 %40, 32
  %42 = zext i32 %38 to i64
  %43 = or i64 %41, %42
  br i1 %4, label %44, label %77

44:                                               ; preds = %5
  %45 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %1, i64 0, i32 12
  %46 = load i8, i8* %45, align 2, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %77, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %2, i64 0, i32 8
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %77

52:                                               ; preds = %48
  %53 = tail call %"class.blink::NGLayoutResult"* @_ZNK5blink11NGBlockNode40CachedLayoutResultForOutOfFlowPositionedENS_11LogicalSizeE(%"class.blink::NGBlockNode"* %18, i64 %43) #12
  %54 = icmp eq %"class.blink::NGLayoutResult"* %53, null
  br i1 %54, label %77, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %53, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %56) #12
  %57 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 1
  %58 = ptrtoint %"class.blink::NGLayoutResult"* %53 to i64
  %59 = bitcast %class.scoped_refptr.1723* %57 to i64*
  %60 = getelementptr inbounds %class.scoped_refptr.1723, %class.scoped_refptr.1723* %57, i64 0, i32 0
  %61 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %60, align 8
  store i64 %58, i64* %59, align 8
  %62 = icmp eq %"class.blink::NGLayoutResult"* %61, null
  br i1 %62, label %70, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %61, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %64) #12
  %65 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %61) #12
  %69 = bitcast %"class.blink::NGLayoutResult"* %61 to i8*
  tail call void @free(i8* %69) #12
  br label %70

70:                                               ; preds = %55, %63, %68
  %71 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 6
  store i8 1, i8* %71, align 2
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %56) #12
  %72 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %53, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %269

75:                                               ; preds = %70
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %53) #12
  %76 = bitcast %"class.blink::NGLayoutResult"* %53 to i8*
  tail call void @free(i8* %76) #12
  br label %269

77:                                               ; preds = %52, %48, %44, %5
  %78 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #12
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %80 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %2, i64 0, i32 1
  %81 = tail call { i64, i64 } @_ZN5blink14ComputeBordersERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %80, %"class.blink::NGBlockNode"* dereferenceable(16) %18) #12
  %82 = extractvalue { i64, i64 } %81, 0
  %83 = extractvalue { i64, i64 } %81, 1
  %84 = tail call { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %80, %"class.blink::ComputedStyle"* dereferenceable(104) %22) #12
  %85 = extractvalue { i64, i64 } %84, 0
  %86 = trunc i64 %85 to i32
  %87 = lshr i64 %85, 32
  %88 = trunc i64 %87 to i32
  %89 = extractvalue { i64, i64 } %84, 1
  %90 = trunc i64 %82 to i32
  %91 = lshr i64 %82, 32
  %92 = trunc i64 %91 to i32
  %93 = icmp slt i32 %86, 0
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %90, i32 %86) #12
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !4
  %99 = icmp slt i32 %88, 0
  %100 = select i1 %99, i32 -2147483648, i32 2147483647
  %101 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %92, i32 %88) #12
  %102 = extractvalue { i32, i1 } %101, 1
  %103 = extractvalue { i32, i1 } %101, 0
  %104 = select i1 %102, i32 %100, i32 %103, !prof !4
  %105 = trunc i64 %83 to i32
  %106 = trunc i64 %89 to i32
  %107 = icmp slt i32 %106, 0
  %108 = select i1 %107, i32 -2147483648, i32 2147483647
  %109 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %106) #12
  %110 = extractvalue { i32, i1 } %109, 1
  %111 = extractvalue { i32, i1 } %109, 0
  %112 = select i1 %110, i32 %108, i32 %111, !prof !4
  %113 = zext i32 %112 to i64
  %114 = lshr i64 %83, 32
  %115 = trunc i64 %114 to i32
  %116 = lshr i64 %89, 32
  %117 = trunc i64 %116 to i32
  %118 = icmp slt i32 %117, 0
  %119 = select i1 %118, i32 -2147483648, i32 2147483647
  %120 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %115, i32 %117) #12
  %121 = extractvalue { i32, i1 } %120, 1
  %122 = extractvalue { i32, i1 } %120, 0
  %123 = select i1 %121, i32 %119, i32 %122, !prof !4
  %124 = zext i32 %123 to i64
  %125 = shl nuw i64 %124, 32
  %126 = or i64 %125, %113
  %127 = zext i32 %104 to i64
  %128 = shl nuw i64 %127, 32
  %129 = zext i32 %98 to i64
  %130 = or i64 %128, %129
  %131 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %130, i64* %131, align 8
  store i64 %126, i64* %79, align 8
  %132 = getelementptr inbounds %"class.absl::optional.2217", %"class.absl::optional.2217"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %132) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %132, i8 -86, i64 12, i1 false)
  store i8 0, i8* %132, align 4
  %133 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %134 = bitcast %"class.blink::LayoutObject"* %133 to i1 (%"class.blink::LayoutObject"*, i32)***
  %135 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %134, align 8
  %136 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %135, i64 92
  %137 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %136, align 8
  %138 = tail call zeroext i1 %137(%"class.blink::LayoutObject"* %133, i32 39) #12
  br i1 %138, label %139, label %149

139:                                              ; preds = %77
  %140 = call i64 @_ZN5blink19ComputeReplacedSizeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutENS_16ReplacedSizeModeE(%"class.blink::NGBlockNode"* dereferenceable(16) %18, %"class.blink::NGConstraintSpace"* dereferenceable(32) %80, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %7, i32 0) #12
  %141 = load i8, i8* %132, align 4, !range !2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.absl::optional.2217", %"class.absl::optional.2217"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %145 = bitcast %"struct.blink::LogicalSize"* %144 to i64*
  store i64 %140, i64* %145, align 4
  br label %149

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.absl::optional.2217", %"class.absl::optional.2217"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %148 = bitcast %union.anon.2221* %147 to i64*
  store i64 %140, i64* %148, align 4
  store i8 1, i8* %132, align 4
  br label %149

149:                                              ; preds = %146, %143, %77
  %150 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %2, i64 0, i32 2
  %151 = zext i8 %32 to i16
  %152 = shl nuw i16 %151, 8
  %153 = zext i8 %30 to i16
  %154 = or i16 %152, %153
  %155 = call zeroext i1 @_ZN5blink32ComputeOutOfFlowInlineDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsE(%"class.blink::NGBlockNode"* dereferenceable(16) %18, %"class.blink::NGConstraintSpace"* dereferenceable(32) %80, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %7, %"struct.blink::NGLogicalStaticPosition"* dereferenceable(16) %150, %"class.absl::optional.2217"* nonnull dereferenceable(12) %8, i16 %154, %"struct.blink::NGLogicalOutOfFlowDimensions"* %10) #12
  %156 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 4
  %157 = zext i1 %155 to i8
  store i8 %157, i8* %156, align 8
  %158 = load i32, i32* %13, align 4
  %159 = icmp eq i32 %158, -64
  br i1 %159, label %160, label %175

160:                                              ; preds = %149
  %161 = call %"class.blink::NGLayoutResult"* @_ZN5blink31ComputeOutOfFlowBlockDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsE(%"class.blink::NGBlockNode"* dereferenceable(16) %18, %"class.blink::NGConstraintSpace"* dereferenceable(32) %80, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %7, %"struct.blink::NGLogicalStaticPosition"* dereferenceable(16) %150, %"class.absl::optional.2217"* nonnull dereferenceable(12) %8, i16 %154, %"struct.blink::NGLogicalOutOfFlowDimensions"* %10) #12
  %162 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 1
  %163 = ptrtoint %"class.blink::NGLayoutResult"* %161 to i64
  %164 = bitcast %class.scoped_refptr.1723* %162 to i64*
  %165 = getelementptr inbounds %class.scoped_refptr.1723, %class.scoped_refptr.1723* %162, i64 0, i32 0
  %166 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %165, align 8
  store i64 %163, i64* %164, align 8
  %167 = icmp eq %"class.blink::NGLayoutResult"* %166, null
  br i1 %167, label %175, label %168

168:                                              ; preds = %160
  %169 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %166, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %169) #12
  %170 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %166, i64 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %168
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %166) #12
  %174 = bitcast %"class.blink::NGLayoutResult"* %166 to i8*
  call void @free(i8* %174) #12
  br label %175

175:                                              ; preds = %173, %168, %160, %149
  %176 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %177 = load i8, i8* %176, align 4, !range !2
  %178 = icmp eq i8 %177, 0
  %179 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %180 = load i32, i32* %13, align 4
  store i32 %180, i32* %179, align 4
  br i1 %178, label %181, label %182

181:                                              ; preds = %175
  store i8 1, i8* %176, align 4
  br label %182

182:                                              ; preds = %175, %181
  %183 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 1, i32 0
  %184 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %183, align 8
  %185 = icmp ne %"class.blink::NGLayoutResult"* %184, null
  %186 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 5
  %187 = zext i1 %185 to i8
  store i8 %187, i8* %186, align 1
  %188 = trunc i16 %28 to i8
  %189 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %10, i64 0, i32 0, i32 0, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = and i160 %25, 41538374868278621028243970633760768
  %194 = icmp ne i160 %193, 0
  %195 = select i1 %194, i32 %192, i32 %190
  %196 = select i1 %194, i32 %190, i32 %192
  switch i8 %188, label %212 [
    i8 0, label %197
    i8 1, label %202
    i8 3, label %202
    i8 2, label %207
  ]

197:                                              ; preds = %182
  %198 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 3, i32 0, i32 2, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 3, i32 0, i32 3, i32 0
  %201 = load i32, i32* %200, align 4
  br label %213

202:                                              ; preds = %182, %182
  %203 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 3, i32 0, i32 2, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 3, i32 0, i32 3, i32 0
  %206 = load i32, i32* %205, align 4
  br label %213

207:                                              ; preds = %182
  %208 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 3, i32 0, i32 3, i32 0
  %209 = load i32, i32* %208, align 4
  %210 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 3, i32 0, i32 2, i32 0
  %211 = load i32, i32* %210, align 4
  br label %213

212:                                              ; preds = %182
  unreachable

213:                                              ; preds = %197, %202, %207
  %214 = phi i32 [ %201, %197 ], [ %196, %202 ], [ %196, %207 ]
  %215 = phi i32 [ %195, %197 ], [ %206, %202 ], [ %211, %207 ]
  %216 = phi i32 [ %196, %197 ], [ %204, %202 ], [ %209, %207 ]
  %217 = phi i32 [ %199, %197 ], [ %195, %202 ], [ %195, %207 ]
  %218 = zext i32 %215 to i64
  %219 = zext i32 %216 to i64
  %220 = shl nuw i64 %219, 32
  %221 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %2, i64 0, i32 5
  %222 = bitcast %"class.blink::WritingDirectionMode"* %221 to i16*
  %223 = load i16, i16* %222, align 4
  %224 = trunc i16 %223 to i8
  switch i8 %224, label %232 [
    i8 0, label %225
    i8 1, label %227
    i8 3, label %227
    i8 2, label %228
    i8 4, label %230
  ]

225:                                              ; preds = %213
  %226 = zext i32 %217 to i64
  br label %232

227:                                              ; preds = %213, %213
  br label %232

228:                                              ; preds = %213
  %229 = or i64 %220, %218
  br label %232

230:                                              ; preds = %213
  %231 = or i64 %220, %218
  br label %232

232:                                              ; preds = %213, %225, %227, %228, %230
  %233 = phi i64 [ 0, %213 ], [ %231, %230 ], [ %229, %228 ], [ %219, %227 ], [ %226, %225 ]
  %234 = phi i32 [ 0, %213 ], [ %217, %230 ], [ %214, %228 ], [ %214, %227 ], [ %216, %225 ]
  %235 = phi i32 [ 0, %213 ], [ %214, %230 ], [ %217, %228 ], [ %217, %227 ], [ %215, %225 ]
  %236 = icmp ugt i16 %223, 255
  %237 = select i1 %236, i32 %234, i32 %235
  %238 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo", %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* %2, i64 0, i32 4, i32 1, i32 0
  %239 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 0
  %240 = bitcast %"struct.blink::LogicalOffset"* %238 to i64*
  %241 = load i64, i64* %240, align 4
  %242 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 0, i32 0, i32 0
  %243 = trunc i64 %241 to i32
  %244 = icmp slt i32 %237, 0
  %245 = select i1 %244, i32 -2147483648, i32 2147483647
  %246 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %243, i32 %237) #12
  %247 = extractvalue { i32, i1 } %246, 1
  %248 = extractvalue { i32, i1 } %246, 0
  %249 = select i1 %247, i32 %245, i32 %248, !prof !4
  store i32 %249, i32* %242, align 4
  %250 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %0, i64 0, i32 0, i32 1, i32 0
  %251 = lshr i64 %241, 32
  %252 = trunc i64 %251 to i32
  %253 = trunc i64 %233 to i32
  %254 = icmp slt i32 %253, 0
  %255 = select i1 %254, i32 -2147483648, i32 2147483647
  %256 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %252, i32 %253) #12
  %257 = extractvalue { i32, i1 } %256, 1
  %258 = extractvalue { i32, i1 } %256, 0
  %259 = select i1 %257, i32 %255, i32 %258, !prof !4
  store i32 %259, i32* %250, align 4
  %260 = icmp eq %"class.blink::LayoutBox"* %3, null
  br i1 %260, label %261, label %268

261:                                              ; preds = %232
  %262 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %1, i64 0, i32 14
  %263 = load i8, i8* %262, align 4, !range !2
  %264 = icmp eq i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %1, i64 0, i32 0
  %267 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %266, align 8
  call void @_ZN5blink26AdjustOffsetForSplitInlineERKNS_11NGBlockNodeEPKNS_20NGBoxFragmentBuilderERNS_13LogicalOffsetE(%"class.blink::NGBlockNode"* dereferenceable(16) %18, %"class.blink::NGBoxFragmentBuilder"* %267, %"struct.blink::LogicalOffset"* dereferenceable(8) %239) #12
  br label %268

268:                                              ; preds = %261, %232, %265
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %132) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #12
  br label %269

269:                                              ; preds = %75, %70, %268
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGLayoutResult"* @_ZN5blink21NGOutOfFlowLayoutPart13LayoutOOFNodeERKNS0_12NodeToLayoutEPKNS_9LayoutBoxEPKNS_17NGConstraintSpaceE(%"class.blink::NGOutOfFlowLayoutPart"* nocapture readonly, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* dereferenceable(224), %"class.blink::LayoutBox"* readnone, %"class.blink::NGConstraintSpace"*) local_unnamed_addr #0 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"struct.blink::NGBoxStrut"*
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"struct.blink::NGBoxStrut"*
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca %"class.blink::PaintLayerScrollableArea::FreezeScrollbarsRootScope", align 8
  %12 = alloca %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", align 8
  %13 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 1, i32 0
  %15 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %14, align 8
  %16 = ptrtoint %"class.blink::NGLayoutResult"* %15 to i64
  %17 = icmp eq %"class.blink::NGLayoutResult"* %15, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #12
  br label %20

20:                                               ; preds = %4, %18
  %21 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 6
  %22 = load i8, i8* %21, align 2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  br i1 %17, label %155, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %26) #12
  br label %146

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 4
  %29 = load i8, i8* %28, align 8
  %30 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #12
  %31 = bitcast { i64, i64 }* %5 to i32*
  %32 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %6, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %34 = bitcast i64* %33 to i32*
  %35 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %6, i64 0, i32 3, i32 0
  %36 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 0
  %37 = tail call { i64, i64 } @_ZN5blink32ComputeScrollbarsForNonAnonymousERKNS_11NGBlockNodeE(%"class.blink::NGBlockNode"* dereferenceable(16) %36) #12
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %39 = extractvalue { i64, i64 } %37, 0
  store i64 %39, i64* %38, align 8
  %40 = extractvalue { i64, i64 } %37, 1
  store i64 %40, i64* %33, align 8
  %41 = tail call %"class.blink::NGLayoutResult"* @_ZN5blink21NGOutOfFlowLayoutPart6LayoutERKNS0_12NodeToLayoutEPKNS_17NGConstraintSpaceE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* dereferenceable(224) %1, %"class.blink::NGConstraintSpace"* %3)
  %42 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #12
  %43 = bitcast { i64, i64 }* %7 to i32*
  %44 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %8, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %46 = bitcast i64* %45 to i32*
  %47 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %8, i64 0, i32 3, i32 0
  %48 = tail call { i64, i64 } @_ZN5blink32ComputeScrollbarsForNonAnonymousERKNS_11NGBlockNodeE(%"class.blink::NGBlockNode"* dereferenceable(16) %36) #12
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %50 = extractvalue { i64, i64 } %48, 0
  store i64 %50, i64* %49, align 8
  %51 = extractvalue { i64, i64 } %48, 1
  store i64 %51, i64* %45, align 8
  %52 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %53, i64 0, i32 0, i32 0, i32 4
  %55 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %54 to i96*
  %56 = load i96, i96* %55, align 4
  %57 = and i96 %56, 256
  %58 = icmp eq i96 %57, 0
  %59 = icmp eq i8 %29, 0
  %60 = or i1 %59, %58
  br i1 %60, label %140, label %61

61:                                               ; preds = %27
  %62 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %53, i64 0, i32 0, i32 0, i32 5, i32 0
  %63 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %63, i64 0, i32 0, i32 9
  %65 = bitcast [20 x i8]* %64 to i160*
  %66 = load i160, i160* %65, align 8
  %67 = lshr i160 %66, 102
  %68 = trunc i160 %67 to i16
  %69 = and i16 %68, 3
  %70 = lshr i160 %66, 107
  %71 = trunc i160 %70 to i16
  %72 = and i16 %71, 256
  %73 = or i16 %72, %69
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #12
  store i8 0, i8* %9, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #12
  store i8 0, i8* %10, align 1
  %74 = bitcast %"class.blink::PaintLayerScrollableArea::FreezeScrollbarsRootScope"* %11 to i8*
  %75 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %12 to i8*
  %76 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %12, i64 0, i32 1
  %77 = getelementptr inbounds %class.scoped_refptr.1723, %class.scoped_refptr.1723* %76, i64 0, i32 0
  %78 = bitcast %class.scoped_refptr.1723* %76 to i64*
  %79 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo", %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %12, i64 0, i32 1, i32 0
  %80 = bitcast %"class.blink::PaintLayerScrollableArea::FreezeScrollbarsRootScope"* %11 to i8*
  br label %81

81:                                               ; preds = %134, %61
  %82 = phi i64 [ %16, %61 ], [ %89, %134 ]
  %83 = phi %"class.blink::NGLayoutResult"* [ %41, %61 ], [ %110, %134 ]
  call void @_ZN5blink18AddScrollbarFreezeERKNS_10NGBoxStrutES2_NS_20WritingDirectionModeEPbS4_(%"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %6, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %8, i16 %73, i8* nonnull %9, i8* nonnull %10) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %42, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 16, i1 false)
  %84 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %52, align 8
  %85 = load i8, i8* %9, align 1, !range !2
  %86 = icmp ne i8 %85, 0
  %87 = load i8, i8* %10, align 1, !range !2
  %88 = icmp ne i8 %87, 0
  call void @_ZN5blink24PaintLayerScrollableArea25FreezeScrollbarsRootScopeC1ERKNS_9LayoutBoxEbb(%"class.blink::PaintLayerScrollableArea::FreezeScrollbarsRootScope"* nonnull %11, %"class.blink::LayoutBox"* dereferenceable(216) %84, i1 zeroext %86, i1 zeroext %88) #12
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %75) #12
  call void @_ZN5blink21NGOutOfFlowLayoutPart15CalculateOffsetERKNS0_8NodeInfoEPKNS_9LayoutBoxEb(%"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* nonnull sret %12, %"class.blink::NGOutOfFlowLayoutPart"* %0, %"struct.blink::NGOutOfFlowLayoutPart::NodeInfo"* dereferenceable(128) %13, %"class.blink::LayoutBox"* %2, i1 zeroext false)
  %89 = load i64, i64* %78, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %77, align 8
  %90 = inttoptr i64 %82 to %"class.blink::NGLayoutResult"*
  %91 = icmp eq i64 %82, 0
  br i1 %91, label %99, label %92

92:                                               ; preds = %81
  %93 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %90, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %93) #12
  %94 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %90, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %92
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %90) #12
  %98 = inttoptr i64 %82 to i8*
  call void @free(i8* %98) #12
  br label %99

99:                                               ; preds = %81, %92, %97
  %100 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %79, align 8
  %101 = icmp eq %"class.blink::NGLayoutResult"* %100, null
  br i1 %101, label %109, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %100, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %103) #12
  %104 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %100, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %102
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %100) #12
  %108 = bitcast %"class.blink::NGLayoutResult"* %100 to i8*
  call void @free(i8* %108) #12
  br label %109

109:                                              ; preds = %99, %102, %107
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %75) #12
  %110 = call %"class.blink::NGLayoutResult"* @_ZN5blink21NGOutOfFlowLayoutPart6LayoutERKNS0_12NodeToLayoutEPKNS_17NGConstraintSpaceE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* dereferenceable(224) %1, %"class.blink::NGConstraintSpace"* %3)
  %111 = icmp eq %"class.blink::NGLayoutResult"* %83, null
  br i1 %111, label %119, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %83, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %113) #12
  %114 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %112
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %83) #12
  %118 = bitcast %"class.blink::NGLayoutResult"* %83 to i8*
  call void @free(i8* %118) #12
  br label %119

119:                                              ; preds = %109, %112, %117
  %120 = call { i64, i64 } @_ZN5blink32ComputeScrollbarsForNonAnonymousERKNS_11NGBlockNodeE(%"class.blink::NGBlockNode"* dereferenceable(16) %36) #12
  %121 = extractvalue { i64, i64 } %120, 0
  %122 = extractvalue { i64, i64 } %120, 1
  store i64 %121, i64* %49, align 8
  store i64 %122, i64* %45, align 8
  call void @_ZN5blink24PaintLayerScrollableArea25FreezeScrollbarsRootScopeD1Ev(%"class.blink::PaintLayerScrollableArea::FreezeScrollbarsRootScope"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #12
  %123 = load i32, i32* %31, align 8
  %124 = load i32, i32* %43, align 8
  %125 = icmp eq i32 %123, %124
  br i1 %125, label %126, label %134

126:                                              ; preds = %119
  %127 = load i32, i32* %32, align 4
  %128 = load i32, i32* %44, align 4
  %129 = icmp eq i32 %127, %128
  br i1 %129, label %130, label %134

130:                                              ; preds = %126
  %131 = load i32, i32* %34, align 8
  %132 = load i32, i32* %46, align 8
  %133 = icmp eq i32 %131, %132
  br i1 %133, label %135, label %134

134:                                              ; preds = %130, %126, %119, %135
  br label %81

135:                                              ; preds = %130
  %136 = load i32, i32* %35, align 4
  %137 = load i32, i32* %47, align 4
  %138 = icmp eq i32 %136, %137
  br i1 %138, label %139, label %134

139:                                              ; preds = %135
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #12
  br label %140

140:                                              ; preds = %139, %27
  %141 = phi i64 [ %89, %139 ], [ %16, %27 ]
  %142 = phi %"class.blink::NGLayoutResult"* [ %110, %139 ], [ %41, %27 ]
  %143 = ptrtoint %"class.blink::NGLayoutResult"* %142 to i64
  %144 = inttoptr i64 %141 to %"class.blink::NGLayoutResult"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #12
  %145 = icmp eq i64 %141, 0
  br i1 %145, label %155, label %146

146:                                              ; preds = %25, %140
  %147 = phi %"class.blink::NGLayoutResult"* [ %15, %25 ], [ %144, %140 ]
  %148 = phi i64 [ %16, %25 ], [ %143, %140 ]
  %149 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %147, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #12
  %150 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %147, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %146
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %147) #12
  %154 = bitcast %"class.blink::NGLayoutResult"* %147 to i8*
  call void @free(i8* %154) #12
  br label %155

155:                                              ; preds = %24, %140, %146, %153
  %156 = phi i64 [ %143, %140 ], [ %148, %146 ], [ %148, %153 ], [ %16, %24 ]
  %157 = inttoptr i64 %156 to %"class.blink::NGLayoutResult"*
  ret %"class.blink::NGLayoutResult"* %157
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21NGOutOfFlowLayoutPart12NodeToLayoutD2Ev(%"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %2, align 8
  %4 = icmp eq %"class.blink::NGPhysicalFragment"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %5
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %3) #12
  br label %11

11:                                               ; preds = %1, %5, %10
  %12 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %0, i64 0, i32 1, i32 1, i32 0
  %13 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %12, align 8
  %14 = icmp eq %"class.blink::NGLayoutResult"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %13, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #12
  %17 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %13) #12
  %21 = bitcast %"class.blink::NGLayoutResult"* %13 to i8*
  tail call void @free(i8* %21) #12
  br label %22

22:                                               ; preds = %11, %15, %20
  %23 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %0, i64 0, i32 0, i32 1, i32 3, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %29 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %28, align 8
  %30 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  tail call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %29) #12
  %32 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %29 to i8*
  tail call void @free(i8* %32) #12
  br label %33

33:                                               ; preds = %22, %27, %31
  %34 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %0, i64 0, i32 0, i32 1, i32 2
  tail call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %34) #12
  ret void
}

declare { i64, i64 } @_ZN5blink14LayoutBoxUtils31ComputeStaticPositionFromLegacyERKNS_9LayoutBoxERKNS_10NGBoxStrutEPKNS_20NGBoxFragmentBuilderE(%"class.blink::LayoutBox"* dereferenceable(216), %"struct.blink::NGBoxStrut"* dereferenceable(16), %"class.blink::NGBoxFragmentBuilder"*) local_unnamed_addr #2

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #2

declare void @_ZN5blink20NGBoxFragmentBuilder27AddOutOfFlowLegacyCandidateENS_11NGBlockNodeERKNS_23NGLogicalStaticPositionEPKNS_12LayoutInlineE(%"class.blink::NGBoxFragmentBuilder"*, %"class.blink::LayoutBox"*, i64, %"struct.blink::NGLogicalStaticPosition"* dereferenceable(16), %"class.blink::LayoutInline"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGOutOfFlowLayoutPart22GetContainingBlockInfoERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* noalias nocapture sret, %"class.blink::NGOutOfFlowLayoutPart"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* nocapture readonly dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutObject"*, align 8
  %5 = alloca %"class.blink::LayoutObject"*, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"struct.blink::NGBoxStrut"*
  %8 = alloca %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", align 4
  %9 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %2, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %1, i64 0, i32 5, i32 0
  %14 = bitcast i8* %13 to i16*
  %15 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %0 to i16*
  %16 = load i16, i16* %14, align 1
  store i16 %16, i16* %15, align 4
  %17 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %2, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = bitcast %"struct.blink::LogicalRect"* %17 to i8*
  %20 = bitcast %"struct.blink::LogicalRect"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 16, i1 false)
  %21 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %22 = bitcast i32* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 16, i1 false)
  br label %224

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %2, i64 0, i32 2
  %25 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutInline"* %25, null
  br i1 %26, label %36, label %27

27:                                               ; preds = %23
  %28 = ptrtoint %"class.blink::LayoutInline"* %25 to i64
  %29 = bitcast %"class.blink::LayoutObject"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  %30 = bitcast %"class.blink::LayoutObject"** %4 to i64*
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %1, i64 0, i32 3, i32 0
  %32 = call { %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"* } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.2203"* %31, %"class.blink::LayoutObject"** nonnull dereferenceable(8) %4) #12
  %33 = extractvalue { %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"* } %32, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  %34 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %0, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %33, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 8 %35, i64 36, i1 false)
  br label %224

36:                                               ; preds = %23
  %37 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %2, i64 0, i32 6
  %38 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %2, i64 0, i32 6, i32 2, i32 0
  %39 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %38, align 8
  %40 = icmp eq %"class.blink::NGPhysicalFragment"* %39, null
  br i1 %40, label %209, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.blink::LayoutObject"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #12
  store %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %5, align 8
  %43 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %39, i64 0, i32 3
  %44 = bitcast i24* %43 to i32*
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 64
  %47 = icmp eq i32 %46, 0
  %48 = and i32 %45, 960
  %49 = icmp ne i32 %48, 256
  %50 = and i1 %47, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %39, i64 0, i32 1
  %53 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %52, align 8
  br label %54

54:                                               ; preds = %41, %51
  %55 = phi %"class.blink::LayoutObject"* [ %53, %51 ], [ null, %41 ]
  store %"class.blink::LayoutObject"* %55, %"class.blink::LayoutObject"** %5, align 8
  %56 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %1, i64 0, i32 3
  %57 = getelementptr inbounds %"class.WTF::HashMap.2202", %"class.WTF::HashMap.2202"* %56, i64 0, i32 0
  %58 = call { %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"* } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.2203"* %57, %"class.blink::LayoutObject"** nonnull dereferenceable(8) %5) #12
  %59 = extractvalue { %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"* } %58, 0
  %60 = getelementptr inbounds %"class.WTF::HashMap.2202", %"class.WTF::HashMap.2202"* %56, i64 0, i32 0, i32 0
  %61 = load %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %1, i64 0, i32 3, i32 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %61, i64 %64
  %66 = icmp eq %"struct.WTF::KeyValuePair.2206"* %59, %65
  br i1 %66, label %70, label %67

67:                                               ; preds = %54
  %68 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %0, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %59, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 8 %69, i64 36, i1 false)
  br label %208

70:                                               ; preds = %54
  %71 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 5, i32 0
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = lshr i160 %76, 102
  %78 = trunc i160 %77 to i16
  %79 = and i16 %78, 3
  %80 = lshr i160 %76, 107
  %81 = trunc i160 %80 to i16
  %82 = and i16 %81, 256
  %83 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %39, i64 0, i32 2, i32 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %39, i64 0, i32 2, i32 1, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i16 %79, 0
  %88 = select i1 %87, i32 %84, i32 %86
  %89 = zext i32 %88 to i64
  %90 = bitcast %"class.blink::LayoutObject"* %71 to %"class.blink::LayoutBox"*
  %91 = call i32 @_ZN5blink14LayoutBoxUtils14TotalBlockSizeERKNS_9LayoutBoxE(%"class.blink::LayoutBox"* dereferenceable(216) %90) #12
  %92 = bitcast %"class.blink::NGPhysicalFragment"* %39 to %"class.blink::NGPhysicalBoxFragment"*
  %93 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #12
  %94 = bitcast { i64, i64 }* %6 to i32*
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %96 = bitcast i64* %95 to i32*
  %97 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %39, i64 1, i32 0, i32 0, i32 0, i32 0
  %98 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 16, i1 false)
  %99 = load i32, i32* %97, align 8
  %100 = and i32 %99, 1024
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %132, label %102

102:                                              ; preds = %70
  %103 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %92, i64 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %92, i64 0, i32 6, i64 %105
  %107 = and i32 %99, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %102
  %110 = bitcast %"struct.blink::NGLink"* %106 to %"struct.blink::PhysicalRect"*
  br label %121

111:                                              ; preds = %102
  %112 = bitcast %"struct.blink::NGLink"* %106 to i8*
  %113 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %106, i64 1
  %114 = bitcast %"struct.blink::NGLink"* %113 to i32*
  %115 = load i32, i32* %114, align 8
  %116 = shl i32 %115, 6
  %117 = or i32 %116, 24
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* %112, i64 %118
  %120 = bitcast i8* %119 to %"struct.blink::PhysicalRect"*
  br label %121

121:                                              ; preds = %111, %109
  %122 = phi %"struct.blink::PhysicalRect"* [ %120, %111 ], [ %110, %109 ]
  %123 = and i32 %99, 64
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %122, i64 1
  %126 = select i1 %124, %"struct.blink::PhysicalRect"* %122, %"struct.blink::PhysicalRect"* %125
  %127 = bitcast %"struct.blink::PhysicalRect"* %126 to i64*
  %128 = load i64, i64* %127, align 4
  %129 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %126, i64 0, i32 1
  %130 = bitcast %"struct.blink::PhysicalSize"* %129 to i64*
  %131 = load i64, i64* %130, align 4
  br label %132

132:                                              ; preds = %70, %121
  %133 = phi i64 [ %128, %121 ], [ 0, %70 ]
  %134 = phi i64 [ %131, %121 ], [ 0, %70 ]
  %135 = trunc i64 %133 to i32
  %136 = lshr i64 %133, 32
  %137 = or i16 %82, %79
  %138 = trunc i16 %79 to i8
  switch i8 %138, label %152 [
    i8 0, label %139
    i8 1, label %145
    i8 3, label %145
    i8 2, label %148
  ]

139:                                              ; preds = %132
  %140 = lshr i64 %134, 32
  %141 = trunc i64 %140 to i32
  %142 = and i64 %133, 4294967295
  %143 = shl i64 %134, 32
  %144 = or i64 %143, %142
  br label %153

145:                                              ; preds = %132, %132
  %146 = and i64 %134, -4294967296
  %147 = or i64 %146, %136
  br label %153

148:                                              ; preds = %132
  %149 = lshr i64 %134, 32
  %150 = and i64 %133, -4294967296
  %151 = or i64 %149, %150
  br label %153

152:                                              ; preds = %132
  unreachable

153:                                              ; preds = %139, %145, %148
  %154 = phi i64 [ %151, %148 ], [ %147, %145 ], [ %144, %139 ]
  %155 = phi i64 [ %134, %148 ], [ %134, %145 ], [ %136, %139 ]
  %156 = phi i32 [ %135, %148 ], [ %135, %145 ], [ %141, %139 ]
  %157 = trunc i64 %155 to i32
  %158 = icmp ugt i16 %137, 255
  %159 = select i1 %158, i32 %156, i32 %157
  %160 = select i1 %158, i32 %157, i32 %156
  %161 = zext i32 %159 to i64
  %162 = shl nuw i64 %161, 32
  %163 = zext i32 %160 to i64
  %164 = or i64 %162, %163
  %165 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %164, i64* %165, align 8
  store i64 %154, i64* %95, align 8
  %166 = zext i32 %91 to i64
  %167 = shl nuw i64 %166, 32
  %168 = or i64 %167, %89
  %169 = call i64 @_ZN5blink17ShrinkLogicalSizeENS_11LogicalSizeERKNS_10NGBoxStrutE(i64 %168, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %7) #12
  %170 = load i32, i32* %94, align 8
  %171 = load i32, i32* %96, align 8
  %172 = getelementptr inbounds %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock"* %37, i64 0, i32 0, i32 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = icmp slt i32 %173, 0
  %175 = select i1 %174, i32 -2147483648, i32 2147483647
  %176 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %170, i32 %173) #12
  %177 = extractvalue { i32, i1 } %176, 1
  %178 = extractvalue { i32, i1 } %176, 0
  %179 = select i1 %177, i32 %175, i32 %178, !prof !4
  %180 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %2, i64 0, i32 6, i32 0, i32 1, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = icmp slt i32 %181, 0
  %183 = select i1 %182, i32 -2147483648, i32 2147483647
  %184 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %171, i32 %181) #12
  %185 = extractvalue { i32, i1 } %184, 1
  %186 = extractvalue { i32, i1 } %184, 0
  %187 = select i1 %185, i32 %183, i32 %186, !prof !4
  %188 = zext i32 %187 to i64
  %189 = shl nuw i64 %188, 32
  %190 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %8, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %190) #12
  %191 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %8 to i32*
  store i32 -1431655766, i32* %191, align 4
  %192 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %8 to i16*
  store i16 %137, i16* %192, align 4
  %193 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %8, i64 0, i32 1
  %194 = bitcast %"struct.blink::LogicalRect"* %193 to i64*
  %195 = zext i32 %179 to i64
  %196 = or i64 %189, %195
  store i64 %196, i64* %194, align 4
  %197 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %8, i64 0, i32 1, i32 1
  %198 = bitcast %"struct.blink::LogicalSize"* %197 to i64*
  store i64 %169, i64* %198, align 4
  %199 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %8, i64 0, i32 2
  %200 = bitcast %"struct.blink::NGContainingBlock"* %37 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 8
  %202 = shufflevector <2 x i64> %201, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %203 = bitcast %"struct.blink::LogicalOffset"* %199 to <2 x i64>*
  store <2 x i64> %202, <2 x i64>* %203, align 4
  %204 = call { %"struct.WTF::KeyValuePair.2206"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS4_RS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.2203"* %57, %"class.blink::LayoutObject"** nonnull dereferenceable(8) %5, %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* nonnull dereferenceable(36) %8) #12
  %205 = extractvalue { %"struct.WTF::KeyValuePair.2206"*, i8 } %204, 0
  %206 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %0, i64 0, i32 0, i32 0
  %207 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %205, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %206, i8* align 8 %207, i64 36, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %190) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #12
  br label %208

208:                                              ; preds = %153, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #12
  br label %224

209:                                              ; preds = %36
  %210 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %2 to %"class.blink::LayoutObject"**
  %211 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %210, align 8
  %212 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %211, i64 0, i32 5, i32 0
  %213 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %212, align 8
  %214 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %213, i64 0, i32 0, i32 9
  %215 = bitcast [20 x i8]* %214 to i160*
  %216 = load i160, i160* %215, align 8
  %217 = and i160 %216, 8462480737302404222943232
  %218 = icmp eq i160 %217, 0
  %219 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %1, i64 0, i32 1
  %220 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %1, i64 0, i32 2
  %221 = select i1 %218, %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %219, %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %220
  %222 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %0, i64 0, i32 0, i32 0
  %223 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %221, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %222, i8* align 4 %223, i64 36, i1 false)
  br label %224

224:                                              ; preds = %209, %208, %27, %12
  ret void
}

declare i32 @_ZN5blink14LayoutBoxUtils14TotalBlockSizeERKNS_9LayoutBoxE(%"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGOutOfFlowLayoutPart29ComputeInlineContainingBlocksERKN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGOutOfFlowLayoutPart"*, %"class.WTF::Vector.1954"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::HashMap.2247", align 8
  %4 = alloca %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry", align 4
  %5 = alloca %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", align 4
  %6 = bitcast %"class.WTF::HashMap.2247"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashMap.2247", %"class.WTF::HashMap.2247"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.2247", %"class.WTF::HashMap.2247"* %3, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashMap.2247", %"class.WTF::HashMap.2247"* %3, i64 0, i32 0, i32 2
  %10 = bitcast %"class.WTF::HashMap.2247"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 20, i1 false) #12
  %11 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %12, i64 %15
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %2
  %19 = bitcast %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry"* %4 to i8*
  %20 = getelementptr inbounds %"class.WTF::HashMap.2247", %"class.WTF::HashMap.2247"* %3, i64 0, i32 0
  %21 = bitcast %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry"* %4 to i8*
  br label %69

22:                                               ; preds = %141, %2
  %23 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 0
  %24 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %23, align 8
  call void @_ZN5blink20NGBoxFragmentBuilder30ComputeInlineContainerGeometryEPN3WTF7HashMapIPKNS_12LayoutObjectEN4absl8optionalINS0_29InlineContainingBlockGeometryEEENS1_7PtrHashIS4_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEE(%"class.blink::NGBoxFragmentBuilder"* %24, %"class.WTF::HashMap.2247"* nonnull %3) #12
  %25 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGFragmentBuilder"**
  %26 = load %"class.blink::NGFragmentBuilder"*, %"class.blink::NGFragmentBuilder"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::NGFragmentBuilder", %"class.blink::NGFragmentBuilder"* %26, i64 0, i32 4
  %28 = bitcast %"struct.blink::LogicalSize"* %27 to i64*
  %29 = load i64, i64* %28, align 4
  %30 = lshr i64 %29, 32
  %31 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 4
  %32 = load i8, i8* %31, align 8
  %33 = icmp eq i8 %32, 0
  %34 = select i1 %33, i64 %30, i64 %29
  %35 = select i1 %33, i64 %29, i64 %30
  %36 = shl i64 %34, 32
  %37 = and i64 %35, 4294967295
  %38 = or i64 %36, %37
  %39 = load i32, i32* %9, align 4
  %40 = icmp eq i32 %39, 0
  %41 = load %"struct.WTF::KeyValuePair.2251"*, %"struct.WTF::KeyValuePair.2251"** %7, align 8
  %42 = load i32, i32* %8, align 8
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %41, i64 %43
  br i1 %40, label %146, label %45

45:                                               ; preds = %22
  %46 = icmp eq i32 %42, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %45, %51
  %48 = phi %"struct.WTF::KeyValuePair.2251"* [ %52, %51 ], [ %41, %45 ]
  %49 = bitcast %"struct.WTF::KeyValuePair.2251"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  switch i64 %50, label %54 [
    i64 -1, label %51
    i64 0, label %51
  ]

51:                                               ; preds = %47, %47
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %48, i64 1
  %53 = icmp eq %"struct.WTF::KeyValuePair.2251"* %52, %44
  br i1 %53, label %146, label %47

54:                                               ; preds = %47, %45
  %55 = phi %"struct.WTF::KeyValuePair.2251"* [ %41, %45 ], [ %48, %47 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair.2251"* %55, %44
  br i1 %56, label %146, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 1, i32 0, i32 0
  %59 = bitcast i8* %58 to i16*
  %60 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %5, i64 0, i32 0, i32 0
  %61 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %5 to i16*
  %62 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %5, i64 0, i32 1
  %63 = bitcast %"struct.blink::LogicalRect"* %62 to i64*
  %64 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %5, i64 0, i32 1, i32 1
  %65 = bitcast %"struct.blink::LogicalSize"* %64 to i64*
  %66 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %5, i64 0, i32 2, i32 0, i32 0
  %67 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 3, i32 0
  %68 = bitcast i32* %66 to i8*
  br label %152

69:                                               ; preds = %18, %141
  %70 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %12, %18 ], [ %142, %141 ]
  %71 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %70, i64 0, i32 2
  %72 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutInline"* %72, null
  %74 = ptrtoint %"class.blink::LayoutInline"* %72 to i64
  br i1 %73, label %141, label %75

75:                                               ; preds = %69
  %76 = load %"struct.WTF::KeyValuePair.2251"*, %"struct.WTF::KeyValuePair.2251"** %7, align 8
  %77 = icmp eq %"struct.WTF::KeyValuePair.2251"* %76, null
  br i1 %77, label %139, label %78

78:                                               ; preds = %75
  %79 = load i32, i32* %8, align 8
  %80 = add i32 %79, -1
  %81 = zext i32 %80 to i64
  %82 = shl i64 %74, 32
  %83 = xor i64 %82, -1
  %84 = add i64 %74, %83
  %85 = lshr i64 %84, 22
  %86 = xor i64 %85, %84
  %87 = shl i64 %86, 13
  %88 = xor i64 %87, -1
  %89 = add i64 %86, %88
  %90 = lshr i64 %89, 8
  %91 = xor i64 %90, %89
  %92 = mul i64 %91, 9
  %93 = lshr i64 %92, 15
  %94 = xor i64 %93, %92
  %95 = shl i64 %94, 27
  %96 = xor i64 %95, -1
  %97 = add i64 %94, %96
  %98 = lshr i64 %97, 31
  %99 = xor i64 %98, %97
  %100 = trunc i64 %99 to i32
  %101 = and i32 %80, %100
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %76, i64 %102
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %103, i64 0, i32 0
  %105 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %72, i64 0, i32 0, i32 0
  %107 = icmp eq %"class.blink::LayoutObject"* %105, %106
  br i1 %107, label %136, label %108

108:                                              ; preds = %78
  %109 = xor i32 %100, -1
  %110 = lshr i32 %100, 23
  %111 = add i32 %110, %109
  %112 = shl i32 %111, 12
  %113 = xor i32 %112, %111
  %114 = lshr i32 %113, 7
  %115 = xor i32 %114, %113
  %116 = shl i32 %115, 2
  %117 = xor i32 %116, %115
  %118 = lshr i32 %117, 20
  %119 = xor i32 %118, %117
  %120 = or i32 %119, 1
  %121 = zext i32 %120 to i64
  br label %122

122:                                              ; preds = %127, %108
  %123 = phi %"class.blink::LayoutObject"* [ %105, %108 ], [ %134, %127 ]
  %124 = phi i64 [ %102, %108 ], [ %131, %127 ]
  %125 = phi i64 [ 0, %108 ], [ %129, %127 ]
  %126 = icmp eq %"class.blink::LayoutObject"* %123, null
  br i1 %126, label %139, label %127

127:                                              ; preds = %122
  %128 = icmp eq i64 %125, 0
  %129 = select i1 %128, i64 %121, i64 %125
  %130 = add i64 %129, %124
  %131 = and i64 %130, %81
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %76, i64 %131
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %132, i64 0, i32 0
  %134 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %133, align 8
  %135 = icmp eq %"class.blink::LayoutObject"* %134, %106
  br i1 %135, label %136, label %122

136:                                              ; preds = %127, %78
  %137 = phi %"struct.WTF::KeyValuePair.2251"* [ %103, %78 ], [ %132, %127 ]
  %138 = icmp eq %"struct.WTF::KeyValuePair.2251"* %137, null
  br i1 %138, label %139, label %141

139:                                              ; preds = %122, %136, %75
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 0, i64 32, i1 false)
  %140 = call { %"struct.WTF::KeyValuePair.2251"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERKPKNS1_12LayoutInlineERS9_EENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.2248"* nonnull %20, %"class.blink::LayoutInline"** dereferenceable(8) %71, %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry"* nonnull dereferenceable(32) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #12
  br label %141

141:                                              ; preds = %136, %69, %139
  %142 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %70, i64 1
  %143 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %142, %16
  br i1 %143, label %22, label %69

144:                                              ; preds = %258, %295, %292
  %145 = load %"struct.WTF::KeyValuePair.2251"*, %"struct.WTF::KeyValuePair.2251"** %7, align 8
  br label %146

146:                                              ; preds = %51, %22, %144, %54
  %147 = phi %"struct.WTF::KeyValuePair.2251"* [ %145, %144 ], [ %41, %54 ], [ %41, %22 ], [ %41, %51 ]
  %148 = icmp eq %"struct.WTF::KeyValuePair.2251"* %147, null
  br i1 %148, label %151, label %149, !prof !3

149:                                              ; preds = %146
  %150 = bitcast %"struct.WTF::KeyValuePair.2251"* %147 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %150) #12
  store %"struct.WTF::KeyValuePair.2251"* null, %"struct.WTF::KeyValuePair.2251"** %7, align 8
  br label %151

151:                                              ; preds = %146, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void

152:                                              ; preds = %57, %295
  %153 = phi %"struct.WTF::KeyValuePair.2251"* [ %55, %57 ], [ %289, %295 ]
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %153, i64 0, i32 0
  %155 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %155, i64 0, i32 5, i32 0
  %157 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %156, align 8
  %158 = load i16, i16* %59, align 8
  %159 = trunc i16 %158 to i8
  %160 = lshr i16 %158, 8
  %161 = trunc i16 %160 to i8
  %162 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %157, i64 0, i32 0, i32 9
  %163 = bitcast [20 x i8]* %162 to i160*
  %164 = load i160, i160* %163, align 8
  %165 = lshr i160 %164, 102
  %166 = trunc i160 %165 to i16
  %167 = and i16 %166, 3
  %168 = lshr i160 %164, 107
  %169 = trunc i160 %168 to i16
  %170 = and i16 %169, 256
  %171 = trunc i16 %167 to i8
  %172 = lshr exact i16 %170, 8
  %173 = trunc i16 %172 to i8
  %174 = call { i64, i64 } @_ZN5blink23ComputeBordersForInlineERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %157) #12
  %175 = extractvalue { i64, i64 } %174, 0
  %176 = trunc i64 %175 to i32
  %177 = lshr i64 %175, 32
  %178 = trunc i64 %177 to i32
  %179 = extractvalue { i64, i64 } %174, 1
  %180 = icmp eq i8 %159, %171
  %181 = icmp eq i8 %161, %173
  %182 = and i1 %180, %181
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %153, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %184 = load i8, i8* %183, align 4, !range !2
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %187, !prof !4

186:                                              ; preds = %152
  call void @llvm.trap() #12
  unreachable

187:                                              ; preds = %152
  %188 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %153, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %153, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %190 = bitcast %"struct.blink::PhysicalSize"* %189 to i64*
  %191 = load i64, i64* %190, align 4
  %192 = call i64 @_ZNK5blink14PhysicalOffset16ConvertToLogicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::PhysicalOffset"* %188, i16 %158, i64 %38, i64 %191) #12
  %193 = trunc i64 %192 to i32
  %194 = lshr i64 %192, 32
  %195 = trunc i64 %194 to i32
  %196 = trunc i64 %179 to i32
  %197 = icmp slt i32 %196, 0
  %198 = select i1 %197, i32 -2147483648, i32 2147483647
  %199 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %195, i32 %196) #12
  %200 = extractvalue { i32, i1 } %199, 1
  %201 = extractvalue { i32, i1 } %199, 0
  %202 = select i1 %200, i32 %198, i32 %201, !prof !4
  br i1 %182, label %203, label %210

203:                                              ; preds = %187
  %204 = icmp slt i32 %176, 0
  %205 = select i1 %204, i32 -2147483648, i32 2147483647
  %206 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %193, i32 %176) #12
  %207 = extractvalue { i32, i1 } %206, 1
  %208 = extractvalue { i32, i1 } %206, 0
  %209 = select i1 %207, i32 %205, i32 %208, !prof !4
  br label %210

210:                                              ; preds = %203, %187
  %211 = phi i32 [ %209, %203 ], [ %193, %187 ]
  %212 = load i8, i8* %183, align 4, !range !2
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %214, label %215, !prof !4

214:                                              ; preds = %210
  call void @llvm.trap() #12
  unreachable

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %153, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %217 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %153, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %218 = bitcast %"struct.blink::PhysicalSize"* %217 to i64*
  %219 = load i64, i64* %218, align 4
  %220 = call i64 @_ZNK5blink14PhysicalOffset16ConvertToLogicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::PhysicalOffset"* %216, i16 %158, i64 %38, i64 %219) #12
  %221 = trunc i64 %220 to i32
  %222 = lshr i64 %220, 32
  %223 = trunc i64 %222 to i32
  %224 = icmp eq i8 %159, 0
  %225 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %217, i64 0, i32 0, i32 0
  %226 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %153, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1, i32 1, i32 0
  %227 = select i1 %224, i32* %226, i32* %225
  %228 = select i1 %224, i32* %225, i32* %226
  %229 = load i32, i32* %228, align 4
  %230 = load i32, i32* %227, align 4
  %231 = icmp slt i32 %229, 0
  %232 = select i1 %231, i32 -2147483648, i32 2147483647
  %233 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %221, i32 %229) #12
  %234 = extractvalue { i32, i1 } %233, 1
  %235 = extractvalue { i32, i1 } %233, 0
  %236 = select i1 %234, i32 %232, i32 %235, !prof !4
  %237 = icmp slt i32 %230, 0
  %238 = select i1 %237, i32 -2147483648, i32 2147483647
  %239 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %223, i32 %230) #12
  %240 = extractvalue { i32, i1 } %239, 1
  %241 = extractvalue { i32, i1 } %239, 0
  %242 = select i1 %240, i32 %238, i32 %241, !prof !4
  %243 = lshr i64 %179, 32
  %244 = trunc i64 %243 to i32
  %245 = icmp sgt i32 %244, -1
  %246 = select i1 %245, i32 -2147483648, i32 2147483647
  %247 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %242, i32 %244) #12
  %248 = extractvalue { i32, i1 } %247, 1
  %249 = extractvalue { i32, i1 } %247, 0
  %250 = select i1 %248, i32 %246, i32 %249, !prof !4
  br i1 %182, label %251, label %258

251:                                              ; preds = %215
  %252 = icmp sgt i32 %178, -1
  %253 = select i1 %252, i32 -2147483648, i32 2147483647
  %254 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %236, i32 %178) #12
  %255 = extractvalue { i32, i1 } %254, 1
  %256 = extractvalue { i32, i1 } %254, 0
  %257 = select i1 %255, i32 %253, i32 %256, !prof !4
  br label %258

258:                                              ; preds = %251, %215
  %259 = phi i32 [ %257, %251 ], [ %236, %215 ]
  %260 = icmp slt i32 %259, %211
  %261 = select i1 %260, i32 %211, i32 %259
  %262 = icmp slt i32 %250, %202
  %263 = select i1 %262, i32 %202, i32 %250
  %264 = icmp sgt i32 %211, -1
  %265 = select i1 %264, i32 -2147483648, i32 2147483647
  %266 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %261, i32 %211) #12
  %267 = extractvalue { i32, i1 } %266, 1
  %268 = extractvalue { i32, i1 } %266, 0
  %269 = select i1 %267, i32 %265, i32 %268, !prof !4
  %270 = icmp sgt i32 %202, -1
  %271 = select i1 %270, i32 -2147483648, i32 2147483647
  %272 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %263, i32 %202) #12
  %273 = extractvalue { i32, i1 } %272, 1
  %274 = extractvalue { i32, i1 } %272, 0
  %275 = select i1 %273, i32 %271, i32 %274, !prof !4
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %60) #12
  %276 = or i16 %170, %167
  store i16 %276, i16* %61, align 4
  %277 = zext i32 %202 to i64
  %278 = shl nuw i64 %277, 32
  %279 = zext i32 %211 to i64
  %280 = or i64 %278, %279
  store i64 %280, i64* %63, align 4
  %281 = zext i32 %275 to i64
  %282 = shl nuw i64 %281, 32
  %283 = zext i32 %269 to i64
  %284 = or i64 %282, %283
  store i64 %284, i64* %65, align 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 16, i1 false)
  %285 = call { %"struct.WTF::KeyValuePair.2206"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERKS4_S7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.2203"* %67, %"class.blink::LayoutObject"** dereferenceable(8) %154, %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* nonnull dereferenceable(36) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %60) #12
  %286 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %153, i64 1
  %287 = icmp eq %"struct.WTF::KeyValuePair.2251"* %286, %44
  br i1 %287, label %144, label %288

288:                                              ; preds = %258, %292
  %289 = phi %"struct.WTF::KeyValuePair.2251"* [ %293, %292 ], [ %286, %258 ]
  %290 = bitcast %"struct.WTF::KeyValuePair.2251"* %289 to i64*
  %291 = load i64, i64* %290, align 8
  switch i64 %291, label %295 [
    i64 -1, label %292
    i64 0, label %292
  ]

292:                                              ; preds = %288, %288
  %293 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %289, i64 1
  %294 = icmp eq %"struct.WTF::KeyValuePair.2251"* %293, %44
  br i1 %294, label %144, label %288

295:                                              ; preds = %288
  %296 = icmp eq %"struct.WTF::KeyValuePair.2251"* %289, %44
  br i1 %296, label %144, label %152
}

declare void @_ZN5blink20NGBoxFragmentBuilder30ComputeInlineContainerGeometryEPN3WTF7HashMapIPKNS_12LayoutObjectEN4absl8optionalINS0_29InlineContainingBlockGeometryEEENS1_7PtrHashIS4_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEE(%"class.blink::NGBoxFragmentBuilder"*, %"class.WTF::HashMap.2247"*) local_unnamed_addr #2

declare { i64, i64 } @_ZN5blink23ComputeBordersForInlineERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

declare i64 @_ZNK5blink14PhysicalOffset16ConvertToLogicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::PhysicalOffset"*, i16, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21NGOutOfFlowLayoutPart30SaveStaticPositionOnPaintLayerEPNS_9LayoutBoxERKNS_23NGLogicalStaticPositionE(%"class.blink::NGOutOfFlowLayoutPart"* nocapture readonly, %"class.blink::LayoutBox"*, %"struct.blink::NGLogicalStaticPosition"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 7
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutObject"* %6, null
  br i1 %7, label %39, label %8, !prof !4

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 73786976294838206464
  %13 = icmp eq i96 %12, 0
  %14 = and i96 %11, 113336795588871485128704
  %15 = icmp eq i96 %14, 75557863725914323419136
  %16 = or i1 %13, %15
  br i1 %16, label %30, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8
  %23 = and i160 %22, 16528282690043758247936
  %24 = icmp eq i160 %23, 0
  br i1 %24, label %25, label %30, !prof !4

25:                                               ; preds = %17
  %26 = tail call zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"* %4) #12
  br i1 %26, label %27, label %30, !prof !4

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 7
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  br label %39

30:                                               ; preds = %25, %17, %8
  %31 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*)***
  %32 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %32, i64 25
  %34 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* nonnull %6) #12
  br i1 %35, label %36, label %39, !prof !4

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 7
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  br label %39

39:                                               ; preds = %3, %27, %30, %36
  %40 = phi %"class.blink::LayoutObject"* [ %29, %27 ], [ %38, %36 ], [ null, %3 ], [ %6, %30 ]
  %41 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGFragmentBuilder"**
  %42 = load %"class.blink::NGFragmentBuilder"*, %"class.blink::NGFragmentBuilder"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::NGFragmentBuilder", %"class.blink::NGFragmentBuilder"* %42, i64 0, i32 5
  %44 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %45 = icmp eq %"class.blink::LayoutObject"* %40, %44
  br i1 %45, label %56, label %46

46:                                               ; preds = %39
  %47 = bitcast %"class.blink::LayoutObject"* %40 to i1 (%"class.blink::LayoutObject"*)***
  %48 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %47, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %48, i64 26
  %50 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::LayoutObject"* %40) #12
  br i1 %51, label %52, label %114

52:                                               ; preds = %46
  %53 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %40, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #12
  %54 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = icmp eq %"class.blink::LayoutObject"* %54, %44
  br i1 %55, label %56, label %114

56:                                               ; preds = %52, %39
  %57 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %58 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %57, align 8
  %59 = icmp eq %"struct.blink::FragmentData::RareData"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %61, align 8
  br label %63

63:                                               ; preds = %56, %60
  %64 = phi %"class.blink::PaintLayer"* [ %62, %60 ], [ null, %56 ]
  %65 = bitcast %"struct.blink::NGLogicalStaticPosition"* %2 to i64*
  %66 = load i64, i64* %65, align 4
  %67 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %2, i64 0, i32 1
  %68 = bitcast i32* %67 to i64*
  %69 = load i64, i64* %68, align 4
  %70 = lshr i64 %66, 32
  %71 = trunc i64 %70 to i32
  %72 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 0
  %73 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %73, i64 0, i32 49, i32 0
  %75 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %74, align 8
  %76 = icmp eq %"class.blink::NGBlockBreakToken"* %75, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %63
  %78 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %75, i64 0, i32 1, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %75, i64 0, i32 2, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp slt i32 %81, 0
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %79, i32 %81) #12
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 %83, i32 %86, !prof !4
  %88 = icmp slt i32 %87, 0
  %89 = select i1 %88, i32 -2147483648, i32 2147483647
  %90 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %71, i32 %87) #12
  %91 = extractvalue { i32, i1 } %90, 1
  %92 = extractvalue { i32, i1 } %90, 0
  %93 = select i1 %91, i32 %89, i32 %92, !prof !4
  br label %94

94:                                               ; preds = %63, %77
  %95 = phi i32 [ %71, %63 ], [ %93, %77 ]
  %96 = trunc i64 %66 to i32
  %97 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %64, i64 0, i32 10, i32 0
  store i32 %96, i32* %97, align 8
  %98 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %64, i64 0, i32 11, i32 0
  store i32 %95, i32* %98, align 4
  %99 = trunc i64 %69 to i32
  %100 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %64, i64 0, i32 1
  %101 = bitcast [6 x i8]* %100 to i48*
  %102 = load i48, i48* %101, align 1
  %103 = and i32 %99, 3
  %104 = zext i32 %103 to i48
  %105 = shl nuw nsw i48 %104, 36
  %106 = and i48 %102, -1030792151041
  %107 = lshr i64 %69, 32
  %108 = trunc i64 %107 to i32
  %109 = and i32 %108, 3
  %110 = zext i32 %109 to i48
  %111 = shl nuw nsw i48 %110, 38
  %112 = or i48 %111, %105
  %113 = or i48 %112, %106
  store i48 %113, i48* %101, align 1
  br label %114

114:                                              ; preds = %94, %52, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21NGOutOfFlowLayoutPart29IsContainingBlockForCandidateERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"class.blink::NGOutOfFlowLayoutPart"* nocapture readonly, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* nocapture readonly dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 0
  %4 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %3, align 8
  %5 = tail call i32 @_ZNK5blink20NGBoxFragmentBuilder7BoxTypeEv(%"class.blink::NGBoxFragmentBuilder"* %4) #12
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %46, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1 to %"class.blink::LayoutObject"**
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = lshr i160 %14, 80
  %16 = trunc i160 %15 to i32
  %17 = and i32 %16, 7
  %18 = icmp eq i32 %17, 4
  %19 = and i160 %14, 128849018880
  %20 = icmp eq i160 %19, 42949672960
  %21 = and i1 %20, %18
  %22 = select i1 %21, i32 3, i32 %17
  %23 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 2
  %24 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutInline"* %24, null
  br i1 %25, label %34, label %26

26:                                               ; preds = %7
  %27 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGFragmentBuilder"**
  %28 = load %"class.blink::NGFragmentBuilder"*, %"class.blink::NGFragmentBuilder"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::NGFragmentBuilder", %"class.blink::NGFragmentBuilder"* %28, i64 0, i32 5
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %29, align 8
  %31 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %9, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #12
  %32 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = icmp eq %"class.blink::LayoutObject"* %30, %32
  br label %46

34:                                               ; preds = %7
  %35 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 10
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq i32 %22, 0
  %39 = and i1 %38, %37
  br i1 %39, label %46, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 11
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = icmp ne i8 %42, 0
  %44 = icmp eq i32 %22, 1
  %45 = and i1 %44, %43
  br label %46

46:                                               ; preds = %26, %40, %34, %2
  %47 = phi i1 [ false, %2 ], [ %33, %26 ], [ true, %34 ], [ %45, %40 ]
  ret i1 %47
}

declare void @_ZN5blink20NGBoxFragmentBuilder39AdjustOffsetsForFragmentainerDescendantERNS_32NGLogicalOutOfFlowPositionedNodeEb(%"class.blink::NGBoxFragmentBuilder"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112), i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink26NGContainerFragmentBuilder35AddOutOfFlowFragmentainerDescendantERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"class.blink::NGContainerFragmentBuilder"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112)) local_unnamed_addr #2

declare void @_ZNK5blink11NGBlockNode33InsertIntoLegacyPositionedObjectsEv(%"class.blink::NGBlockNode"*) local_unnamed_addr #2

declare void @_ZN5blink20NGBoxFragmentBuilder8AddChildERKNS_18NGPhysicalFragmentERKNS_13LogicalOffsetEPKNS_12LayoutInlineEPKNS_13NGMarginStrutEbN4absl8optionalIS4_EENSE_INS_10LayoutUnitEEE(%"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGPhysicalFragment"* dereferenceable(48), %"struct.blink::LogicalOffset"* dereferenceable(8), %"class.blink::LayoutInline"*, %"struct.blink::NGMarginStrut"*, i1 zeroext, %"class.absl::optional.2262"* byval(%"class.absl::optional.2262") align 8, i64) local_unnamed_addr #2

declare void @_ZN5blink26NGContainerFragmentBuilder28SwapMulticolsWithPendingOOFsEPN3WTF7HashMapIPNS_9LayoutBoxENS_25NGMulticolWithPendingOOFsINS_13LogicalOffsetEEENS1_7PtrHashIS3_EENS1_10HashTraitsIS4_EENSA_IS7_EENS1_18PartitionAllocatorEEE(%"class.blink::NGContainerFragmentBuilder"*, %"class.WTF::HashMap.1964"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGOutOfFlowLayoutPart20LayoutOOFsInMulticolERKNS_11NGBlockNodeEPKNS_25NGMulticolWithPendingOOFsINS_13LogicalOffsetEEE(%"class.blink::NGOutOfFlowLayoutPart"* nocapture readonly, %"class.blink::NGBlockNode"* dereferenceable(16), %"struct.blink::NGMulticolWithPendingOOFs"*) local_unnamed_addr #0 align 2 {
  %4 = alloca [19 x i8], align 1
  %5 = alloca %"class.WTF::Vector.1954", align 8
  %6 = alloca %"class.WTF::Vector.2207", align 8
  %7 = alloca %"class.blink::NGConstraintSpace", align 8
  %8 = alloca %"struct.blink::NGFragmentGeometry", align 4
  %9 = alloca %"class.blink::NGBoxFragmentBuilder", align 8
  %10 = alloca %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator", align 8
  %11 = alloca %"class.blink::WritingModeConverter", align 4
  %12 = alloca %"class.base::CheckedContiguousIterator", align 8
  %13 = alloca %"class.base::CheckedContiguousIterator", align 8
  %14 = alloca i64, align 8
  %15 = bitcast i64* %14 to %"struct.blink::LogicalOffset"*
  %16 = alloca i64, align 8
  %17 = bitcast i64* %16 to %"struct.blink::PhysicalOffset"*
  %18 = alloca i64, align 8
  %19 = bitcast i64* %18 to %"struct.blink::PhysicalSize"*
  %20 = alloca %"class.absl::optional.2262", align 8
  %21 = alloca %"class.base::CheckedContiguousIterator.2274", align 8
  %22 = alloca %"class.base::CheckedContiguousIterator.2274", align 8
  %23 = alloca i64, align 8
  %24 = bitcast i64* %23 to %"struct.blink::PhysicalSize"*
  %25 = alloca i64, align 8
  %26 = bitcast i64* %25 to %"struct.blink::PhysicalSize"*
  %27 = alloca i64, align 8
  %28 = bitcast i64* %27 to %"struct.blink::PhysicalSize"*
  %29 = alloca i64, align 8
  %30 = bitcast i64* %29 to %"struct.blink::PhysicalSize"*
  %31 = alloca %"class.blink::WritingModeConverter", align 4
  %32 = alloca { i64, i64 }, align 8
  %33 = bitcast { i64, i64 }* %32 to %"struct.blink::NGPhysicalStaticPosition"*
  %34 = alloca %"struct.blink::NGLogicalOutOfFlowPositionedNode", align 8
  %35 = alloca [19 x i8], align 1
  %36 = alloca %"class.blink::NGOutOfFlowLayoutPart", align 8
  %37 = bitcast %"class.WTF::Vector.1954"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #12
  %38 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %5, i64 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %5, i64 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 16, i1 false) #12
  %41 = bitcast %"class.WTF::Vector.2207"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #12
  %42 = getelementptr inbounds %"class.WTF::Vector.2207", %"class.WTF::Vector.2207"* %6, i64 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.WTF::Vector.2207", %"class.WTF::Vector.2207"* %6, i64 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::Vector.2207", %"class.WTF::Vector.2207"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 16, i1 false) #12
  %45 = bitcast %"struct.blink::NGMulticolWithPendingOOFs"* %2 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = lshr i64 %46, 32
  %48 = trunc i64 %47 to i32
  %49 = bitcast %"class.blink::NGConstraintSpace"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #12
  %50 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %7, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %7, i64 0, i32 3, i32 0
  %52 = bitcast %"class.blink::NGConstraintSpace"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 32, i1 false)
  call void @_ZN5blink32CreateConstraintSpaceForMulticolERKNS_11NGBlockNodeE(%"class.blink::NGConstraintSpace"* nonnull sret %7, %"class.blink::NGBlockNode"* dereferenceable(16) %1) #12
  %53 = bitcast %"struct.blink::NGFragmentGeometry"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %53) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %53, i8 -86, i64 56, i1 false)
  call void @_ZN5blink32CalculateInitialFragmentGeometryERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeEb(%"struct.blink::NGFragmentGeometry"* nonnull sret %8, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %7, %"class.blink::NGBlockNode"* dereferenceable(16) %1, i1 zeroext false) #12
  %54 = bitcast %"class.blink::NGBoxFragmentBuilder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 640, i8* nonnull %54) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 640, i1 false)
  call void @_ZN5blink33CreateContainerBuilderForMulticolERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_18NGFragmentGeometryE(%"class.blink::NGBoxFragmentBuilder"* nonnull sret %9, %"class.blink::NGBlockNode"* dereferenceable(16) %1, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %7, %"struct.blink::NGFragmentGeometry"* nonnull dereferenceable(56) %8) #12
  %55 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %1, i64 0, i32 0, i32 0
  %56 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %55, align 8
  %57 = bitcast %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #12
  %58 = getelementptr inbounds %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator", %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* %10, i64 0, i32 0
  %59 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %56, i64 0, i32 8, i32 0, i32 0, i32 0
  %60 = load %class.scoped_refptr.1723*, %class.scoped_refptr.1723** %59, align 8
  store %class.scoped_refptr.1723* %60, %class.scoped_refptr.1723** %58, align 8
  %61 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %56, i64 0, i32 8, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %class.scoped_refptr.1723, %class.scoped_refptr.1723* %60, i64 %63
  %65 = icmp eq i32 %62, 0
  br i1 %65, label %132, label %66

66:                                               ; preds = %3
  %67 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %11, i64 0, i32 0, i32 0
  %68 = bitcast %"class.blink::WritingModeConverter"* %11 to i16*
  %69 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %11, i64 0, i32 1
  %70 = bitcast %"struct.blink::PhysicalSize"* %69 to i64*
  %71 = bitcast %"class.base::CheckedContiguousIterator"* %12 to i8*
  %72 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %12, i64 0, i32 1
  %73 = bitcast %"class.base::CheckedContiguousIterator"* %13 to i8*
  %74 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %13, i64 0, i32 1
  %75 = bitcast i64* %14 to i8*
  %76 = bitcast i64* %14 to i32*
  %77 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %15, i64 0, i32 1, i32 0
  %78 = bitcast i64* %16 to i8*
  %79 = bitcast i64* %18 to i8*
  %80 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %11, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.absl::optional.2262", %"class.absl::optional.2262"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.WTF::Vector.2207"* %6 to i8**
  %83 = bitcast %"class.WTF::Vector.2207"* %6 to i64*
  %84 = bitcast %"class.base::CheckedContiguousIterator.2274"* %21 to i8*
  %85 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2274", %"class.base::CheckedContiguousIterator.2274"* %21, i64 0, i32 1
  %86 = bitcast %"class.base::CheckedContiguousIterator.2274"* %22 to i8*
  %87 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2274", %"class.base::CheckedContiguousIterator.2274"* %22, i64 0, i32 1
  %88 = getelementptr inbounds %"struct.blink::NGMulticolWithPendingOOFs", %"struct.blink::NGMulticolWithPendingOOFs"* %2, i64 0, i32 1, i32 2, i32 0
  %89 = bitcast i64* %23 to i8*
  %90 = bitcast i64* %25 to i8*
  %91 = bitcast i64* %27 to i8*
  %92 = bitcast i64* %29 to i8*
  %93 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %31, i64 0, i32 0, i32 0
  %94 = bitcast %"class.blink::WritingModeConverter"* %31 to i16*
  %95 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %31, i64 0, i32 1
  %96 = bitcast %"struct.blink::PhysicalSize"* %95 to i64*
  %97 = bitcast { i64, i64 }* %32 to i8*
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i64 0, i32 0
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i64 0, i32 1
  %100 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %34 to i8*
  %101 = getelementptr inbounds [19 x i8], [19 x i8]* %4, i64 0, i64 0
  %102 = getelementptr inbounds [19 x i8], [19 x i8]* %35, i64 0, i64 0
  %103 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %34 to i64*
  %104 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %34, i64 0, i32 1
  %105 = bitcast %"struct.blink::NGLogicalStaticPosition"* %104 to i64*
  %106 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %34, i64 0, i32 1, i32 1
  %107 = bitcast i32* %106 to i64*
  %108 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %34, i64 0, i32 2
  %109 = bitcast %"class.blink::LayoutInline"** %108 to i64*
  %110 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %34, i64 0, i32 3
  %111 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %34, i64 0, i32 5, i32 0
  %112 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %34, i64 0, i32 6
  %113 = bitcast %"struct.blink::NGContainingBlock"* %112 to i64*
  %114 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %34, i64 0, i32 6, i32 1
  %115 = bitcast %"struct.blink::LogicalOffset"* %114 to i64*
  %116 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %34, i64 0, i32 6, i32 2, i32 0
  %117 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %34, i64 0, i32 7
  %118 = bitcast %"struct.blink::NGContainingBlock"* %117 to i64*
  %119 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %34, i64 0, i32 7, i32 1
  %120 = bitcast %"struct.blink::LogicalOffset"* %119 to i64*
  %121 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %34, i64 0, i32 7, i32 2, i32 0
  %122 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %34, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %123 = getelementptr inbounds i8, i8* %100, i64 89
  %124 = bitcast %"struct.blink::NGContainingBlock"* %112 to i8*
  %125 = bitcast %"struct.blink::NGContainingBlock"* %117 to i8*
  %126 = bitcast %"class.base::CheckedContiguousIterator"* %12 to i8*
  %127 = bitcast %"class.base::CheckedContiguousIterator"* %13 to i8*
  %128 = bitcast %"class.base::CheckedContiguousIterator.2274"* %21 to i8*
  %129 = bitcast %"class.base::CheckedContiguousIterator.2274"* %22 to i8*
  %130 = bitcast %"class.blink::WritingModeConverter"* %11 to i32*
  %131 = bitcast %"class.blink::WritingModeConverter"* %31 to i32*
  br label %172

132:                                              ; preds = %502, %3
  %133 = phi i32 [ %48, %3 ], [ %503, %502 ]
  %134 = phi i32 [ -64, %3 ], [ %332, %502 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #12
  %135 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %135) #12
  call void @_ZN5blink21NGOutOfFlowLayoutPartC2ERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceEPNS_20NGBoxFragmentBuilderE(%"class.blink::NGOutOfFlowLayoutPart"* nonnull %36, %"class.blink::NGBlockNode"* dereferenceable(16) %1, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %7, %"class.blink::NGBoxFragmentBuilder"* nonnull %9)
  %136 = getelementptr inbounds %"struct.blink::NGMulticolWithPendingOOFs", %"struct.blink::NGMulticolWithPendingOOFs"* %2, i64 0, i32 1, i32 2, i32 0
  %137 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %136, align 8
  %138 = icmp ne %"class.blink::NGPhysicalFragment"* %137, null
  call void @_ZN5blink21NGOutOfFlowLayoutPart30LayoutFragmentainerDescendantsEPN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEENS_10LayoutUnitEbPNS2_INS0_17MulticolChildInfoELj0ES4_EE(%"class.blink::NGOutOfFlowLayoutPart"* nonnull %36, %"class.WTF::Vector.1954"* nonnull %5, i32 %134, i1 zeroext %138, %"class.WTF::Vector.2207"* nonnull %6)
  %139 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %36, i64 0, i32 3, i32 0, i32 0
  %140 = load %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"** %139, align 8
  %141 = icmp eq %"struct.WTF::KeyValuePair.2206"* %140, null
  br i1 %141, label %144, label %142, !prof !3

142:                                              ; preds = %132
  %143 = bitcast %"struct.WTF::KeyValuePair.2206"* %140 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %143) #12
  store %"struct.WTF::KeyValuePair.2206"* null, %"struct.WTF::KeyValuePair.2206"** %139, align 8
  br label %144

144:                                              ; preds = %132, %142
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %135) #12
  %145 = bitcast %"class.blink::NGBoxFragmentBuilder"* %9 to %"class.blink::NGContainerFragmentBuilder"*
  %146 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGContainerFragmentBuilder"**
  %147 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %146, align 8
  %148 = zext i32 %133 to i64
  %149 = shl nuw i64 %148, 32
  %150 = and i64 %46, 4294967295
  %151 = or i64 %149, %150
  call void @_ZN5blink26NGContainerFragmentBuilder27TransferOutOfFlowCandidatesEPS0_NS_13LogicalOffsetEPKNS_25NGMulticolWithPendingOOFsIS2_EE(%"class.blink::NGContainerFragmentBuilder"* nonnull %145, %"class.blink::NGContainerFragmentBuilder"* %147, i64 %151, %"struct.blink::NGMulticolWithPendingOOFs"* %2) #12
  call void @_ZN5blink21NGOutOfFlowLayoutPart30HandleMulticolsWithPendingOOFsEPNS_20NGBoxFragmentBuilderE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"class.blink::NGBoxFragmentBuilder"* nonnull %9)
  call void @_ZN5blink20NGBoxFragmentBuilderD2Ev(%"class.blink::NGBoxFragmentBuilder"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 640, i8* nonnull %54) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %53) #12
  %152 = load i32, i32* %51, align 8
  %153 = and i32 %152, 1
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %160, label %155

155:                                              ; preds = %144
  %156 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %50, align 8
  %157 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %155
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %156) #12
  %159 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %156 to i8*
  call void @free(i8* %159) #12
  br label %160

160:                                              ; preds = %144, %155, %158
  %161 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %7, i64 0, i32 2
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %161) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #12
  %162 = load %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"*, %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"** %42, align 8
  %163 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* %162, null
  %164 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* %162 to i8*
  br i1 %163, label %170, label %165, !prof !3

165:                                              ; preds = %160
  %166 = load i32, i32* %44, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %169, label %168, !prof !4

168:                                              ; preds = %165
  store i32 0, i32* %44, align 4
  br label %169

169:                                              ; preds = %168, %165
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %164) #12
  store %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* null, %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"** %42, align 8
  br label %170

170:                                              ; preds = %160, %169
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #12
  %171 = bitcast %"class.WTF::Vector.1954"* %5 to %"class.WTF::ConditionalDestructor.1962"*
  call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1962"* nonnull %171) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #12
  ret void

172:                                              ; preds = %66, %502
  %173 = phi %"class.blink::NGBlockBreakToken"* [ null, %66 ], [ %343, %502 ]
  %174 = phi %"class.blink::NGBlockBreakToken"* [ null, %66 ], [ %346, %502 ]
  %175 = phi i32 [ -64, %66 ], [ %332, %502 ]
  %176 = phi i32 [ %48, %66 ], [ %503, %502 ]
  %177 = call dereferenceable(72) %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox22NGPhysicalFragmentList8IteratordeEv(%"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* nonnull %10) #12
  %178 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %177, i64 0, i32 0, i32 1
  %179 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %178, align 8
  %180 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %177, i64 0, i32 0, i32 3
  %181 = bitcast i24* %180 to i32*
  %182 = load i32, i32* %181, align 8
  %183 = lshr i32 %182, 10
  %184 = and i32 %183, 3
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %172
  %187 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %179, i64 0, i32 5, i32 0
  %188 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %187, align 8
  br label %191

189:                                              ; preds = %172
  %190 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %179, i32 %184) #12
  br label %191

191:                                              ; preds = %186, %189
  %192 = phi %"class.blink::ComputedStyle"* [ %188, %186 ], [ %190, %189 ]
  %193 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %192, i64 0, i32 0, i32 9
  %194 = bitcast [20 x i8]* %193 to i160*
  %195 = load i160, i160* %194, align 8
  %196 = lshr i160 %195, 102
  %197 = trunc i160 %196 to i16
  %198 = and i16 %197, 3
  %199 = lshr i160 %195, 107
  %200 = trunc i160 %199 to i16
  %201 = and i16 %200, 256
  %202 = or i16 %201, %198
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %67) #12
  store i32 -1431655766, i32* %130, align 4
  %203 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %177, i64 0, i32 0, i32 2
  %204 = bitcast %"struct.blink::PhysicalSize"* %203 to i64*
  %205 = load i64, i64* %204, align 8
  store i16 %202, i16* %68, align 4
  store i64 %205, i64* %70, align 4
  %206 = icmp eq i32 %175, -64
  %207 = trunc i64 %205 to i32
  br i1 %206, label %208, label %331

208:                                              ; preds = %191
  %209 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %177, i64 0, i32 1
  %210 = bitcast i24* %209 to i32*
  %211 = load i32, i32* %210, align 8
  %212 = and i32 %211, 1024
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %244, label %214

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %177, i64 0, i32 2
  %216 = load i32, i32* %215, align 4
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %177, i64 0, i32 6, i64 %217
  %219 = and i32 %211, 2
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %214
  %222 = bitcast %"struct.blink::NGLink"* %218 to %"struct.blink::PhysicalRect"*
  br label %233

223:                                              ; preds = %214
  %224 = bitcast %"struct.blink::NGLink"* %218 to i8*
  %225 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %218, i64 1
  %226 = bitcast %"struct.blink::NGLink"* %225 to i32*
  %227 = load i32, i32* %226, align 8
  %228 = shl i32 %227, 6
  %229 = or i32 %228, 24
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds i8, i8* %224, i64 %230
  %232 = bitcast i8* %231 to %"struct.blink::PhysicalRect"*
  br label %233

233:                                              ; preds = %223, %221
  %234 = phi %"struct.blink::PhysicalRect"* [ %232, %223 ], [ %222, %221 ]
  %235 = and i32 %211, 64
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %234, i64 1
  %238 = select i1 %236, %"struct.blink::PhysicalRect"* %234, %"struct.blink::PhysicalRect"* %237
  %239 = bitcast %"struct.blink::PhysicalRect"* %238 to i64*
  %240 = load i64, i64* %239, align 4
  %241 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %238, i64 0, i32 1
  %242 = bitcast %"struct.blink::PhysicalSize"* %241 to i64*
  %243 = load i64, i64* %242, align 4
  br label %244

244:                                              ; preds = %208, %233
  %245 = phi i64 [ %240, %233 ], [ 0, %208 ]
  %246 = phi i64 [ %243, %233 ], [ 0, %208 ]
  %247 = icmp eq i16 %198, 0
  %248 = lshr i64 %245, 32
  %249 = lshr i64 %246, 32
  %250 = select i1 %247, i64 %248, i64 %246
  %251 = select i1 %247, i64 %249, i64 %245
  %252 = trunc i64 %251 to i32
  %253 = trunc i64 %250 to i32
  %254 = icmp ne i16 %201, 0
  %255 = select i1 %254, i32 %252, i32 %253
  %256 = select i1 %254, i32 %253, i32 %252
  %257 = and i32 %211, 2048
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %291, label %259

259:                                              ; preds = %244
  %260 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %177, i64 0, i32 2
  %261 = load i32, i32* %260, align 4
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %177, i64 0, i32 6, i64 %262
  %264 = and i32 %211, 2
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %268

266:                                              ; preds = %259
  %267 = bitcast %"struct.blink::NGLink"* %263 to %"struct.blink::PhysicalRect"*
  br label %278

268:                                              ; preds = %259
  %269 = bitcast %"struct.blink::NGLink"* %263 to i8*
  %270 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %263, i64 1
  %271 = bitcast %"struct.blink::NGLink"* %270 to i32*
  %272 = load i32, i32* %271, align 8
  %273 = shl i32 %272, 6
  %274 = or i32 %273, 24
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds i8, i8* %269, i64 %275
  %277 = bitcast i8* %276 to %"struct.blink::PhysicalRect"*
  br label %278

278:                                              ; preds = %268, %266
  %279 = phi %"struct.blink::PhysicalRect"* [ %277, %268 ], [ %267, %266 ]
  %280 = and i32 %211, 64
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %279, i64 1
  %283 = select i1 %281, %"struct.blink::PhysicalRect"* %279, %"struct.blink::PhysicalRect"* %282
  %284 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %283, i64 1
  %285 = select i1 %213, %"struct.blink::PhysicalRect"* %283, %"struct.blink::PhysicalRect"* %284
  %286 = bitcast %"struct.blink::PhysicalRect"* %285 to i64*
  %287 = load i64, i64* %286, align 4
  %288 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %285, i64 0, i32 1
  %289 = bitcast %"struct.blink::PhysicalSize"* %288 to i64*
  %290 = load i64, i64* %289, align 4
  br label %291

291:                                              ; preds = %244, %278
  %292 = phi i64 [ %287, %278 ], [ 0, %244 ]
  %293 = phi i64 [ %290, %278 ], [ 0, %244 ]
  %294 = lshr i64 %292, 32
  %295 = lshr i64 %293, 32
  %296 = select i1 %247, i64 %294, i64 %293
  %297 = select i1 %247, i64 %295, i64 %292
  %298 = trunc i64 %297 to i32
  %299 = trunc i64 %296 to i32
  %300 = select i1 %254, i32 %298, i32 %299
  %301 = select i1 %254, i32 %299, i32 %298
  %302 = icmp slt i32 %301, 0
  %303 = select i1 %302, i32 -2147483648, i32 2147483647
  %304 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %256, i32 %301) #12
  %305 = extractvalue { i32, i1 } %304, 1
  %306 = extractvalue { i32, i1 } %304, 0
  %307 = select i1 %305, i32 %303, i32 %306, !prof !4
  %308 = icmp slt i32 %300, 0
  %309 = select i1 %308, i32 -2147483648, i32 2147483647
  %310 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %255, i32 %300) #12
  %311 = extractvalue { i32, i1 } %310, 1
  %312 = extractvalue { i32, i1 } %310, 0
  %313 = select i1 %311, i32 %309, i32 %312, !prof !4
  %314 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %177, i64 0, i32 0, i32 2, i32 1, i32 0
  %315 = load i32, i32* %314, align 4
  %316 = icmp eq i16 %198, 0
  %317 = select i1 %316, i32 %207, i32 %315
  %318 = icmp slt i32 %313, 0
  %319 = select i1 %318, i32 -2147483648, i32 2147483647
  %320 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %307, i32 %313) #12
  %321 = extractvalue { i32, i1 } %320, 1
  %322 = extractvalue { i32, i1 } %320, 0
  %323 = select i1 %321, i32 %319, i32 %322, !prof !4
  %324 = icmp sgt i32 %323, -1
  %325 = select i1 %324, i32 -2147483648, i32 2147483647
  %326 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %317, i32 %323) #12
  %327 = extractvalue { i32, i1 } %326, 1
  %328 = extractvalue { i32, i1 } %326, 0
  %329 = select i1 %327, i32 %325, i32 %328, !prof !4
  %330 = call i32 @_ZN5blink23ColumnInlineProgressionENS_10LayoutUnitERKNS_13ComputedStyleE(i32 %329, %"class.blink::ComputedStyle"* dereferenceable(104) %192) #12
  br label %331

331:                                              ; preds = %291, %191
  %332 = phi i32 [ %330, %291 ], [ %175, %191 ]
  %333 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %177, i64 0, i32 6, i64 0
  %334 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %177, i64 0, i32 2
  %335 = load i32, i32* %334, align 4
  %336 = zext i32 %335 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #12
  %337 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %177, i64 0, i32 6, i64 %336
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIN5blink6NGLinkEEC2EPKS2_PS2_S5_(%"class.base::CheckedContiguousIterator"* nonnull %12, %"struct.blink::NGLink"* %333, %"struct.blink::NGLink"* %333, %"struct.blink::NGLink"* %337) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIN5blink6NGLinkEEC2EPKS2_PS2_S5_(%"class.base::CheckedContiguousIterator"* nonnull %13, %"struct.blink::NGLink"* %333, %"struct.blink::NGLink"* %337, %"struct.blink::NGLink"* %337) #12
  call void @_ZNK4base25CheckedContiguousIteratorIN5blink6NGLinkEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %12, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %13) #12
  %338 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %72, align 8
  %339 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %74, align 8
  %340 = icmp eq %"struct.blink::NGLink"* %338, %339
  br i1 %340, label %341, label %348

341:                                              ; preds = %419, %331
  %342 = phi i32 [ 0, %331 ], [ %379, %419 ]
  %343 = phi %"class.blink::NGBlockBreakToken"* [ %173, %331 ], [ %380, %419 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #12
  %344 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %177, i64 0, i32 0, i32 4, i32 0
  %345 = bitcast %"class.blink::NGBreakToken"** %344 to %"class.blink::NGBlockBreakToken"**
  %346 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %345, align 8
  %347 = icmp eq %"class.blink::NGBlockBreakToken"* %346, null
  br i1 %347, label %445, label %431

348:                                              ; preds = %331, %419
  %349 = phi %"class.blink::NGBlockBreakToken"* [ %380, %419 ], [ %173, %331 ]
  %350 = phi i32 [ %379, %419 ], [ 0, %331 ]
  %351 = call dereferenceable(16) %"struct.blink::NGLink"* @_ZNK4base25CheckedContiguousIteratorIN5blink6NGLinkEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %12)
  %352 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %351, i64 0, i32 0
  %353 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %352, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #12
  store i32 -1431655766, i32* %76, align 8
  store i32 -1431655766, i32* %77, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #12
  %354 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %351, i64 0, i32 1
  %355 = bitcast %"struct.blink::PhysicalOffset"* %354 to i64*
  %356 = load i64, i64* %355, align 8
  store i64 %356, i64* %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #12
  %357 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %353, i64 0, i32 2
  %358 = bitcast %"struct.blink::PhysicalSize"* %357 to i64*
  %359 = load i64, i64* %358, align 8
  store i64 %359, i64* %18, align 8
  %360 = load i8, i8* %67, align 4
  %361 = load i8, i8* %80, align 1
  %362 = or i8 %360, %361
  %363 = icmp eq i8 %362, 0
  br i1 %363, label %366, label %364

364:                                              ; preds = %348
  %365 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %11, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %17, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %19) #12
  br label %366

366:                                              ; preds = %348, %364
  %367 = phi i64 [ %365, %364 ], [ %356, %348 ]
  store i64 %367, i64* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #12
  %368 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %353, i64 0, i32 3
  %369 = bitcast i24* %368 to i32*
  %370 = load i32, i32* %369, align 8
  %371 = and i32 %370, 960
  %372 = icmp eq i32 %371, 256
  br i1 %372, label %373, label %378

373:                                              ; preds = %366
  %374 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %353, i64 0, i32 4, i32 0
  %375 = bitcast %"class.blink::NGBreakToken"** %374 to %"class.blink::NGBlockBreakToken"**
  %376 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %375, align 8
  %377 = load i32, i32* %44, align 4
  br label %378

378:                                              ; preds = %373, %366
  %379 = phi i32 [ %377, %373 ], [ %350, %366 ]
  %380 = phi %"class.blink::NGBlockBreakToken"* [ %376, %373 ], [ %349, %366 ]
  store i8 0, i8* %81, align 8
  call void @_ZN5blink20NGBoxFragmentBuilder8AddChildERKNS_18NGPhysicalFragmentERKNS_13LogicalOffsetEPKNS_12LayoutInlineEPKNS_13NGMarginStrutEbN4absl8optionalIS4_EENSE_INS_10LayoutUnitEEE(%"class.blink::NGBoxFragmentBuilder"* nonnull %9, %"class.blink::NGPhysicalFragment"* dereferenceable(48) %353, %"struct.blink::LogicalOffset"* nonnull dereferenceable(8) %15, %"class.blink::LayoutInline"* null, %"struct.blink::NGMarginStrut"* null, i1 zeroext false, %"class.absl::optional.2262"* nonnull byval(%"class.absl::optional.2262") align 8 %20, i64 0) #12
  %381 = load i32, i32* %44, align 4
  %382 = load i32, i32* %43, align 8
  %383 = icmp eq i32 %381, %382
  br i1 %383, label %384, label %419, !prof !4

384:                                              ; preds = %378
  %385 = add i32 %381, 1
  %386 = lshr i32 %381, 2
  %387 = add i32 %385, %386
  %388 = icmp ugt i32 %387, 4
  %389 = select i1 %388, i32 %387, i32 4
  %390 = icmp ugt i32 %389, %385
  %391 = select i1 %390, i32 %389, i32 %385
  %392 = icmp ult i32 %381, %391
  br i1 %392, label %393, label %419, !prof !3

393:                                              ; preds = %384
  %394 = load %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"*, %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"** %42, align 8
  %395 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* %394, null
  %396 = zext i32 %391 to i64
  %397 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21NGOutOfFlowLayoutPart17MulticolChildInfoEEEmm(i64 %396) #12
  %398 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %397, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21NGOutOfFlowLayoutPart17MulticolChildInfoEEEPKcv, i64 0, i64 0)) #12
  br i1 %395, label %399, label %403

399:                                              ; preds = %393
  %400 = ptrtoint i8* %398 to i64
  store atomic i64 %400, i64* %83 monotonic, align 8
  %401 = lshr i64 %397, 4
  %402 = trunc i64 %401 to i32
  store i32 %402, i32* %43, align 8
  br label %419

403:                                              ; preds = %393
  %404 = lshr i64 %397, 4
  %405 = ptrtoint i8* %398 to i64
  %406 = load %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"*, %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"** %42, align 8
  %407 = icmp ne i8* %398, null
  %408 = icmp ne %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* %406, null
  %409 = and i1 %407, %408
  %410 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* %406 to i8*
  br i1 %409, label %411, label %416, !prof !3

411:                                              ; preds = %403
  %412 = load i32, i32* %44, align 4
  %413 = zext i32 %412 to i64
  %414 = shl nuw nsw i64 %413, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %398, i8* nonnull align 8 %410, i64 %414, i1 false) #12
  %415 = load i8*, i8** %82, align 8
  br label %416

416:                                              ; preds = %411, %403
  %417 = phi i8* [ %415, %411 ], [ %410, %403 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %417) #12
  store atomic i64 %405, i64* %83 monotonic, align 8
  %418 = trunc i64 %404 to i32
  store i32 %418, i32* %43, align 8
  br label %419

419:                                              ; preds = %378, %384, %399, %416
  %420 = load %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"*, %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"** %42, align 8
  %421 = load i32, i32* %44, align 4
  %422 = zext i32 %421 to i64
  %423 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo", %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* %420, i64 %422, i32 0
  store %"struct.blink::NGLink"* %351, %"struct.blink::NGLink"** %423, align 8
  %424 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo", %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* %420, i64 %422, i32 1
  store %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGBlockBreakToken"** %424, align 8
  %425 = load i32, i32* %44, align 4
  %426 = add i32 %425, 1
  store i32 %426, i32* %44, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #12
  %427 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIN5blink6NGLinkEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %12)
  call void @_ZNK4base25CheckedContiguousIteratorIN5blink6NGLinkEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %12, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %13) #12
  %428 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %72, align 8
  %429 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %74, align 8
  %430 = icmp eq %"struct.blink::NGLink"* %428, %429
  br i1 %430, label %341, label %348

431:                                              ; preds = %341
  %432 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %346, i64 0, i32 4
  %433 = load i32, i32* %432, align 8
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %445, label %435

435:                                              ; preds = %431
  %436 = zext i32 %433 to i64
  %437 = add nsw i64 %436, -1
  %438 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %346, i64 0, i32 5, i64 %437
  %439 = bitcast %"class.blink::NGBreakToken"** %438 to %"class.blink::NGBlockBreakToken"**
  %440 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %439, align 8
  %441 = icmp eq %"class.blink::NGBlockBreakToken"* %440, %343
  br i1 %441, label %442, label %445

442:                                              ; preds = %435
  %443 = call dereferenceable(16) %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* @_ZN3WTF6VectorIN5blink21NGOutOfFlowLayoutPart17MulticolChildInfoELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2207"* nonnull %6, i32 %342) #12
  %444 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo", %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* %443, i64 0, i32 1
  store %"class.blink::NGBlockBreakToken"* %346, %"class.blink::NGBlockBreakToken"** %444, align 8
  br label %445

445:                                              ; preds = %341, %435, %442, %431
  %446 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %177, i64 0, i32 1
  %447 = bitcast i24* %446 to i32*
  %448 = load i32, i32* %447, align 8
  %449 = and i32 %448, 8192
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %492, label %451

451:                                              ; preds = %445
  %452 = load i32, i32* %334, align 4
  %453 = zext i32 %452 to i64
  %454 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %177, i64 0, i32 6, i64 %453
  %455 = and i32 %448, 2
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %457, label %459

457:                                              ; preds = %451
  %458 = bitcast %"struct.blink::NGLink"* %454 to %"struct.blink::PhysicalRect"*
  br label %469

459:                                              ; preds = %451
  %460 = bitcast %"struct.blink::NGLink"* %454 to i8*
  %461 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %454, i64 1
  %462 = bitcast %"struct.blink::NGLink"* %461 to i32*
  %463 = load i32, i32* %462, align 8
  %464 = shl i32 %463, 6
  %465 = or i32 %464, 24
  %466 = zext i32 %465 to i64
  %467 = getelementptr inbounds i8, i8* %460, i64 %466
  %468 = bitcast i8* %467 to %"struct.blink::PhysicalRect"*
  br label %469

469:                                              ; preds = %459, %457
  %470 = phi %"struct.blink::PhysicalRect"* [ %468, %459 ], [ %458, %457 ]
  %471 = and i32 %448, 64
  %472 = icmp eq i32 %471, 0
  %473 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %470, i64 1
  %474 = select i1 %472, %"struct.blink::PhysicalRect"* %470, %"struct.blink::PhysicalRect"* %473
  %475 = and i32 %448, 1024
  %476 = icmp eq i32 %475, 0
  %477 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %474, i64 1
  %478 = select i1 %476, %"struct.blink::PhysicalRect"* %474, %"struct.blink::PhysicalRect"* %477
  %479 = and i32 %448, 2048
  %480 = icmp eq i32 %479, 0
  %481 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %478, i64 1
  %482 = select i1 %480, %"struct.blink::PhysicalRect"* %478, %"struct.blink::PhysicalRect"* %481
  %483 = and i32 %448, 4096
  %484 = icmp eq i32 %483, 0
  %485 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %482, i64 1
  %486 = select i1 %484, %"struct.blink::PhysicalRect"* %482, %"struct.blink::PhysicalRect"* %485
  %487 = bitcast %"struct.blink::PhysicalRect"* %486 to %"struct.blink::NGPhysicalOOFNodeForFragmentation"**
  %488 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %487, align 8
  %489 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %486, i64 0, i32 1, i32 1, i32 0
  %490 = load i32, i32* %489, align 4
  %491 = zext i32 %490 to i64
  br label %492

492:                                              ; preds = %445, %469
  %493 = phi i64 [ %491, %469 ], [ 0, %445 ]
  %494 = phi %"struct.blink::NGPhysicalOOFNodeForFragmentation"* [ %488, %469 ], [ null, %445 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #12
  %495 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %494, i64 %493
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEC2EPKS2_PS2_S5_(%"class.base::CheckedContiguousIterator.2274"* nonnull %21, %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %494, %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %494, %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %495) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEC2EPKS2_PS2_S5_(%"class.base::CheckedContiguousIterator.2274"* nonnull %22, %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %494, %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %495, %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %495) #12
  call void @_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator.2274"* nonnull %21, %"class.base::CheckedContiguousIterator.2274"* nonnull dereferenceable(24) %22) #12
  %496 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %85, align 8
  %497 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %87, align 8
  %498 = icmp eq %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %496, %497
  br i1 %498, label %502, label %499

499:                                              ; preds = %492
  %500 = icmp ne %"class.blink::NGBlockBreakToken"* %174, null
  %501 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %174, i64 0, i32 1, i32 0
  br label %507

502:                                              ; preds = %726, %492
  %503 = phi i32 [ %176, %492 ], [ %525, %726 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %67) #12
  %504 = load %class.scoped_refptr.1723*, %class.scoped_refptr.1723** %58, align 8
  %505 = getelementptr inbounds %class.scoped_refptr.1723, %class.scoped_refptr.1723* %504, i64 1
  store %class.scoped_refptr.1723* %505, %class.scoped_refptr.1723** %58, align 8
  %506 = icmp eq %class.scoped_refptr.1723* %505, %64
  br i1 %506, label %132, label %172

507:                                              ; preds = %499, %726
  %508 = phi i32 [ %176, %499 ], [ %525, %726 ]
  %509 = call dereferenceable(80) %"struct.blink::NGPhysicalOOFNodeForFragmentation"* @_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEdeEv(%"class.base::CheckedContiguousIterator.2274"* nonnull %21)
  %510 = load i32, i32* %40, align 4
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %512, label %524

512:                                              ; preds = %507
  %513 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %88, align 8
  %514 = icmp ne %"class.blink::NGPhysicalFragment"* %513, null
  %515 = and i1 %500, %514
  br i1 %515, label %516, label %524

516:                                              ; preds = %512
  %517 = load i32, i32* %501, align 4
  %518 = icmp sgt i32 %517, -1
  %519 = select i1 %518, i32 -2147483648, i32 2147483647
  %520 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %508, i32 %517) #12
  %521 = extractvalue { i32, i1 } %520, 1
  %522 = extractvalue { i32, i1 } %520, 0
  %523 = select i1 %521, i32 %519, i32 %522, !prof !4
  br label %524

524:                                              ; preds = %516, %512, %507
  %525 = phi i32 [ %523, %516 ], [ %508, %512 ], [ %508, %507 ]
  %526 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %509, i64 0, i32 1, i32 2, i32 0
  %527 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %526, align 8
  %528 = icmp eq %"class.blink::NGPhysicalFragment"* %527, null
  br i1 %528, label %726, label %529

529:                                              ; preds = %524
  %530 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %509, i64 0, i32 1, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #12
  %531 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %527, i64 0, i32 2
  %532 = bitcast %"struct.blink::PhysicalSize"* %531 to i64*
  %533 = load i64, i64* %532, align 8
  store i64 %533, i64* %23, align 8
  %534 = load i8, i8* %67, align 4
  %535 = load i8, i8* %80, align 1
  %536 = or i8 %534, %535
  %537 = icmp eq i8 %536, 0
  br i1 %537, label %538, label %543

538:                                              ; preds = %529
  %539 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %530, i64 0, i32 0, i32 0
  %540 = load i32, i32* %539, align 4
  %541 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %509, i64 0, i32 1, i32 0, i32 1, i32 0
  %542 = load i32, i32* %541, align 4
  br label %551

543:                                              ; preds = %529
  %544 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %11, %"struct.blink::PhysicalOffset"* dereferenceable(8) %530, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %24) #12
  %545 = trunc i64 %544 to i32
  %546 = lshr i64 %544, 32
  %547 = trunc i64 %546 to i32
  %548 = load i64, i64* %532, align 8
  %549 = load i8, i8* %67, align 4
  %550 = load i8, i8* %80, align 1
  br label %551

551:                                              ; preds = %538, %543
  %552 = phi i8 [ %535, %538 ], [ %550, %543 ]
  %553 = phi i8 [ %534, %538 ], [ %549, %543 ]
  %554 = phi i64 [ %533, %538 ], [ %548, %543 ]
  %555 = phi i32 [ %542, %538 ], [ %547, %543 ]
  %556 = phi i32 [ %540, %538 ], [ %545, %543 ]
  %557 = zext i32 %555 to i64
  %558 = shl nuw i64 %557, 32
  %559 = zext i32 %556 to i64
  %560 = or i64 %558, %559
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #12
  %561 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %509, i64 0, i32 1, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #12
  store i64 %554, i64* %25, align 8
  %562 = or i8 %553, %552
  %563 = icmp eq i8 %562, 0
  br i1 %563, label %564, label %569

564:                                              ; preds = %551
  %565 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %561, i64 0, i32 0, i32 0
  %566 = load i32, i32* %565, align 4
  %567 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %509, i64 0, i32 1, i32 1, i32 1, i32 0
  %568 = load i32, i32* %567, align 4
  br label %574

569:                                              ; preds = %551
  %570 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %11, %"struct.blink::PhysicalOffset"* dereferenceable(8) %561, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %26) #12
  %571 = trunc i64 %570 to i32
  %572 = lshr i64 %570, 32
  %573 = trunc i64 %572 to i32
  br label %574

574:                                              ; preds = %564, %569
  %575 = phi i32 [ %568, %564 ], [ %573, %569 ]
  %576 = phi i32 [ %566, %564 ], [ %571, %569 ]
  %577 = zext i32 %575 to i64
  %578 = shl nuw i64 %577, 32
  %579 = zext i32 %576 to i64
  %580 = or i64 %578, %579
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #12
  %581 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %509, i64 0, i32 2, i32 2, i32 0
  %582 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %581, align 8
  %583 = icmp eq %"class.blink::NGPhysicalFragment"* %582, null
  br i1 %583, label %628, label %584

584:                                              ; preds = %574
  %585 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %509, i64 0, i32 2, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #12
  %586 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %582, i64 0, i32 2
  %587 = bitcast %"struct.blink::PhysicalSize"* %586 to i64*
  %588 = load i64, i64* %587, align 8
  store i64 %588, i64* %27, align 8
  %589 = load i8, i8* %67, align 4
  %590 = load i8, i8* %80, align 1
  %591 = or i8 %589, %590
  %592 = icmp eq i8 %591, 0
  br i1 %592, label %593, label %598

593:                                              ; preds = %584
  %594 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %585, i64 0, i32 0, i32 0
  %595 = load i32, i32* %594, align 4
  %596 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %509, i64 0, i32 2, i32 0, i32 1, i32 0
  %597 = load i32, i32* %596, align 4
  br label %606

598:                                              ; preds = %584
  %599 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %11, %"struct.blink::PhysicalOffset"* dereferenceable(8) %585, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %28) #12
  %600 = trunc i64 %599 to i32
  %601 = lshr i64 %599, 32
  %602 = trunc i64 %601 to i32
  %603 = load i64, i64* %587, align 8
  %604 = load i8, i8* %67, align 4
  %605 = load i8, i8* %80, align 1
  br label %606

606:                                              ; preds = %593, %598
  %607 = phi i8 [ %590, %593 ], [ %605, %598 ]
  %608 = phi i8 [ %589, %593 ], [ %604, %598 ]
  %609 = phi i64 [ %588, %593 ], [ %603, %598 ]
  %610 = phi i32 [ %597, %593 ], [ %602, %598 ]
  %611 = phi i32 [ %595, %593 ], [ %600, %598 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #12
  %612 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %509, i64 0, i32 2, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #12
  store i64 %609, i64* %29, align 8
  %613 = or i8 %608, %607
  %614 = icmp eq i8 %613, 0
  br i1 %614, label %615, label %620

615:                                              ; preds = %606
  %616 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %612, i64 0, i32 0, i32 0
  %617 = load i32, i32* %616, align 4
  %618 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %509, i64 0, i32 2, i32 1, i32 1, i32 0
  %619 = load i32, i32* %618, align 4
  br label %625

620:                                              ; preds = %606
  %621 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %11, %"struct.blink::PhysicalOffset"* dereferenceable(8) %612, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %30) #12
  %622 = trunc i64 %621 to i32
  %623 = lshr i64 %621, 32
  %624 = trunc i64 %623 to i32
  br label %625

625:                                              ; preds = %615, %620
  %626 = phi i32 [ %619, %615 ], [ %624, %620 ]
  %627 = phi i32 [ %617, %615 ], [ %622, %620 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #12
  br label %628

628:                                              ; preds = %574, %625
  %629 = phi i32 [ 0, %574 ], [ %610, %625 ]
  %630 = phi i32 [ 0, %574 ], [ %611, %625 ]
  %631 = phi i32 [ 0, %574 ], [ %626, %625 ]
  %632 = phi i32 [ 0, %574 ], [ %627, %625 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %93) #12
  store i32 -1431655766, i32* %131, align 4
  %633 = load i64, i64* %532, align 8
  store i16 %202, i16* %94, align 4
  store i64 %633, i64* %96, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #12
  %634 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %509, i64 0, i32 0, i32 1
  %635 = bitcast %"struct.blink::PhysicalOffset"* %634 to i64*
  %636 = load i64, i64* %635, align 8
  %637 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %509, i64 0, i32 0, i32 2
  %638 = load i8, i8* %637, align 8
  %639 = and i8 %638, 3
  %640 = lshr i8 %638, 2
  %641 = and i8 %640, 3
  %642 = zext i8 %641 to i64
  %643 = shl nuw nsw i64 %642, 32
  %644 = zext i8 %639 to i64
  %645 = or i64 %643, %644
  store i64 %636, i64* %98, align 8
  store i64 %645, i64* %99, align 8
  %646 = call { i64, i64 } @_ZNK5blink24NGPhysicalStaticPosition16ConvertToLogicalERKNS_20WritingModeConverterE(%"struct.blink::NGPhysicalStaticPosition"* nonnull %33, %"class.blink::WritingModeConverter"* nonnull dereferenceable(12) %31)
  %647 = extractvalue { i64, i64 } %646, 0
  %648 = extractvalue { i64, i64 } %646, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #12
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %100) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 -86, i64 112, i1 false)
  %649 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %509 to i64*
  %650 = load i64, i64* %649, align 8
  %651 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %509, i64 0, i32 0, i32 3
  %652 = bitcast %"class.blink::LayoutInline"** %651 to i64*
  %653 = load i64, i64* %652, align 8
  %654 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %527, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %654) #12
  %655 = zext i32 %629 to i64
  %656 = shl nuw i64 %655, 32
  %657 = zext i32 %630 to i64
  %658 = or i64 %656, %657
  %659 = zext i32 %631 to i64
  %660 = shl nuw i64 %659, 32
  %661 = zext i32 %632 to i64
  %662 = or i64 %660, %661
  br i1 %583, label %665, label %663

663:                                              ; preds = %628
  %664 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %582, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %664) #12
  br label %665

665:                                              ; preds = %628, %663
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %101)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %101, i8* nonnull align 1 %102, i64 19, i1 false)
  store i64 %650, i64* %103, align 8
  store i64 %647, i64* %105, align 8
  store i64 %648, i64* %107, align 8
  store i64 %653, i64* %109, align 8
  store i8 0, i8* %110, align 8
  store i32 0, i32* %111, align 4
  store i64 %560, i64* %113, align 8
  store i64 %580, i64* %115, align 8
  store %"class.blink::NGPhysicalFragment"* %527, %"class.blink::NGPhysicalFragment"** %116, align 8
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %654) #12
  store i64 %658, i64* %118, align 8
  store i64 %662, i64* %120, align 8
  store %"class.blink::NGPhysicalFragment"* %582, %"class.blink::NGPhysicalFragment"** %121, align 8
  br i1 %583, label %666, label %667

666:                                              ; preds = %665
  store i8 0, i8* %122, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %123, i8* nonnull align 1 %101, i64 19, i1 false)
  br label %673

667:                                              ; preds = %665
  %668 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %582, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %668) #12
  store i8 0, i8* %122, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %123, i8* nonnull align 1 %101, i64 19, i1 false)
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %668) #12
  %669 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %582, i64 0, i32 0, i32 0, i32 0, i32 0
  %670 = load i32, i32* %669, align 4
  %671 = icmp eq i32 %670, 0
  br i1 %671, label %672, label %673

672:                                              ; preds = %667
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %582) #12
  br label %673

673:                                              ; preds = %666, %667, %672
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %654) #12
  %674 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %527, i64 0, i32 0, i32 0, i32 0, i32 0
  %675 = load i32, i32* %674, align 4
  %676 = icmp eq i32 %675, 0
  br i1 %676, label %677, label %678

677:                                              ; preds = %673
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %527) #12
  br label %678

678:                                              ; preds = %673, %677
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %101)
  %679 = load i32, i32* %40, align 4
  %680 = load i32, i32* %39, align 8
  %681 = icmp eq i32 %679, %680
  br i1 %681, label %706, label %682, !prof !4

682:                                              ; preds = %678
  %683 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %38, align 8
  %684 = zext i32 %679 to i64
  %685 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %683, i64 %684
  %686 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %685 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %686, i8* nonnull align 8 %100, i64 40, i1 false) #12
  %687 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %683, i64 %684, i32 6
  %688 = bitcast %"struct.blink::NGContainingBlock"* %687 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %688, i8* align 8 %124, i64 16, i1 false) #12
  %689 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %116, align 8
  %690 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %683, i64 %684, i32 6, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %689, %"class.blink::NGPhysicalFragment"** %690, align 8
  %691 = icmp eq %"class.blink::NGPhysicalFragment"* %689, null
  br i1 %691, label %694, label %692

692:                                              ; preds = %682
  %693 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %689, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %693) #12
  br label %694

694:                                              ; preds = %692, %682
  %695 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %683, i64 %684, i32 7
  %696 = bitcast %"struct.blink::NGContainingBlock"* %695 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %696, i8* align 8 %125, i64 16, i1 false) #12
  %697 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %121, align 8
  %698 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %683, i64 %684, i32 7, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %697, %"class.blink::NGPhysicalFragment"** %698, align 8
  %699 = icmp eq %"class.blink::NGPhysicalFragment"* %697, null
  br i1 %699, label %702, label %700

700:                                              ; preds = %694
  %701 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %697, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %701) #12
  br label %702

702:                                              ; preds = %700, %694
  %703 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %683, i64 %684, i32 8, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %703, i8* align 8 %122, i64 20, i1 false) #12
  %704 = load i32, i32* %40, align 4
  %705 = add i32 %704, 1
  store i32 %705, i32* %40, align 4
  br label %707

706:                                              ; preds = %678
  call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1954"* nonnull %5, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* nonnull dereferenceable(112) %34) #12
  br label %707

707:                                              ; preds = %702, %706
  %708 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %121, align 8
  %709 = icmp eq %"class.blink::NGPhysicalFragment"* %708, null
  br i1 %709, label %716, label %710

710:                                              ; preds = %707
  %711 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %708, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %711) #12
  %712 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %708, i64 0, i32 0, i32 0, i32 0, i32 0
  %713 = load i32, i32* %712, align 4
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %715, label %716

715:                                              ; preds = %710
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %708) #12
  br label %716

716:                                              ; preds = %715, %710, %707
  %717 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %116, align 8
  %718 = icmp eq %"class.blink::NGPhysicalFragment"* %717, null
  br i1 %718, label %725, label %719

719:                                              ; preds = %716
  %720 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %717, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %720) #12
  %721 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %717, i64 0, i32 0, i32 0, i32 0, i32 0
  %722 = load i32, i32* %721, align 4
  %723 = icmp eq i32 %722, 0
  br i1 %723, label %724, label %725

724:                                              ; preds = %719
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %717) #12
  br label %725

725:                                              ; preds = %716, %719, %724
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %100) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %93) #12
  br label %726

726:                                              ; preds = %524, %725
  %727 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2274"* @_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEppEv(%"class.base::CheckedContiguousIterator.2274"* nonnull %21)
  call void @_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator.2274"* nonnull %21, %"class.base::CheckedContiguousIterator.2274"* nonnull dereferenceable(24) %22) #12
  %728 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %85, align 8
  %729 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %87, align 8
  %730 = icmp eq %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %728, %729
  br i1 %730, label %502, label %507
}

declare void @_ZN5blink32CreateConstraintSpaceForMulticolERKNS_11NGBlockNodeE(%"class.blink::NGConstraintSpace"* sret, %"class.blink::NGBlockNode"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink32CalculateInitialFragmentGeometryERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeEb(%"struct.blink::NGFragmentGeometry"* sret, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockNode"* dereferenceable(16), i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink33CreateContainerBuilderForMulticolERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_18NGFragmentGeometryE(%"class.blink::NGBoxFragmentBuilder"* sret, %"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* dereferenceable(32), %"struct.blink::NGFragmentGeometry"* dereferenceable(56)) local_unnamed_addr #2

declare dereferenceable(72) %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox22NGPhysicalFragmentList8IteratordeEv(%"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::NGLink"* @_ZNK4base25CheckedContiguousIteratorIN5blink6NGLinkEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  %11 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %8, align 8
  %12 = icmp eq %"struct.blink::NGLink"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGLink"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #12
  %17 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %16, i8* %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %26 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  ret %"struct.blink::NGLink"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIN5blink6NGLinkEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  %11 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %8, align 8
  %12 = icmp eq %"struct.blink::NGLink"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGLink"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #12
  %17 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %16, i8* %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %26 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  %27 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %26, i64 1
  store %"struct.blink::NGLink"* %27, %"struct.blink::NGLink"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(80) %"struct.blink::NGPhysicalOOFNodeForFragmentation"* @_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEdeEv(%"class.base::CheckedContiguousIterator.2274"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2274", %"class.base::CheckedContiguousIterator.2274"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2274", %"class.base::CheckedContiguousIterator.2274"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7, align 8
  %11 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8, align 8
  %12 = icmp eq %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #12
  %17 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %16, i8* %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %26 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7, align 8
  ret %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink24NGPhysicalStaticPosition16ConvertToLogicalERKNS_20WritingModeConverterE(%"struct.blink::NGPhysicalStaticPosition"*, %"class.blink::WritingModeConverter"* dereferenceable(12)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"struct.blink::PhysicalSize"*
  %5 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 0
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %23

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %16 to i64
  %22 = or i64 %20, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  br label %26

23:                                               ; preds = %2, %10
  %24 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %5, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %4) #12
  %25 = load i8, i8* %7, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  switch i8 %25, label %83 [
    i8 0, label %26
    i8 1, label %44
    i8 3, label %44
    i8 2, label %57
    i8 4, label %70
  ]

26:                                               ; preds = %14, %23
  %27 = phi i64 [ %22, %14 ], [ %24, %23 ]
  %28 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp ne i32 %29, 0
  %31 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 0
  %34 = xor i1 %30, %33
  %35 = select i1 %34, i64 0, i64 2
  %36 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i64 0, i64 8589934592
  %40 = icmp eq i32 %29, 1
  %41 = select i1 %40, i64 1, i64 %35
  %42 = icmp eq i32 %37, 1
  %43 = select i1 %42, i64 4294967296, i64 %39
  br label %102

44:                                               ; preds = %23, %23
  %45 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp ne i32 %46, 0
  %48 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  %51 = xor i1 %47, %50
  %52 = select i1 %51, i64 0, i64 2
  %53 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 2
  %56 = select i1 %55, i64 0, i64 8589934592
  br label %86

57:                                               ; preds = %23
  %58 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp ne i32 %59, 0
  %61 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 1
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 0
  %64 = xor i1 %60, %63
  %65 = select i1 %64, i64 0, i64 2
  %66 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  %69 = select i1 %68, i64 0, i64 8589934592
  br label %93

70:                                               ; preds = %23
  %71 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp ne i32 %72, 2
  %74 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 0
  %77 = xor i1 %73, %76
  %78 = select i1 %77, i64 0, i64 2
  %79 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  %82 = select i1 %81, i64 0, i64 8589934592
  br label %93

83:                                               ; preds = %23
  %84 = add i8 %25, -1
  %85 = icmp ult i8 %84, 4
  br i1 %85, label %86, label %102

86:                                               ; preds = %44, %83
  %87 = phi i64 [ %56, %44 ], [ -6148914694099828736, %83 ]
  %88 = phi i64 [ %52, %44 ], [ 2863311530, %83 ]
  %89 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  br label %93

93:                                               ; preds = %86, %57, %70
  %94 = phi i32 [ %92, %86 ], [ %67, %57 ], [ %80, %70 ]
  %95 = phi i32 [ %90, %86 ], [ %59, %57 ], [ %72, %70 ]
  %96 = phi i64 [ %87, %86 ], [ %69, %57 ], [ %82, %70 ]
  %97 = phi i64 [ %88, %86 ], [ %65, %57 ], [ %78, %70 ]
  %98 = icmp eq i32 %95, 1
  %99 = select i1 %98, i64 1, i64 %97
  %100 = icmp eq i32 %94, 1
  %101 = select i1 %100, i64 4294967296, i64 %96
  br label %102

102:                                              ; preds = %83, %93, %26
  %103 = phi i64 [ %24, %83 ], [ %24, %93 ], [ %27, %26 ]
  %104 = phi i64 [ 2863311530, %83 ], [ %99, %93 ], [ %41, %26 ]
  %105 = phi i64 [ -6148914694099828736, %83 ], [ %101, %93 ], [ %43, %26 ]
  %106 = insertvalue { i64, i64 } undef, i64 %103, 0
  %107 = and i64 %105, -4294967296
  %108 = and i64 %104, 4294967295
  %109 = or i64 %107, %108
  %110 = insertvalue { i64, i64 } %106, i64 %109, 1
  ret { i64, i64 } %110
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator.2274"* @_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEppEv(%"class.base::CheckedContiguousIterator.2274"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2274", %"class.base::CheckedContiguousIterator.2274"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2274", %"class.base::CheckedContiguousIterator.2274"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7, align 8
  %11 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8, align 8
  %12 = icmp eq %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #12
  %17 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %16, i8* %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %26 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7, align 8
  %27 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %26, i64 1
  store %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %27, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7, align 8
  ret %"class.base::CheckedContiguousIterator.2274"* %0
}

declare void @_ZN5blink26NGContainerFragmentBuilder27TransferOutOfFlowCandidatesEPS0_NS_13LogicalOffsetEPKNS_25NGMulticolWithPendingOOFsIS2_EE(%"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"*, i64, %"struct.blink::NGMulticolWithPendingOOFs"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20NGBoxFragmentBuilderD2Ev(%"class.blink::NGBoxFragmentBuilder"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 49, i32 0
  %3 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %2, align 8
  %4 = icmp eq %"class.blink::NGBlockBreakToken"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %3, i64 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %6, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #12
  %8 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %6, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %6, i64 -2
  %13 = bitcast %"class.base::RefCounted.1722"* %12 to %"class.blink::NGBreakToken"*
  %14 = bitcast %"class.base::RefCounted.1722"* %12 to void (%"class.blink::NGBreakToken"*)***
  %15 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %15, i64 1
  %17 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %16, align 8
  tail call void %17(%"class.blink::NGBreakToken"* nonnull %13) #12
  br label %18

18:                                               ; preds = %1, %5, %11
  %19 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 47, i32 0, i32 0, i32 0
  %20 = load %"struct.blink::NGMathMLPaintInfo"*, %"struct.blink::NGMathMLPaintInfo"** %19, align 8
  store %"struct.blink::NGMathMLPaintInfo"* null, %"struct.blink::NGMathMLPaintInfo"** %19, align 8
  %21 = icmp eq %"struct.blink::NGMathMLPaintInfo"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.blink::NGMathMLPaintInfo", %"struct.blink::NGMathMLPaintInfo"* %20, i64 0, i32 2, i32 0
  %24 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %23, align 8
  %25 = icmp eq %"class.blink::ShapeResultView"* %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %24, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %27) #12
  %28 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %24) #12
  %32 = bitcast %"class.blink::ShapeResultView"* %24 to i8*
  tail call void @free(i8* %32) #12
  br label %33

33:                                               ; preds = %31, %26, %22
  %34 = bitcast %"struct.blink::NGMathMLPaintInfo"* %20 to i8*
  tail call void @free(i8* %34) #12
  br label %35

35:                                               ; preds = %18, %33
  %36 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 45, i32 0
  %37 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %36, align 8
  %38 = icmp eq %"class.blink::SerializedScriptValue"* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %37) #12
  %44 = bitcast %"class.blink::SerializedScriptValue"* %37 to i8*
  tail call void @free(i8* %44) #12
  br label %45

45:                                               ; preds = %35, %39, %43
  %46 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 43
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.2189", %"class.std::__1::unique_ptr.2189"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::NGGridData"*, %"struct.blink::NGGridData"** %47, align 8
  store %"struct.blink::NGGridData"* null, %"struct.blink::NGGridData"** %47, align 8
  %49 = icmp eq %"struct.blink::NGGridData"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %45
  %51 = bitcast %"class.std::__1::unique_ptr.2189"* %46 to %"struct.std::__1::default_delete.2193"*
  tail call void @_ZNKSt3__114default_deleteIN5blink10NGGridDataEEclEPS2_(%"struct.std::__1::default_delete.2193"* %51, %"struct.blink::NGGridData"* nonnull %48) #12
  br label %52

52:                                               ; preds = %45, %50
  %53 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %54 = load %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"*, %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"** %53, align 8
  store %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* null, %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"** %53, align 8
  %55 = icmp eq %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* %54, null
  br i1 %55, label %80, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry", %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* %54, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %57, align 8
  %59 = icmp eq %"class.blink::LayoutUnit"* %58, null
  %60 = bitcast %"class.blink::LayoutUnit"* %58 to i8*
  br i1 %59, label %67, label %61, !prof !3

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry", %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* %54, i64 0, i32 1, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %66, label %65, !prof !4

65:                                               ; preds = %61
  store i32 0, i32* %62, align 4
  br label %66

66:                                               ; preds = %65, %61
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #12
  store %"class.blink::LayoutUnit"* null, %"class.blink::LayoutUnit"** %57, align 8
  br label %67

67:                                               ; preds = %66, %56
  %68 = getelementptr inbounds %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry", %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %68, align 8
  %70 = icmp eq %"class.blink::LayoutUnit"* %69, null
  %71 = bitcast %"class.blink::LayoutUnit"* %69 to i8*
  br i1 %70, label %78, label %72, !prof !3

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry", %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* %54, i64 0, i32 0, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %77, label %76, !prof !4

76:                                               ; preds = %72
  store i32 0, i32* %73, align 4
  br label %77

77:                                               ; preds = %76, %72
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %71) #12
  br label %78

78:                                               ; preds = %77, %67
  %79 = bitcast %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* %54 to i8*
  tail call void @_ZdlPv(i8* %79) #13
  br label %80

80:                                               ; preds = %52, %78
  %81 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 39, i32 0
  %82 = load %"class.blink::NGTableBorders"*, %"class.blink::NGTableBorders"** %81, align 8
  %83 = icmp eq %"class.blink::NGTableBorders"* %82, null
  br i1 %83, label %125, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %82, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %85) #12
  %86 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %82, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %125

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %82, i64 0, i32 3, i32 0, i32 0, i32 0
  %91 = load %"struct.blink::NGTableBorders::Section"*, %"struct.blink::NGTableBorders::Section"** %90, align 8
  %92 = icmp eq %"struct.blink::NGTableBorders::Section"* %91, null
  %93 = bitcast %"struct.blink::NGTableBorders::Section"* %91 to i8*
  br i1 %92, label %100, label %94, !prof !3

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %82, i64 0, i32 3, i32 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %99, label %98, !prof !4

98:                                               ; preds = %94
  store i32 0, i32* %95, align 4
  br label %99

99:                                               ; preds = %98, %94
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %93) #12
  store %"struct.blink::NGTableBorders::Section"* null, %"struct.blink::NGTableBorders::Section"** %90, align 8
  br label %100

100:                                              ; preds = %99, %89
  %101 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %82, i64 0, i32 2
  %102 = getelementptr inbounds %"class.WTF::Vector.2158", %"class.WTF::Vector.2158"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.blink::NGTableBorders::Edge"*, %"struct.blink::NGTableBorders::Edge"** %102, align 8
  %104 = icmp eq %"struct.blink::NGTableBorders::Edge"* %103, null
  br i1 %104, label %123, label %105, !prof !3

105:                                              ; preds = %100
  %106 = bitcast %"struct.blink::NGTableBorders::Edge"* %103 to i8*
  %107 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %82, i64 0, i32 2, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %121, label %110, !prof !4

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.blink::NGTableBorders::Edge", %"struct.blink::NGTableBorders::Edge"* %103, i64 %111
  br label %113

113:                                              ; preds = %113, %110
  %114 = phi %"struct.blink::NGTableBorders::Edge"* [ %116, %113 ], [ %103, %110 ]
  %115 = getelementptr inbounds %"struct.blink::NGTableBorders::Edge", %"struct.blink::NGTableBorders::Edge"* %114, i64 0, i32 0
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr* %115) #12
  %116 = getelementptr inbounds %"struct.blink::NGTableBorders::Edge", %"struct.blink::NGTableBorders::Edge"* %114, i64 1
  %117 = icmp eq %"struct.blink::NGTableBorders::Edge"* %116, %112
  br i1 %117, label %118, label %113

118:                                              ; preds = %113
  store i32 0, i32* %107, align 4
  %119 = bitcast %"class.WTF::Vector.2158"* %101 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %105
  %122 = phi i8* [ %120, %118 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #12
  br label %123

123:                                              ; preds = %100, %121
  %124 = bitcast %"class.blink::NGTableBorders"* %82 to i8*
  tail call void @free(i8* %124) #12
  br label %125

125:                                              ; preds = %80, %84, %123
  %126 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0
  %127 = load i8, i8* %126, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %141, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %131 = load %"struct.blink::NGTableFragmentData::ColumnGeometry"*, %"struct.blink::NGTableFragmentData::ColumnGeometry"** %130, align 8
  %132 = icmp eq %"struct.blink::NGTableFragmentData::ColumnGeometry"* %131, null
  %133 = bitcast %"struct.blink::NGTableFragmentData::ColumnGeometry"* %131 to i8*
  br i1 %132, label %140, label %134, !prof !3

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %139, label %138, !prof !4

138:                                              ; preds = %134
  store i32 0, i32* %135, align 4
  br label %139

139:                                              ; preds = %138, %134
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %133) #12
  store %"struct.blink::NGTableFragmentData::ColumnGeometry"* null, %"struct.blink::NGTableFragmentData::ColumnGeometry"** %130, align 8
  br label %140

140:                                              ; preds = %139, %129
  store i8 0, i8* %126, align 8
  br label %141

141:                                              ; preds = %125, %140
  %142 = bitcast %"class.blink::NGBoxFragmentBuilder"* %0 to %"class.blink::NGContainerFragmentBuilder"*
  tail call void @_ZN5blink26NGContainerFragmentBuilderD2Ev(%"class.blink::NGContainerFragmentBuilder"* %142) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21NGOutOfFlowLayoutPart42ComputeStartFragmentIndexAndRelativeOffsetERKNS0_19ContainingBlockInfoENS_11WritingModeENS_10LayoutUnitEPjPNS_13LogicalOffsetE(%"class.blink::NGOutOfFlowLayoutPart"* nocapture readonly, %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* nocapture readnone dereferenceable(36), i8 zeroext, i32, i32* nocapture, %"struct.blink::LogicalOffset"* nocapture) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 0
  %8 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGContainerFragmentBuilder"**
  %9 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %9, i64 0, i32 14, i32 0, i32 0, i32 0
  %11 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %9, i64 0, i32 14, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %5, i64 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  br label %70

20:                                               ; preds = %6
  %21 = icmp eq i8 %2, 0
  %22 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %5, i64 0, i32 1, i32 0
  %23 = icmp eq i32 %3, 0
  br label %24

24:                                               ; preds = %20, %54
  %25 = phi i32 [ 0, %20 ], [ %58, %54 ]
  %26 = phi %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* [ %11, %20 ], [ %59, %54 ]
  %27 = phi i32 [ 0, %20 ], [ %57, %54 ]
  %28 = phi i32 [ 0, %20 ], [ %56, %54 ]
  %29 = phi i32 [ 0, %20 ], [ %55, %54 ]
  %30 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %26, i64 0, i32 1, i32 0
  %31 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %31, i64 0, i32 3
  %33 = bitcast i24* %32 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 960
  %36 = icmp eq i32 %35, 256
  br i1 %36, label %37, label %54

37:                                               ; preds = %24
  %38 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %31, i64 0, i32 2, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %31, i64 0, i32 2, i32 1, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = select i1 %21, i32 %41, i32 %39
  %43 = icmp sgt i32 %42, 64
  %44 = select i1 %43, i32 %42, i32 64
  %45 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 %44) #12
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 2147483647, i32 %47, !prof !4
  %49 = load i32, i32* %22, align 4
  %50 = icmp slt i32 %49, %48
  %51 = icmp eq i32 %49, %48
  %52 = and i1 %23, %51
  %53 = or i1 %50, %52
  br i1 %53, label %61, label %54

54:                                               ; preds = %37, %24
  %55 = phi i32 [ %29, %24 ], [ %44, %37 ]
  %56 = phi i32 [ %28, %24 ], [ %48, %37 ]
  %57 = phi i32 [ %27, %24 ], [ %48, %37 ]
  %58 = add i32 %25, 1
  %59 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %26, i64 1
  %60 = icmp eq %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %59, %15
  br i1 %60, label %66, label %24

61:                                               ; preds = %37
  store i32 %25, i32* %4, align 4
  %62 = load i32, i32* %22, align 4
  %63 = icmp sgt i32 %27, -1
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %62, i32 %27) #12
  br label %165

66:                                               ; preds = %54
  %67 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %5, i64 0, i32 1, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp sgt i32 %57, -1
  br i1 %69, label %70, label %76

70:                                               ; preds = %17, %66
  %71 = phi i32 [ %19, %17 ], [ %68, %66 ]
  %72 = phi i32* [ %18, %17 ], [ %67, %66 ]
  %73 = phi i32 [ 0, %17 ], [ %58, %66 ]
  %74 = phi i32 [ 0, %17 ], [ %57, %66 ]
  %75 = phi i32 [ 0, %17 ], [ %55, %66 ]
  br label %76

76:                                               ; preds = %66, %70
  %77 = phi i32 [ %71, %70 ], [ %68, %66 ]
  %78 = phi i32* [ %72, %70 ], [ %67, %66 ]
  %79 = phi i32 [ %73, %70 ], [ %58, %66 ]
  %80 = phi i32 [ %74, %70 ], [ %57, %66 ]
  %81 = phi i32 [ %75, %70 ], [ %55, %66 ]
  %82 = phi i32 [ -2147483648, %70 ], [ 2147483647, %66 ]
  %83 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %77, i32 %80) #12
  %84 = extractvalue { i32, i1 } %83, 1
  %85 = extractvalue { i32, i1 } %83, 0
  %86 = select i1 %84, i32 %82, i32 %85, !prof !4
  %87 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 7
  %88 = load %"class.WTF::Vector.2207"*, %"class.WTF::Vector.2207"** %87, align 8
  %89 = icmp eq %"class.WTF::Vector.2207"* %88, null
  br i1 %89, label %90, label %118

90:                                               ; preds = %76
  %91 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 8, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, -64
  br i1 %93, label %118, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %9, i64 0, i32 14
  %96 = add i32 %79, -1
  %97 = tail call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %95, i32 %96) #12
  %98 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %97, i64 0, i32 1, i32 0
  %99 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %99, i64 0, i32 3
  %101 = bitcast i24* %100 to i32*
  %102 = load i32, i32* %101, align 8
  %103 = and i32 %102, 960
  %104 = icmp eq i32 %103, 256
  br i1 %104, label %118, label %105

105:                                              ; preds = %94
  %106 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %7, align 8
  %107 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %106, i64 0, i32 29, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = load i32, i32* %91, align 4
  %110 = icmp sgt i32 %108, -1
  %111 = select i1 %110, i32 -2147483648, i32 2147483647
  %112 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %109, i32 %108) #12
  %113 = extractvalue { i32, i1 } %112, 1
  %114 = extractvalue { i32, i1 } %112, 0
  %115 = select i1 %113, i32 %111, i32 %114, !prof !4
  %116 = icmp sgt i32 %115, 64
  %117 = select i1 %116, i32 %115, i32 64
  br label %118

118:                                              ; preds = %90, %76, %94, %105
  %119 = phi i32 [ %81, %94 ], [ %117, %105 ], [ %81, %90 ], [ %81, %76 ]
  %120 = sext i32 %86 to i64
  %121 = shl nsw i64 %120, 6
  %122 = sext i32 %119 to i64
  %123 = sdiv i64 %121, %122
  %124 = tail call i1 @llvm.is.constant.i64(i64 %123) #12
  br i1 %124, label %132, label %125

125:                                              ; preds = %118
  %126 = icmp slt i64 %123, 0
  %127 = select i1 %126, i32 -2147483648, i32 2147483647
  %128 = add i64 %123, 2147483648
  %129 = icmp ult i64 %128, 4294967296
  %130 = trunc i64 %123 to i32
  %131 = select i1 %129, i32 %130, i32 %127, !prof !3
  br label %138

132:                                              ; preds = %118
  %133 = icmp sgt i64 %123, 2147483647
  br i1 %133, label %138, label %134

134:                                              ; preds = %132
  %135 = icmp sgt i64 %123, -2147483648
  %136 = select i1 %135, i64 %123, i64 -2147483648
  %137 = trunc i64 %136 to i32
  br label %138

138:                                              ; preds = %125, %132, %134
  %139 = phi i32 [ %131, %125 ], [ %137, %134 ], [ 2147483647, %132 ]
  %140 = sitofp i32 %139 to float
  %141 = fmul float %140, 1.562500e-02
  %142 = tail call float @llvm.floor.f32(float %141)
  %143 = fptosi float %142 to i32
  %144 = add i32 %79, %143
  store i32 %144, i32* %4, align 4
  %145 = icmp ugt i32 %143, 33554430
  %146 = shl i32 %143, 6
  %147 = select i1 %145, i32 2147483647, i32 %146
  %148 = sext i32 %147 to i64
  %149 = mul nsw i64 %148, %122
  %150 = sdiv i64 %149, 64
  %151 = ashr i64 %150, 32
  %152 = trunc i64 %151 to i32
  %153 = trunc i64 %150 to i32
  %154 = ashr i32 %153, 31
  %155 = icmp eq i32 %154, %152
  br i1 %155, label %160, label %156

156:                                              ; preds = %138
  %157 = xor i32 %147, %119
  %158 = lshr i32 %157, 31
  %159 = add nuw i32 %158, 2147483647
  br label %160

160:                                              ; preds = %138, %156
  %161 = phi i32 [ %153, %138 ], [ %159, %156 ]
  %162 = icmp sgt i32 %161, -1
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %86, i32 %161) #12
  br label %165

165:                                              ; preds = %61, %160
  %166 = phi { i32, i1 } [ %65, %61 ], [ %164, %160 ]
  %167 = phi i32 [ %64, %61 ], [ %163, %160 ]
  %168 = phi i32* [ %22, %61 ], [ %78, %160 ]
  %169 = extractvalue { i32, i1 } %166, 1
  %170 = extractvalue { i32, i1 } %166, 0
  %171 = select i1 %169, i32 %167, i32 %170
  store i32 %171, i32* %168, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_IN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEEELj0ES4_E6resizeEj(%"class.WTF::Vector.2275"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2275", %"class.WTF::Vector.2275"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %40, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.2275", %"class.WTF::Vector.2275"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::Vector.2278"*, %"class.WTF::Vector.2278"** %7, align 8
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %8, i64 %9
  %11 = icmp eq i32 %4, %1
  br i1 %11, label %83, label %12

12:                                               ; preds = %6
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %8, i64 %13
  br label %15

15:                                               ; preds = %12, %37
  %16 = phi %"class.WTF::Vector.2278"* [ %38, %37 ], [ %14, %12 ]
  %17 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %17, align 8
  %19 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %18, null
  br i1 %19, label %37, label %20, !prof !3

20:                                               ; preds = %15
  %21 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %18 to i8*
  %22 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %16, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %35, label %25, !prof !4

25:                                               ; preds = %20
  %26 = zext i32 %23 to i64
  %27 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %18, i64 %26
  br label %28

28:                                               ; preds = %28, %25
  %29 = phi %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* [ %30, %28 ], [ %18, %25 ]
  tail call void @_ZN5blink21NGOutOfFlowLayoutPart12NodeToLayoutD2Ev(%"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %29) #12
  %30 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %29, i64 1
  %31 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %30, %27
  br i1 %31, label %32, label %28

32:                                               ; preds = %28
  store i32 0, i32* %22, align 4
  %33 = bitcast %"class.WTF::Vector.2278"* %16 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %20
  %36 = phi i8* [ %34, %32 ], [ %21, %20 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %36) #12
  store %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* null, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %17, align 8
  br label %37

37:                                               ; preds = %35, %15
  %38 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %16, i64 1
  %39 = icmp eq %"class.WTF::Vector.2278"* %38, %10
  br i1 %39, label %83, label %15

40:                                               ; preds = %2
  %41 = getelementptr inbounds %"class.WTF::Vector.2275", %"class.WTF::Vector.2275"* %0, i64 0, i32 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp ult i32 %42, %1
  br i1 %43, label %44, label %66

44:                                               ; preds = %40
  %45 = lshr i32 %42, 2
  %46 = add nuw i32 %42, 1
  %47 = add i32 %46, %45
  %48 = icmp ugt i32 %47, 4
  %49 = select i1 %48, i32 %47, i32 4
  %50 = icmp ugt i32 %49, %1
  %51 = select i1 %50, i32 %49, i32 %1
  %52 = icmp ult i32 %42, %51
  br i1 %52, label %53, label %66, !prof !3

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"class.WTF::Vector.2275", %"class.WTF::Vector.2275"* %0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::Vector.2278"*, %"class.WTF::Vector.2278"** %54, align 8
  %56 = icmp eq %"class.WTF::Vector.2278"* %55, null
  br i1 %56, label %57, label %65

57:                                               ; preds = %53
  %58 = zext i32 %51 to i64
  %59 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ES0_EEEEmm(i64 %58) #12
  %60 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %59, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #12
  %61 = ptrtoint i8* %60 to i64
  %62 = bitcast %"class.WTF::Vector.2275"* %0 to i64*
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = lshr i64 %59, 4
  %64 = trunc i64 %63 to i32
  store i32 %64, i32* %41, align 8
  br label %66

65:                                               ; preds = %53
  tail call void @_ZN3WTF6VectorINS0_IN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj(%"class.WTF::Vector.2275"* %0, i32 %51) #12
  br label %66

66:                                               ; preds = %65, %57, %44, %40
  %67 = getelementptr inbounds %"class.WTF::Vector.2275", %"class.WTF::Vector.2275"* %0, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::Vector.2278"*, %"class.WTF::Vector.2278"** %67, align 8
  %69 = load i32, i32* %3, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %68, i64 %70
  %72 = icmp eq i32 %69, %1
  br i1 %72, label %83, label %73

73:                                               ; preds = %66
  %74 = zext i32 %1 to i64
  %75 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %68, i64 %74
  %76 = bitcast %"class.WTF::Vector.2278"* %71 to i8*
  %77 = ptrtoint %"class.WTF::Vector.2278"* %71 to i64
  %78 = getelementptr %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %75, i64 -1, i32 0, i32 0, i32 0
  %79 = ptrtoint %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %78 to i64
  %80 = add i64 %79, 16
  %81 = sub i64 %80, %77
  %82 = and i64 %81, -16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 %82, i1 false) #12
  br label %83

83:                                               ; preds = %37, %6, %73, %66
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGOutOfFlowLayoutPart25LayoutOOFsInFragmentainerERKN3WTF6VectorINS0_12NodeToLayoutELj0ENS1_18PartitionAllocatorEEEjNS_10LayoutUnitEPS5_(%"class.blink::NGOutOfFlowLayoutPart"* nocapture readonly, %"class.WTF::Vector.2278"* nocapture readonly dereferenceable(16), i32, i32, %"class.WTF::Vector.2278"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::NGConstraintSpace", align 8
  %7 = alloca %"struct.blink::NGFragmentGeometry", align 4
  %8 = alloca %"struct.blink::NGLayoutAlgorithmParams", align 16
  %9 = alloca %"class.blink::NGSimplifiedOOFLayoutAlgorithm", align 8
  %10 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 0
  %11 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGContainerFragmentBuilder"**
  %12 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %12, i64 0, i32 14, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp ule i32 %14, %2
  %16 = bitcast %"class.WTF::Vector.2278"* %4 to i64*
  %17 = load i64, i64* %16, align 8
  store atomic i64 0, i64* %16 monotonic, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %4, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %4, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  store atomic i64 0, i64* %16 monotonic, align 8
  store i32 0, i32* %18, align 4
  store i32 0, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %1, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = or i32 %20, %22
  %24 = icmp ne i32 %23, 0
  %25 = or i1 %24, %15
  br i1 %25, label %28, label %26

26:                                               ; preds = %5
  %27 = inttoptr i64 %17 to %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*
  br label %234

28:                                               ; preds = %5
  br i1 %15, label %29, label %52

29:                                               ; preds = %28
  %30 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 7
  %31 = load %"class.WTF::Vector.2207"*, %"class.WTF::Vector.2207"** %30, align 8
  %32 = icmp eq %"class.WTF::Vector.2207"* %31, null
  %33 = icmp ne %"class.WTF::Vector.2207"* %31, null
  %34 = sub i32 %2, %14
  %35 = add i32 %34, 1
  %36 = icmp ugt i32 %35, 33554430
  %37 = shl i32 %35, 6
  %38 = select i1 %36, i32 2147483647, i32 %37
  %39 = sext i32 %3 to i64
  %40 = sext i32 %38 to i64
  %41 = mul nsw i64 %40, %39
  %42 = sdiv i64 %41, 64
  %43 = ashr i64 %42, 32
  %44 = trunc i64 %43 to i32
  %45 = trunc i64 %42 to i32
  %46 = ashr i32 %45, 31
  %47 = icmp eq i32 %46, %44
  br i1 %47, label %52, label %48

48:                                               ; preds = %29
  %49 = xor i32 %38, %3
  %50 = lshr i32 %49, 31
  %51 = add nuw i32 %50, 2147483647
  br label %52

52:                                               ; preds = %48, %29, %28
  %53 = phi i1 [ false, %28 ], [ %33, %29 ], [ %33, %48 ]
  %54 = phi i1 [ false, %28 ], [ %32, %29 ], [ %32, %48 ]
  %55 = phi i32 [ 0, %28 ], [ %45, %29 ], [ %51, %48 ]
  %56 = bitcast %"class.blink::NGConstraintSpace"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #12
  call void @_ZN5blink21NGOutOfFlowLayoutPart31GetFragmentainerConstraintSpaceEj(%"class.blink::NGConstraintSpace"* nonnull sret %6, %"class.blink::NGOutOfFlowLayoutPart"* %0, i32 %2)
  br label %57

57:                                               ; preds = %71, %52
  %58 = phi i32 [ %2, %52 ], [ %72, %71 ]
  %59 = icmp ult i32 %58, %14
  br i1 %59, label %60, label %71

60:                                               ; preds = %57
  %61 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %11, align 8
  %62 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %61, i64 0, i32 14
  %63 = call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %62, i32 %58) #12
  %64 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %63, i64 0, i32 1, i32 0
  %65 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %65, i64 0, i32 3
  %67 = bitcast i24* %66 to i32*
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, 960
  %70 = icmp eq i32 %69, 256
  br i1 %70, label %73, label %71

71:                                               ; preds = %60, %57
  %72 = add i32 %58, -1
  br label %57

73:                                               ; preds = %60
  %74 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %11, align 8
  %75 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %74, i64 0, i32 14
  %76 = call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %75, i32 %58) #12
  %77 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %10, align 8
  %78 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %77, i64 0, i32 0, i32 2
  %79 = bitcast %"class.blink::NGLayoutInputNode"* %78 to %"class.blink::NGBlockNode"*
  %80 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %76, i64 0, i32 1, i32 0
  %81 = bitcast %"class.blink::NGPhysicalFragment"** %80 to %"class.blink::NGPhysicalBoxFragment"**
  %82 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %81, align 8
  %83 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %76 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = trunc i64 %84 to i32
  %86 = lshr i64 %84, 32
  %87 = trunc i64 %86 to i32
  br i1 %54, label %88, label %141

88:                                               ; preds = %73
  %89 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %77, i64 0, i32 0, i32 14, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, -1
  %92 = icmp eq i32 %91, %58
  br i1 %92, label %134, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %77, i64 0, i32 0, i32 14
  %95 = add nuw i32 %58, 1
  %96 = call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %94, i32 %95) #12
  %97 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %96, i64 0, i32 1, i32 0
  %98 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %98, i64 0, i32 3
  %100 = bitcast i24* %99 to i32*
  %101 = load i32, i32* %100, align 8
  %102 = and i32 %101, 960
  %103 = icmp eq i32 %102, 256
  br i1 %103, label %134, label %104

104:                                              ; preds = %93
  %105 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %11, align 8
  %106 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %105, i64 0, i32 14
  %107 = call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %106, i32 %95) #12
  %108 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %107 to i64*
  %109 = load i64, i64* %108, align 4
  %110 = trunc i64 %109 to i32
  %111 = lshr i64 %109, 32
  %112 = trunc i64 %111 to i32
  %113 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %107, i64 0, i32 1, i32 0
  %114 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %114, i64 0, i32 2, i32 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %114, i64 0, i32 2, i32 1, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::ComputedStyleBase"***
  %120 = load %"class.blink::ComputedStyleBase"**, %"class.blink::ComputedStyleBase"*** %119, align 8
  %121 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %121, i64 0, i32 9
  %123 = bitcast [20 x i8]* %122 to i160*
  %124 = load i160, i160* %123, align 8
  %125 = and i160 %124, 15211807202738752817960438464512
  %126 = icmp eq i160 %125, 0
  %127 = select i1 %126, i32 %118, i32 %116
  %128 = icmp slt i32 %127, 0
  %129 = select i1 %128, i32 -2147483648, i32 2147483647
  %130 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 %127) #12
  %131 = extractvalue { i32, i1 } %130, 1
  %132 = extractvalue { i32, i1 } %130, 0
  %133 = select i1 %131, i32 %129, i32 %132, !prof !4
  br label %141

134:                                              ; preds = %93, %88
  %135 = icmp slt i32 %3, 0
  %136 = select i1 %135, i32 -2147483648, i32 2147483647
  %137 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %85, i32 %3) #12
  %138 = extractvalue { i32, i1 } %137, 1
  %139 = extractvalue { i32, i1 } %137, 0
  %140 = select i1 %138, i32 %136, i32 %139, !prof !4
  br label %141

141:                                              ; preds = %73, %104, %134
  %142 = phi i32 [ %140, %134 ], [ %110, %104 ], [ %85, %73 ]
  %143 = phi i32 [ %87, %134 ], [ %133, %104 ], [ %87, %73 ]
  %144 = zext i32 %143 to i64
  %145 = shl nuw i64 %144, 32
  %146 = zext i32 %142 to i64
  %147 = or i64 %145, %146
  %148 = select i1 %53, i32 %58, i32 %2
  br label %149

149:                                              ; preds = %152, %141
  %150 = phi i32 [ %148, %141 ], [ %155, %152 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %168, label %152

152:                                              ; preds = %149
  %153 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %11, align 8
  %154 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %153, i64 0, i32 14
  %155 = add i32 %150, -1
  %156 = call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %154, i32 %155) #12
  %157 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %156, i64 0, i32 1, i32 0
  %158 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %158, i64 0, i32 3
  %160 = bitcast i24* %159 to i32*
  %161 = load i32, i32* %160, align 8
  %162 = and i32 %161, 960
  %163 = icmp eq i32 %162, 256
  br i1 %163, label %164, label %149

164:                                              ; preds = %152
  %165 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %158, i64 0, i32 4, i32 0
  %166 = bitcast %"class.blink::NGBreakToken"** %165 to %"class.blink::NGBlockBreakToken"**
  %167 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %166, align 8
  br label %168

168:                                              ; preds = %149, %164
  %169 = phi %"class.blink::NGBlockBreakToken"* [ %167, %164 ], [ null, %149 ]
  %170 = bitcast %"struct.blink::NGFragmentGeometry"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %170) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %170, i8 -86, i64 56, i1 false)
  call void @_ZN5blink32CalculateInitialFragmentGeometryERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeEb(%"struct.blink::NGFragmentGeometry"* nonnull sret %7, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %6, %"class.blink::NGBlockNode"* dereferenceable(16) %79, i1 zeroext false) #12
  %171 = bitcast %"struct.blink::NGLayoutAlgorithmParams"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %171) #12
  %172 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %8, i64 0, i32 4
  %173 = bitcast %"class.blink::NGEarlyBreak"** %172 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 16, i1 false)
  %174 = bitcast %"class.blink::NGLayoutInputNode"* %78 to <2 x i64>*
  %175 = load <2 x i64>, <2 x i64>* %174, align 8
  %176 = bitcast %"struct.blink::NGLayoutAlgorithmParams"* %8 to <2 x i64>*
  store <2 x i64> %175, <2 x i64>* %176, align 16
  %177 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %8, i64 0, i32 1
  store %"struct.blink::NGFragmentGeometry"* %7, %"struct.blink::NGFragmentGeometry"** %177, align 16
  %178 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %8, i64 0, i32 2
  store %"class.blink::NGConstraintSpace"* %6, %"class.blink::NGConstraintSpace"** %178, align 8
  %179 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %8, i64 0, i32 3
  store %"class.blink::NGBlockBreakToken"* %169, %"class.blink::NGBlockBreakToken"** %179, align 16
  %180 = getelementptr inbounds %"struct.blink::NGLayoutAlgorithmParams", %"struct.blink::NGLayoutAlgorithmParams"* %8, i64 0, i32 4
  %181 = bitcast %"class.blink::NGSimplifiedOOFLayoutAlgorithm"* %9 to i8*
  %182 = bitcast %"class.blink::NGEarlyBreak"** %180 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %182, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 768, i8* nonnull %181) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %181, i8 -86, i64 768, i1 false)
  call void @_ZN5blink30NGSimplifiedOOFLayoutAlgorithmC1ERKNS_23NGLayoutAlgorithmParamsERKNS_21NGPhysicalBoxFragmentEb(%"class.blink::NGSimplifiedOOFLayoutAlgorithm"* nonnull %9, %"struct.blink::NGLayoutAlgorithmParams"* nonnull dereferenceable(56) %8, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72) %82, i1 zeroext %54) #12
  %183 = inttoptr i64 %17 to %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*
  %184 = zext i32 %20 to i64
  %185 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %183, i64 %184
  %186 = icmp eq i32 %20, 0
  br i1 %186, label %187, label %194

187:                                              ; preds = %194, %168
  %188 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %1, i64 0, i32 0, i32 0, i32 0
  %189 = load %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %188, align 8
  %190 = load i32, i32* %21, align 4
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %189, i64 %191
  %193 = icmp eq i32 %190, 0
  br i1 %193, label %198, label %230

194:                                              ; preds = %168, %194
  %195 = phi %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* [ %196, %194 ], [ %183, %168 ]
  call void @_ZN5blink21NGOutOfFlowLayoutPart21AddOOFToFragmentainerERKNS0_12NodeToLayoutEPKNS_17NGConstraintSpaceENS_10LayoutUnitEbNS_13LogicalOffsetEjPNS_30NGSimplifiedOOFLayoutAlgorithmEPN3WTF6VectorIS1_Lj0ENSB_18PartitionAllocatorEEE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* dereferenceable(224) %195, %"class.blink::NGConstraintSpace"* nonnull %6, i32 %55, i1 zeroext %53, i64 %147, i32 %58, %"class.blink::NGSimplifiedOOFLayoutAlgorithm"* nonnull %9, %"class.WTF::Vector.2278"* %4)
  %196 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %195, i64 1
  %197 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %196, %185
  br i1 %197, label %187, label %194

198:                                              ; preds = %230, %187
  call void @_ZN5blink21NGOutOfFlowLayoutPart20ReplaceFragmentainerEjNS_13LogicalOffsetEbPNS_30NGSimplifiedOOFLayoutAlgorithmE(%"class.blink::NGOutOfFlowLayoutPart"* %0, i32 %58, i64 %147, i1 zeroext %54, %"class.blink::NGSimplifiedOOFLayoutAlgorithm"* nonnull %9)
  %199 = getelementptr inbounds %"class.blink::NGSimplifiedOOFLayoutAlgorithm", %"class.blink::NGSimplifiedOOFLayoutAlgorithm"* %9, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %199, align 8
  %200 = getelementptr inbounds %"class.blink::NGSimplifiedOOFLayoutAlgorithm", %"class.blink::NGSimplifiedOOFLayoutAlgorithm"* %9, i64 0, i32 0, i32 4
  call void @_ZN5blink20NGBoxFragmentBuilderD2Ev(%"class.blink::NGBoxFragmentBuilder"* %200) #12
  %201 = getelementptr inbounds %"class.blink::NGSimplifiedOOFLayoutAlgorithm", %"class.blink::NGSimplifiedOOFLayoutAlgorithm"* %9, i64 0, i32 0, i32 3, i32 0
  %202 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %201, align 8
  %203 = icmp eq %"class.blink::NGBlockBreakToken"* %202, null
  br i1 %203, label %217, label %204

204:                                              ; preds = %198
  %205 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %202, i64 0, i32 0, i32 1, i32 0
  %206 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %205, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %206) #12
  %207 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %205, i64 0, i32 0, i32 0
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %217

210:                                              ; preds = %204
  %211 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %205, i64 -2
  %212 = bitcast %"class.base::RefCounted.1722"* %211 to %"class.blink::NGBreakToken"*
  %213 = bitcast %"class.base::RefCounted.1722"* %211 to void (%"class.blink::NGBreakToken"*)***
  %214 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %213, align 8
  %215 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %214, i64 1
  %216 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %215, align 8
  call void %216(%"class.blink::NGBreakToken"* nonnull %212) #12
  br label %217

217:                                              ; preds = %198, %204, %210
  call void @llvm.lifetime.end.p0i8(i64 768, i8* nonnull %181) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %171) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %170) #12
  %218 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %6, i64 0, i32 3, i32 0
  %219 = load i32, i32* %218, align 8
  %220 = and i32 %219, 1
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %228, label %222

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %6, i64 0, i32 1, i32 0
  %224 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %223, align 8
  %225 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %224, null
  br i1 %225, label %228, label %226

226:                                              ; preds = %222
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %224) #12
  %227 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %224 to i8*
  call void @free(i8* %227) #12
  br label %228

228:                                              ; preds = %217, %222, %226
  %229 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %6, i64 0, i32 2
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %229) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #12
  br label %234

230:                                              ; preds = %187, %230
  %231 = phi %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* [ %232, %230 ], [ %189, %187 ]
  call void @_ZN5blink21NGOutOfFlowLayoutPart21AddOOFToFragmentainerERKNS0_12NodeToLayoutEPKNS_17NGConstraintSpaceENS_10LayoutUnitEbNS_13LogicalOffsetEjPNS_30NGSimplifiedOOFLayoutAlgorithmEPN3WTF6VectorIS1_Lj0ENSB_18PartitionAllocatorEEE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* dereferenceable(224) %231, %"class.blink::NGConstraintSpace"* nonnull %6, i32 %55, i1 zeroext %53, i64 %147, i32 %58, %"class.blink::NGSimplifiedOOFLayoutAlgorithm"* nonnull %9, %"class.WTF::Vector.2278"* %4)
  %232 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %231, i64 1
  %233 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %232, %192
  br i1 %233, label %198, label %230

234:                                              ; preds = %26, %228
  %235 = phi %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* [ %27, %26 ], [ %183, %228 ]
  %236 = icmp eq i64 %17, 0
  br i1 %236, label %248, label %237, !prof !3

237:                                              ; preds = %234
  %238 = icmp eq i32 %20, 0
  br i1 %238, label %246, label %239, !prof !4

239:                                              ; preds = %237
  %240 = zext i32 %20 to i64
  %241 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %235, i64 %240
  br label %242

242:                                              ; preds = %242, %239
  %243 = phi %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* [ %244, %242 ], [ %235, %239 ]
  call void @_ZN5blink21NGOutOfFlowLayoutPart12NodeToLayoutD2Ev(%"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %243) #12
  %244 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %243, i64 1
  %245 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %244, %241
  br i1 %245, label %246, label %242

246:                                              ; preds = %242, %237
  %247 = inttoptr i64 %17 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %247) #12
  br label %248

248:                                              ; preds = %234, %246
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink23NGLogicalStaticPosition17ConvertToPhysicalERKNS_20WritingModeConverterE(%"struct.blink::NGLogicalStaticPosition"*, %"class.blink::WritingModeConverter"* dereferenceable(12)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"struct.blink::PhysicalSize"*
  %5 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %0, i64 0, i32 0
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %23

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %16 to i64
  %22 = or i64 %20, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  br label %26

23:                                               ; preds = %2, %10
  %24 = call i64 @_ZNK5blink20WritingModeConverter14SlowToPhysicalERKNS_13LogicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* %1, %"struct.blink::LogicalOffset"* dereferenceable(8) %5, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %4) #12
  %25 = load i8, i8* %7, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  switch i8 %25, label %83 [
    i8 0, label %26
    i8 1, label %44
    i8 3, label %44
    i8 2, label %57
    i8 4, label %70
  ]

26:                                               ; preds = %14, %23
  %27 = phi i64 [ %22, %14 ], [ %24, %23 ]
  %28 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp ne i32 %29, 0
  %31 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 0
  %34 = xor i1 %30, %33
  %35 = select i1 %34, i64 0, i64 2
  %36 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i64 0, i64 8589934592
  %40 = icmp eq i32 %29, 1
  %41 = select i1 %40, i64 1, i64 %35
  %42 = icmp eq i32 %37, 1
  %43 = select i1 %42, i64 4294967296, i64 %39
  br label %102

44:                                               ; preds = %23, %23
  %45 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %0, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 2
  %48 = select i1 %47, i64 0, i64 2
  %49 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %0, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp ne i32 %50, 0
  %52 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 0
  %55 = xor i1 %51, %54
  %56 = select i1 %55, i64 0, i64 8589934592
  br label %86

57:                                               ; preds = %23
  %58 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %0, i64 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %60, i64 0, i64 2
  %62 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %0, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp ne i32 %63, 0
  %65 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 1
  %66 = load i8, i8* %65, align 1
  %67 = icmp eq i8 %66, 0
  %68 = xor i1 %64, %67
  %69 = select i1 %68, i64 0, i64 8589934592
  br label %93

70:                                               ; preds = %23
  %71 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %0, i64 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  %74 = select i1 %73, i64 0, i64 2
  %75 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %0, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = icmp ne i32 %76, 2
  %78 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 1
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  %81 = xor i1 %77, %80
  %82 = select i1 %81, i64 0, i64 8589934592
  br label %93

83:                                               ; preds = %23
  %84 = add i8 %25, -1
  %85 = icmp ult i8 %84, 4
  br i1 %85, label %86, label %102

86:                                               ; preds = %44, %83
  %87 = phi i64 [ %56, %44 ], [ -6148914694099828736, %83 ]
  %88 = phi i64 [ %48, %44 ], [ 2863311530, %83 ]
  %89 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %0, i64 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %0, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  br label %93

93:                                               ; preds = %86, %57, %70
  %94 = phi i32 [ %92, %86 ], [ %63, %57 ], [ %76, %70 ]
  %95 = phi i32 [ %90, %86 ], [ %59, %57 ], [ %72, %70 ]
  %96 = phi i64 [ %87, %86 ], [ %69, %57 ], [ %82, %70 ]
  %97 = phi i64 [ %88, %86 ], [ %61, %57 ], [ %74, %70 ]
  %98 = icmp eq i32 %95, 1
  %99 = select i1 %98, i64 1, i64 %97
  %100 = icmp eq i32 %94, 1
  %101 = select i1 %100, i64 4294967296, i64 %96
  br label %102

102:                                              ; preds = %83, %93, %26
  %103 = phi i64 [ %24, %83 ], [ %24, %93 ], [ %27, %26 ]
  %104 = phi i64 [ 2863311530, %83 ], [ %99, %93 ], [ %41, %26 ]
  %105 = phi i64 [ -6148914694099828736, %83 ], [ %101, %93 ], [ %43, %26 ]
  %106 = insertvalue { i64, i64 } undef, i64 %103, 0
  %107 = and i64 %105, -4294967296
  %108 = and i64 %104, 4294967295
  %109 = or i64 %107, %108
  %110 = insertvalue { i64, i64 } %106, i64 %109, 1
  ret { i64, i64 } %110
}

declare void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"*, i64) local_unnamed_addr #2

declare { i64, i64 } @_ZN5blink32ComputeScrollbarsForNonAnonymousERKNS_11NGBlockNodeE(%"class.blink::NGBlockNode"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGLayoutResult"* @_ZN5blink21NGOutOfFlowLayoutPart6LayoutERKNS0_12NodeToLayoutEPKNS_17NGConstraintSpaceE(%"class.blink::NGOutOfFlowLayoutPart"* nocapture readonly, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* nocapture readonly dereferenceable(224), %"class.blink::NGConstraintSpace"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.blink::LogicalSize"*
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"struct.blink::NGPhysicalBoxStrut"*
  %8 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1
  %9 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1 to %"class.blink::LayoutObject"**
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = lshr i160 %15, 102
  %17 = trunc i160 %16 to i16
  %18 = and i16 %17, 3
  %19 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = icmp eq i16 %18, 0
  %21 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 3, i32 1, i32 0
  %23 = load i32, i32* %21, align 4
  %24 = load i32, i32* %22, align 4
  %25 = select i1 %20, i32 %23, i32 %24
  %26 = select i1 %20, i32 %24, i32 %23
  %27 = zext i32 %26 to i64
  %28 = shl nuw i64 %27, 32
  %29 = zext i32 %25 to i64
  %30 = or i64 %28, %29
  store i64 %30, i64* %4, align 8
  %31 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %8 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = lshr i64 %32, 32
  %34 = trunc i64 %33 to i32
  %35 = icmp eq %"class.blink::NGConstraintSpace"* %2, null
  %36 = bitcast %"class.blink::LayoutObject"* %10 to %"class.blink::LayoutBox"*
  br i1 %35, label %37, label %47

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 1, i32 0
  %39 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %38, align 8
  %40 = icmp eq %"class.blink::NGLayoutResult"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %39, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %42) #12
  br label %66

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 2
  %45 = getelementptr inbounds %"class.absl::optional.1728", %"class.absl::optional.1728"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 4, !range !2
  br label %55

47:                                               ; preds = %3
  %48 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 2
  %49 = getelementptr inbounds %"class.absl::optional.1728", %"class.absl::optional.1728"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8, i8* %49, align 4, !range !2
  %51 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 5
  %52 = load i8, i8* %51, align 1, !range !2
  %53 = xor i8 %52, 1
  %54 = and i8 %53, %50
  br label %55

55:                                               ; preds = %47, %43
  %56 = phi %"class.absl::optional.1728"* [ %48, %47 ], [ %44, %43 ]
  %57 = phi i8 [ %54, %47 ], [ %46, %43 ]
  %58 = icmp ne i8 %57, 0
  %59 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 3
  %63 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 2
  %64 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %63, align 8
  %65 = call %"class.blink::NGLayoutResult"* @_ZN5blink21NGOutOfFlowLayoutPart16GenerateFragmentENS_11NGBlockNodeERKNS_11LogicalSizeERKN4absl8optionalINS_10LayoutUnitEEERKNS_28NGLogicalOutOfFlowDimensionsES7_PKNS_17NGBlockBreakTokenEPKNS_17NGConstraintSpaceEb(%"class.blink::NGOutOfFlowLayoutPart"* undef, %"class.blink::LayoutBox"* %36, i64 %61, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %5, %"class.absl::optional.1728"* dereferenceable(8) %56, %"struct.blink::NGLogicalOutOfFlowDimensions"* dereferenceable(40) %62, i32 %34, %"class.blink::NGBlockBreakToken"* %64, %"class.blink::NGConstraintSpace"* %2, i1 zeroext %58)
  br label %66

66:                                               ; preds = %41, %55
  %67 = phi %"class.blink::NGLayoutResult"* [ %39, %41 ], [ %65, %55 ]
  %68 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %69, i64 0, i32 0, i32 0
  %71 = bitcast %"class.blink::LayoutBox"* %69 to i1 (%"class.blink::LayoutObject"*)***
  %72 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %71, align 8
  %73 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %72, i64 28
  %74 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %73, align 8
  %75 = tail call zeroext i1 %74(%"class.blink::LayoutObject"* %70) #12
  br i1 %75, label %76, label %82

76:                                               ; preds = %66
  %77 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1 to %"class.blink::LayoutBlock"**
  %78 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %78, i64 0, i32 2
  %80 = load i16, i16* %79, align 8
  %81 = and i16 %80, -1025
  store i16 %81, i16* %79, align 8
  br label %82

82:                                               ; preds = %76, %66
  %83 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGFragmentBuilder"**
  %84 = load %"class.blink::NGFragmentBuilder"*, %"class.blink::NGFragmentBuilder"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::NGFragmentBuilder", %"class.blink::NGFragmentBuilder"* %84, i64 0, i32 5
  %86 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %86, i64 0, i32 5, i32 0
  %88 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %88, i64 0, i32 0, i32 9
  %90 = bitcast [20 x i8]* %89 to i160*
  %91 = load i160, i160* %90, align 8
  %92 = lshr i160 %91, 32
  %93 = trunc i160 %92 to i32
  %94 = and i32 %93, 28
  %95 = or i32 %94, 3
  %96 = icmp eq i32 %95, 19
  br i1 %96, label %140, label %97

97:                                               ; preds = %82
  %98 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %68, align 8
  %99 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #12
  %100 = trunc i16 %18 to i8
  %101 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 3, i32 2, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 3, i32 2, i32 1, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = and i160 %15, 41538374868278621028243970633760768
  %106 = icmp ne i160 %105, 0
  %107 = select i1 %106, i32 %104, i32 %102
  %108 = select i1 %106, i32 %102, i32 %104
  switch i8 %100, label %124 [
    i8 0, label %109
    i8 1, label %114
    i8 3, label %114
    i8 2, label %119
  ]

109:                                              ; preds = %97
  %110 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 3, i32 2, i32 2, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 3, i32 2, i32 3, i32 0
  %113 = load i32, i32* %112, align 4
  br label %125

114:                                              ; preds = %97, %97
  %115 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 3, i32 2, i32 2, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 3, i32 2, i32 3, i32 0
  %118 = load i32, i32* %117, align 4
  br label %125

119:                                              ; preds = %97
  %120 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 3, i32 2, i32 3, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 3, i32 2, i32 2, i32 0
  %123 = load i32, i32* %122, align 4
  br label %125

124:                                              ; preds = %97
  unreachable

125:                                              ; preds = %109, %114, %119
  %126 = phi i32 [ %113, %109 ], [ %108, %114 ], [ %108, %119 ]
  %127 = phi i32 [ %107, %109 ], [ %118, %114 ], [ %123, %119 ]
  %128 = phi i32 [ %108, %109 ], [ %116, %114 ], [ %121, %119 ]
  %129 = phi i32 [ %111, %109 ], [ %107, %114 ], [ %107, %119 ]
  %130 = zext i32 %126 to i64
  %131 = zext i32 %127 to i64
  %132 = shl nuw i64 %131, 32
  %133 = or i64 %132, %130
  %134 = zext i32 %128 to i64
  %135 = shl nuw i64 %134, 32
  %136 = zext i32 %129 to i64
  %137 = or i64 %135, %136
  %138 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %133, i64* %139, align 8
  call void @_ZN5blink9LayoutBox9SetMarginERKNS_18NGPhysicalBoxStrutE(%"class.blink::LayoutBox"* %98, %"struct.blink::NGPhysicalBoxStrut"* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #12
  br label %140

140:                                              ; preds = %125, %82
  %141 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 12
  %142 = load i8, i8* %141, align 2, !range !2
  %143 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %67, i64 0, i32 6, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = shl nuw nsw i8 %142, 3
  %146 = and i32 %144, -13
  %147 = or i8 %145, 4
  %148 = zext i8 %147 to i32
  %149 = or i32 %146, %148
  store i32 %149, i32* %143, align 4
  %150 = and i32 %144, 1
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %67, i64 0, i32 4
  br i1 %151, label %158, label %153

153:                                              ; preds = %140
  %154 = getelementptr inbounds %union.anon.1887, %union.anon.1887* %152, i64 0, i32 0
  %155 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %154, align 8
  %156 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %155, i64 0, i32 4
  %157 = bitcast %"struct.blink::LogicalOffset"* %156 to i64*
  store i64 %32, i64* %157, align 4
  br label %160

158:                                              ; preds = %140
  %159 = bitcast %union.anon.1887* %152 to i64*
  store i64 %32, i64* %159, align 8
  br label %160

160:                                              ; preds = %153, %158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  ret %"class.blink::NGLayoutResult"* %67
}

declare void @_ZN5blink18AddScrollbarFreezeERKNS_10NGBoxStrutES2_NS_20WritingDirectionModeEPbS4_(%"struct.blink::NGBoxStrut"* dereferenceable(16), %"struct.blink::NGBoxStrut"* dereferenceable(16), i16, i8*, i8*) local_unnamed_addr #2

declare void @_ZN5blink24PaintLayerScrollableArea25FreezeScrollbarsRootScopeC1ERKNS_9LayoutBoxEbb(%"class.blink::PaintLayerScrollableArea::FreezeScrollbarsRootScope"*, %"class.blink::LayoutBox"* dereferenceable(216), i1 zeroext, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink24PaintLayerScrollableArea25FreezeScrollbarsRootScopeD1Ev(%"class.blink::PaintLayerScrollableArea::FreezeScrollbarsRootScope"*) unnamed_addr #4

declare %"class.blink::NGLayoutResult"* @_ZNK5blink11NGBlockNode40CachedLayoutResultForOutOfFlowPositionedENS_11LogicalSizeE(%"class.blink::NGBlockNode"*, i64) local_unnamed_addr #2

declare { i64, i64 } @_ZN5blink14ComputeBordersERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockNode"* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

declare i64 @_ZN5blink19ComputeReplacedSizeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutENS_16ReplacedSizeModeE(%"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* dereferenceable(32), %"struct.blink::NGBoxStrut"* dereferenceable(16), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink32ComputeOutOfFlowInlineDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsE(%"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* dereferenceable(32), %"struct.blink::NGBoxStrut"* dereferenceable(16), %"struct.blink::NGLogicalStaticPosition"* dereferenceable(16), %"class.absl::optional.2217"* dereferenceable(12), i16, %"struct.blink::NGLogicalOutOfFlowDimensions"*) local_unnamed_addr #2

declare %"class.blink::NGLayoutResult"* @_ZN5blink31ComputeOutOfFlowBlockDimensionsERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutERKNS_23NGLogicalStaticPositionERKN4absl8optionalINS_11LogicalSizeEEENS_20WritingDirectionModeEPNS_28NGLogicalOutOfFlowDimensionsE(%"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* dereferenceable(32), %"struct.blink::NGBoxStrut"* dereferenceable(16), %"struct.blink::NGLogicalStaticPosition"* dereferenceable(16), %"class.absl::optional.2217"* dereferenceable(12), i16, %"struct.blink::NGLogicalOutOfFlowDimensions"*) local_unnamed_addr #2

declare void @_ZN5blink26AdjustOffsetForSplitInlineERKNS_11NGBlockNodeEPKNS_20NGBoxFragmentBuilderERNS_13LogicalOffsetE(%"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGBoxFragmentBuilder"*, %"struct.blink::LogicalOffset"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGLayoutResult"* @_ZN5blink21NGOutOfFlowLayoutPart16GenerateFragmentENS_11NGBlockNodeERKNS_11LogicalSizeERKN4absl8optionalINS_10LayoutUnitEEERKNS_28NGLogicalOutOfFlowDimensionsES7_PKNS_17NGBlockBreakTokenEPKNS_17NGConstraintSpaceEb(%"class.blink::NGOutOfFlowLayoutPart"* nocapture readnone, %"class.blink::LayoutBox"*, i64, %"struct.blink::LogicalSize"* nocapture readonly dereferenceable(8), %"class.absl::optional.1728"* nocapture readonly dereferenceable(8), %"struct.blink::NGLogicalOutOfFlowDimensions"* nocapture readonly dereferenceable(40), i32, %"class.blink::NGBlockBreakToken"*, %"class.blink::NGConstraintSpace"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %11 = alloca { %"class.blink::LayoutBox"*, i64 }, align 8
  %12 = bitcast { %"class.blink::LayoutBox"*, i64 }* %11 to %"class.blink::NGBlockNode"*
  %13 = alloca %"class.blink::NGConstraintSpaceBuilder", align 8
  %14 = alloca %"class.blink::NGConstraintSpace", align 8
  %15 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %11, i64 0, i32 0
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %15, align 8
  %16 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %11, i64 0, i32 1
  store i64 %2, i64* %16, align 8
  %17 = bitcast { %"class.blink::LayoutBox"*, i64 }* %11 to %"class.blink::NGLayoutInputNode"*
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowDimensions", %"struct.blink::NGLogicalOutOfFlowDimensions"* %5, i64 0, i32 1, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %3, i64 0, i32 1
  %23 = getelementptr inbounds %"class.absl::optional.1728", %"class.absl::optional.1728"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  %26 = getelementptr inbounds %"class.absl::optional.1728", %"class.absl::optional.1728"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = select i1 %25, %"class.blink::LayoutUnit"* %22, %"class.blink::LayoutUnit"* %26
  %28 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 32, i1 false)
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 9
  %32 = bitcast [20 x i8]* %31 to i160*
  %33 = load i160, i160* %32, align 8
  %34 = lshr i160 %33, 102
  %35 = trunc i160 %34 to i16
  %36 = and i16 %35, 3
  %37 = lshr i160 %33, 108
  %38 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %13, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %13, i64 0, i32 0, i32 3, i32 0
  %41 = shl nuw nsw i16 %36, 4
  %42 = trunc i160 %37 to i16
  %43 = and i16 %42, 128
  %44 = or i16 %41, %43
  %45 = zext i16 %44 to i32
  %46 = bitcast %union.anon.1726* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #12
  %47 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %13, i64 0, i32 1, i32 0
  store i32 -64, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %13, i64 0, i32 2
  %49 = and i160 %33, 15211807202738752817960438464512
  %50 = icmp ne i160 %49, 0
  %51 = icmp eq i16 %36, 0
  %52 = xor i1 %50, %51
  %53 = zext i1 %52 to i8
  store i8 %53, i8* %48, align 4
  %54 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %13, i64 0, i32 3
  store i8 1, i8* %54, align 1
  %55 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %13, i64 0, i32 4
  store i8 0, i8* %55, align 2
  %56 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %13, i64 0, i32 5
  store i8 1, i8* %56, align 1
  %57 = select i1 %52, i32 1024, i32 3072
  %58 = or i32 %57, %45
  store i32 %58, i32* %40, align 8
  %59 = zext i32 %29 to i64
  %60 = shl nuw i64 %59, 32
  %61 = zext i32 %21 to i64
  %62 = or i64 %60, %61
  %63 = bitcast %"class.blink::NGConstraintSpaceBuilder"* %13 to i64*
  store i64 %62, i64* %63, align 8
  br i1 %52, label %68, label %64, !prof !3

64:                                               ; preds = %10
  %65 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %13, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 %29, i32* %38, align 8
  store i32 %21, i32* %65, align 4
  %66 = icmp eq i32 %29, -64
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  store i32 -64, i32* %38, align 8
  br label %68

68:                                               ; preds = %10, %64, %67
  %69 = bitcast %"struct.blink::LogicalSize"* %3 to i64*
  %70 = load i64, i64* %69, align 4
  call void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"* nonnull %13, i64 %70) #12
  %71 = load i8, i8* %48, align 4, !range !2
  %72 = icmp eq i8 %71, 0
  %73 = load i32, i32* %40, align 8
  %74 = select i1 %72, i32 4194304, i32 2097152, !prof !4
  %75 = or i32 %74, %73
  %76 = select i1 %72, i32 2097152, i32 4194304
  %77 = select i1 %9, i32 %76, i32 0
  %78 = or i32 %75, %77
  store i32 %78, i32* %40, align 8
  %79 = icmp eq %"class.blink::NGConstraintSpace"* %8, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %68
  call void @_ZN5blink33SetupSpaceBuilderForFragmentationERKNS_17NGConstraintSpaceERKNS_17NGLayoutInputNodeENS_10LayoutUnitEPNS_24NGConstraintSpaceBuilderEb(%"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %8, %"class.blink::NGLayoutInputNode"* nonnull dereferenceable(16) %17, i32 %6, %"class.blink::NGConstraintSpaceBuilder"* nonnull %13, i1 zeroext true) #12
  %81 = load i32, i32* %40, align 8, !noalias !9
  br label %82

82:                                               ; preds = %68, %80
  %83 = phi i32 [ %78, %68 ], [ %81, %80 ]
  %84 = bitcast %"class.blink::NGConstraintSpace"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #12
  %85 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %14, i64 0, i32 1, i32 0
  %86 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %14, i64 0, i32 3, i32 0
  %87 = bitcast %"class.blink::NGConstraintSpace"* %14 to i64*
  %88 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %14, i64 0, i32 1
  %89 = bitcast %union.anon.1726* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 24, i1 false)
  %90 = load i64, i64* %63, align 8, !noalias !9
  store i64 %90, i64* %87, align 8, !alias.scope !9
  %91 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %14, i64 0, i32 2
  %92 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %13, i64 0, i32 0, i32 2
  %93 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %92, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.blink::NGExclusionSpace"* %92 to i64*
  %95 = load i64, i64* %94, align 8, !noalias !9
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %93, align 8, !noalias !9
  %96 = bitcast %"class.blink::NGExclusionSpace"* %91 to i64*
  store i64 %95, i64* %96, align 8, !alias.scope !9
  store i32 %83, i32* %86, align 8, !alias.scope !9
  %97 = and i32 %83, 1
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %105, label %99

99:                                               ; preds = %82
  %100 = getelementptr inbounds %union.anon.1726, %union.anon.1726* %39, i64 0, i32 0
  %101 = bitcast %union.anon.1726* %39 to i64*
  %102 = load i64, i64* %101, align 8, !noalias !9
  %103 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %14, i64 0, i32 1
  %104 = bitcast %union.anon.1726* %103 to i64*
  store i64 %102, i64* %104, align 8, !alias.scope !9
  store %"struct.blink::NGConstraintSpace::RareData"* null, %"struct.blink::NGConstraintSpace::RareData"** %100, align 8, !noalias !9
  br label %110

105:                                              ; preds = %82
  %106 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %14, i64 0, i32 1
  %107 = bitcast %union.anon.1726* %39 to i64*
  %108 = bitcast %union.anon.1726* %106 to i64*
  %109 = load i64, i64* %107, align 8, !noalias !9
  store i64 %109, i64* %108, align 8, !alias.scope !9
  br label %110

110:                                              ; preds = %99, %105
  %111 = call %"class.blink::NGLayoutResult"* @_ZNK5blink11NGBlockNode6LayoutERKNS_17NGConstraintSpaceEPKNS_17NGBlockBreakTokenEPKNS_12NGEarlyBreakE(%"class.blink::NGBlockNode"* nonnull %12, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %14, %"class.blink::NGBlockBreakToken"* %7, %"class.blink::NGEarlyBreak"* null) #12
  %112 = load i32, i32* %86, align 8
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %110
  %116 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %85, align 8
  %117 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %115
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %116) #12
  %119 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %116 to i8*
  call void @free(i8* %119) #12
  br label %120

120:                                              ; preds = %110, %115, %118
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %91) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #12
  %121 = load i32, i32* %40, align 8
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %130, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.blink::NGConstraintSpaceBuilder", %"class.blink::NGConstraintSpaceBuilder"* %13, i64 0, i32 0, i32 1, i32 0
  %126 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %125, align 8
  %127 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %126, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %124
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %126) #12
  %129 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %126 to i8*
  call void @free(i8* %129) #12
  br label %130

130:                                              ; preds = %120, %124, %128
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %92) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #12
  ret %"class.blink::NGLayoutResult"* %111
}

declare void @_ZN5blink9LayoutBox9SetMarginERKNS_18NGPhysicalBoxStrutE(%"class.blink::LayoutBox"*, %"struct.blink::NGPhysicalBoxStrut"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #2

declare void @_ZN5blink33SetupSpaceBuilderForFragmentationERKNS_17NGConstraintSpaceERKNS_17NGLayoutInputNodeENS_10LayoutUnitEPNS_24NGConstraintSpaceBuilderEb(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGLayoutInputNode"* dereferenceable(16), i32, %"class.blink::NGConstraintSpaceBuilder"*, i1 zeroext) local_unnamed_addr #2

declare %"class.blink::NGLayoutResult"* @_ZNK5blink11NGBlockNode6LayoutERKNS_17NGConstraintSpaceEPKNS_17NGBlockBreakTokenEPKNS_12NGEarlyBreakE(%"class.blink::NGBlockNode"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockBreakToken"*, %"class.blink::NGEarlyBreak"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGOutOfFlowLayoutPart31GetFragmentainerConstraintSpaceEj(%"class.blink::NGConstraintSpace"* noalias sret, %"class.blink::NGOutOfFlowLayoutPart"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %1, i64 0, i32 0
  %5 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %1 to %"class.blink::NGContainerFragmentBuilder"**
  %6 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %6, i64 0, i32 14
  %8 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %6, i64 0, i32 14, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp ule i32 %9, %2
  br i1 %10, label %23, label %11

11:                                               ; preds = %3
  %12 = icmp eq i32 %2, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %11
  %14 = add i32 %2, -1
  %15 = tail call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %7, i32 %14) #12
  %16 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %15, i64 0, i32 1, i32 0
  %17 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %17, i64 0, i32 3
  %19 = bitcast i24* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 960
  %22 = icmp eq i32 %21, 256
  br label %23

23:                                               ; preds = %11, %13, %3
  %24 = phi i1 [ true, %3 ], [ false, %11 ], [ %22, %13 ]
  br label %25

25:                                               ; preds = %39, %23
  %26 = phi i32 [ %2, %23 ], [ %40, %39 ]
  %27 = icmp ult i32 %26, %9
  br i1 %27, label %28, label %39

28:                                               ; preds = %25
  %29 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %5, align 8
  %30 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %29, i64 0, i32 14
  %31 = tail call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %30, i32 %26) #12
  %32 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %31, i64 0, i32 1, i32 0
  %33 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %33, i64 0, i32 3
  %35 = bitcast i24* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 960
  %38 = icmp eq i32 %37, 256
  br i1 %38, label %41, label %39

39:                                               ; preds = %28, %25
  %40 = add i32 %26, -1
  br label %25

41:                                               ; preds = %28
  %42 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %5, align 8
  %43 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %42, i64 0, i32 14
  %44 = tail call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %43, i32 %26) #12
  %45 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %44, i64 0, i32 1, i32 0
  %46 = bitcast %"class.blink::NGPhysicalFragment"** %45 to %"class.blink::NGPhysicalBoxFragment"**
  %47 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %46, align 8
  %48 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %1 to %"class.blink::ComputedStyleBase"***
  %49 = load %"class.blink::ComputedStyleBase"**, %"class.blink::ComputedStyleBase"*** %48, align 8
  %50 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %50, i64 0, i32 9
  %52 = bitcast [20 x i8]* %51 to i160*
  %53 = load i160, i160* %52, align 8
  %54 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %47, i64 0, i32 0, i32 2, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %47, i64 0, i32 0, i32 2, i32 1, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = and i160 %53, 15211807202738752817960438464512
  %59 = icmp eq i160 %58, 0
  %60 = select i1 %59, i32 %55, i32 %57
  %61 = select i1 %59, i32 %57, i32 %55
  %62 = bitcast %"class.blink::ComputedStyleBase"** %49 to %"class.blink::NGBoxFragmentBuilder"*
  br i1 %10, label %63, label %99

63:                                               ; preds = %41
  %64 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %1, i64 0, i32 7
  %65 = load %"class.WTF::Vector.2207"*, %"class.WTF::Vector.2207"** %64, align 8
  %66 = icmp ne %"class.WTF::Vector.2207"* %65, null
  %67 = add i32 %9, -1
  %68 = icmp eq i32 %26, %67
  %69 = or i1 %68, %66
  br i1 %69, label %99, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %1, i64 0, i32 8, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, -64
  br i1 %73, label %99, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %49, i64 24
  %76 = bitcast %"class.blink::ComputedStyleBase"** %75 to %"class.WTF::Vector.2095"*
  %77 = add nuw i32 %26, 1
  %78 = tail call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %76, i32 %77) #12
  %79 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %78, i64 0, i32 1, i32 0
  %80 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %80, i64 0, i32 3
  %82 = bitcast i24* %81 to i32*
  %83 = load i32, i32* %82, align 8
  %84 = and i32 %83, 960
  %85 = icmp eq i32 %84, 256
  %86 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %4, align 8
  br i1 %85, label %99, label %87

87:                                               ; preds = %74
  %88 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %86, i64 0, i32 29, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = load i32, i32* %71, align 4
  %91 = icmp sgt i32 %89, -1
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  %93 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %90, i32 %89) #12
  %94 = extractvalue { i32, i1 } %93, 1
  %95 = extractvalue { i32, i1 } %93, 0
  %96 = select i1 %94, i32 %92, i32 %95, !prof !4
  %97 = icmp sgt i32 %96, 0
  %98 = select i1 %97, i32 %96, i32 0
  br label %99

99:                                               ; preds = %74, %70, %63, %41, %87
  %100 = phi %"class.blink::NGBoxFragmentBuilder"* [ %86, %87 ], [ %62, %70 ], [ %62, %63 ], [ %62, %41 ], [ %86, %74 ]
  %101 = phi i32 [ %98, %87 ], [ %61, %70 ], [ %61, %63 ], [ %61, %41 ], [ %61, %74 ]
  %102 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %100, i64 0, i32 4, i32 1, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %100, i64 0, i32 0, i32 3
  %105 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %104, align 8
  %106 = zext i32 %101 to i64
  %107 = shl nuw i64 %106, 32
  %108 = zext i32 %60 to i64
  %109 = or i64 %107, %108
  %110 = zext i32 %103 to i64
  %111 = shl nuw i64 %110, 32
  %112 = or i64 %111, %108
  tail call void @_ZN5blink31CreateConstraintSpaceForColumnsERKNS_17NGConstraintSpaceENS_11LogicalSizeES3_bb(%"class.blink::NGConstraintSpace"* sret %0, %"class.blink::NGConstraintSpace"* dereferenceable(32) %105, i64 %109, i64 %112, i1 zeroext %24, i1 zeroext false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink21NGOutOfFlowLayoutPart26UpdatedFragmentainerOffsetENS_13LogicalOffsetEjNS_10LayoutUnitEb(%"class.blink::NGOutOfFlowLayoutPart"* nocapture readonly, i64, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = trunc i64 %1 to i32
  %7 = lshr i64 %1, 32
  %8 = trunc i64 %7 to i32
  br i1 %4, label %9, label %64

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGContainerFragmentBuilder"**
  %11 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %11, i64 0, i32 14, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  %15 = icmp eq i32 %14, %2
  br i1 %15, label %57, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %11, i64 0, i32 14
  %18 = add i32 %2, 1
  %19 = tail call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %17, i32 %18) #12
  %20 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %19, i64 0, i32 1, i32 0
  %21 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %21, i64 0, i32 3
  %23 = bitcast i24* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 960
  %26 = icmp eq i32 %25, 256
  br i1 %26, label %57, label %27

27:                                               ; preds = %16
  %28 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %10, align 8
  %29 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %28, i64 0, i32 14
  %30 = tail call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %29, i32 %18) #12
  %31 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %30 to i64*
  %32 = load i64, i64* %31, align 4
  %33 = trunc i64 %32 to i32
  %34 = lshr i64 %32, 32
  %35 = trunc i64 %34 to i32
  %36 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %30, i64 0, i32 1, i32 0
  %37 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %37, i64 0, i32 2, i32 1, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::ComputedStyleBase"***
  %43 = load %"class.blink::ComputedStyleBase"**, %"class.blink::ComputedStyleBase"*** %42, align 8
  %44 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %44, i64 0, i32 9
  %46 = bitcast [20 x i8]* %45 to i160*
  %47 = load i160, i160* %46, align 8
  %48 = and i160 %47, 15211807202738752817960438464512
  %49 = icmp eq i160 %48, 0
  %50 = select i1 %49, i32 %41, i32 %39
  %51 = icmp slt i32 %50, 0
  %52 = select i1 %51, i32 -2147483648, i32 2147483647
  %53 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %35, i32 %50) #12
  %54 = extractvalue { i32, i1 } %53, 1
  %55 = extractvalue { i32, i1 } %53, 0
  %56 = select i1 %54, i32 %52, i32 %55, !prof !4
  br label %64

57:                                               ; preds = %9, %16
  %58 = icmp slt i32 %3, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %6, i32 %3) #12
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !4
  br label %64

64:                                               ; preds = %27, %57, %5
  %65 = phi i32 [ %63, %57 ], [ %33, %27 ], [ %6, %5 ]
  %66 = phi i32 [ %8, %57 ], [ %56, %27 ], [ %8, %5 ]
  %67 = zext i32 %66 to i64
  %68 = shl nuw i64 %67, 32
  %69 = zext i32 %65 to i64
  %70 = or i64 %68, %69
  ret i64 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGBlockBreakToken"* @_ZNK5blink21NGOutOfFlowLayoutPart31PreviousFragmentainerBreakTokenEj(%"class.blink::NGOutOfFlowLayoutPart"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGContainerFragmentBuilder"**
  br label %4

4:                                                ; preds = %7, %2
  %5 = phi i32 [ %1, %2 ], [ %10, %7 ]
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %4
  %8 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %3, align 8
  %9 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %8, i64 0, i32 14
  %10 = add i32 %5, -1
  %11 = tail call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %9, i32 %10) #12
  %12 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %11, i64 0, i32 1, i32 0
  %13 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %13, i64 0, i32 3
  %15 = bitcast i24* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 960
  %18 = icmp eq i32 %17, 256
  br i1 %18, label %19, label %4

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %13, i64 0, i32 4, i32 0
  %21 = bitcast %"class.blink::NGBreakToken"** %20 to %"class.blink::NGBlockBreakToken"**
  %22 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %21, align 8
  br label %23

23:                                               ; preds = %4, %19
  %24 = phi %"class.blink::NGBlockBreakToken"* [ %22, %19 ], [ null, %4 ]
  ret %"class.blink::NGBlockBreakToken"* %24
}

declare void @_ZN5blink30NGSimplifiedOOFLayoutAlgorithmC1ERKNS_23NGLayoutAlgorithmParamsERKNS_21NGPhysicalBoxFragmentEb(%"class.blink::NGSimplifiedOOFLayoutAlgorithm"*, %"struct.blink::NGLayoutAlgorithmParams"* dereferenceable(56), %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72), i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGOutOfFlowLayoutPart21AddOOFToFragmentainerERKNS0_12NodeToLayoutEPKNS_17NGConstraintSpaceENS_10LayoutUnitEbNS_13LogicalOffsetEjPNS_30NGSimplifiedOOFLayoutAlgorithmEPN3WTF6VectorIS1_Lj0ENSB_18PartitionAllocatorEEE(%"class.blink::NGOutOfFlowLayoutPart"* nocapture readonly, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* dereferenceable(224), %"class.blink::NGConstraintSpace"*, i32, i1 zeroext, i64, i32, %"class.blink::NGSimplifiedOOFLayoutAlgorithm"*, %"class.WTF::Vector.2278"*) local_unnamed_addr #0 align 2 {
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"struct.blink::LogicalOffset"*
  %12 = alloca %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", align 8
  %13 = tail call %"class.blink::NGLayoutResult"* @_ZN5blink21NGOutOfFlowLayoutPart13LayoutOOFNodeERKNS0_12NodeToLayoutEPKNS_9LayoutBoxEPKNS_17NGConstraintSpaceE(%"class.blink::NGOutOfFlowLayoutPart"* %0, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* dereferenceable(224) %1, %"class.blink::LayoutBox"* null, %"class.blink::NGConstraintSpace"* %2)
  %14 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %13, i64 0, i32 6, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %13, i64 0, i32 4
  br i1 %17, label %23, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %union.anon.1887, %union.anon.1887* %18, i64 0, i32 0
  %21 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %20, align 8
  %22 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %21, i64 0, i32 4
  br label %25

23:                                               ; preds = %9
  %24 = bitcast %union.anon.1887* %18 to %"struct.blink::LogicalOffset"*
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi %"struct.blink::LogicalOffset"* [ %22, %19 ], [ %24, %23 ]
  %27 = bitcast %"struct.blink::LogicalOffset"* %26 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = trunc i64 %28 to i32
  %30 = lshr i64 %28, 32
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 4, i32 2
  %33 = bitcast %"struct.blink::LogicalOffset"* %32 to i64*
  %34 = load i64, i64* %33, align 4
  %35 = trunc i64 %34 to i32
  %36 = lshr i64 %34, 32
  %37 = trunc i64 %36 to i32
  %38 = icmp slt i32 %35, 0
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %29, i32 %35) #12
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !4
  %44 = icmp slt i32 %37, 0
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %31, i32 %37) #12
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !4
  %50 = zext i32 %49 to i64
  %51 = shl nuw i64 %50, 32
  %52 = trunc i64 %5 to i32
  %53 = and i64 %5, -4294967296
  br i1 %4, label %54, label %65

54:                                               ; preds = %25
  %55 = icmp slt i32 %3, 0
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %43, i32 %3) #12
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 %56, i32 %59, !prof !4
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %52, i32 %3) #12
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %56, i32 %63, !prof !4
  br label %65

65:                                               ; preds = %54, %25
  %66 = phi i32 [ %64, %54 ], [ %52, %25 ]
  %67 = phi i32 [ %60, %54 ], [ %43, %25 ]
  %68 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 12
  %69 = load i8, i8* %68, align 2, !range !2
  %70 = shl nuw nsw i8 %69, 3
  %71 = zext i8 %70 to i32
  %72 = and i32 %15, -13
  %73 = or i32 %72, %71
  %74 = or i32 %73, 4
  store i32 %74, i32* %14, align 4
  br i1 %17, label %82, label %75

75:                                               ; preds = %65
  %76 = getelementptr inbounds %union.anon.1887, %union.anon.1887* %18, i64 0, i32 0
  %77 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %76, align 8
  %78 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %77, i64 0, i32 4
  %79 = bitcast %"struct.blink::LogicalOffset"* %78 to i64*
  %80 = zext i32 %67 to i64
  %81 = or i64 %51, %80
  store i64 %81, i64* %79, align 4
  br label %86

82:                                               ; preds = %65
  %83 = bitcast %union.anon.1887* %18 to i64*
  %84 = zext i32 %67 to i64
  %85 = or i64 %51, %84
  store i64 %85, i64* %83, align 8
  br label %86

86:                                               ; preds = %75, %82
  %87 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 7
  %88 = load %"struct.blink::NGContainingBlock"*, %"struct.blink::NGContainingBlock"** %87, align 8
  %89 = getelementptr inbounds %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock"* %88, i64 0, i32 2, i32 0
  %90 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %89, align 8
  %91 = icmp eq %"class.blink::NGPhysicalFragment"* %90, null
  br i1 %91, label %126, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 8, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock"* %88, i64 0, i32 0, i32 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp sgt i32 %96, -1
  %98 = select i1 %97, i32 -2147483648, i32 2147483647
  %99 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %94, i32 %96) #12
  %100 = extractvalue { i32, i1 } %99, 1
  %101 = extractvalue { i32, i1 } %99, 0
  %102 = select i1 %100, i32 %98, i32 %101, !prof !4
  %103 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 8, i32 1, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock"* %88, i64 0, i32 0, i32 1, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, -1
  %108 = select i1 %107, i32 -2147483648, i32 2147483647
  %109 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %104, i32 %106) #12
  %110 = extractvalue { i32, i1 } %109, 1
  %111 = extractvalue { i32, i1 } %109, 0
  %112 = select i1 %110, i32 %108, i32 %111, !prof !4
  %113 = zext i32 %102 to i64
  %114 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 2
  %115 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %114, align 8
  %116 = icmp eq %"class.blink::NGBlockBreakToken"* %115, null
  br i1 %116, label %145, label %117

117:                                              ; preds = %92
  %118 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %115, i64 0, i32 1, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp slt i32 %119, 0
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  %122 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 %119) #12
  %123 = extractvalue { i32, i1 } %122, 1
  %124 = extractvalue { i32, i1 } %122, 0
  %125 = select i1 %123, i32 %121, i32 %124, !prof !4
  br label %145

126:                                              ; preds = %86
  %127 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 15
  %128 = load i8, i8* %127, align 1, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %145, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 7
  br label %132

132:                                              ; preds = %130, %135
  %133 = phi i32 [ %137, %135 ], [ %6, %130 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %145, label %135

135:                                              ; preds = %132
  %136 = load %"class.WTF::Vector.2207"*, %"class.WTF::Vector.2207"** %131, align 8
  %137 = add i32 %133, -1
  %138 = tail call dereferenceable(16) %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* @_ZN3WTF6VectorIN5blink21NGOutOfFlowLayoutPart17MulticolChildInfoELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2207"* %136, i32 %137) #12
  %139 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo", %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* %138, i64 0, i32 1
  %140 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %139, align 8
  %141 = icmp eq %"class.blink::NGBlockBreakToken"* %140, null
  br i1 %141, label %132, label %142

142:                                              ; preds = %135
  %143 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %140, i64 0, i32 1, i32 0
  %144 = load i32, i32* %143, align 4
  br label %145

145:                                              ; preds = %132, %142, %92, %126, %117
  %146 = phi i32 [ %112, %92 ], [ %125, %117 ], [ 0, %126 ], [ %144, %142 ], [ 0, %132 ]
  %147 = phi i64 [ %113, %92 ], [ %113, %117 ], [ 0, %126 ], [ 0, %142 ], [ 0, %132 ]
  %148 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 0
  %149 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 9, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = tail call i32 @_ZNK5blink20NGBoxFragmentBuilder37BlockOffsetAdjustmentForFragmentainerENS_10LayoutUnitE(%"class.blink::NGBoxFragmentBuilder"* %149, i32 %151) #12
  %153 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGContainerFragmentBuilder"**
  %154 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %13, i64 0, i32 3, i32 0
  %156 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %155, align 8
  %157 = zext i32 %66 to i64
  %158 = or i64 %53, %157
  %159 = load %"struct.blink::NGContainingBlock"*, %"struct.blink::NGContainingBlock"** %87, align 8
  %160 = zext i32 %146 to i64
  %161 = shl nuw i64 %160, 32
  %162 = or i64 %161, %147
  tail call void @_ZN5blink26NGContainerFragmentBuilder26PropagateOOFPositionedInfoERKNS_18NGPhysicalFragmentENS_13LogicalOffsetES4_S4_PKNS_12LayoutInlineENS_10LayoutUnitEPKNS_17NGContainingBlockIS4_EES4_(%"class.blink::NGContainerFragmentBuilder"* %154, %"class.blink::NGPhysicalFragment"* dereferenceable(48) %156, i64 %28, i64 %34, i64 %158, %"class.blink::LayoutInline"* null, i32 %152, %"struct.blink::NGContainingBlock"* %159, i64 %162) #12
  %163 = icmp eq %"class.blink::NGLayoutResult"* %13, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %145
  %165 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %13, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %165) #12
  br label %166

166:                                              ; preds = %145, %164
  tail call void @_ZN5blink30NGSimplifiedOOFLayoutAlgorithm21AppendOutOfFlowResultE13scoped_refptrIKNS_14NGLayoutResultEE(%"class.blink::NGSimplifiedOOFLayoutAlgorithm"* %7, %"class.blink::NGLayoutResult"* %13) #12
  %167 = bitcast %"class.blink::NGPhysicalFragment"** %155 to %"class.blink::NGPhysicalBoxFragment"**
  %168 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %167, align 8
  %169 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 2
  %170 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %169, align 8
  %171 = icmp eq %"class.blink::NGBlockBreakToken"* %170, null
  br i1 %171, label %172, label %234

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 3, i32 0
  %174 = bitcast %"class.blink::NGPhysicalFragment"** %173 to %"class.blink::NGPhysicalBoxFragment"**
  %175 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %174, align 8
  %176 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #12
  %177 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 8, i32 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 4, i32 3, i32 0, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = icmp sgt i32 %180, -1
  %182 = select i1 %181, i32 -2147483648, i32 2147483647
  %183 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %178, i32 %180) #12
  %184 = extractvalue { i32, i1 } %183, 1
  %185 = extractvalue { i32, i1 } %183, 0
  %186 = select i1 %184, i32 %182, i32 %185, !prof !4
  %187 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 8, i32 1, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 4, i32 3, i32 1, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = icmp sgt i32 %190, -1
  %192 = select i1 %191, i32 -2147483648, i32 2147483647
  %193 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %188, i32 %190) #12
  %194 = extractvalue { i32, i1 } %193, 1
  %195 = extractvalue { i32, i1 } %193, 0
  %196 = select i1 %194, i32 %192, i32 %195, !prof !4
  %197 = zext i32 %196 to i64
  %198 = shl nuw i64 %197, 32
  %199 = zext i32 %186 to i64
  %200 = or i64 %198, %199
  store i64 %200, i64* %10, align 8
  %201 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 0
  %202 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %175, i64 0, i32 0, i32 1
  %203 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %202, align 8
  %204 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %175, i64 0, i32 0, i32 3
  %205 = bitcast i24* %204 to i32*
  %206 = load i32, i32* %205, align 8
  %207 = lshr i32 %206, 10
  %208 = and i32 %207, 3
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %172
  %211 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %203, i64 0, i32 5, i32 0
  %212 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %211, align 8
  br label %215

213:                                              ; preds = %172
  %214 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %203, i32 %208) #12
  br label %215

215:                                              ; preds = %210, %213
  %216 = phi %"class.blink::ComputedStyle"* [ %212, %210 ], [ %214, %213 ]
  %217 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %216, i64 0, i32 0, i32 9
  %218 = bitcast [20 x i8]* %217 to i160*
  %219 = load i160, i160* %218, align 8
  %220 = lshr i160 %219, 102
  %221 = trunc i160 %220 to i16
  %222 = and i16 %221, 3
  %223 = lshr i160 %219, 107
  %224 = trunc i160 %223 to i16
  %225 = and i16 %224, 256
  %226 = or i16 %225, %222
  %227 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %175, i64 0, i32 0, i32 2
  %228 = bitcast %"struct.blink::PhysicalSize"* %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %168, i64 0, i32 0, i32 2
  %231 = bitcast %"struct.blink::PhysicalSize"* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = call i64 @_ZNK5blink13LogicalOffset17ConvertToPhysicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::LogicalOffset"* nonnull %11, i16 %226, i64 %229, i64 %232) #12
  call void @_ZNK5blink11NGBlockNode25CopyChildFragmentPositionERKNS_21NGPhysicalBoxFragmentENS_14PhysicalOffsetES3_PKNS_17NGBlockBreakTokenE(%"class.blink::NGBlockNode"* %201, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72) %168, i64 %233, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72) %175, %"class.blink::NGBlockBreakToken"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #12
  br label %234

234:                                              ; preds = %166, %215
  %235 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %168, i64 0, i32 0, i32 4, i32 0
  %236 = bitcast %"class.blink::NGBreakToken"** %235 to %"class.blink::NGBlockBreakToken"**
  %237 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %236, align 8
  %238 = icmp eq %"class.blink::NGBlockBreakToken"* %237, null
  br i1 %238, label %398, label %239

239:                                              ; preds = %234
  %240 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %240) #12
  %241 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1 to i8*
  %242 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 0, i32 1, i32 1
  %243 = bitcast %union.anon.1726* %242 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 -86, i64 200, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %240, i8* align 8 %241, i64 16, i1 false) #12
  %244 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 0, i32 1
  %245 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 1
  %246 = bitcast %"class.blink::NGConstraintSpace"* %245 to i64*
  %247 = bitcast %"class.blink::NGConstraintSpace"* %244 to i64*
  %248 = load i64, i64* %246, align 8
  store i64 %248, i64* %247, align 8
  %249 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 0, i32 1, i32 2
  %250 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %251 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %250, align 8
  %252 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %251, null
  br i1 %252, label %257, label %253

253:                                              ; preds = %239
  %254 = call noalias i8* @malloc(i64 40) #12
  %255 = bitcast i8* %254 to %"class.blink::NGExclusionSpaceInternal"*
  call void @_ZN5blink24NGExclusionSpaceInternalC1ERKS0_(%"class.blink::NGExclusionSpaceInternal"* %255, %"class.blink::NGExclusionSpaceInternal"* nonnull dereferenceable(40) %251) #12
  %256 = ptrtoint i8* %254 to i64
  br label %257

257:                                              ; preds = %253, %239
  %258 = phi i64 [ %256, %253 ], [ 0, %239 ]
  %259 = bitcast %"class.blink::NGExclusionSpace"* %249 to i64*
  store i64 %258, i64* %259, align 8
  %260 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 1, i32 3, i32 0
  %261 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 0, i32 1, i32 3, i32 0
  %262 = load i32, i32* %260, align 8
  store i32 %262, i32* %261, align 8
  %263 = and i32 %262, 1
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %272, label %265

265:                                              ; preds = %257
  %266 = call noalias i8* @malloc(i64 88) #12
  %267 = bitcast i8* %266 to %"struct.blink::NGConstraintSpace::RareData"*
  %268 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 1, i32 1, i32 0
  %269 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %268, align 8
  call void @_ZN5blink17NGConstraintSpace8RareDataC2ERKS1_(%"struct.blink::NGConstraintSpace::RareData"* %267, %"struct.blink::NGConstraintSpace::RareData"* dereferenceable(88) %269) #12
  %270 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 0, i32 1, i32 1, i32 0
  %271 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %270 to i8**
  store i8* %266, i8** %271, align 8
  br label %278

272:                                              ; preds = %257
  %273 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 1, i32 1
  %274 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 0, i32 1, i32 1
  %275 = bitcast %union.anon.1726* %273 to i64*
  %276 = bitcast %union.anon.1726* %274 to i64*
  %277 = load i64, i64* %275, align 4
  store i64 %277, i64* %276, align 8
  br label %278

278:                                              ; preds = %272, %265
  %279 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 0, i32 2
  %280 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 2
  %281 = bitcast %"struct.blink::NGLogicalStaticPosition"* %279 to i8*
  %282 = bitcast %"struct.blink::NGLogicalStaticPosition"* %280 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* align 8 %282, i64 73, i1 false) #12
  %283 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 1
  %284 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1
  %285 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %284 to i64*
  %286 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %283 to i64*
  %287 = load i64, i64* %285, align 8
  store i64 %287, i64* %286, align 8
  %288 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 1, i32 0
  %289 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %288, align 8
  %290 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::NGLayoutResult"* %289, %"class.blink::NGLayoutResult"** %290, align 8
  %291 = icmp eq %"class.blink::NGLayoutResult"* %289, null
  br i1 %291, label %294, label %292

292:                                              ; preds = %278
  %293 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %289, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %293) #12
  br label %294

294:                                              ; preds = %292, %278
  %295 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %296 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %295, i8* align 8 %296, i64 60, i1 false) #12
  %297 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 2
  %298 = bitcast %"class.blink::NGBlockBreakToken"** %169 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast %"class.blink::NGBlockBreakToken"** %297 to i64*
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 3, i32 0
  %302 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %301, align 8
  %303 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 3, i32 0
  store %"class.blink::NGPhysicalFragment"* %302, %"class.blink::NGPhysicalFragment"** %303, align 8
  %304 = icmp eq %"class.blink::NGPhysicalFragment"* %302, null
  br i1 %304, label %307, label %305

305:                                              ; preds = %294
  %306 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %302, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %306) #12
  br label %307

307:                                              ; preds = %294, %305
  store %"class.blink::NGBlockBreakToken"* %237, %"class.blink::NGBlockBreakToken"** %297, align 8
  %308 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 1, i32 0, i32 1, i32 0
  store i32 0, i32* %308, align 4
  %309 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %8, i64 0, i32 0, i32 0, i32 2
  %310 = load i32, i32* %309, align 4
  %311 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %8, i64 0, i32 0, i32 0, i32 1
  %312 = load i32, i32* %311, align 8
  %313 = icmp eq i32 %310, %312
  br i1 %313, label %314, label %336, !prof !4

314:                                              ; preds = %307
  %315 = add i32 %310, 1
  %316 = lshr i32 %310, 2
  %317 = add i32 %315, %316
  %318 = icmp ugt i32 %317, 4
  %319 = select i1 %318, i32 %317, i32 4
  %320 = icmp ugt i32 %319, %315
  %321 = select i1 %320, i32 %319, i32 %315
  %322 = icmp ult i32 %310, %321
  br i1 %322, label %323, label %336, !prof !3

323:                                              ; preds = %314
  %324 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %8, i64 0, i32 0, i32 0, i32 0
  %325 = load %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %324, align 8
  %326 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %325, null
  br i1 %326, label %327, label %335

327:                                              ; preds = %323
  %328 = zext i32 %321 to i64
  %329 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutEEEmm(i64 %328) #12
  %330 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %329, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutEEEPKcv, i64 0, i64 0)) #12
  %331 = ptrtoint i8* %330 to i64
  %332 = bitcast %"class.WTF::Vector.2278"* %8 to i64*
  store atomic i64 %331, i64* %332 monotonic, align 8
  %333 = udiv i64 %329, 224
  %334 = trunc i64 %333 to i32
  store i32 %334, i32* %311, align 8
  br label %336

335:                                              ; preds = %323
  call void @_ZN3WTF6VectorIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2278"* %8, i32 %321) #12
  br label %336

336:                                              ; preds = %307, %314, %327, %335
  %337 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %8, i64 0, i32 0, i32 0, i32 0
  %338 = load %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %337, align 8
  %339 = load i32, i32* %309, align 4
  %340 = zext i32 %339 to i64
  %341 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %338, i64 %340
  %342 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %341 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %342, i8* nonnull align 8 %240, i64 16, i1 false) #12
  %343 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %338, i64 %340, i32 0, i32 1
  %344 = bitcast %"class.blink::NGConstraintSpace"* %343 to i64*
  %345 = load i64, i64* %247, align 8
  store i64 %345, i64* %344, align 8
  %346 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %338, i64 %340, i32 0, i32 1, i32 2
  %347 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %348 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %347, align 8
  %349 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %348, null
  br i1 %349, label %354, label %350

350:                                              ; preds = %336
  %351 = call noalias i8* @malloc(i64 40) #12
  %352 = bitcast i8* %351 to %"class.blink::NGExclusionSpaceInternal"*
  call void @_ZN5blink24NGExclusionSpaceInternalC1ERKS0_(%"class.blink::NGExclusionSpaceInternal"* %352, %"class.blink::NGExclusionSpaceInternal"* nonnull dereferenceable(40) %348) #12
  %353 = ptrtoint i8* %351 to i64
  br label %354

354:                                              ; preds = %350, %336
  %355 = phi i64 [ %353, %350 ], [ 0, %336 ]
  %356 = bitcast %"class.blink::NGExclusionSpace"* %346 to i64*
  store i64 %355, i64* %356, align 8
  %357 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %338, i64 %340, i32 0, i32 1, i32 3, i32 0
  %358 = load i32, i32* %261, align 8
  store i32 %358, i32* %357, align 8
  %359 = and i32 %358, 1
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %368, label %361

361:                                              ; preds = %354
  %362 = call noalias i8* @malloc(i64 88) #12
  %363 = bitcast i8* %362 to %"struct.blink::NGConstraintSpace::RareData"*
  %364 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 0, i32 1, i32 1, i32 0
  %365 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %364, align 8
  call void @_ZN5blink17NGConstraintSpace8RareDataC2ERKS1_(%"struct.blink::NGConstraintSpace::RareData"* %363, %"struct.blink::NGConstraintSpace::RareData"* dereferenceable(88) %365) #12
  %366 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %338, i64 %340, i32 0, i32 1, i32 1, i32 0
  %367 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %366 to i8**
  store i8* %362, i8** %367, align 8
  br label %374

368:                                              ; preds = %354
  %369 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %12, i64 0, i32 0, i32 1, i32 1
  %370 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %338, i64 %340, i32 0, i32 1, i32 1
  %371 = bitcast %union.anon.1726* %369 to i64*
  %372 = bitcast %union.anon.1726* %370 to i64*
  %373 = load i64, i64* %371, align 8
  store i64 %373, i64* %372, align 8
  br label %374

374:                                              ; preds = %368, %361
  %375 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %338, i64 %340, i32 0, i32 2
  %376 = bitcast %"struct.blink::NGLogicalStaticPosition"* %375 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %376, i8* align 8 %281, i64 73, i1 false) #12
  %377 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %338, i64 %340, i32 1
  %378 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %377 to i64*
  %379 = load i64, i64* %286, align 8
  store i64 %379, i64* %378, align 8
  %380 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %290, align 8
  %381 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %338, i64 %340, i32 1, i32 1, i32 0
  store %"class.blink::NGLayoutResult"* %380, %"class.blink::NGLayoutResult"** %381, align 8
  %382 = icmp eq %"class.blink::NGLayoutResult"* %380, null
  br i1 %382, label %385, label %383

383:                                              ; preds = %374
  %384 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %380, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %384) #12
  br label %385

385:                                              ; preds = %383, %374
  %386 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %338, i64 %340, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %386, i8* align 8 %295, i64 60, i1 false) #12
  %387 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %338, i64 %340, i32 2
  %388 = load i64, i64* %300, align 8
  %389 = bitcast %"class.blink::NGBlockBreakToken"** %387 to i64*
  store i64 %388, i64* %389, align 8
  %390 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %303, align 8
  %391 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %338, i64 %340, i32 3, i32 0
  store %"class.blink::NGPhysicalFragment"* %390, %"class.blink::NGPhysicalFragment"** %391, align 8
  %392 = icmp eq %"class.blink::NGPhysicalFragment"* %390, null
  br i1 %392, label %395, label %393

393:                                              ; preds = %385
  %394 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %390, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %394) #12
  br label %395

395:                                              ; preds = %385, %393
  %396 = load i32, i32* %309, align 4
  %397 = add i32 %396, 1
  store i32 %397, i32* %309, align 4
  call void @_ZN5blink21NGOutOfFlowLayoutPart12NodeToLayoutD2Ev(%"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %240) #12
  br label %398

398:                                              ; preds = %234, %395
  br i1 %163, label %406, label %399

399:                                              ; preds = %398
  %400 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %13, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %400) #12
  %401 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %402 = load i32, i32* %401, align 4
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %406

404:                                              ; preds = %399
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %13) #12
  %405 = bitcast %"class.blink::NGLayoutResult"* %13 to i8*
  call void @free(i8* %405) #12
  br label %406

406:                                              ; preds = %398, %399, %404
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NGOutOfFlowLayoutPart20ReplaceFragmentainerEjNS_13LogicalOffsetEbPNS_30NGSimplifiedOOFLayoutAlgorithmE(%"class.blink::NGOutOfFlowLayoutPart"* nocapture readonly, i32, i64, i1 zeroext, %"class.blink::NGSimplifiedOOFLayoutAlgorithm"*) local_unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = alloca %"class.absl::optional.2262", align 8
  store i64 %2, i64* %6, align 8
  %8 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 0
  %9 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %9, i64 0, i32 0, i32 2
  %11 = bitcast %"class.blink::NGLayoutInputNode"* %10 to %"class.blink::NGBlockNode"*
  %12 = bitcast %"class.blink::NGOutOfFlowLayoutPart"* %0 to %"class.blink::NGContainerFragmentBuilder"**
  %13 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %9, i64 0, i32 0, i32 14
  %14 = tail call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"* %13, i32 %1) #12
  %15 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %14, i64 0, i32 1, i32 0
  %16 = bitcast %"class.blink::NGPhysicalFragment"** %15 to %"class.blink::NGPhysicalBoxFragment"**
  %17 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %16, align 8
  br i1 %3, label %18, label %36

18:                                               ; preds = %5
  %19 = bitcast i64* %6 to %"struct.blink::LogicalOffset"*
  %20 = bitcast %"class.blink::NGSimplifiedOOFLayoutAlgorithm"* %4 to %"class.blink::NGLayoutResult"* (%"class.blink::NGSimplifiedOOFLayoutAlgorithm"*)***
  %21 = load %"class.blink::NGLayoutResult"* (%"class.blink::NGSimplifiedOOFLayoutAlgorithm"*)**, %"class.blink::NGLayoutResult"* (%"class.blink::NGSimplifiedOOFLayoutAlgorithm"*)*** %20, align 8
  %22 = load %"class.blink::NGLayoutResult"* (%"class.blink::NGSimplifiedOOFLayoutAlgorithm"*)*, %"class.blink::NGLayoutResult"* (%"class.blink::NGSimplifiedOOFLayoutAlgorithm"*)** %21, align 8
  %23 = tail call %"class.blink::NGLayoutResult"* %22(%"class.blink::NGSimplifiedOOFLayoutAlgorithm"* %4) #12
  %24 = icmp eq %"class.blink::NGLayoutResult"* %23, null
  br i1 %24, label %108, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %23, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %26) #12
  tail call void @_ZNK5blink11NGBlockNode15AddColumnResultE13scoped_refptrIKNS_14NGLayoutResultEE(%"class.blink::NGBlockNode"* %11, %"class.blink::NGLayoutResult"* nonnull %23) #12
  %27 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %8, align 8
  %28 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %23, i64 0, i32 3, i32 0
  %29 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %28, align 8
  %30 = getelementptr inbounds %"class.absl::optional.2262", %"class.absl::optional.2262"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %30, align 8
  call void @_ZN5blink20NGBoxFragmentBuilder8AddChildERKNS_18NGPhysicalFragmentERKNS_13LogicalOffsetEPKNS_12LayoutInlineEPKNS_13NGMarginStrutEbN4absl8optionalIS4_EENSE_INS_10LayoutUnitEEE(%"class.blink::NGBoxFragmentBuilder"* %27, %"class.blink::NGPhysicalFragment"* dereferenceable(48) %29, %"struct.blink::LogicalOffset"* nonnull dereferenceable(8) %19, %"class.blink::LayoutInline"* null, %"struct.blink::NGMarginStrut"* null, i1 zeroext false, %"class.absl::optional.2262"* nonnull byval(%"class.absl::optional.2262") align 8 %7, i64 0) #12
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #12
  %31 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %112

34:                                               ; preds = %25
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %23) #12
  %35 = bitcast %"class.blink::NGLayoutResult"* %23 to i8*
  call void @free(i8* %35) #12
  br label %112

36:                                               ; preds = %5
  %37 = bitcast %"class.blink::NGSimplifiedOOFLayoutAlgorithm"* %4 to %"class.blink::NGLayoutResult"* (%"class.blink::NGSimplifiedOOFLayoutAlgorithm"*)***
  %38 = load %"class.blink::NGLayoutResult"* (%"class.blink::NGSimplifiedOOFLayoutAlgorithm"*)**, %"class.blink::NGLayoutResult"* (%"class.blink::NGSimplifiedOOFLayoutAlgorithm"*)*** %37, align 8
  %39 = load %"class.blink::NGLayoutResult"* (%"class.blink::NGSimplifiedOOFLayoutAlgorithm"*)*, %"class.blink::NGLayoutResult"* (%"class.blink::NGSimplifiedOOFLayoutAlgorithm"*)** %38, align 8
  %40 = tail call %"class.blink::NGLayoutResult"* %39(%"class.blink::NGSimplifiedOOFLayoutAlgorithm"* %4) #12
  %41 = icmp eq %"class.blink::NGLayoutResult"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %40, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %43) #12
  br label %44

44:                                               ; preds = %36, %42
  tail call void @_ZNK5blink11NGBlockNode19ReplaceColumnResultE13scoped_refptrIKNS_14NGLayoutResultEERKNS_21NGPhysicalBoxFragmentE(%"class.blink::NGBlockNode"* %11, %"class.blink::NGLayoutResult"* %40, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72) %17) #12
  %45 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %40, i64 0, i32 3, i32 0
  %46 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %45, align 8
  %47 = load %"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGContainerFragmentBuilder"** %12, align 8
  tail call void @_ZN5blink26NGContainerFragmentBuilder12ReplaceChildEjRKNS_18NGPhysicalFragmentENS_13LogicalOffsetE(%"class.blink::NGContainerFragmentBuilder"* %47, i32 %1, %"class.blink::NGPhysicalFragment"* dereferenceable(48) %46, i64 %2) #12
  %48 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 7
  %49 = load %"class.WTF::Vector.2207"*, %"class.WTF::Vector.2207"** %48, align 8
  %50 = icmp eq %"class.WTF::Vector.2207"* %49, null
  br i1 %50, label %100, label %51

51:                                               ; preds = %44
  %52 = tail call dereferenceable(16) %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* @_ZN3WTF6VectorIN5blink21NGOutOfFlowLayoutPart17MulticolChildInfoELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2207"* nonnull %49, i32 %1) #12
  %53 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo", %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* %52, i64 0, i32 1
  %54 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %53, align 8
  %55 = icmp eq %"class.blink::NGBlockBreakToken"* %54, null
  br i1 %55, label %83, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %46, i64 0, i32 4, i32 0
  %58 = bitcast %"class.blink::NGBreakToken"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %54, i64 0, i32 4
  %61 = load i32, i32* %60, align 8
  %62 = add i32 %61, -1
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %54, i64 0, i32 5, i64 %63
  %65 = bitcast %"class.blink::NGBreakToken"** %64 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = bitcast i8* %67 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %68) #12
  %69 = bitcast i8* %67 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %56
  %73 = bitcast i8* %66 to %"class.blink::NGBreakToken"*
  %74 = bitcast i8* %66 to void (%"class.blink::NGBreakToken"*)***
  %75 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %75, i64 1
  %77 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %76, align 8
  tail call void %77(%"class.blink::NGBreakToken"* nonnull %73) #12
  br label %78

78:                                               ; preds = %56, %72
  %79 = bitcast %"class.blink::NGBreakToken"** %64 to i64*
  store i64 %59, i64* %79, align 8
  %80 = inttoptr i64 %59 to i8*
  %81 = getelementptr inbounds i8, i8* %80, i64 8
  %82 = bitcast i8* %81 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %82) #12
  br label %83

83:                                               ; preds = %51, %78
  %84 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* %52 to %"class.base::RefCounted.1873"***
  %85 = load %"class.base::RefCounted.1873"**, %"class.base::RefCounted.1873"*** %84, align 8
  %86 = load %"class.base::RefCounted.1873"*, %"class.base::RefCounted.1873"** %85, align 8
  %87 = getelementptr inbounds %"class.base::RefCounted.1873", %"class.base::RefCounted.1873"* %86, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %87) #12
  %88 = getelementptr inbounds %"class.base::RefCounted.1873", %"class.base::RefCounted.1873"* %86, i64 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %83
  %92 = bitcast %"class.base::RefCounted.1873"* %86 to %"class.blink::NGPhysicalFragment"*
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* %92) #12
  br label %93

93:                                               ; preds = %83, %91
  %94 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* %52 to %class.scoped_refptr.1871**
  %95 = load %class.scoped_refptr.1871*, %class.scoped_refptr.1871** %94, align 8
  %96 = getelementptr inbounds %class.scoped_refptr.1871, %class.scoped_refptr.1871* %95, i64 0, i32 0
  store %"class.blink::NGPhysicalFragment"* %46, %"class.blink::NGPhysicalFragment"** %96, align 8
  %97 = icmp eq %"class.blink::NGPhysicalFragment"* %46, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %46, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %99) #12
  br label %100

100:                                              ; preds = %98, %93, %44
  br i1 %41, label %112, label %101

101:                                              ; preds = %100
  %102 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %40, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %102) #12
  %103 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %112

106:                                              ; preds = %101
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %40) #12
  %107 = bitcast %"class.blink::NGLayoutResult"* %40 to i8*
  tail call void @free(i8* %107) #12
  br label %112

108:                                              ; preds = %18
  tail call void @_ZNK5blink11NGBlockNode15AddColumnResultE13scoped_refptrIKNS_14NGLayoutResultEE(%"class.blink::NGBlockNode"* %11, %"class.blink::NGLayoutResult"* null) #12
  %109 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %8, align 8
  %110 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** inttoptr (i64 40 to %"class.blink::NGPhysicalFragment"**), align 8
  %111 = getelementptr inbounds %"class.absl::optional.2262", %"class.absl::optional.2262"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %111, align 8
  call void @_ZN5blink20NGBoxFragmentBuilder8AddChildERKNS_18NGPhysicalFragmentERKNS_13LogicalOffsetEPKNS_12LayoutInlineEPKNS_13NGMarginStrutEbN4absl8optionalIS4_EENSE_INS_10LayoutUnitEEE(%"class.blink::NGBoxFragmentBuilder"* %109, %"class.blink::NGPhysicalFragment"* dereferenceable(48) %110, %"struct.blink::LogicalOffset"* nonnull dereferenceable(8) %19, %"class.blink::LayoutInline"* null, %"struct.blink::NGMarginStrut"* null, i1 zeroext false, %"class.absl::optional.2262"* nonnull byval(%"class.absl::optional.2262") align 8 %7, i64 0) #12
  br label %112

112:                                              ; preds = %108, %106, %101, %100, %34, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEED2Ev(%"class.blink::NGLayoutAlgorithm"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 4
  tail call void @_ZN5blink20NGBoxFragmentBuilderD2Ev(%"class.blink::NGBoxFragmentBuilder"* %3) #12
  %4 = getelementptr inbounds %"class.blink::NGLayoutAlgorithm", %"class.blink::NGLayoutAlgorithm"* %0, i64 0, i32 3, i32 0
  %5 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %4, align 8
  %6 = icmp eq %"class.blink::NGBlockBreakToken"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %5, i64 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %8, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %9) #12
  %10 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %8, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %8, i64 -2
  %15 = bitcast %"class.base::RefCounted.1722"* %14 to %"class.blink::NGBreakToken"*
  %16 = bitcast %"class.base::RefCounted.1722"* %14 to void (%"class.blink::NGBreakToken"*)***
  %17 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %17, i64 1
  %19 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %18, align 8
  tail call void %19(%"class.blink::NGBreakToken"* nonnull %15) #12
  br label %20

20:                                               ; preds = %1, %7, %13
  ret void
}

declare i32 @_ZNK5blink20NGBoxFragmentBuilder37BlockOffsetAdjustmentForFragmentainerENS_10LayoutUnitE(%"class.blink::NGBoxFragmentBuilder"*, i32) local_unnamed_addr #2

declare void @_ZN5blink26NGContainerFragmentBuilder26PropagateOOFPositionedInfoERKNS_18NGPhysicalFragmentENS_13LogicalOffsetES4_S4_PKNS_12LayoutInlineENS_10LayoutUnitEPKNS_17NGContainingBlockIS4_EES4_(%"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGPhysicalFragment"* dereferenceable(48), i64, i64, i64, %"class.blink::LayoutInline"*, i32, %"struct.blink::NGContainingBlock"*, i64) local_unnamed_addr #2

declare void @_ZN5blink30NGSimplifiedOOFLayoutAlgorithm21AppendOutOfFlowResultE13scoped_refptrIKNS_14NGLayoutResultEE(%"class.blink::NGSimplifiedOOFLayoutAlgorithm"*, %"class.blink::NGLayoutResult"*) local_unnamed_addr #2

declare void @_ZNK5blink11NGBlockNode25CopyChildFragmentPositionERKNS_21NGPhysicalBoxFragmentENS_14PhysicalOffsetES3_PKNS_17NGBlockBreakTokenE(%"class.blink::NGBlockNode"*, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72), i64, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72), %"class.blink::NGBlockBreakToken"*) local_unnamed_addr #2

declare i64 @_ZNK5blink13LogicalOffset17ConvertToPhysicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::LogicalOffset"*, i16, i64, i64) local_unnamed_addr #2

declare void @_ZNK5blink11NGBlockNode15AddColumnResultE13scoped_refptrIKNS_14NGLayoutResultEE(%"class.blink::NGBlockNode"*, %"class.blink::NGLayoutResult"*) local_unnamed_addr #2

declare void @_ZNK5blink11NGBlockNode19ReplaceColumnResultE13scoped_refptrIKNS_14NGLayoutResultEERKNS_21NGPhysicalBoxFragmentE(%"class.blink::NGBlockNode"*, %"class.blink::NGLayoutResult"*, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink26NGContainerFragmentBuilder12ReplaceChildEjRKNS_18NGPhysicalFragmentENS_13LogicalOffsetE(%"class.blink::NGContainerFragmentBuilder"*, i32, %"class.blink::NGPhysicalFragment"* dereferenceable(48), i64) local_unnamed_addr #2

declare void @_ZN5blink31CreateConstraintSpaceForColumnsERKNS_17NGConstraintSpaceENS_11LogicalSizeES3_bb(%"class.blink::NGConstraintSpace"* sret, %"class.blink::NGConstraintSpace"* dereferenceable(32), i64, i64, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #5

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK5blink21NGOutOfFlowLayoutPart25ToStaticPositionForLegacyENS_23NGLogicalStaticPositionE(%"class.blink::NGOutOfFlowLayoutPart"* nocapture readonly, i64, i64) local_unnamed_addr #6 align 2 {
  %4 = lshr i64 %1, 32
  %5 = trunc i64 %4 to i32
  %6 = getelementptr inbounds %"class.blink::NGOutOfFlowLayoutPart", %"class.blink::NGOutOfFlowLayoutPart"* %0, i64 0, i32 0
  %7 = load %"class.blink::NGBoxFragmentBuilder"*, %"class.blink::NGBoxFragmentBuilder"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %7, i64 0, i32 49, i32 0
  %9 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %8, align 8
  %10 = icmp eq %"class.blink::NGBlockBreakToken"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %9, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %9, i64 0, i32 2, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 0
  %17 = select i1 %16, i32 -2147483648, i32 2147483647
  %18 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 %15) #12
  %19 = extractvalue { i32, i1 } %18, 1
  %20 = extractvalue { i32, i1 } %18, 0
  %21 = select i1 %19, i32 %17, i32 %20, !prof !4
  %22 = icmp slt i32 %21, 0
  %23 = select i1 %22, i32 -2147483648, i32 2147483647
  %24 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %5, i32 %21) #12
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 %23, i32 %26, !prof !4
  br label %28

28:                                               ; preds = %3, %11
  %29 = phi i32 [ %5, %3 ], [ %27, %11 ]
  %30 = zext i32 %29 to i64
  %31 = shl nuw i64 %30, 32
  %32 = and i64 %1, 4294967295
  %33 = or i64 %31, %32
  %34 = insertvalue { i64, i64 } undef, i64 %33, 0
  %35 = insertvalue { i64, i64 } %34, i64 %2, 1
  ret { i64, i64 } %35
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #2

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #2

declare %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #2

declare %"class.WTF::ListHashSet.2226"* @_ZNK5blink11LayoutBlock25PositionedObjectsInternalEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGConstraintSpace8RareDataC2ERKS1_(%"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"* dereferenceable(88)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %1 to i64*
  %5 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %0 to i64*
  %6 = load i64, i64* %4, align 8
  store i64 %6, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 1, i32 0
  %9 = load i32, i32* %7, align 8
  store i32 %9, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 2, i32 0
  %11 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 2, i32 0
  %12 = load i32, i32* %10, align 4
  store i32 %12, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 3
  %15 = bitcast %"struct.blink::NGBfcOffset"* %14 to i64*
  %16 = bitcast %"struct.blink::NGBfcOffset"* %13 to i64*
  %17 = load i64, i64* %15, align 8
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 4, i32 0
  %19 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 4, i32 0
  %20 = load i32, i32* %18, align 8
  store i32 %20, i32* %19, align 8
  %21 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 5, i32 0
  %22 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 5, i32 0
  %23 = load i32, i32* %21, align 4
  store i32 %23, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 6
  %25 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 6
  %26 = load i16, i16* %25, align 8
  %27 = and i16 %26, 7
  %28 = load i16, i16* %24, align 8
  %29 = and i16 %28, -8
  %30 = or i16 %29, %27
  store i16 %30, i16* %24, align 8
  %31 = load i16, i16* %25, align 8
  %32 = and i16 %31, 8
  %33 = and i16 %30, -9
  %34 = or i16 %33, %32
  store i16 %34, i16* %24, align 8
  %35 = load i16, i16* %25, align 8
  %36 = and i16 %35, 16
  %37 = and i16 %34, -17
  %38 = or i16 %37, %36
  store i16 %38, i16* %24, align 8
  %39 = load i16, i16* %25, align 8
  %40 = and i16 %39, 32
  %41 = and i16 %38, -33
  %42 = or i16 %41, %40
  store i16 %42, i16* %24, align 8
  %43 = load i16, i16* %25, align 8
  %44 = and i16 %43, 64
  %45 = and i16 %42, -65
  %46 = or i16 %45, %44
  store i16 %46, i16* %24, align 8
  %47 = load i16, i16* %25, align 8
  %48 = and i16 %47, 384
  %49 = and i16 %46, -385
  %50 = or i16 %49, %48
  store i16 %50, i16* %24, align 8
  %51 = load i16, i16* %25, align 8
  %52 = and i16 %51, 512
  %53 = and i16 %50, -513
  %54 = or i16 %53, %52
  store i16 %54, i16* %24, align 8
  %55 = load i16, i16* %25, align 8
  %56 = and i16 %55, 1024
  %57 = and i16 %54, -1025
  %58 = or i16 %57, %56
  store i16 %58, i16* %24, align 8
  %59 = zext i16 %27 to i32
  switch i32 %59, label %117 [
    i32 6, label %112
    i32 1, label %60
    i32 2, label %65
    i32 3, label %70
    i32 4, label %85
    i32 5, label %100
  ]

60:                                               ; preds = %2
  %61 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %62 = bitcast %union.anon.1727* %61 to i8*
  %63 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7
  %64 = bitcast %union.anon.1727* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %64, i64 44, i1 false)
  br label %117

65:                                               ; preds = %2
  %66 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %67 = bitcast %union.anon.1727* %66 to i8*
  %68 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7
  %69 = bitcast %union.anon.1727* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %69, i64 40, i1 false)
  br label %117

70:                                               ; preds = %2
  %71 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %72 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7
  %73 = bitcast %union.anon.1727* %72 to %"class.blink::NGTableConstraintSpaceData"**
  %74 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %73, align 8
  %75 = bitcast %union.anon.1727* %71 to %"class.blink::NGTableConstraintSpaceData"**
  store %"class.blink::NGTableConstraintSpaceData"* %74, %"class.blink::NGTableConstraintSpaceData"** %75, align 8
  %76 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %74, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %78) #12
  br label %79

79:                                               ; preds = %70, %77
  %80 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1
  %81 = bitcast [40 x i8]* %80 to i32*
  %82 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 1
  %83 = bitcast [40 x i8]* %82 to i32*
  %84 = load i32, i32* %83, align 8
  store i32 %84, i32* %81, align 8
  br label %117

85:                                               ; preds = %2
  %86 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %87 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7
  %88 = bitcast %union.anon.1727* %87 to %"class.blink::NGTableConstraintSpaceData"**
  %89 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %88, align 8
  %90 = bitcast %union.anon.1727* %86 to %"class.blink::NGTableConstraintSpaceData"**
  store %"class.blink::NGTableConstraintSpaceData"* %89, %"class.blink::NGTableConstraintSpaceData"** %90, align 8
  %91 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %89, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %89, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %93) #12
  br label %94

94:                                               ; preds = %85, %92
  %95 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1
  %96 = bitcast [40 x i8]* %95 to i32*
  %97 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 1
  %98 = bitcast [40 x i8]* %97 to i32*
  %99 = load i32, i32* %98, align 8
  store i32 %99, i32* %96, align 8
  br label %117

100:                                              ; preds = %2
  %101 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %102 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %101, align 8
  %103 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  store %"class.blink::SerializedScriptValue"* %102, %"class.blink::SerializedScriptValue"** %103, align 8
  %104 = icmp eq %"class.blink::SerializedScriptValue"* %102, null
  br i1 %104, label %117, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = atomicrmw add i32* %106, i32 1 monotonic
  %108 = icmp sgt i32 %107, 0
  br i1 %108, label %117, label %109

109:                                              ; preds = %105
  %110 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #12
  %111 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #12
  br label %117

112:                                              ; preds = %2
  %113 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %114 = bitcast %union.anon.1727* %113 to i8*
  %115 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7
  %116 = bitcast %union.anon.1727* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %116, i64 12, i1 false)
  br label %117

117:                                              ; preds = %109, %105, %100, %2, %112, %94, %79, %65, %60
  ret void
}

declare void @_ZN5blink24NGExclusionSpaceInternalC1ERKS0_(%"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"* dereferenceable(40)) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #5

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #12
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIN5blink6NGLinkEEC2EPKS2_PS2_S5_(%"class.base::CheckedContiguousIterator"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"struct.blink::NGLink"*, align 8
  %8 = alloca %"struct.blink::NGLink"*, align 8
  %9 = alloca %"struct.blink::NGLink"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"struct.blink::NGLink"* %1, %"struct.blink::NGLink"** %7, align 8
  store %"struct.blink::NGLink"* %2, %"struct.blink::NGLink"** %8, align 8
  store %"struct.blink::NGLink"* %3, %"struct.blink::NGLink"** %9, align 8
  %14 = ptrtoint %"struct.blink::NGLink"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"struct.blink::NGLink"* %2 to i64
  %18 = bitcast %"struct.blink::NGLink"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"struct.blink::NGLink"* %3 to i64
  %21 = bitcast %"struct.blink::NGLink"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"struct.blink::NGLink"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"struct.blink::NGLink"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %30 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* %29, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %8, align 8
  %43 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %9, align 8
  %44 = icmp ugt %"struct.blink::NGLink"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #12
  %49 = bitcast %"struct.blink::NGLink"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %48, i8* %50) #12
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #12
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIN5blink6NGLinkEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %11, align 8
  %15 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %12, align 8
  %16 = icmp eq %"struct.blink::NGLink"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %20, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %32, align 8
  %36 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %33, align 8
  %37 = icmp eq %"struct.blink::NGLink"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"struct.blink::NGLink"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %42 = bitcast %"struct.blink::NGLink"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* %41, i8* %43) #12
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #12
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #12
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  ret void
}

declare i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"struct.blink::PhysicalSize"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEC2EPKS2_PS2_S5_(%"class.base::CheckedContiguousIterator.2274"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, align 8
  %8 = alloca %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, align 8
  %9 = alloca %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %1, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7, align 8
  store %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %2, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8, align 8
  store %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %3, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %9, align 8
  %14 = ptrtoint %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator.2274"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2274", %"class.base::CheckedContiguousIterator.2274"* %0, i64 0, i32 1
  %17 = ptrtoint %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %2 to i64
  %18 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2274", %"class.base::CheckedContiguousIterator.2274"* %0, i64 0, i32 2
  %20 = ptrtoint %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %3 to i64
  %21 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %30 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* %29, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8, align 8
  %43 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %9, align 8
  %44 = icmp ugt %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #12
  %49 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %48, i8* %50) #12
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #12
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator.2274"*, %"class.base::CheckedContiguousIterator.2274"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2274", %"class.base::CheckedContiguousIterator.2274"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2274", %"class.base::CheckedContiguousIterator.2274"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %11, align 8
  %15 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %12, align 8
  %16 = icmp eq %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator.2274"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %21 = bitcast %"class.base::CheckedContiguousIterator.2274"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %20, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2274", %"class.base::CheckedContiguousIterator.2274"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2274", %"class.base::CheckedContiguousIterator.2274"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %32, align 8
  %36 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %33, align 8
  %37 = icmp eq %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  %42 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* %41, i8* %43) #12
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #12
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #12
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26NGContainerFragmentBuilderD2Ev(%"class.blink::NGContainerFragmentBuilder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9
  tail call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE5clearEv(%"class.WTF::Vector.1954"* %2)
  %3 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 10
  tail call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE5clearEv(%"class.WTF::Vector.1954"* %3)
  %4 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 11
  tail call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE5clearEv(%"class.WTF::Vector.1954"* %4)
  %5 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 12
  %6 = getelementptr inbounds %"class.WTF::HashMap.1964", %"class.WTF::HashMap.1964"* %5, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.1968"*, %"struct.WTF::KeyValuePair.1968"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.1968"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 12, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %33, label %13

13:                                               ; preds = %9
  %14 = zext i32 %11 to i64
  br label %15

15:                                               ; preds = %30, %13
  %16 = phi i64 [ 0, %13 ], [ %31, %30 ]
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.1968", %"struct.WTF::KeyValuePair.1968"* %7, i64 %16, i32 0
  %18 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %17, align 8
  %19 = icmp eq %"class.blink::LayoutBox"* %18, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  br i1 %19, label %30, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.1968", %"struct.WTF::KeyValuePair.1968"* %7, i64 %16, i32 1, i32 1, i32 2, i32 0
  %22 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %21, align 8
  %23 = icmp eq %"class.blink::NGPhysicalFragment"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #12
  %26 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %22) #12
  br label %30

30:                                               ; preds = %29, %24, %20, %15
  %31 = add nuw nsw i64 %16, 1
  %32 = icmp eq i64 %31, %14
  br i1 %32, label %33, label %15

33:                                               ; preds = %30, %9
  %34 = bitcast %"struct.WTF::KeyValuePair.1968"* %7 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %34) #12
  %35 = bitcast %"class.WTF::HashMap.1964"* %5 to i64*
  store atomic i64 0, i64* %35 monotonic, align 8
  store i32 0, i32* %10, align 8
  %36 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 12, i32 0, i32 2
  store i32 0, i32* %36, align 4
  br label %37

37:                                               ; preds = %1, %33
  %38 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 17, i32 0
  %39 = load %"class.blink::NGEarlyBreak"*, %"class.blink::NGEarlyBreak"** %38, align 8
  %40 = icmp eq %"class.blink::NGEarlyBreak"* %39, null
  br i1 %40, label %48, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NGEarlyBreak", %"class.blink::NGEarlyBreak"* %39, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #12
  %43 = getelementptr inbounds %"class.blink::NGEarlyBreak", %"class.blink::NGEarlyBreak"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  tail call void @_ZN5blink12NGEarlyBreakD2Ev(%"class.blink::NGEarlyBreak"* nonnull %39) #12
  %47 = bitcast %"class.blink::NGEarlyBreak"* %39 to i8*
  tail call void @free(i8* %47) #12
  br label %48

48:                                               ; preds = %37, %41, %46
  %49 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 16, i32 0
  %50 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %49, align 8
  %51 = icmp eq %"class.blink::NGInlineBreakToken"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %50, i64 0, i32 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %53, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #12
  %55 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %53, i64 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %53, i64 -2
  %60 = bitcast %"class.base::RefCounted.1722"* %59 to %"class.blink::NGBreakToken"*
  %61 = bitcast %"class.base::RefCounted.1722"* %59 to void (%"class.blink::NGBreakToken"*)***
  %62 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %62, i64 1
  %64 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %63, align 8
  tail call void %64(%"class.blink::NGBreakToken"* nonnull %60) #12
  br label %65

65:                                               ; preds = %48, %52, %58
  %66 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 15
  %67 = getelementptr inbounds %"class.WTF::Vector.2100", %"class.WTF::Vector.2100"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %class.scoped_refptr.1874*, %class.scoped_refptr.1874** %67, align 8
  %69 = icmp eq %class.scoped_refptr.1874* %68, null
  br i1 %69, label %104, label %70, !prof !3

70:                                               ; preds = %65
  %71 = bitcast %class.scoped_refptr.1874* %68 to i8*
  %72 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 15, i32 0, i32 0, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %102, label %75, !prof !4

75:                                               ; preds = %70
  %76 = zext i32 %73 to i64
  %77 = getelementptr inbounds %class.scoped_refptr.1874, %class.scoped_refptr.1874* %68, i64 %76
  br label %78

78:                                               ; preds = %96, %75
  %79 = phi %class.scoped_refptr.1874* [ %97, %96 ], [ %68, %75 ]
  %80 = getelementptr inbounds %class.scoped_refptr.1874, %class.scoped_refptr.1874* %79, i64 0, i32 0
  %81 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %80, align 8
  %82 = icmp eq %"class.blink::NGBreakToken"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %81, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %84, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %85) #12
  %86 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %84, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %96

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %84, i64 -2
  %91 = bitcast %"class.base::RefCounted.1722"* %90 to %"class.blink::NGBreakToken"*
  %92 = bitcast %"class.base::RefCounted.1722"* %90 to void (%"class.blink::NGBreakToken"*)***
  %93 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %93, i64 1
  %95 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %94, align 8
  tail call void %95(%"class.blink::NGBreakToken"* nonnull %91) #12
  br label %96

96:                                               ; preds = %89, %83, %78
  %97 = getelementptr inbounds %class.scoped_refptr.1874, %class.scoped_refptr.1874* %79, i64 1
  %98 = icmp eq %class.scoped_refptr.1874* %97, %77
  br i1 %98, label %99, label %78

99:                                               ; preds = %96
  store i32 0, i32* %72, align 4
  %100 = bitcast %"class.WTF::Vector.2100"* %66 to i8**
  %101 = load i8*, i8** %100, align 8
  br label %102

102:                                              ; preds = %99, %70
  %103 = phi i8* [ %101, %99 ], [ %71, %70 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %103) #12
  store %class.scoped_refptr.1874* null, %class.scoped_refptr.1874** %67, align 8
  br label %104

104:                                              ; preds = %65, %102
  %105 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 14
  %106 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::Vector.2095", %"class.WTF::Vector.2095"* %105, i64 0, i32 0, i32 0, i32 0
  br i1 %108, label %129, label %110, !prof !4

110:                                              ; preds = %104
  %111 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %109, align 8
  %112 = zext i32 %107 to i64
  %113 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %111, i64 %112
  br label %114

114:                                              ; preds = %125, %110
  %115 = phi %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* [ %126, %125 ], [ %111, %110 ]
  %116 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %115, i64 0, i32 1, i32 0
  %117 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %116, align 8
  %118 = icmp eq %"class.blink::NGPhysicalFragment"* %117, null
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %117, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %120) #12
  %121 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %117, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %119
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %117) #12
  br label %125

125:                                              ; preds = %124, %119, %114
  %126 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %115, i64 1
  %127 = icmp eq %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %126, %113
  br i1 %127, label %128, label %114

128:                                              ; preds = %125
  store i32 0, i32* %106, align 4
  br label %129

129:                                              ; preds = %128, %104
  %130 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %109, align 8
  %131 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 14, i32 0, i32 1, i64 0
  %132 = bitcast i8* %131 to %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*
  %133 = icmp eq %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %130, %132
  br i1 %133, label %136, label %134, !prof !3

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.WTF::Vector.2095", %"class.WTF::Vector.2095"* %105, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2096"* %135, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %130) #12
  br label %136

136:                                              ; preds = %129, %134
  store %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* null, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %109, align 8
  %137 = load %"struct.WTF::KeyValuePair.1968"*, %"struct.WTF::KeyValuePair.1968"** %6, align 8
  %138 = icmp eq %"struct.WTF::KeyValuePair.1968"* %137, null
  br i1 %138, label %165, label %139, !prof !3

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 12, i32 0, i32 1
  %141 = load i32, i32* %140, align 8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %163, label %143

143:                                              ; preds = %139
  %144 = zext i32 %141 to i64
  br label %145

145:                                              ; preds = %160, %143
  %146 = phi i64 [ 0, %143 ], [ %161, %160 ]
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair.1968", %"struct.WTF::KeyValuePair.1968"* %137, i64 %146, i32 0
  %148 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %147, align 8
  %149 = icmp eq %"class.blink::LayoutBox"* %148, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  br i1 %149, label %160, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.1968", %"struct.WTF::KeyValuePair.1968"* %137, i64 %146, i32 1, i32 1, i32 2, i32 0
  %152 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %151, align 8
  %153 = icmp eq %"class.blink::NGPhysicalFragment"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %152, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %155) #12
  %156 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %152, i64 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %154
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %152) #12
  br label %160

160:                                              ; preds = %159, %154, %150, %145
  %161 = add nuw nsw i64 %146, 1
  %162 = icmp eq i64 %161, %144
  br i1 %162, label %163, label %145

163:                                              ; preds = %160, %139
  %164 = bitcast %"struct.WTF::KeyValuePair.1968"* %137 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %164) #12
  store %"struct.WTF::KeyValuePair.1968"* null, %"struct.WTF::KeyValuePair.1968"** %6, align 8
  br label %165

165:                                              ; preds = %136, %163
  %166 = bitcast %"class.WTF::Vector.1954"* %4 to %"class.WTF::ConditionalDestructor.1962"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1962"* %166) #12
  %167 = bitcast %"class.WTF::Vector.1954"* %3 to %"class.WTF::ConditionalDestructor.1962"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1962"* %167) #12
  %168 = bitcast %"class.WTF::Vector.1954"* %2 to %"class.WTF::ConditionalDestructor.1962"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.1962"* %168) #12
  %169 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 8
  tail call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %169) #12
  %170 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 0, i32 6, i32 0
  %171 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %170, align 8
  %172 = icmp eq %"class.blink::NGBreakToken"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %171, i64 0, i32 1, i32 0
  %175 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %174, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %175) #12
  %176 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %174, i64 0, i32 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %186

179:                                              ; preds = %173
  %180 = getelementptr inbounds %"class.base::RefCounted.1722", %"class.base::RefCounted.1722"* %174, i64 -2
  %181 = bitcast %"class.base::RefCounted.1722"* %180 to %"class.blink::NGBreakToken"*
  %182 = bitcast %"class.base::RefCounted.1722"* %180 to void (%"class.blink::NGBreakToken"*)***
  %183 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %182, align 8
  %184 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %183, i64 1
  %185 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %184, align 8
  tail call void %185(%"class.blink::NGBreakToken"* nonnull %181) #12
  br label %186

186:                                              ; preds = %165, %173, %179
  %187 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr* %187) #12
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink10NGGridDataEEclEPS2_(%"struct.std::__1::default_delete.2193"*, %"struct.blink::NGGridData"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.blink::NGGridData"* %1, null
  br i1 %3, label %50, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"** %5, align 8
  %7 = icmp eq %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %6, null
  %8 = bitcast %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %6 to i8*
  br i1 %7, label %15, label %9, !prof !3

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 5, i32 1, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !4

13:                                               ; preds = %9
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %13, %9
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #12
  store %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* null, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"** %5, align 8
  br label %15

15:                                               ; preds = %14, %4
  %16 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.blink::NGGridData::SetData"*, %"struct.blink::NGGridData::SetData"** %16, align 8
  %18 = icmp eq %"struct.blink::NGGridData::SetData"* %17, null
  %19 = bitcast %"struct.blink::NGGridData::SetData"* %17 to i8*
  br i1 %18, label %26, label %20, !prof !3

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24, !prof !4

24:                                               ; preds = %20
  store i32 0, i32* %21, align 4
  br label %25

25:                                               ; preds = %24, %20
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %19) #12
  store %"struct.blink::NGGridData::SetData"* null, %"struct.blink::NGGridData::SetData"** %16, align 8
  br label %26

26:                                               ; preds = %25, %15
  %27 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"** %27, align 8
  %29 = icmp eq %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %28, null
  %30 = bitcast %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* %28 to i8*
  br i1 %29, label %37, label %31, !prof !3

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 4, i32 1, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35, !prof !4

35:                                               ; preds = %31
  store i32 0, i32* %32, align 4
  br label %36

36:                                               ; preds = %35, %31
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %30) #12
  store %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"* null, %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"** %27, align 8
  br label %37

37:                                               ; preds = %36, %26
  %38 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.blink::NGGridData::SetData"*, %"struct.blink::NGGridData::SetData"** %38, align 8
  %40 = icmp eq %"struct.blink::NGGridData::SetData"* %39, null
  %41 = bitcast %"struct.blink::NGGridData::SetData"* %39 to i8*
  br i1 %40, label %48, label %42, !prof !3

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.blink::NGGridData", %"struct.blink::NGGridData"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !4

46:                                               ; preds = %42
  store i32 0, i32* %43, align 4
  br label %47

47:                                               ; preds = %46, %42
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %41) #12
  br label %48

48:                                               ; preds = %37, %47
  %49 = bitcast %"struct.blink::NGGridData"* %1 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %48, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyle"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #12
  %8 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %28

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 -23
  %13 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 1
  %14 = bitcast %"class.base::RefCounted.732"* %13 to %"class.blink::StyleCachedData"**
  %15 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %14, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %14, align 8
  %16 = icmp eq %"class.blink::StyleCachedData"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %18, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %18, align 8
  %20 = icmp eq %"class.WTF::Vector.739"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"* nonnull %19) #12
  %22 = bitcast %"class.WTF::Vector.739"* %19 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %22) #12
  br label %23

23:                                               ; preds = %21, %17
  %24 = bitcast %"class.blink::StyleCachedData"* %15 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %23, %11
  %26 = bitcast %"class.base::RefCounted.732"* %12 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %26) #12
  %27 = bitcast %"class.base::RefCounted.732"* %12 to i8*
  tail call void @free(i8* %27) #12
  br label %28

28:                                               ; preds = %25, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"*, %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.729", %"class.base::RefCounted.729"* %11, i64 2
  %13 = bitcast %"class.base::RefCounted.729"* %12 to %"class.blink::StyleInheritedVariables"**
  %14 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %13, align 8
  %15 = icmp eq %"class.blink::StyleInheritedVariables"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #12
  %18 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %14) #12
  %22 = bitcast %"class.blink::StyleInheritedVariables"* %14 to i8*
  tail call void @free(i8* %22) #12
  br label %23

23:                                               ; preds = %21, %16, %10
  %24 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3 to i8*
  tail call void @free(i8* %24) #12
  br label %25

25:                                               ; preds = %1, %5, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 7, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %26, align 8
  %28 = icmp eq %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #12
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"* nonnull %27) #12
  %35 = bitcast %"class.blink::ComputedStyleBase::StyleSurroundData"* %27 to i8*
  tail call void @free(i8* %35) #12
  br label %36

36:                                               ; preds = %25, %29, %34
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %37, align 8
  %39 = icmp eq %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #12
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %46, i64 2
  %48 = bitcast %"class.base::RefCounted.721"* %47 to %"class.blink::FillLayer"*
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %48) #12
  %49 = bitcast %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38 to i8*
  tail call void @free(i8* %49) #12
  br label %50

50:                                               ; preds = %36, %40, %45
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %51, align 8
  %53 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #12
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %52) #12
  %60 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %52 to i8*
  tail call void @free(i8* %60) #12
  br label %61

61:                                               ; preds = %50, %54, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 4, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %62, align 8
  %64 = icmp eq %"class.blink::ComputedStyleBase::StyleSVGData"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %66) #12
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  tail call void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"* nonnull %63) #12
  %71 = bitcast %"class.blink::ComputedStyleBase::StyleSVGData"* %63 to i8*
  tail call void @free(i8* %71) #12
  br label %72

72:                                               ; preds = %61, %65, %70
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %73, align 8
  %75 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #12
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* nonnull %74) #12
  %82 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74 to i8*
  tail call void @free(i8* %82) #12
  br label %83

83:                                               ; preds = %72, %76, %81
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %84, align 8
  %86 = icmp eq %"class.blink::ComputedStyleBase::StyleVisualData"* %85, null
  br i1 %86, label %118, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #12
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %118

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %97) #12
  br label %98

98:                                               ; preds = %96, %92
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 8
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %103) #12
  br label %104

104:                                              ; preds = %102, %98
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 8
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %109) #12
  br label %110

110:                                              ; preds = %108, %104
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 8
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %115) #12
  br label %116

116:                                              ; preds = %114, %110
  %117 = bitcast %"class.blink::ComputedStyleBase::StyleVisualData"* %85 to i8*
  tail call void @free(i8* %117) #12
  br label %118

118:                                              ; preds = %83, %87, %116
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %119, align 8
  %121 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %123) #12
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  tail call void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* nonnull %120) #12
  %128 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120 to i8*
  tail call void @free(i8* %128) #12
  br label %129

129:                                              ; preds = %118, %122, %127
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %130, align 8
  %132 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, null
  br i1 %132, label %160, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %134) #12
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %160

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 8
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %143) #12
  br label %144

144:                                              ; preds = %142, %138
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 1, i32 0, i32 0
  %146 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %145, align 8
  %147 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #12
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %154, i64 2
  %156 = bitcast %"class.base::RefCounted.4"* %155 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %156) #12
  %157 = bitcast %"class.blink::ComputedStyleBase::StyleFontData"* %146 to i8*
  tail call void @free(i8* %157) #12
  br label %158

158:                                              ; preds = %153, %148, %144
  %159 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedData"* %131 to i8*
  tail call void @free(i8* %159) #12
  br label %160

160:                                              ; preds = %129, %133, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %42, label %5, !prof !4

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %8 = zext i32 %3 to i64
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 %8
  br label %10

10:                                               ; preds = %5, %38
  %11 = phi %class.scoped_refptr* [ %39, %38 ], [ %7, %5 ]
  %12 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 0, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = icmp eq %"class.blink::ComputedStyle"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #12
  %18 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %38

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 -23
  %23 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 1
  %24 = bitcast %"class.base::RefCounted.732"* %23 to %"class.blink::StyleCachedData"**
  %25 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %24, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %24, align 8
  %26 = icmp eq %"class.blink::StyleCachedData"* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %28, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %28, align 8
  %30 = icmp eq %"class.WTF::Vector.739"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"* nonnull %29) #12
  %32 = bitcast %"class.WTF::Vector.739"* %29 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %32) #12
  br label %33

33:                                               ; preds = %31, %27
  %34 = bitcast %"class.blink::StyleCachedData"* %25 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %33, %21
  %36 = bitcast %"class.base::RefCounted.732"* %22 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %36) #12
  %37 = bitcast %"class.base::RefCounted.732"* %22 to i8*
  tail call void @free(i8* %37) #12
  br label %38

38:                                               ; preds = %15, %35, %10
  %39 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 1
  %40 = icmp eq %class.scoped_refptr* %39, %9
  br i1 %40, label %41, label %10

41:                                               ; preds = %38
  store i32 0, i32* %2, align 4
  br label %42

42:                                               ; preds = %1, %41
  %43 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = load %class.scoped_refptr*, %class.scoped_refptr** %43, align 8
  %45 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = bitcast i8* %45 to %class.scoped_refptr*
  %47 = icmp eq %class.scoped_refptr* %44, %46
  br i1 %47, label %50, label %48, !prof !3

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2314"* %49, %class.scoped_refptr* %44) #12
  br label %50

50:                                               ; preds = %42, %48
  store %class.scoped_refptr* null, %class.scoped_refptr** %43, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2314"*, %class.scoped_refptr*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %class.scoped_refptr* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %2, align 8
  %4 = icmp eq %"class.blink::StyleInheritedVariables"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %3) #12
  %11 = bitcast %"class.blink::StyleInheritedVariables"* %3 to i8*
  tail call void @free(i8* %11) #12
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 1
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %13) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #12
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, null
  br i1 %27, label %73, label %28, !prof !3

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %68, %32
  %35 = phi i64 [ 0, %32 ], [ %69, %68 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35
  %37 = bitcast %"struct.WTF::KeyValuePair"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, inttoptr (i64 -1 to i8*)
  br i1 %39, label %68, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35, i32 1, i32 0
  %42 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %41, align 8
  %43 = icmp eq %"class.blink::CSSVariableData"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #12
  %46 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %42) #12
  %50 = bitcast %"class.blink::CSSVariableData"* %42 to i8*
  tail call void @free(i8* %50) #12
  br label %51

51:                                               ; preds = %49, %44, %40
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #12
  br label %68

68:                                               ; preds = %67, %64, %51, %34
  %69 = add nuw nsw i64 %35, 1
  %70 = icmp eq i64 %69, %33
  br i1 %70, label %71, label %34

71:                                               ; preds = %68, %28
  %72 = bitcast %"struct.WTF::KeyValuePair"* %26 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %25, align 8
  br label %73

73:                                               ; preds = %24, %71
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #12
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !3

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !4

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #12
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !3

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !4

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #12
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.630"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #12
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #12
  br label %55

55:                                               ; preds = %49, %53
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #12
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #12
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #12
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #12
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #12
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 8
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %90) #12
  br label %91

91:                                               ; preds = %89, %85
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 8
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %96) #12
  br label %97

97:                                               ; preds = %91, %95
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1, i32 2
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 8
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %102) #12
  br label %103

103:                                              ; preds = %101, %97
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0, i32 2
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 8
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %108) #12
  br label %109

109:                                              ; preds = %103, %107
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 8
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %114) #12
  br label %115

115:                                              ; preds = %113, %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 8
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %120) #12
  br label %121

121:                                              ; preds = %115, %119
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %122, align 8
  %124 = icmp eq %"class.blink::NinePieceImageData"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #12
  %127 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %123) #12
  %131 = bitcast %"class.blink::NinePieceImageData"* %123 to i8*
  tail call void @free(i8* %131) #12
  br label %132

132:                                              ; preds = %121, %125, %130
  ret void
}

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #12
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #12
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #12
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #12
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #12
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %76 = icmp eq %"class.blink::PersistentNode"* %75, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %79 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %78, i64 0, i32 1
  %80 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %79) #12
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84, !prof !4

82:                                               ; preds = %77
  %83 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %79, i8* %83) #12
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i8* [ %83, %82 ], [ %80, %77 ]
  %86 = bitcast i8* %85 to %"class.blink::ThreadState"**
  %87 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %88, align 8
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %91, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  br label %96

96:                                               ; preds = %73, %84
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #12
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #12
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 8
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %2) #12
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleStopData"*, %"class.blink::ComputedStyleBase::StyleStopData"** %3, align 8
  %5 = icmp eq %"class.blink::ComputedStyleBase::StyleStopData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #12
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ComputedStyleBase::StyleStopData"* %4 to i8*
  tail call void @free(i8* %12) #12
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"*, %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #12
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 6
  %25 = bitcast %"class.base::RefCounted.709"* %24 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %25) #12
  %26 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 4
  %27 = bitcast %"class.base::RefCounted.709"* %26 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %27) #12
  %28 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 2
  %29 = bitcast %"class.base::RefCounted.709"* %28 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %29) #12
  %30 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15 to i8*
  tail call void @free(i8* %30) #12
  br label %31

31:                                               ; preds = %13, %17, %23
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %32, align 8
  %34 = icmp eq %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #12
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  tail call void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"* nonnull %33) #12
  %41 = bitcast %"class.blink::ComputedStyleBase::StyleStrokeData"* %33 to i8*
  tail call void @free(i8* %41) #12
  br label %42

42:                                               ; preds = %31, %35, %40
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 4, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleFillData"*, %"class.blink::ComputedStyleBase::StyleFillData"** %43, align 8
  %45 = icmp eq %"class.blink::ComputedStyleBase::StyleFillData"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #12
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 8
  %54 = bitcast %"class.base::RefCounted.679"* %53 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %54) #12
  %55 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 2
  %56 = bitcast %"class.base::RefCounted.679"* %55 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %56) #12
  %57 = bitcast %"class.blink::ComputedStyleBase::StyleFillData"* %44 to i8*
  tail call void @free(i8* %57) #12
  br label %58

58:                                               ; preds = %42, %46, %52
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleGeometryData"*, %"class.blink::ComputedStyleBase::StyleGeometryData"** %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #12
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"* nonnull %60) #12
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleGeometryData"* %60 to i8*
  tail call void @free(i8* %68) #12
  br label %69

69:                                               ; preds = %58, %62, %67
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleMiscData"*, %"class.blink::ComputedStyleBase::StyleMiscData"** %70, align 8
  %72 = icmp eq %"class.blink::ComputedStyleBase::StyleMiscData"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %75) #12
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 1, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.base::RefCounted.654", %"class.base::RefCounted.654"* %74, i64 1
  %85 = bitcast %"class.base::RefCounted.654"* %84 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %85) #12
  br label %86

86:                                               ; preds = %83, %79
  %87 = bitcast %"class.blink::ComputedStyleBase::StyleMiscData"* %71 to i8*
  tail call void @free(i8* %87) #12
  br label %88

88:                                               ; preds = %69, %73, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.680, %class.scoped_refptr.680* %0, i64 0, i32 0
  %3 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %2, align 8
  %4 = icmp eq %"class.blink::StyleSVGResource"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #12
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %27
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #12
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !4

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #12
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %42, align 8
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %43, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::PersistentRegion"* %43 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %45, align 8
  br label %50

50:                                               ; preds = %27, %38
  %51 = bitcast %"class.blink::StyleSVGResource"* %3 to i8*
  tail call void @free(i8* %51) #12
  br label %52

52:                                               ; preds = %5, %50, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 4
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %14) #12
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 3
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %15) #12
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 2, i32 0
  %17 = load %"class.base::RefCountedData.699"*, %"class.base::RefCountedData.699"** %16, align 8
  %18 = icmp eq %"class.base::RefCountedData.699"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %53

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 2
  %26 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to %"class.blink::Length"**
  %27 = load %"class.blink::Length"*, %"class.blink::Length"** %26, align 8
  %28 = icmp eq %"class.blink::Length"* %27, null
  br i1 %28, label %51, label %29, !prof !3

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Length"* %27 to i8*
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34, !prof !4

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 %35
  br label %37

37:                                               ; preds = %43, %34
  %38 = phi %"class.blink::Length"* [ %44, %43 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 8
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %38) #12
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 1
  %45 = icmp eq %"class.blink::Length"* %44, %36
  br i1 %45, label %46, label %37

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  %47 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %29
  %50 = phi i8* [ %48, %46 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  br label %51

51:                                               ; preds = %49, %24
  %52 = bitcast %"class.base::RefCountedData.699"* %17 to i8*
  tail call void @_ZdlPv(i8* %52) #13
  br label %53

53:                                               ; preds = %13, %19, %51
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 1, i32 0
  %45 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %44, align 8
  %46 = icmp eq %"class.blink::StylePath"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %45, i64 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #12
  %50 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 -2
  %55 = bitcast %"class.base::RefCounted.480"* %54 to %"class.blink::BasicShape"*
  %56 = bitcast %"class.base::RefCounted.480"* %54 to void (%"class.blink::BasicShape"*)***
  %57 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %57, i64 1
  %59 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %58, align 8
  tail call void %59(%"class.blink::BasicShape"* nonnull %55) #12
  br label %60

60:                                               ; preds = %43, %47, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #12
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !4

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #12
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %37, align 8
  %39 = icmp eq %"class.blink::ShadowList"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #12
  %43 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 2
  %48 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !4

51:                                               ; preds = %46
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = bitcast %"class.base::RefCounted.300"* %47 to %"class.blink::ShadowData"**
  %54 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %53, align 8
  %55 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 6
  %56 = bitcast %"class.base::RefCounted.300"* %55 to %"class.blink::ShadowData"*
  %57 = icmp eq %"class.blink::ShadowData"* %54, %56
  br i1 %57, label %60, label %58, !prof !3

58:                                               ; preds = %52
  %59 = bitcast %"class.base::RefCounted.300"* %47 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %59, %"class.blink::ShadowData"* %54) #12
  br label %60

60:                                               ; preds = %58, %52
  %61 = bitcast %"class.blink::ShadowList"* %38 to i8*
  tail call void @free(i8* %61) #12
  br label %62

62:                                               ; preds = %36, %40, %60
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.scoped_refptr.638*, %class.scoped_refptr.638** %64, align 8
  %66 = icmp eq %class.scoped_refptr.638* %65, null
  br i1 %66, label %101, label %67, !prof !3

67:                                               ; preds = %62
  %68 = bitcast %class.scoped_refptr.638* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !4

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %65, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %class.scoped_refptr.638* [ %94, %93 ], [ %65, %72 ]
  %77 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #12
  %83 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted.483"* %87 to %"class.blink::TransformOperation"*
  %89 = bitcast %"class.base::RefCounted.483"* %87 to void (%"class.blink::TransformOperation"*)***
  %90 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %90, i64 1
  %92 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %91, align 8
  tail call void %92(%"class.blink::TransformOperation"* nonnull %88) #12
  br label %93

93:                                               ; preds = %86, %80, %75
  %94 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 1
  %95 = icmp eq %class.scoped_refptr.638* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %69, align 4
  %97 = bitcast %"class.blink::TransformOperations"* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %67
  %100 = phi i8* [ %98, %96 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #12
  store %class.scoped_refptr.638* null, %class.scoped_refptr.638** %64, align 8
  br label %101

101:                                              ; preds = %62, %99
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %102, align 8
  %104 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %106) #12
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  tail call void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* nonnull %103) #12
  %111 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103 to i8*
  tail call void @free(i8* %111) #12
  br label %112

112:                                              ; preds = %101, %105, %110
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %113, align 8
  %115 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #12
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* nonnull %114) #12
  %122 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114 to i8*
  tail call void @free(i8* %122) #12
  br label %123

123:                                              ; preds = %112, %116, %121
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"*, %"class.blink::ShadowData"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"class.blink::ShadowData"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #12
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %51 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %50, align 8
  %52 = icmp eq %"class.blink::NinePieceImageData"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #12
  %55 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %51) #12
  %59 = bitcast %"class.blink::NinePieceImageData"* %51 to i8*
  tail call void @free(i8* %59) #12
  br label %60

60:                                               ; preds = %49, %53, %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 13
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %61) #12
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %63, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %100, label %66, !prof !3

66:                                               ; preds = %60
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %98, label %71, !prof !4

71:                                               ; preds = %66
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %72
  br label %74

74:                                               ; preds = %92, %71
  %75 = phi %"class.WTF::String"* [ %93, %92 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #12
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 1
  %94 = icmp eq %"class.WTF::String"* %93, %73
  br i1 %94, label %95, label %74

95:                                               ; preds = %92
  store i32 0, i32* %68, align 4
  %96 = bitcast %"class.WTF::Vector.630"* %62 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %66
  %99 = phi i8* [ %97, %95 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %63, align 8
  br label %100

100:                                              ; preds = %60, %98
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %102 = load %"class.blink::StyleNonInheritedVariables"*, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  store %"class.blink::StyleNonInheritedVariables"* null, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  %103 = icmp eq %"class.blink::StyleNonInheritedVariables"* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %105) #12
  %106 = bitcast %"class.blink::StyleNonInheritedVariables"* %102 to i8*
  tail call void @free(i8* %106) #12
  br label %107

107:                                              ; preds = %100, %104
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 10
  tail call void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"* %108, %"class.blink::PaintImages"* null) #12
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %110 = load %"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"** %109, align 8
  store %"class.blink::CSSTransitionData"* null, %"class.blink::CSSTransitionData"** %109, align 8
  %111 = icmp eq %"class.blink::CSSTransitionData"* %110, null
  br i1 %111, label %154, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::Vector.605", %"class.WTF::Vector.605"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  %116 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %115, null
  br i1 %116, label %151, label %117, !prof !3

117:                                              ; preds = %112
  %118 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %115 to i8*
  %119 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122, !prof !4

122:                                              ; preds = %117
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %115, i64 %123
  br label %125

125:                                              ; preds = %143, %122
  %126 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %144, %143 ], [ %115, %122 ]
  %127 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 0, i32 2, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #12
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 1
  %145 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %144, %124
  br i1 %145, label %146, label %125

146:                                              ; preds = %143
  store i32 0, i32* %119, align 4
  %147 = bitcast %"class.WTF::Vector.605"* %113 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %117
  %150 = phi i8* [ %148, %146 ], [ %118, %117 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #12
  store %"struct.blink::CSSTransitionData::TransitionProperty"* null, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  br label %151

151:                                              ; preds = %112, %149
  %152 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %152) #12
  %153 = bitcast %"class.blink::CSSTransitionData"* %110 to i8*
  tail call void @free(i8* %153) #12
  br label %154

154:                                              ; preds = %107, %151
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %156 = load %"class.blink::CSSAnimationData"*, %"class.blink::CSSAnimationData"** %155, align 8
  store %"class.blink::CSSAnimationData"* null, %"class.blink::CSSAnimationData"** %155, align 8
  %157 = icmp eq %"class.blink::CSSAnimationData"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  tail call void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"* nonnull %156) #12
  %159 = bitcast %"class.blink::CSSAnimationData"* %156 to i8*
  tail call void @free(i8* %159) #12
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %162 = load %"class.blink::CounterDirectiveMap"*, %"class.blink::CounterDirectiveMap"** %161, align 8
  store %"class.blink::CounterDirectiveMap"* null, %"class.blink::CounterDirectiveMap"** %161, align 8
  %163 = icmp eq %"class.blink::CounterDirectiveMap"* %162, null
  br i1 %163, label %202, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.WTF::KeyValuePair.560"*, %"struct.WTF::KeyValuePair.560"** %165, align 8
  %167 = icmp eq %"struct.WTF::KeyValuePair.560"* %166, null
  br i1 %167, label %200, label %168, !prof !3

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %198, label %172

172:                                              ; preds = %168
  %173 = zext i32 %170 to i64
  br label %174

174:                                              ; preds = %195, %172
  %175 = phi i64 [ 0, %172 ], [ %196, %195 ]
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.560", %"struct.WTF::KeyValuePair.560"* %166, i64 %175
  %177 = bitcast %"struct.WTF::KeyValuePair.560"* %176 to i8**
  %178 = load i8*, i8** %177, align 8
  %179 = bitcast i8* %178 to %"class.WTF::StringImpl"*
  %180 = ptrtoint i8* %178 to i64
  switch i64 %180, label %181 [
    i64 -1, label %195
    i64 0, label %195
  ]

181:                                              ; preds = %174
  %182 = getelementptr inbounds i8, i8* %178, i64 8
  %183 = bitcast i8* %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = bitcast i8* %178 to i32*
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %181
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i32 [ %190, %189 ], [ %188, %181 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #12
  br label %195

195:                                              ; preds = %194, %191, %174, %174
  %196 = add nuw nsw i64 %175, 1
  %197 = icmp eq i64 %196, %173
  br i1 %197, label %198, label %174

198:                                              ; preds = %195, %168
  %199 = bitcast %"struct.WTF::KeyValuePair.560"* %166 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %199) #12
  store %"struct.WTF::KeyValuePair.560"* null, %"struct.WTF::KeyValuePair.560"** %165, align 8
  br label %200

200:                                              ; preds = %198, %164
  %201 = bitcast %"class.blink::CounterDirectiveMap"* %162 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %201) #12
  br label %202

202:                                              ; preds = %160, %200
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #12
  br label %219

219:                                              ; preds = %202, %215, %218
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #12
  br label %236

236:                                              ; preds = %219, %232, %235
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #12
  br label %253

253:                                              ; preds = %236, %249, %252
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 3, i32 0, i32 0
  %255 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %254, align 8
  %256 = icmp eq %"class.blink::ComputedStyleBase::StyleGridData"* %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %258) #12
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %257
  tail call void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"* nonnull %255) #12
  %263 = bitcast %"class.blink::ComputedStyleBase::StyleGridData"* %255 to i8*
  tail call void @free(i8* %263) #12
  br label %264

264:                                              ; preds = %253, %257, %262
  %265 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0
  %266 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %265, align 8
  %267 = icmp eq %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, null
  br i1 %267, label %288, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %270) #12
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %288

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 2
  %276 = bitcast %"class.base::RefCounted.528"* %275 to i32**
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  %279 = bitcast i32* %277 to i8*
  br i1 %278, label %286, label %280, !prof !3

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 5, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %285, label %284, !prof !4

284:                                              ; preds = %280
  store i32 0, i32* %281, align 4
  br label %285

285:                                              ; preds = %284, %280
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %279) #12
  br label %286

286:                                              ; preds = %285, %274
  %287 = bitcast %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266 to i8*
  tail call void @free(i8* %287) #12
  br label %288

288:                                              ; preds = %264, %268, %286
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 1, i32 0, i32 0
  %290 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %289, align 8
  %291 = icmp eq %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, null
  br i1 %291, label %299, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %293) #12
  %294 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = bitcast %"class.blink::ComputedStyleBase::StyleMultiColData"* %290 to i8*
  tail call void @free(i8* %298) #12
  br label %299

299:                                              ; preds = %288, %292, %297
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"*, %"class.blink::PaintImages"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.613"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PaintImages"*, %"class.blink::PaintImages"** %3, align 8
  store %"class.blink::PaintImages"* %1, %"class.blink::PaintImages"** %3, align 8
  %5 = icmp eq %"class.blink::PaintImages"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Persistent.306"*, %"class.blink::Persistent.306"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.306"* %8, null
  br i1 %9, label %50, label %10, !prof !3

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Persistent.306"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %48, label %15, !prof !4

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %8, i64 %16
  br label %18

18:                                               ; preds = %15, %42
  %19 = phi %"class.blink::Persistent.306"* [ %43, %42 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #12
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !4

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #12
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %30, %18
  %43 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 1
  %44 = icmp eq %"class.blink::Persistent.306"* %43, %17
  br i1 %44, label %45, label %18

45:                                               ; preds = %42
  store i32 0, i32* %12, align 4
  %46 = bitcast %"class.blink::PaintImages"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %10
  %49 = phi i8* [ %47, %45 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #12
  store %"class.blink::Persistent.306"* null, %"class.blink::Persistent.306"** %7, align 8
  br label %50

50:                                               ; preds = %6, %48
  %51 = bitcast %"class.blink::PaintImages"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %51) #12
  br label %52

52:                                               ; preds = %2, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.572", %"class.WTF::Vector.572"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.575*, %class.scoped_refptr.575** %3, align 8
  %5 = icmp eq %class.scoped_refptr.575* %4, null
  br i1 %5, label %39, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.575* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %4, i64 %12
  br label %14

14:                                               ; preds = %31, %11
  %15 = phi %class.scoped_refptr.575* [ %32, %31 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 0, i32 0
  %17 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %16, align 8
  %18 = icmp eq %"class.blink::TimingFunction"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to %"class.blink::TimingFunction"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to void (%"class.blink::TimingFunction"*)***
  %28 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, i64 1
  %30 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %29, align 8
  tail call void %30(%"class.blink::TimingFunction"* nonnull %26) #12
  br label %31

31:                                               ; preds = %24, %19, %14
  %32 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 1
  %33 = icmp eq %class.scoped_refptr.575* %32, %13
  br i1 %33, label %34, label %14

34:                                               ; preds = %31
  store i32 0, i32* %8, align 4
  %35 = bitcast %"class.WTF::Vector.572"* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %6
  %38 = phi i8* [ %36, %34 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #12
  store %class.scoped_refptr.575* null, %class.scoped_refptr.575** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  %40 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  %42 = icmp eq double* %41, null
  %43 = bitcast double* %41 to i8*
  br i1 %42, label %50, label %44, !prof !3

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !4

48:                                               ; preds = %44
  store i32 0, i32* %45, align 4
  br label %49

49:                                               ; preds = %48, %44
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #12
  store double* null, double** %40, align 8
  br label %50

50:                                               ; preds = %39, %49
  %51 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %52, null
  %54 = bitcast double* %52 to i8*
  br i1 %53, label %61, label %55, !prof !3

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !4

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #12
  store double* null, double** %51, align 8
  br label %61

61:                                               ; preds = %50, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  %5 = bitcast i32* %3 to i8*
  br i1 %4, label %12, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !4

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #12
  store i32* null, i32** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  %16 = bitcast i32* %14 to i8*
  br i1 %15, label %23, label %17, !prof !3

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !4

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #12
  store i32* null, i32** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !3

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !4

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #12
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %45, label %39, !prof !3

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !4

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #12
  store double* null, double** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.WTF::Vector.579", %"class.WTF::Vector.579"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StyleNameOrKeyword"*, %"class.blink::StyleNameOrKeyword"** %47, align 8
  %49 = icmp eq %"class.blink::StyleNameOrKeyword"* %48, null
  br i1 %49, label %84, label %50, !prof !3

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::StyleNameOrKeyword"* %48 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %82, label %55, !prof !4

55:                                               ; preds = %50
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %48, i64 %56
  br label %58

58:                                               ; preds = %76, %55
  %59 = phi %"class.blink::StyleNameOrKeyword"* [ %77, %76 ], [ %48, %55 ]
  %60 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #12
  br label %76

76:                                               ; preds = %75, %72, %58
  %77 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 1
  %78 = icmp eq %"class.blink::StyleNameOrKeyword"* %77, %57
  br i1 %78, label %79, label %58

79:                                               ; preds = %76
  store i32 0, i32* %52, align 4
  %80 = bitcast %"class.WTF::Vector.579"* %46 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %50
  %83 = phi i8* [ %81, %79 ], [ %51, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #12
  store %"class.blink::StyleNameOrKeyword"* null, %"class.blink::StyleNameOrKeyword"** %47, align 8
  br label %84

84:                                               ; preds = %45, %82
  %85 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %86, align 8
  %88 = icmp eq %"class.WTF::AtomicString"* %87, null
  br i1 %88, label %123, label %89, !prof !3

89:                                               ; preds = %84
  %90 = bitcast %"class.WTF::AtomicString"* %87 to i8*
  %91 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %121, label %94, !prof !4

94:                                               ; preds = %89
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::AtomicString"* [ %116, %115 ], [ %87, %94 ]
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #12
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 1
  %117 = icmp eq %"class.WTF::AtomicString"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %91, align 4
  %119 = bitcast %"class.WTF::Vector.284"* %85 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %89
  %122 = phi i8* [ %120, %118 ], [ %90, %89 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #12
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %86, align 8
  br label %123

123:                                              ; preds = %84, %121
  %124 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %124) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %3, align 8
  %5 = icmp eq %"class.blink::GridTrackSize"* %4, null
  br i1 %5, label %41, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::GridTrackSize"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 %12
  br label %14

14:                                               ; preds = %33, %11
  %15 = phi %"class.blink::GridTrackSize"* [ %34, %33 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #12
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #12
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #12
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 1
  %35 = icmp eq %"class.blink::GridTrackSize"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %33
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.459"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13
  %43 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %45 = icmp eq %"class.blink::GridTrackSize"* %44, null
  br i1 %45, label %81, label %46, !prof !3

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::GridTrackSize"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %79, label %51, !prof !4

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %44, i64 %52
  br label %54

54:                                               ; preds = %73, %51
  %55 = phi %"class.blink::GridTrackSize"* [ %74, %73 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #12
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #12
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #12
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 1
  %75 = icmp eq %"class.blink::GridTrackSize"* %74, %53
  br i1 %75, label %76, label %54

76:                                               ; preds = %73
  store i32 0, i32* %48, align 4
  %77 = bitcast %"class.WTF::Vector.459"* %42 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %46
  %80 = phi i8* [ %78, %76 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %43, align 8
  br label %81

81:                                               ; preds = %41, %79
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.552"* %83, null
  br i1 %84, label %117, label %85, !prof !3

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %115, label %89

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %112, %89
  %92 = phi i64 [ 0, %89 ], [ %113, %112 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %83, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair.552"* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"*
  %97 = ptrtoint i8* %95 to i64
  switch i64 %97, label %98 [
    i64 -1, label %112
    i64 0, label %112
  ]

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %95, i64 8
  %100 = bitcast i8* %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = bitcast i8* %95 to i32*
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %98
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i32 [ %107, %106 ], [ %105, %98 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #12
  br label %112

112:                                              ; preds = %111, %108, %91, %91
  %113 = add nuw nsw i64 %92, 1
  %114 = icmp eq i64 %113, %90
  br i1 %114, label %115, label %91

115:                                              ; preds = %112, %85
  %116 = bitcast %"struct.WTF::KeyValuePair.552"* %83 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #12
  store %"struct.WTF::KeyValuePair.552"* null, %"struct.WTF::KeyValuePair.552"** %82, align 8
  br label %117

117:                                              ; preds = %81, %115
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 0
  %119 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %118, align 8
  %120 = icmp eq %"struct.WTF::KeyValuePair.547"* %119, null
  br i1 %120, label %124, label %121, !prof !3

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %119, i32 %123) #12
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %118, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 0
  %126 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %125, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair.547"* %126, null
  br i1 %127, label %131, label %128, !prof !3

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %126, i32 %130) #12
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %125, align 8
  br label %131

131:                                              ; preds = %124, %128
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 0
  %133 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %132, align 8
  %134 = icmp eq %"struct.WTF::KeyValuePair.547"* %133, null
  br i1 %134, label %138, label %135, !prof !3

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %133, i32 %137) #12
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %132, align 8
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 0
  %140 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %139, align 8
  %141 = icmp eq %"struct.WTF::KeyValuePair.547"* %140, null
  br i1 %141, label %145, label %142, !prof !3

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %140, i32 %144) #12
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %139, align 8
  br label %145

145:                                              ; preds = %138, %142
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 0
  %147 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %146, align 8
  %148 = icmp eq %"struct.WTF::KeyValuePair.542"* %147, null
  br i1 %148, label %196, label %149, !prof !3

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %194, label %153

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  br label %155

155:                                              ; preds = %191, %153
  %156 = phi i64 [ 0, %153 ], [ %192, %191 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156
  %158 = bitcast %"struct.WTF::KeyValuePair.542"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, inttoptr (i64 -1 to i8*)
  br i1 %160, label %191, label %161

161:                                              ; preds = %155
  %162 = bitcast i8* %159 to %"class.WTF::StringImpl"*
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  %166 = bitcast i64* %164 to i8*
  br i1 %165, label %175, label %167, !prof !3

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !4

171:                                              ; preds = %167
  store i32 0, i32* %168, align 4
  br label %172

172:                                              ; preds = %171, %167
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #12
  store i64* null, i64** %163, align 8
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %157, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  br label %175

175:                                              ; preds = %172, %161
  %176 = phi %"class.WTF::StringImpl"* [ %174, %172 ], [ %162, %161 ]
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #12
  br label %191

191:                                              ; preds = %190, %187, %175, %155
  %192 = add nuw nsw i64 %156, 1
  %193 = icmp eq i64 %192, %154
  br i1 %193, label %194, label %155

194:                                              ; preds = %191, %149
  %195 = bitcast %"struct.WTF::KeyValuePair.542"* %147 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %195) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %146, align 8
  br label %196

196:                                              ; preds = %145, %194
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 0
  %198 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %197, align 8
  %199 = icmp eq %"struct.WTF::KeyValuePair.542"* %198, null
  br i1 %199, label %247, label %200, !prof !3

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %200
  %205 = zext i32 %202 to i64
  br label %206

206:                                              ; preds = %242, %204
  %207 = phi i64 [ 0, %204 ], [ %243, %242 ]
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207
  %209 = bitcast %"struct.WTF::KeyValuePair.542"* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, inttoptr (i64 -1 to i8*)
  br i1 %211, label %242, label %212

212:                                              ; preds = %206
  %213 = bitcast i8* %210 to %"class.WTF::StringImpl"*
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  %217 = bitcast i64* %215 to i8*
  br i1 %216, label %226, label %218, !prof !3

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %223, label %222, !prof !4

222:                                              ; preds = %218
  store i32 0, i32* %219, align 4
  br label %223

223:                                              ; preds = %222, %218
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %217) #12
  store i64* null, i64** %214, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %208, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  br label %226

226:                                              ; preds = %223, %212
  %227 = phi %"class.WTF::StringImpl"* [ %225, %223 ], [ %213, %212 ]
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #12
  br label %242

242:                                              ; preds = %241, %238, %226, %206
  %243 = add nuw nsw i64 %207, 1
  %244 = icmp eq i64 %243, %205
  br i1 %244, label %245, label %206

245:                                              ; preds = %242, %200
  %246 = bitcast %"struct.WTF::KeyValuePair.542"* %198 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %197, align 8
  br label %247

247:                                              ; preds = %196, %245
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 0
  %249 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %248, align 8
  %250 = icmp eq %"struct.WTF::KeyValuePair.542"* %249, null
  br i1 %250, label %298, label %251, !prof !3

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %296, label %255

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  br label %257

257:                                              ; preds = %293, %255
  %258 = phi i64 [ 0, %255 ], [ %294, %293 ]
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258
  %260 = bitcast %"struct.WTF::KeyValuePair.542"* %259 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, inttoptr (i64 -1 to i8*)
  br i1 %262, label %293, label %263

263:                                              ; preds = %257
  %264 = bitcast i8* %261 to %"class.WTF::StringImpl"*
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %266, null
  %268 = bitcast i64* %266 to i8*
  br i1 %267, label %277, label %269, !prof !3

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %274, label %273, !prof !4

273:                                              ; preds = %269
  store i32 0, i32* %270, align 4
  br label %274

274:                                              ; preds = %273, %269
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %268) #12
  store i64* null, i64** %265, align 8
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %259, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  br label %277

277:                                              ; preds = %274, %263
  %278 = phi %"class.WTF::StringImpl"* [ %276, %274 ], [ %264, %263 ]
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #12
  br label %293

293:                                              ; preds = %292, %289, %277, %257
  %294 = add nuw nsw i64 %258, 1
  %295 = icmp eq i64 %294, %256
  br i1 %295, label %296, label %257

296:                                              ; preds = %293, %251
  %297 = bitcast %"struct.WTF::KeyValuePair.542"* %249 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %297) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %248, align 8
  br label %298

298:                                              ; preds = %247, %296
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 0
  %300 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %299, align 8
  %301 = icmp eq %"struct.WTF::KeyValuePair.542"* %300, null
  br i1 %301, label %349, label %302, !prof !3

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %347, label %306

306:                                              ; preds = %302
  %307 = zext i32 %304 to i64
  br label %308

308:                                              ; preds = %344, %306
  %309 = phi i64 [ 0, %306 ], [ %345, %344 ]
  %310 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309
  %311 = bitcast %"struct.WTF::KeyValuePair.542"* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, inttoptr (i64 -1 to i8*)
  br i1 %313, label %344, label %314

314:                                              ; preds = %308
  %315 = bitcast i8* %312 to %"class.WTF::StringImpl"*
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  %319 = bitcast i64* %317 to i8*
  br i1 %318, label %328, label %320, !prof !3

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %325, label %324, !prof !4

324:                                              ; preds = %320
  store i32 0, i32* %321, align 4
  br label %325

325:                                              ; preds = %324, %320
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #12
  store i64* null, i64** %316, align 8
  %326 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %310, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  br label %328

328:                                              ; preds = %325, %314
  %329 = phi %"class.WTF::StringImpl"* [ %327, %325 ], [ %315, %314 ]
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #12
  br label %344

344:                                              ; preds = %343, %340, %328, %308
  %345 = add nuw nsw i64 %309, 1
  %346 = icmp eq i64 %345, %307
  br i1 %346, label %347, label %308

347:                                              ; preds = %344, %302
  %348 = bitcast %"struct.WTF::KeyValuePair.542"* %300 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %299, align 8
  br label %349

349:                                              ; preds = %298, %347
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 0
  %351 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %350, align 8
  %352 = icmp eq %"struct.WTF::KeyValuePair.542"* %351, null
  br i1 %352, label %400, label %353, !prof !3

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %398, label %357

357:                                              ; preds = %353
  %358 = zext i32 %355 to i64
  br label %359

359:                                              ; preds = %395, %357
  %360 = phi i64 [ 0, %357 ], [ %396, %395 ]
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360
  %362 = bitcast %"struct.WTF::KeyValuePair.542"* %361 to i8**
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, inttoptr (i64 -1 to i8*)
  br i1 %364, label %395, label %365

365:                                              ; preds = %359
  %366 = bitcast i8* %363 to %"class.WTF::StringImpl"*
  %367 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 0
  %368 = load i64*, i64** %367, align 8
  %369 = icmp eq i64* %368, null
  %370 = bitcast i64* %368 to i8*
  br i1 %369, label %379, label %371, !prof !3

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !4

375:                                              ; preds = %371
  store i32 0, i32* %372, align 4
  br label %376

376:                                              ; preds = %375, %371
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #12
  store i64* null, i64** %367, align 8
  %377 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %361, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  br label %379

379:                                              ; preds = %376, %365
  %380 = phi %"class.WTF::StringImpl"* [ %378, %376 ], [ %366, %365 ]
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #12
  br label %395

395:                                              ; preds = %394, %391, %379, %359
  %396 = add nuw nsw i64 %360, 1
  %397 = icmp eq i64 %396, %358
  br i1 %397, label %398, label %359

398:                                              ; preds = %395, %353
  %399 = bitcast %"struct.WTF::KeyValuePair.542"* %351 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %399) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %350, align 8
  br label %400

400:                                              ; preds = %349, %398
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 0
  %402 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %401, align 8
  %403 = icmp eq %"struct.WTF::KeyValuePair.542"* %402, null
  br i1 %403, label %451, label %404, !prof !3

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 1
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %449, label %408

408:                                              ; preds = %404
  %409 = zext i32 %406 to i64
  br label %410

410:                                              ; preds = %446, %408
  %411 = phi i64 [ 0, %408 ], [ %447, %446 ]
  %412 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411
  %413 = bitcast %"struct.WTF::KeyValuePair.542"* %412 to i8**
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, inttoptr (i64 -1 to i8*)
  br i1 %415, label %446, label %416

416:                                              ; preds = %410
  %417 = bitcast i8* %414 to %"class.WTF::StringImpl"*
  %418 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %419, null
  %421 = bitcast i64* %419 to i8*
  br i1 %420, label %430, label %422, !prof !3

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %427, label %426, !prof !4

426:                                              ; preds = %422
  store i32 0, i32* %423, align 4
  br label %427

427:                                              ; preds = %426, %422
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %421) #12
  store i64* null, i64** %418, align 8
  %428 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %412, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  br label %430

430:                                              ; preds = %427, %416
  %431 = phi %"class.WTF::StringImpl"* [ %429, %427 ], [ %417, %416 ]
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #12
  br label %446

446:                                              ; preds = %445, %442, %430, %410
  %447 = add nuw nsw i64 %411, 1
  %448 = icmp eq i64 %447, %409
  br i1 %448, label %449, label %410

449:                                              ; preds = %446, %404
  %450 = bitcast %"struct.WTF::KeyValuePair.542"* %402 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %450) #12
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %401, align 8
  br label %451

451:                                              ; preds = %400, %449
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %52, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.547"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  ret void

8:                                                ; preds = %52, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %52 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -2
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !3

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !4

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #12
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.630"* %14 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %50, %13, %8
  %53 = add nuw nsw i64 %9, 1
  %54 = icmp eq i64 %53, %5
  br i1 %54, label %6, label %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #12
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !4

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #12
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  br label %30

30:                                               ; preds = %7, %18
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #12
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* nonnull %32) #12
  %40 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32 to i8*
  tail call void @free(i8* %40) #12
  br label %41

41:                                               ; preds = %30, %34, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #12
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #12
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #12
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #12
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #12
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #12
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #12
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #12
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #12
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #12
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 4, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %94) #12
  br label %95

95:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 4
  br label %96

96:                                               ; preds = %85, %95
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 8
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %105) #12
  br label %106

106:                                              ; preds = %104, %100
  store i8 0, i8* %97, align 4
  br label %107

107:                                              ; preds = %96, %106
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 17, i32 0, i32 1, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #12
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !4

116:                                              ; preds = %111
  %117 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #12
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %108, align 8
  br label %130

130:                                              ; preds = %107, %118
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 16, i32 0, i32 1, i32 0
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %133 = icmp eq %"class.blink::PersistentNode"* %132, null
  br i1 %133, label %153, label %134

134:                                              ; preds = %130
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #12
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !4

139:                                              ; preds = %134
  %140 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #12
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %148, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %131, align 8
  br label %153

153:                                              ; preds = %130, %141
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 15, i32 0
  %155 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %154, align 8
  %156 = icmp eq %"class.blink::StyleReflection"* %155, null
  br i1 %156, label %181, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #12
  %159 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %181

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %163, align 8
  %165 = icmp eq %"class.blink::NinePieceImageData"* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %167) #12
  %168 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %164) #12
  %172 = bitcast %"class.blink::NinePieceImageData"* %164 to i8*
  tail call void @free(i8* %172) #12
  br label %173

173:                                              ; preds = %171, %166, %162
  %174 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2, i32 2
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 8
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %178) #12
  br label %179

179:                                              ; preds = %173, %177
  %180 = bitcast %"class.blink::StyleReflection"* %155 to i8*
  tail call void @free(i8* %180) #12
  br label %181

181:                                              ; preds = %153, %157, %179
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 14, i32 0
  %183 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %182, align 8
  %184 = icmp eq %"class.blink::TranslateTransformOperation"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %183, i64 0, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #12
  %188 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 -2
  %193 = bitcast %"class.base::RefCounted.483"* %192 to %"class.blink::TransformOperation"*
  %194 = bitcast %"class.base::RefCounted.483"* %192 to void (%"class.blink::TransformOperation"*)***
  %195 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %195, i64 1
  %197 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %196, align 8
  tail call void %197(%"class.blink::TransformOperation"* nonnull %193) #12
  br label %198

198:                                              ; preds = %181, %185, %191
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 13, i32 0
  %200 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %199, align 8
  %201 = icmp eq %"class.blink::ScaleTransformOperation"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %200, i64 0, i32 0, i32 1, i32 0
  %204 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %204) #12
  %205 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 -2
  %210 = bitcast %"class.base::RefCounted.483"* %209 to %"class.blink::TransformOperation"*
  %211 = bitcast %"class.base::RefCounted.483"* %209 to void (%"class.blink::TransformOperation"*)***
  %212 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %212, i64 1
  %214 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %213, align 8
  tail call void %214(%"class.blink::TransformOperation"* nonnull %210) #12
  br label %215

215:                                              ; preds = %198, %202, %208
  %216 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 12, i32 0
  %217 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %216, align 8
  %218 = icmp eq %"class.blink::RotateTransformOperation"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %217, i64 0, i32 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %221) #12
  %222 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %232

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 -2
  %227 = bitcast %"class.base::RefCounted.483"* %226 to %"class.blink::TransformOperation"*
  %228 = bitcast %"class.base::RefCounted.483"* %226 to void (%"class.blink::TransformOperation"*)***
  %229 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %229, i64 1
  %231 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %230, align 8
  tail call void %231(%"class.blink::TransformOperation"* nonnull %227) #12
  br label %232

232:                                              ; preds = %215, %219, %225
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 11, i32 0
  %234 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %233, align 8
  %235 = icmp eq %"class.blink::BasicShape"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %234, i64 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %238) #12
  %239 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 -2
  %244 = bitcast %"class.base::RefCounted.480"* %243 to %"class.blink::BasicShape"*
  %245 = bitcast %"class.base::RefCounted.480"* %243 to void (%"class.blink::BasicShape"*)***
  %246 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %246, i64 1
  %248 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %247, align 8
  tail call void %248(%"class.blink::BasicShape"* nonnull %244) #12
  br label %249

249:                                              ; preds = %232, %236, %242
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 10, i32 0
  %251 = load %"class.blink::ClipPathOperation"*, %"class.blink::ClipPathOperation"** %250, align 8
  %252 = icmp eq %"class.blink::ClipPathOperation"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::ClipPathOperation", %"class.blink::ClipPathOperation"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #12
  %256 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 -2
  %261 = bitcast %"class.base::RefCounted.477"* %260 to %"class.blink::ClipPathOperation"*
  %262 = bitcast %"class.base::RefCounted.477"* %260 to void (%"class.blink::ClipPathOperation"*)***
  %263 = load void (%"class.blink::ClipPathOperation"*)**, void (%"class.blink::ClipPathOperation"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %263, i64 1
  %265 = load void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %264, align 8
  tail call void %265(%"class.blink::ClipPathOperation"* nonnull %261) #12
  br label %266

266:                                              ; preds = %249, %253, %259
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #12
  br label %283

283:                                              ; preds = %266, %279, %282
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #12
  br label %300

300:                                              ; preds = %283, %296, %299
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #12
  br label %317

317:                                              ; preds = %300, %313, %316
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #12
  br label %334

334:                                              ; preds = %317, %330, %333
  %335 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #12
  br label %351

351:                                              ; preds = %334, %347, %350
  %352 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4
  %353 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 1
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %354, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %354, align 8
  %356 = icmp eq %"class.blink::NGGridTrackList"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %351
  %358 = bitcast %"class.std::__1::unique_ptr.464"* %353 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %358, %"class.blink::NGGridTrackList"* nonnull %355) #12
  br label %359

359:                                              ; preds = %357, %351
  %360 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %352, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %360, align 8
  %362 = icmp eq %"class.blink::GridTrackSize"* %361, null
  br i1 %362, label %398, label %363, !prof !3

363:                                              ; preds = %359
  %364 = bitcast %"class.blink::GridTrackSize"* %361 to i8*
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %396, label %368, !prof !4

368:                                              ; preds = %363
  %369 = zext i32 %366 to i64
  %370 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %361, i64 %369
  br label %371

371:                                              ; preds = %390, %368
  %372 = phi %"class.blink::GridTrackSize"* [ %391, %390 ], [ %361, %368 ]
  %373 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0, i32 2
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 8
  br i1 %375, label %376, label %378

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %377) #12
  br label %378

378:                                              ; preds = %376, %371
  %379 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0, i32 2
  %380 = load i8, i8* %379, align 1
  %381 = icmp eq i8 %380, 8
  br i1 %381, label %382, label %384

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %383) #12
  br label %384

384:                                              ; preds = %382, %378
  %385 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0, i32 2
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 8
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %389) #12
  br label %390

390:                                              ; preds = %388, %384
  %391 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 1
  %392 = icmp eq %"class.blink::GridTrackSize"* %391, %370
  br i1 %392, label %393, label %371

393:                                              ; preds = %390
  store i32 0, i32* %365, align 4
  %394 = bitcast %"class.blink::GridTrackList"* %352 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %363
  %397 = phi i8* [ %395, %393 ], [ %364, %363 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %360, align 8
  br label %398

398:                                              ; preds = %359, %396
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %401, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %401, align 8
  %403 = icmp eq %"class.blink::NGGridTrackList"* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %398
  %405 = bitcast %"class.std::__1::unique_ptr.464"* %400 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %405, %"class.blink::NGGridTrackList"* nonnull %402) #12
  br label %406

406:                                              ; preds = %404, %398
  %407 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %399, i64 0, i32 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %407, align 8
  %409 = icmp eq %"class.blink::GridTrackSize"* %408, null
  br i1 %409, label %445, label %410, !prof !3

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::GridTrackSize"* %408 to i8*
  %412 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %443, label %415, !prof !4

415:                                              ; preds = %410
  %416 = zext i32 %413 to i64
  %417 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %408, i64 %416
  br label %418

418:                                              ; preds = %437, %415
  %419 = phi %"class.blink::GridTrackSize"* [ %438, %437 ], [ %408, %415 ]
  %420 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0, i32 2
  %421 = load i8, i8* %420, align 1
  %422 = icmp eq i8 %421, 8
  br i1 %422, label %423, label %425

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %424) #12
  br label %425

425:                                              ; preds = %423, %418
  %426 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0, i32 2
  %427 = load i8, i8* %426, align 1
  %428 = icmp eq i8 %427, 8
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %430) #12
  br label %431

431:                                              ; preds = %429, %425
  %432 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0, i32 2
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 8
  br i1 %434, label %435, label %437

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %436) #12
  br label %437

437:                                              ; preds = %435, %431
  %438 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 1
  %439 = icmp eq %"class.blink::GridTrackSize"* %438, %417
  br i1 %439, label %440, label %418

440:                                              ; preds = %437
  store i32 0, i32* %412, align 4
  %441 = bitcast %"class.blink::GridTrackList"* %399 to i8**
  %442 = load i8*, i8** %441, align 8
  br label %443

443:                                              ; preds = %440, %410
  %444 = phi i8* [ %442, %440 ], [ %411, %410 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %444) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %407, align 8
  br label %445

445:                                              ; preds = %406, %443
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2
  %447 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 1
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %448, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %448, align 8
  %450 = icmp eq %"class.blink::NGGridTrackList"* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %445
  %452 = bitcast %"class.std::__1::unique_ptr.464"* %447 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %452, %"class.blink::NGGridTrackList"* nonnull %449) #12
  br label %453

453:                                              ; preds = %451, %445
  %454 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %446, i64 0, i32 0, i32 0, i32 0, i32 0
  %455 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %454, align 8
  %456 = icmp eq %"class.blink::GridTrackSize"* %455, null
  br i1 %456, label %492, label %457, !prof !3

457:                                              ; preds = %453
  %458 = bitcast %"class.blink::GridTrackSize"* %455 to i8*
  %459 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %490, label %462, !prof !4

462:                                              ; preds = %457
  %463 = zext i32 %460 to i64
  %464 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %455, i64 %463
  br label %465

465:                                              ; preds = %484, %462
  %466 = phi %"class.blink::GridTrackSize"* [ %485, %484 ], [ %455, %462 ]
  %467 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0, i32 2
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 8
  br i1 %469, label %470, label %472

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %471) #12
  br label %472

472:                                              ; preds = %470, %465
  %473 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0, i32 2
  %474 = load i8, i8* %473, align 1
  %475 = icmp eq i8 %474, 8
  br i1 %475, label %476, label %478

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %477) #12
  br label %478

478:                                              ; preds = %476, %472
  %479 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0, i32 2
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 8
  br i1 %481, label %482, label %484

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %483) #12
  br label %484

484:                                              ; preds = %482, %478
  %485 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 1
  %486 = icmp eq %"class.blink::GridTrackSize"* %485, %464
  br i1 %486, label %487, label %465

487:                                              ; preds = %484
  store i32 0, i32* %459, align 4
  %488 = bitcast %"class.blink::GridTrackList"* %446 to i8**
  %489 = load i8*, i8** %488, align 8
  br label %490

490:                                              ; preds = %487, %457
  %491 = phi i8* [ %489, %487 ], [ %458, %457 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %491) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %454, align 8
  br label %492

492:                                              ; preds = %453, %490
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1
  %494 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 1
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %494, i64 0, i32 0, i32 0, i32 0
  %496 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %495, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %495, align 8
  %497 = icmp eq %"class.blink::NGGridTrackList"* %496, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %492
  %499 = bitcast %"class.std::__1::unique_ptr.464"* %494 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %499, %"class.blink::NGGridTrackList"* nonnull %496) #12
  br label %500

500:                                              ; preds = %498, %492
  %501 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %493, i64 0, i32 0, i32 0, i32 0, i32 0
  %502 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %501, align 8
  %503 = icmp eq %"class.blink::GridTrackSize"* %502, null
  br i1 %503, label %539, label %504, !prof !3

504:                                              ; preds = %500
  %505 = bitcast %"class.blink::GridTrackSize"* %502 to i8*
  %506 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %537, label %509, !prof !4

509:                                              ; preds = %504
  %510 = zext i32 %507 to i64
  %511 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %502, i64 %510
  br label %512

512:                                              ; preds = %531, %509
  %513 = phi %"class.blink::GridTrackSize"* [ %532, %531 ], [ %502, %509 ]
  %514 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0, i32 2
  %515 = load i8, i8* %514, align 1
  %516 = icmp eq i8 %515, 8
  br i1 %516, label %517, label %519

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %518) #12
  br label %519

519:                                              ; preds = %517, %512
  %520 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0, i32 2
  %521 = load i8, i8* %520, align 1
  %522 = icmp eq i8 %521, 8
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %524) #12
  br label %525

525:                                              ; preds = %523, %519
  %526 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0, i32 2
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 8
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %530) #12
  br label %531

531:                                              ; preds = %529, %525
  %532 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 1
  %533 = icmp eq %"class.blink::GridTrackSize"* %532, %511
  br i1 %533, label %534, label %512

534:                                              ; preds = %531
  store i32 0, i32* %506, align 4
  %535 = bitcast %"class.blink::GridTrackList"* %493 to i8**
  %536 = load i8*, i8** %535, align 8
  br label %537

537:                                              ; preds = %534, %504
  %538 = phi i8* [ %536, %534 ], [ %505, %504 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %538) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %501, align 8
  br label %539

539:                                              ; preds = %500, %537
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"*, %"class.blink::NGGridTrackList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::NGGridTrackList"* %1, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  %8 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %8, label %44, label %9, !prof !3

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::GridTrackSize"* %7 to i8*
  %11 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %42, label %14, !prof !4

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 %15
  br label %17

17:                                               ; preds = %36, %14
  %18 = phi %"class.blink::GridTrackSize"* [ %37, %36 ], [ %7, %14 ]
  %19 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %23) #12
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #12
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %35) #12
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 1
  %38 = icmp eq %"class.blink::GridTrackSize"* %37, %16
  br i1 %38, label %39, label %17

39:                                               ; preds = %36
  store i32 0, i32* %11, align 4
  %40 = bitcast %"class.WTF::Vector.459"* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi i8* [ %41, %39 ], [ %10, %9 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #12
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %6, align 8
  br label %44

44:                                               ; preds = %42, %4
  %45 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGGridTrackRepeater"*, %"struct.blink::NGGridTrackRepeater"** %45, align 8
  %47 = icmp eq %"struct.blink::NGGridTrackRepeater"* %46, null
  %48 = bitcast %"struct.blink::NGGridTrackRepeater"* %46 to i8*
  br i1 %47, label %55, label %49, !prof !3

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !4

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #12
  br label %55

55:                                               ; preds = %44, %54
  %56 = bitcast %"class.blink::NGGridTrackList"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #13
  br label %57

57:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #12
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #12
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 10, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #12
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !4

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #12
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %19, %30
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #12
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !4

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #12
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  br label %65

65:                                               ; preds = %42, %53
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 8, i32 0
  %67 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %66, align 8
  %68 = icmp eq %"class.blink::ShadowList"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #12
  %72 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %91

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 2
  %77 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 5, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !4

80:                                               ; preds = %75
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %75
  %82 = bitcast %"class.base::RefCounted.300"* %76 to %"class.blink::ShadowData"**
  %83 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %82, align 8
  %84 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 6
  %85 = bitcast %"class.base::RefCounted.300"* %84 to %"class.blink::ShadowData"*
  %86 = icmp eq %"class.blink::ShadowData"* %83, %85
  br i1 %86, label %89, label %87, !prof !3

87:                                               ; preds = %81
  %88 = bitcast %"class.base::RefCounted.300"* %76 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %88, %"class.blink::ShadowData"* %83) #12
  br label %89

89:                                               ; preds = %87, %81
  %90 = bitcast %"class.blink::ShadowList"* %67 to i8*
  tail call void @free(i8* %90) #12
  br label %91

91:                                               ; preds = %65, %69, %89
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 7, i32 0
  %93 = load %"class.blink::QuotesData"*, %"class.blink::QuotesData"** %92, align 8
  %94 = icmp eq %"class.blink::QuotesData"* %93, null
  br i1 %94, label %158, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #12
  %97 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %158

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::Vector.292", %"class.WTF::Vector.292"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::pair.295"*, %"struct.std::__1::pair.295"** %102, align 8
  %104 = icmp eq %"struct.std::__1::pair.295"* %103, null
  br i1 %104, label %156, label %105, !prof !3

105:                                              ; preds = %100
  %106 = bitcast %"struct.std::__1::pair.295"* %103 to i8*
  %107 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %154, label %110, !prof !4

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %103, i64 %111
  br label %113

113:                                              ; preds = %148, %110
  %114 = phi %"struct.std::__1::pair.295"* [ %149, %148 ], [ %103, %110 ]
  %115 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #12
  br label %131

131:                                              ; preds = %130, %127, %113
  %132 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #12
  br label %148

148:                                              ; preds = %147, %144, %131
  %149 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 1
  %150 = icmp eq %"struct.std::__1::pair.295"* %149, %112
  br i1 %150, label %151, label %113

151:                                              ; preds = %148
  store i32 0, i32* %107, align 4
  %152 = bitcast %"class.WTF::Vector.292"* %101 to i8**
  %153 = load i8*, i8** %152, align 8
  br label %154

154:                                              ; preds = %151, %105
  %155 = phi i8* [ %153, %151 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %155) #12
  br label %156

156:                                              ; preds = %100, %154
  %157 = bitcast %"class.blink::QuotesData"* %93 to i8*
  tail call void @free(i8* %157) #12
  br label %158

158:                                              ; preds = %91, %95, %156
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #12
  br label %175

175:                                              ; preds = %158, %171, %174
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #12
  br label %192

192:                                              ; preds = %175, %188, %191
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4
  %194 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %194, align 8
  %196 = icmp eq %"class.WTF::AtomicString"* %195, null
  br i1 %196, label %231, label %197, !prof !3

197:                                              ; preds = %192
  %198 = bitcast %"class.WTF::AtomicString"* %195 to i8*
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %229, label %202, !prof !4

202:                                              ; preds = %197
  %203 = zext i32 %200 to i64
  %204 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %195, i64 %203
  br label %205

205:                                              ; preds = %223, %202
  %206 = phi %"class.WTF::AtomicString"* [ %224, %223 ], [ %195, %202 ]
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #12
  br label %223

223:                                              ; preds = %222, %219, %205
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 1
  %225 = icmp eq %"class.WTF::AtomicString"* %224, %204
  br i1 %225, label %226, label %205

226:                                              ; preds = %223
  store i32 0, i32* %199, align 4
  %227 = bitcast %"class.WTF::Vector.284"* %193 to i8**
  %228 = load i8*, i8** %227, align 8
  br label %229

229:                                              ; preds = %226, %197
  %230 = phi i8* [ %228, %226 ], [ %198, %197 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %230) #12
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %194, align 8
  br label %231

231:                                              ; preds = %192, %229
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %233 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %232, align 8
  %234 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, null
  br i1 %234, label %242, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %236) #12
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233 to i8*
  tail call void @free(i8* %241) #12
  br label %242

242:                                              ; preds = %231, %235, %240
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %244 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %243, align 8
  %245 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, null
  br i1 %245, label %253, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %247) #12
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* nonnull %244) #12
  %252 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244 to i8*
  tail call void @free(i8* %252) #12
  br label %253

253:                                              ; preds = %242, %246, %251
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #12
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 4, i32 0
  %26 = load %"class.blink::StyleInitialData"*, %"class.blink::StyleInitialData"** %25, align 8
  %27 = icmp eq %"class.blink::StyleInitialData"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #12
  %30 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted.261", %"class.base::RefCounted.261"* %34, i64 2
  %36 = bitcast %"class.base::RefCounted.261"* %35 to %"class.blink::StyleVariables"*
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %36) #12
  %37 = bitcast %"class.blink::StyleInitialData"* %26 to i8*
  tail call void @free(i8* %37) #12
  br label %38

38:                                               ; preds = %24, %28, %33
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 3, i32 0
  %40 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %39, align 8
  %41 = icmp eq %"class.base::RefCountedData"* %40, null
  br i1 %41, label %82, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %82

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 2
  %49 = bitcast %"class.base::RefCountedThreadSafe.253"* %48 to %"class.blink::AppliedTextDecoration"**
  %50 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  %51 = icmp eq %"class.blink::AppliedTextDecoration"* %50, null
  br i1 %51, label %80, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %77, label %56, !prof !4

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %50, i64 %57
  br label %59

59:                                               ; preds = %72, %56
  %60 = phi %"class.blink::AppliedTextDecoration"* [ %73, %72 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %65) #12
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #12
  br label %72

72:                                               ; preds = %70, %66
  %73 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 1
  %74 = icmp eq %"class.blink::AppliedTextDecoration"* %73, %58
  br i1 %74, label %75, label %59

75:                                               ; preds = %72
  store i32 0, i32* %53, align 4
  %76 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  br label %77

77:                                               ; preds = %75, %52
  %78 = phi %"class.blink::AppliedTextDecoration"* [ %50, %52 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %78, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #12
  br label %80

80:                                               ; preds = %77, %47
  %81 = bitcast %"class.base::RefCountedData"* %40 to i8*
  tail call void @_ZdlPv(i8* %81) #13
  br label %82

82:                                               ; preds = %38, %42, %80
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #12
  br label %99

99:                                               ; preds = %82, %95, %98
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE5clearEv(%"class.WTF::Vector.1954"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %43, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %39, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %10, align 8
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, i64 %12
  br label %14

14:                                               ; preds = %35, %9
  %15 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %36, %35 ], [ %11, %9 ]
  %16 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 7, i32 2, i32 0
  %17 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %16, align 8
  %18 = icmp eq %"class.blink::NGPhysicalFragment"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #12
  %21 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %19
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %17) #12
  br label %25

25:                                               ; preds = %24, %19, %14
  %26 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 6, i32 2, i32 0
  %27 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %26, align 8
  %28 = icmp eq %"class.blink::NGPhysicalFragment"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #12
  %31 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %27) #12
  br label %35

35:                                               ; preds = %34, %29, %25
  %36 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 1
  %37 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %36, %13
  br i1 %37, label %38, label %14

38:                                               ; preds = %35
  store i32 0, i32* %6, align 4
  br label %39

39:                                               ; preds = %5, %38
  %40 = bitcast %"class.WTF::Vector.1954"* %0 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.WTF::Vector.1954"* %0 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  store i32 0, i32* %2, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #12
  br label %43

43:                                               ; preds = %1, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %2, align 8
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %2, align 8
  %4 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %3, null
  br i1 %4, label %65, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %3, i64 0, i32 6
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.1843", %"class.std::__1::unique_ptr.1843"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %7, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %7, align 8
  %9 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::unique_ptr.1843"* %6 to %"struct.std::__1::default_delete.1866"*
  tail call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1866"* %11, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %8) #12
  br label %12

12:                                               ; preds = %10, %5
  %13 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %3, i64 0, i32 0, i32 0
  %14 = load %"class.base::RefCountedData.1827"*, %"class.base::RefCountedData.1827"** %13, align 8
  %15 = icmp eq %"class.base::RefCountedData.1827"* %14, null
  br i1 %15, label %63, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::RefCountedData.1827", %"class.base::RefCountedData.1827"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %63

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.base::RefCountedData.1827", %"class.base::RefCountedData.1827"* %14, i64 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::Vector.1829", %"class.WTF::Vector.1829"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %class.scoped_refptr.1832*, %class.scoped_refptr.1832** %22, align 8
  %24 = icmp eq %class.scoped_refptr.1832* %23, null
  br i1 %24, label %61, label %25, !prof !3

25:                                               ; preds = %20
  %26 = bitcast %class.scoped_refptr.1832* %23 to i8*
  %27 = getelementptr inbounds %"class.base::RefCountedData.1827", %"class.base::RefCountedData.1827"* %14, i64 0, i32 1, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %59, label %30, !prof !4

30:                                               ; preds = %25
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds %class.scoped_refptr.1832, %class.scoped_refptr.1832* %23, i64 %31
  br label %33

33:                                               ; preds = %53, %30
  %34 = phi %class.scoped_refptr.1832* [ %54, %53 ], [ %23, %30 ]
  %35 = getelementptr inbounds %class.scoped_refptr.1832, %class.scoped_refptr.1832* %34, i64 0, i32 0
  %36 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %35, align 8
  %37 = icmp eq %"struct.blink::NGExclusion"* %36, null
  br i1 %37, label %53, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %36, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #12
  %40 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %53

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %36, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.base::RefCounted.1834", %"class.base::RefCounted.1834"* %44, i64 8
  %46 = bitcast %"class.base::RefCounted.1834"* %45 to %"struct.blink::NGExclusionShapeData"**
  %47 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %46, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %46, align 8
  %48 = icmp eq %"struct.blink::NGExclusionShapeData"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %43
  %50 = bitcast %"struct.blink::NGExclusionShapeData"* %47 to i8*
  tail call void @_ZdlPv(i8* %50) #13
  br label %51

51:                                               ; preds = %49, %43
  %52 = bitcast %"struct.blink::NGExclusion"* %36 to i8*
  tail call void @free(i8* %52) #12
  br label %53

53:                                               ; preds = %51, %38, %33
  %54 = getelementptr inbounds %class.scoped_refptr.1832, %class.scoped_refptr.1832* %34, i64 1
  %55 = icmp eq %class.scoped_refptr.1832* %54, %32
  br i1 %55, label %56, label %33

56:                                               ; preds = %53
  store i32 0, i32* %27, align 4
  %57 = bitcast %"class.WTF::Vector.1829"* %21 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %25
  %60 = phi i8* [ %58, %56 ], [ %26, %25 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #12
  br label %61

61:                                               ; preds = %20, %59
  %62 = bitcast %"class.base::RefCountedData.1827"* %14 to i8*
  tail call void @_ZdlPv(i8* %62) #13
  br label %63

63:                                               ; preds = %61, %16, %12
  %64 = bitcast %"class.blink::NGExclusionSpaceInternal"* %3 to i8*
  tail call void @free(i8* %64) #12
  br label %65

65:                                               ; preds = %1, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1954"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %66

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1954"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %64, label %14

14:                                               ; preds = %4, %60
  %15 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %62, %60 ], [ %6, %4 ]
  %16 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %61, %60 ], [ null, %4 ]
  %17 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16 to i8*
  %18 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 40, i1 false) #12
  %19 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 0, i32 6
  %20 = bitcast %"struct.blink::NGContainingBlock"* %19 to i8*
  %21 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 6
  %22 = bitcast %"struct.blink::NGContainingBlock"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %22, i64 16, i1 false) #12
  %23 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 0, i32 6, i32 2
  %24 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 6, i32 2
  %25 = getelementptr inbounds %class.scoped_refptr.1871, %class.scoped_refptr.1871* %24, i64 0, i32 0
  %26 = bitcast %class.scoped_refptr.1871* %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %class.scoped_refptr.1871* %23 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %25, align 8
  %29 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 0, i32 7
  %30 = bitcast %"struct.blink::NGContainingBlock"* %29 to i8*
  %31 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 7
  %32 = bitcast %"struct.blink::NGContainingBlock"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %32, i64 16, i1 false) #12
  %33 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 0, i32 7, i32 2
  %34 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 7, i32 2
  %35 = getelementptr inbounds %class.scoped_refptr.1871, %class.scoped_refptr.1871* %34, i64 0, i32 0
  %36 = bitcast %class.scoped_refptr.1871* %34 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %class.scoped_refptr.1871* %33 to i64*
  store i64 %37, i64* %38, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %35, align 8
  %39 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 20, i1 false) #12
  %41 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 7, i32 2, i32 0
  %42 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %41, align 8
  %43 = icmp eq %"class.blink::NGPhysicalFragment"* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %14
  %45 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #12
  %46 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %42) #12
  br label %50

50:                                               ; preds = %49, %44, %14
  %51 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 6, i32 2, i32 0
  %52 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %51, align 8
  %53 = icmp eq %"class.blink::NGPhysicalFragment"* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #12
  %56 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %54
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %52) #12
  br label %60

60:                                               ; preds = %59, %54, %50
  %61 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 1
  %62 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 1
  %63 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %62, %10
  br i1 %63, label %64, label %14

64:                                               ; preds = %60, %4
  %65 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %65) #12
  br label %141

66:                                               ; preds = %2
  %67 = zext i32 %1 to i64
  %68 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm(i64 %67) #12
  %69 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %68, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32NGLogicalOutOfFlowPositionedNodeEEEPKcv, i64 0, i64 0)) #12
  %70 = udiv i64 %68, 112
  %71 = ptrtoint i8* %69 to i64
  %72 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 0
  %73 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %72, align 8
  %74 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %73, i64 %76
  %78 = icmp eq i32 %75, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %66
  %80 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %73 to i8*
  br label %136

81:                                               ; preds = %66
  %82 = bitcast i8* %69 to %"struct.blink::NGLogicalOutOfFlowPositionedNode"*
  br label %83

83:                                               ; preds = %81, %129
  %84 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %131, %129 ], [ %73, %81 ]
  %85 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %130, %129 ], [ %82, %81 ]
  %86 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85 to i8*
  %87 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 40, i1 false) #12
  %88 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 0, i32 6
  %89 = bitcast %"struct.blink::NGContainingBlock"* %88 to i8*
  %90 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 6
  %91 = bitcast %"struct.blink::NGContainingBlock"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %91, i64 16, i1 false) #12
  %92 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 0, i32 6, i32 2
  %93 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 6, i32 2
  %94 = getelementptr inbounds %class.scoped_refptr.1871, %class.scoped_refptr.1871* %93, i64 0, i32 0
  %95 = bitcast %class.scoped_refptr.1871* %93 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %class.scoped_refptr.1871* %92 to i64*
  store i64 %96, i64* %97, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %94, align 8
  %98 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 0, i32 7
  %99 = bitcast %"struct.blink::NGContainingBlock"* %98 to i8*
  %100 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 7
  %101 = bitcast %"struct.blink::NGContainingBlock"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %101, i64 16, i1 false) #12
  %102 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 0, i32 7, i32 2
  %103 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 7, i32 2
  %104 = getelementptr inbounds %class.scoped_refptr.1871, %class.scoped_refptr.1871* %103, i64 0, i32 0
  %105 = bitcast %class.scoped_refptr.1871* %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %class.scoped_refptr.1871* %102 to i64*
  store i64 %106, i64* %107, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %104, align 8
  %108 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 20, i1 false) #12
  %110 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 7, i32 2, i32 0
  %111 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %110, align 8
  %112 = icmp eq %"class.blink::NGPhysicalFragment"* %111, null
  br i1 %112, label %119, label %113

113:                                              ; preds = %83
  %114 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %111, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %114) #12
  %115 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %111, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %113
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %111) #12
  br label %119

119:                                              ; preds = %118, %113, %83
  %120 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 6, i32 2, i32 0
  %121 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %120, align 8
  %122 = icmp eq %"class.blink::NGPhysicalFragment"* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %121, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %124) #12
  %125 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %123
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %121) #12
  br label %129

129:                                              ; preds = %128, %123, %119
  %130 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 1
  %131 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 1
  %132 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %131, %77
  br i1 %132, label %133, label %83

133:                                              ; preds = %129
  %134 = bitcast %"class.WTF::Vector.1954"* %0 to i8**
  %135 = load i8*, i8** %134, align 8
  br label %136

136:                                              ; preds = %79, %133
  %137 = phi i8* [ %135, %133 ], [ %80, %79 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %137) #12
  %138 = bitcast %"class.WTF::Vector.1954"* %0 to i64*
  store atomic i64 %71, i64* %138 monotonic, align 8
  %139 = trunc i64 %70 to i32
  %140 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %139, i32* %140, align 8
  br label %141

141:                                              ; preds = %136, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 19155236
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 19155236) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = mul i64 %0, 112
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12NGEarlyBreakD2Ev(%"class.blink::NGEarlyBreak"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGEarlyBreak", %"class.blink::NGEarlyBreak"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::NGEarlyBreak"*, %"class.blink::NGEarlyBreak"** %2, align 8
  %4 = icmp eq %"class.blink::NGEarlyBreak"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGEarlyBreak", %"class.blink::NGEarlyBreak"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::NGEarlyBreak", %"class.blink::NGEarlyBreak"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink12NGEarlyBreakD2Ev(%"class.blink::NGEarlyBreak"* nonnull %3) #12
  %11 = bitcast %"class.blink::NGEarlyBreak"* %3 to i8*
  tail call void @free(i8* %11) #12
  ret void

12:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2096"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1866"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, null
  br i1 %3, label %127, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::Vector.1859", %"class.WTF::Vector.1859"* %5, i64 0, i32 0, i32 0, i32 0
  br i1 %8, label %58, label %10, !prof !4

10:                                               ; preds = %4
  %11 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %11, i64 %12
  br label %14

14:                                               ; preds = %54, %10
  %15 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %55, %54 ], [ %11, %10 ]
  %16 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !4

20:                                               ; preds = %14
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %14
  %22 = getelementptr inbounds %"class.WTF::Vector.1849", %"class.WTF::Vector.1849"* %16, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %24 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 1, i64 0
  %25 = bitcast i8* %24 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %26 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23, %25
  br i1 %26, label %29, label %27, !prof !3

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::Vector.1849", %"class.WTF::Vector.1849"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1850"* %28, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23) #12
  br label %29

29:                                               ; preds = %27, %21
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %30 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !4

34:                                               ; preds = %29
  store i32 0, i32* %31, align 4
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %"class.WTF::Vector.1849", %"class.WTF::Vector.1849"* %30, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %40 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37, %39
  br i1 %40, label %43, label %41, !prof !3

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::Vector.1849", %"class.WTF::Vector.1849"* %30, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1850"* %42, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37) #12
  br label %43

43:                                               ; preds = %41, %35
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 0, i32 1, i32 0
  %45 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %44, align 8
  %46 = icmp eq %"class.blink::NGShapeExclusions"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #12
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %45) #12
  %53 = bitcast %"class.blink::NGShapeExclusions"* %45 to i8*
  tail call void @free(i8* %53) #12
  br label %54

54:                                               ; preds = %43, %47, %52
  %55 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 1
  %56 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %55, %13
  br i1 %56, label %57, label %14

57:                                               ; preds = %54
  store i32 0, i32* %6, align 4
  br label %58

58:                                               ; preds = %57, %4
  %59 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*
  %62 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59, %61
  br i1 %62, label %65, label %63, !prof !3

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::Vector.1859", %"class.WTF::Vector.1859"* %5, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1860"* %64, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59) #12
  br label %65

65:                                               ; preds = %63, %58
  store %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* null, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %66 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %68, label %118, label %70, !prof !4

70:                                               ; preds = %65
  %71 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %71, i64 %72
  br label %74

74:                                               ; preds = %114, %70
  %75 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %115, %114 ], [ %71, %70 ]
  %76 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 6, i32 0
  %77 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %76, align 8
  %78 = icmp eq %"class.blink::NGShapeExclusions"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %80) #12
  %81 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %77) #12
  %85 = bitcast %"class.blink::NGShapeExclusions"* %77 to i8*
  tail call void @free(i8* %85) #12
  br label %86

86:                                               ; preds = %84, %79, %74
  %87 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5
  %88 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %92, label %91, !prof !4

91:                                               ; preds = %86
  store i32 0, i32* %88, align 4
  br label %92

92:                                               ; preds = %91, %86
  %93 = getelementptr inbounds %"class.WTF::Vector.1849", %"class.WTF::Vector.1849"* %87, i64 0, i32 0, i32 0, i32 0
  %94 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %95 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 1, i64 0
  %96 = bitcast i8* %95 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %97 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94, %96
  br i1 %97, label %100, label %98, !prof !3

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.WTF::Vector.1849", %"class.WTF::Vector.1849"* %87, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1850"* %99, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94) #12
  br label %100

100:                                              ; preds = %98, %92
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %101 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4
  %102 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !4

105:                                              ; preds = %100
  store i32 0, i32* %102, align 4
  br label %106

106:                                              ; preds = %105, %100
  %107 = getelementptr inbounds %"class.WTF::Vector.1849", %"class.WTF::Vector.1849"* %101, i64 0, i32 0, i32 0, i32 0
  %108 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %109 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 1, i64 0
  %110 = bitcast i8* %109 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %111 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108, %110
  br i1 %111, label %114, label %112, !prof !3

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.WTF::Vector.1849", %"class.WTF::Vector.1849"* %101, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1850"* %113, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108) #12
  br label %114

114:                                              ; preds = %106, %112
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %115 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 1
  %116 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %115, %73
  br i1 %116, label %117, label %74

117:                                              ; preds = %114
  store i32 0, i32* %66, align 4
  br label %118

118:                                              ; preds = %117, %65
  %119 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %120 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 1, i64 0
  %121 = bitcast i8* %120 to %"struct.blink::NGExclusionSpaceInternal::NGShelf"*
  %122 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119, %121
  br i1 %122, label %125, label %123, !prof !3

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1847"* %124, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119) #12
  br label %125

125:                                              ; preds = %118, %123
  %126 = bitcast %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1 to i8*
  tail call void @free(i8* %126) #12
  br label %127

127:                                              ; preds = %125, %2
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1850"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.1829", %"class.WTF::Vector.1829"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.1832*, %class.scoped_refptr.1832** %3, align 8
  %5 = icmp eq %class.scoped_refptr.1832* %4, null
  br i1 %5, label %42, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.1832* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %40, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.1832, %class.scoped_refptr.1832* %4, i64 %12
  br label %14

14:                                               ; preds = %34, %11
  %15 = phi %class.scoped_refptr.1832* [ %35, %34 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.1832, %class.scoped_refptr.1832* %15, i64 0, i32 0
  %17 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %16, align 8
  %18 = icmp eq %"struct.blink::NGExclusion"* %17, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #12
  %21 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.1834", %"class.base::RefCounted.1834"* %25, i64 8
  %27 = bitcast %"class.base::RefCounted.1834"* %26 to %"struct.blink::NGExclusionShapeData"**
  %28 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %27, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %27, align 8
  %29 = icmp eq %"struct.blink::NGExclusionShapeData"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = bitcast %"struct.blink::NGExclusionShapeData"* %28 to i8*
  tail call void @_ZdlPv(i8* %31) #13
  br label %32

32:                                               ; preds = %30, %24
  %33 = bitcast %"struct.blink::NGExclusion"* %17 to i8*
  tail call void @free(i8* %33) #12
  br label %34

34:                                               ; preds = %32, %19, %14
  %35 = getelementptr inbounds %class.scoped_refptr.1832, %class.scoped_refptr.1832* %15, i64 1
  %36 = icmp eq %class.scoped_refptr.1832* %35, %13
  br i1 %36, label %37, label %14

37:                                               ; preds = %34
  store i32 0, i32* %8, align 4
  %38 = bitcast %"class.WTF::Vector.1829"* %2 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %6
  %41 = phi i8* [ %39, %37 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #12
  store %class.scoped_refptr.1832* null, %class.scoped_refptr.1832** %3, align 8
  br label %42

42:                                               ; preds = %1, %40
  %43 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::Vector.1829", %"class.WTF::Vector.1829"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.scoped_refptr.1832*, %class.scoped_refptr.1832** %44, align 8
  %46 = icmp eq %class.scoped_refptr.1832* %45, null
  br i1 %46, label %83, label %47, !prof !3

47:                                               ; preds = %42
  %48 = bitcast %class.scoped_refptr.1832* %45 to i8*
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %81, label %52, !prof !4

52:                                               ; preds = %47
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds %class.scoped_refptr.1832, %class.scoped_refptr.1832* %45, i64 %53
  br label %55

55:                                               ; preds = %75, %52
  %56 = phi %class.scoped_refptr.1832* [ %76, %75 ], [ %45, %52 ]
  %57 = getelementptr inbounds %class.scoped_refptr.1832, %class.scoped_refptr.1832* %56, i64 0, i32 0
  %58 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %57, align 8
  %59 = icmp eq %"struct.blink::NGExclusion"* %58, null
  br i1 %59, label %75, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #12
  %62 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.base::RefCounted.1834", %"class.base::RefCounted.1834"* %66, i64 8
  %68 = bitcast %"class.base::RefCounted.1834"* %67 to %"struct.blink::NGExclusionShapeData"**
  %69 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %68, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %68, align 8
  %70 = icmp eq %"struct.blink::NGExclusionShapeData"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = bitcast %"struct.blink::NGExclusionShapeData"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #13
  br label %73

73:                                               ; preds = %71, %65
  %74 = bitcast %"struct.blink::NGExclusion"* %58 to i8*
  tail call void @free(i8* %74) #12
  br label %75

75:                                               ; preds = %73, %60, %55
  %76 = getelementptr inbounds %class.scoped_refptr.1832, %class.scoped_refptr.1832* %56, i64 1
  %77 = icmp eq %class.scoped_refptr.1832* %76, %54
  br i1 %77, label %78, label %55

78:                                               ; preds = %75
  store i32 0, i32* %49, align 4
  %79 = bitcast %"class.WTF::Vector.1829"* %43 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %47
  %82 = phi i8* [ %80, %78 ], [ %48, %47 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %82) #12
  store %class.scoped_refptr.1832* null, %class.scoped_refptr.1832** %44, align 8
  br label %83

83:                                               ; preds = %42, %81
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1860"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1847"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = zext i16 %4 to i32
  switch i32 %5, label %128 [
    i32 5, label %118
    i32 4, label %62
    i32 3, label %6
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %8 = bitcast %union.anon.1727* %7 to %"class.blink::NGTableConstraintSpaceData"**
  %9 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %8, align 8
  %10 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %9, null
  br i1 %10, label %128, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #12
  %13 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %128

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %18 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  %19 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %18, null
  %20 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %18 to i8*
  br i1 %19, label %27, label %21, !prof !3

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !4

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #12
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  br label %27

27:                                               ; preds = %26, %16
  %28 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  %30 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %29, null
  %31 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %29 to i8*
  br i1 %30, label %38, label %32, !prof !3

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !4

36:                                               ; preds = %32
  store i32 0, i32* %33, align 4
  br label %37

37:                                               ; preds = %36, %32
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #12
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  br label %38

38:                                               ; preds = %37, %27
  %39 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  %41 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %40, null
  %42 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %40 to i8*
  br i1 %41, label %49, label %43, !prof !3

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !4

47:                                               ; preds = %43
  store i32 0, i32* %44, align 4
  br label %48

48:                                               ; preds = %47, %43
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #12
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  br label %49

49:                                               ; preds = %48, %38
  %50 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %51 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %50, align 8
  %52 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51, null
  %53 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51 to i8*
  br i1 %52, label %60, label %54, !prof !3

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58, !prof !4

58:                                               ; preds = %54
  store i32 0, i32* %55, align 4
  br label %59

59:                                               ; preds = %58, %54
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #12
  br label %60

60:                                               ; preds = %49, %59
  %61 = bitcast %"class.blink::NGTableConstraintSpaceData"* %9 to i8*
  tail call void @free(i8* %61) #12
  br label %128

62:                                               ; preds = %1
  %63 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %64 = bitcast %union.anon.1727* %63 to %"class.blink::NGTableConstraintSpaceData"**
  %65 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %64, align 8
  %66 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %65, null
  br i1 %66, label %128, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %68) #12
  %69 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %128

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 0
  %74 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  %75 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %74, null
  %76 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %74 to i8*
  br i1 %75, label %83, label %77, !prof !3

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81, !prof !4

81:                                               ; preds = %77
  store i32 0, i32* %78, align 4
  br label %82

82:                                               ; preds = %81, %77
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %76) #12
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  br label %83

83:                                               ; preds = %82, %72
  %84 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %85 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  %86 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %85, null
  %87 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %85 to i8*
  br i1 %86, label %94, label %88, !prof !3

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92, !prof !4

92:                                               ; preds = %88
  store i32 0, i32* %89, align 4
  br label %93

93:                                               ; preds = %92, %88
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %87) #12
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  br label %94

94:                                               ; preds = %93, %83
  %95 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  %97 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %96, null
  %98 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %96 to i8*
  br i1 %97, label %105, label %99, !prof !3

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %104, label %103, !prof !4

103:                                              ; preds = %99
  store i32 0, i32* %100, align 4
  br label %104

104:                                              ; preds = %103, %99
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %98) #12
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  br label %105

105:                                              ; preds = %104, %94
  %106 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 0
  %107 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %106, align 8
  %108 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107, null
  %109 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107 to i8*
  br i1 %108, label %116, label %110, !prof !3

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %115, label %114, !prof !4

114:                                              ; preds = %110
  store i32 0, i32* %111, align 4
  br label %115

115:                                              ; preds = %114, %110
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %109) #12
  br label %116

116:                                              ; preds = %105, %115
  %117 = bitcast %"class.blink::NGTableConstraintSpaceData"* %65 to i8*
  tail call void @free(i8* %117) #12
  br label %128

118:                                              ; preds = %1
  %119 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %120 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %119, align 8
  %121 = icmp eq %"class.blink::SerializedScriptValue"* %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw sub i32* %123, i32 1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %120) #12
  %127 = bitcast %"class.blink::SerializedScriptValue"* %120 to i8*
  tail call void @free(i8* %127) #12
  br label %128

128:                                              ; preds = %126, %122, %118, %116, %67, %62, %60, %11, %6, %1
  ret void
}

declare i64 @_ZNK5blink20WritingModeConverter14SlowToPhysicalERKNS_13LogicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"*, %"struct.blink::LogicalOffset"* dereferenceable(8), %"struct.blink::PhysicalSize"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZNK5blink20NGBoxFragmentBuilder7BoxTypeEv(%"class.blink::NGBoxFragmentBuilder"*) local_unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGLayoutAlgorithmINS_11NGBlockNodeENS_20NGBoxFragmentBuilderENS_17NGBlockBreakTokenEED0Ev(%"class.blink::NGLayoutAlgorithm"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #11

declare void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"* } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.2203"*, %"class.blink::LayoutObject"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.2206"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutObject"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %34, i64 0, i32 0
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LayoutObject"*
  %38 = icmp eq %"class.blink::LayoutObject"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::LayoutObject"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::LayoutObject"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %63, i64 0, i32 0
  %65 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutObject"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.2206"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.2206"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.2206"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.2206"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"* } undef, %"struct.WTF::KeyValuePair.2206"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"* } %79, %"struct.WTF::KeyValuePair.2206"* %78, 1
  ret { %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2206"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS4_RS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.2203"*, %"class.blink::LayoutObject"** dereferenceable(8), %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* dereferenceable(36)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2206"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2206"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.2203"* %0, %"struct.WTF::KeyValuePair.2206"* null)
  %9 = load %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2206"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutObject"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutObject"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutObject"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutObject"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.2206"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.2206"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutObject"* %59, %43
  br i1 %64, label %104, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutObject"* %59, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.2206"* %60, %"struct.WTF::KeyValuePair.2206"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutObject"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.2206"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.2206"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 44, i1 false) #12
  %80 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.2206"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.2206"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %89, i64 0, i32 1, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %2, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %92, i64 36, i1 false) #12
  %93 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %12, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %87
  %103 = tail call %"struct.WTF::KeyValuePair.2206"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.2203"* %0, %"struct.WTF::KeyValuePair.2206"* %89)
  br label %104

104:                                              ; preds = %58, %87, %102
  %105 = phi i8 [ 1, %87 ], [ 1, %102 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair.2206"* [ %89, %87 ], [ %103, %102 ], [ %60, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.2206"*, i8 } undef, %"struct.WTF::KeyValuePair.2206"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.2206"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.2206"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2206"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.2203"*, %"struct.WTF::KeyValuePair.2206"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 48
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([145 x i8], [145 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink12LayoutObjectENS2_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEEEEPKcv, i64 0, i64 0)) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.2206"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %84, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 7
  %41 = icmp ult i64 %39, 7
  br i1 %41, label %73, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %70, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %71, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %36, i64 %45
  %48 = bitcast %"struct.WTF::KeyValuePair.2206"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 44, i1 false) #12
  %49 = or i64 %45, 1
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %36, i64 %49
  %51 = bitcast %"struct.WTF::KeyValuePair.2206"* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 44, i1 false) #12
  %52 = or i64 %45, 2
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %36, i64 %52
  %54 = bitcast %"struct.WTF::KeyValuePair.2206"* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 44, i1 false) #12
  %55 = or i64 %45, 3
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %36, i64 %55
  %57 = bitcast %"struct.WTF::KeyValuePair.2206"* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 44, i1 false) #12
  %58 = or i64 %45, 4
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %36, i64 %58
  %60 = bitcast %"struct.WTF::KeyValuePair.2206"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 44, i1 false) #12
  %61 = or i64 %45, 5
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %36, i64 %61
  %63 = bitcast %"struct.WTF::KeyValuePair.2206"* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 44, i1 false) #12
  %64 = or i64 %45, 6
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %36, i64 %64
  %66 = bitcast %"struct.WTF::KeyValuePair.2206"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 44, i1 false) #12
  %67 = or i64 %45, 7
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %36, i64 %67
  %69 = bitcast %"struct.WTF::KeyValuePair.2206"* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 44, i1 false) #12
  %70 = add nuw nsw i64 %45, 8
  %71 = add i64 %46, -8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %44

73:                                               ; preds = %44, %38
  %74 = phi i64 [ 0, %38 ], [ %70, %44 ]
  %75 = icmp eq i64 %40, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %73, %76
  %77 = phi i64 [ %81, %76 ], [ %74, %73 ]
  %78 = phi i64 [ %82, %76 ], [ %40, %73 ]
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %36, i64 %77
  %80 = bitcast %"struct.WTF::KeyValuePair.2206"* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 44, i1 false) #12
  %81 = add nuw nsw i64 %77, 1
  %82 = add i64 %78, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %76, !llvm.loop !12

84:                                               ; preds = %73, %76, %31
  %85 = call %"struct.WTF::KeyValuePair.2206"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.2203"* %0, %"struct.WTF::KeyValuePair.2206"* %36, i32 %32, %"struct.WTF::KeyValuePair.2206"* %1) #12
  ret %"struct.WTF::KeyValuePair.2206"* %85
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2206"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.2203"*, %"struct.WTF::KeyValuePair.2206"*, i32, %"struct.WTF::KeyValuePair.2206"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2203", align 8
  %6 = bitcast %"class.WTF::HashTable.2203"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2203"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2206"* %1, %"struct.WTF::KeyValuePair.2206"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2206"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2203"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2203"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.2206"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.2203"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2203"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.2206"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #12
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair.2206"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.2206"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.2206"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.2206"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.2206"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.2203"* nonnull %5, %"class.blink::LayoutObject"** dereferenceable(8) %53) #12
  %55 = extractvalue { %"struct.WTF::KeyValuePair.2206"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.2206"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.2206"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 48, i1 false) #12
  %58 = load %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.2206"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.2206"* %55, %"struct.WTF::KeyValuePair.2206"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.2206"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.2206"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.2206"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2206"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.2203"*, %"class.blink::LayoutObject"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::LayoutObject"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.2206"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %32, i64 0, i32 0
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutObject"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LayoutObject"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.2206"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.2206"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.2206"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.2206"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.2206"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::LayoutObject"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::LayoutObject"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::LayoutObject"* %63, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.2206"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %75, i64 0, i32 0
  %78 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutObject"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.2206"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.2206"*, i8 } undef, %"struct.WTF::KeyValuePair.2206"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.2206"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.2206"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2251"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERKPKNS1_12LayoutInlineERS9_EENS_18HashTableAddResultISL_SB_EEOT0_OT1_(%"class.WTF::HashTable.2248"*, %"class.blink::LayoutInline"** dereferenceable(8), %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca [35 x i8], align 1
  %5 = alloca [35 x i8], align 1
  %6 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.2251"*, %"struct.WTF::KeyValuePair.2251"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.2251"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.2251"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.2248"* %0, %"struct.WTF::KeyValuePair.2251"* null)
  %11 = load %"struct.WTF::KeyValuePair.2251"*, %"struct.WTF::KeyValuePair.2251"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.2251"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = bitcast %"class.blink::LayoutInline"** %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = shl i64 %19, 32
  %21 = xor i64 %20, -1
  %22 = add i64 %19, %21
  %23 = lshr i64 %22, 22
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 13
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 8
  %29 = xor i64 %28, %27
  %30 = mul i64 %29, 9
  %31 = lshr i64 %30, 15
  %32 = xor i64 %31, %30
  %33 = shl i64 %32, 27
  %34 = xor i64 %33, -1
  %35 = add i64 %32, %34
  %36 = lshr i64 %35, 31
  %37 = xor i64 %36, %35
  %38 = trunc i64 %37 to i32
  %39 = and i32 %16, %38
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %13, i64 %40
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %41, i64 0, i32 0
  %43 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %42, align 8
  %44 = icmp eq %"class.blink::LayoutObject"* %43, null
  %45 = inttoptr i64 %19 to %"class.blink::LayoutObject"*
  br i1 %44, label %80, label %46

46:                                               ; preds = %12
  %47 = xor i32 %38, -1
  %48 = lshr i32 %38, 23
  %49 = add i32 %48, %47
  %50 = shl i32 %49, 12
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 7
  %53 = xor i32 %52, %51
  %54 = shl i32 %53, 2
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 20
  %57 = xor i32 %56, %55
  %58 = or i32 %57, 1
  %59 = zext i32 %58 to i64
  br label %60

60:                                               ; preds = %46, %67
  %61 = phi %"class.blink::LayoutObject"* [ %43, %46 ], [ %76, %67 ]
  %62 = phi %"struct.WTF::KeyValuePair.2251"* [ %41, %46 ], [ %74, %67 ]
  %63 = phi %"struct.WTF::KeyValuePair.2251"* [ null, %46 ], [ %69, %67 ]
  %64 = phi i64 [ %40, %46 ], [ %73, %67 ]
  %65 = phi i64 [ 0, %46 ], [ %71, %67 ]
  %66 = icmp eq %"class.blink::LayoutObject"* %61, %45
  br i1 %66, label %125, label %67

67:                                               ; preds = %60
  %68 = icmp eq %"class.blink::LayoutObject"* %61, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %69 = select i1 %68, %"struct.WTF::KeyValuePair.2251"* %62, %"struct.WTF::KeyValuePair.2251"* %63
  %70 = icmp eq i64 %65, 0
  %71 = select i1 %70, i64 %59, i64 %65
  %72 = add i64 %71, %64
  %73 = and i64 %72, %17
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %13, i64 %73
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %74, i64 0, i32 0
  %76 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %75, align 8
  %77 = icmp eq %"class.blink::LayoutObject"* %76, null
  br i1 %77, label %78, label %60

78:                                               ; preds = %67
  %79 = icmp eq %"struct.WTF::KeyValuePair.2251"* %69, null
  br i1 %79, label %80, label %83

80:                                               ; preds = %12, %78
  %81 = phi %"struct.WTF::KeyValuePair.2251"* [ %74, %78 ], [ %41, %12 ]
  %82 = bitcast %"struct.WTF::KeyValuePair.2251"* %81 to i64*
  br label %98

83:                                               ; preds = %78
  %84 = getelementptr inbounds [35 x i8], [35 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 35, i8* nonnull %84)
  %85 = getelementptr inbounds [35 x i8], [35 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 35, i8* nonnull %85)
  %86 = getelementptr inbounds [35 x i8], [35 x i8]* %4, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* align 1 %86, i8 0, i64 32, i1 false), !alias.scope !14, !noalias !17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %84, i8* nonnull align 1 %85, i64 35, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 35, i8* nonnull %85)
  %87 = bitcast %"struct.WTF::KeyValuePair.2251"* %69 to i64*
  store i64 0, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %69, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %88, align 8
  %89 = bitcast %"struct.WTF::KeyValuePair.2251"* %69 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %90, i8* nonnull align 1 %84, i64 35, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 35, i8* nonnull %84)
  %91 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %0, i64 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = add i32 %92, 2147483647
  %94 = and i32 %93, 2147483647
  %95 = and i32 %92, -2147483648
  %96 = or i32 %94, %95
  store i32 %96, i32* %91, align 8
  %97 = load i64, i64* %18, align 8
  br label %98

98:                                               ; preds = %80, %83
  %99 = phi i64* [ %82, %80 ], [ %87, %83 ]
  %100 = phi i64 [ %19, %80 ], [ %97, %83 ]
  %101 = phi %"struct.WTF::KeyValuePair.2251"* [ %81, %80 ], [ %69, %83 ]
  store i64 %100, i64* %99, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %101, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %103 = load i8, i8* %102, align 4, !range !2
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %109, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %101, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %107 = bitcast %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry"* %106 to i8*
  %108 = bitcast %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %108, i64 32, i1 false) #12
  br label %113

109:                                              ; preds = %98
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %101, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %111 = bitcast %union.anon.2256* %110 to i8*
  %112 = bitcast %"struct.blink::NGBoxFragmentBuilder::InlineContainingBlockGeometry"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %111, i8* align 4 %112, i64 32, i1 false) #12
  store i8 1, i8* %102, align 4
  br label %113

113:                                              ; preds = %105, %109
  %114 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %0, i64 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %114, align 4
  %117 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, %116
  %120 = shl i32 %119, 1
  %121 = load i32, i32* %14, align 8
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %113
  %124 = tail call %"struct.WTF::KeyValuePair.2251"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.2248"* %0, %"struct.WTF::KeyValuePair.2251"* %101)
  br label %125

125:                                              ; preds = %60, %113, %123
  %126 = phi i8 [ 1, %113 ], [ 1, %123 ], [ 0, %60 ]
  %127 = phi %"struct.WTF::KeyValuePair.2251"* [ %101, %113 ], [ %124, %123 ], [ %62, %60 ]
  %128 = insertvalue { %"struct.WTF::KeyValuePair.2251"*, i8 } undef, %"struct.WTF::KeyValuePair.2251"* %127, 0
  %129 = insertvalue { %"struct.WTF::KeyValuePair.2251"*, i8 } %128, i8 %126, 1
  ret { %"struct.WTF::KeyValuePair.2251"*, i8 } %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2251"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSB_(%"class.WTF::HashTable.2248"*, %"struct.WTF::KeyValuePair.2251"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca [35 x i8], align 1
  %5 = alloca [35 x i8], align 1
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = mul i32 %13, 6
  %15 = shl i32 %9, 1
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %33, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = icmp ugt i32 %15, %9
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* null, i8** %19, align 8
  br label %32

23:                                               ; preds = %17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #12
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %24, i8* %25) #12
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  store i8* %27, i8** %19, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %6) #12
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  br label %32

32:                                               ; preds = %22, %23, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %33

33:                                               ; preds = %11, %2, %32
  %34 = phi i32 [ %15, %32 ], [ 8, %2 ], [ %9, %11 ]
  %35 = zext i32 %34 to i64
  %36 = mul nuw nsw i64 %35, 48
  %37 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([171 x i8], [171 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink12LayoutObjectEN4absl8optionalINS2_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEEEEPKcv, i64 0, i64 0)) #12
  %38 = bitcast i8* %37 to %"struct.WTF::KeyValuePair.2251"*
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds [35 x i8], [35 x i8]* %5, i64 0, i64 0
  %42 = getelementptr inbounds [35 x i8], [35 x i8]* %4, i64 0, i64 0
  %43 = getelementptr inbounds [35 x i8], [35 x i8]* %4, i64 0, i64 3
  br label %44

44:                                               ; preds = %44, %40
  %45 = phi i64 [ 0, %40 ], [ %51, %44 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %38, i64 %45
  call void @llvm.lifetime.start.p0i8(i64 35, i8* nonnull %41)
  call void @llvm.lifetime.start.p0i8(i64 35, i8* nonnull %42)
  call void @llvm.memset.p0i8.i64(i8* align 1 %43, i8 0, i64 32, i1 false), !alias.scope !20, !noalias !23
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %41, i8* nonnull align 1 %42, i64 35, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 35, i8* nonnull %42)
  %47 = bitcast %"struct.WTF::KeyValuePair.2251"* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %38, i64 %45, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %48, align 8
  %49 = bitcast %"struct.WTF::KeyValuePair.2251"* %46 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* nonnull align 1 %41, i64 35, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 35, i8* nonnull %41)
  %51 = add nuw nsw i64 %45, 1
  %52 = icmp eq i64 %51, %35
  br i1 %52, label %53, label %44

53:                                               ; preds = %44, %33
  %54 = call %"struct.WTF::KeyValuePair.2251"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.2248"* %0, %"struct.WTF::KeyValuePair.2251"* %38, i32 %34, %"struct.WTF::KeyValuePair.2251"* %1) #12
  ret %"struct.WTF::KeyValuePair.2251"* %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2251"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSB_jSM_(%"class.WTF::HashTable.2248"*, %"struct.WTF::KeyValuePair.2251"*, i32, %"struct.WTF::KeyValuePair.2251"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2248", align 8
  %6 = bitcast %"class.WTF::HashTable.2248"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2248"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2251"* %1, %"struct.WTF::KeyValuePair.2251"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2251"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2248"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2248"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.2251"*, %"struct.WTF::KeyValuePair.2251"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.2251"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.2248"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2248"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.2251"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #12
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair.2251"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.2251"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.2251"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.2251"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.2251"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.2248"* nonnull %5, %"class.blink::LayoutObject"** dereferenceable(8) %53) #12
  %55 = extractvalue { %"struct.WTF::KeyValuePair.2251"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.2251"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.2251"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 48, i1 false) #12
  %58 = load %"struct.WTF::KeyValuePair.2251"*, %"struct.WTF::KeyValuePair.2251"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.2251"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.2251"* %55, %"struct.WTF::KeyValuePair.2251"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.2251"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.2251"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.2251"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2251"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_N4absl8optionalINS1_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISA_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.2248"*, %"class.blink::LayoutObject"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2251"*, %"struct.WTF::KeyValuePair.2251"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2248", %"class.WTF::HashTable.2248"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::LayoutObject"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.2251"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %32, i64 0, i32 0
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutObject"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LayoutObject"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.2251"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.2251"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.2251"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.2251"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.2251"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::LayoutObject"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::LayoutObject"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::LayoutObject"* %63, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.2251"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2251", %"struct.WTF::KeyValuePair.2251"* %75, i64 0, i32 0
  %78 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutObject"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.2251"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.2251"*, i8 } undef, %"struct.WTF::KeyValuePair.2251"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.2251"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.2251"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2206"*, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERKS4_S7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.2203"*, %"class.blink::LayoutObject"** dereferenceable(8), %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* dereferenceable(36)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2206"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2206"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.2203"* %0, %"struct.WTF::KeyValuePair.2206"* null)
  %9 = load %"struct.WTF::KeyValuePair.2206"*, %"struct.WTF::KeyValuePair.2206"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2206"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutObject"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutObject"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutObject"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutObject"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.2206"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.2206"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutObject"* %59, %43
  br i1 %64, label %104, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutObject"* %59, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.2206"* %60, %"struct.WTF::KeyValuePair.2206"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutObject"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.2206"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.2206"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 44, i1 false) #12
  %80 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.2206"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.2206"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.2206", %"struct.WTF::KeyValuePair.2206"* %89, i64 0, i32 1, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo", %"struct.blink::NGOutOfFlowLayoutPart::ContainingBlockInfo"* %2, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %92, i64 36, i1 false) #12
  %93 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.2203", %"class.WTF::HashTable.2203"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %12, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %87
  %103 = tail call %"struct.WTF::KeyValuePair.2206"* @_ZN3WTF9HashTableIPKN5blink12LayoutObjectENS_12KeyValuePairIS4_NS1_21NGOutOfFlowLayoutPart19ContainingBlockInfoEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.2203"* %0, %"struct.WTF::KeyValuePair.2206"* %89)
  br label %104

104:                                              ; preds = %58, %87, %102
  %105 = phi i8 [ 1, %87 ], [ 1, %102 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair.2206"* [ %89, %87 ], [ %103, %102 ], [ %60, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.2206"*, i8 } undef, %"struct.WTF::KeyValuePair.2206"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.2206"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.2206"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::LayoutObject"**, i8 } @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPNS1_9LayoutBoxERSG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2223"*, %"class.blink::LayoutBox"** dereferenceable(8), %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2223", %"class.WTF::HashTable.2223"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %4, align 8
  %6 = icmp eq %"class.blink::LayoutObject"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::LayoutObject"** @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2223"* %0, %"class.blink::LayoutObject"** null)
  %9 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::LayoutObject"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2223", %"class.WTF::HashTable.2223"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, i64 %38
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutObject"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::LayoutObject"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::LayoutObject"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::LayoutObject"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::LayoutObject"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::LayoutObject"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::LayoutObject"* %58, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %66 = select i1 %65, %"class.blink::LayoutObject"** %59, %"class.blink::LayoutObject"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, i64 %70
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutObject"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::LayoutObject"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::LayoutObject"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::LayoutObject"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::LayoutObject"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.2223", %"class.WTF::HashTable.2223"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::LayoutObject"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::LayoutBox"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.2223", %"class.WTF::HashTable.2223"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.2223", %"class.WTF::HashTable.2223"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::LayoutObject"** @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2223"* %0, %"class.blink::LayoutObject"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::LayoutObject"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::LayoutObject"**, i8 } undef, %"class.blink::LayoutObject"** %105, 0
  %107 = insertvalue { %"class.blink::LayoutObject"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::LayoutObject"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"** @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2223"*, %"class.blink::LayoutObject"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2223", %"class.WTF::HashTable.2223"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2223", %"class.WTF::HashTable.2223"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink12LayoutObjectEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to %"class.blink::LayoutObject"**
  %37 = call %"class.blink::LayoutObject"** @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2223"* %0, %"class.blink::LayoutObject"** %36, i32 %32, %"class.blink::LayoutObject"** %1) #12
  ret %"class.blink::LayoutObject"** %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"** @_ZN3WTF9HashTableIPKN5blink12LayoutObjectES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2223"*, %"class.blink::LayoutObject"**, i32, %"class.blink::LayoutObject"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::LayoutObject"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.2223", %"class.WTF::HashTable.2223"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.2223", %"class.WTF::HashTable.2223"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.2223"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %9, align 8
  %17 = ptrtoint %"class.blink::LayoutObject"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable.2223"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::LayoutObject"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #12
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.2223", %"class.WTF::HashTable.2223"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::LayoutObject"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::LayoutObject"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::LayoutObject"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, i64 %37
  %39 = bitcast %"class.blink::LayoutObject"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1, i64 %62
  %64 = ptrtoint %"class.blink::LayoutObject"** %63 to i64
  %65 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %63, align 8
  %66 = icmp eq %"class.blink::LayoutObject"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::LayoutObject"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::LayoutObject"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::LayoutObject"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::LayoutObject"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::LayoutObject"** %87, null
  %89 = ptrtoint %"class.blink::LayoutObject"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::LayoutObject"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::LayoutObject"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::LayoutObject"* %93, inttoptr (i64 -1 to %"class.blink::LayoutObject"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1, i64 %104
  %106 = ptrtoint %"class.blink::LayoutObject"** %105 to i64
  %107 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %105, align 8
  %108 = icmp eq %"class.blink::LayoutObject"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::LayoutObject"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %113, i64 %37
  %115 = icmp eq %"class.blink::LayoutObject"** %114, %3
  %116 = select i1 %115, %"class.blink::LayoutObject"** %111, %"class.blink::LayoutObject"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::LayoutObject"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::LayoutObject"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::LayoutObject"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21NGOutOfFlowLayoutPart17MulticolChildInfoEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* @_ZN3WTF6VectorIN5blink21NGOutOfFlowLayoutPart17MulticolChildInfoELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2207"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2207", %"class.WTF::Vector.2207"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.2207", %"class.WTF::Vector.2207"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"*, %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo", %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* %24, i64 %25
  ret %"struct.blink::NGOutOfFlowLayoutPart::MulticolChildInfo"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1954"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %6, align 8
  %8 = icmp ugt %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32NGLogicalOutOfFlowPositionedNodeEEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.1954"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 112
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.blink::NGLogicalOutOfFlowPositionedNode"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1954"* %0, i32 %22) #12
  %36 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1 to i64
  %39 = ptrtoint %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 112
  %42 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm(i64 %55) #12
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32NGLogicalOutOfFlowPositionedNodeEEEPKcv, i64 0, i64 0)) #12
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.1954"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 112
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.blink::NGLogicalOutOfFlowPositionedNode"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1954"* %0, i32 %50) #12
  %64 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %69, i64 %72
  %74 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %73 to i8*
  %75 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 40, i1 false) #12
  %76 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %69, i64 %72, i32 6
  %77 = bitcast %"struct.blink::NGContainingBlock"* %76 to i8*
  %78 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %70, i64 0, i32 6
  %79 = bitcast %"struct.blink::NGContainingBlock"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %79, i64 16, i1 false) #12
  %80 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %70, i64 0, i32 6, i32 2, i32 0
  %81 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %80, align 8
  %82 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %69, i64 %72, i32 6, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %81, %"class.blink::NGPhysicalFragment"** %82, align 8
  %83 = icmp eq %"class.blink::NGPhysicalFragment"* %81, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %68
  %85 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %81, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %85) #12
  br label %86

86:                                               ; preds = %84, %68
  %87 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %69, i64 %72, i32 7
  %88 = bitcast %"struct.blink::NGContainingBlock"* %87 to i8*
  %89 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %70, i64 0, i32 7
  %90 = bitcast %"struct.blink::NGContainingBlock"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %90, i64 16, i1 false) #12
  %91 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %70, i64 0, i32 7, i32 2, i32 0
  %92 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %91, align 8
  %93 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %69, i64 %72, i32 7, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %92, %"class.blink::NGPhysicalFragment"** %93, align 8
  %94 = icmp eq %"class.blink::NGPhysicalFragment"* %92, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %86
  %96 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %92, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %96) #12
  br label %97

97:                                               ; preds = %86, %95
  %98 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %69, i64 %72, i32 8, i32 0, i32 0, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %70, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 20, i1 false) #12
  %100 = load i32, i32* %3, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_IN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEEELj0ES4_E16ReallocateBufferEj(%"class.WTF::Vector.2275"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %53

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2275", %"class.WTF::Vector.2275"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::Vector.2278"*, %"class.WTF::Vector.2278"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2275", %"class.WTF::Vector.2275"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.2275"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.2275", %"class.WTF::Vector.2275"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %51, label %14

14:                                               ; preds = %4, %47
  %15 = phi %"class.WTF::Vector.2278"* [ %49, %47 ], [ %6, %4 ]
  %16 = phi %"class.WTF::Vector.2278"* [ %48, %47 ], [ null, %4 ]
  %17 = bitcast %"class.WTF::Vector.2278"* %16 to i8*
  %18 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %16, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast %"class.WTF::Vector.2278"* %15 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #12
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.WTF::Vector.2278"* %16 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %15, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %18, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %18, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %15, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %19, align 4
  %28 = load i32, i32* %26, align 4
  store i32 %28, i32* %19, align 4
  store i32 %27, i32* %26, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %15, i64 0, i32 0, i32 0, i32 0
  %30 = load %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %29, align 8
  %31 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %30, null
  br i1 %31, label %47, label %32, !prof !3

32:                                               ; preds = %14
  %33 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %30 to i8*
  %34 = icmp eq i32 %27, 0
  br i1 %34, label %45, label %35, !prof !4

35:                                               ; preds = %32
  %36 = zext i32 %27 to i64
  %37 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %30, i64 %36
  br label %38

38:                                               ; preds = %38, %35
  %39 = phi %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* [ %40, %38 ], [ %30, %35 ]
  tail call void @_ZN5blink21NGOutOfFlowLayoutPart12NodeToLayoutD2Ev(%"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %39) #12
  %40 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %39, i64 1
  %41 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %40, %37
  br i1 %41, label %42, label %38

42:                                               ; preds = %38
  store i32 0, i32* %26, align 4
  %43 = bitcast %"class.WTF::Vector.2278"* %15 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %32
  %46 = phi i8* [ %44, %42 ], [ %33, %32 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %46) #12
  store %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* null, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %29, align 8
  br label %47

47:                                               ; preds = %45, %14
  %48 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %16, i64 1
  %49 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %15, i64 1
  %50 = icmp eq %"class.WTF::Vector.2278"* %49, %10
  br i1 %50, label %51, label %14

51:                                               ; preds = %47, %4
  %52 = bitcast %"class.WTF::Vector.2278"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #12
  br label %115

53:                                               ; preds = %2
  %54 = zext i32 %1 to i64
  %55 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ES0_EEEEmm(i64 %54) #12
  %56 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %55, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #12
  %57 = lshr i64 %55, 4
  %58 = ptrtoint i8* %56 to i64
  %59 = getelementptr inbounds %"class.WTF::Vector.2275", %"class.WTF::Vector.2275"* %0, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::Vector.2278"*, %"class.WTF::Vector.2278"** %59, align 8
  %61 = getelementptr inbounds %"class.WTF::Vector.2275", %"class.WTF::Vector.2275"* %0, i64 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %60, i64 %63
  %65 = icmp eq i32 %62, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %53
  %67 = bitcast %"class.WTF::Vector.2278"* %60 to i8*
  br label %110

68:                                               ; preds = %53
  %69 = bitcast i8* %56 to %"class.WTF::Vector.2278"*
  br label %70

70:                                               ; preds = %68, %103
  %71 = phi %"class.WTF::Vector.2278"* [ %105, %103 ], [ %60, %68 ]
  %72 = phi %"class.WTF::Vector.2278"* [ %104, %103 ], [ %69, %68 ]
  %73 = bitcast %"class.WTF::Vector.2278"* %72 to i8*
  %74 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %72, i64 0, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %72, i64 0, i32 0, i32 0, i32 2
  %76 = bitcast %"class.WTF::Vector.2278"* %71 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 16, i1 false) #12
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.WTF::Vector.2278"* %72 to i64*
  store atomic i64 0, i64* %76 monotonic, align 8
  store atomic i64 %77, i64* %78 monotonic, align 8
  %79 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %71, i64 0, i32 0, i32 0, i32 1
  %80 = load i32, i32* %74, align 4
  %81 = load i32, i32* %79, align 4
  store i32 %81, i32* %74, align 4
  store i32 %80, i32* %79, align 4
  %82 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %71, i64 0, i32 0, i32 0, i32 2
  %83 = load i32, i32* %75, align 4
  %84 = load i32, i32* %82, align 4
  store i32 %84, i32* %75, align 4
  store i32 %83, i32* %82, align 4
  %85 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %71, i64 0, i32 0, i32 0, i32 0
  %86 = load %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %85, align 8
  %87 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %86, null
  br i1 %87, label %103, label %88, !prof !3

88:                                               ; preds = %70
  %89 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %86 to i8*
  %90 = icmp eq i32 %83, 0
  br i1 %90, label %101, label %91, !prof !4

91:                                               ; preds = %88
  %92 = zext i32 %83 to i64
  %93 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %86, i64 %92
  br label %94

94:                                               ; preds = %94, %91
  %95 = phi %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* [ %96, %94 ], [ %86, %91 ]
  tail call void @_ZN5blink21NGOutOfFlowLayoutPart12NodeToLayoutD2Ev(%"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %95) #12
  %96 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %95, i64 1
  %97 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %96, %93
  br i1 %97, label %98, label %94

98:                                               ; preds = %94
  store i32 0, i32* %82, align 4
  %99 = bitcast %"class.WTF::Vector.2278"* %71 to i8**
  %100 = load i8*, i8** %99, align 8
  br label %101

101:                                              ; preds = %98, %88
  %102 = phi i8* [ %100, %98 ], [ %89, %88 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %102) #12
  store %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* null, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %85, align 8
  br label %103

103:                                              ; preds = %101, %70
  %104 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %72, i64 1
  %105 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %71, i64 1
  %106 = icmp eq %"class.WTF::Vector.2278"* %105, %64
  br i1 %106, label %107, label %70

107:                                              ; preds = %103
  %108 = bitcast %"class.WTF::Vector.2275"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %66, %107
  %111 = phi i8* [ %109, %107 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #12
  %112 = bitcast %"class.WTF::Vector.2275"* %0 to i64*
  store atomic i64 %58, i64* %112 monotonic, align 8
  %113 = trunc i64 %57 to i32
  %114 = getelementptr inbounds %"class.WTF::Vector.2275", %"class.WTF::Vector.2275"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %113, i32* %114, align 8
  br label %115

115:                                              ; preds = %110, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.2278"* @_ZN3WTF6VectorINS0_IN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEEELj0ES4_E2atEj(%"class.WTF::Vector.2275"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2275", %"class.WTF::Vector.2275"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.2275", %"class.WTF::Vector.2275"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::Vector.2278"*, %"class.WTF::Vector.2278"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %24, i64 %25
  ret %"class.WTF::Vector.2278"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2278"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %24

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.2278"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* [ %20, %14 ], [ %6, %4 ]
  %16 = phi %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* [ %19, %14 ], [ null, %4 ]
  %17 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %16 to i8*
  %18 = tail call %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* @_ZN3WTF15ConstructTraitsIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutENS_12VectorTraitsIS3_EENS_18PartitionAllocatorEE9ConstructIJS3_EEEPS3_PvDpOT_(i8* %17, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* dereferenceable(224) %15) #12
  tail call void @_ZN5blink21NGOutOfFlowLayoutPart12NodeToLayoutD2Ev(%"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %15) #12
  %19 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %16, i64 1
  %20 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %15, i64 1
  %21 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %20, %10
  br i1 %21, label %22, label %14

22:                                               ; preds = %14, %4
  %23 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %23) #12
  br label %57

24:                                               ; preds = %2
  %25 = zext i32 %1 to i64
  %26 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutEEEmm(i64 %25) #12
  %27 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %26, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutEEEPKcv, i64 0, i64 0)) #12
  %28 = udiv i64 %26, 224
  %29 = ptrtoint i8* %27 to i64
  %30 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"** %30, align 8
  %32 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %0, i64 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %31, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %24
  %38 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %31 to i8*
  br label %52

39:                                               ; preds = %24
  %40 = bitcast i8* %27 to %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*
  br label %41

41:                                               ; preds = %39, %41
  %42 = phi %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* [ %47, %41 ], [ %31, %39 ]
  %43 = phi %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* [ %46, %41 ], [ %40, %39 ]
  %44 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %43 to i8*
  %45 = tail call %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* @_ZN3WTF15ConstructTraitsIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutENS_12VectorTraitsIS3_EENS_18PartitionAllocatorEE9ConstructIJS3_EEEPS3_PvDpOT_(i8* %44, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* dereferenceable(224) %42) #12
  tail call void @_ZN5blink21NGOutOfFlowLayoutPart12NodeToLayoutD2Ev(%"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %42) #12
  %46 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %43, i64 1
  %47 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %42, i64 1
  %48 = icmp eq %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %47, %35
  br i1 %48, label %49, label %41

49:                                               ; preds = %41
  %50 = bitcast %"class.WTF::Vector.2278"* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %37, %49
  %53 = phi i8* [ %51, %49 ], [ %38, %37 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %53) #12
  %54 = bitcast %"class.WTF::Vector.2278"* %0 to i64*
  store atomic i64 %29, i64* %54 monotonic, align 8
  %55 = trunc i64 %28 to i32
  %56 = getelementptr inbounds %"class.WTF::Vector.2278", %"class.WTF::Vector.2278"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %55, i32* %56, align 8
  br label %57

57:                                               ; preds = %52, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 9577618
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 9577618) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = mul i64 %0, 224
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* @_ZN3WTF15ConstructTraitsIN5blink21NGOutOfFlowLayoutPart12NodeToLayoutENS_12VectorTraitsIS3_EENS_18PartitionAllocatorEE9ConstructIJS3_EEEPS3_PvDpOT_(i8*, %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* dereferenceable(224)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"*
  %4 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %4, i64 16, i1 false) #12
  %5 = getelementptr inbounds i8, i8* %0, i64 16
  %6 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 1
  %7 = bitcast %"class.blink::NGConstraintSpace"* %6 to i64*
  %8 = bitcast i8* %5 to i64*
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* %0, i64 32
  %11 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %11, align 8
  %13 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %2
  %15 = tail call noalias i8* @malloc(i64 40) #12
  %16 = bitcast i8* %15 to %"class.blink::NGExclusionSpaceInternal"*
  tail call void @_ZN5blink24NGExclusionSpaceInternalC1ERKS0_(%"class.blink::NGExclusionSpaceInternal"* %16, %"class.blink::NGExclusionSpaceInternal"* nonnull dereferenceable(40) %12) #12
  %17 = ptrtoint i8* %15 to i64
  br label %18

18:                                               ; preds = %14, %2
  %19 = phi i64 [ %17, %14 ], [ 0, %2 ]
  %20 = bitcast i8* %10 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 1, i32 3, i32 0
  %22 = getelementptr inbounds i8, i8* %0, i64 40
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %21, align 8
  store i32 %24, i32* %23, align 8
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = tail call noalias i8* @malloc(i64 88) #12
  %29 = bitcast i8* %28 to %"struct.blink::NGConstraintSpace::RareData"*
  %30 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 1, i32 1, i32 0
  %31 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %30, align 8
  tail call void @_ZN5blink17NGConstraintSpace8RareDataC2ERKS1_(%"struct.blink::NGConstraintSpace::RareData"* %29, %"struct.blink::NGConstraintSpace::RareData"* dereferenceable(88) %31) #12
  %32 = getelementptr inbounds i8, i8* %0, i64 24
  %33 = bitcast i8* %32 to i8**
  store i8* %28, i8** %33, align 8
  br label %40

34:                                               ; preds = %18
  %35 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 1, i32 1
  %36 = getelementptr inbounds i8, i8* %0, i64 24
  %37 = bitcast %union.anon.1726* %35 to i64*
  %38 = bitcast i8* %36 to i64*
  %39 = load i64, i64* %37, align 4
  store i64 %39, i64* %38, align 8
  br label %40

40:                                               ; preds = %27, %34
  %41 = getelementptr inbounds i8, i8* %0, i64 48
  %42 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 0, i32 2
  %43 = bitcast %"struct.blink::NGLogicalStaticPosition"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %43, i64 73, i1 false) #12
  %44 = getelementptr inbounds i8, i8* %0, i64 128
  %45 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1
  %46 = bitcast %"struct.blink::NGOutOfFlowLayoutPart::OffsetInfo"* %45 to i64*
  %47 = bitcast i8* %44 to i64*
  %48 = load i64, i64* %46, align 8
  store i64 %48, i64* %47, align 8
  %49 = getelementptr inbounds i8, i8* %0, i64 136
  %50 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 1
  %51 = getelementptr inbounds %class.scoped_refptr.1723, %class.scoped_refptr.1723* %50, i64 0, i32 0
  %52 = bitcast %class.scoped_refptr.1723* %50 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast i8* %49 to i64*
  store i64 %53, i64* %54, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %51, align 8
  %55 = getelementptr inbounds i8, i8* %0, i64 144
  %56 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 60, i1 false) #12
  %57 = getelementptr inbounds i8, i8* %0, i64 208
  %58 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 2
  %59 = bitcast %"class.blink::NGBlockBreakToken"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8* %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds i8, i8* %0, i64 216
  %63 = getelementptr inbounds %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout", %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %1, i64 0, i32 3
  %64 = getelementptr inbounds %class.scoped_refptr.1871, %class.scoped_refptr.1871* %63, i64 0, i32 0
  %65 = bitcast %class.scoped_refptr.1871* %63 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast i8* %62 to i64*
  store i64 %66, i64* %67, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %64, align 8
  ret %"struct.blink::NGOutOfFlowLayoutPart::NodeToLayout"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZNK3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2095"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2095", %"class.WTF::Vector.2095"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.2095", %"class.WTF::Vector.2095"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %24, i64 %25
  ret %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %26
}

declare zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 1, i32 4001}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!8 = distinct !{!8, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!11 = distinct !{!11, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv"}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3WTF17GenericHashTraitsIN4absl8optionalIN5blink20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEE10EmptyValueEv: argument 0"}
!16 = distinct !{!16, !"_ZN3WTF17GenericHashTraitsIN4absl8optionalIN5blink20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEE10EmptyValueEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIPKN5blink12LayoutObjectEEENS1_IN4absl8optionalINS2_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEEE10EmptyValueEv: argument 0"}
!19 = distinct !{!19, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIPKN5blink12LayoutObjectEEENS1_IN4absl8optionalINS2_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEEE10EmptyValueEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN3WTF17GenericHashTraitsIN4absl8optionalIN5blink20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEE10EmptyValueEv: argument 0"}
!22 = distinct !{!22, !"_ZN3WTF17GenericHashTraitsIN4absl8optionalIN5blink20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEE10EmptyValueEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIPKN5blink12LayoutObjectEEENS1_IN4absl8optionalINS2_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEEE10EmptyValueEv: argument 0"}
!25 = distinct !{!25, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIPKN5blink12LayoutObjectEEENS1_IN4absl8optionalINS2_20NGBoxFragmentBuilder29InlineContainingBlockGeometryEEEEEE10EmptyValueEv"}
