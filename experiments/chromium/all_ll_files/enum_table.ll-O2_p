; ModuleID = '../../components/cast_channel/enum_table.cc'
source_filename = "../../components/cast_channel/enum_table.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.cast_util::GenericEnumTableEntry" = type { i8*, i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::BasicStringPiece" }
%"class.base::BasicStringPiece" = type { i8*, i64 }

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.cast_util::GenericEnumTableEntry"* @_ZN9cast_util21GenericEnumTableEntry12FindByStringEPKS0_mN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.cast_util::GenericEnumTableEntry"* readonly, i64, i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %4, %18
  %7 = phi i64 [ %19, %18 ], [ 0, %4 ]
  %8 = getelementptr inbounds %"class.cast_util::GenericEnumTableEntry", %"class.cast_util::GenericEnumTableEntry"* %0, i64 %7
  %9 = getelementptr inbounds %"class.cast_util::GenericEnumTableEntry", %"class.cast_util::GenericEnumTableEntry"* %0, i64 %7, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = icmp eq i64 %11, %3
  br i1 %12, label %13, label %18

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.cast_util::GenericEnumTableEntry", %"class.cast_util::GenericEnumTableEntry"* %8, i64 0, i32 0
  %15 = load i8*, i8** %14, align 16
  %16 = tail call i32 @bcmp(i8* %15, i8* %2, i64 %3)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %6, %13
  %19 = add nuw i64 %7, 1
  %20 = icmp eq i64 %19, %1
  br i1 %20, label %21, label %6

21:                                               ; preds = %13, %18, %4
  %22 = phi %"class.cast_util::GenericEnumTableEntry"* [ null, %4 ], [ null, %18 ], [ %8, %13 ]
  ret %"class.cast_util::GenericEnumTableEntry"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9cast_util21GenericEnumTableEntry11FindByValueEPKS0_mi(%"class.absl::optional"* noalias nocapture sret, %"class.cast_util::GenericEnumTableEntry"* nocapture readonly, i64, i32) local_unnamed_addr #1 align 2 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %4, %22
  %7 = phi i64 [ %23, %22 ], [ 0, %4 ]
  %8 = getelementptr inbounds %"class.cast_util::GenericEnumTableEntry", %"class.cast_util::GenericEnumTableEntry"* %1, i64 %7, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, %3
  br i1 %10, label %11, label %22

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.cast_util::GenericEnumTableEntry", %"class.cast_util::GenericEnumTableEntry"* %1, i64 %7, i32 0
  %13 = load i8*, i8** %12, align 16
  %14 = icmp eq i8* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.cast_util::GenericEnumTableEntry", %"class.cast_util::GenericEnumTableEntry"* %1, i64 %7, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %19, align 8
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8* %13, i8** %20, align 8
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i64 %18, i64* %21, align 8
  br label %27

22:                                               ; preds = %11, %6
  %23 = add nuw i64 %7, 1
  %24 = icmp eq i64 %23, %2
  br i1 %24, label %25, label %6

25:                                               ; preds = %22, %4
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %26, align 8
  br label %27

27:                                               ; preds = %15, %25
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #2

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
