; ModuleID = '../../third_party/libwebp/src/utils/quant_levels_utils.c'
source_filename = "../../third_party/libwebp/src/utils/quant_levels_utils.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind ssp uwtable
define hidden i32 @QuantizeLevels(i8*, i32, i32, i32, i64*) local_unnamed_addr #0 {
  %6 = alloca [256 x i32], align 16
  %7 = alloca [256 x i32], align 16
  %8 = alloca [256 x double], align 16
  %9 = alloca [256 x double], align 16
  %10 = alloca [256 x double], align 16
  %11 = alloca [256 x i8], align 16
  %12 = bitcast [256 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %12) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 1024, i1 false)
  %13 = bitcast [256 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %13) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 0, i64 1024, i1 false)
  %14 = bitcast [256 x double]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %14) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 2048, i1 false)
  %15 = mul nsw i32 %2, %1
  %16 = sext i32 %15 to i64
  %17 = uitofp i64 %16 to double
  %18 = fmul double %17, 1.000000e-04
  %19 = icmp eq i8* %0, null
  br i1 %19, label %312, label %20

20:                                               ; preds = %5
  %21 = icmp slt i32 %1, 1
  %22 = icmp slt i32 %2, 1
  %23 = or i1 %21, %22
  %24 = add i32 %3, -2
  %25 = icmp ugt i32 %24, 254
  %26 = or i1 %23, %25
  br i1 %26, label %312, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %15, 0
  br i1 %28, label %50, label %29

29:                                               ; preds = %27, %29
  %30 = phi i32 [ %44, %29 ], [ 255, %27 ]
  %31 = phi i64 [ %48, %29 ], [ 0, %27 ]
  %32 = phi i32 [ %41, %29 ], [ 0, %27 ]
  %33 = phi i32 [ %46, %29 ], [ 0, %27 ]
  %34 = getelementptr inbounds i8, i8* %0, i64 %31
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i64
  %37 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  %40 = zext i1 %39 to i32
  %41 = add nuw nsw i32 %32, %40
  %42 = zext i8 %35 to i32
  %43 = icmp sgt i32 %30, %42
  %44 = select i1 %43, i32 %42, i32 %30
  %45 = icmp ult i32 %33, %42
  %46 = select i1 %45, i32 %42, i32 %33
  %47 = add nsw i32 %38, 1
  store i32 %47, i32* %37, align 4
  %48 = add nuw i64 %31, 1
  %49 = icmp ult i64 %48, %16
  br i1 %49, label %29, label %50

50:                                               ; preds = %29, %27
  %51 = phi i32 [ 0, %27 ], [ %46, %29 ]
  %52 = phi i32 [ 0, %27 ], [ %41, %29 ]
  %53 = phi i32 [ 255, %27 ], [ %44, %29 ]
  %54 = icmp sgt i32 %52, %3
  br i1 %54, label %55, label %307

55:                                               ; preds = %50
  %56 = icmp sgt i32 %3, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = add i32 %3, -1
  br label %99

59:                                               ; preds = %55
  %60 = sitofp i32 %53 to double
  %61 = sub nsw i32 %51, %53
  %62 = sitofp i32 %61 to double
  %63 = add nsw i32 %3, -1
  %64 = sitofp i32 %63 to double
  %65 = zext i32 %3 to i64
  %66 = and i64 %65, 1
  %67 = icmp eq i32 %3, 1
  br i1 %67, label %89, label %68

68:                                               ; preds = %59
  %69 = sub nsw i64 %65, %66
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i64 [ 0, %68 ], [ %86, %70 ]
  %72 = phi i64 [ %69, %68 ], [ %87, %70 ]
  %73 = trunc i64 %71 to i32
  %74 = sitofp i32 %73 to double
  %75 = fmul double %62, %74
  %76 = fdiv double %75, %64
  %77 = fadd double %76, %60
  %78 = getelementptr inbounds [256 x double], [256 x double]* %8, i64 0, i64 %71
  store double %77, double* %78, align 16
  %79 = or i64 %71, 1
  %80 = trunc i64 %79 to i32
  %81 = sitofp i32 %80 to double
  %82 = fmul double %62, %81
  %83 = fdiv double %82, %64
  %84 = fadd double %83, %60
  %85 = getelementptr inbounds [256 x double], [256 x double]* %8, i64 0, i64 %79
  store double %84, double* %85, align 8
  %86 = add nuw nsw i64 %71, 2
  %87 = add i64 %72, -2
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %70

89:                                               ; preds = %70, %59
  %90 = phi i64 [ 0, %59 ], [ %86, %70 ]
  %91 = icmp eq i64 %66, 0
  br i1 %91, label %99, label %92

92:                                               ; preds = %89
  %93 = trunc i64 %90 to i32
  %94 = sitofp i32 %93 to double
  %95 = fmul double %62, %94
  %96 = fdiv double %95, %64
  %97 = fadd double %96, %60
  %98 = getelementptr inbounds [256 x double], [256 x double]* %8, i64 0, i64 %90
  store double %97, double* %98, align 8
  br label %99

99:                                               ; preds = %92, %89, %57
  %100 = phi i32 [ %58, %57 ], [ %63, %89 ], [ %63, %92 ]
  %101 = sext i32 %53 to i64
  %102 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %101
  store i32 0, i32* %102, align 4
  %103 = sext i32 %51 to i64
  %104 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %103
  store i32 %100, i32* %104, align 4
  %105 = bitcast [256 x double]* %9 to i8*
  %106 = bitcast [256 x double]* %10 to i8*
  %107 = icmp slt i32 %51, %53
  %108 = icmp slt i32 %3, 3
  %109 = sext i32 %100 to i64
  %110 = zext i32 %100 to i64
  %111 = add nsw i64 %110, -1
  %112 = add nsw i64 %103, 1
  %113 = sub nsw i64 %112, %101
  %114 = and i64 %111, 1
  %115 = icmp eq i32 %100, 2
  %116 = sub nsw i64 %111, %114
  %117 = icmp eq i64 %114, 0
  %118 = and i64 %113, 1
  %119 = icmp eq i64 %118, 0
  %120 = sitofp i32 %53 to double
  %121 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %101
  %122 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %101
  %123 = add nsw i64 %101, 1
  %124 = icmp eq i32 %51, %53
  br label %125

125:                                              ; preds = %248, %99
  %126 = phi double [ 0x47D2CED32A16A1B1, %99 ], [ %249, %248 ]
  %127 = phi i32 [ 0, %99 ], [ %252, %248 ]
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %105) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %105, i8 0, i64 2048, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %106) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %106, i8 0, i64 2048, i1 false)
  br i1 %107, label %168, label %128

128:                                              ; preds = %125, %164
  %129 = phi i64 [ %166, %164 ], [ %101, %125 ]
  %130 = phi i64 [ %137, %164 ], [ 0, %125 ]
  %131 = trunc i64 %129 to i32
  %132 = shl nsw i32 %131, 1
  %133 = sitofp i32 %132 to double
  %134 = shl i64 %130, 32
  %135 = ashr exact i64 %134, 32
  br label %136

136:                                              ; preds = %128, %139
  %137 = phi i64 [ %135, %128 ], [ %142, %139 ]
  %138 = icmp slt i64 %137, %109
  br i1 %138, label %139, label %147

139:                                              ; preds = %136
  %140 = getelementptr inbounds [256 x double], [256 x double]* %8, i64 0, i64 %137
  %141 = load double, double* %140, align 8
  %142 = add nsw i64 %137, 1
  %143 = getelementptr inbounds [256 x double], [256 x double]* %8, i64 0, i64 %142
  %144 = load double, double* %143, align 8
  %145 = fadd double %141, %144
  %146 = fcmp olt double %145, %133
  br i1 %146, label %136, label %147

147:                                              ; preds = %136, %139
  %148 = trunc i64 %137 to i32
  %149 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %129
  %150 = load i32, i32* %149, align 4
  %151 = icmp sgt i32 %150, 0
  br i1 %151, label %152, label %164

152:                                              ; preds = %147
  %153 = mul nsw i32 %150, %131
  %154 = sitofp i32 %153 to double
  %155 = shl i64 %137, 32
  %156 = ashr exact i64 %155, 32
  %157 = getelementptr inbounds [256 x double], [256 x double]* %9, i64 0, i64 %156
  %158 = load double, double* %157, align 8
  %159 = fadd double %158, %154
  store double %159, double* %157, align 8
  %160 = sitofp i32 %150 to double
  %161 = getelementptr inbounds [256 x double], [256 x double]* %10, i64 0, i64 %156
  %162 = load double, double* %161, align 8
  %163 = fadd double %162, %160
  store double %163, double* %161, align 8
  br label %164

164:                                              ; preds = %152, %147
  %165 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %129
  store i32 %148, i32* %165, align 4
  %166 = add nsw i64 %129, 1
  %167 = icmp slt i64 %129, %103
  br i1 %167, label %128, label %168

168:                                              ; preds = %164, %125
  br i1 %108, label %197, label %169

169:                                              ; preds = %168
  br i1 %115, label %186, label %170

170:                                              ; preds = %169, %319
  %171 = phi i64 [ %320, %319 ], [ 1, %169 ]
  %172 = phi i64 [ %321, %319 ], [ %116, %169 ]
  %173 = getelementptr inbounds [256 x double], [256 x double]* %10, i64 0, i64 %171
  %174 = load double, double* %173, align 8
  %175 = fcmp ogt double %174, 0.000000e+00
  br i1 %175, label %176, label %181

176:                                              ; preds = %170
  %177 = getelementptr inbounds [256 x double], [256 x double]* %9, i64 0, i64 %171
  %178 = load double, double* %177, align 8
  %179 = fdiv double %178, %174
  %180 = getelementptr inbounds [256 x double], [256 x double]* %8, i64 0, i64 %171
  store double %179, double* %180, align 8
  br label %181

181:                                              ; preds = %176, %170
  %182 = add nuw nsw i64 %171, 1
  %183 = getelementptr inbounds [256 x double], [256 x double]* %10, i64 0, i64 %182
  %184 = load double, double* %183, align 8
  %185 = fcmp ogt double %184, 0.000000e+00
  br i1 %185, label %314, label %319

186:                                              ; preds = %319, %169
  %187 = phi i64 [ 1, %169 ], [ %320, %319 ]
  br i1 %117, label %197, label %188

188:                                              ; preds = %186
  %189 = getelementptr inbounds [256 x double], [256 x double]* %10, i64 0, i64 %187
  %190 = load double, double* %189, align 8
  %191 = fcmp ogt double %190, 0.000000e+00
  br i1 %191, label %192, label %197

192:                                              ; preds = %188
  %193 = getelementptr inbounds [256 x double], [256 x double]* %9, i64 0, i64 %187
  %194 = load double, double* %193, align 8
  %195 = fdiv double %194, %190
  %196 = getelementptr inbounds [256 x double], [256 x double]* %8, i64 0, i64 %187
  store double %195, double* %196, align 8
  br label %197

197:                                              ; preds = %186, %188, %192, %168
  br i1 %107, label %248, label %198

198:                                              ; preds = %197
  br i1 %119, label %210, label %199

199:                                              ; preds = %198
  %200 = load i32, i32* %121, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [256 x double], [256 x double]* %8, i64 0, i64 %201
  %203 = load double, double* %202, align 8
  %204 = fsub double %120, %203
  %205 = load i32, i32* %122, align 4
  %206 = sitofp i32 %205 to double
  %207 = fmul double %204, %206
  %208 = fmul double %204, %207
  %209 = fadd double %208, 0.000000e+00
  br label %210

210:                                              ; preds = %199, %198
  %211 = phi i64 [ %123, %199 ], [ %101, %198 ]
  %212 = phi double [ %209, %199 ], [ 0.000000e+00, %198 ]
  %213 = phi double [ %209, %199 ], [ undef, %198 ]
  br i1 %124, label %248, label %214

214:                                              ; preds = %210, %214
  %215 = phi i64 [ %246, %214 ], [ %211, %210 ]
  %216 = phi double [ %245, %214 ], [ %212, %210 ]
  %217 = trunc i64 %215 to i32
  %218 = sitofp i32 %217 to double
  %219 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %215
  %220 = load i32, i32* %219, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [256 x double], [256 x double]* %8, i64 0, i64 %221
  %223 = load double, double* %222, align 8
  %224 = fsub double %218, %223
  %225 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %215
  %226 = load i32, i32* %225, align 4
  %227 = sitofp i32 %226 to double
  %228 = fmul double %224, %227
  %229 = fmul double %224, %228
  %230 = fadd double %216, %229
  %231 = add nsw i64 %215, 1
  %232 = trunc i64 %231 to i32
  %233 = sitofp i32 %232 to double
  %234 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %231
  %235 = load i32, i32* %234, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [256 x double], [256 x double]* %8, i64 0, i64 %236
  %238 = load double, double* %237, align 8
  %239 = fsub double %233, %238
  %240 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %231
  %241 = load i32, i32* %240, align 4
  %242 = sitofp i32 %241 to double
  %243 = fmul double %239, %242
  %244 = fmul double %239, %243
  %245 = fadd double %230, %244
  %246 = add nsw i64 %215, 2
  %247 = icmp slt i64 %231, %103
  br i1 %247, label %214, label %248

248:                                              ; preds = %210, %214, %197
  %249 = phi double [ 0.000000e+00, %197 ], [ %213, %210 ], [ %245, %214 ]
  %250 = fsub double %126, %249
  %251 = fcmp uge double %250, %18
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %106) #2
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %105) #2
  %252 = add nuw nsw i32 %127, 1
  %253 = icmp ult i32 %252, 6
  %254 = and i1 %251, %253
  br i1 %254, label %125, label %255

255:                                              ; preds = %248
  %256 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %256) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %256, i8 -86, i64 256, i1 false)
  br i1 %107, label %275, label %257

257:                                              ; preds = %255
  %258 = add nsw i64 %103, 1
  %259 = sub nsw i64 %258, %101
  %260 = and i64 %259, 1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %272, label %262

262:                                              ; preds = %257
  %263 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %101
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds [256 x double], [256 x double]* %8, i64 0, i64 %265
  %267 = load double, double* %266, align 8
  %268 = fadd double %267, 5.000000e-01
  %269 = fptoui double %268 to i8
  %270 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 %101
  store i8 %269, i8* %270, align 1
  %271 = add nsw i64 %101, 1
  br label %272

272:                                              ; preds = %257, %262
  %273 = phi i64 [ %101, %257 ], [ %271, %262 ]
  %274 = icmp eq i32 %51, %53
  br i1 %274, label %275, label %276

275:                                              ; preds = %272, %276, %255
  br i1 %28, label %306, label %297

276:                                              ; preds = %272, %276
  %277 = phi i64 [ %295, %276 ], [ %273, %272 ]
  %278 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %277
  %279 = load i32, i32* %278, align 4
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds [256 x double], [256 x double]* %8, i64 0, i64 %280
  %282 = load double, double* %281, align 8
  %283 = fadd double %282, 5.000000e-01
  %284 = fptoui double %283 to i8
  %285 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 %277
  store i8 %284, i8* %285, align 1
  %286 = add nsw i64 %277, 1
  %287 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds [256 x double], [256 x double]* %8, i64 0, i64 %289
  %291 = load double, double* %290, align 8
  %292 = fadd double %291, 5.000000e-01
  %293 = fptoui double %292 to i8
  %294 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 %286
  store i8 %293, i8* %294, align 1
  %295 = add nsw i64 %277, 2
  %296 = icmp slt i64 %286, %103
  br i1 %296, label %276, label %275

297:                                              ; preds = %275, %297
  %298 = phi i64 [ %304, %297 ], [ 0, %275 ]
  %299 = getelementptr inbounds i8, i8* %0, i64 %298
  %300 = load i8, i8* %299, align 1
  %301 = zext i8 %300 to i64
  %302 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 %301
  %303 = load i8, i8* %302, align 1
  store i8 %303, i8* %299, align 1
  %304 = add nuw i64 %298, 1
  %305 = icmp ult i64 %304, %16
  br i1 %305, label %297, label %306

306:                                              ; preds = %297, %275
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %256) #2
  br label %307

307:                                              ; preds = %50, %306
  %308 = phi double [ 0.000000e+00, %50 ], [ %249, %306 ]
  %309 = icmp eq i64* %4, null
  br i1 %309, label %312, label %310

310:                                              ; preds = %307
  %311 = fptoui double %308 to i64
  store i64 %311, i64* %4, align 8
  br label %312

312:                                              ; preds = %310, %307, %20, %5
  %313 = phi i32 [ 0, %5 ], [ 0, %20 ], [ 1, %307 ], [ 1, %310 ]
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %14) #2
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %13) #2
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %12) #2
  ret i32 %313

314:                                              ; preds = %181
  %315 = getelementptr inbounds [256 x double], [256 x double]* %9, i64 0, i64 %182
  %316 = load double, double* %315, align 8
  %317 = fdiv double %316, %184
  %318 = getelementptr inbounds [256 x double], [256 x double]* %8, i64 0, i64 %182
  store double %317, double* %318, align 8
  br label %319

319:                                              ; preds = %314, %181
  %320 = add nuw nsw i64 %171, 2
  %321 = add i64 %172, -2
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %186, label %170
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
