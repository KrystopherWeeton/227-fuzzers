; ModuleID = '../../third_party/blink/renderer/platform/scheduler/worker/worker_metrics_helper.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/worker/worker_metrics_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::scheduler::WorkerMetricsHelper" = type { %"class.blink::scheduler::MetricsHelper", %"class.scheduling_metrics::TaskDurationMetricReporter.6", %"class.scheduling_metrics::TaskDurationMetricReporter.6", %"class.scheduling_metrics::TaskDurationMetricReporter.7", %"class.scheduling_metrics::TaskDurationMetricReporter.7", %"class.absl::optional" }
%"class.blink::scheduler::MetricsHelper" = type { i32, %"class.scheduling_metrics::ThreadMetrics", %"class.scheduling_metrics::TaskDurationMetricReporter.5", %"class.scheduling_metrics::TaskDurationMetricReporter.5", %"class.scheduling_metrics::TaskDurationMetricReporter.5", %"class.scheduling_metrics::TaskDurationMetricReporter.5", %"class.scheduling_metrics::TaskDurationMetricReporter.5", %"class.scheduling_metrics::TaskDurationMetricReporter.5" }
%"class.scheduling_metrics::ThreadMetrics" = type { i32, i8, %"class.base::ThreadTicks", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter", %"class.scheduling_metrics::TaskDurationMetricReporter" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.scheduling_metrics::TaskDurationMetricReporter" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::ScaledLinearHistogram"* }
%"class.base::ScaledLinearHistogram" = type { %"class.base::HistogramBase"*, i32, %"class.std::__1::vector" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"class.scheduling_metrics::TaskDurationMetricReporter.5" = type { %"class.std::__1::unique_ptr" }
%"class.scheduling_metrics::TaskDurationMetricReporter.6" = type { %"class.std::__1::unique_ptr" }
%"class.scheduling_metrics::TaskDurationMetricReporter.7" = type { %"class.std::__1::unique_ptr" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.14, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i32 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.13" }
%"class.base::time_internal::TimeBase.13" = type { i64 }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.14 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15" }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::sequence_manager::TaskQueue::TaskTiming" = type { i32, i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::ThreadTicks" }
%"struct.blink::scheduler::internal::ProcessState" = type { %"struct.std::__1::atomic.16" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i8 }

@.str = private unnamed_addr constant [59 x i8] c"RendererScheduler.TaskDurationPerTaskType2.DedicatedWorker\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"RendererScheduler.TaskCPUDurationPerTaskType2.DedicatedWorker\00", align 1
@.str.2 = private unnamed_addr constant [66 x i8] c"RendererScheduler.TaskDurationPerFrameOriginType2.DedicatedWorker\00", align 1
@.str.3 = private unnamed_addr constant [77 x i8] c"RendererScheduler.TaskDurationPerFrameOriginType2.DedicatedWorker.Background\00", align 1

@_ZN5blink9scheduler19WorkerMetricsHelperC1ENS_10ThreadTypeEb = hidden unnamed_addr alias void (%"class.blink::scheduler::WorkerMetricsHelper"*, i32, i1), void (%"class.blink::scheduler::WorkerMetricsHelper"*, i32, i1)* @_ZN5blink9scheduler19WorkerMetricsHelperC2ENS_10ThreadTypeEb
@_ZN5blink9scheduler19WorkerMetricsHelperD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::WorkerMetricsHelper"*), void (%"class.blink::scheduler::WorkerMetricsHelper"*)* @_ZN5blink9scheduler19WorkerMetricsHelperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler19WorkerMetricsHelperC2ENS_10ThreadTypeEb(%"class.blink::scheduler::WorkerMetricsHelper"*, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 0
  tail call void @_ZN5blink9scheduler13MetricsHelperC2ENS_10ThreadTypeEb(%"class.blink::scheduler::MetricsHelper"* %4, i32 %1, i1 zeroext %2) #8
  %5 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 1
  %6 = tail call i8* @_Znwm(i64 40) #9
  %7 = bitcast i8* %6 to %"class.base::ScaledLinearHistogram"*
  tail call void @_ZN4base21ScaledLinearHistogramC1EPKciijii(%"class.base::ScaledLinearHistogram"* nonnull %7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 1, i32 79, i32 80, i32 1000000, i32 1) #8
  %8 = ptrtoint i8* %6 to i64
  %9 = bitcast %"class.scheduling_metrics::TaskDurationMetricReporter.6"* %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 2
  %11 = tail call i8* @_Znwm(i64 40) #9
  %12 = bitcast i8* %11 to %"class.base::ScaledLinearHistogram"*
  tail call void @_ZN4base21ScaledLinearHistogramC1EPKciijii(%"class.base::ScaledLinearHistogram"* nonnull %12, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 79, i32 80, i32 1000000, i32 1) #8
  %13 = ptrtoint i8* %11 to i64
  %14 = bitcast %"class.scheduling_metrics::TaskDurationMetricReporter.6"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 3
  %16 = tail call i8* @_Znwm(i64 40) #9
  %17 = bitcast i8* %16 to %"class.base::ScaledLinearHistogram"*
  tail call void @_ZN4base21ScaledLinearHistogramC1EPKciijii(%"class.base::ScaledLinearHistogram"* nonnull %17, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1000000, i32 1) #8
  %18 = ptrtoint i8* %16 to i64
  %19 = bitcast %"class.scheduling_metrics::TaskDurationMetricReporter.7"* %15 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 4
  %21 = tail call i8* @_Znwm(i64 40) #9
  %22 = bitcast i8* %21 to %"class.base::ScaledLinearHistogram"*
  tail call void @_ZN4base21ScaledLinearHistogramC1EPKciijii(%"class.base::ScaledLinearHistogram"* nonnull %22, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1000000, i32 1) #8
  %23 = ptrtoint i8* %21 to i64
  %24 = bitcast %"class.scheduling_metrics::TaskDurationMetricReporter.7"* %20 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %25, align 4
  ret void
}

declare void @_ZN5blink9scheduler13MetricsHelperC2ENS_10ThreadTypeEb(%"class.blink::scheduler::MetricsHelper"*, i32, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler19WorkerMetricsHelperD2Ev(%"class.blink::scheduler::WorkerMetricsHelper"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %2, align 8
  store %"class.base::ScaledLinearHistogram"* null, %"class.base::ScaledLinearHistogram"** %2, align 8
  %4 = icmp eq %"class.base::ScaledLinearHistogram"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN4base21ScaledLinearHistogramD1Ev(%"class.base::ScaledLinearHistogram"* nonnull %3) #8
  %6 = bitcast %"class.base::ScaledLinearHistogram"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %8, align 8
  store %"class.base::ScaledLinearHistogram"* null, %"class.base::ScaledLinearHistogram"** %8, align 8
  %10 = icmp eq %"class.base::ScaledLinearHistogram"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN4base21ScaledLinearHistogramD1Ev(%"class.base::ScaledLinearHistogram"* nonnull %9) #8
  %12 = bitcast %"class.base::ScaledLinearHistogram"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #9
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %14, align 8
  store %"class.base::ScaledLinearHistogram"* null, %"class.base::ScaledLinearHistogram"** %14, align 8
  %16 = icmp eq %"class.base::ScaledLinearHistogram"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  tail call void @_ZN4base21ScaledLinearHistogramD1Ev(%"class.base::ScaledLinearHistogram"* nonnull %15) #8
  %18 = bitcast %"class.base::ScaledLinearHistogram"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %20, align 8
  store %"class.base::ScaledLinearHistogram"* null, %"class.base::ScaledLinearHistogram"** %20, align 8
  %22 = icmp eq %"class.base::ScaledLinearHistogram"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  tail call void @_ZN4base21ScaledLinearHistogramD1Ev(%"class.base::ScaledLinearHistogram"* nonnull %21) #8
  %24 = bitcast %"class.base::ScaledLinearHistogram"* %21 to i8*
  tail call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 0
  tail call void @_ZN5blink9scheduler13MetricsHelperD2Ev(%"class.blink::scheduler::MetricsHelper"* %26) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9scheduler13MetricsHelperD2Ev(%"class.blink::scheduler::MetricsHelper"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9scheduler19WorkerMetricsHelper18SetParentFrameTypeENS0_15FrameOriginTypeE(%"class.blink::scheduler::WorkerMetricsHelper"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast i8* %3 to i64*
  %5 = zext i32 %1 to i64
  %6 = shl nuw i64 %5, 32
  %7 = or i64 %6, 1
  store i64 %7, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler19WorkerMetricsHelper17RecordTaskMetricsERKN4base16sequence_manager4TaskERKNS3_9TaskQueue10TaskTimingE(%"class.blink::scheduler::WorkerMetricsHelper"*, %"struct.base::sequence_manager::Task"* dereferenceable(128), %"class.base::sequence_manager::TaskQueue::TaskTiming"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZN5blink9scheduler13MetricsHelper17ShouldDiscardTaskERKN4base16sequence_manager4TaskERKNS3_9TaskQueue10TaskTimingE(%"class.blink::scheduler::MetricsHelper"* %4, %"struct.base::sequence_manager::Task"* dereferenceable(128) %1, %"class.base::sequence_manager::TaskQueue::TaskTiming"* dereferenceable(40) %2) #8
  br i1 %5, label %139, label %6

6:                                                ; preds = %3
  tail call void @_ZN5blink9scheduler13MetricsHelper23RecordCommonTaskMetricsERKN4base16sequence_manager4TaskERKNS3_9TaskQueue10TaskTimingE(%"class.blink::scheduler::MetricsHelper"* %4, %"struct.base::sequence_manager::Task"* dereferenceable(128) %1, %"class.base::sequence_manager::TaskQueue::TaskTiming"* dereferenceable(40) %2) #8
  %7 = tail call %"struct.blink::scheduler::internal::ProcessState"* @_ZN5blink9scheduler8internal12ProcessState3GetEv() #8
  %8 = getelementptr inbounds %"struct.blink::scheduler::internal::ProcessState", %"struct.blink::scheduler::internal::ProcessState"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i8, i8* %8 seq_cst, align 1
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 3
  br i1 %14, label %15, label %139

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %1, i64 0, i32 3
  %17 = load i8, i8* %16, align 1
  %18 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 3, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 4, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = sub nsw i64 %21, %19
  %23 = tail call i1 @llvm.is.constant.i64(i64 %22) #8
  br i1 %23, label %31, label %24

24:                                               ; preds = %15
  %25 = icmp slt i64 %22, 0
  %26 = select i1 %25, i32 -2147483648, i32 2147483647
  %27 = add i64 %22, 2147483648
  %28 = icmp ult i64 %27, 4294967296
  %29 = trunc i64 %22 to i32
  %30 = select i1 %28, i32 %29, i32 %26, !prof !2
  br label %37

31:                                               ; preds = %15
  %32 = icmp sgt i64 %22, 2147483647
  br i1 %32, label %40, label %33

33:                                               ; preds = %31
  %34 = icmp sgt i64 %22, -2147483648
  %35 = select i1 %34, i64 %22, i64 -2147483648
  %36 = trunc i64 %35 to i32
  br label %37

37:                                               ; preds = %33, %24
  %38 = phi i32 [ %30, %24 ], [ %36, %33 ]
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %37, %31
  %41 = phi i32 [ %38, %37 ], [ 2147483647, %31 ]
  %42 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %42, align 8
  %44 = zext i8 %17 to i32
  tail call void @_ZN4base21ScaledLinearHistogram14AddScaledCountEii(%"class.base::ScaledLinearHistogram"* %43, i32 %44, i32 %41) #8
  br label %45

45:                                               ; preds = %37, %40
  %46 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 2
  %47 = load i8, i8* %46, align 1, !range !3
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %77, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 5, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue::TaskTiming", %"class.base::sequence_manager::TaskQueue::TaskTiming"* %2, i64 0, i32 6, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = sub nsw i64 %53, %51
  %55 = tail call i1 @llvm.is.constant.i64(i64 %54) #8
  br i1 %55, label %63, label %56

56:                                               ; preds = %49
  %57 = icmp slt i64 %54, 0
  %58 = select i1 %57, i32 -2147483648, i32 2147483647
  %59 = add i64 %54, 2147483648
  %60 = icmp ult i64 %59, 4294967296
  %61 = trunc i64 %54 to i32
  %62 = select i1 %60, i32 %61, i32 %58, !prof !2
  br label %69

63:                                               ; preds = %49
  %64 = icmp sgt i64 %54, 2147483647
  br i1 %64, label %72, label %65

65:                                               ; preds = %63
  %66 = icmp sgt i64 %54, -2147483648
  %67 = select i1 %66, i64 %54, i64 -2147483648
  %68 = trunc i64 %67 to i32
  br label %69

69:                                               ; preds = %65, %56
  %70 = phi i32 [ %62, %56 ], [ %68, %65 ]
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %72, label %77

72:                                               ; preds = %69, %63
  %73 = phi i32 [ %70, %69 ], [ 2147483647, %63 ]
  %74 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %75 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %74, align 8
  %76 = zext i8 %17 to i32
  tail call void @_ZN4base21ScaledLinearHistogram14AddScaledCountEii(%"class.base::ScaledLinearHistogram"* %75, i32 %76, i32 %73) #8
  br label %77

77:                                               ; preds = %45, %72, %69
  %78 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %79 = load i8, i8* %78, align 4, !range !3
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %139, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = load i64, i64* %18, align 8
  %85 = load i64, i64* %20, align 8
  %86 = sub nsw i64 %85, %84
  %87 = tail call i1 @llvm.is.constant.i64(i64 %86) #8
  br i1 %87, label %95, label %88

88:                                               ; preds = %81
  %89 = icmp slt i64 %86, 0
  %90 = select i1 %89, i32 -2147483648, i32 2147483647
  %91 = add i64 %86, 2147483648
  %92 = icmp ult i64 %91, 4294967296
  %93 = trunc i64 %86 to i32
  %94 = select i1 %92, i32 %93, i32 %90, !prof !2
  br label %101

95:                                               ; preds = %81
  %96 = icmp sgt i64 %86, 2147483647
  br i1 %96, label %104, label %97

97:                                               ; preds = %95
  %98 = icmp sgt i64 %86, -2147483648
  %99 = select i1 %98, i64 %86, i64 -2147483648
  %100 = trunc i64 %99 to i32
  br label %101

101:                                              ; preds = %97, %88
  %102 = phi i32 [ %94, %88 ], [ %100, %97 ]
  %103 = icmp sgt i32 %102, 0
  br i1 %103, label %104, label %108

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %102, %101 ], [ 2147483647, %95 ]
  %106 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %107 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %106, align 8
  tail call void @_ZN4base21ScaledLinearHistogram14AddScaledCountEii(%"class.base::ScaledLinearHistogram"* %107, i32 %83, i32 %105) #8
  br label %108

108:                                              ; preds = %101, %104
  br i1 %11, label %139, label %109

109:                                              ; preds = %108
  %110 = load i8, i8* %78, align 4, !range !3
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #10
  unreachable

113:                                              ; preds = %109
  %114 = load i32, i32* %82, align 4
  %115 = load i64, i64* %18, align 8
  %116 = load i64, i64* %20, align 8
  %117 = sub nsw i64 %116, %115
  %118 = tail call i1 @llvm.is.constant.i64(i64 %117) #8
  br i1 %118, label %126, label %119

119:                                              ; preds = %113
  %120 = icmp slt i64 %117, 0
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  %122 = add i64 %117, 2147483648
  %123 = icmp ult i64 %122, 4294967296
  %124 = trunc i64 %117 to i32
  %125 = select i1 %123, i32 %124, i32 %121, !prof !2
  br label %132

126:                                              ; preds = %113
  %127 = icmp sgt i64 %117, 2147483647
  br i1 %127, label %135, label %128

128:                                              ; preds = %126
  %129 = icmp sgt i64 %117, -2147483648
  %130 = select i1 %129, i64 %117, i64 -2147483648
  %131 = trunc i64 %130 to i32
  br label %132

132:                                              ; preds = %128, %119
  %133 = phi i32 [ %125, %119 ], [ %131, %128 ]
  %134 = icmp sgt i32 %133, 0
  br i1 %134, label %135, label %139

135:                                              ; preds = %132, %126
  %136 = phi i32 [ %133, %132 ], [ 2147483647, %126 ]
  %137 = getelementptr inbounds %"class.blink::scheduler::WorkerMetricsHelper", %"class.blink::scheduler::WorkerMetricsHelper"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %138 = load %"class.base::ScaledLinearHistogram"*, %"class.base::ScaledLinearHistogram"** %137, align 8
  tail call void @_ZN4base21ScaledLinearHistogram14AddScaledCountEii(%"class.base::ScaledLinearHistogram"* %138, i32 %114, i32 %136) #8
  br label %139

139:                                              ; preds = %108, %77, %135, %132, %6, %3
  ret void
}

declare zeroext i1 @_ZN5blink9scheduler13MetricsHelper17ShouldDiscardTaskERKN4base16sequence_manager4TaskERKNS3_9TaskQueue10TaskTimingE(%"class.blink::scheduler::MetricsHelper"*, %"struct.base::sequence_manager::Task"* dereferenceable(128), %"class.base::sequence_manager::TaskQueue::TaskTiming"* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZN5blink9scheduler13MetricsHelper23RecordCommonTaskMetricsERKN4base16sequence_manager4TaskERKNS3_9TaskQueue10TaskTimingE(%"class.blink::scheduler::MetricsHelper"*, %"struct.base::sequence_manager::Task"* dereferenceable(128), %"class.base::sequence_manager::TaskQueue::TaskTiming"* dereferenceable(40)) local_unnamed_addr #1

declare %"struct.blink::scheduler::internal::ProcessState"* @_ZN5blink9scheduler8internal12ProcessState3GetEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base21ScaledLinearHistogramD1Ev(%"class.base::ScaledLinearHistogram"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN4base21ScaledLinearHistogramC1EPKciijii(%"class.base::ScaledLinearHistogram"*, i8*, i32, i32, i32, i32, i32) unnamed_addr #1

declare void @_ZN4base21ScaledLinearHistogram14AddScaledCountEii(%"class.base::ScaledLinearHistogram"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
