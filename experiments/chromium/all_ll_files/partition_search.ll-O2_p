; ModuleID = '../../third_party/libaom/source/libaom/av1/encoder/partition_search.c'
source_filename = "../../third_party/libaom/source/libaom/av1/encoder/partition_search.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.wedge_params_type = type { i32, %struct.wedge_code_type*, i8*, [16 x i8*]* }
%struct.wedge_code_type = type { i8, i32, i32 }
%struct.anon.16 = type { i8, i8 }
%struct.PARTITION_SPEED_FEATURES = type { i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i64, i32, [5 x i32], i32, i32, i32, i32, i32, i32, i8, i32, i8, i32, i32, i32, i32, i32, i32, i32 }
%struct.AV1_COMP = type { %struct.AV1_PRIMARY*, [8 x i8], %struct.EncQuantDequantParams, %struct.ThreadData, %struct.FRAME_COUNTS, %struct.MBMIExtFrameBufferInfo, %struct.CB_COEFF_BUFFER*, %struct.CoeffBufferPool, %struct.AV1Common, %struct.AV1EncoderConfig, i32, [8 x i8], %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, i32, %struct.TemporalFilterCtx, i32, %struct.ForceIntegerMVInfo, [7 x %struct.RefCntBuffer*], %struct.RefCntBuffer*, %struct.RefreshFrameFlagsInfo, [8 x i32], %struct.ExternalFlags, %struct.yv12_buffer_config, %struct.yv12_buffer_config, i64, %struct.RD_OPT, %struct.CODING_CONTEXT, %struct.GlobalMotionInfo, %struct.WinnerModeParams, %struct.TimeStamps, %struct.RATE_CONTROL, double, i32, i32, %struct.SPEED_FEATURES, %struct.MotionVectorSearchParams, i32, %struct.EncSegmentationInfo, %struct.CYCLIC_REFRESH*, %struct.ActiveMap, i8, %struct.RefBufferStack, i32, i32, %struct.FRAME_INFO, %struct.FRAME_INDEX_SET, %struct.InitialDimensions, i32, %struct.ResizePendingParams, %struct.TileDataEnc*, i32, %struct.TokenInfo, i32, %struct.VarBasedPartitionInfo, %struct.FrameProbInfo, %struct.MultiThreadInfo, i32, i32, i32, %struct.AV1LrStruct, %struct.aom_film_grain_table_t*, %struct.aom_denoise_and_model_t*, %struct.InterpSearchFlags, i32, i32, i32, i32, %struct.RefFrameDistanceInfo, double*, %struct.SVC, i8, %struct.MV_STATS, i8, i32, i32, %struct.FirstPassData, %struct.noise_estimate, %struct.av1_denoiser, i8*, i8, i32, i64, [8 x i8] }
%struct.AV1_PRIMARY = type { %struct.AV1_COMP*, %struct.AV1_COMP*, %struct.lookahead_ctx*, i32, %struct.aom_codec_pkt_list*, i32, %struct.GF_GROUP, %struct.GF_STATE, i32, %struct.AV1LevelParams, i32, i32, %struct.TWO_PASS, %struct.PRIMARY_RATE_CONTROL, %struct.yv12_buffer_config, %struct.SequenceHeader, i32, i8, i32, i32, %struct.aom_internal_error_info, [22 x %struct.aom_variance_vtable], double*, double*, %struct.TplParams }
%struct.lookahead_ctx = type { i32, i32, [2 x %struct.read_ctx], %struct.lookahead_entry*, i32, i8 }
%struct.read_ctx = type { i32, i32, i32, i32 }
%struct.lookahead_entry = type { %struct.yv12_buffer_config, i64, i64, i32, i64 }
%struct.aom_codec_pkt_list = type { i32, i32, [1 x %struct.aom_codec_cx_pkt] }
%struct.aom_codec_cx_pkt = type { i32, %union.anon.10 }
%union.anon.10 = type { %struct.aom_psnr_pkt }
%struct.aom_psnr_pkt = type { [4 x i32], [4 x i64], [4 x double], [4 x i32], [4 x i64], [4 x double] }
%struct.GF_GROUP = type { [250 x i8], [250 x i8], [250 x i8], [250 x i32], [250 x i32], i32, i32, [250 x i8], [250 x i32], [250 x i8], [250 x i8], i32, i32 }
%struct.GF_STATE = type { i32 }
%struct.AV1LevelParams = type { [32 x i8], i32, [32 x %struct.AV1LevelInfo*] }
%struct.AV1LevelInfo = type { %struct.AV1LevelStats, %struct.AV1LevelSpec, %struct.FrameWindowBuffer, [24 x %struct.DECODER_MODEL] }
%struct.AV1LevelStats = type { i32, i32, i32, i32, i32, i32, i32, i32, double, double, double }
%struct.AV1LevelSpec = type { i8, i32, i32, i32, i32, i32, i32, i32, i64, i64, double, double, double, double }
%struct.FrameWindowBuffer = type { [256 x %struct.FrameRecord], i32, i32 }
%struct.FrameRecord = type { i64, i64, i64, i32, i32, i32, i32, i32 }
%struct.DECODER_MODEL = type { i8, i8, i8, i8, i32, i32, i32, i32, i64, double, double, double, double, i32, i32, i32, [8 x i32], [10 x %struct.FRAME_BUFFER], %struct.DFG_INTERVAL_QUEUE, double, double, i64, double, double, i32, i32, double, double }
%struct.FRAME_BUFFER = type { i32, i32, i32, i8, double }
%struct.DFG_INTERVAL_QUEUE = type { i32, i32, double, [64 x %struct.DFG_INTERVAL] }
%struct.DFG_INTERVAL = type { double, double, double }
%struct.TWO_PASS = type { i32, [36 x %struct.FIRSTPASS_STATS*], i32, %struct.FIRSTPASS_STATS*, %struct.STATS_BUFFER_CTX*, i32, i64, double, double, double, double, double, i8, i64, i64, double, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.FIRSTPASS_STATS = type { double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, i64, double, double }
%struct.STATS_BUFFER_CTX = type { %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS* }
%struct.PRIMARY_RATE_CONTROL = type { i64, i32, i32, [15 x i32], i32, i32, [150 x %struct.regions], i32, i32, i32, i32, i32, i32, i64, i64, i64, i32, float, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.regions = type { i32, i32, double, double, double, double, double, i32 }
%struct.SequenceHeader = type { i32, i32, i32, i32, i8, i32, i32, i8, i32, i32, %struct.OrderHintInfo, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i32, [32 x i32], i32, %struct.aom_timing, i8, %struct.aom_dec_model_info, i8, [32 x i8], [32 x i8], [33 x %struct.aom_dec_model_op_parameters] }
%struct.OrderHintInfo = type { i32, i32, i32, i32 }
%struct.aom_timing = type { i32, i32, i32, i32 }
%struct.aom_dec_model_info = type { i32, i32, i32, i32 }
%struct.aom_dec_model_op_parameters = type { i32, i64, i64, i32, i32, i32, i32, i32 }
%struct.aom_internal_error_info = type { i32, i32, [200 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.aom_variance_vtable = type { i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32, i8*)*, i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, void (i8*, i32, i8**, i32, i32*)*, void (i8*, i32, i8**, i32, i32*)*, i32 (i8*, i32, i8*, i32, i8*, i8*, i32, i32)*, i32 (i8*, i32, i32, i32, i8*, i32, i8*, i8*, i32, i32, i32*)*, i32 (i8*, i32, i32*, i32*)*, i32 (i8*, i32, i32*, i32*, i32*)*, i32 (i8*, i32, i32, i32, i32*, i32*, i32*)*, i32 (i8*, i32, i8*, i32, i8*, %struct.dist_wtd_comp_params*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*, %struct.dist_wtd_comp_params*)* }
%struct.dist_wtd_comp_params = type { i32, i32, i32 }
%struct.TplParams = type { i8, i8, [79 x %struct.TplDepFrame], [35 x %struct.TplDepStats*], [35 x %struct.yv12_buffer_config], %struct.TplDepFrame*, %struct.scale_factors, i32, [7 x %struct.yv12_buffer_config*], [7 x %struct.yv12_buffer_config*], %struct.AV1TplRowMultiThreadSync, i32 }
%struct.TplDepFrame = type { i8, %struct.TplDepStats*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, [8 x i32], i32, i32, i32, i32, i32, i32, i32, [256 x double], [256 x double], i32, i32 }
%struct.TplDepStats = type { i64, i64, i64, i64, [2 x i64], i64, i64, [2 x i64], i64, i64, [7 x %union.int_mv], [2 x i32], [7 x i64] }
%union.int_mv = type { i32 }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)* }
%struct.AV1TplRowMultiThreadSync = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.12, %union.anon.14, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.12 = type { i64 }
%union.anon.14 = type { i64 }
%struct.EncQuantDequantParams = type { %struct.QUANTS, %struct.Dequants }
%struct.QUANTS = type { [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]] }
%struct.Dequants = type { [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]] }
%struct.ThreadData = type { %struct.macroblock, %struct.RD_COUNTS, %struct.FRAME_COUNTS*, %struct.PC_TREE_SHARED_BUFFERS, %struct.SIMPLE_MOTION_DATA_TREE*, %struct.SIMPLE_MOTION_DATA_TREE*, %struct.inter_modes_info*, [2 x [2 x i32*]], %struct.OBMCBuffer, %struct.PALETTE_BUFFER*, %struct.CompoundTypeRdBuffers, i16*, [2 x i8*], i32, i32, i32, i32, [4 x i32], %struct.frame_contexts*, %struct.VP64x64*, i32, %struct.PICK_MODE_CONTEXT*, %struct.TemporalFilterData, %struct.TplTxfmStats, %struct.PixelLevelGradientInfo*, [8 x i8] }
%struct.macroblock = type { [3 x %struct.macroblock_plane], [8 x i8], %struct.macroblockd, %struct.MB_MODE_INFO_EXT, %struct.MB_MODE_INFO_EXT_FRAME*, %struct.frame_contexts*, %struct.frame_contexts*, %struct.CB_COEFF_BUFFER*, [2 x i16], %struct.OBMCBuffer, %struct.PALETTE_BUFFER*, %struct.CompoundTypeRdBuffers, i16*, %struct.aom_internal_error_info*, [2 x i8*], i32, i32, i32, i32, i32, %struct.ModeCosts, %struct.MvCosts*, %struct.IntraBCMVCosts*, %struct.CoeffCosts, i32, i32, i32, i32, i32, i32, %struct.SuperBlockEnc, %struct.CONTENT_STATE_SB, [8 x i32], i32, [8 x i8], [8 x %struct.WARP_SAMPLE_INFO], [1024 x i32], i32, %struct.PartitionSearchInfo, i32, i32, [22 x [169 x i32]], %struct.WinnerModeStats*, i32, i8, %struct.inter_modes_info*, i8, [64 x %struct.COMP_RD_STATS], i32, i32, %struct.intrabc_hash_info, i32, %struct.MB_MODE_INFO*, %struct.PixelLevelGradientInfo*, [2 x i8], [8 x i32], %struct.FullMvLimits, %struct.TxfmSearchParams, %struct.TxfmSearchInfo, [2 x i8], i32, [8 x i32] }
%struct.macroblock_plane = type { i16*, i32*, i32*, i32*, i16*, i8*, %struct.buf_2d, i16*, i16*, i16*, i16*, i16*, i16*, i16* }
%struct.buf_2d = type { i8*, i8*, i32, i32, i32 }
%struct.macroblockd = type { i32, i32, i32, i8, [3 x %struct.macroblockd_plane], %struct.TileInfo, %struct.MB_MODE_INFO**, i8, i8, i8, i8, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, i8*, i32, i32, i32, i32, i32, [2 x %struct.scale_factors*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [32 x i8]], i8*, [32 x i8], i8*, i8*, [32 x i8], [3 x %struct.WienerInfo], [3 x %struct.SgrprojInfo], i8, i8, [29 x [8 x %struct.candidate_mv]], [29 x [8 x i16]], i8, i8, [8 x i8], %struct.frame_contexts*, i32, [8 x i32], [8 x i32], i32, i32, %struct.aom_internal_error_info*, %struct.WarpedMotionParams*, i8, [4 x i8], [4 x i8], i8*, %struct.cfl_ctx, [2 x i16], i16*, [2 x i8*], [8 x i8] }
%struct.macroblockd_plane = type { i8, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i8*, i8, i8, [8 x [19 x i8*]], [8 x [19 x i8*]] }
%struct.TileInfo = type { i32, i32, i32, i32, i32, i32 }
%struct.WienerInfo = type { [8 x i16], [8 x i16] }
%struct.SgrprojInfo = type { i32, [2 x i32] }
%struct.candidate_mv = type { %union.int_mv, %union.int_mv }
%struct.WarpedMotionParams = type { [8 x i32], i16, i16, i16, i16, i8, i8 }
%struct.cfl_ctx = type { [1024 x i16], [1024 x i16], [2 x i32], i32, [2 x [32 x i16]], i32, i32, i32, i32, i32, i32 }
%struct.MB_MODE_INFO_EXT = type { [29 x [4 x %struct.candidate_mv]], [29 x [4 x i16]], [29 x i8], [8 x %union.int_mv], [29 x i16] }
%struct.MB_MODE_INFO_EXT_FRAME = type { [4 x %struct.candidate_mv], [4 x i16], i8, [8 x %union.int_mv], i16, [2 x i16] }
%struct.ModeCosts = type { [20 x [10 x i32]], [4 x [13 x i32]], [13 x [13 x [13 x i32]]], [2 x [13 x [14 x i32]]], [22 x [2 x i32]], [5 x i32], [8 x [7 x i32]], [8 x [2 x [16 x i32]]], [2 x i32], [7 x [7 x i32]], [7 x [7 x i32]], [7 x [5 x [8 x i32]]], [7 x [5 x [8 x i32]]], [7 x [3 x [2 x i32]]], [2 x [2 x i32]], [3 x [2 x i32]], [6 x [2 x i32]], [2 x [2 x i32]], [6 x [2 x i32]], [3 x [2 x i32]], [3 x [6 x [2 x i32]]], [5 x [2 x i32]], [5 x [3 x i32]], [3 x [3 x [3 x i32]]], [3 x [3 x [2 x i32]]], [3 x [2 x [2 x i32]]], [4 x [2 x i32]], [8 x [8 x i32]], [22 x [2 x i32]], [22 x [16 x i32]], [4 x [2 x i32]], [22 x [2 x i32]], [4 x [4 x i32]], [6 x [2 x i32]], [6 x [2 x i32]], [22 x [3 x i32]], [22 x [2 x i32]], [16 x [3 x i32]], [3 x [2 x i32]], [4 x [3 x [5 x i32]]], [21 x [2 x i32]], [4 x [4 x [16 x i32]]], [3 x [4 x [13 x [16 x i32]]]], [3 x i32], [2 x i32], [2 x i32] }
%struct.MvCosts = type { [4 x i32], [2 x [32767 x i32]], [2 x [32767 x i32]], [2 x i32*], [2 x i32*], i32** }
%struct.IntraBCMVCosts = type { [4 x i32], [2 x [32767 x i32]], [2 x i32*] }
%struct.CoeffCosts = type { [5 x [2 x %struct.LV_MAP_COEFF_COST]], [7 x [2 x %struct.LV_MAP_EOB_COST]] }
%struct.LV_MAP_COEFF_COST = type { [13 x [2 x i32]], [4 x [3 x i32]], [42 x [8 x i32]], [9 x [2 x i32]], [3 x [2 x i32]], [21 x [26 x i32]] }
%struct.LV_MAP_EOB_COST = type { [2 x [11 x i32]] }
%struct.SuperBlockEnc = type { i8, i8, i32, [64 x i64], [64 x i64], [64 x [7 x %union.int_mv]], i32 }
%struct.CONTENT_STATE_SB = type { i32, i32, i32 }
%struct.WARP_SAMPLE_INFO = type { i32, [16 x i32], [16 x i32] }
%struct.PartitionSearchInfo = type { [105 x i8] }
%struct.WinnerModeStats = type { %struct.MB_MODE_INFO, %struct.RD_STATS, i64, i32, i32, [16384 x i8], i8 }
%struct.MB_MODE_INFO = type <{ i8, i8, i8, i8, i32, [2 x %union.int_mv], [2 x i8], [2 x i8], %union.int_interpfilters, i8, i8, i8, i8, %struct.WarpedMotionParams, i8, i8, [6 x i8], %struct.INTERINTER_COMPOUND_DATA, [2 x i8], %struct.FILTER_INTRA_MODE_INFO, i8, i8, %struct.PALETTE_MODE_INFO, i8, i8, [16 x i8], i8, [4 x i8], i16, [7 x i8] }>
%union.int_interpfilters = type { i32 }
%struct.INTERINTER_COMPOUND_DATA = type { i8*, i8, i8, i8, i8 }
%struct.FILTER_INTRA_MODE_INFO = type { i8, i8 }
%struct.PALETTE_MODE_INFO = type { [24 x i16], [2 x i8] }
%struct.RD_STATS = type { i32, i64, i64, i64, i32, i32 }
%struct.COMP_RD_STATS = type { [4 x i32], [4 x i64], [4 x i32], [4 x i64], [4 x i32], [2 x %union.int_mv], [2 x i8], i8, %union.int_interpfilters, i32, [2 x i32], %struct.INTERINTER_COMPOUND_DATA }
%struct.intrabc_hash_info = type { [2 x [2 x i32*]], %struct._hash_table, %struct._crc_calculator, %struct._crc_calculator, i32 }
%struct._hash_table = type { %struct.Vector** }
%struct.Vector = type { i64, i64, i64, i8* }
%struct._crc_calculator = type { i32, i32, i32, [256 x i32], i32 }
%struct.FullMvLimits = type { i32, i32, i32, i32 }
%struct.TxfmSearchParams = type { i32, i32, i32, [2 x i32], i32, i8, i32, i32, i8, i32 }
%struct.TxfmSearchInfo = type { i32, [1024 x i8], [1024 x i8], %struct.TxbRdRecords*, i32 }
%struct.TxbRdRecords = type { %struct.MB_RD_RECORD, [256 x %struct.TXB_RD_RECORD], [64 x %struct.TXB_RD_RECORD], [16 x %struct.TXB_RD_RECORD], [4 x %struct.TXB_RD_RECORD], %struct.TXB_RD_RECORD }
%struct.MB_RD_RECORD = type { [8 x %struct.MB_RD_INFO], i32, i32, %struct._CRC32C }
%struct.MB_RD_INFO = type { i8, [16 x i8], [1024 x i8], [1024 x i8], %struct.RD_STATS, i32 }
%struct._CRC32C = type { [8 x [256 x i32]] }
%struct.TXB_RD_RECORD = type { [256 x i32], [256 x %struct.TXB_RD_INFO], i32, i32 }
%struct.TXB_RD_INFO = type { i64, i64, i32, i16, i8, i16, i8, i8, i8, i8 }
%struct.RD_COUNTS = type { [3 x i64], i32, i32, [19 x [16 x i32]], [22 x [2 x i32]], [2 x i32] }
%struct.PC_TREE_SHARED_BUFFERS = type { [3 x i32*], [3 x i32*], [3 x i32*] }
%struct.SIMPLE_MOTION_DATA_TREE = type { i8, i8, [4 x %struct.SIMPLE_MOTION_DATA_TREE*], [8 x %struct.fullpel_mv], [2 x i32], [8 x i32], i32, i32 }
%struct.fullpel_mv = type { i16, i16 }
%struct.inter_modes_info = type { i32, [4 x i8], [1024 x %struct.MB_MODE_INFO], [1024 x i32], [1024 x i64], [1024 x i64], [1024 x %struct.RdIdxPair], [1024 x %struct.RD_STATS], [1024 x %struct.RD_STATS], [1024 x %struct.RD_STATS] }
%struct.RdIdxPair = type { i32, i64 }
%struct.OBMCBuffer = type { i32*, i32*, i8*, i8* }
%struct.PALETTE_BUFFER = type { [4096 x i8], [8192 x i32] }
%struct.CompoundTypeRdBuffers = type { i8*, i8*, i16*, i16*, i8* }
%struct.frame_contexts = type { [5 x [13 x [3 x i16]]], [5 x [2 x [9 x [3 x i16]]]], [2 x [3 x [3 x i16]]], [2 x [2 x [6 x i16]]], [2 x [2 x [7 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [9 x i16]]], [2 x [2 x [10 x i16]]], [2 x [2 x [11 x i16]]], [2 x [2 x [12 x i16]]], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [42 x [5 x i16]]]], [5 x [2 x [21 x [5 x i16]]]], [6 x [3 x i16]], [2 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [8 x [9 x i16]], [22 x [3 x i16]], [22 x [17 x i16]], [4 x [3 x i16]], [22 x [3 x i16]], [4 x [5 x i16]], [22 x [4 x i16]], [22 x [3 x i16]], [7 x [8 x i16]], [7 x [8 x i16]], [7 x [5 x [9 x i16]]], [7 x [5 x [9 x i16]]], [7 x [3 x [3 x i16]]], [2 x [3 x i16]], [5 x [3 x i16]], [3 x [6 x [3 x i16]]], [5 x [3 x i16]], [3 x [3 x [3 x i16]]], [3 x [3 x [3 x i16]]], [3 x [2 x [3 x i16]]], [21 x [3 x i16]], [6 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [3 x [3 x i16]], [4 x [3 x i16]], %struct.nmv_context, %struct.nmv_context, [3 x i16], %struct.segmentation_probs, [22 x [3 x i16]], [6 x i16], [4 x i16], [3 x i16], [3 x i16], [4 x [14 x i16]], [2 x [13 x [15 x i16]]], [20 x [11 x i16]], [16 x [4 x i16]], [5 x [5 x [14 x i16]]], [8 x [8 x i16]], [4 x [3 x [4 x i16]]], [5 x i16], [4 x [5 x i16]], [5 x i16], [3 x [4 x [13 x [17 x i16]]]], [4 x [4 x [17 x i16]]], [9 x i16], [6 x [17 x i16]], i32 }
%struct.nmv_context = type { [5 x i16], [2 x %struct.nmv_component] }
%struct.nmv_component = type { [12 x i16], [2 x [5 x i16]], [5 x i16], [3 x i16], [3 x i16], [3 x i16], [3 x i16], [10 x [3 x i16]] }
%struct.segmentation_probs = type { [9 x i16], [3 x [3 x i16]], [3 x [9 x i16]] }
%struct.VP64x64 = type { %struct.VPVariance, [4 x %struct.VP32x32] }
%struct.VPVariance = type { %struct.VPartVar, [2 x %struct.VPartVar], [2 x %struct.VPartVar] }
%struct.VPartVar = type { i32, i32, i32, i32 }
%struct.VP32x32 = type { %struct.VPVariance, [4 x %struct.VP16x16] }
%struct.VP16x16 = type { %struct.VPVariance, [4 x %struct.VP8x8] }
%struct.VP8x8 = type { %struct.VPVariance, [4 x %struct.VP4x4] }
%struct.VP4x4 = type { %struct.VPVariance, [4 x %struct.VPartVar] }
%struct.PICK_MODE_CONTEXT = type { %struct.MB_MODE_INFO, %struct.MB_MODE_INFO_EXT_FRAME, [2 x i8*], i8*, [3 x i32*], [3 x i32*], [3 x i32*], [3 x i16*], [3 x i8*], i8*, i32, i32, i32, i32, i32, %struct.RD_STATS, i32, i64, i64, i64, i8, %union.int_mv, i8, i8, i32 }
%struct.TemporalFilterData = type { %struct.FRAME_DIFF, %struct.MB_MODE_INFO*, i32*, i16*, i8* }
%struct.FRAME_DIFF = type { i64, i64 }
%struct.TplTxfmStats = type { [256 x double], i32 }
%struct.PixelLevelGradientInfo = type { i16, i8, i8 }
%struct.FRAME_COUNTS = type { [16 x [3 x i32]] }
%struct.MBMIExtFrameBufferInfo = type { %struct.MB_MODE_INFO_EXT_FRAME*, i32, i32 }
%struct.CB_COEFF_BUFFER = type { [3 x i32*], [3 x i16*], [3 x i8*] }
%struct.CoeffBufferPool = type { i32*, i16*, i8* }
%struct.AV1Common = type { %struct.CurrentFrame, %struct.aom_internal_error_info*, i32, i32, i32, i32, i32, i32, i8, [33 x i32], i32, %struct.RefCntBuffer*, %struct.RefCntBuffer*, [8 x i32], %struct.scale_factors, [8 x %struct.scale_factors], [8 x %struct.RefCntBuffer*], i32, i32, i32, %struct.FeatureFlags, %struct.CommonModeInfoParams, %struct.CommonQuantParams, %struct.segmentation, i8*, %struct.loop_filter_info_n, %struct.loopfilter, [3 x %struct.RestorationInfo], i32*, %struct.RestorationLineBuffers*, %struct.yv12_buffer_config, %struct.CdefInfo, %struct.aom_film_grain_t, %struct.DeltaQInfo, [8 x %struct.WarpedMotionParams], %struct.SequenceHeader*, %struct.frame_contexts*, %struct.frame_contexts*, %struct.CommonTileParams, %struct.BufferPool*, %struct.CommonContexts, i32, [8 x i32], %struct.TPL_MV_REF*, i32, [8 x i32], [8 x i8], i32, i32 }
%struct.CurrentFrame = type { i8, i8, i32, i32, i32, %struct.SkipModeInfo, i32, i32 }
%struct.SkipModeInfo = type { i32, i32, i32, i32 }
%struct.FeatureFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8 }
%struct.CommonModeInfoParams = type { i32, i32, i32, i32, i32, %struct.MB_MODE_INFO*, i32, i32, i8, %struct.MB_MODE_INFO**, i32, i32, i8*, void (%struct.CommonModeInfoParams*)*, void (%struct.CommonModeInfoParams*)*, void (%struct.CommonModeInfoParams*, i32, i32)* }
%struct.CommonQuantParams = type { i32, i32, i32, i32, i32, i32, [8 x [2 x i16]], [8 x [2 x i16]], [8 x [2 x i16]], [16 x [3 x [19 x i8*]]], [16 x [3 x [19 x i8*]]], [8 x [19 x i8*]], [8 x [19 x i8*]], [8 x [19 x i8*]], i8, i32, i32, i32 }
%struct.segmentation = type { i8, i8, i8, i8, [8 x [8 x i16]], [8 x i32], i32, i8 }
%struct.loop_filter_info_n = type { [64 x %struct.loop_filter_thresh], [3 x [8 x [2 x [8 x [2 x i8]]]]] }
%struct.loop_filter_thresh = type { [16 x i8], [16 x i8], [16 x i8] }
%struct.loopfilter = type { [2 x i32], i32, i32, i32, i8, i8, [8 x i8], [2 x i8], i32 }
%struct.RestorationInfo = type { i32, i32, i32, i32, i32, %struct.RestorationUnitInfo*, %struct.RestorationStripeBoundaries, i32 }
%struct.RestorationUnitInfo = type { i32, [12 x i8], %struct.WienerInfo, %struct.SgrprojInfo, [4 x i8] }
%struct.RestorationStripeBoundaries = type { i8*, i8*, i32, i32 }
%struct.RestorationLineBuffers = type { [3 x [392 x i16]], [3 x [392 x i16]] }
%struct.CdefInfo = type { [3 x i16*], [3 x i16*], i16*, [3 x i64], [3 x i64], i64, i32, i32, [16 x i32], [16 x i32], i32, i32, i32 }
%struct.aom_film_grain_t = type { i32, i32, [14 x [2 x i32]], i32, [10 x [2 x i32]], i32, [10 x [2 x i32]], i32, i32, i32, [24 x i32], [25 x i32], [25 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.DeltaQInfo = type { i32, i32, i32, i32, i32 }
%struct.CommonTileParams = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [65 x i32], [65 x i32], i32, i32 }
%struct.BufferPool = type { %union.pthread_mutex_t, i8*, i32 (i8*, i64, %struct.aom_codec_frame_buffer*)*, i32 (i8*, %struct.aom_codec_frame_buffer*)*, [16 x %struct.RefCntBuffer], %struct.InternalFrameBufferList }
%struct.aom_codec_frame_buffer = type { i8*, i64, i8* }
%struct.RefCntBuffer = type { i32, i32, [7 x i32], i32, [7 x i32], %struct.MV_REF*, i8*, %struct.segmentation, i32, i32, i32, i32, [8 x %struct.WarpedMotionParams], i32, i8, %struct.aom_film_grain_t, %struct.aom_codec_frame_buffer, %struct.yv12_buffer_config, i8, [4 x i32], [8 x i8], [2 x i8], %struct.frame_contexts }
%struct.MV_REF = type { %union.int_mv, i8 }
%struct.InternalFrameBufferList = type { i32, %struct.InternalFrameBuffer* }
%struct.InternalFrameBuffer = type { i8*, i64, i32 }
%struct.CommonContexts = type { i8**, [3 x i8**], i8**, i32, i32, i32 }
%struct.TPL_MV_REF = type { %union.int_mv, i8 }
%struct.AV1EncoderConfig = type { %struct.InputCfg, %struct.FrameDimensionCfg, %struct.AlgoCfg, %struct.KeyFrameCfg, %struct.RateControlCfg, %struct.QuantizationCfg, %struct.ResizeCfg, %struct.SuperResCfg, %struct.aom_fixed_buf, %struct.ToolCfg, %struct.GFConfig, %struct.TileConfig, %struct.TuneCfg, %struct.ColorCfg, %struct.DecoderModelCfg, %struct.RefFrameCfg, %struct.UnitTestCfg, %struct.MotionModeCfg, %struct.IntraModeCfg, %struct.TxfmSizeTypeCfg, %struct.CompoundTypeCfg, %struct.PartitionCfg, %struct.CostUpdateFreq, float, i32, i32, i32, i32, i32, i32, i32, [32 x i8], i8, i32, i8, i8, i8, i8, i8* }
%struct.InputCfg = type { double, i32, i32, i32, i32 }
%struct.FrameDimensionCfg = type { i32, i32, i32, i32, i32, i32 }
%struct.AlgoCfg = type { i32, i32, i32, i32, i8, i8, i8 }
%struct.KeyFrameCfg = type { i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.RateControlCfg = type { i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.QuantizationCfg = type { [5 x double], i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.ResizeCfg = type { i8, i8, i8 }
%struct.SuperResCfg = type { i32, i32, i8, i8, i32, i8 }
%struct.aom_fixed_buf = type { i8*, i64 }
%struct.ToolCfg = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.GFConfig = type { i32, i32, i32, i32, i32, i8, i8 }
%struct.TileConfig = type { i32, i32, i32, i32, i32, i32, [64 x i32], [64 x i32], i8, i8, i8 }
%struct.TuneCfg = type { i8*, i8*, i32, i32, i32 }
%struct.ColorCfg = type { i32, i32, i32, i32, i32 }
%struct.DecoderModelCfg = type { %struct.aom_timing, i32, i8, i8, i8 }
%struct.RefFrameCfg = type { i32, i8, i8 }
%struct.UnitTestCfg = type { i32, i32 }
%struct.MotionModeCfg = type { i8, i8, i8 }
%struct.IntraModeCfg = type { i8, i8, i8, i8, i8, i8, i8 }
%struct.TxfmSizeTypeCfg = type { i8, i8, i8, i8, i8, i8, i8 }
%struct.CompoundTypeCfg = type { i8, i8, i8, i8, i8, i8 }
%struct.PartitionCfg = type { i8, i8, i8, i8, i8 }
%struct.CostUpdateFreq = type { i32, i32, i32, i32 }
%struct.TemporalFilterCtx = type { [35 x %struct.yv12_buffer_config*], i32, i32, i32, %struct.scale_factors, [3 x double], i32, i32, i32, i32, i32 }
%struct.ForceIntegerMVInfo = type { [32 x double], i32, i32 }
%struct.RefreshFrameFlagsInfo = type { i8, i8, i8 }
%struct.ExternalFlags = type { i32, %struct.ExtRefreshFrameFlagsInfo, i8, i8, i8, i8, i8, i8 }
%struct.ExtRefreshFrameFlagsInfo = type { i8, i8, i8, i8, i8, i8 }
%struct.yv12_buffer_config = type { %union.anon, %union.anon.0, %union.anon.2, %union.anon.4, %union.anon.6, %union.anon.8, i32, [3 x i8*], i8*, i32, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, %struct.aom_metadata_array* }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, i32 }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { i32, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { i32, i32 }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { i32, i32 }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { i32, i32 }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { i8*, i8*, i8* }
%struct.aom_metadata_array = type { i64, %struct.aom_metadata** }
%struct.aom_metadata = type { i32, i8*, i64, i32 }
%struct.RD_OPT = type { [169 x i32], [8 x [22 x [169 x i32]]], i32, double }
%struct.CODING_CONTEXT = type { %struct.loopfilter, %struct.CdefInfo, %struct.yv12_buffer_config, %struct.RATE_CONTROL, %struct.MV_STATS }
%struct.GlobalMotionInfo = type { i8, [8 x %struct.yv12_buffer_config*], i8*, [2 x i32], [2 x [7 x %struct.FrameDistPair]], i32, i32, i32, [8192 x i32] }
%struct.FrameDistPair = type { i32, i8 }
%struct.WinnerModeParams = type { [3 x [2 x i32]], [3 x i8], [3 x i32], [3 x i32], [3 x i32], [3 x i32] }
%struct.TimeStamps = type { i64, i64, i64 }
%struct.RATE_CONTROL = type { i32, i32, i32, i32, i32, [4 x i32], i32, [4 x double], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, [4 x i32], double, double, i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, [7 x i32], i32, i32, i32, i32, i32 }
%struct.SPEED_FEATURES = type { %struct.HIGH_LEVEL_SPEED_FEATURES, %struct.FIRST_PASS_SPEED_FEATURES, %struct.TPL_SPEED_FEATURES, %struct.GLOBAL_MOTION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES, %struct.MV_SPEED_FEATURES, %struct.INTER_MODE_SPEED_FEATURES, %struct.INTERP_FILTER_SPEED_FEATURES, %struct.INTRA_MODE_SPEED_FEATURES, %struct.TX_SPEED_FEATURES, %struct.RD_CALC_SPEED_FEATURES, %struct.WINNER_MODE_SPEED_FEATURES, %struct.LOOP_FILTER_SPEED_FEATURES, %struct.REAL_TIME_SPEED_FEATURES }
%struct.HIGH_LEVEL_SPEED_FEATURES = type { i32, i8, i32, i8, i32, i8, i32, i32 }
%struct.FIRST_PASS_SPEED_FEATURES = type { i32, i32 }
%struct.TPL_SPEED_FEATURES = type { i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32 }
%struct.GLOBAL_MOTION_SPEED_FEATURES = type { i8, i32, i32 }
%struct.MV_SPEED_FEATURES = type { i8, i32, i32, i8, i32, i8, i8, i8, i32, [4 x %struct.MESH_PATTERN], [4 x %struct.MESH_PATTERN], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.MESH_PATTERN = type { i32, i32 }
%struct.INTER_MODE_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.INTERP_FILTER_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32 }
%struct.INTRA_MODE_SPEED_FEATURES = type { [5 x i32], [5 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.TX_SPEED_FEATURES = type { i32, i32, i32, i32, i32, %struct.TX_TYPE_SEARCH, i32, i32, i32, i32, i32, i32, i32 }
%struct.TX_TYPE_SEARCH = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.RD_CALC_SPEED_FEATURES = type { i32, i32, i32, i8, i32, i32 }
%struct.WINNER_MODE_SPEED_FEATURES = type { i32, i32, i32, i32, i8, i32, i32 }
%struct.LOOP_FILTER_SPEED_FEATURES = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.REAL_TIME_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, [16 x i32], i32 }
%struct.MotionVectorSearchParams = type { i32, i32, i32 (%struct.macroblockd*, %struct.AV1Common*, %struct.SUBPEL_MOTION_SEARCH_PARAMS*, i32, %struct.mv*, i32*, i32*, %union.int_mv*)*, [3 x [7 x %struct.search_site_config]] }
%struct.SUBPEL_MOTION_SEARCH_PARAMS = type { i32, i32*, i8, i32, %struct.SubpelMvLimits, %struct.MV_COST_PARAMS, %struct.SUBPEL_SEARCH_VAR_PARAMS }
%struct.SubpelMvLimits = type { i32, i32, i32, i32 }
%struct.MV_COST_PARAMS = type { %struct.mv*, %struct.fullpel_mv, i8, i32*, [2 x i32*], i32, i32 }
%struct.SUBPEL_SEARCH_VAR_PARAMS = type { %struct.aom_variance_vtable*, i8, %struct.MSBuffers, i32, i32 }
%struct.MSBuffers = type { %struct.buf_2d*, %struct.buf_2d*, i8*, i8*, i32, i32, i32*, i32* }
%struct.mv = type { i16, i16 }
%struct.search_site_config = type { [22 x [17 x %struct.search_site]], i32, [22 x i32], [22 x i32], i32 }
%struct.search_site = type { %struct.fullpel_mv, i32 }
%struct.EncSegmentationInfo = type { i8*, i8 }
%struct.CYCLIC_REFRESH = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i64, i16, double, i32, [3 x i32], double, i32 }
%struct.ActiveMap = type { i32, i32, i8* }
%struct.RefBufferStack = type { [16 x i32], i32, [16 x i32], i32, [16 x i32], i32 }
%struct.FRAME_INFO = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.FRAME_INDEX_SET = type { i32 }
%struct.InitialDimensions = type { i32, i32 }
%struct.ResizePendingParams = type { i32, i32 }
%struct.TileDataEnc = type { %struct.TileInfo, [8 x i8], %struct.frame_contexts, %struct.frame_contexts*, i8, [22 x %struct.InterModeRdModel], %struct.AV1EncRowMultiThreadSync, %struct.mv }
%struct.InterModeRdModel = type { i32, double, double, double, double, double, double, double, i32, double, double, double, double, double }
%struct.AV1EncRowMultiThreadSync = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32, i32, i32 }
%struct.TokenInfo = type { [64 x [64 x %struct.TokenExtra*]], [64 x [64 x %struct.TokenList*]] }
%struct.TokenExtra = type { i8 }
%struct.TokenList = type { %struct.TokenExtra*, i32 }
%struct.VarBasedPartitionInfo = type { [5 x i64], i64 }
%struct.FrameProbInfo = type { [7 x [22 x i32]], [7 x i32], [7 x [19 x [16 x i32]]], [7 x [16 x [3 x i32]]] }
%struct.MultiThreadInfo = type { i32, [10 x i32], i32, i32, %struct.AVxWorker*, %struct.EncWorkerData*, i8, %struct.AV1EncRowMultiThreadInfo, %struct.AV1TplRowMultiThreadInfo, %struct.AV1LfSyncData, %struct.AV1LrSyncData, %struct.AV1EncPackBSSync, %struct.AV1GlobalMotionSync, %struct.AV1TemporalFilterSync, %struct.AV1CdefSyncData, %struct.AV1CdefWorker* }
%struct.AVxWorker = type { %struct.AVxWorkerImpl*, i32, i8*, i32 (i8*, i8*)*, i8*, i8*, i32 }
%struct.AVxWorkerImpl = type opaque
%struct.EncWorkerData = type opaque
%struct.AV1EncRowMultiThreadInfo = type { i32, i32, i32, i32, [64 x i32], %union.pthread_mutex_t*, void (%struct.AV1EncRowMultiThreadSync*, i32, i32)*, void (%struct.AV1EncRowMultiThreadSync*, i32, i32, i32)* }
%struct.AV1TplRowMultiThreadInfo = type { void (%struct.AV1TplRowMultiThreadSync*, i32, i32)*, void (%struct.AV1TplRowMultiThreadSync*, i32, i32, i32)* }
%struct.AV1LfSyncData = type { [3 x %union.pthread_mutex_t*], [3 x %union.pthread_cond_t*], [3 x i32*], i32, i32, %struct.LoopFilterWorkerData*, i32, %union.pthread_mutex_t*, %struct.AV1LfMTInfo*, i32, i32 }
%struct.LoopFilterWorkerData = type { %struct.yv12_buffer_config*, %struct.AV1Common*, [3 x %struct.macroblockd_plane], %struct.macroblockd* }
%struct.AV1LfMTInfo = type { i32, i32, i32 }
%struct.AV1LrSyncData = type { [3 x %union.pthread_mutex_t*], [3 x %union.pthread_cond_t*], [3 x i32*], i32, i32, i32, i32, %union.pthread_mutex_t*, %struct.LoopRestorationWorkerData*, %struct.AV1LrMTInfo*, i32, i32 }
%struct.LoopRestorationWorkerData = type { i32*, i8*, i8* }
%struct.AV1LrMTInfo = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.AV1EncPackBSSync = type { %union.pthread_mutex_t*, [512 x %struct.PackBSTileOrder], i32 }
%struct.PackBSTileOrder = type { i16, i32 }
%struct.AV1GlobalMotionSync = type { %struct.JobInfo, %struct.GlobalMotionThreadData*, %union.pthread_mutex_t*, i32, i32, i8 }
%struct.JobInfo = type { [64 x i8], [2 x i8], [2 x i8] }
%struct.GlobalMotionThreadData = type { [1 x %struct.MotionModel], i8* }
%struct.MotionModel = type { [8 x double], i32*, i32 }
%struct.AV1TemporalFilterSync = type { %union.pthread_mutex_t*, i32 }
%struct.AV1CdefSyncData = type { %union.pthread_mutex_t*, %struct.AV1CdefRowSync*, i32, i32, i32 }
%struct.AV1CdefRowSync = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32 }
%struct.AV1CdefWorker = type { %struct.AV1Common*, %struct.macroblockd*, [3 x i16*], i16*, [3 x i16*], void (%struct.AV1Common*, %struct.macroblockd*, %struct.CdefBlockInfo*, i16**, i16*, %struct.AV1CdefSyncData*, i32)* }
%struct.CdefBlockInfo = type { i16*, [3 x i16*], [3 x i16*], i8*, [256 x %struct.cdef_list], i32, i32, i32, i32, [4 x i32], i32, i32, i32, i32, i32, i32, [16 x [16 x i32]], [16 x [16 x i32]], i32, i32, i32 }
%struct.cdef_list = type { i8, i8 }
%struct.AV1LrStruct = type { void (%struct.RestorationTileLimits*, %struct.AV1PixelRect*, i32, i8*, i32*, %struct.RestorationLineBuffers*)*, [3 x %struct.FilterFrameCtxt], %struct.yv12_buffer_config*, %struct.yv12_buffer_config* }
%struct.RestorationTileLimits = type { i32, i32, i32, i32 }
%struct.AV1PixelRect = type { i32, i32, i32, i32 }
%struct.FilterFrameCtxt = type { %struct.RestorationInfo*, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, %struct.AV1PixelRect }
%struct.aom_film_grain_table_t = type { %struct.aom_film_grain_table_entry_t*, %struct.aom_film_grain_table_entry_t* }
%struct.aom_film_grain_table_entry_t = type { %struct.aom_film_grain_t, i64, i64, %struct.aom_film_grain_table_entry_t* }
%struct.aom_denoise_and_model_t = type opaque
%struct.InterpSearchFlags = type { i32, i16 }
%struct.RefFrameDistanceInfo = type { [7 x i32], i8, i8 }
%struct.SVC = type { i32, i32, i32, i32, i32, i32, i32, i32, [7 x i32], [7 x i32], [8 x i32], double, i32, [8 x i32], [8 x i8], i32, i32, [8 x i32], [8 x i32], i32, i32, [32 x %struct.LAYER_CONTEXT], [4 x i8], [4 x i32], i32 }
%struct.LAYER_CONTEXT = type { %struct.RATE_CONTROL, %struct.PRIMARY_RATE_CONTROL, i32, i64, i32, i32, i64, i64, double, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i8, i8, i32, i32 }
%struct.MV_STATS = type { i32, i32, i32, i32, i32, i32, [4 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.FirstPassData = type { %struct.FRAME_STATS*, i32* }
%struct.FRAME_STATS = type { i64, i64, i64, i64, i64, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, double, double }
%struct.noise_estimate = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.av1_denoiser = type { %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, i32, i32, i32, i32, i32, i32, i32 }
%struct.PC_TREE = type { i8, i8, %struct.PICK_MODE_CONTEXT*, [2 x %struct.PICK_MODE_CONTEXT*], [2 x %struct.PICK_MODE_CONTEXT*], [3 x %struct.PICK_MODE_CONTEXT*], [3 x %struct.PICK_MODE_CONTEXT*], [3 x %struct.PICK_MODE_CONTEXT*], [3 x %struct.PICK_MODE_CONTEXT*], [4 x %struct.PICK_MODE_CONTEXT*], [4 x %struct.PICK_MODE_CONTEXT*], [4 x %struct.PC_TREE*], i32 }
%struct.RD_SEARCH_MACROBLOCK_CONTEXT = type { [96 x i8], [96 x i8], [32 x i8], [32 x i8], i8*, i8*, [32 x i8], [32 x i8] }
%struct.BUFFER_SET = type { [3 x i8*], [3 x i32] }

@mi_size_wide = internal unnamed_addr constant [22 x i8] c"\01\01\02\02\02\04\04\04\08\08\08\10\10\10  \01\04\02\08\04\10", align 16
@mi_size_high = internal unnamed_addr constant [22 x i8] c"\01\02\01\02\04\02\04\08\04\08\10\08\10 \10 \04\01\08\02\10\04", align 16
@mi_size_wide_log2 = internal unnamed_addr constant [22 x i8] c"\00\00\01\01\01\02\02\02\03\03\03\04\04\04\05\05\00\02\01\03\02\04", align 16
@get_partition.base_partitions = internal unnamed_addr constant [4 x i8] c"\FF\01\02\03", align 1
@subsize_lookup = internal unnamed_addr constant [10 x [6 x i8]] [[6 x i8] c"\00\03\06\09\0C\0F", [6 x i8] c"\FF\02\05\08\0B\0E", [6 x i8] c"\FF\01\04\07\0A\0D", [6 x i8] c"\FF\00\03\06\09\0C", [6 x i8] c"\FF\FF\05\08\0B\0E", [6 x i8] c"\FF\FF\05\08\0B\0E", [6 x i8] c"\FF\FF\04\07\0A\0D", [6 x i8] c"\FF\FF\04\07\0A\0D", [6 x i8] c"\FF\FF\11\13\15\FF", [6 x i8] c"\FF\FF\10\12\14\FF"], align 16
@max_txsize_rect_lookup = internal unnamed_addr constant [22 x i8] c"\00\05\06\01\07\08\02\09\0A\03\0B\0C\04\04\04\04\0D\0E\0F\10\11\12", align 16
@block_size_wide = internal unnamed_addr constant [22 x i8] c"\04\04\08\08\08\10\10\10   @@@\80\80\04\10\08 \10@", align 16
@block_size_high = internal unnamed_addr constant [22 x i8] c"\04\08\04\08\10\08\10 \10 @ @\80@\80\10\04 \08@\10", align 16
@tx_size_high_unit = internal unnamed_addr constant [19 x i32] [i32 1, i32 2, i32 4, i32 8, i32 16, i32 2, i32 1, i32 4, i32 2, i32 8, i32 4, i32 16, i32 8, i32 4, i32 1, i32 8, i32 2, i32 16, i32 4], align 16
@tx_size_wide_unit = internal unnamed_addr constant [19 x i32] [i32 1, i32 2, i32 4, i32 8, i32 16, i32 1, i32 2, i32 2, i32 4, i32 4, i32 8, i32 8, i32 16, i32 1, i32 4, i32 2, i32 8, i32 4, i32 16], align 16
@sub_tx_size_map = internal unnamed_addr constant [19 x i8] c"\00\00\01\02\03\00\00\01\01\02\02\03\03\05\06\07\08\09\0A", align 16
@tx_size_wide = internal unnamed_addr constant [19 x i32] [i32 4, i32 8, i32 16, i32 32, i32 64, i32 4, i32 8, i32 8, i32 16, i32 16, i32 32, i32 32, i32 64, i32 4, i32 16, i32 8, i32 32, i32 16, i32 64], align 16
@tx_size_high = internal unnamed_addr constant [19 x i32] [i32 4, i32 8, i32 16, i32 32, i32 64, i32 8, i32 4, i32 16, i32 8, i32 32, i32 16, i32 64, i32 32, i32 16, i32 4, i32 32, i32 8, i32 64, i32 16], align 16
@txsize_sqr_up_map = internal unnamed_addr constant [19 x i8] c"\00\01\02\03\04\01\01\02\02\03\03\04\04\02\02\03\03\04\04", align 16
@av1_get_txb_size_index.tw_w_log2_table = internal unnamed_addr constant [22 x i8] c"\00\00\00\00\01\01\01\02\02\02\03\03\03\03\03\03\00\01\01\02\02\03", align 16
@av1_get_txb_size_index.tw_h_log2_table = internal unnamed_addr constant [22 x i8] c"\00\00\00\00\01\01\01\02\02\02\03\03\03\03\03\03\01\00\02\01\03\02", align 16
@av1_get_txb_size_index.stride_log2_table = internal unnamed_addr constant [22 x i8] c"\00\00\01\01\00\01\01\00\01\01\00\01\01\01\02\02\00\01\00\01\00\01", align 16
@txsize_to_bsize = internal unnamed_addr constant [19 x i8] c"\00\03\06\09\0C\01\02\04\05\07\08\0A\0B\10\11\12\13\14\15", align 16
@bsize_to_tx_size_cat.bsize_to_tx_size_depth_table = internal unnamed_addr constant [22 x i8] c"\00\01\01\01\02\02\02\03\03\03\04\04\04\04\04\04\02\02\03\03\04\04", align 16
@bsize_to_max_depth.bsize_to_max_depth_table = internal unnamed_addr constant [22 x i8] c"\00\01\01\01\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02", align 16
@update_cdf.nsymbs2speed = internal unnamed_addr constant [17 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2], align 16
@tx_mode_to_biggest_tx_size = internal unnamed_addr constant [3 x i8] c"\00\04\04", align 1
@max_txsize_lookup = internal unnamed_addr constant [22 x i8] c"\00\00\00\01\01\01\02\02\02\03\03\03\04\04\04\04\00\00\01\01\02\02", align 16
@txsize_sqr_map = internal unnamed_addr constant [19 x i8] c"\00\01\02\03\04\00\00\01\01\02\02\03\03\00\00\01\01\02\02", align 16
@ss_size_lookup = internal unnamed_addr constant [22 x [2 x [2 x i8]]] [[2 x [2 x i8]] zeroinitializer, [2 x [2 x i8]] [[2 x i8] c"\01\00", [2 x i8] c"\FF\00"], [2 x [2 x i8]] [[2 x i8] c"\02\FF", [2 x i8] zeroinitializer], [2 x [2 x i8]] [[2 x i8] c"\03\02", [2 x i8] c"\01\00"], [2 x [2 x i8]] [[2 x i8] c"\04\03", [2 x i8] c"\FF\01"], [2 x [2 x i8]] [[2 x i8] c"\05\FF", [2 x i8] c"\03\02"], [2 x [2 x i8]] [[2 x i8] c"\06\05", [2 x i8] c"\04\03"], [2 x [2 x i8]] [[2 x i8] c"\07\06", [2 x i8] c"\FF\04"], [2 x [2 x i8]] [[2 x i8] c"\08\FF", [2 x i8] c"\06\05"], [2 x [2 x i8]] [[2 x i8] c"\09\08", [2 x i8] c"\07\06"], [2 x [2 x i8]] [[2 x i8] c"\0A\09", [2 x i8] c"\FF\07"], [2 x [2 x i8]] [[2 x i8] c"\0B\FF", [2 x i8] c"\09\08"], [2 x [2 x i8]] [[2 x i8] c"\0C\0B", [2 x i8] c"\0A\09"], [2 x [2 x i8]] [[2 x i8] c"\0D\0C", [2 x i8] c"\FF\0A"], [2 x [2 x i8]] [[2 x i8] c"\0E\FF", [2 x i8] c"\0C\0B"], [2 x [2 x i8]] [[2 x i8] c"\0F\0E", [2 x i8] c"\0D\0C"], [2 x [2 x i8]] [[2 x i8] c"\10\01", [2 x i8] c"\FF\01"], [2 x [2 x i8]] [[2 x i8] c"\11\FF", [2 x i8] c"\02\02"], [2 x [2 x i8]] [[2 x i8] c"\12\04", [2 x i8] c"\FF\10"], [2 x [2 x i8]] [[2 x i8] c"\13\FF", [2 x i8] c"\05\11"], [2 x [2 x i8]] [[2 x i8] c"\14\07", [2 x i8] c"\FF\12"], [2 x [2 x i8]] [[2 x i8] c"\15\FF", [2 x i8] c"\08\13"]], align 16
@size_group_lookup = internal unnamed_addr constant [22 x i8] c"\00\00\00\01\01\01\02\02\02\03\03\03\03\03\03\03\00\00\01\01\02\02", align 16
@av1_wedge_params_lookup = external local_unnamed_addr constant [22 x %struct.wedge_params_type], align 16
@compound_mode_ctx_map = internal unnamed_addr constant [3 x [5 x i16]] [[5 x i16] [i16 0, i16 1, i16 1, i16 1, i16 1], [5 x i16] [i16 1, i16 2, i16 3, i16 4, i16 4], [5 x i16] [i16 4, i16 4, i16 5, i16 6, i16 7]], align 16
@partition_context_lookup = internal unnamed_addr constant [22 x %struct.anon.16] [%struct.anon.16 { i8 31, i8 31 }, %struct.anon.16 { i8 31, i8 30 }, %struct.anon.16 { i8 30, i8 31 }, %struct.anon.16 { i8 30, i8 30 }, %struct.anon.16 { i8 30, i8 28 }, %struct.anon.16 { i8 28, i8 30 }, %struct.anon.16 { i8 28, i8 28 }, %struct.anon.16 { i8 28, i8 24 }, %struct.anon.16 { i8 24, i8 28 }, %struct.anon.16 { i8 24, i8 24 }, %struct.anon.16 { i8 24, i8 16 }, %struct.anon.16 { i8 16, i8 24 }, %struct.anon.16 { i8 16, i8 16 }, %struct.anon.16 { i8 16, i8 0 }, %struct.anon.16 { i8 0, i8 16 }, %struct.anon.16 zeroinitializer, %struct.anon.16 { i8 31, i8 28 }, %struct.anon.16 { i8 28, i8 31 }, %struct.anon.16 { i8 30, i8 24 }, %struct.anon.16 { i8 24, i8 30 }, %struct.anon.16 { i8 28, i8 16 }, %struct.anon.16 { i8 16, i8 28 }], align 16
@switch.table.av1_rd_use_partition.1 = private unnamed_addr constant [10 x i64] [i64 2, i64 5, i64 5, i64 3, i64 5, i64 5, i64 4, i64 5, i64 5, i64 5], align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @av1_reset_part_sf(%struct.PARTITION_SPEED_FEATURES*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 6
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 7
  store i8 15, i8* %4, align 8
  %5 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 8
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 10
  store i8 15, i8* %6, align 1
  %7 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 9
  store i8 0, i8* %7, align 2
  %8 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 11
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 15
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 21
  store i8 15, i8* %10, align 8
  %11 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 1
  store i8 6, i8* %11, align 1
  %12 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 12
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 13
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 2
  %15 = getelementptr %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 14, i64 0
  %16 = bitcast i32* %15 to i8*
  %17 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 -1, i64 20, i1 false)
  %18 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 16
  %19 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 22
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 23
  %21 = bitcast i32* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 20, i1 false)
  store i8 3, i8* %20, align 8
  %22 = getelementptr inbounds %struct.PARTITION_SPEED_FEATURES, %struct.PARTITION_SPEED_FEATURES* %0, i64 0, i32 24
  %23 = bitcast i32* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_set_offsets_without_segment_id(%struct.AV1_COMP* nocapture readonly, %struct.TileInfo* nocapture readonly, %struct.macroblock*, i32, i32, i8 zeroext) local_unnamed_addr #2 {
  %7 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 35
  %8 = load %struct.SequenceHeader*, %struct.SequenceHeader** %7, align 16
  %9 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %8, i64 0, i32 27
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 0
  %12 = select i1 %11, i32 3, i32 1
  %13 = zext i8 %5 to i64
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %13
  %17 = load i8, i8* %16, align 1
  %18 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 11
  %19 = load i32, i32* %18, align 4
  %20 = mul nsw i32 %19, %3
  %21 = add nsw i32 %20, %4
  %22 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 8
  %23 = load i8, i8* %22, align 8
  %24 = zext i8 %23 to i64
  %25 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = sdiv i32 %3, %27
  %29 = sdiv i32 %4, %27
  %30 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 7
  %31 = load i32, i32* %30, align 4
  %32 = mul nsw i32 %31, %28
  %33 = add nsw i32 %32, %29
  %34 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 5
  %35 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %34, align 8
  %36 = sext i32 %33 to i64
  %37 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %35, i64 %36
  %38 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 9
  %39 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %38, align 8
  %40 = sext i32 %21 to i64
  %41 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %39, i64 %40
  store %struct.MB_MODE_INFO* %37, %struct.MB_MODE_INFO** %41, align 8
  %42 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %38, align 8
  %43 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %42, i64 %40
  %44 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 6
  store %struct.MB_MODE_INFO** %43, %struct.MB_MODE_INFO*** %44, align 8
  %45 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 12
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 %40
  %48 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 15
  store i8* %47, i8** %48, align 8
  %49 = load i32, i32* %18, align 4
  %50 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 16
  store i32 %49, i32* %50, align 16
  %51 = load i8, i8* %22, align 8
  %52 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 5, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = zext i8 %51 to i64
  %55 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = sdiv i32 %3, %57
  %59 = sdiv i32 %4, %57
  %60 = mul nsw i32 %58, %53
  %61 = add nsw i32 %60, %59
  %62 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 5, i32 0
  %63 = load %struct.MB_MODE_INFO_EXT_FRAME*, %struct.MB_MODE_INFO_EXT_FRAME** %62, align 8
  %64 = sext i32 %61 to i64
  %65 = getelementptr inbounds %struct.MB_MODE_INFO_EXT_FRAME, %struct.MB_MODE_INFO_EXT_FRAME* %63, i64 %64
  %66 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 4
  store %struct.MB_MODE_INFO_EXT_FRAME* %65, %struct.MB_MODE_INFO_EXT_FRAME** %66, align 8
  %67 = and i32 %3, 1
  %68 = icmp eq i32 %67, 0
  %69 = add nsw i32 %3, -1
  %70 = and i32 %4, 1
  %71 = icmp eq i32 %70, 0
  %72 = add nsw i32 %4, -1
  %73 = zext i32 %12 to i64
  br label %74

74:                                               ; preds = %119, %6
  %75 = phi %struct.MB_MODE_INFO** [ %43, %6 ], [ %120, %119 ]
  %76 = phi i64 [ 0, %6 ], [ %117, %119 ]
  %77 = phi i32 [ %3, %6 ], [ %93, %119 ]
  %78 = phi i32 [ %4, %6 ], [ %105, %119 ]
  %79 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %75, align 8
  %80 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %79, i64 0, i32 0
  %81 = load i8, i8* %80, align 8
  %82 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 %76, i32 2
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 0
  %85 = or i1 %68, %84
  br i1 %85, label %92, label %86

86:                                               ; preds = %74
  %87 = zext i8 %81 to i64
  %88 = lshr i64 131077, %87
  %89 = and i64 %88, 1
  %90 = icmp eq i64 %89, 0
  %91 = select i1 %90, i32 %77, i32 %69
  br label %92

92:                                               ; preds = %86, %74
  %93 = phi i32 [ %77, %74 ], [ %91, %86 ]
  %94 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 %76, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  %97 = or i1 %71, %96
  br i1 %97, label %104, label %98

98:                                               ; preds = %92
  %99 = zext i8 %81 to i64
  %100 = lshr i64 65539, %99
  %101 = and i64 %100, 1
  %102 = icmp eq i64 %101, 0
  %103 = select i1 %102, i32 %78, i32 %72
  br label %104

104:                                              ; preds = %98, %92
  %105 = phi i32 [ %78, %92 ], [ %103, %98 ]
  %106 = and i32 %93, 31
  %107 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 23, i64 %76
  %108 = load i8*, i8** %107, align 8
  %109 = ashr i32 %105, %95
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i8, i8* %108, i64 %110
  %112 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 %76, i32 5
  store i8* %111, i8** %112, align 8
  %113 = lshr i32 %106, %83
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 24, i64 %76, i64 %114
  %116 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 %76, i32 6
  store i8* %115, i8** %116, align 8
  %117 = add nuw nsw i64 %76, 1
  %118 = icmp eq i64 %117, %73
  br i1 %118, label %121, label %119

119:                                              ; preds = %104
  %120 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %44, align 8
  br label %74

121:                                              ; preds = %104
  %122 = zext i8 %15 to i32
  %123 = zext i8 %17 to i32
  %124 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 40, i32 2
  %125 = load i8**, i8*** %124, align 16
  %126 = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %1, i64 0, i32 4
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8*, i8** %125, i64 %128
  %130 = load i8*, i8** %129, align 8
  %131 = sext i32 %4 to i64
  %132 = getelementptr inbounds i8, i8* %130, i64 %131
  %133 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 27
  store i8* %132, i8** %133, align 16
  %134 = and i32 %3, 31
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 29, i64 %135
  %137 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 28
  store i8* %136, i8** %137, align 8
  %138 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 0
  %139 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 12
  %140 = load %struct.RefCntBuffer*, %struct.RefCntBuffer** %139, align 16
  %141 = getelementptr inbounds %struct.RefCntBuffer, %struct.RefCntBuffer* %140, i64 0, i32 17
  tail call void @av1_setup_dst_planes(%struct.macroblockd_plane* %138, i8 zeroext %5, %struct.yv12_buffer_config* %141, i32 %3, i32 %4, i32 0, i32 %12) #4
  %142 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 28
  %143 = load i32, i32* %142, align 4
  %144 = mul i32 %3, -4
  %145 = add i32 %144, 8
  %146 = sub i32 %145, %143
  %147 = add i32 %123, %3
  %148 = shl nsw i32 %147, 2
  %149 = sub i32 -8, %148
  %150 = icmp sgt i32 %146, %149
  %151 = select i1 %150, i32 %146, i32 %149
  %152 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 56, i32 2
  store i32 %151, i32* %152, align 4
  %153 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 3
  %154 = load i32, i32* %153, align 4
  %155 = sub nsw i32 %154, %3
  %156 = sub nsw i32 %155, %123
  %157 = shl i32 %156, 2
  %158 = add i32 %143, -8
  %159 = add i32 %157, %158
  %160 = shl nsw i32 %155, 2
  %161 = add nsw i32 %160, 8
  %162 = icmp slt i32 %159, %161
  %163 = select i1 %162, i32 %159, i32 %161
  %164 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 56, i32 3
  store i32 %163, i32* %164, align 4
  %165 = mul i32 %4, -4
  %166 = add i32 %165, 8
  %167 = sub i32 %166, %143
  %168 = add i32 %122, %4
  %169 = shl nsw i32 %168, 2
  %170 = sub i32 -8, %169
  %171 = icmp sgt i32 %167, %170
  %172 = select i1 %171, i32 %167, i32 %170
  %173 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 56, i32 0
  store i32 %172, i32* %173, align 4
  %174 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 4
  %175 = load i32, i32* %174, align 8
  %176 = sub nsw i32 %175, %4
  %177 = sub nsw i32 %176, %122
  %178 = shl i32 %177, 2
  %179 = add i32 %178, %158
  %180 = shl nsw i32 %176, 2
  %181 = add nsw i32 %180, 8
  %182 = icmp slt i32 %179, %181
  %183 = select i1 %182, i32 %179, i32 %181
  %184 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 56, i32 1
  store i32 %183, i32* %184, align 4
  %185 = shl nuw nsw i32 %122, 2
  %186 = shl nuw nsw i32 %123, 2
  %187 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 0, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = lshr i32 %185, %188
  %190 = trunc i32 %189 to i8
  %191 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 0, i32 9
  %192 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 0, i32 2
  %193 = load i32, i32* %192, align 8
  %194 = lshr i32 %186, %193
  %195 = trunc i32 %194 to i8
  %196 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 0, i32 10
  %197 = icmp ugt i8 %190, 4
  %198 = select i1 %197, i8 %190, i8 4
  store i8 %198, i8* %191, align 8
  %199 = icmp ugt i8 %195, 4
  %200 = select i1 %199, i8 %195, i8 4
  store i8 %200, i8* %196, align 1
  br i1 %11, label %349, label %201

201:                                              ; preds = %121, %349
  %202 = load i32, i32* %153, align 4
  %203 = load i32, i32* %174, align 16
  %204 = shl nsw i32 %3, 5
  %205 = sub nsw i32 0, %204
  %206 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 19
  store i32 %205, i32* %206, align 4
  %207 = sub i32 %202, %147
  %208 = shl nsw i32 %207, 5
  %209 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 20
  store i32 %208, i32* %209, align 16
  %210 = shl nsw i32 %4, 5
  %211 = sub nsw i32 0, %210
  %212 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 17
  store i32 %211, i32* %212, align 4
  %213 = sub i32 %203, %168
  %214 = shl nsw i32 %213, 5
  %215 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 18
  store i32 %214, i32* %215, align 8
  %216 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 0
  store i32 %3, i32* %216, align 16
  %217 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 1
  store i32 %4, i32* %217, align 4
  %218 = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %1, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = icmp slt i32 %219, %3
  %221 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 7
  %222 = zext i1 %220 to i8
  store i8 %222, i8* %221, align 16
  %223 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 1, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 1, i32 2
  %226 = load i32, i32* %225, align 8
  %227 = getelementptr inbounds %struct.TileInfo, %struct.TileInfo* %1, i64 0, i32 2
  %228 = load i32, i32* %227, align 4
  %229 = icmp slt i32 %228, %4
  %230 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 8
  %231 = zext i1 %229 to i8
  store i8 %231, i8* %230, align 1
  %232 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 9
  store i8 %222, i8* %232, align 2
  %233 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 10
  store i8 %231, i8* %233, align 1
  %234 = icmp ne i32 %224, 0
  %235 = lshr i64 65539, %13
  %236 = and i64 %235, 1
  %237 = icmp ne i64 %236, 0
  %238 = and i1 %237, %234
  br i1 %238, label %239, label %243

239:                                              ; preds = %201
  %240 = load i32, i32* %227, align 4
  %241 = icmp sgt i32 %72, %240
  %242 = zext i1 %241 to i8
  store i8 %242, i8* %233, align 1
  br label %243

243:                                              ; preds = %239, %201
  %244 = phi i8 [ %242, %239 ], [ %231, %201 ]
  %245 = icmp ne i32 %226, 0
  %246 = lshr i64 131077, %13
  %247 = and i64 %246, 1
  %248 = icmp ne i64 %247, 0
  %249 = and i1 %248, %245
  br i1 %249, label %250, label %254

250:                                              ; preds = %243
  %251 = load i32, i32* %218, align 4
  %252 = icmp sgt i32 %69, %251
  %253 = zext i1 %252 to i8
  store i8 %253, i8* %232, align 2
  br label %254

254:                                              ; preds = %250, %243
  %255 = phi i8 [ %253, %250 ], [ %222, %243 ]
  br i1 %220, label %256, label %267

256:                                              ; preds = %254
  %257 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %44, align 8
  %258 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 2
  %259 = load i32, i32* %258, align 8
  %260 = sub nsw i32 0, %259
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %257, i64 %261
  %263 = bitcast %struct.MB_MODE_INFO** %262 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 12
  %266 = bitcast %struct.MB_MODE_INFO** %265 to i64*
  store i64 %264, i64* %266, align 16
  br label %269

267:                                              ; preds = %254
  %268 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 12
  store %struct.MB_MODE_INFO* null, %struct.MB_MODE_INFO** %268, align 16
  br label %269

269:                                              ; preds = %267, %256
  br i1 %229, label %270, label %277

270:                                              ; preds = %269
  %271 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %44, align 8
  %272 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %271, i64 -1
  %273 = bitcast %struct.MB_MODE_INFO** %272 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 11
  %276 = bitcast %struct.MB_MODE_INFO** %275 to i64*
  store i64 %274, i64* %276, align 8
  br label %279

277:                                              ; preds = %269
  %278 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 11
  store %struct.MB_MODE_INFO* null, %struct.MB_MODE_INFO** %278, align 8
  br label %279

279:                                              ; preds = %277, %270
  br i1 %68, label %280, label %286

280:                                              ; preds = %279
  %281 = and i32 %123, 1
  %282 = icmp ne i32 %281, 0
  %283 = and i1 %282, %245
  br i1 %283, label %284, label %286

284:                                              ; preds = %280
  %285 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 3
  store i8 0, i8* %285, align 4
  br label %325

286:                                              ; preds = %280, %279
  %287 = icmp ne i32 %70, 0
  %288 = and i32 %122, 1
  %289 = icmp eq i32 %288, 0
  %290 = or i1 %287, %289
  %291 = xor i1 %234, true
  %292 = or i1 %290, %291
  %293 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 3
  %294 = zext i1 %292 to i8
  store i8 %294, i8* %293, align 4
  br i1 %292, label %295, label %325

295:                                              ; preds = %286
  %296 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %44, align 8
  %297 = and i32 %226, %3
  %298 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 2
  %299 = load i32, i32* %298, align 8
  %300 = mul i32 %297, %299
  %301 = sub i32 0, %300
  %302 = and i32 %224, %4
  %303 = sub nsw i32 %301, %302
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %296, i64 %304
  %306 = icmp eq i8 %255, 0
  br i1 %306, label %312, label %307

307:                                              ; preds = %295
  %308 = sub i32 %224, %299
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %305, i64 %309
  %311 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %310, align 8
  br label %312

312:                                              ; preds = %307, %295
  %313 = phi %struct.MB_MODE_INFO* [ %311, %307 ], [ null, %295 ]
  %314 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 14
  store %struct.MB_MODE_INFO* %313, %struct.MB_MODE_INFO** %314, align 16
  %315 = icmp eq i8 %244, 0
  br i1 %315, label %322, label %316

316:                                              ; preds = %312
  %317 = mul nsw i32 %299, %226
  %318 = add nsw i32 %317, -1
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %305, i64 %319
  %321 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %320, align 8
  br label %322

322:                                              ; preds = %316, %312
  %323 = phi %struct.MB_MODE_INFO* [ %321, %316 ], [ null, %312 ]
  %324 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 13
  store %struct.MB_MODE_INFO* %323, %struct.MB_MODE_INFO** %324, align 8
  br label %325

325:                                              ; preds = %322, %286, %284
  %326 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 33
  store i8 %17, i8* %326, align 1
  %327 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 32
  store i8 %15, i8* %327, align 4
  %328 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 36
  store i8 0, i8* %328, align 8
  %329 = icmp ult i8 %15, %17
  br i1 %329, label %330, label %335

330:                                              ; preds = %325
  %331 = add nsw i32 %123, -1
  %332 = and i32 %331, %168
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %330
  store i8 1, i8* %328, align 8
  br label %335

335:                                              ; preds = %334, %330, %325
  %336 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 37
  store i8 0, i8* %336, align 1
  %337 = icmp ugt i8 %15, %17
  br i1 %337, label %338, label %343

338:                                              ; preds = %335
  %339 = add nsw i32 %122, -1
  %340 = and i32 %339, %3
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %343

342:                                              ; preds = %338
  store i8 1, i8* %336, align 1
  br label %343

343:                                              ; preds = %335, %338, %342
  %344 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 12
  %345 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %344, align 8
  tail call void @av1_setup_src_planes(%struct.macroblock* %2, %struct.yv12_buffer_config* %345, i32 %3, i32 %4, i32 %12, i8 zeroext %5) #4
  %346 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 5
  %347 = bitcast %struct.TileInfo* %346 to i8*
  %348 = bitcast %struct.TileInfo* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %347, i8* align 4 %348, i64 24, i1 false)
  ret void

349:                                              ; preds = %121
  %350 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 1, i32 1
  %351 = load i32, i32* %350, align 4
  %352 = lshr i32 %185, %351
  %353 = trunc i32 %352 to i8
  %354 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 1, i32 9
  %355 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 1, i32 2
  %356 = load i32, i32* %355, align 8
  %357 = lshr i32 %186, %356
  %358 = trunc i32 %357 to i8
  %359 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 1, i32 10
  %360 = icmp ugt i8 %353, 4
  %361 = select i1 %360, i8 %353, i8 4
  store i8 %361, i8* %354, align 8
  %362 = icmp ugt i8 %358, 4
  %363 = select i1 %362, i8 %358, i8 4
  store i8 %363, i8* %359, align 1
  %364 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 2, i32 1
  %365 = load i32, i32* %364, align 4
  %366 = lshr i32 %185, %365
  %367 = trunc i32 %366 to i8
  %368 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 2, i32 9
  %369 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 2, i32 2
  %370 = load i32, i32* %369, align 8
  %371 = lshr i32 %186, %370
  %372 = trunc i32 %371 to i8
  %373 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 2, i32 10
  %374 = icmp ugt i8 %367, 4
  %375 = select i1 %374, i8 %367, i8 4
  store i8 %375, i8* %368, align 8
  %376 = icmp ugt i8 %372, 4
  %377 = select i1 %376, i8 %372, i8 4
  store i8 %377, i8* %373, align 1
  br label %201
}

declare void @av1_setup_dst_planes(%struct.macroblockd_plane*, i8 zeroext, %struct.yv12_buffer_config*, i32, i32, i32, i32) local_unnamed_addr #3

declare void @av1_setup_src_planes(%struct.macroblock*, %struct.yv12_buffer_config*, i32, i32, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_set_offsets(%struct.AV1_COMP*, %struct.TileInfo* nocapture readonly, %struct.macroblock*, i32, i32, i8 zeroext) local_unnamed_addr #2 {
  tail call void @av1_set_offsets_without_segment_id(%struct.AV1_COMP* %0, %struct.TileInfo* %1, %struct.macroblock* %2, i32 %3, i32 %4, i8 zeroext %5)
  %7 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 6
  %8 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %7, align 8
  %9 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %8, align 8
  %10 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %9, i64 0, i32 28
  %11 = load i16, i16* %10, align 1
  %12 = and i16 %11, -8
  store i16 %12, i16* %10, align 1
  %13 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23, i32 0
  %14 = load i8, i8* %13, align 4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %186, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 58
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %182

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 43, i32 0
  %25 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 24
  %26 = select i1 %23, i8** %25, i8** %24
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %179, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = zext i8 %5 to i64
  %33 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %32
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = sub nsw i32 %31, %4
  %40 = icmp slt i32 %39, %35
  %41 = select i1 %40, i32 %39, i32 %35
  %42 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = sub nsw i32 %43, %3
  %45 = icmp slt i32 %44, %38
  %46 = select i1 %45, i32 %44, i32 %38
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %175

48:                                               ; preds = %29
  %49 = icmp sgt i32 %41, 0
  %50 = sext i32 %41 to i64
  %51 = add nsw i64 %50, -1
  %52 = mul i32 %31, %3
  %53 = add i32 %52, %4
  %54 = add nsw i64 %50, -8
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = icmp ult i32 %41, 8
  %58 = trunc i64 %51 to i32
  %59 = icmp ugt i64 %51, 4294967295
  %60 = and i64 %50, -8
  %61 = and i64 %56, 1
  %62 = icmp eq i64 %55, 0
  %63 = sub nuw nsw i64 %56, %61
  %64 = icmp eq i64 %61, 0
  %65 = icmp eq i64 %60, %50
  br label %66

66:                                               ; preds = %158, %48
  %67 = phi i32 [ 0, %48 ], [ %160, %158 ]
  %68 = phi i32 [ 8, %48 ], [ %159, %158 ]
  %69 = mul i32 %31, %67
  %70 = add i32 %53, %69
  br i1 %49, label %71, label %158

71:                                               ; preds = %66
  %72 = add i32 %67, %3
  %73 = mul i32 %72, %31
  %74 = add i32 %73, %4
  br i1 %57, label %75, label %78

75:                                               ; preds = %146, %78, %71
  %76 = phi i64 [ 0, %78 ], [ 0, %71 ], [ %60, %146 ]
  %77 = phi i32 [ %68, %78 ], [ %68, %71 ], [ %157, %146 ]
  br label %162

78:                                               ; preds = %71
  %79 = add i32 %70, %58
  %80 = icmp slt i32 %79, %70
  %81 = or i1 %80, %59
  br i1 %81, label %75, label %82

82:                                               ; preds = %78
  %83 = insertelement <4 x i32> undef, i32 %68, i32 0
  %84 = shufflevector <4 x i32> %83, <4 x i32> undef, <4 x i32> zeroinitializer
  br i1 %62, label %124, label %85

85:                                               ; preds = %82, %85
  %86 = phi i64 [ %121, %85 ], [ 0, %82 ]
  %87 = phi <4 x i32> [ %119, %85 ], [ %84, %82 ]
  %88 = phi <4 x i32> [ %120, %85 ], [ %84, %82 ]
  %89 = phi i64 [ %122, %85 ], [ %63, %82 ]
  %90 = trunc i64 %86 to i32
  %91 = add i32 %74, %90
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %27, i64 %92
  %94 = bitcast i8* %93 to <4 x i8>*
  %95 = load <4 x i8>, <4 x i8>* %94, align 1
  %96 = getelementptr inbounds i8, i8* %93, i64 4
  %97 = bitcast i8* %96 to <4 x i8>*
  %98 = load <4 x i8>, <4 x i8>* %97, align 1
  %99 = zext <4 x i8> %95 to <4 x i32>
  %100 = zext <4 x i8> %98 to <4 x i32>
  %101 = icmp slt <4 x i32> %87, %99
  %102 = icmp slt <4 x i32> %88, %100
  %103 = select <4 x i1> %101, <4 x i32> %87, <4 x i32> %99
  %104 = select <4 x i1> %102, <4 x i32> %88, <4 x i32> %100
  %105 = trunc i64 %86 to i32
  %106 = or i32 %105, 8
  %107 = add i32 %74, %106
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %27, i64 %108
  %110 = bitcast i8* %109 to <4 x i8>*
  %111 = load <4 x i8>, <4 x i8>* %110, align 1
  %112 = getelementptr inbounds i8, i8* %109, i64 4
  %113 = bitcast i8* %112 to <4 x i8>*
  %114 = load <4 x i8>, <4 x i8>* %113, align 1
  %115 = zext <4 x i8> %111 to <4 x i32>
  %116 = zext <4 x i8> %114 to <4 x i32>
  %117 = icmp slt <4 x i32> %103, %115
  %118 = icmp slt <4 x i32> %104, %116
  %119 = select <4 x i1> %117, <4 x i32> %103, <4 x i32> %115
  %120 = select <4 x i1> %118, <4 x i32> %104, <4 x i32> %116
  %121 = add i64 %86, 16
  %122 = add i64 %89, -2
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %85, !llvm.loop !2

124:                                              ; preds = %85, %82
  %125 = phi <4 x i32> [ undef, %82 ], [ %119, %85 ]
  %126 = phi <4 x i32> [ undef, %82 ], [ %120, %85 ]
  %127 = phi i64 [ 0, %82 ], [ %121, %85 ]
  %128 = phi <4 x i32> [ %84, %82 ], [ %119, %85 ]
  %129 = phi <4 x i32> [ %84, %82 ], [ %120, %85 ]
  br i1 %64, label %146, label %130

130:                                              ; preds = %124
  %131 = trunc i64 %127 to i32
  %132 = add i32 %74, %131
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8, i8* %27, i64 %133
  %135 = bitcast i8* %134 to <4 x i8>*
  %136 = load <4 x i8>, <4 x i8>* %135, align 1
  %137 = getelementptr inbounds i8, i8* %134, i64 4
  %138 = bitcast i8* %137 to <4 x i8>*
  %139 = load <4 x i8>, <4 x i8>* %138, align 1
  %140 = zext <4 x i8> %136 to <4 x i32>
  %141 = zext <4 x i8> %139 to <4 x i32>
  %142 = icmp slt <4 x i32> %129, %141
  %143 = select <4 x i1> %142, <4 x i32> %129, <4 x i32> %141
  %144 = icmp slt <4 x i32> %128, %140
  %145 = select <4 x i1> %144, <4 x i32> %128, <4 x i32> %140
  br label %146

146:                                              ; preds = %124, %130
  %147 = phi <4 x i32> [ %125, %124 ], [ %145, %130 ]
  %148 = phi <4 x i32> [ %126, %124 ], [ %143, %130 ]
  %149 = icmp slt <4 x i32> %147, %148
  %150 = select <4 x i1> %149, <4 x i32> %147, <4 x i32> %148
  %151 = shufflevector <4 x i32> %150, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %152 = icmp slt <4 x i32> %150, %151
  %153 = select <4 x i1> %152, <4 x i32> %150, <4 x i32> %151
  %154 = shufflevector <4 x i32> %153, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %155 = icmp slt <4 x i32> %153, %154
  %156 = select <4 x i1> %155, <4 x i32> %153, <4 x i32> %154
  %157 = extractelement <4 x i32> %156, i32 0
  br i1 %65, label %158, label %75

158:                                              ; preds = %162, %146, %66
  %159 = phi i32 [ %68, %66 ], [ %157, %146 ], [ %172, %162 ]
  %160 = add nuw nsw i32 %67, 1
  %161 = icmp slt i32 %160, %46
  br i1 %161, label %66, label %175

162:                                              ; preds = %75, %162
  %163 = phi i64 [ %173, %162 ], [ %76, %75 ]
  %164 = phi i32 [ %172, %162 ], [ %77, %75 ]
  %165 = trunc i64 %163 to i32
  %166 = add i32 %74, %165
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i8, i8* %27, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i32
  %171 = icmp slt i32 %164, %170
  %172 = select i1 %171, i32 %164, i32 %170
  %173 = add nuw nsw i64 %163, 1
  %174 = icmp slt i64 %173, %50
  br i1 %174, label %162, label %158, !llvm.loop !4

175:                                              ; preds = %158, %29
  %176 = phi i32 [ 8, %29 ], [ %159, %158 ]
  %177 = trunc i32 %176 to i16
  %178 = and i16 %177, 7
  br label %179

179:                                              ; preds = %20, %175
  %180 = phi i16 [ %178, %175 ], [ 0, %20 ]
  %181 = or i16 %180, %12
  store i16 %181, i16* %10, align 1
  br label %182

182:                                              ; preds = %16, %179
  %183 = phi i16 [ %12, %16 ], [ %181, %179 ]
  %184 = and i16 %183, 7
  %185 = zext i16 %184 to i32
  tail call void @av1_init_plane_quantizers(%struct.AV1_COMP* %0, %struct.macroblock* %2, i32 %185) #4
  br label %186

186:                                              ; preds = %6, %182
  ret void
}

declare void @av1_init_plane_quantizers(%struct.AV1_COMP*, %struct.macroblock*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_rd_use_partition(%struct.AV1_COMP*, %struct.ThreadData*, %struct.TileDataEnc*, %struct.MB_MODE_INFO** nocapture readonly, %struct.TokenExtra**, i32, i32, i8 zeroext, i32* nocapture, i64* nocapture, i32, %struct.PC_TREE*) local_unnamed_addr #2 {
  %13 = alloca %struct.RD_SEARCH_MACROBLOCK_CONTEXT, align 8
  %14 = alloca %struct.RD_STATS, align 8
  %15 = alloca %struct.RD_STATS, align 8
  %16 = alloca %struct.RD_STATS, align 8
  %17 = alloca %struct.RD_STATS, align 8
  %18 = alloca %struct.RD_STATS, align 8
  %19 = alloca %struct.RD_STATS, align 8
  %20 = alloca %struct.RD_STATS, align 8
  %21 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 35
  %22 = load %struct.SequenceHeader*, %struct.SequenceHeader** %21, align 16
  %23 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %22, i64 0, i32 27
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  %26 = select i1 %25, i32 3, i32 1
  %27 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %2, i64 0, i32 0
  %28 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0
  %29 = zext i8 %7 to i64
  %30 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = lshr i32 %32, 1
  %34 = icmp ugt i8 %7, 2
  br i1 %34, label %35, label %157

35:                                               ; preds = %12
  %36 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 25
  %37 = load i8*, i8** %36, align 8
  %38 = sext i32 %6 to i64
  %39 = getelementptr inbounds i8, i8* %37, i64 %38
  %40 = and i32 %5, 31
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 26, i64 %41
  %43 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide_log2, i64 0, i64 %29
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = add nsw i32 %45, -1
  %47 = load i8, i8* %39, align 1
  %48 = sext i8 %47 to i32
  %49 = lshr i32 %48, %46
  %50 = and i32 %49, 1
  %51 = load i8, i8* %42, align 1
  %52 = sext i8 %51 to i32
  %53 = lshr i32 %52, %46
  %54 = shl i32 %53, 1
  %55 = and i32 %54, 2
  %56 = shl nsw i32 %46, 2
  %57 = or i32 %50, %56
  %58 = or i32 %57, %55
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, %5
  br i1 %62, label %63, label %170

63:                                               ; preds = %35
  %64 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 4
  %65 = load i32, i32* %64, align 8
  %66 = icmp sgt i32 %65, %6
  br i1 %66, label %67, label %170

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 11
  %69 = load i32, i32* %68, align 4
  %70 = mul nsw i32 %69, %5
  %71 = add nsw i32 %70, %6
  %72 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 9
  %73 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %72, align 8
  %74 = sext i32 %71 to i64
  %75 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %73, i64 %74
  %76 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %75, align 8
  %77 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %76, i64 0, i32 0
  %78 = load i8, i8* %77, align 8
  %79 = icmp eq i8 %78, %7
  br i1 %79, label %157, label %80

80:                                               ; preds = %67
  %81 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %29
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = zext i8 %78 to i64
  %85 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %84
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp ugt i8 %7, 3
  %92 = add nsw i32 %33, %5
  %93 = icmp slt i32 %92, %61
  %94 = and i1 %91, %93
  br i1 %94, label %95, label %147

95:                                               ; preds = %80
  %96 = lshr i32 %83, 1
  %97 = add nsw i32 %96, %6
  %98 = icmp slt i32 %97, %65
  br i1 %98, label %99, label %147

99:                                               ; preds = %95
  %100 = zext i32 %33 to i64
  %101 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %75, i64 %100
  %102 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %101, align 8
  %103 = mul nsw i32 %96, %69
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %75, i64 %104
  %106 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %105, align 8
  %107 = icmp eq i8 %89, %31
  br i1 %107, label %108, label %116

108:                                              ; preds = %99
  %109 = shl nuw nsw i32 %87, 2
  %110 = icmp eq i32 %109, %83
  br i1 %110, label %157, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %106, i64 0, i32 0
  %113 = load i8, i8* %112, align 8
  %114 = icmp eq i8 %113, %78
  %115 = select i1 %114, i8 1, i8 5
  br label %157

116:                                              ; preds = %99
  %117 = icmp eq i8 %86, %82
  br i1 %117, label %118, label %126

118:                                              ; preds = %116
  %119 = shl nuw nsw i32 %90, 2
  %120 = icmp eq i32 %119, %32
  br i1 %120, label %157, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %102, i64 0, i32 0
  %123 = load i8, i8* %122, align 8
  %124 = icmp eq i8 %123, %78
  %125 = select i1 %124, i8 2, i8 7
  br label %157

126:                                              ; preds = %116
  %127 = shl nuw nsw i32 %90, 1
  %128 = icmp eq i32 %127, %32
  %129 = shl nuw nsw i32 %87, 1
  %130 = icmp eq i32 %129, %83
  %131 = and i1 %130, %128
  br i1 %131, label %132, label %157

132:                                              ; preds = %126
  %133 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %106, i64 0, i32 0
  %134 = load i8, i8* %133, align 8
  %135 = zext i8 %134 to i64
  %136 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = icmp eq i8 %137, %31
  br i1 %138, label %157, label %139

139:                                              ; preds = %132
  %140 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %102, i64 0, i32 0
  %141 = load i8, i8* %140, align 8
  %142 = zext i8 %141 to i64
  %143 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, %82
  %146 = select i1 %145, i8 6, i8 3
  br label %157

147:                                              ; preds = %80, %95
  %148 = icmp ult i8 %89, %31
  %149 = zext i1 %148 to i64
  %150 = icmp ult i8 %86, %82
  %151 = zext i1 %150 to i64
  %152 = shl nuw nsw i64 %149, 1
  %153 = or i64 %152, %151
  %154 = getelementptr inbounds [4 x i8], [4 x i8]* @get_partition.base_partitions, i64 0, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i64 %153, 0
  br i1 %156, label %170, label %157

157:                                              ; preds = %139, %132, %126, %121, %118, %111, %108, %67, %12, %147
  %158 = phi i8 [ %155, %147 ], [ %146, %139 ], [ 4, %132 ], [ 3, %126 ], [ %125, %121 ], [ 9, %118 ], [ %115, %111 ], [ 8, %108 ], [ 0, %67 ], [ 0, %12 ]
  %159 = phi i64 [ %59, %147 ], [ %59, %139 ], [ %59, %132 ], [ %59, %126 ], [ %59, %121 ], [ %59, %118 ], [ %59, %111 ], [ %59, %108 ], [ %59, %67 ], [ 0, %12 ]
  switch i8 %7, label %170 [
    i8 0, label %165
    i8 3, label %160
    i8 6, label %161
    i8 9, label %162
    i8 12, label %163
    i8 15, label %164
  ]

160:                                              ; preds = %157
  br label %165

161:                                              ; preds = %157
  br label %165

162:                                              ; preds = %157
  br label %165

163:                                              ; preds = %157
  br label %165

164:                                              ; preds = %157
  br label %165

165:                                              ; preds = %164, %163, %162, %161, %160, %157
  %166 = phi i64 [ 0, %157 ], [ 1, %160 ], [ 2, %161 ], [ 3, %162 ], [ 4, %163 ], [ 5, %164 ]
  %167 = zext i8 %158 to i64
  %168 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* @subsize_lookup, i64 0, i64 %167, i64 %166
  %169 = load i8, i8* %168, align 1
  br label %170

170:                                              ; preds = %35, %63, %147, %157, %165
  %171 = phi i8 [ -1, %147 ], [ %158, %165 ], [ %158, %157 ], [ -1, %63 ], [ -1, %35 ]
  %172 = phi i64 [ %59, %147 ], [ %159, %165 ], [ %159, %157 ], [ %59, %63 ], [ %59, %35 ]
  %173 = phi i8 [ -1, %147 ], [ %169, %165 ], [ -1, %157 ], [ -1, %63 ], [ -1, %35 ]
  %174 = getelementptr inbounds %struct.RD_SEARCH_MACROBLOCK_CONTEXT, %struct.RD_SEARCH_MACROBLOCK_CONTEXT* %13, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 336, i8* nonnull %174) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 336, i1 false)
  %175 = bitcast %struct.RD_STATS* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %175) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %175, i8 -86, i64 40, i1 false)
  %176 = bitcast %struct.RD_STATS* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %176) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 -86, i64 40, i1 false)
  %177 = bitcast %struct.RD_STATS* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %177) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %177, i8 -86, i64 40, i1 false)
  %178 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %3, align 8
  %179 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %178, i64 0, i32 0
  %180 = load i8, i8* %179, align 8
  %181 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %11, i64 0, i32 2
  %182 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %181, align 8
  %183 = icmp eq %struct.PICK_MODE_CONTEXT* %182, null
  br i1 %183, label %184, label %187

184:                                              ; preds = %170
  %185 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 3
  %186 = tail call %struct.PICK_MODE_CONTEXT* @av1_alloc_pmc(%struct.AV1_COMP* %0, i8 zeroext %7, %struct.PC_TREE_SHARED_BUFFERS* %185) #4
  store %struct.PICK_MODE_CONTEXT* %186, %struct.PICK_MODE_CONTEXT** %181, align 8
  br label %187

187:                                              ; preds = %184, %170
  %188 = phi %struct.PICK_MODE_CONTEXT* [ %186, %184 ], [ %182, %170 ]
  %189 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 3
  %190 = load i32, i32* %189, align 4
  %191 = icmp sgt i32 %190, %5
  br i1 %191, label %192, label %687

192:                                              ; preds = %187
  %193 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 4
  %194 = load i32, i32* %193, align 8
  %195 = icmp sgt i32 %194, %6
  br i1 %195, label %196, label %687

196:                                              ; preds = %192
  %197 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %14, i64 0, i32 0
  store i32 2147483647, i32* %197, align 8
  %198 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %14, i64 0, i32 1
  %199 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %14, i64 0, i32 2
  %200 = bitcast i64* %198 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %200, align 8
  %201 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %14, i64 0, i32 3
  store i64 9223372036854775807, i64* %201, align 8
  %202 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %14, i64 0, i32 4
  store i32 0, i32* %202, align 8
  %203 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %14, i64 0, i32 5
  store i32 0, i32* %203, align 4
  %204 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %15, i64 0, i32 0
  store i32 2147483647, i32* %204, align 8
  %205 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %15, i64 0, i32 1
  %206 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %15, i64 0, i32 2
  %207 = bitcast i64* %205 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %207, align 8
  %208 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %15, i64 0, i32 3
  store i64 9223372036854775807, i64* %208, align 8
  %209 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %15, i64 0, i32 4
  store i32 0, i32* %209, align 8
  %210 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %15, i64 0, i32 5
  store i32 0, i32* %210, align 4
  %211 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %16, i64 0, i32 0
  store i32 2147483647, i32* %211, align 8
  %212 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %16, i64 0, i32 1
  %213 = bitcast i64* %212 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %213, align 8
  %214 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %16, i64 0, i32 3
  store i64 9223372036854775807, i64* %214, align 8
  %215 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %16, i64 0, i32 4
  store i32 0, i32* %215, align 8
  %216 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %16, i64 0, i32 5
  store i32 0, i32* %216, align 4
  %217 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %11, i64 0, i32 0
  store i8 %171, i8* %217, align 8
  %218 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 40, i32 2
  %219 = load i8**, i8*** %218, align 16
  %220 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %2, i64 0, i32 0, i32 4
  %221 = load i32, i32* %220, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i8*, i8** %219, i64 %222
  %224 = load i8*, i8** %223, align 8
  %225 = sext i32 %6 to i64
  %226 = getelementptr inbounds i8, i8* %224, i64 %225
  %227 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 27
  store i8* %226, i8** %227, align 16
  %228 = and i32 %5, 31
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 29, i64 %229
  %231 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 28
  store i8* %230, i8** %231, align 8
  call void @av1_save_context(%struct.macroblock* %28, %struct.RD_SEARCH_MACROBLOCK_CONTEXT* nonnull %13, i32 %5, i32 %6, i8 zeroext %7, i32 %26) #4
  %232 = icmp eq i8 %7, 6
  br i1 %232, label %233, label %240

233:                                              ; preds = %196
  %234 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 58
  %235 = load i32, i32* %234, align 8
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %240, label %237

237:                                              ; preds = %233
  call void @av1_set_offsets(%struct.AV1_COMP* %0, %struct.TileInfo* %27, %struct.macroblock* %28, i32 %5, i32 %6, i8 zeroext 6)
  %238 = call i32 @av1_log_block_var(%struct.AV1_COMP* %0, %struct.macroblock* %28, i8 zeroext 6) #4
  %239 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 18
  store i32 %238, i32* %239, align 4
  br label %240

240:                                              ; preds = %233, %237, %196
  %241 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 17
  %242 = load i32, i32* %241, align 8
  %243 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 31, i32 2
  %244 = load i32, i32* %243, align 4
  store i32 %244, i32* %241, align 8
  %245 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 33, i32 0
  %246 = load i32, i32* %245, align 8
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %254, label %248

248:                                              ; preds = %240
  %249 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 7
  %250 = load i32, i32* %249, align 4
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %254

252:                                              ; preds = %248
  %253 = call i32 @av1_get_hier_tpl_rdmult(%struct.AV1_COMP* %0, %struct.macroblock* %28, i8 zeroext %7, i32 %5, i32 %6, i32 %244) #4
  store i32 %253, i32* %241, align 8
  br label %254

254:                                              ; preds = %252, %248, %240
  %255 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 12, i32 2
  %256 = load i32, i32* %255, align 8
  %257 = icmp eq i32 %256, 1
  br i1 %257, label %258, label %260

258:                                              ; preds = %254
  %259 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 24
  call void @av1_set_ssim_rdmult(%struct.AV1_COMP* %0, i32* %259, i8 zeroext %7, i32 %5, i32 %6, i32* %241) #4
  br label %260

260:                                              ; preds = %254, %258
  %261 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 0
  %262 = load i8, i8* %261, align 16
  %263 = icmp eq i8 %262, 2
  br i1 %263, label %264, label %349

264:                                              ; preds = %260
  %265 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 11
  %266 = load i32, i32* %265, align 4
  %267 = icmp eq i32 %266, 2
  %268 = icmp ult i8 %7, 10
  %269 = and i1 %268, %267
  br i1 %269, label %282, label %270

270:                                              ; preds = %264
  %271 = icmp eq i32 %266, 1
  br i1 %271, label %272, label %349

272:                                              ; preds = %270
  %273 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 22, i32 0
  %274 = load i32, i32* %273, align 16
  %275 = icmp sgt i32 %274, 190
  %276 = and i1 %268, %275
  br i1 %276, label %277, label %349

277:                                              ; preds = %272
  %278 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 0, i32 0
  %279 = load i8, i8* %278, align 16
  %280 = and i8 %279, -3
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %349, label %282

282:                                              ; preds = %277, %264
  %283 = icmp eq i8 %171, 3
  %284 = icmp ugt i8 %173, 3
  %285 = and i1 %283, %284
  br i1 %285, label %286, label %317

286:                                              ; preds = %282
  %287 = add i8 %173, -6
  %288 = icmp ult i8 %287, 10
  br i1 %288, label %289, label %300

289:                                              ; preds = %286
  %290 = zext i8 %287 to i16
  %291 = lshr i16 585, %290
  %292 = and i16 %291, 1
  %293 = icmp eq i16 %292, 0
  br i1 %293, label %300, label %294

294:                                              ; preds = %289
  %295 = sext i8 %287 to i64
  %296 = getelementptr inbounds [10 x i64], [10 x i64]* @switch.table.av1_rd_use_partition.1, i64 0, i64 %295
  %297 = load i64, i64* %296, align 8
  %298 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* @subsize_lookup, i64 0, i64 3, i64 %297
  %299 = load i8, i8* %298, align 1
  br label %300

300:                                              ; preds = %289, %286, %294
  %301 = phi i8 [ %299, %294 ], [ -1, %286 ], [ -1, %289 ]
  %302 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 11
  %303 = load i32, i32* %302, align 4
  %304 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %3, align 8
  %305 = icmp eq %struct.MB_MODE_INFO* %304, null
  br i1 %305, label %311, label %306

306:                                              ; preds = %300
  %307 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %304, i64 0, i32 0
  %308 = load i8, i8* %307, align 8
  %309 = icmp ult i8 %308, %301
  %310 = zext i1 %309 to i32
  br label %311

311:                                              ; preds = %306, %300
  %312 = phi i32 [ 1, %300 ], [ %310, %306 ]
  %313 = zext i32 %33 to i64
  %314 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %3, i64 %313
  %315 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %314, align 8
  %316 = icmp eq %struct.MB_MODE_INFO* %315, null
  br i1 %316, label %693, label %688

317:                                              ; preds = %705, %713, %282
  %318 = phi i32 [ 0, %282 ], [ %706, %705 ], [ %717, %713 ]
  %319 = icmp eq i8 %171, 0
  %320 = icmp ne i32 %318, 0
  %321 = or i1 %319, %320
  br i1 %321, label %349, label %322

322:                                              ; preds = %317
  %323 = add nsw i32 %33, %5
  %324 = load i32, i32* %189, align 4
  %325 = icmp slt i32 %323, %324
  br i1 %325, label %326, label %349

326:                                              ; preds = %322
  %327 = add nsw i32 %33, %6
  %328 = load i32, i32* %193, align 8
  %329 = icmp slt i32 %327, %328
  br i1 %329, label %330, label %349

330:                                              ; preds = %326
  store i8 0, i8* %217, align 8
  call fastcc void @pick_sb_modes(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %28, i32 %5, i32 %6, %struct.RD_STATS* nonnull %15, i8 zeroext 0, i8 zeroext %7, %struct.PICK_MODE_CONTEXT* %188, %struct.RD_STATS* nonnull byval(%struct.RD_STATS) align 8 %16)
  %331 = load i32, i32* %204, align 8
  %332 = icmp eq i32 %331, 2147483647
  br i1 %332, label %346, label %333

333:                                              ; preds = %330
  %334 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 20, i32 0, i64 %172, i64 0
  %335 = load i32, i32* %334, align 4
  %336 = add nsw i32 %335, %331
  store i32 %336, i32* %204, align 8
  %337 = sext i32 %336 to i64
  %338 = load i32, i32* %241, align 8
  %339 = sext i32 %338 to i64
  %340 = mul nsw i64 %339, %337
  %341 = add nsw i64 %340, 256
  %342 = ashr i64 %341, 9
  %343 = load i64, i64* %205, align 8
  %344 = shl i64 %343, 7
  %345 = add nsw i64 %342, %344
  store i64 %345, i64* %206, align 8
  br label %346

346:                                              ; preds = %330, %333
  call void @av1_restore_context(%struct.macroblock* %28, %struct.RD_SEARCH_MACROBLOCK_CONTEXT* nonnull %13, i32 %5, i32 %6, i8 zeroext %7, i32 %26) #4
  %347 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %3, align 8
  %348 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %347, i64 0, i32 0
  store i8 %180, i8* %348, align 8
  store i8 %171, i8* %217, align 8
  br label %349

349:                                              ; preds = %277, %322, %326, %346, %317, %272, %270, %260
  %350 = call %struct.PC_TREE* @av1_alloc_pc_tree_node(i8 zeroext %173) #4
  %351 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %11, i64 0, i32 11, i64 0
  store %struct.PC_TREE* %350, %struct.PC_TREE** %351, align 8
  %352 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %350, i64 0, i32 12
  store i32 0, i32* %352, align 8
  %353 = call %struct.PC_TREE* @av1_alloc_pc_tree_node(i8 zeroext %173) #4
  %354 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %11, i64 0, i32 11, i64 1
  store %struct.PC_TREE* %353, %struct.PC_TREE** %354, align 8
  %355 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %353, i64 0, i32 12
  store i32 1, i32* %355, align 8
  %356 = call %struct.PC_TREE* @av1_alloc_pc_tree_node(i8 zeroext %173) #4
  %357 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %11, i64 0, i32 11, i64 2
  store %struct.PC_TREE* %356, %struct.PC_TREE** %357, align 8
  %358 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %356, i64 0, i32 12
  store i32 2, i32* %358, align 8
  %359 = call %struct.PC_TREE* @av1_alloc_pc_tree_node(i8 zeroext %173) #4
  %360 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %11, i64 0, i32 11, i64 3
  store %struct.PC_TREE* %359, %struct.PC_TREE** %360, align 8
  %361 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %359, i64 0, i32 12
  store i32 3, i32* %361, align 8
  switch i8 %171, label %515 [
    i8 0, label %384
    i8 1, label %373
    i8 2, label %362
    i8 3, label %454
  ]

362:                                              ; preds = %349
  %363 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 3
  %364 = call %struct.PICK_MODE_CONTEXT* @av1_alloc_pmc(%struct.AV1_COMP* %0, i8 zeroext %173, %struct.PC_TREE_SHARED_BUFFERS* %363) #4
  %365 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %11, i64 0, i32 4, i64 0
  store %struct.PICK_MODE_CONTEXT* %364, %struct.PICK_MODE_CONTEXT** %365, align 8
  %366 = call %struct.PICK_MODE_CONTEXT* @av1_alloc_pmc(%struct.AV1_COMP* %0, i8 zeroext %173, %struct.PC_TREE_SHARED_BUFFERS* %363) #4
  %367 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %11, i64 0, i32 4, i64 1
  store %struct.PICK_MODE_CONTEXT* %366, %struct.PICK_MODE_CONTEXT** %367, align 8
  %368 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %365, align 8
  call fastcc void @pick_sb_modes(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %28, i32 %5, i32 %6, %struct.RD_STATS* nonnull %14, i8 zeroext 2, i8 zeroext %173, %struct.PICK_MODE_CONTEXT* %368, %struct.RD_STATS* nonnull byval(%struct.RD_STATS) align 8 %16)
  %369 = load i32, i32* %197, align 8
  %370 = icmp eq i32 %369, 2147483647
  %371 = xor i1 %34, true
  %372 = or i1 %370, %371
  br i1 %372, label %517, label %418

373:                                              ; preds = %349
  %374 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 3
  %375 = call %struct.PICK_MODE_CONTEXT* @av1_alloc_pmc(%struct.AV1_COMP* %0, i8 zeroext %173, %struct.PC_TREE_SHARED_BUFFERS* %374) #4
  %376 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %11, i64 0, i32 3, i64 0
  store %struct.PICK_MODE_CONTEXT* %375, %struct.PICK_MODE_CONTEXT** %376, align 8
  %377 = call %struct.PICK_MODE_CONTEXT* @av1_alloc_pmc(%struct.AV1_COMP* %0, i8 zeroext %173, %struct.PC_TREE_SHARED_BUFFERS* %374) #4
  %378 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %11, i64 0, i32 3, i64 1
  store %struct.PICK_MODE_CONTEXT* %377, %struct.PICK_MODE_CONTEXT** %378, align 8
  %379 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %376, align 8
  call fastcc void @pick_sb_modes(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %28, i32 %5, i32 %6, %struct.RD_STATS* nonnull %14, i8 zeroext 1, i8 zeroext %173, %struct.PICK_MODE_CONTEXT* %379, %struct.RD_STATS* nonnull byval(%struct.RD_STATS) align 8 %16)
  %380 = load i32, i32* %197, align 8
  %381 = icmp eq i32 %380, 2147483647
  %382 = xor i1 %34, true
  %383 = or i1 %381, %382
  br i1 %383, label %517, label %385

384:                                              ; preds = %349
  call fastcc void @pick_sb_modes(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %28, i32 %5, i32 %6, %struct.RD_STATS* nonnull %14, i8 zeroext 0, i8 zeroext %7, %struct.PICK_MODE_CONTEXT* %188, %struct.RD_STATS* nonnull byval(%struct.RD_STATS) align 8 %16)
  br label %515

385:                                              ; preds = %373
  %386 = add nsw i32 %33, %5
  %387 = load i32, i32* %189, align 4
  %388 = icmp slt i32 %386, %387
  br i1 %388, label %389, label %515

389:                                              ; preds = %385
  %390 = bitcast %struct.RD_STATS* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %390) #4
  %391 = bitcast %struct.RD_STATS* %17 to i64*
  store i64 -6148914691236517206, i64* %391, align 8
  %392 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %376, align 8
  %393 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %17, i64 0, i32 0
  store i32 0, i32* %393, align 8
  %394 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %17, i64 0, i32 1
  %395 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %17, i64 0, i32 4
  %396 = bitcast i64* %394 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %396, i8 0, i64 24, i1 false) #4
  store i32 1, i32* %395, align 8
  %397 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %17, i64 0, i32 5
  store i32 0, i32* %397, align 4
  call void @av1_update_state(%struct.AV1_COMP* %0, %struct.ThreadData* %1, %struct.PICK_MODE_CONTEXT* %392, i32 %5, i32 %6, i8 zeroext %173, i8 zeroext 1) #4
  call fastcc void @encode_superblock(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i8 zeroext 1, i8 zeroext %173)
  %398 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %378, align 8
  call fastcc void @pick_sb_modes(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %28, i32 %386, i32 %6, %struct.RD_STATS* nonnull %17, i8 zeroext 1, i8 zeroext %173, %struct.PICK_MODE_CONTEXT* %398, %struct.RD_STATS* nonnull byval(%struct.RD_STATS) align 8 %16)
  %399 = load i32, i32* %393, align 8
  %400 = icmp eq i32 %399, 2147483647
  br i1 %400, label %404, label %401

401:                                              ; preds = %389
  %402 = load i64, i64* %394, align 8
  %403 = icmp eq i64 %402, 9223372036854775807
  br i1 %403, label %404, label %406

404:                                              ; preds = %401, %389
  store i32 2147483647, i32* %197, align 8
  %405 = bitcast i64* %198 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %405, align 8
  store i64 9223372036854775807, i64* %201, align 8
  store i32 0, i32* %202, align 8
  store i32 0, i32* %203, align 4
  br label %417

406:                                              ; preds = %401
  %407 = load i32, i32* %197, align 8
  %408 = add nsw i32 %407, %399
  store i32 %408, i32* %197, align 8
  %409 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %17, i64 0, i32 2
  %410 = load i64, i64* %409, align 8
  %411 = bitcast i64* %198 to <2 x i64>*
  %412 = load <2 x i64>, <2 x i64>* %411, align 8
  %413 = insertelement <2 x i64> undef, i64 %402, i32 0
  %414 = insertelement <2 x i64> %413, i64 %410, i32 1
  %415 = add nsw <2 x i64> %412, %414
  %416 = bitcast i64* %198 to <2 x i64>*
  store <2 x i64> %415, <2 x i64>* %416, align 8
  br label %417

417:                                              ; preds = %406, %404
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %390) #4
  br label %515

418:                                              ; preds = %362
  %419 = add nsw i32 %33, %6
  %420 = load i32, i32* %193, align 8
  %421 = icmp slt i32 %419, %420
  br i1 %421, label %422, label %515

422:                                              ; preds = %418
  %423 = bitcast %struct.RD_STATS* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %423) #4
  %424 = bitcast %struct.RD_STATS* %18 to i64*
  store i64 -6148914691236517206, i64* %424, align 8
  %425 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %365, align 8
  %426 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %18, i64 0, i32 0
  store i32 0, i32* %426, align 8
  %427 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %18, i64 0, i32 1
  %428 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %18, i64 0, i32 4
  %429 = bitcast i64* %427 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %429, i8 0, i64 24, i1 false) #4
  store i32 1, i32* %428, align 8
  %430 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %18, i64 0, i32 5
  store i32 0, i32* %430, align 4
  call void @av1_update_state(%struct.AV1_COMP* %0, %struct.ThreadData* %1, %struct.PICK_MODE_CONTEXT* %425, i32 %5, i32 %6, i8 zeroext %173, i8 zeroext 1) #4
  call fastcc void @encode_superblock(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i8 zeroext 1, i8 zeroext %173)
  %431 = icmp ugt i8 %7, 3
  %432 = zext i1 %431 to i64
  %433 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %11, i64 0, i32 4, i64 %432
  %434 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %433, align 8
  call fastcc void @pick_sb_modes(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %28, i32 %5, i32 %419, %struct.RD_STATS* nonnull %18, i8 zeroext 2, i8 zeroext %173, %struct.PICK_MODE_CONTEXT* %434, %struct.RD_STATS* nonnull byval(%struct.RD_STATS) align 8 %16)
  %435 = load i32, i32* %426, align 8
  %436 = icmp eq i32 %435, 2147483647
  br i1 %436, label %440, label %437

437:                                              ; preds = %422
  %438 = load i64, i64* %427, align 8
  %439 = icmp eq i64 %438, 9223372036854775807
  br i1 %439, label %440, label %442

440:                                              ; preds = %437, %422
  store i32 2147483647, i32* %197, align 8
  %441 = bitcast i64* %198 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %441, align 8
  store i64 9223372036854775807, i64* %201, align 8
  store i32 0, i32* %202, align 8
  store i32 0, i32* %203, align 4
  br label %453

442:                                              ; preds = %437
  %443 = load i32, i32* %197, align 8
  %444 = add nsw i32 %443, %435
  store i32 %444, i32* %197, align 8
  %445 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %18, i64 0, i32 2
  %446 = load i64, i64* %445, align 8
  %447 = bitcast i64* %198 to <2 x i64>*
  %448 = load <2 x i64>, <2 x i64>* %447, align 8
  %449 = insertelement <2 x i64> undef, i64 %438, i32 0
  %450 = insertelement <2 x i64> %449, i64 %446, i32 1
  %451 = add nsw <2 x i64> %448, %450
  %452 = bitcast i64* %198 to <2 x i64>*
  store <2 x i64> %451, <2 x i64>* %452, align 8
  br label %453

453:                                              ; preds = %442, %440
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %423) #4
  br label %515

454:                                              ; preds = %349
  %455 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 11
  %456 = load i32, i32* %455, align 4
  %457 = icmp eq i32 %456, 1
  %458 = load i32, i32* %204, align 8
  %459 = icmp ne i32 %458, 2147483647
  %460 = and i1 %457, %459
  %461 = load i32, i32* %209, align 8
  %462 = icmp eq i32 %461, 1
  %463 = and i1 %460, %462
  br i1 %463, label %464, label %466

464:                                              ; preds = %454
  store i32 2147483647, i32* %197, align 8
  %465 = bitcast i64* %198 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %465, align 8
  store i64 9223372036854775807, i64* %201, align 8
  store i32 0, i32* %202, align 8
  store i32 0, i32* %203, align 4
  br label %515

466:                                              ; preds = %454
  store i32 0, i32* %197, align 8
  %467 = bitcast %struct.RD_STATS* %19 to i8*
  %468 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %19, i64 0, i32 0
  %469 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %19, i64 0, i32 1
  %470 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %19, i64 0, i32 4
  %471 = bitcast i64* %469 to i8*
  %472 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %19, i64 0, i32 5
  %473 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 11
  %474 = bitcast i64* %198 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %474, i8 0, i64 16, i1 false)
  br label %475

475:                                              ; preds = %512, %466
  %476 = phi i64 [ 0, %466 ], [ %513, %512 ]
  %477 = trunc i64 %476 to i32
  %478 = and i32 %477, 1
  %479 = mul nuw nsw i32 %478, %33
  %480 = lshr i32 %477, 1
  %481 = mul nsw i32 %480, %33
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %467) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %467, i8 -86, i64 40, i1 false)
  %482 = add nsw i32 %481, %5
  %483 = load i32, i32* %189, align 4
  %484 = icmp slt i32 %482, %483
  br i1 %484, label %485, label %512

485:                                              ; preds = %475
  %486 = add nsw i32 %479, %6
  %487 = load i32, i32* %193, align 8
  %488 = icmp slt i32 %486, %487
  br i1 %488, label %489, label %512

489:                                              ; preds = %485
  store i32 0, i32* %468, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %471, i8 0, i64 24, i1 false) #4
  store i32 1, i32* %470, align 8
  store i32 0, i32* %472, align 4
  %490 = load i32, i32* %473, align 4
  %491 = mul nsw i32 %490, %481
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %3, i64 %492
  %494 = zext i32 %479 to i64
  %495 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %493, i64 %494
  %496 = icmp ne i64 %476, 3
  %497 = zext i1 %496 to i32
  %498 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %11, i64 0, i32 11, i64 %476
  %499 = load %struct.PC_TREE*, %struct.PC_TREE** %498, align 8
  call void @av1_rd_use_partition(%struct.AV1_COMP* %0, %struct.ThreadData* %1, %struct.TileDataEnc* %2, %struct.MB_MODE_INFO** %495, %struct.TokenExtra** %4, i32 %482, i32 %486, i8 zeroext %173, i32* nonnull %468, i64* %469, i32 %497, %struct.PC_TREE* %499)
  %500 = load i32, i32* %468, align 8
  %501 = icmp eq i32 %500, 2147483647
  %502 = load i64, i64* %469, align 8
  %503 = icmp eq i64 %502, 9223372036854775807
  %504 = or i1 %501, %503
  br i1 %504, label %510, label %505

505:                                              ; preds = %489
  %506 = load i32, i32* %197, align 8
  %507 = add nsw i32 %506, %500
  store i32 %507, i32* %197, align 8
  %508 = load i64, i64* %198, align 8
  %509 = add nsw i64 %508, %502
  store i64 %509, i64* %198, align 8
  br label %512

510:                                              ; preds = %489
  store i32 2147483647, i32* %197, align 8
  %511 = bitcast i64* %198 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %511, align 8
  store i64 9223372036854775807, i64* %201, align 8
  store i32 0, i32* %202, align 8
  store i32 0, i32* %203, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %467) #4
  br label %515

512:                                              ; preds = %505, %485, %475
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %467) #4
  %513 = add nuw nsw i64 %476, 1
  %514 = icmp eq i64 %513, 4
  br i1 %514, label %515, label %475

515:                                              ; preds = %512, %384, %464, %385, %418, %349, %417, %453, %510
  %516 = load i32, i32* %197, align 8
  br label %517

517:                                              ; preds = %515, %362, %373
  %518 = phi i32 [ %516, %515 ], [ %369, %362 ], [ %380, %373 ]
  %519 = icmp eq i32 %518, 2147483647
  br i1 %519, label %534, label %520

520:                                              ; preds = %517
  %521 = zext i8 %171 to i64
  %522 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 20, i32 0, i64 %172, i64 %521
  %523 = load i32, i32* %522, align 4
  %524 = add nsw i32 %523, %518
  store i32 %524, i32* %197, align 8
  %525 = sext i32 %524 to i64
  %526 = load i32, i32* %241, align 8
  %527 = sext i32 %526 to i64
  %528 = mul nsw i64 %527, %525
  %529 = add nsw i64 %528, 256
  %530 = ashr i64 %529, 9
  %531 = load i64, i64* %198, align 8
  %532 = shl i64 %531, 7
  %533 = add nsw i64 %530, %532
  store i64 %533, i64* %199, align 8
  br label %534

534:                                              ; preds = %517, %520
  %535 = load i8, i8* %261, align 16
  %536 = icmp eq i8 %535, 2
  br i1 %536, label %537, label %647

537:                                              ; preds = %534
  %538 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 4, i32 11
  %539 = load i32, i32* %538, align 4
  %540 = icmp sgt i32 %539, 2
  %541 = icmp ne i8 %171, 3
  %542 = and i1 %541, %540
  %543 = icmp ugt i8 %7, 3
  %544 = and i1 %543, %542
  br i1 %544, label %545, label %647

545:                                              ; preds = %537
  %546 = add nsw i32 %32, %5
  %547 = load i32, i32* %189, align 4
  %548 = icmp slt i32 %546, %547
  %549 = add nsw i32 %33, %5
  %550 = icmp eq i32 %549, %547
  %551 = or i1 %548, %550
  br i1 %551, label %552, label %647

552:                                              ; preds = %545
  %553 = add nsw i32 %32, %6
  %554 = load i32, i32* %193, align 8
  %555 = icmp slt i32 %553, %554
  %556 = add nsw i32 %33, %6
  %557 = icmp eq i32 %556, %554
  %558 = or i1 %555, %557
  br i1 %558, label %559, label %647

559:                                              ; preds = %552
  %560 = add i8 %7, -6
  %561 = icmp ult i8 %560, 10
  br i1 %561, label %562, label %573

562:                                              ; preds = %559
  %563 = zext i8 %560 to i16
  %564 = lshr i16 585, %563
  %565 = and i16 %564, 1
  %566 = icmp eq i16 %565, 0
  br i1 %566, label %573, label %567

567:                                              ; preds = %562
  %568 = sext i8 %560 to i64
  %569 = getelementptr inbounds [10 x i64], [10 x i64]* @switch.table.av1_rd_use_partition.1, i64 0, i64 %568
  %570 = load i64, i64* %569, align 8
  %571 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* @subsize_lookup, i64 0, i64 3, i64 %570
  %572 = load i8, i8* %571, align 1
  br label %573

573:                                              ; preds = %562, %559, %567
  %574 = phi i8 [ %572, %567 ], [ -1, %559 ], [ -1, %562 ]
  call void @av1_restore_context(%struct.macroblock* %28, %struct.RD_SEARCH_MACROBLOCK_CONTEXT* nonnull %13, i32 %5, i32 %6, i8 zeroext %7, i32 %26) #4
  store i8 3, i8* %217, align 8
  %575 = bitcast %struct.RD_STATS* %20 to i8*
  %576 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 3
  %577 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %20, i64 0, i32 0
  %578 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %20, i64 0, i32 1
  %579 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 20, i32 0, i64 %172, i64 0
  br label %580

580:                                              ; preds = %628, %573
  %581 = phi i64 [ 0, %573 ], [ %631, %628 ]
  %582 = phi i64 [ 0, %573 ], [ %630, %628 ]
  %583 = phi i32 [ 0, %573 ], [ %629, %628 ]
  %584 = trunc i64 %581 to i32
  %585 = lshr i32 %584, 1
  %586 = mul nsw i32 %585, %33
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %575) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %575, i8 -86, i64 40, i1 false)
  %587 = add nsw i32 %586, %5
  %588 = load i32, i32* %189, align 4
  %589 = icmp slt i32 %587, %588
  br i1 %589, label %590, label %628

590:                                              ; preds = %580
  %591 = and i32 %584, 1
  %592 = mul nuw nsw i32 %591, %33
  %593 = add nsw i32 %592, %6
  %594 = load i32, i32* %193, align 8
  %595 = icmp slt i32 %593, %594
  br i1 %595, label %596, label %628

596:                                              ; preds = %590
  call void @av1_save_context(%struct.macroblock* %28, %struct.RD_SEARCH_MACROBLOCK_CONTEXT* nonnull %13, i32 %5, i32 %6, i8 zeroext %7, i32 %26) #4
  %597 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %11, i64 0, i32 11, i64 %581
  %598 = load %struct.PC_TREE*, %struct.PC_TREE** %597, align 8
  %599 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %598, i64 0, i32 0
  store i8 0, i8* %599, align 8
  %600 = load %struct.PC_TREE*, %struct.PC_TREE** %597, align 8
  %601 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %600, i64 0, i32 2
  %602 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %601, align 8
  %603 = icmp eq %struct.PICK_MODE_CONTEXT* %602, null
  br i1 %603, label %604, label %611

604:                                              ; preds = %596
  %605 = call %struct.PICK_MODE_CONTEXT* @av1_alloc_pmc(%struct.AV1_COMP* %0, i8 zeroext %574, %struct.PC_TREE_SHARED_BUFFERS* %576) #4
  %606 = load %struct.PC_TREE*, %struct.PC_TREE** %597, align 8
  %607 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %606, i64 0, i32 2
  store %struct.PICK_MODE_CONTEXT* %605, %struct.PICK_MODE_CONTEXT** %607, align 8
  %608 = load %struct.PC_TREE*, %struct.PC_TREE** %597, align 8
  %609 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %608, i64 0, i32 2
  %610 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %609, align 8
  br label %611

611:                                              ; preds = %604, %596
  %612 = phi %struct.PICK_MODE_CONTEXT* [ %610, %604 ], [ %602, %596 ]
  call fastcc void @pick_sb_modes(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %28, i32 %587, i32 %593, %struct.RD_STATS* nonnull %20, i8 zeroext 3, i8 zeroext %574, %struct.PICK_MODE_CONTEXT* %612, %struct.RD_STATS* nonnull byval(%struct.RD_STATS) align 8 %16)
  call void @av1_restore_context(%struct.macroblock* %28, %struct.RD_SEARCH_MACROBLOCK_CONTEXT* nonnull %13, i32 %5, i32 %6, i8 zeroext %7, i32 %26) #4
  %613 = load i32, i32* %577, align 8
  %614 = icmp eq i32 %613, 2147483647
  br i1 %614, label %627, label %615

615:                                              ; preds = %611
  %616 = load i64, i64* %578, align 8
  %617 = icmp eq i64 %616, 9223372036854775807
  br i1 %617, label %627, label %618

618:                                              ; preds = %615
  %619 = add nsw i32 %613, %583
  %620 = add nsw i64 %616, %582
  %621 = icmp eq i64 %581, 3
  br i1 %621, label %624, label %622

622:                                              ; preds = %618
  %623 = load %struct.PC_TREE*, %struct.PC_TREE** %597, align 8
  call fastcc void @encode_sb(%struct.AV1_COMP* %0, %struct.ThreadData* %1, %struct.TileDataEnc* %2, %struct.TokenExtra** %4, i32 %587, i32 %593, i8 zeroext 0, i8 zeroext %574, %struct.PC_TREE* %623)
  br label %624

624:                                              ; preds = %618, %622
  %625 = load i32, i32* %579, align 4
  %626 = add nsw i32 %619, %625
  br label %628

627:                                              ; preds = %615, %611
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %575) #4
  br label %647

628:                                              ; preds = %624, %590, %580
  %629 = phi i32 [ %583, %580 ], [ %583, %590 ], [ %626, %624 ]
  %630 = phi i64 [ %582, %580 ], [ %582, %590 ], [ %620, %624 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %575) #4
  %631 = add nuw nsw i64 %581, 1
  %632 = icmp eq i64 %631, 4
  br i1 %632, label %633, label %580

633:                                              ; preds = %628
  %634 = icmp eq i32 %629, 2147483647
  br i1 %634, label %647, label %635

635:                                              ; preds = %633
  %636 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 20, i32 0, i64 %172, i64 3
  %637 = load i32, i32* %636, align 4
  %638 = add nsw i32 %637, %629
  %639 = sext i32 %638 to i64
  %640 = load i32, i32* %241, align 8
  %641 = sext i32 %640 to i64
  %642 = mul nsw i64 %639, %641
  %643 = add nsw i64 %642, 256
  %644 = ashr i64 %643, 9
  %645 = shl i64 %630, 7
  %646 = add nsw i64 %644, %645
  br label %647

647:                                              ; preds = %627, %635, %633, %552, %545, %537, %534
  %648 = phi i32 [ 2147483647, %633 ], [ %638, %635 ], [ 2147483647, %552 ], [ 2147483647, %545 ], [ 2147483647, %537 ], [ 2147483647, %534 ], [ 2147483647, %627 ]
  %649 = phi i64 [ %630, %633 ], [ %630, %635 ], [ 9223372036854775807, %552 ], [ 9223372036854775807, %545 ], [ 9223372036854775807, %537 ], [ 9223372036854775807, %534 ], [ 9223372036854775807, %627 ]
  %650 = phi i64 [ 9223372036854775807, %633 ], [ %646, %635 ], [ 9223372036854775807, %552 ], [ 9223372036854775807, %545 ], [ 9223372036854775807, %537 ], [ 9223372036854775807, %534 ], [ 9223372036854775807, %627 ]
  %651 = load i64, i64* %199, align 8
  %652 = icmp slt i64 %651, %650
  br i1 %652, label %653, label %661

653:                                              ; preds = %647
  %654 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %3, align 8
  %655 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %654, i64 0, i32 0
  store i8 %7, i8* %655, align 8
  br i1 %34, label %656, label %657

656:                                              ; preds = %653
  store i8 %171, i8* %217, align 8
  br label %657

657:                                              ; preds = %656, %653
  %658 = load i32, i32* %197, align 8
  %659 = load i64, i64* %198, align 8
  %660 = load i64, i64* %199, align 8
  br label %661

661:                                              ; preds = %657, %647
  %662 = phi i32 [ %658, %657 ], [ %648, %647 ]
  %663 = phi i64 [ %659, %657 ], [ %649, %647 ]
  %664 = phi i64 [ %660, %657 ], [ %650, %647 ]
  %665 = load i64, i64* %206, align 8
  %666 = icmp slt i64 %665, %664
  br i1 %666, label %667, label %672

667:                                              ; preds = %661
  br i1 %34, label %668, label %669

668:                                              ; preds = %667
  store i8 0, i8* %217, align 8
  br label %669

669:                                              ; preds = %668, %667
  %670 = load i32, i32* %204, align 8
  %671 = load i64, i64* %205, align 8
  br label %672

672:                                              ; preds = %669, %661
  %673 = phi i32 [ %670, %669 ], [ %662, %661 ]
  %674 = phi i64 [ %671, %669 ], [ %663, %661 ]
  call void @av1_restore_context(%struct.macroblock* %28, %struct.RD_SEARCH_MACROBLOCK_CONTEXT* nonnull %13, i32 %5, i32 %6, i8 zeroext %7, i32 %26) #4
  %675 = icmp eq i32 %10, 0
  br i1 %675, label %686, label %676

676:                                              ; preds = %672
  %677 = load %struct.SequenceHeader*, %struct.SequenceHeader** %21, align 16
  %678 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %677, i64 0, i32 7
  %679 = load i8, i8* %678, align 4
  %680 = icmp eq i8 %679, %7
  br i1 %680, label %681, label %684

681:                                              ; preds = %676
  %682 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 8, i64 0
  store i16 0, i16* %682, align 2
  %683 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 8, i64 1
  store i16 0, i16* %683, align 2
  br label %684

684:                                              ; preds = %676, %681
  %685 = phi i8 [ 0, %681 ], [ 1, %676 ]
  call fastcc void @encode_sb(%struct.AV1_COMP* %0, %struct.ThreadData* %1, %struct.TileDataEnc* %2, %struct.TokenExtra** %4, i32 %5, i32 %6, i8 zeroext %685, i8 zeroext %7, %struct.PC_TREE* %11)
  br label %686

686:                                              ; preds = %684, %672
  store i32 %673, i32* %8, align 4
  store i64 %674, i64* %9, align 8
  store i32 %242, i32* %241, align 8
  br label %687

687:                                              ; preds = %187, %192, %686
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %177) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %176) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %175) #4
  call void @llvm.lifetime.end.p0i8(i64 336, i8* nonnull %174) #4
  ret void

688:                                              ; preds = %311
  %689 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %315, i64 0, i32 0
  %690 = load i8, i8* %689, align 8
  %691 = icmp ult i8 %690, %301
  %692 = select i1 %691, i32 %312, i32 0
  br label %693

693:                                              ; preds = %688, %311
  %694 = phi i32 [ %312, %311 ], [ %692, %688 ]
  %695 = mul i32 %303, %33
  %696 = sext i32 %695 to i64
  %697 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %3, i64 %696
  %698 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %697, align 8
  %699 = icmp eq %struct.MB_MODE_INFO* %698, null
  br i1 %699, label %705, label %700

700:                                              ; preds = %693
  %701 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %698, i64 0, i32 0
  %702 = load i8, i8* %701, align 8
  %703 = icmp ult i8 %702, %301
  %704 = select i1 %703, i32 %694, i32 0
  br label %705

705:                                              ; preds = %700, %693
  %706 = phi i32 [ %694, %693 ], [ %704, %700 ]
  %707 = add i32 %303, 1
  %708 = mul i32 %707, %33
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %3, i64 %709
  %711 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %710, align 8
  %712 = icmp eq %struct.MB_MODE_INFO* %711, null
  br i1 %712, label %317, label %713

713:                                              ; preds = %705
  %714 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %711, i64 0, i32 0
  %715 = load i8, i8* %714, align 8
  %716 = icmp ult i8 %715, %301
  %717 = select i1 %716, i32 %706, i32 0
  br label %317
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %struct.PICK_MODE_CONTEXT* @av1_alloc_pmc(%struct.AV1_COMP*, i8 zeroext, %struct.PC_TREE_SHARED_BUFFERS*) local_unnamed_addr #3

declare void @av1_save_context(%struct.macroblock*, %struct.RD_SEARCH_MACROBLOCK_CONTEXT*, i32, i32, i8 zeroext, i32) local_unnamed_addr #3

declare i32 @av1_log_block_var(%struct.AV1_COMP*, %struct.macroblock*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @setup_block_rdmult(%struct.AV1_COMP*, %struct.macroblock*, i32, i32, i8 zeroext, i8 zeroext, %struct.MB_MODE_INFO* nocapture) unnamed_addr #2 {
  %8 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 31, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 17
  store i32 %9, i32* %10, align 8
  switch i8 %5, label %69 [
    i8 3, label %58
    i8 1, label %11
    i8 2, label %45
  ]

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 58
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %6, i64 0, i32 28
  %17 = load i16, i16* %16, align 1
  br label %33

18:                                               ; preds = %11
  %19 = icmp ult i8 %4, 7
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 18
  %22 = load i32, i32* %21, align 4
  br label %25

23:                                               ; preds = %18
  %24 = tail call i32 @av1_log_block_var(%struct.AV1_COMP* %0, %struct.macroblock* %1, i8 zeroext %4) #4
  br label %25

25:                                               ; preds = %23, %20
  %26 = phi i32 [ %22, %20 ], [ %24, %23 ]
  %27 = trunc i32 %26 to i16
  %28 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %6, i64 0, i32 28
  %29 = load i16, i16* %28, align 1
  %30 = and i16 %27, 7
  %31 = and i16 %29, -8
  %32 = or i16 %31, %30
  store i16 %32, i16* %28, align 1
  br label %33

33:                                               ; preds = %15, %25
  %34 = phi i16 [ %17, %15 ], [ %32, %25 ]
  %35 = and i16 %34, 7
  %36 = zext i16 %35 to i32
  tail call void @av1_init_plane_quantizers(%struct.AV1_COMP* %0, %struct.macroblock* %1, i32 %36) #4
  %37 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23
  %38 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 22, i32 0
  %39 = load i32, i32* %38, align 16
  %40 = tail call i32 @av1_get_qindex(%struct.segmentation* %37, i32 %36, i32 %39) #4
  %41 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 22, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = add nsw i32 %42, %40
  %44 = tail call i32 @av1_compute_rd_mult(%struct.AV1_COMP* %0, i32 %43) #4
  store i32 %44, i32* %10, align 8
  br label %69

45:                                               ; preds = %7
  %46 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %6, i64 0, i32 28
  %47 = load i16, i16* %46, align 1
  %48 = and i16 %47, 7
  %49 = zext i16 %48 to i32
  tail call void @av1_init_plane_quantizers(%struct.AV1_COMP* %0, %struct.macroblock* %1, i32 %49) #4
  %50 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23
  %51 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 22, i32 0
  %52 = load i32, i32* %51, align 16
  %53 = tail call i32 @av1_get_qindex(%struct.segmentation* %50, i32 %49, i32 %52) #4
  %54 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 22, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = add nsw i32 %55, %53
  %57 = tail call i32 @av1_compute_rd_mult(%struct.AV1_COMP* %0, i32 %56) #4
  store i32 %57, i32* %10, align 8
  br label %69

58:                                               ; preds = %7
  %59 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %6, i64 0, i32 28
  %60 = load i16, i16* %59, align 1
  %61 = and i16 %60, 7
  %62 = zext i16 %61 to i32
  %63 = add nsw i32 %62, -1
  %64 = icmp ugt i32 %63, 1
  br i1 %64, label %69, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 44
  %67 = load %struct.CYCLIC_REFRESH*, %struct.CYCLIC_REFRESH** %66, align 8
  %68 = tail call i32 @av1_cyclic_refresh_get_rdmult(%struct.CYCLIC_REFRESH* %67) #4
  store i32 %68, i32* %10, align 8
  br label %69

69:                                               ; preds = %7, %58, %33, %65, %45
  %70 = phi i32 [ %9, %7 ], [ %9, %58 ], [ %44, %33 ], [ %68, %65 ], [ %57, %45 ]
  %71 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 33, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 7
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = tail call i32 @av1_get_hier_tpl_rdmult(%struct.AV1_COMP* %0, %struct.macroblock* %1, i8 zeroext %4, i32 %2, i32 %3, i32 %70) #4
  store i32 %79, i32* %10, align 8
  br label %80

80:                                               ; preds = %74, %69, %78
  %81 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 12, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 24
  tail call void @av1_set_ssim_rdmult(%struct.AV1_COMP* %0, i32* %85, i8 zeroext %4, i32 %2, i32 %3, i32* %10) #4
  br label %86

86:                                               ; preds = %84, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @pick_sb_modes(%struct.AV1_COMP*, %struct.TileDataEnc*, %struct.macroblock*, i32, i32, %struct.RD_STATS*, i8 zeroext, i8 zeroext, %struct.PICK_MODE_CONTEXT*, %struct.RD_STATS* nocapture byval(%struct.RD_STATS) align 8) unnamed_addr #2 {
  %11 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %9, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 15, i32 2
  store i64 9223372036854775807, i64* %15, align 8
  %16 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 15, i32 4
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %5, i64 0, i32 0
  store i32 2147483647, i32* %17, align 8
  %18 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %5, i64 0, i32 1
  %19 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %19, align 8
  %20 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %5, i64 0, i32 3
  store i64 9223372036854775807, i64* %20, align 8
  %21 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %5, i64 0, i32 4
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %5, i64 0, i32 5
  store i32 0, i32* %22, align 4
  br label %222

23:                                               ; preds = %10
  %24 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %1, i64 0, i32 0
  tail call void @av1_set_offsets(%struct.AV1_COMP* %0, %struct.TileInfo* %24, %struct.macroblock* %2, i32 %3, i32 %4, i8 zeroext %7)
  %25 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 16
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 15, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %5, i64 0, i32 0
  store i32 %30, i32* %31, align 8
  %32 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 15, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %5, i64 0, i32 1
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 15, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %5, i64 0, i32 2
  store i64 %36, i64* %37, align 8
  br label %222

38:                                               ; preds = %23
  %39 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 35
  %40 = load %struct.SequenceHeader*, %struct.SequenceHeader** %39, align 16
  %41 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %40, i64 0, i32 27
  %42 = load i8, i8* %41, align 1
  %43 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 5, i32 5
  %44 = load i8, i8* %43, align 8
  %45 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 6
  %46 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %45, align 8
  %47 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %46, align 8
  %48 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %47, i64 0, i32 0
  store i8 %7, i8* %48, align 8
  %49 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %47, i64 0, i32 1
  store i8 %6, i8* %49, align 1
  %50 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 58, i32 2, i64 0
  %51 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 15
  store i8* %50, i8** %51, align 8
  %52 = zext i8 %7 to i64
  %53 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 16
  store i32 %55, i32* %56, align 16
  %57 = icmp eq i8 %42, 0
  %58 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 4, i64 0
  %59 = bitcast i32** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 0, i32 3
  %62 = bitcast i32** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 5, i64 0
  %64 = bitcast i32** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 0, i32 2
  %67 = bitcast i32** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 6, i64 0
  %69 = bitcast i32** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 0, i32 1
  %72 = bitcast i32** %71 to i64*
  store i64 %70, i64* %72, align 8
  %73 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 7, i64 0
  %74 = bitcast i16** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 0, i32 4
  %77 = bitcast i16** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 8, i64 0
  %79 = bitcast i8** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 0, i32 5
  %82 = bitcast i8** %81 to i64*
  store i64 %80, i64* %82, align 8
  br i1 %57, label %223, label %83

83:                                               ; preds = %38, %223
  %84 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 2, i64 0
  %85 = bitcast i8** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 0, i32 8
  %88 = bitcast i8** %87 to i64*
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 2, i64 1
  %90 = bitcast i8** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 1, i32 8
  %93 = bitcast i8** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 11
  store i32 0, i32* %94, align 4
  %95 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %47, i64 0, i32 23
  store i8 0, i8* %95, align 8
  %96 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %47, i64 0, i32 28
  %97 = load i16, i16* %96, align 1
  %98 = and i16 %97, -65
  store i16 %98, i16* %96, align 1
  %99 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 0, i32 6
  %100 = tail call i32 @av1_get_sby_perpixel_variance(%struct.AV1_COMP* %0, %struct.buf_2d* %99, i8 zeroext %7) #4
  %101 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 60
  store i32 %100, i32* %101, align 4
  %102 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 57, i32 1
  store i32 0, i32* %102, align 4
  %103 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 57, i32 0
  store i32 0, i32* %103, align 4
  %104 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 4, i64 0
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 57, i32 7
  store i32 %105, i32* %106, align 4
  %107 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 5, i64 0
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 57, i32 9
  store i32 %108, i32* %109, align 4
  %110 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 2, i64 0
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 57, i32 6
  store i32 %111, i32* %112, align 4
  %113 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 3, i64 0
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 57, i32 4
  store i32 %114, i32* %115, align 4
  %116 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 0, i64 0, i64 0
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 57, i32 3, i64 0
  store i32 %117, i32* %118, align 4
  %119 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 0, i64 0, i64 1
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 57, i32 3, i64 1
  store i32 %120, i32* %121, align 4
  %122 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 1, i64 0
  %123 = load i8, i8* %122, align 4
  %124 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 57, i32 5
  store i8 %123, i8* %124, align 4
  %125 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 7
  %126 = load i8, i8* %125, align 1, !range !5
  %127 = icmp eq i8 %126, 0
  %128 = icmp eq i8 %123, 2
  %129 = select i1 %128, i8 1, i8 2
  %130 = select i1 %127, i8 %129, i8 0
  %131 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 57, i32 8
  store i8 %130, i8* %131, align 4
  %132 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 0
  %133 = load i8, i8* %132, align 4
  %134 = zext i8 %133 to i32
  %135 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 57, i32 2
  store i32 %134, i32* %135, align 4
  %136 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 17
  %137 = load i32, i32* %136, align 8
  tail call fastcc void @setup_block_rdmult(%struct.AV1_COMP* %0, %struct.macroblock* %2, i32 %3, i32 %4, i8 zeroext %7, i8 zeroext %44, %struct.MB_MODE_INFO* %47)
  %138 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 24
  %139 = load i32, i32* %136, align 8
  %140 = ashr i32 %139, 6
  %141 = icmp sgt i32 %140, 1
  %142 = select i1 %141, i32 %140, i32 1
  store i32 %142, i32* %138, align 4
  %143 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %9, i64 0, i32 0
  %144 = load i32, i32* %143, align 8
  %145 = icmp eq i32 %144, 2147483647
  br i1 %145, label %173, label %146

146:                                              ; preds = %83
  %147 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %9, i64 0, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = icmp eq i64 %148, 9223372036854775807
  %150 = icmp eq i64 %12, 9223372036854775807
  %151 = or i1 %150, %149
  br i1 %151, label %173, label %152

152:                                              ; preds = %146
  %153 = icmp sgt i32 %144, -1
  br i1 %153, label %154, label %162

154:                                              ; preds = %152
  %155 = sext i32 %144 to i64
  %156 = sext i32 %139 to i64
  %157 = mul nsw i64 %155, %156
  %158 = add nsw i64 %157, 256
  %159 = ashr i64 %158, 9
  %160 = shl i64 %148, 7
  %161 = add nsw i64 %160, %159
  br label %171

162:                                              ; preds = %152
  %163 = shl nsw i64 %148, 7
  %164 = sub nsw i32 0, %144
  %165 = sext i32 %164 to i64
  %166 = sext i32 %139 to i64
  %167 = mul nsw i64 %165, %166
  %168 = add nsw i64 %167, 256
  %169 = ashr i64 %168, 9
  %170 = sub nsw i64 %163, %169
  br label %171

171:                                              ; preds = %162, %154
  %172 = phi i64 [ %161, %154 ], [ %170, %162 ]
  store i64 %172, i64* %11, align 8
  br label %179

173:                                              ; preds = %146, %83
  store i32 2147483647, i32* %143, align 8
  %174 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %9, i64 0, i32 1
  %175 = bitcast i64* %174 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %175, align 8
  %176 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %9, i64 0, i32 3
  store i64 9223372036854775807, i64* %176, align 8
  %177 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %9, i64 0, i32 4
  store i32 0, i32* %177, align 8
  %178 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %9, i64 0, i32 5
  store i32 0, i32* %178, align 4
  br label %179

179:                                              ; preds = %171, %173
  %180 = phi i64 [ %172, %171 ], [ 9223372036854775807, %173 ]
  %181 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 0, i32 0
  %182 = load i8, i8* %181, align 16
  %183 = and i8 %182, -3
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %179
  tail call void @av1_rd_pick_intra_mode_sb(%struct.AV1_COMP* %0, %struct.macroblock* %2, %struct.RD_STATS* %5, i8 zeroext %7, %struct.PICK_MODE_CONTEXT* %8, i64 %180) #4
  br label %200

186:                                              ; preds = %179
  %187 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23, i32 0
  %188 = load i8, i8* %187, align 4
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %199, label %190

190:                                              ; preds = %186
  %191 = load i16, i16* %96, align 1
  %192 = and i16 %191, 7
  %193 = zext i16 %192 to i64
  %194 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23, i32 5, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = and i32 %195, 64
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %199, label %198

198:                                              ; preds = %190
  tail call void @av1_rd_pick_inter_mode_sb_seg_skip(%struct.AV1_COMP* %0, %struct.TileDataEnc* %1, %struct.macroblock* %2, i32 %3, i32 %4, %struct.RD_STATS* %5, i8 zeroext %7, %struct.PICK_MODE_CONTEXT* %8, i64 %180) #4
  br label %200

199:                                              ; preds = %186, %190
  tail call void @av1_rd_pick_inter_mode(%struct.AV1_COMP* %0, %struct.TileDataEnc* %1, %struct.macroblock* %2, %struct.RD_STATS* %5, i8 zeroext %7, %struct.PICK_MODE_CONTEXT* %8, i64 %180) #4
  br label %200

200:                                              ; preds = %198, %199, %185
  %201 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %5, i64 0, i32 0
  %202 = load i32, i32* %201, align 8
  %203 = icmp ne i32 %202, 2147483647
  %204 = icmp eq i8 %44, 2
  %205 = and i1 %204, %203
  %206 = icmp ugt i8 %7, 5
  %207 = and i1 %206, %205
  br i1 %207, label %208, label %209

208:                                              ; preds = %200
  tail call void @av1_caq_select_segment(%struct.AV1_COMP* %0, %struct.macroblock* %2, i8 zeroext %7, i32 %3, i32 %4, i32 %202) #4
  br label %209

209:                                              ; preds = %200, %208
  store i32 %137, i32* %136, align 8
  %210 = load i32, i32* %201, align 8
  %211 = icmp eq i32 %210, 2147483647
  br i1 %211, label %212, label %214

212:                                              ; preds = %209
  %213 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %5, i64 0, i32 2
  store i64 9223372036854775807, i64* %213, align 8
  br label %214

214:                                              ; preds = %212, %209
  %215 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 15, i32 0
  store i32 %210, i32* %215, align 8
  %216 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %5, i64 0, i32 1
  %217 = load i64, i64* %216, align 8
  %218 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 15, i32 1
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %5, i64 0, i32 2
  %220 = load i64, i64* %219, align 8
  %221 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 15, i32 2
  store i64 %220, i64* %221, align 8
  br label %222

222:                                              ; preds = %214, %28, %14
  ret void

223:                                              ; preds = %38
  %224 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 4, i64 1
  %225 = bitcast i32** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 1, i32 3
  %228 = bitcast i32** %227 to i64*
  store i64 %226, i64* %228, align 8
  %229 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 5, i64 1
  %230 = bitcast i32** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 1, i32 2
  %233 = bitcast i32** %232 to i64*
  store i64 %231, i64* %233, align 8
  %234 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 6, i64 1
  %235 = bitcast i32** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 1, i32 1
  %238 = bitcast i32** %237 to i64*
  store i64 %236, i64* %238, align 8
  %239 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 7, i64 1
  %240 = bitcast i16** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 1, i32 4
  %243 = bitcast i16** %242 to i64*
  store i64 %241, i64* %243, align 8
  %244 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 8, i64 1
  %245 = bitcast i8** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 1, i32 5
  %248 = bitcast i8** %247 to i64*
  store i64 %246, i64* %248, align 8
  %249 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 4, i64 2
  %250 = bitcast i32** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 2, i32 3
  %253 = bitcast i32** %252 to i64*
  store i64 %251, i64* %253, align 8
  %254 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 5, i64 2
  %255 = bitcast i32** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 2, i32 2
  %258 = bitcast i32** %257 to i64*
  store i64 %256, i64* %258, align 8
  %259 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 6, i64 2
  %260 = bitcast i32** %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 2, i32 1
  %263 = bitcast i32** %262 to i64*
  store i64 %261, i64* %263, align 8
  %264 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 7, i64 2
  %265 = bitcast i16** %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 2, i32 4
  %268 = bitcast i16** %267 to i64*
  store i64 %266, i64* %268, align 8
  %269 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %8, i64 0, i32 8, i64 2
  %270 = bitcast i8** %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 2, i32 5
  %273 = bitcast i8** %272 to i64*
  store i64 %271, i64* %273, align 8
  br label %83
}

declare void @av1_restore_context(%struct.macroblock*, %struct.RD_SEARCH_MACROBLOCK_CONTEXT*, i32, i32, i8 zeroext, i32) local_unnamed_addr #3

declare %struct.PC_TREE* @av1_alloc_pc_tree_node(i8 zeroext) local_unnamed_addr #3

declare void @av1_update_state(%struct.AV1_COMP*, %struct.ThreadData*, %struct.PICK_MODE_CONTEXT*, i32, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @encode_superblock(%struct.AV1_COMP*, %struct.TileDataEnc* nocapture readonly, %struct.ThreadData*, %struct.TokenExtra**, i8 zeroext, i8 zeroext) unnamed_addr #2 {
  %7 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8
  %8 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 35
  %9 = load %struct.SequenceHeader*, %struct.SequenceHeader** %8, align 16
  %10 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %9, i64 0, i32 27
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  %13 = select i1 %12, i32 3, i32 1
  %14 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0
  %15 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2
  %16 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 6
  %17 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %16, align 8
  %18 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %17, align 8
  %19 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 28
  %20 = load i16, i16* %19, align 1
  %21 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23, i32 0
  %22 = load i8, i8* %21, align 4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %6
  %25 = and i16 %20, 7
  %26 = zext i16 %25 to i64
  %27 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23, i32 5, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = lshr i32 %28, 6
  %30 = and i32 %29, 1
  br label %31

31:                                               ; preds = %6, %24
  %32 = phi i32 [ 0, %6 ], [ %30, %24 ]
  %33 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 11
  %34 = load i32, i32* %33, align 4
  %35 = zext i8 %5 to i64
  %36 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %35
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = trunc i16 %20 to i8
  %43 = icmp sgt i8 %42, -1
  br i1 %43, label %44, label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 6, i64 0
  %46 = load i8, i8* %45, align 8
  %47 = icmp sgt i8 %46, 0
  %48 = zext i1 %47 to i32
  br label %49

49:                                               ; preds = %31, %44
  %50 = phi i32 [ 1, %31 ], [ %48, %44 ]
  %51 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 11, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 1, i64 0
  %54 = load i8, i8* %53, align 4
  %55 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 57, i32 5
  store i8 %54, i8* %55, align 4
  %56 = icmp eq i32 %52, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 1, i64 2
  %59 = load i8, i8* %58, align 2
  store i8 %59, i8* %55, align 4
  br label %60

60:                                               ; preds = %49, %57
  %61 = phi i8 [ %54, %49 ], [ %59, %57 ]
  %62 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 7
  %63 = load i8, i8* %62, align 1, !range !5
  %64 = icmp eq i8 %63, 0
  %65 = icmp eq i8 %61, 2
  %66 = select i1 %65, i8 1, i8 2
  %67 = select i1 %64, i8 %66, i8 0
  %68 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 57, i32 8
  store i8 %67, i8* %68, align 4
  %69 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %15, i64 0, i32 0
  %70 = load i32, i32* %69, align 16
  %71 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp ne i32 %50, 0
  br i1 %73, label %160, label %74

74:                                               ; preds = %60
  %75 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %17, align 8
  %76 = load %struct.SequenceHeader*, %struct.SequenceHeader** %8, align 16
  %77 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %76, i64 0, i32 27
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %98

80:                                               ; preds = %74
  %81 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 3
  %82 = load i8, i8* %81, align 4, !range !5
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %98, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %75, i64 0, i32 28
  %86 = load i16, i16* %85, align 1
  %87 = trunc i16 %86 to i8
  %88 = icmp sgt i8 %87, -1
  br i1 %88, label %89, label %98

89:                                               ; preds = %84
  %90 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %75, i64 0, i32 6, i64 0
  %91 = load i8, i8* %90, align 8
  %92 = icmp slt i8 %91, 1
  br i1 %92, label %93, label %98

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %75, i64 0, i32 3
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, 13
  %97 = zext i1 %96 to i32
  br label %98

98:                                               ; preds = %74, %80, %84, %89, %93
  %99 = phi i32 [ 0, %74 ], [ 1, %80 ], [ 0, %89 ], [ %97, %93 ], [ 0, %84 ]
  %100 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 51, i32 10
  store i32 %99, i32* %100, align 8
  %101 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 23
  store i8 1, i8* %101, align 8
  br label %106

102:                                              ; preds = %106
  %103 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23, i32 7
  %104 = load i8, i8* %103, align 8
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %115, label %124

106:                                              ; preds = %106, %98
  %107 = phi i32 [ 0, %98 ], [ %113, %106 ]
  %108 = load i16, i16* %19, align 1
  %109 = and i16 %108, 7
  %110 = zext i16 %109 to i64
  %111 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 11, i64 %110
  %112 = load i8, i8* %111, align 1
  tail call void @av1_encode_intra_block_plane(%struct.AV1_COMP* %0, %struct.macroblock* %14, i8 zeroext %5, i32 %107, i8 zeroext %4, i8 zeroext %112) #4
  %113 = add nuw nsw i32 %107, 1
  %114 = icmp eq i32 %113, %13
  br i1 %114, label %102, label %106

115:                                              ; preds = %102
  %116 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23, i32 1
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %124, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 43, i32 1
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %124, label %123

123:                                              ; preds = %119
  store i8 0, i8* %101, align 8
  br label %124

124:                                              ; preds = %119, %115, %102, %123
  store i32 0, i32* %100, align 8
  %125 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 3
  %126 = load i8, i8* %125, align 1, !range !5
  %127 = icmp eq i8 %126, 0
  %128 = add nsw i64 %35, -13
  %129 = icmp ult i64 %128, 3
  %130 = or i1 %129, %127
  %131 = icmp ult i8 %5, 3
  %132 = or i1 %131, %130
  br i1 %132, label %157, label %133

133:                                              ; preds = %124
  %134 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 24
  %135 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %1, i64 0, i32 4
  %136 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 2
  %137 = select i1 %12, i64 2, i64 1
  br label %138

138:                                              ; preds = %133, %154
  %139 = phi i64 [ 0, %133 ], [ %155, %154 ]
  %140 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 22, i32 1, i64 %139
  %141 = load i8, i8* %140, align 1
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %138
  switch i8 %4, label %154 [
    i8 0, label %144
    i8 2, label %150
  ]

144:                                              ; preds = %143
  %145 = load i8, i8* %134, align 1
  %146 = load i8, i8* %135, align 8
  %147 = zext i8 %146 to i32
  %148 = load %struct.FRAME_COUNTS*, %struct.FRAME_COUNTS** %136, align 8
  %149 = trunc i64 %139 to i32
  tail call void @av1_tokenize_color_map(%struct.macroblock* %14, i32 %149, %struct.TokenExtra** %3, i8 zeroext %5, i8 zeroext %145, i8 zeroext 0, i32 %147, %struct.FRAME_COUNTS* %148) #4
  br label %154

150:                                              ; preds = %143
  %151 = load i8, i8* %134, align 1
  %152 = trunc i64 %139 to i32
  %153 = tail call i32 @av1_cost_color_map(%struct.macroblock* %14, i32 %152, i8 zeroext %5, i8 zeroext %151, i8 zeroext 0) #4
  br label %154

154:                                              ; preds = %143, %138, %150, %144
  %155 = add nuw nsw i64 %139, 1
  %156 = icmp ult i64 %155, %137
  br i1 %156, label %138, label %157

157:                                              ; preds = %154, %124
  %158 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %1, i64 0, i32 4
  %159 = load i8, i8* %158, align 8
  tail call void @av1_update_intra_mb_txb_context(%struct.AV1_COMP* %0, %struct.ThreadData* %2, i8 zeroext %4, i8 zeroext %5, i8 zeroext %159) #4
  br label %248

160:                                              ; preds = %60
  %161 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 6, i64 1
  %162 = load i8, i8* %161, align 1
  %163 = icmp sgt i8 %162, 0
  %164 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 6, i64 0
  %165 = load i8, i8* %164, align 8
  %166 = icmp sgt i8 %165, 1
  %167 = select i1 %166, i8 %165, i8 1
  %168 = add nsw i8 %167, -1
  %169 = icmp ult i8 %168, 8
  br i1 %169, label %170, label %178

170:                                              ; preds = %160
  %171 = zext i8 %167 to i64
  %172 = add nsw i64 %171, -1
  %173 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 13, i64 %172
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, -1
  %176 = sext i32 %174 to i64
  %177 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 15, i64 %176
  br i1 %175, label %178, label %179

178:                                              ; preds = %170, %160
  br label %179

179:                                              ; preds = %178, %170
  %180 = phi %struct.scale_factors* [ null, %178 ], [ %177, %170 ]
  %181 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 21, i64 0
  store %struct.scale_factors* %180, %struct.scale_factors** %181, align 8
  %182 = icmp sgt i8 %162, 1
  %183 = select i1 %182, i8 %162, i8 1
  %184 = add nsw i8 %183, -1
  %185 = icmp ult i8 %184, 8
  br i1 %185, label %186, label %194

186:                                              ; preds = %179
  %187 = zext i8 %183 to i64
  %188 = add nsw i64 %187, -1
  %189 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 13, i64 %188
  %190 = load i32, i32* %189, align 4
  %191 = icmp eq i32 %190, -1
  %192 = sext i32 %190 to i64
  %193 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 15, i64 %192
  br i1 %191, label %194, label %195

194:                                              ; preds = %186, %179
  br label %195

195:                                              ; preds = %186, %194
  %196 = phi %struct.scale_factors* [ null, %194 ], [ %193, %186 ]
  %197 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 21, i64 1
  store %struct.scale_factors* %196, %struct.scale_factors** %197, align 8
  %198 = select i1 %163, i64 2, i64 1
  br label %199

199:                                              ; preds = %215, %195
  %200 = phi i64 [ %223, %215 ], [ 0, %195 ]
  %201 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 6, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = add i8 %202, -1
  %204 = icmp ult i8 %203, 8
  br i1 %204, label %205, label %215

205:                                              ; preds = %199
  %206 = sext i8 %202 to i64
  %207 = add nsw i64 %206, -1
  %208 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 13, i64 %207
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %209, -1
  br i1 %210, label %215, label %211

211:                                              ; preds = %205
  %212 = sext i32 %209 to i64
  %213 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 16, i64 %212
  %214 = load %struct.RefCntBuffer*, %struct.RefCntBuffer** %213, align 8
  br label %215

215:                                              ; preds = %199, %205, %211
  %216 = phi %struct.RefCntBuffer* [ %214, %211 ], [ null, %205 ], [ null, %199 ]
  %217 = icmp eq %struct.RefCntBuffer* %216, null
  %218 = getelementptr inbounds %struct.RefCntBuffer, %struct.RefCntBuffer* %216, i64 0, i32 17
  %219 = select i1 %217, %struct.yv12_buffer_config* null, %struct.yv12_buffer_config* %218
  %220 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 21, i64 %200
  %221 = load %struct.scale_factors*, %struct.scale_factors** %220, align 8
  %222 = trunc i64 %200 to i32
  tail call void @av1_setup_pre_planes(%struct.macroblockd* %15, i32 %222, %struct.yv12_buffer_config* %219, i32 %70, i32 %72, %struct.scale_factors* %221, i32 %13) #4
  %223 = add nuw nsw i64 %200, 1
  %224 = icmp eq i64 %223, %198
  br i1 %224, label %225, label %199

225:                                              ; preds = %215
  %226 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 13
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, 0
  %229 = load %struct.SequenceHeader*, %struct.SequenceHeader** %8, align 16
  br i1 %228, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %229, i64 0, i32 25
  %232 = load i32, i32* %231, align 8
  %233 = icmp eq i32 %232, 8
  br label %234

234:                                              ; preds = %225, %230
  %235 = phi i1 [ %233, %230 ], [ false, %225 ]
  %236 = zext i1 %235 to i32
  %237 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %229, i64 0, i32 27
  %238 = load i8, i8* %237, align 1
  %239 = icmp eq i8 %238, 0
  %240 = select i1 %239, i32 2, i32 0
  tail call void @av1_enc_build_inter_predictor(%struct.AV1Common* %7, %struct.macroblockd* %15, i32 %70, i32 %72, %struct.BUFFER_SET* null, i8 zeroext %5, i32 %236, i32 %240) #4
  %241 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 9
  %242 = load i8, i8* %241, align 8
  %243 = icmp eq i8 %242, 1
  br i1 %243, label %244, label %245

244:                                              ; preds = %234
  tail call void @av1_build_obmc_inter_predictors_sb(%struct.AV1Common* %7, %struct.macroblockd* %15) #4
  br label %245

245:                                              ; preds = %244, %234
  tail call void @av1_encode_sb(%struct.AV1_COMP* %0, %struct.macroblock* %14, i8 zeroext %5, i8 zeroext %4) #4
  %246 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %1, i64 0, i32 4
  %247 = load i8, i8* %246, align 8
  tail call void @av1_tokenize_sb_vartx(%struct.AV1_COMP* %0, %struct.ThreadData* %2, i8 zeroext %4, i8 zeroext %5, i32* null, i8 zeroext %247) #4
  br label %248

248:                                              ; preds = %245, %157
  %249 = icmp ne i8 %4, 0
  br i1 %249, label %576, label %250

250:                                              ; preds = %248
  %251 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %7, i64 0, i32 0, i32 0
  %252 = load i8, i8* %251, align 16
  %253 = and i8 %252, -3
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %255, label %269

255:                                              ; preds = %250
  %256 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 3
  %257 = load i8, i8* %256, align 1, !range !5
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %269, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 4
  %261 = load i8, i8* %260, align 4, !range !5
  %262 = icmp eq i8 %261, 0
  br i1 %262, label %269, label %263

263:                                              ; preds = %259
  %264 = load i16, i16* %19, align 1
  %265 = trunc i16 %264 to i8
  %266 = icmp sgt i8 %265, -1
  br i1 %266, label %269, label %267

267:                                              ; preds = %263
  %268 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 13
  store i32 1, i32* %268, align 8
  br label %269

269:                                              ; preds = %250, %255, %263, %259, %267
  %270 = load i8, i8* %68, align 4
  %271 = icmp eq i8 %270, 2
  br i1 %271, label %272, label %503

272:                                              ; preds = %269
  %273 = load i16, i16* %19, align 1
  %274 = and i16 %273, 7
  %275 = zext i16 %274 to i64
  %276 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 42, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %503

279:                                              ; preds = %272
  %280 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 0
  %281 = load i8, i8* %280, align 8
  %282 = icmp eq i8 %281, 0
  br i1 %282, label %503, label %283

283:                                              ; preds = %279
  br i1 %73, label %284, label %339

284:                                              ; preds = %283
  %285 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 23
  %286 = load i8, i8* %285, align 8
  %287 = icmp ne i8 %286, 0
  %288 = icmp ne i32 %32, 0
  %289 = or i1 %288, %287
  br i1 %289, label %508, label %290

290:                                              ; preds = %284
  %291 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %1, i64 0, i32 4
  %292 = load i8, i8* %291, align 8
  %293 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %16, align 8
  %294 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %293, align 8
  %295 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %294, i64 0, i32 28
  %296 = load i16, i16* %295, align 1
  %297 = and i16 %296, 7
  %298 = zext i16 %297 to i64
  %299 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 42, i64 %298
  %300 = load i32, i32* %299, align 4
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %306

302:                                              ; preds = %290
  %303 = getelementptr inbounds [22 x i8], [22 x i8]* @max_txsize_rect_lookup, i64 0, i64 %35
  %304 = load i8, i8* %303, align 1
  %305 = zext i8 %304 to i32
  br label %306

306:                                              ; preds = %302, %290
  %307 = phi i32 [ %305, %302 ], [ 0, %290 ]
  %308 = trunc i32 %307 to i8
  %309 = zext i32 %307 to i64
  %310 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high_unit, i64 0, i64 %309
  %311 = load i32, i32* %310, align 4
  %312 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide_unit, i64 0, i64 %309
  %313 = load i32, i32* %312, align 4
  %314 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 40, i32 2
  %315 = load i8**, i8*** %314, align 16
  %316 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 5, i32 4
  %317 = load i32, i32* %316, align 16
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds i8*, i8** %315, i64 %318
  %320 = load i8*, i8** %319, align 8
  %321 = load i32, i32* %71, align 4
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds i8, i8* %320, i64 %322
  %324 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 27
  store i8* %323, i8** %324, align 16
  %325 = load i32, i32* %69, align 16
  %326 = and i32 %325, 31
  %327 = zext i32 %326 to i64
  %328 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 29, i64 %327
  %329 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 28
  store i8* %328, i8** %329, align 8
  br label %330

330:                                              ; preds = %332, %306
  %331 = phi i32 [ 0, %306 ], [ %333, %332 ]
  br label %335

332:                                              ; preds = %335
  %333 = add nsw i32 %331, %311
  %334 = icmp slt i32 %333, %41
  br i1 %334, label %330, label %576

335:                                              ; preds = %335, %330
  %336 = phi i32 [ %337, %335 ], [ 0, %330 ]
  tail call fastcc void @update_txfm_count(%struct.macroblock* %14, %struct.macroblockd* %15, i8 zeroext %308, i32 0, i32 %331, i32 %336, i8 zeroext %292) #4
  %337 = add nsw i32 %336, %313
  %338 = icmp slt i32 %337, %38
  br i1 %338, label %335, label %332

339:                                              ; preds = %283
  %340 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 24
  %341 = load i8, i8* %340, align 1
  %342 = getelementptr inbounds [22 x i8], [22 x i8]* @max_txsize_rect_lookup, i64 0, i64 %35
  %343 = load i8, i8* %342, align 1
  %344 = icmp eq i8 %341, %343
  br i1 %344, label %349, label %345

345:                                              ; preds = %339
  %346 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 58, i32 4
  %347 = load i32, i32* %346, align 16
  %348 = add i32 %347, 1
  store i32 %348, i32* %346, align 16
  br label %349

349:                                              ; preds = %339, %345
  %350 = icmp eq i8 %5, 0
  br i1 %350, label %576, label %351

351:                                              ; preds = %349
  %352 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %16, align 8
  %353 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %352, align 8
  %354 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 12
  %355 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %354, align 16
  %356 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 11
  %357 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %356, align 8
  %358 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %353, i64 0, i32 0
  %359 = load i8, i8* %358, align 8
  %360 = zext i8 %359 to i64
  %361 = getelementptr inbounds [22 x i8], [22 x i8]* @max_txsize_rect_lookup, i64 0, i64 %360
  %362 = load i8, i8* %361, align 1
  %363 = zext i8 %362 to i64
  %364 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide, i64 0, i64 %363
  %365 = load i32, i32* %364, align 4
  %366 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high, i64 0, i64 %363
  %367 = load i32, i32* %366, align 4
  %368 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 7
  %369 = load i8, i8* %368, align 16, !range !5
  %370 = icmp ne i8 %369, 0
  %371 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 8
  %372 = load i8, i8* %371, align 1, !range !5
  %373 = icmp ne i8 %372, 0
  %374 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 27
  %375 = load i8*, i8** %374, align 16
  %376 = load i8, i8* %375, align 1
  %377 = zext i8 %376 to i32
  %378 = icmp sle i32 %365, %377
  %379 = zext i1 %378 to i32
  %380 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 28
  %381 = load i8*, i8** %380, align 8
  %382 = load i8, i8* %381, align 1
  %383 = zext i8 %382 to i32
  %384 = icmp sle i32 %367, %383
  %385 = zext i1 %384 to i32
  br i1 %370, label %386, label %404

386:                                              ; preds = %351
  %387 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %355, i64 0, i32 28
  %388 = load i16, i16* %387, align 1
  %389 = trunc i16 %388 to i8
  %390 = icmp sgt i8 %389, -1
  br i1 %390, label %391, label %395

391:                                              ; preds = %386
  %392 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %355, i64 0, i32 6, i64 0
  %393 = load i8, i8* %392, align 8
  %394 = icmp slt i8 %393, 1
  br i1 %394, label %404, label %395

395:                                              ; preds = %391, %386
  %396 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %355, i64 0, i32 0
  %397 = load i8, i8* %396, align 8
  %398 = zext i8 %397 to i64
  %399 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %398
  %400 = load i8, i8* %399, align 1
  %401 = zext i8 %400 to i32
  %402 = icmp sle i32 %365, %401
  %403 = zext i1 %402 to i32
  br label %404

404:                                              ; preds = %395, %391, %351
  %405 = phi i32 [ %403, %395 ], [ %379, %391 ], [ %379, %351 ]
  br i1 %373, label %406, label %428

406:                                              ; preds = %404
  %407 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %357, i64 0, i32 28
  %408 = load i16, i16* %407, align 1
  %409 = trunc i16 %408 to i8
  %410 = icmp sgt i8 %409, -1
  br i1 %410, label %411, label %415

411:                                              ; preds = %406
  %412 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %357, i64 0, i32 6, i64 0
  %413 = load i8, i8* %412, align 8
  %414 = icmp slt i8 %413, 1
  br i1 %414, label %424, label %415

415:                                              ; preds = %411, %406
  %416 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %357, i64 0, i32 0
  %417 = load i8, i8* %416, align 8
  %418 = zext i8 %417 to i64
  %419 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %418
  %420 = load i8, i8* %419, align 1
  %421 = zext i8 %420 to i32
  %422 = icmp sle i32 %367, %421
  %423 = zext i1 %422 to i32
  br label %424

424:                                              ; preds = %415, %411
  %425 = phi i32 [ %423, %415 ], [ %385, %411 ]
  br i1 %370, label %426, label %428

426:                                              ; preds = %424
  %427 = add nuw nsw i32 %425, %405
  br label %432

428:                                              ; preds = %424, %404
  %429 = phi i32 [ %425, %424 ], [ %385, %404 ]
  %430 = select i1 %373, i32 %429, i32 0
  %431 = select i1 %370, i32 %405, i32 %430
  br label %432

432:                                              ; preds = %428, %426
  %433 = phi i32 [ %427, %426 ], [ %431, %428 ]
  %434 = getelementptr inbounds [22 x i8], [22 x i8]* @bsize_to_tx_size_cat.bsize_to_tx_size_depth_table, i64 0, i64 %35
  %435 = load i8, i8* %434, align 1
  %436 = zext i8 %435 to i64
  %437 = add nsw i64 %436, -1
  %438 = load i8, i8* %340, align 1
  %439 = icmp eq i8 %343, %438
  br i1 %439, label %448, label %440

440:                                              ; preds = %432, %440
  %441 = phi i8 [ %446, %440 ], [ %343, %432 ]
  %442 = phi i32 [ %443, %440 ], [ 0, %432 ]
  %443 = add nuw nsw i32 %442, 1
  %444 = zext i8 %441 to i64
  %445 = getelementptr inbounds [19 x i8], [19 x i8]* @sub_tx_size_map, i64 0, i64 %444
  %446 = load i8, i8* %445, align 1
  %447 = icmp eq i8 %446, %438
  br i1 %447, label %448, label %440

448:                                              ; preds = %440, %432
  %449 = phi i32 [ 0, %432 ], [ %443, %440 ]
  %450 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %1, i64 0, i32 4
  %451 = load i8, i8* %450, align 8
  %452 = icmp eq i8 %451, 0
  br i1 %452, label %576, label %453

453:                                              ; preds = %448
  %454 = getelementptr inbounds [22 x i8], [22 x i8]* @bsize_to_max_depth.bsize_to_max_depth_table, i64 0, i64 %35
  %455 = load i8, i8* %454, align 1
  %456 = zext i8 %455 to i64
  %457 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 39
  %458 = load %struct.frame_contexts*, %struct.frame_contexts** %457, align 8
  %459 = sext i32 %433 to i64
  %460 = add nuw nsw i64 %456, 1
  %461 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %458, i64 0, i32 58, i64 %437, i64 %459, i64 %460
  %462 = load i16, i16* %461, align 2
  %463 = icmp ugt i16 %462, 15
  %464 = select i1 %463, i32 4, i32 3
  %465 = icmp ugt i16 %462, 31
  %466 = zext i1 %465 to i32
  %467 = getelementptr inbounds [17 x i32], [17 x i32]* @update_cdf.nsymbs2speed, i64 0, i64 %460
  %468 = load i32, i32* %467, align 4
  %469 = add i32 %468, %466
  %470 = add i32 %469, %464
  %471 = zext i32 %449 to i64
  %472 = shl i64 %471, 56
  %473 = ashr exact i64 %472, 56
  %474 = and i64 %473, 4294967295
  br label %475

475:                                              ; preds = %494, %453
  %476 = phi i64 [ 0, %453 ], [ %496, %494 ]
  %477 = phi i32 [ 32768, %453 ], [ %479, %494 ]
  %478 = icmp eq i64 %476, %474
  %479 = select i1 %478, i32 0, i32 %477
  %480 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %458, i64 0, i32 58, i64 %437, i64 %459, i64 %476
  %481 = load i16, i16* %480, align 2
  %482 = zext i16 %481 to i32
  %483 = icmp slt i32 %479, %482
  br i1 %483, label %484, label %489

484:                                              ; preds = %475
  %485 = sub nsw i32 %482, %479
  %486 = ashr i32 %485, %470
  %487 = trunc i32 %486 to i16
  %488 = sub i16 %481, %487
  br label %494

489:                                              ; preds = %475
  %490 = sub nsw i32 %479, %482
  %491 = ashr i32 %490, %470
  %492 = trunc i32 %491 to i16
  %493 = add i16 %481, %492
  br label %494

494:                                              ; preds = %489, %484
  %495 = phi i16 [ %493, %489 ], [ %488, %484 ]
  store i16 %495, i16* %480, align 2
  %496 = add nuw nsw i64 %476, 1
  %497 = icmp eq i64 %496, %456
  br i1 %497, label %498, label %475

498:                                              ; preds = %494
  %499 = load i16, i16* %461, align 2
  %500 = icmp ult i16 %499, 32
  %501 = zext i1 %500 to i16
  %502 = add i16 %499, %501
  store i16 %502, i16* %461, align 2
  br label %576

503:                                              ; preds = %279, %272, %269
  br i1 %73, label %504, label %531

504:                                              ; preds = %503
  %505 = load i16, i16* %19, align 1
  %506 = and i16 %505, 7
  %507 = zext i16 %506 to i64
  br label %508

508:                                              ; preds = %504, %284
  %509 = phi i64 [ %507, %504 ], [ %275, %284 ]
  %510 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 42, i64 %509
  %511 = load i32, i32* %510, align 4
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %513, label %534

513:                                              ; preds = %508
  %514 = zext i8 %270 to i64
  %515 = getelementptr inbounds [3 x i8], [3 x i8]* @tx_mode_to_biggest_tx_size, i64 0, i64 %514
  %516 = load i8, i8* %515, align 1
  %517 = getelementptr inbounds [22 x i8], [22 x i8]* @max_txsize_rect_lookup, i64 0, i64 %35
  %518 = load i8, i8* %517, align 1
  %519 = icmp eq i8 %5, 0
  br i1 %519, label %520, label %525

520:                                              ; preds = %513
  %521 = getelementptr inbounds [22 x i8], [22 x i8]* @max_txsize_lookup, i64 0, i64 %35
  %522 = load i8, i8* %521, align 1
  %523 = icmp ult i8 %522, %516
  %524 = select i1 %523, i8 %522, i8 %516
  br label %534

525:                                              ; preds = %513
  %526 = zext i8 %518 to i64
  %527 = getelementptr inbounds [19 x i8], [19 x i8]* @txsize_sqr_map, i64 0, i64 %526
  %528 = load i8, i8* %527, align 1
  %529 = icmp ugt i8 %528, %516
  %530 = select i1 %529, i8 %516, i8 %518
  br label %534

531:                                              ; preds = %503
  %532 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 24
  %533 = load i8, i8* %532, align 1
  br label %534

534:                                              ; preds = %531, %508, %520, %525
  %535 = phi i8 [ %533, %531 ], [ 0, %508 ], [ %524, %520 ], [ %530, %525 ]
  %536 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 4
  %537 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 3
  %538 = sext i32 %72 to i64
  %539 = zext i8 %37 to i64
  %540 = sext i32 %34 to i64
  %541 = sext i32 %70 to i64
  %542 = zext i8 %40 to i64
  br label %543

543:                                              ; preds = %565, %534
  %544 = phi i64 [ 0, %534 ], [ %566, %565 ]
  %545 = add nsw i64 %544, %541
  %546 = mul nsw i64 %544, %540
  br label %547

547:                                              ; preds = %543, %562
  %548 = phi i64 [ 0, %543 ], [ %563, %562 ]
  %549 = add nsw i64 %548, %538
  %550 = load i32, i32* %536, align 16
  %551 = sext i32 %550 to i64
  %552 = icmp slt i64 %549, %551
  br i1 %552, label %553, label %562

553:                                              ; preds = %547
  %554 = load i32, i32* %537, align 4
  %555 = sext i32 %554 to i64
  %556 = icmp slt i64 %545, %555
  br i1 %556, label %557, label %562

557:                                              ; preds = %553
  %558 = add nsw i64 %548, %546
  %559 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %17, i64 %558
  %560 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %559, align 8
  %561 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %560, i64 0, i32 24
  store i8 %535, i8* %561, align 1
  br label %562

562:                                              ; preds = %547, %553, %557
  %563 = add nuw nsw i64 %548, 1
  %564 = icmp ult i64 %563, %539
  br i1 %564, label %547, label %565

565:                                              ; preds = %562
  %566 = add nuw nsw i64 %544, 1
  %567 = icmp ult i64 %566, %542
  br i1 %567, label %543, label %568

568:                                              ; preds = %565
  %569 = getelementptr inbounds [22 x i8], [22 x i8]* @max_txsize_rect_lookup, i64 0, i64 %35
  %570 = load i8, i8* %569, align 1
  %571 = icmp eq i8 %535, %570
  br i1 %571, label %576, label %572

572:                                              ; preds = %568
  %573 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 58, i32 4
  %574 = load i32, i32* %573, align 16
  %575 = add i32 %574, 1
  store i32 %575, i32* %573, align 16
  br label %576

576:                                              ; preds = %332, %572, %568, %498, %448, %349, %248
  %577 = load i8, i8* %68, align 4
  %578 = icmp eq i8 %577, 2
  br i1 %578, label %579, label %645

579:                                              ; preds = %576
  %580 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 0
  %581 = load i8, i8* %580, align 8
  %582 = icmp ne i8 %581, 0
  %583 = and i1 %73, %582
  br i1 %583, label %584, label %645

584:                                              ; preds = %579
  %585 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 23
  %586 = load i8, i8* %585, align 8
  %587 = icmp ne i8 %586, 0
  %588 = icmp ne i32 %32, 0
  %589 = or i1 %588, %587
  br i1 %589, label %645, label %590

590:                                              ; preds = %584
  %591 = load i16, i16* %19, align 1
  %592 = and i16 %591, 7
  %593 = zext i16 %592 to i64
  %594 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 42, i64 %593
  %595 = load i32, i32* %594, align 4
  %596 = icmp eq i32 %595, 0
  br i1 %596, label %597, label %645

597:                                              ; preds = %590
  br i1 %249, label %598, label %729

598:                                              ; preds = %597
  %599 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %16, align 8
  %600 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %599, align 8
  %601 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %600, i64 0, i32 28
  %602 = load i16, i16* %601, align 1
  %603 = and i16 %602, 7
  %604 = zext i16 %603 to i64
  %605 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 42, i64 %604
  %606 = load i32, i32* %605, align 4
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %608, label %612

608:                                              ; preds = %598
  %609 = getelementptr inbounds [22 x i8], [22 x i8]* @max_txsize_rect_lookup, i64 0, i64 %35
  %610 = load i8, i8* %609, align 1
  %611 = zext i8 %610 to i32
  br label %612

612:                                              ; preds = %608, %598
  %613 = phi i32 [ %611, %608 ], [ 0, %598 ]
  %614 = trunc i32 %613 to i8
  %615 = zext i32 %613 to i64
  %616 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high_unit, i64 0, i64 %615
  %617 = load i32, i32* %616, align 4
  %618 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide_unit, i64 0, i64 %615
  %619 = load i32, i32* %618, align 4
  %620 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 40, i32 2
  %621 = load i8**, i8*** %620, align 16
  %622 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 5, i32 4
  %623 = load i32, i32* %622, align 16
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds i8*, i8** %621, i64 %624
  %626 = load i8*, i8** %625, align 8
  %627 = load i32, i32* %71, align 4
  %628 = sext i32 %627 to i64
  %629 = getelementptr inbounds i8, i8* %626, i64 %628
  %630 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 27
  store i8* %629, i8** %630, align 16
  %631 = load i32, i32* %69, align 16
  %632 = and i32 %631, 31
  %633 = zext i32 %632 to i64
  %634 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 29, i64 %633
  %635 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 28
  store i8* %634, i8** %635, align 8
  br label %636

636:                                              ; preds = %638, %612
  %637 = phi i32 [ 0, %612 ], [ %639, %638 ]
  br label %641

638:                                              ; preds = %641
  %639 = add nsw i32 %637, %617
  %640 = icmp slt i32 %639, %41
  br i1 %640, label %636, label %729

641:                                              ; preds = %641, %636
  %642 = phi i32 [ %643, %641 ], [ 0, %636 ]
  tail call fastcc void @set_txfm_context(%struct.macroblockd* %15, i8 zeroext %614, i32 %637, i32 %642) #4
  %643 = add nsw i32 %642, %619
  %644 = icmp slt i32 %643, %38
  br i1 %644, label %641, label %638

645:                                              ; preds = %590, %584, %579, %576
  %646 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 24
  br i1 %73, label %647, label %672

647:                                              ; preds = %645
  %648 = load i16, i16* %19, align 1
  %649 = and i16 %648, 7
  %650 = zext i16 %649 to i64
  %651 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 42, i64 %650
  %652 = load i32, i32* %651, align 4
  %653 = icmp eq i32 %652, 0
  br i1 %653, label %654, label %676

654:                                              ; preds = %647
  %655 = zext i8 %577 to i64
  %656 = getelementptr inbounds [3 x i8], [3 x i8]* @tx_mode_to_biggest_tx_size, i64 0, i64 %655
  %657 = load i8, i8* %656, align 1
  %658 = getelementptr inbounds [22 x i8], [22 x i8]* @max_txsize_rect_lookup, i64 0, i64 %35
  %659 = load i8, i8* %658, align 1
  %660 = icmp eq i8 %5, 0
  br i1 %660, label %661, label %666

661:                                              ; preds = %654
  %662 = getelementptr inbounds [22 x i8], [22 x i8]* @max_txsize_lookup, i64 0, i64 %35
  %663 = load i8, i8* %662, align 1
  %664 = icmp ult i8 %663, %657
  %665 = select i1 %664, i8 %663, i8 %657
  br label %676

666:                                              ; preds = %654
  %667 = zext i8 %659 to i64
  %668 = getelementptr inbounds [19 x i8], [19 x i8]* @txsize_sqr_map, i64 0, i64 %667
  %669 = load i8, i8* %668, align 1
  %670 = icmp ugt i8 %669, %657
  %671 = select i1 %670, i8 %657, i8 %659
  br label %676

672:                                              ; preds = %645
  %673 = load i8, i8* %646, align 1
  %674 = icmp eq i8 %5, 0
  %675 = select i1 %674, i8 0, i8 %673
  br label %676

676:                                              ; preds = %666, %661, %647, %672
  %677 = phi i8 [ %675, %672 ], [ 0, %647 ], [ %665, %661 ], [ %671, %666 ]
  store i8 %677, i8* %646, align 1
  %678 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 32
  %679 = load i8, i8* %678, align 4
  %680 = zext i8 %679 to i32
  %681 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 33
  %682 = load i8, i8* %681, align 1
  %683 = zext i8 %682 to i32
  %684 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 23
  %685 = load i8, i8* %684, align 8
  %686 = icmp ne i8 %685, 0
  %687 = icmp ne i32 %32, 0
  %688 = or i1 %687, %686
  br i1 %688, label %691, label %689

689:                                              ; preds = %676
  %690 = zext i8 %677 to i64
  br label %704

691:                                              ; preds = %676
  %692 = load i16, i16* %19, align 1
  %693 = trunc i16 %692 to i8
  %694 = icmp sgt i8 %693, -1
  br i1 %694, label %698, label %695

695:                                              ; preds = %691
  %696 = zext i8 %677 to i64
  %697 = shl nuw nsw i32 %683, 2
  br label %708

698:                                              ; preds = %691
  %699 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 6, i64 0
  %700 = load i8, i8* %699, align 8
  %701 = icmp slt i8 %700, 1
  %702 = zext i8 %677 to i64
  %703 = shl nuw nsw i32 %683, 2
  br i1 %701, label %704, label %708

704:                                              ; preds = %689, %698
  %705 = phi i64 [ %690, %689 ], [ %702, %698 ]
  %706 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high, i64 0, i64 %705
  %707 = load i32, i32* %706, align 4
  br label %708

708:                                              ; preds = %695, %698, %704
  %709 = phi i64 [ %705, %704 ], [ %702, %698 ], [ %696, %695 ]
  %710 = phi i1 [ true, %704 ], [ false, %698 ], [ false, %695 ]
  %711 = phi i32 [ %707, %704 ], [ %703, %698 ], [ %697, %695 ]
  %712 = trunc i32 %711 to i8
  %713 = icmp eq i8 %679, 0
  br i1 %713, label %723, label %714

714:                                              ; preds = %708
  %715 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 27
  %716 = load i8*, i8** %715, align 16
  %717 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide, i64 0, i64 %709
  %718 = load i32, i32* %717, align 4
  %719 = shl nuw nsw i32 %680, 2
  %720 = select i1 %710, i32 %718, i32 %719
  %721 = trunc i32 %720 to i8
  %722 = zext i8 %679 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %716, i8 %721, i64 %722, i1 false) #4
  br label %723

723:                                              ; preds = %708, %714
  %724 = icmp eq i8 %682, 0
  br i1 %724, label %729, label %725

725:                                              ; preds = %723
  %726 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 28
  %727 = load i8*, i8** %726, align 8
  %728 = zext i8 %682 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %727, i8 %712, i64 %728, i1 false) #4
  br label %729

729:                                              ; preds = %638, %723, %725, %597
  %730 = load i16, i16* %19, align 1
  %731 = trunc i16 %730 to i8
  %732 = icmp sgt i8 %731, -1
  br i1 %732, label %733, label %737

733:                                              ; preds = %729
  %734 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 6, i64 0
  %735 = load i8, i8* %734, align 8
  %736 = icmp slt i8 %735, 1
  br i1 %736, label %781, label %737

737:                                              ; preds = %729, %733
  %738 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 3
  %739 = load i8, i8* %738, align 4, !range !5
  %740 = icmp eq i8 %739, 0
  br i1 %740, label %741, label %781

741:                                              ; preds = %737
  %742 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %16, align 8
  %743 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %742, align 8
  %744 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %743, i64 0, i32 0
  %745 = load i8, i8* %744, align 8
  %746 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %743, i64 0, i32 28
  %747 = load i16, i16* %746, align 1
  %748 = and i16 %747, 7
  %749 = zext i16 %748 to i64
  %750 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 42, i64 %749
  %751 = load i32, i32* %750, align 4
  %752 = icmp eq i32 %751, 0
  br i1 %752, label %765, label %753

753:                                              ; preds = %741
  %754 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 4, i64 1, i32 1
  %755 = load i32, i32* %754, align 4
  %756 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 4, i64 1, i32 2
  %757 = load i32, i32* %756, align 8
  %758 = zext i8 %745 to i64
  %759 = sext i32 %755 to i64
  %760 = sext i32 %757 to i64
  %761 = getelementptr inbounds [22 x [2 x [2 x i8]]], [22 x [2 x [2 x i8]]]* @ss_size_lookup, i64 0, i64 %758, i64 %759, i64 %760
  %762 = load i8, i8* %761, align 1
  %763 = icmp eq i8 %762, 0
  %764 = zext i1 %763 to i8
  br label %773

765:                                              ; preds = %741
  %766 = zext i8 %745 to i64
  %767 = lshr i64 2033663, %766
  %768 = and i64 %767, 1
  %769 = icmp eq i64 %768, 0
  %770 = lshr i64 3083263, %766
  %771 = trunc i64 %770 to i8
  %772 = and i8 %771, 1
  br i1 %769, label %781, label %773

773:                                              ; preds = %765, %753
  %774 = phi i8 [ %764, %753 ], [ %772, %765 ]
  %775 = icmp eq i8 %774, 0
  br i1 %775, label %781, label %776

776:                                              ; preds = %773
  %777 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 0
  %778 = load i8, i8* %777, align 8
  %779 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 24
  %780 = load i8, i8* %779, align 1
  tail call void @cfl_store_block(%struct.macroblockd* %15, i8 zeroext %778, i8 zeroext %780) #4
  br label %781

781:                                              ; preds = %765, %773, %737, %733, %776
  br i1 %249, label %887, label %782

782:                                              ; preds = %781
  %783 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 33
  %784 = load i32, i32* %783, align 4
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %786, label %887

786:                                              ; preds = %782
  %787 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 75, i32 1
  %788 = load i32, i32* %787, align 4
  %789 = icmp eq i32 %788, 0
  br i1 %789, label %790, label %887

790:                                              ; preds = %786
  %791 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 24
  %792 = load i32, i32* %791, align 8
  %793 = icmp eq i32 %792, 0
  br i1 %793, label %887, label %794

794:                                              ; preds = %790
  %795 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 0
  %796 = load %struct.AV1_PRIMARY*, %struct.AV1_PRIMARY** %795, align 16
  %797 = getelementptr inbounds %struct.AV1_PRIMARY, %struct.AV1_PRIMARY* %796, i64 0, i32 16
  %798 = load i32, i32* %797, align 8
  %799 = icmp eq i32 %798, 0
  br i1 %799, label %811, label %800

800:                                              ; preds = %794
  %801 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 75, i32 21, i64 0, i32 21
  %802 = load i32, i32* %801, align 8
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %804, label %887

804:                                              ; preds = %800
  %805 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 75, i32 0
  %806 = load i32, i32* %805, align 16
  %807 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 75, i32 2
  %808 = load i32, i32* %807, align 8
  %809 = add nsw i32 %808, -1
  %810 = icmp eq i32 %806, %809
  br i1 %810, label %811, label %887

811:                                              ; preds = %794, %804
  %812 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 6, i64 0
  %813 = load i8, i8* %812, align 8
  %814 = icmp eq i8 %813, 1
  br i1 %814, label %815, label %887

815:                                              ; preds = %811
  %816 = load i16, i16* %19, align 1
  %817 = and i16 %816, 7
  %818 = icmp ugt i16 %817, 2
  br i1 %818, label %887, label %819

819:                                              ; preds = %815
  %820 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %18, i64 0, i32 5, i64 0
  %821 = lshr i8 %37, 1
  %822 = zext i8 %821 to i32
  %823 = lshr i8 %40, 1
  %824 = zext i8 %823 to i32
  %825 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 4
  %826 = load i32, i32* %825, align 16
  %827 = sub nsw i32 %826, %72
  %828 = ashr i32 %827, 1
  %829 = icmp slt i32 %828, %822
  %830 = select i1 %829, i32 %828, i32 %822
  %831 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 3
  %832 = load i32, i32* %831, align 4
  %833 = sub nsw i32 %832, %70
  %834 = ashr i32 %833, 1
  %835 = icmp slt i32 %834, %824
  %836 = select i1 %835, i32 %834, i32 %824
  %837 = ashr i32 %70, 1
  %838 = ashr i32 %826, 1
  %839 = mul nsw i32 %838, %837
  %840 = ashr i32 %72, 1
  %841 = add nsw i32 %839, %840
  %842 = icmp sgt i32 %836, 0
  br i1 %842, label %843, label %887

843:                                              ; preds = %819
  %844 = bitcast %union.int_mv* %820 to %struct.mv*
  %845 = getelementptr inbounds %struct.mv, %struct.mv* %844, i64 0, i32 1
  %846 = load i16, i16* %845, align 2
  %847 = bitcast %union.int_mv* %820 to i16*
  %848 = load i16, i16* %847, align 8
  %849 = icmp sgt i32 %830, 0
  %850 = sext i16 %848 to i32
  %851 = icmp slt i32 %850, 0
  %852 = sub nsw i32 0, %850
  %853 = select i1 %851, i32 %852, i32 %850
  %854 = icmp sgt i32 %853, 9
  %855 = sext i16 %846 to i32
  %856 = icmp slt i32 %855, 0
  %857 = sub nsw i32 0, %855
  %858 = select i1 %856, i32 %857, i32 %855
  %859 = icmp sgt i32 %858, 9
  %860 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 84
  %861 = or i1 %859, %854
  br label %862

862:                                              ; preds = %864, %843
  %863 = phi i32 [ 0, %843 ], [ %865, %864 ]
  br i1 %849, label %867, label %864

864:                                              ; preds = %884, %862
  %865 = add nuw nsw i32 %863, 1
  %866 = icmp slt i32 %865, %836
  br i1 %866, label %862, label %887

867:                                              ; preds = %862, %884
  %868 = phi i32 [ %885, %884 ], [ 0, %862 ]
  %869 = load i32, i32* %825, align 16
  %870 = ashr i32 %869, 1
  %871 = mul nsw i32 %870, %863
  %872 = add i32 %841, %868
  %873 = add i32 %872, %871
  %874 = load i8*, i8** %860, align 16
  %875 = sext i32 %873 to i64
  %876 = getelementptr inbounds i8, i8* %874, i64 %875
  br i1 %861, label %882, label %877

877:                                              ; preds = %867
  %878 = load i8, i8* %876, align 1
  %879 = icmp eq i8 %878, -1
  br i1 %879, label %884, label %880

880:                                              ; preds = %877
  %881 = add nuw i8 %878, 1
  br label %882

882:                                              ; preds = %867, %880
  %883 = phi i8 [ %881, %880 ], [ 0, %867 ]
  store i8 %883, i8* %876, align 1
  br label %884

884:                                              ; preds = %882, %877
  %885 = add nuw nsw i32 %868, 1
  %886 = icmp slt i32 %885, %830
  br i1 %886, label %867, label %864

887:                                              ; preds = %864, %819, %815, %811, %800, %790, %782, %786, %804, %781
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @encode_sb(%struct.AV1_COMP*, %struct.ThreadData*, %struct.TileDataEnc* readonly, %struct.TokenExtra**, i32, i32, i8 zeroext, i8 zeroext, %struct.PC_TREE* readonly) unnamed_addr #2 {
  %10 = zext i8 %7 to i64
  %11 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = lshr i8 %12, 1
  %14 = zext i8 %13 to i32
  %15 = icmp ugt i8 %7, 2
  br i1 %15, label %16, label %40

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 25
  %18 = load i8*, i8** %17, align 8
  %19 = sext i32 %5 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = and i32 %4, 31
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 26, i64 %22
  %24 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide_log2, i64 0, i64 %10
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = add nsw i32 %26, -1
  %28 = load i8, i8* %20, align 1
  %29 = sext i8 %28 to i32
  %30 = lshr i32 %29, %27
  %31 = and i32 %30, 1
  %32 = load i8, i8* %23, align 1
  %33 = sext i8 %32 to i32
  %34 = lshr i32 %33, %27
  %35 = shl i32 %34, 1
  %36 = and i32 %35, 2
  %37 = shl nsw i32 %27, 2
  %38 = or i32 %31, %37
  %39 = or i32 %38, %36
  br label %40

40:                                               ; preds = %9, %16
  %41 = phi i32 [ %39, %16 ], [ -1, %9 ]
  %42 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 0
  %43 = load i8, i8* %42, align 8
  %44 = icmp eq i8 %43, -1
  br i1 %44, label %56, label %45

45:                                               ; preds = %40
  switch i8 %7, label %56 [
    i8 0, label %51
    i8 3, label %46
    i8 6, label %47
    i8 9, label %48
    i8 12, label %49
    i8 15, label %50
  ]

46:                                               ; preds = %45
  br label %51

47:                                               ; preds = %45
  br label %51

48:                                               ; preds = %45
  br label %51

49:                                               ; preds = %45
  br label %51

50:                                               ; preds = %45
  br label %51

51:                                               ; preds = %50, %49, %48, %47, %46, %45
  %52 = phi i64 [ 0, %45 ], [ 1, %46 ], [ 2, %47 ], [ 3, %48 ], [ 4, %49 ], [ 5, %50 ]
  %53 = zext i8 %43 to i64
  %54 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* @subsize_lookup, i64 0, i64 %53, i64 %52
  %55 = load i8, i8* %54, align 1
  br label %56

56:                                               ; preds = %40, %45, %51
  %57 = phi i8 [ -1, %40 ], [ %55, %51 ], [ -1, %45 ]
  %58 = lshr i8 %12, 2
  %59 = zext i8 %58 to i32
  switch i8 %7, label %69 [
    i8 0, label %65
    i8 3, label %60
    i8 6, label %61
    i8 9, label %62
    i8 12, label %63
    i8 15, label %64
  ]

60:                                               ; preds = %56
  br label %65

61:                                               ; preds = %56
  br label %65

62:                                               ; preds = %56
  br label %65

63:                                               ; preds = %56
  br label %65

64:                                               ; preds = %56
  br label %65

65:                                               ; preds = %64, %63, %62, %61, %60, %56
  %66 = phi i64 [ 0, %56 ], [ 1, %60 ], [ 2, %61 ], [ 3, %62 ], [ 4, %63 ], [ 5, %64 ]
  %67 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* @subsize_lookup, i64 0, i64 3, i64 %66
  %68 = load i8, i8* %67, align 1
  br label %69

69:                                               ; preds = %56, %65
  %70 = phi i8 [ %68, %65 ], [ -1, %56 ]
  %71 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 3
  %72 = load i32, i32* %71, align 4
  %73 = icmp sgt i32 %72, %4
  br i1 %73, label %74, label %362

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 4
  %76 = load i32, i32* %75, align 8
  %77 = icmp sle i32 %76, %5
  %78 = icmp eq i8 %57, -1
  %79 = or i1 %78, %77
  br i1 %79, label %362, label %80

80:                                               ; preds = %74
  %81 = icmp eq i8 %6, 0
  %82 = icmp sgt i32 %41, -1
  %83 = and i1 %81, %82
  br i1 %83, label %84, label %149

84:                                               ; preds = %80
  %85 = add nsw i32 %14, %4
  %86 = icmp slt i32 %85, %72
  %87 = add nsw i32 %14, %5
  %88 = icmp slt i32 %87, %76
  %89 = and i1 %86, %88
  br i1 %89, label %90, label %149

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %2, i64 0, i32 4
  %92 = load i8, i8* %91, align 8
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %149, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 39
  %96 = load %struct.frame_contexts*, %struct.frame_contexts** %95, align 8
  %97 = sext i32 %41 to i64
  %98 = icmp ult i8 %7, 4
  %99 = icmp eq i8 %7, 15
  %100 = select i1 %99, i32 8, i32 10
  %101 = select i1 %98, i32 4, i32 %100
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %96, i64 0, i32 54, i64 %97, i64 %102
  %104 = load i16, i16* %103, align 2
  %105 = icmp ugt i16 %104, 15
  %106 = select i1 %105, i32 4, i32 3
  %107 = icmp ugt i16 %104, 31
  %108 = zext i1 %107 to i32
  %109 = getelementptr inbounds [17 x i32], [17 x i32]* @update_cdf.nsymbs2speed, i64 0, i64 %102
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, %108
  %112 = add i32 %111, %106
  %113 = add nsw i32 %101, -1
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %115, label %144

115:                                              ; preds = %94
  %116 = sext i8 %43 to i64
  %117 = and i64 %116, 4294967295
  %118 = zext i32 %113 to i64
  br label %119

119:                                              ; preds = %138, %115
  %120 = phi i64 [ 0, %115 ], [ %140, %138 ]
  %121 = phi i32 [ 32768, %115 ], [ %123, %138 ]
  %122 = icmp eq i64 %120, %117
  %123 = select i1 %122, i32 0, i32 %121
  %124 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %96, i64 0, i32 54, i64 %97, i64 %120
  %125 = load i16, i16* %124, align 2
  %126 = zext i16 %125 to i32
  %127 = icmp slt i32 %123, %126
  br i1 %127, label %128, label %133

128:                                              ; preds = %119
  %129 = sub nsw i32 %126, %123
  %130 = ashr i32 %129, %112
  %131 = trunc i32 %130 to i16
  %132 = sub i16 %125, %131
  br label %138

133:                                              ; preds = %119
  %134 = sub nsw i32 %123, %126
  %135 = ashr i32 %134, %112
  %136 = trunc i32 %135 to i16
  %137 = add i16 %125, %136
  br label %138

138:                                              ; preds = %133, %128
  %139 = phi i16 [ %137, %133 ], [ %132, %128 ]
  store i16 %139, i16* %124, align 2
  %140 = add nuw nsw i64 %120, 1
  %141 = icmp eq i64 %140, %118
  br i1 %141, label %142, label %119

142:                                              ; preds = %138
  %143 = load i16, i16* %103, align 2
  br label %144

144:                                              ; preds = %94, %142
  %145 = phi i16 [ %143, %142 ], [ %104, %94 ]
  %146 = icmp ult i16 %145, 32
  %147 = zext i1 %146 to i16
  %148 = add i16 %145, %147
  store i16 %148, i16* %103, align 2
  br label %149

149:                                              ; preds = %84, %144, %90, %80
  switch i8 %43, label %218 [
    i8 0, label %150
    i8 2, label %153
    i8 1, label %162
    i8 3, label %171
    i8 4, label %182
    i8 5, label %191
    i8 6, label %200
    i8 7, label %209
    i8 8, label %363
    i8 9, label %388
  ]

150:                                              ; preds = %149
  %151 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 2
  %152 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %151, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %5, i8 zeroext %6, i8 zeroext %57, i8 zeroext 0, %struct.PICK_MODE_CONTEXT* %152)
  br label %218

153:                                              ; preds = %149
  %154 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 4, i64 0
  %155 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %154, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %5, i8 zeroext %6, i8 zeroext %57, i8 zeroext 2, %struct.PICK_MODE_CONTEXT* %155)
  %156 = add nsw i32 %14, %5
  %157 = load i32, i32* %75, align 8
  %158 = icmp slt i32 %156, %157
  br i1 %158, label %159, label %218

159:                                              ; preds = %153
  %160 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 4, i64 1
  %161 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %160, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %156, i8 zeroext %6, i8 zeroext %57, i8 zeroext 2, %struct.PICK_MODE_CONTEXT* %161)
  br label %218

162:                                              ; preds = %149
  %163 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 3, i64 0
  %164 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %163, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %5, i8 zeroext %6, i8 zeroext %57, i8 zeroext 1, %struct.PICK_MODE_CONTEXT* %164)
  %165 = add nsw i32 %14, %4
  %166 = load i32, i32* %71, align 4
  %167 = icmp slt i32 %165, %166
  br i1 %167, label %168, label %218

168:                                              ; preds = %162
  %169 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 3, i64 1
  %170 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %169, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %165, i32 %5, i8 zeroext %6, i8 zeroext %57, i8 zeroext 1, %struct.PICK_MODE_CONTEXT* %170)
  br label %218

171:                                              ; preds = %149
  %172 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 11, i64 0
  %173 = load %struct.PC_TREE*, %struct.PC_TREE** %172, align 8
  tail call fastcc void @encode_sb(%struct.AV1_COMP* %0, %struct.ThreadData* %1, %struct.TileDataEnc* %2, %struct.TokenExtra** %3, i32 %4, i32 %5, i8 zeroext %6, i8 zeroext %57, %struct.PC_TREE* %173)
  %174 = add nsw i32 %14, %5
  %175 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 11, i64 1
  %176 = load %struct.PC_TREE*, %struct.PC_TREE** %175, align 8
  tail call fastcc void @encode_sb(%struct.AV1_COMP* %0, %struct.ThreadData* %1, %struct.TileDataEnc* %2, %struct.TokenExtra** %3, i32 %4, i32 %174, i8 zeroext %6, i8 zeroext %57, %struct.PC_TREE* %176)
  %177 = add nsw i32 %14, %4
  %178 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 11, i64 2
  %179 = load %struct.PC_TREE*, %struct.PC_TREE** %178, align 8
  tail call fastcc void @encode_sb(%struct.AV1_COMP* %0, %struct.ThreadData* %1, %struct.TileDataEnc* %2, %struct.TokenExtra** %3, i32 %177, i32 %5, i8 zeroext %6, i8 zeroext %57, %struct.PC_TREE* %179)
  %180 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 11, i64 3
  %181 = load %struct.PC_TREE*, %struct.PC_TREE** %180, align 8
  tail call fastcc void @encode_sb(%struct.AV1_COMP* %0, %struct.ThreadData* %1, %struct.TileDataEnc* %2, %struct.TokenExtra** %3, i32 %177, i32 %174, i8 zeroext %6, i8 zeroext %57, %struct.PC_TREE* %181)
  br label %218

182:                                              ; preds = %149
  %183 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 5, i64 0
  %184 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %183, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %5, i8 zeroext %6, i8 zeroext %70, i8 zeroext 4, %struct.PICK_MODE_CONTEXT* %184)
  %185 = add nsw i32 %14, %5
  %186 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 5, i64 1
  %187 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %186, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %185, i8 zeroext %6, i8 zeroext %70, i8 zeroext 4, %struct.PICK_MODE_CONTEXT* %187)
  %188 = add nsw i32 %14, %4
  %189 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 5, i64 2
  %190 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %189, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %188, i32 %5, i8 zeroext %6, i8 zeroext %57, i8 zeroext 4, %struct.PICK_MODE_CONTEXT* %190)
  br label %218

191:                                              ; preds = %149
  %192 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 6, i64 0
  %193 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %192, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %5, i8 zeroext %6, i8 zeroext %57, i8 zeroext 5, %struct.PICK_MODE_CONTEXT* %193)
  %194 = add nsw i32 %14, %4
  %195 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 6, i64 1
  %196 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %195, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %194, i32 %5, i8 zeroext %6, i8 zeroext %70, i8 zeroext 5, %struct.PICK_MODE_CONTEXT* %196)
  %197 = add nsw i32 %14, %5
  %198 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 6, i64 2
  %199 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %198, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %194, i32 %197, i8 zeroext %6, i8 zeroext %70, i8 zeroext 5, %struct.PICK_MODE_CONTEXT* %199)
  br label %218

200:                                              ; preds = %149
  %201 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 7, i64 0
  %202 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %201, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %5, i8 zeroext %6, i8 zeroext %70, i8 zeroext 6, %struct.PICK_MODE_CONTEXT* %202)
  %203 = add nsw i32 %14, %4
  %204 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 7, i64 1
  %205 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %204, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %203, i32 %5, i8 zeroext %6, i8 zeroext %70, i8 zeroext 6, %struct.PICK_MODE_CONTEXT* %205)
  %206 = add nsw i32 %14, %5
  %207 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 7, i64 2
  %208 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %207, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %206, i8 zeroext %6, i8 zeroext %57, i8 zeroext 6, %struct.PICK_MODE_CONTEXT* %208)
  br label %218

209:                                              ; preds = %149
  %210 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 8, i64 0
  %211 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %210, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %5, i8 zeroext %6, i8 zeroext %57, i8 zeroext 7, %struct.PICK_MODE_CONTEXT* %211)
  %212 = add nsw i32 %14, %5
  %213 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 8, i64 1
  %214 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %213, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %212, i8 zeroext %6, i8 zeroext %70, i8 zeroext 7, %struct.PICK_MODE_CONTEXT* %214)
  %215 = add nsw i32 %14, %4
  %216 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 8, i64 2
  %217 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %216, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %215, i32 %212, i8 zeroext %6, i8 zeroext %70, i8 zeroext 7, %struct.PICK_MODE_CONTEXT* %217)
  br label %218

218:                                              ; preds = %388, %394, %402, %410, %363, %369, %377, %385, %149, %162, %168, %153, %159, %209, %200, %191, %182, %171, %150
  br i1 %15, label %219, label %362

219:                                              ; preds = %218
  switch i8 %7, label %229 [
    i8 15, label %223
    i8 3, label %224
    i8 6, label %220
    i8 9, label %221
    i8 12, label %222
  ]

220:                                              ; preds = %219
  br label %224

221:                                              ; preds = %219
  br label %224

222:                                              ; preds = %219
  br label %224

223:                                              ; preds = %219
  br label %224

224:                                              ; preds = %223, %222, %221, %220, %219
  %225 = phi i64 [ 2, %220 ], [ 3, %221 ], [ 4, %222 ], [ 5, %223 ], [ 1, %219 ]
  %226 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* @subsize_lookup, i64 0, i64 3, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i64
  br label %229

229:                                              ; preds = %224, %219
  %230 = phi i64 [ %228, %224 ], [ 255, %219 ]
  switch i8 %43, label %362 [
    i8 3, label %231
    i8 0, label %233
    i8 1, label %233
    i8 2, label %233
    i8 8, label %233
    i8 9, label %233
    i8 4, label %250
    i8 5, label %279
    i8 6, label %308
    i8 7, label %335
  ]

231:                                              ; preds = %229
  %232 = icmp eq i8 %7, 3
  br i1 %232, label %233, label %362

233:                                              ; preds = %231, %229, %229, %229, %229, %229
  %234 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 25
  %235 = load i8*, i8** %234, align 8
  %236 = sext i32 %5 to i64
  %237 = getelementptr inbounds i8, i8* %235, i64 %236
  %238 = and i32 %4, 31
  %239 = zext i32 %238 to i64
  %240 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 26, i64 %239
  %241 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %10
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %57 to i64
  %244 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %243, i32 0
  %245 = load i8, i8* %244, align 2
  %246 = zext i8 %12 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %237, i8 %245, i64 %246, i1 false) #4
  %247 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %243, i32 1
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %242 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %240, i8 %248, i64 %249, i1 false) #4
  br label %362

250:                                              ; preds = %229
  %251 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 25
  %252 = load i8*, i8** %251, align 8
  %253 = sext i32 %5 to i64
  %254 = getelementptr inbounds i8, i8* %252, i64 %253
  %255 = and i32 %4, 31
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 26, i64 %256
  %258 = zext i8 %57 to i64
  %259 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %258
  %260 = load i8, i8* %259, align 1
  %261 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %258
  %262 = load i8, i8* %261, align 1
  %263 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %230, i32 0
  %264 = load i8, i8* %263, align 2
  %265 = zext i8 %260 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %254, i8 %264, i64 %265, i1 false) #4
  %266 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %230, i32 1
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %262 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %257, i8 %267, i64 %268, i1 false) #4
  %269 = add nsw i32 %14, %4
  %270 = load i8*, i8** %251, align 8
  %271 = getelementptr inbounds i8, i8* %270, i64 %253
  %272 = and i32 %269, 31
  %273 = zext i32 %272 to i64
  %274 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 26, i64 %273
  %275 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %258, i32 0
  %276 = load i8, i8* %275, align 2
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %271, i8 %276, i64 %265, i1 false) #4
  %277 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %258, i32 1
  %278 = load i8, i8* %277, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %274, i8 %278, i64 %268, i1 false) #4
  br label %362

279:                                              ; preds = %229
  %280 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 25
  %281 = load i8*, i8** %280, align 8
  %282 = sext i32 %5 to i64
  %283 = getelementptr inbounds i8, i8* %281, i64 %282
  %284 = and i32 %4, 31
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 26, i64 %285
  %287 = zext i8 %57 to i64
  %288 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %287
  %289 = load i8, i8* %288, align 1
  %290 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %287
  %291 = load i8, i8* %290, align 1
  %292 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %287, i32 0
  %293 = load i8, i8* %292, align 2
  %294 = zext i8 %289 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %283, i8 %293, i64 %294, i1 false) #4
  %295 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %287, i32 1
  %296 = load i8, i8* %295, align 1
  %297 = zext i8 %291 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %286, i8 %296, i64 %297, i1 false) #4
  %298 = add nsw i32 %14, %4
  %299 = load i8*, i8** %280, align 8
  %300 = getelementptr inbounds i8, i8* %299, i64 %282
  %301 = and i32 %298, 31
  %302 = zext i32 %301 to i64
  %303 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 26, i64 %302
  %304 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %230, i32 0
  %305 = load i8, i8* %304, align 2
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %300, i8 %305, i64 %294, i1 false) #4
  %306 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %230, i32 1
  %307 = load i8, i8* %306, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %303, i8 %307, i64 %297, i1 false) #4
  br label %362

308:                                              ; preds = %229
  %309 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 25
  %310 = load i8*, i8** %309, align 8
  %311 = sext i32 %5 to i64
  %312 = getelementptr inbounds i8, i8* %310, i64 %311
  %313 = and i32 %4, 31
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 26, i64 %314
  %316 = zext i8 %57 to i64
  %317 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %316
  %318 = load i8, i8* %317, align 1
  %319 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %316
  %320 = load i8, i8* %319, align 1
  %321 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %230, i32 0
  %322 = load i8, i8* %321, align 2
  %323 = zext i8 %318 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %312, i8 %322, i64 %323, i1 false) #4
  %324 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %230, i32 1
  %325 = load i8, i8* %324, align 1
  %326 = zext i8 %320 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %315, i8 %325, i64 %326, i1 false) #4
  %327 = add nsw i32 %14, %5
  %328 = load i8*, i8** %309, align 8
  %329 = sext i32 %327 to i64
  %330 = getelementptr inbounds i8, i8* %328, i64 %329
  %331 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %316, i32 0
  %332 = load i8, i8* %331, align 2
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %330, i8 %332, i64 %323, i1 false) #4
  %333 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %316, i32 1
  %334 = load i8, i8* %333, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %315, i8 %334, i64 %326, i1 false) #4
  br label %362

335:                                              ; preds = %229
  %336 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 25
  %337 = load i8*, i8** %336, align 8
  %338 = sext i32 %5 to i64
  %339 = getelementptr inbounds i8, i8* %337, i64 %338
  %340 = and i32 %4, 31
  %341 = zext i32 %340 to i64
  %342 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 26, i64 %341
  %343 = zext i8 %57 to i64
  %344 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %343
  %345 = load i8, i8* %344, align 1
  %346 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %343
  %347 = load i8, i8* %346, align 1
  %348 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %343, i32 0
  %349 = load i8, i8* %348, align 2
  %350 = zext i8 %345 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %339, i8 %349, i64 %350, i1 false) #4
  %351 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %343, i32 1
  %352 = load i8, i8* %351, align 1
  %353 = zext i8 %347 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %342, i8 %352, i64 %353, i1 false) #4
  %354 = add nsw i32 %14, %5
  %355 = load i8*, i8** %336, align 8
  %356 = sext i32 %354 to i64
  %357 = getelementptr inbounds i8, i8* %355, i64 %356
  %358 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %230, i32 0
  %359 = load i8, i8* %358, align 2
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %357, i8 %359, i64 %350, i1 false) #4
  %360 = getelementptr inbounds [22 x %struct.anon.16], [22 x %struct.anon.16]* @partition_context_lookup, i64 0, i64 %230, i32 1
  %361 = load i8, i8* %360, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %342, i8 %361, i64 %353, i1 false) #4
  br label %362

362:                                              ; preds = %335, %308, %279, %250, %233, %231, %229, %218, %74, %69
  ret void

363:                                              ; preds = %149
  %364 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 9, i64 0
  %365 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %364, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %5, i8 zeroext %6, i8 zeroext %57, i8 zeroext 8, %struct.PICK_MODE_CONTEXT* %365)
  %366 = add nsw i32 %59, %4
  %367 = load i32, i32* %71, align 4
  %368 = icmp slt i32 %366, %367
  br i1 %368, label %369, label %218

369:                                              ; preds = %363
  %370 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 9, i64 1
  %371 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %370, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %366, i32 %5, i8 zeroext %6, i8 zeroext %57, i8 zeroext 8, %struct.PICK_MODE_CONTEXT* %371)
  %372 = shl nuw nsw i8 %58, 1
  %373 = zext i8 %372 to i32
  %374 = add nsw i32 %373, %4
  %375 = load i32, i32* %71, align 4
  %376 = icmp slt i32 %374, %375
  br i1 %376, label %377, label %218

377:                                              ; preds = %369
  %378 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 9, i64 2
  %379 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %378, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %374, i32 %5, i8 zeroext %6, i8 zeroext %57, i8 zeroext 8, %struct.PICK_MODE_CONTEXT* %379)
  %380 = mul nuw i8 %58, 3
  %381 = zext i8 %380 to i32
  %382 = add nsw i32 %381, %4
  %383 = load i32, i32* %71, align 4
  %384 = icmp slt i32 %382, %383
  br i1 %384, label %385, label %218

385:                                              ; preds = %377
  %386 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 9, i64 3
  %387 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %386, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %382, i32 %5, i8 zeroext %6, i8 zeroext %57, i8 zeroext 8, %struct.PICK_MODE_CONTEXT* %387)
  br label %218

388:                                              ; preds = %149
  %389 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 10, i64 0
  %390 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %389, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %5, i8 zeroext %6, i8 zeroext %57, i8 zeroext 9, %struct.PICK_MODE_CONTEXT* %390)
  %391 = add nsw i32 %59, %5
  %392 = load i32, i32* %75, align 8
  %393 = icmp slt i32 %391, %392
  br i1 %393, label %394, label %218

394:                                              ; preds = %388
  %395 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 10, i64 1
  %396 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %395, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %391, i8 zeroext %6, i8 zeroext %57, i8 zeroext 9, %struct.PICK_MODE_CONTEXT* %396)
  %397 = shl nuw nsw i8 %58, 1
  %398 = zext i8 %397 to i32
  %399 = add nsw i32 %398, %5
  %400 = load i32, i32* %75, align 8
  %401 = icmp slt i32 %399, %400
  br i1 %401, label %402, label %218

402:                                              ; preds = %394
  %403 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 10, i64 2
  %404 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %403, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %399, i8 zeroext %6, i8 zeroext %57, i8 zeroext 9, %struct.PICK_MODE_CONTEXT* %404)
  %405 = mul nuw i8 %58, 3
  %406 = zext i8 %405 to i32
  %407 = add nsw i32 %406, %5
  %408 = load i32, i32* %75, align 8
  %409 = icmp slt i32 %407, %408
  br i1 %409, label %410, label %218

410:                                              ; preds = %402
  %411 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 10, i64 3
  %412 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %411, align 8
  tail call fastcc void @encode_b(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %3, i32 %4, i32 %407, i8 zeroext %6, i8 zeroext %57, i8 zeroext 9, %struct.PICK_MODE_CONTEXT* %412)
  br label %218
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_nonrd_use_partition(%struct.AV1_COMP*, %struct.ThreadData*, %struct.TileDataEnc*, %struct.MB_MODE_INFO** nocapture readonly, %struct.TokenExtra**, i32, i32, i8 zeroext, %struct.PC_TREE* nocapture) local_unnamed_addr #2 {
  %10 = alloca %struct.RD_STATS, align 16
  %11 = alloca %struct.RD_STATS, align 8
  %12 = alloca %struct.RD_STATS, align 8
  %13 = alloca %struct.RD_SEARCH_MACROBLOCK_CONTEXT, align 8
  %14 = alloca %struct.RD_SEARCH_MACROBLOCK_CONTEXT, align 8
  %15 = alloca %struct.RD_STATS, align 16
  %16 = alloca %struct.RD_STATS, align 16
  %17 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8
  %18 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0
  %19 = zext i8 %7 to i64
  %20 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = lshr i8 %21, 1
  %23 = zext i8 %22 to i32
  %24 = icmp ugt i8 %7, 2
  br i1 %24, label %25, label %125

25:                                               ; preds = %9
  %26 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, %5
  br i1 %28, label %29, label %139

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, %6
  br i1 %32, label %33, label %139

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 11
  %35 = load i32, i32* %34, align 4
  %36 = mul nsw i32 %35, %5
  %37 = add nsw i32 %36, %6
  %38 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 9
  %39 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %38, align 8
  %40 = sext i32 %37 to i64
  %41 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %39, i64 %40
  %42 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %41, align 8
  %43 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 0
  %44 = load i8, i8* %43, align 8
  %45 = icmp eq i8 %44, %7
  br i1 %45, label %125, label %46

46:                                               ; preds = %33
  %47 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %19
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = zext i8 %21 to i32
  %51 = zext i8 %44 to i64
  %52 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %51
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = icmp ugt i8 %7, 3
  br i1 %58, label %59, label %115

59:                                               ; preds = %46
  %60 = lshr i32 %50, 1
  %61 = add nsw i32 %60, %5
  %62 = icmp slt i32 %61, %27
  br i1 %62, label %63, label %115

63:                                               ; preds = %59
  %64 = lshr i32 %49, 1
  %65 = add nsw i32 %64, %6
  %66 = icmp slt i32 %65, %31
  br i1 %66, label %67, label %115

67:                                               ; preds = %63
  %68 = zext i32 %60 to i64
  %69 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %41, i64 %68
  %70 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %69, align 8
  %71 = mul nsw i32 %64, %35
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %41, i64 %72
  %74 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %73, align 8
  %75 = icmp eq i8 %56, %21
  br i1 %75, label %76, label %84

76:                                               ; preds = %67
  %77 = shl nuw nsw i32 %54, 2
  %78 = icmp eq i32 %77, %49
  br i1 %78, label %125, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %74, i64 0, i32 0
  %81 = load i8, i8* %80, align 8
  %82 = icmp eq i8 %81, %44
  %83 = select i1 %82, i8 1, i8 5
  br label %125

84:                                               ; preds = %67
  %85 = icmp eq i8 %53, %48
  br i1 %85, label %86, label %94

86:                                               ; preds = %84
  %87 = shl nuw nsw i32 %57, 2
  %88 = icmp eq i32 %87, %50
  br i1 %88, label %125, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %70, i64 0, i32 0
  %91 = load i8, i8* %90, align 8
  %92 = icmp eq i8 %91, %44
  %93 = select i1 %92, i8 2, i8 7
  br label %125

94:                                               ; preds = %84
  %95 = shl nuw nsw i32 %57, 1
  %96 = icmp eq i32 %95, %50
  %97 = shl nuw nsw i32 %54, 1
  %98 = icmp eq i32 %97, %49
  %99 = and i1 %98, %96
  br i1 %99, label %100, label %125

100:                                              ; preds = %94
  %101 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %74, i64 0, i32 0
  %102 = load i8, i8* %101, align 8
  %103 = zext i8 %102 to i64
  %104 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, %21
  br i1 %106, label %125, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %70, i64 0, i32 0
  %109 = load i8, i8* %108, align 8
  %110 = zext i8 %109 to i64
  %111 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %110
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, %48
  %114 = select i1 %113, i8 6, i8 3
  br label %125

115:                                              ; preds = %46, %59, %63
  %116 = icmp ult i8 %56, %21
  %117 = zext i1 %116 to i64
  %118 = icmp ult i8 %53, %48
  %119 = zext i1 %118 to i64
  %120 = shl nuw nsw i64 %117, 1
  %121 = or i64 %120, %119
  %122 = getelementptr inbounds [4 x i8], [4 x i8]* @get_partition.base_partitions, i64 0, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = icmp eq i64 %121, 0
  br i1 %124, label %139, label %125

125:                                              ; preds = %107, %100, %94, %89, %86, %79, %76, %33, %9, %115
  %126 = phi i8 [ %123, %115 ], [ %114, %107 ], [ 4, %100 ], [ 3, %94 ], [ %93, %89 ], [ 9, %86 ], [ %83, %79 ], [ 8, %76 ], [ 0, %33 ], [ 0, %9 ]
  switch i8 %7, label %137 [
    i8 0, label %132
    i8 3, label %127
    i8 6, label %128
    i8 9, label %129
    i8 12, label %130
    i8 15, label %131
  ]

127:                                              ; preds = %125
  br label %132

128:                                              ; preds = %125
  br label %132

129:                                              ; preds = %125
  br label %132

130:                                              ; preds = %125
  br label %132

131:                                              ; preds = %125
  br label %132

132:                                              ; preds = %131, %130, %129, %128, %127, %125
  %133 = phi i64 [ 0, %125 ], [ 1, %127 ], [ 2, %128 ], [ 3, %129 ], [ 4, %130 ], [ 5, %131 ]
  %134 = zext i8 %126 to i64
  %135 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* @subsize_lookup, i64 0, i64 %134, i64 %133
  %136 = load i8, i8* %135, align 1
  br label %137

137:                                              ; preds = %125, %132
  %138 = phi i8 [ %136, %132 ], [ -1, %125 ]
  br i1 %24, label %139, label %166

139:                                              ; preds = %25, %29, %115, %137
  %140 = phi i8 [ %138, %137 ], [ -1, %115 ], [ -1, %29 ], [ -1, %25 ]
  %141 = phi i8 [ %126, %137 ], [ -1, %115 ], [ -1, %29 ], [ -1, %25 ]
  %142 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 25
  %143 = load i8*, i8** %142, align 8
  %144 = sext i32 %6 to i64
  %145 = getelementptr inbounds i8, i8* %143, i64 %144
  %146 = and i32 %5, 31
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 26, i64 %147
  %149 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide_log2, i64 0, i64 %19
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = add nsw i32 %151, -1
  %153 = load i8, i8* %145, align 1
  %154 = sext i8 %153 to i32
  %155 = lshr i32 %154, %152
  %156 = and i32 %155, 1
  %157 = load i8, i8* %148, align 1
  %158 = sext i8 %157 to i32
  %159 = lshr i32 %158, %152
  %160 = shl i32 %159, 1
  %161 = and i32 %160, 2
  %162 = shl nsw i32 %152, 2
  %163 = or i32 %156, %162
  %164 = or i32 %163, %161
  %165 = sext i32 %164 to i64
  br label %166

166:                                              ; preds = %137, %139
  %167 = phi i8 [ %140, %139 ], [ %138, %137 ]
  %168 = phi i8 [ %141, %139 ], [ %126, %137 ]
  %169 = phi i64 [ %165, %139 ], [ 0, %137 ]
  %170 = bitcast %struct.RD_STATS* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %170) #4
  %171 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %10, i64 0, i32 0
  %172 = bitcast %struct.RD_STATS* %10 to <2 x i64>*
  store <2 x i64> <i64 -6148914691236517206, i64 9223372036854775807>, <2 x i64>* %172, align 16
  store i32 2147483647, i32* %171, align 16
  %173 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %10, i64 0, i32 2
  %174 = bitcast i64* %173 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %174, align 16
  %175 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %10, i64 0, i32 4
  store i32 0, i32* %175, align 16
  %176 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %10, i64 0, i32 5
  store i32 0, i32* %176, align 4
  %177 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 3
  %178 = load i32, i32* %177, align 4
  %179 = icmp sgt i32 %178, %5
  br i1 %179, label %180, label %602

180:                                              ; preds = %166
  %181 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 4
  %182 = load i32, i32* %181, align 8
  %183 = icmp sgt i32 %182, %6
  br i1 %183, label %184, label %602

184:                                              ; preds = %180
  %185 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 0
  store i8 %168, i8* %185, align 8
  %186 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 40, i32 2
  %187 = load i8**, i8*** %186, align 16
  %188 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %2, i64 0, i32 0, i32 4
  %189 = load i32, i32* %188, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds i8*, i8** %187, i64 %190
  %192 = load i8*, i8** %191, align 8
  %193 = sext i32 %6 to i64
  %194 = getelementptr inbounds i8, i8* %192, i64 %193
  %195 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 27
  store i8* %194, i8** %195, align 16
  %196 = and i32 %5, 31
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 29, i64 %197
  %199 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 28
  store i8* %198, i8** %199, align 8
  %200 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 57, i32 1
  store i32 0, i32* %200, align 4
  %201 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 57, i32 0
  store i32 0, i32* %201, align 4
  %202 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 4, i64 0
  %203 = load i32, i32* %202, align 4
  %204 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 57, i32 7
  store i32 %203, i32* %204, align 4
  %205 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 5, i64 0
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 57, i32 9
  store i32 %206, i32* %207, align 4
  %208 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 2, i64 0
  %209 = load i32, i32* %208, align 4
  %210 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 57, i32 6
  store i32 %209, i32* %210, align 4
  %211 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 3, i64 0
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 57, i32 4
  store i32 %212, i32* %213, align 4
  %214 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 0, i64 0, i64 0
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 57, i32 3, i64 0
  store i32 %215, i32* %216, align 4
  %217 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 0, i64 0, i64 1
  %218 = load i32, i32* %217, align 4
  %219 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 57, i32 3, i64 1
  store i32 %218, i32* %219, align 4
  %220 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 34, i32 1, i64 0
  %221 = load i8, i8* %220, align 4
  %222 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 57, i32 5
  store i8 %221, i8* %222, align 4
  %223 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 7
  %224 = load i8, i8* %223, align 1, !range !5
  %225 = icmp eq i8 %224, 0
  %226 = icmp eq i8 %221, 2
  %227 = select i1 %226, i8 1, i8 2
  %228 = select i1 %225, i8 %227, i8 0
  %229 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 57, i32 8
  store i8 %228, i8* %229, align 4
  %230 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 9, i32 5, i32 0
  %231 = load i8, i8* %230, align 4
  %232 = zext i8 %231 to i32
  %233 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 57, i32 2
  store i32 %232, i32* %233, align 4
  switch i8 %168, label %602 [
    i8 0, label %276
    i8 2, label %263
    i8 1, label %250
    i8 3, label %234
  ]

234:                                              ; preds = %184
  %235 = tail call %struct.PC_TREE* @av1_alloc_pc_tree_node(i8 zeroext %167) #4
  %236 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 11, i64 0
  store %struct.PC_TREE* %235, %struct.PC_TREE** %236, align 8
  %237 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %235, i64 0, i32 12
  store i32 0, i32* %237, align 8
  %238 = tail call %struct.PC_TREE* @av1_alloc_pc_tree_node(i8 zeroext %167) #4
  %239 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 11, i64 1
  store %struct.PC_TREE* %238, %struct.PC_TREE** %239, align 8
  %240 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %238, i64 0, i32 12
  store i32 1, i32* %240, align 8
  %241 = tail call %struct.PC_TREE* @av1_alloc_pc_tree_node(i8 zeroext %167) #4
  %242 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 11, i64 2
  store %struct.PC_TREE* %241, %struct.PC_TREE** %242, align 8
  %243 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %241, i64 0, i32 12
  store i32 2, i32* %243, align 8
  %244 = tail call %struct.PC_TREE* @av1_alloc_pc_tree_node(i8 zeroext %167) #4
  %245 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 11, i64 3
  store %struct.PC_TREE* %244, %struct.PC_TREE** %245, align 8
  %246 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %244, i64 0, i32 12
  store i32 3, i32* %246, align 8
  %247 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 3
  %248 = load i32, i32* %247, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %589, label %417

250:                                              ; preds = %184
  %251 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 3
  %252 = tail call %struct.PICK_MODE_CONTEXT* @av1_alloc_pmc(%struct.AV1_COMP* %0, i8 zeroext %167, %struct.PC_TREE_SHARED_BUFFERS* %251) #4
  %253 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 3, i64 0
  store %struct.PICK_MODE_CONTEXT* %252, %struct.PICK_MODE_CONTEXT** %253, align 8
  %254 = tail call %struct.PICK_MODE_CONTEXT* @av1_alloc_pmc(%struct.AV1_COMP* %0, i8 zeroext %167, %struct.PC_TREE_SHARED_BUFFERS* %251) #4
  %255 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 3, i64 1
  store %struct.PICK_MODE_CONTEXT* %254, %struct.PICK_MODE_CONTEXT** %255, align 8
  %256 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %253, align 8
  call fastcc void @pick_sb_modes_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %18, i32 %5, i32 %6, %struct.RD_STATS* nonnull %10, i8 zeroext %167, %struct.PICK_MODE_CONTEXT* %256)
  %257 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %253, align 8
  call fastcc void @encode_b_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i32 %5, i32 %6, i8 zeroext 0, i8 zeroext %167, i8 zeroext 1, %struct.PICK_MODE_CONTEXT* %257)
  %258 = add nsw i32 %23, %5
  %259 = load i32, i32* %177, align 4
  %260 = icmp slt i32 %258, %259
  %261 = icmp ugt i8 %7, 3
  %262 = and i1 %261, %260
  br i1 %262, label %414, label %602

263:                                              ; preds = %184
  %264 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 3
  %265 = tail call %struct.PICK_MODE_CONTEXT* @av1_alloc_pmc(%struct.AV1_COMP* %0, i8 zeroext %167, %struct.PC_TREE_SHARED_BUFFERS* %264) #4
  %266 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 4, i64 0
  store %struct.PICK_MODE_CONTEXT* %265, %struct.PICK_MODE_CONTEXT** %266, align 8
  %267 = tail call %struct.PICK_MODE_CONTEXT* @av1_alloc_pmc(%struct.AV1_COMP* %0, i8 zeroext %167, %struct.PC_TREE_SHARED_BUFFERS* %264) #4
  %268 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 4, i64 1
  store %struct.PICK_MODE_CONTEXT* %267, %struct.PICK_MODE_CONTEXT** %268, align 8
  %269 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %266, align 8
  call fastcc void @pick_sb_modes_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %18, i32 %5, i32 %6, %struct.RD_STATS* nonnull %10, i8 zeroext %167, %struct.PICK_MODE_CONTEXT* %269)
  %270 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %266, align 8
  call fastcc void @encode_b_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i32 %5, i32 %6, i8 zeroext 0, i8 zeroext %167, i8 zeroext 2, %struct.PICK_MODE_CONTEXT* %270)
  %271 = add nsw i32 %23, %6
  %272 = load i32, i32* %181, align 8
  %273 = icmp slt i32 %271, %272
  %274 = icmp ugt i8 %7, 3
  %275 = and i1 %274, %273
  br i1 %275, label %411, label %602

276:                                              ; preds = %184
  %277 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 3
  %278 = tail call %struct.PICK_MODE_CONTEXT* @av1_alloc_pmc(%struct.AV1_COMP* %0, i8 zeroext %7, %struct.PC_TREE_SHARED_BUFFERS* %277) #4
  %279 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 2
  store %struct.PICK_MODE_CONTEXT* %278, %struct.PICK_MODE_CONTEXT** %279, align 8
  %280 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 4
  %281 = load i32, i32* %280, align 8
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %409, label %283

283:                                              ; preds = %276
  switch i8 %7, label %409 [
    i8 9, label %284
    i8 6, label %284
  ]

284:                                              ; preds = %283, %283
  %285 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %17, i64 0, i32 0, i32 0
  %286 = load i8, i8* %285, align 16
  %287 = and i8 %286, -3
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %409, label %289

289:                                              ; preds = %284
  %290 = bitcast %struct.RD_STATS* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %290) #4
  %291 = bitcast %struct.RD_STATS* %11 to i64*
  store i64 -6148914691236517206, i64* %291, align 8
  %292 = bitcast %struct.RD_STATS* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %292) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %292, i8 -86, i64 40, i1 false)
  %293 = getelementptr inbounds %struct.RD_SEARCH_MACROBLOCK_CONTEXT, %struct.RD_SEARCH_MACROBLOCK_CONTEXT* %13, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 336, i8* nonnull %293) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %293, i8 -86, i64 336, i1 false)
  %294 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %11, i64 0, i32 0
  store i32 2147483647, i32* %294, align 8
  %295 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %11, i64 0, i32 1
  %296 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %11, i64 0, i32 2
  %297 = bitcast i64* %295 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %297, align 8
  %298 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %11, i64 0, i32 3
  store i64 9223372036854775807, i64* %298, align 8
  %299 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %11, i64 0, i32 4
  store i32 0, i32* %299, align 8
  %300 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %11, i64 0, i32 5
  store i32 0, i32* %300, align 4
  call void @av1_save_context(%struct.macroblock* %18, %struct.RD_SEARCH_MACROBLOCK_CONTEXT* nonnull %13, i32 %5, i32 %6, i8 zeroext %7, i32 3) #4
  switch i8 %7, label %306 [
    i8 9, label %301
    i8 6, label %302
  ]

301:                                              ; preds = %289
  br label %302

302:                                              ; preds = %289, %301
  %303 = phi i64 [ 3, %301 ], [ 2, %289 ]
  %304 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* @subsize_lookup, i64 0, i64 3, i64 %303
  %305 = load i8, i8* %304, align 1
  br label %306

306:                                              ; preds = %289, %302
  %307 = phi i8 [ %305, %302 ], [ -1, %289 ]
  %308 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %279, align 8
  call fastcc void @pick_sb_modes_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %18, i32 %5, i32 %6, %struct.RD_STATS* nonnull %11, i8 zeroext %7, %struct.PICK_MODE_CONTEXT* %308)
  %309 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 20, i32 0, i64 %169, i64 0
  %310 = load i32, i32* %309, align 4
  %311 = load i32, i32* %294, align 8
  %312 = add nsw i32 %311, %310
  store i32 %312, i32* %294, align 8
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 17
  %315 = load i32, i32* %314, align 8
  %316 = sext i32 %315 to i64
  %317 = mul nsw i64 %316, %313
  %318 = add nsw i64 %317, 256
  %319 = ashr i64 %318, 9
  %320 = load i64, i64* %295, align 8
  %321 = shl i64 %320, 7
  %322 = add nsw i64 %319, %321
  store i64 %322, i64* %296, align 8
  call void @av1_restore_context(%struct.macroblock* %18, %struct.RD_SEARCH_MACROBLOCK_CONTEXT* nonnull %13, i32 %5, i32 %6, i8 zeroext %7, i32 3) #4
  %323 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %12, i64 0, i32 0
  %324 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %12, i64 0, i32 1
  %325 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %12, i64 0, i32 3
  %326 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %12, i64 0, i32 4
  %327 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %12, i64 0, i32 5
  %328 = bitcast i64* %324 to <2 x i64>*
  br label %345

329:                                              ; preds = %386
  %330 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 20, i32 0, i64 %169, i64 3
  %331 = load i32, i32* %330, align 4
  %332 = add nsw i32 %331, %388
  %333 = sext i32 %332 to i64
  %334 = load i32, i32* %314, align 8
  %335 = sext i32 %334 to i64
  %336 = mul nsw i64 %333, %335
  %337 = add nsw i64 %336, 256
  %338 = ashr i64 %337, 9
  %339 = shl i64 %387, 7
  %340 = add nsw i64 %338, %339
  call void @av1_restore_context(%struct.macroblock* %18, %struct.RD_SEARCH_MACROBLOCK_CONTEXT* nonnull %13, i32 %5, i32 %6, i8 zeroext %7, i32 3) #4
  %341 = load i64, i64* %296, align 8
  %342 = icmp slt i64 %341, %340
  %343 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %3, align 8
  %344 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %343, i64 0, i32 0
  br i1 %342, label %391, label %393

345:                                              ; preds = %386, %306
  %346 = phi i64 [ 0, %306 ], [ %389, %386 ]
  %347 = phi i32 [ 0, %306 ], [ %388, %386 ]
  %348 = phi i64 [ 0, %306 ], [ %387, %386 ]
  store i32 2147483647, i32* %323, align 8
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %328, align 8
  store i64 9223372036854775807, i64* %325, align 8
  store i32 0, i32* %326, align 8
  store i32 0, i32* %327, align 4
  %349 = trunc i64 %346 to i32
  %350 = and i32 %349, 1
  %351 = mul nuw nsw i32 %350, %23
  %352 = lshr i32 %349, 1
  %353 = mul nsw i32 %352, %23
  %354 = add nsw i32 %353, %5
  %355 = load i32, i32* %177, align 4
  %356 = icmp slt i32 %354, %355
  br i1 %356, label %357, label %386

357:                                              ; preds = %345
  %358 = add nsw i32 %351, %6
  %359 = load i32, i32* %181, align 8
  %360 = icmp slt i32 %358, %359
  br i1 %360, label %361, label %386

361:                                              ; preds = %357
  %362 = load i8**, i8*** %186, align 16
  %363 = load i32, i32* %188, align 4
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds i8*, i8** %362, i64 %364
  %366 = load i8*, i8** %365, align 8
  %367 = getelementptr inbounds i8, i8* %366, i64 %193
  %368 = zext i32 %351 to i64
  %369 = getelementptr inbounds i8, i8* %367, i64 %368
  store i8* %369, i8** %195, align 16
  %370 = and i32 %354, 31
  %371 = zext i32 %370 to i64
  %372 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 29, i64 %371
  store i8* %372, i8** %199, align 8
  %373 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 11, i64 %346
  %374 = load %struct.PC_TREE*, %struct.PC_TREE** %373, align 8
  %375 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %374, i64 0, i32 0
  store i8 0, i8* %375, align 8
  %376 = load %struct.PC_TREE*, %struct.PC_TREE** %373, align 8
  %377 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %376, i64 0, i32 2
  %378 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %377, align 8
  call fastcc void @pick_sb_modes_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %18, i32 %354, i32 %358, %struct.RD_STATS* nonnull %12, i8 zeroext %307, %struct.PICK_MODE_CONTEXT* %378)
  %379 = load i32, i32* %323, align 8
  %380 = add nsw i32 %379, %347
  %381 = load i64, i64* %324, align 8
  %382 = add nsw i64 %381, %348
  %383 = load %struct.PC_TREE*, %struct.PC_TREE** %373, align 8
  %384 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %383, i64 0, i32 2
  %385 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %384, align 8
  call fastcc void @encode_b_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i32 %354, i32 %358, i8 zeroext 1, i8 zeroext %307, i8 zeroext 0, %struct.PICK_MODE_CONTEXT* %385)
  br label %386

386:                                              ; preds = %345, %357, %361
  %387 = phi i64 [ %382, %361 ], [ %348, %357 ], [ %348, %345 ]
  %388 = phi i32 [ %380, %361 ], [ %347, %357 ], [ %347, %345 ]
  %389 = add nuw nsw i64 %346, 1
  %390 = icmp eq i64 %389, 4
  br i1 %390, label %329, label %345

391:                                              ; preds = %329
  store i8 %7, i8* %344, align 8
  store i8 0, i8* %185, align 8
  %392 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %279, align 8
  call fastcc void @encode_b_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i32 %5, i32 %6, i8 zeroext 0, i8 zeroext %7, i8 zeroext 0, %struct.PICK_MODE_CONTEXT* %392)
  br label %408

393:                                              ; preds = %329
  store i8 %307, i8* %344, align 8
  store i8 3, i8* %185, align 8
  %394 = load i32, i32* %177, align 4
  %395 = icmp sgt i32 %394, %5
  br i1 %395, label %396, label %405

396:                                              ; preds = %393
  %397 = load i32, i32* %181, align 8
  %398 = icmp sgt i32 %397, %6
  br i1 %398, label %399, label %405

399:                                              ; preds = %396
  %400 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 11, i64 0
  %401 = load %struct.PC_TREE*, %struct.PC_TREE** %400, align 8
  %402 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %401, i64 0, i32 2
  %403 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %402, align 8
  call fastcc void @encode_b_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i32 %5, i32 %6, i8 zeroext 0, i8 zeroext %307, i8 zeroext 0, %struct.PICK_MODE_CONTEXT* %403)
  %404 = load i32, i32* %177, align 4
  br label %405

405:                                              ; preds = %393, %396, %399
  %406 = phi i32 [ %394, %393 ], [ %394, %396 ], [ %404, %399 ]
  %407 = icmp sgt i32 %406, %5
  br i1 %407, label %603, label %613

408:                                              ; preds = %626, %629, %633, %391
  call void @llvm.lifetime.end.p0i8(i64 336, i8* nonnull %293) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %292) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %290) #4
  br label %602

409:                                              ; preds = %283, %284, %276
  call fastcc void @pick_sb_modes_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %18, i32 %5, i32 %6, %struct.RD_STATS* nonnull %10, i8 zeroext %7, %struct.PICK_MODE_CONTEXT* %278)
  %410 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %279, align 8
  call fastcc void @encode_b_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i32 %5, i32 %6, i8 zeroext 0, i8 zeroext %7, i8 zeroext 0, %struct.PICK_MODE_CONTEXT* %410)
  br label %602

411:                                              ; preds = %263
  %412 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %268, align 8
  call fastcc void @pick_sb_modes_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %18, i32 %5, i32 %271, %struct.RD_STATS* nonnull %10, i8 zeroext %167, %struct.PICK_MODE_CONTEXT* %412)
  %413 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %268, align 8
  call fastcc void @encode_b_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i32 %5, i32 %271, i8 zeroext 0, i8 zeroext %167, i8 zeroext 2, %struct.PICK_MODE_CONTEXT* %413)
  br label %602

414:                                              ; preds = %250
  %415 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %255, align 8
  call fastcc void @pick_sb_modes_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %18, i32 %258, i32 %6, %struct.RD_STATS* nonnull %10, i8 zeroext %167, %struct.PICK_MODE_CONTEXT* %415)
  %416 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %255, align 8
  call fastcc void @encode_b_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i32 %258, i32 %6, i8 zeroext 0, i8 zeroext %167, i8 zeroext 1, %struct.PICK_MODE_CONTEXT* %416)
  br label %602

417:                                              ; preds = %234
  %418 = tail call i32 @av1_is_leaf_split_partition(%struct.AV1Common* %17, i32 %5, i32 %6, i8 zeroext %7) #4
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %589, label %420

420:                                              ; preds = %417
  %421 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %17, i64 0, i32 0, i32 0
  %422 = load i8, i8* %421, align 16
  %423 = and i8 %422, -3
  %424 = icmp ne i8 %423, 0
  %425 = icmp ult i8 %7, 13
  %426 = and i1 %425, %424
  br i1 %426, label %427, label %589

427:                                              ; preds = %420
  %428 = getelementptr inbounds %struct.RD_SEARCH_MACROBLOCK_CONTEXT, %struct.RD_SEARCH_MACROBLOCK_CONTEXT* %14, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 336, i8* nonnull %428) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %428, i8 -86, i64 336, i1 false)
  %429 = bitcast %struct.RD_STATS* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %429) #4
  %430 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %15, i64 0, i32 0
  %431 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %15, i64 0, i32 1
  %432 = bitcast %struct.RD_STATS* %15 to <2 x i64>*
  store <2 x i64> <i64 -6148914691236517206, i64 9223372036854775807>, <2 x i64>* %432, align 16
  store i32 2147483647, i32* %430, align 16
  %433 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %15, i64 0, i32 2
  %434 = bitcast i64* %433 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %434, align 16
  %435 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %15, i64 0, i32 4
  store i32 0, i32* %435, align 16
  %436 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %15, i64 0, i32 5
  store i32 0, i32* %436, align 4
  call void @av1_save_context(%struct.macroblock* %18, %struct.RD_SEARCH_MACROBLOCK_CONTEXT* nonnull %14, i32 %5, i32 %6, i8 zeroext %7, i32 3) #4
  %437 = load i8**, i8*** %186, align 16
  %438 = load i32, i32* %188, align 4
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds i8*, i8** %437, i64 %439
  %441 = load i8*, i8** %440, align 8
  %442 = getelementptr inbounds i8, i8* %441, i64 %193
  store i8* %442, i8** %195, align 16
  store i8* %198, i8** %199, align 8
  store i8 0, i8* %185, align 8
  %443 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 3
  %444 = call %struct.PICK_MODE_CONTEXT* @av1_alloc_pmc(%struct.AV1_COMP* %0, i8 zeroext %7, %struct.PC_TREE_SHARED_BUFFERS* %443) #4
  %445 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 2
  store %struct.PICK_MODE_CONTEXT* %444, %struct.PICK_MODE_CONTEXT** %445, align 8
  call fastcc void @pick_sb_modes_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %18, i32 %5, i32 %6, %struct.RD_STATS* nonnull %15, i8 zeroext %7, %struct.PICK_MODE_CONTEXT* %444)
  %446 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 20, i32 0, i64 %169, i64 0
  %447 = load i32, i32* %446, align 4
  %448 = load i32, i32* %430, align 16
  %449 = add nsw i32 %448, %447
  store i32 %449, i32* %430, align 16
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 17
  %452 = load i32, i32* %451, align 8
  %453 = sext i32 %452 to i64
  %454 = mul nsw i64 %453, %450
  %455 = add nsw i64 %454, 256
  %456 = ashr i64 %455, 9
  %457 = load i64, i64* %431, align 8
  %458 = shl i64 %457, 7
  %459 = add nsw i64 %456, %458
  store i64 %459, i64* %433, align 16
  call void @av1_restore_context(%struct.macroblock* %18, %struct.RD_SEARCH_MACROBLOCK_CONTEXT* nonnull %14, i32 %5, i32 %6, i8 zeroext %7, i32 3) #4
  %460 = load i32, i32* %247, align 4
  %461 = icmp eq i32 %460, 2
  %462 = load i32, i32* %435, align 16
  %463 = icmp eq i32 %462, 1
  %464 = and i1 %461, %463
  br i1 %464, label %465, label %470

465:                                              ; preds = %427
  %466 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %445, align 8
  %467 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %466, i64 0, i32 0, i32 2
  %468 = load i8, i8* %467, align 2
  %469 = icmp eq i8 %468, 16
  br i1 %469, label %470, label %547

470:                                              ; preds = %427, %465
  %471 = bitcast %struct.RD_STATS* %16 to i8*
  %472 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %16, i64 0, i32 0
  %473 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %16, i64 0, i32 1
  %474 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %16, i64 0, i32 2
  %475 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %16, i64 0, i32 4
  %476 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %16, i64 0, i32 5
  %477 = bitcast %struct.RD_STATS* %16 to <2 x i64>*
  %478 = bitcast i64* %474 to <2 x i64>*
  br label %491

479:                                              ; preds = %542
  call void @av1_restore_context(%struct.macroblock* %18, %struct.RD_SEARCH_MACROBLOCK_CONTEXT* nonnull %14, i32 %5, i32 %6, i8 zeroext %7, i32 3) #4
  %480 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 20, i32 0, i64 %169, i64 3
  %481 = load i32, i32* %480, align 4
  %482 = add nsw i32 %481, %543
  %483 = sext i32 %482 to i64
  %484 = load i32, i32* %451, align 8
  %485 = sext i32 %484 to i64
  %486 = mul nsw i64 %483, %485
  %487 = add nsw i64 %486, 256
  %488 = ashr i64 %487, 9
  %489 = shl i64 %544, 7
  %490 = add nsw i64 %488, %489
  br label %547

491:                                              ; preds = %542, %470
  %492 = phi i64 [ 0, %470 ], [ %545, %542 ]
  %493 = phi i64 [ 0, %470 ], [ %544, %542 ]
  %494 = phi i32 [ 0, %470 ], [ %543, %542 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %471) #4
  store <2 x i64> <i64 -6148914691236517206, i64 9223372036854775807>, <2 x i64>* %477, align 16
  store i32 2147483647, i32* %472, align 16
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %478, align 16
  store i32 0, i32* %475, align 16
  store i32 0, i32* %476, align 4
  %495 = trunc i64 %492 to i32
  %496 = and i32 %495, 1
  %497 = mul nuw nsw i32 %496, %23
  %498 = lshr i32 %495, 1
  %499 = mul nsw i32 %498, %23
  %500 = add nsw i32 %499, %5
  %501 = load i32, i32* %177, align 4
  %502 = icmp slt i32 %500, %501
  br i1 %502, label %503, label %542

503:                                              ; preds = %491
  %504 = add nsw i32 %497, %6
  %505 = load i32, i32* %181, align 8
  %506 = icmp slt i32 %504, %505
  br i1 %506, label %507, label %542

507:                                              ; preds = %503
  %508 = load i8**, i8*** %186, align 16
  %509 = load i32, i32* %188, align 4
  %510 = sext i32 %509 to i64
  %511 = getelementptr inbounds i8*, i8** %508, i64 %510
  %512 = load i8*, i8** %511, align 8
  %513 = getelementptr inbounds i8, i8* %512, i64 %193
  %514 = zext i32 %497 to i64
  %515 = getelementptr inbounds i8, i8* %513, i64 %514
  store i8* %515, i8** %195, align 16
  %516 = and i32 %500, 31
  %517 = zext i32 %516 to i64
  %518 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 29, i64 %517
  store i8* %518, i8** %199, align 8
  %519 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 11, i64 %492
  %520 = load %struct.PC_TREE*, %struct.PC_TREE** %519, align 8
  %521 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %520, i64 0, i32 2
  %522 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %521, align 8
  %523 = icmp eq %struct.PICK_MODE_CONTEXT* %522, null
  br i1 %523, label %524, label %529

524:                                              ; preds = %507
  %525 = call %struct.PICK_MODE_CONTEXT* @av1_alloc_pmc(%struct.AV1_COMP* %0, i8 zeroext %167, %struct.PC_TREE_SHARED_BUFFERS* %443) #4
  %526 = load %struct.PC_TREE*, %struct.PC_TREE** %519, align 8
  %527 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %526, i64 0, i32 2
  store %struct.PICK_MODE_CONTEXT* %525, %struct.PICK_MODE_CONTEXT** %527, align 8
  %528 = load %struct.PC_TREE*, %struct.PC_TREE** %519, align 8
  br label %529

529:                                              ; preds = %524, %507
  %530 = phi %struct.PC_TREE* [ %528, %524 ], [ %520, %507 ]
  %531 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %530, i64 0, i32 0
  store i8 0, i8* %531, align 8
  %532 = load %struct.PC_TREE*, %struct.PC_TREE** %519, align 8
  %533 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %532, i64 0, i32 2
  %534 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %533, align 8
  call fastcc void @pick_sb_modes_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.macroblock* %18, i32 %500, i32 %504, %struct.RD_STATS* nonnull %16, i8 zeroext %167, %struct.PICK_MODE_CONTEXT* %534)
  %535 = load i32, i32* %472, align 16
  %536 = add nsw i32 %535, %494
  %537 = load i64, i64* %473, align 8
  %538 = add nsw i64 %537, %493
  %539 = load %struct.PC_TREE*, %struct.PC_TREE** %519, align 8
  %540 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %539, i64 0, i32 2
  %541 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %540, align 8
  call fastcc void @encode_b_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i32 %500, i32 %504, i8 zeroext 1, i8 zeroext %167, i8 zeroext 0, %struct.PICK_MODE_CONTEXT* %541)
  br label %542

542:                                              ; preds = %491, %503, %529
  %543 = phi i32 [ %536, %529 ], [ %494, %503 ], [ %494, %491 ]
  %544 = phi i64 [ %538, %529 ], [ %493, %503 ], [ %493, %491 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %471) #4
  %545 = add nuw nsw i64 %492, 1
  %546 = icmp eq i64 %545, 4
  br i1 %546, label %479, label %491

547:                                              ; preds = %479, %465
  %548 = phi i64 [ %490, %479 ], [ 9223372036854775807, %465 ]
  %549 = load i64, i64* %433, align 16
  %550 = icmp slt i64 %549, %548
  %551 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %3, align 8
  %552 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %551, i64 0, i32 0
  br i1 %550, label %553, label %555

553:                                              ; preds = %547
  store i8 %7, i8* %552, align 8
  store i8 0, i8* %185, align 8
  %554 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %445, align 8
  call fastcc void @encode_b_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i32 %5, i32 %6, i8 zeroext 0, i8 zeroext %7, i8 zeroext 3, %struct.PICK_MODE_CONTEXT* %554)
  br label %588

555:                                              ; preds = %547
  store i8 %167, i8* %552, align 8
  store i8 3, i8* %185, align 8
  br label %556

556:                                              ; preds = %585, %555
  %557 = phi i64 [ 0, %555 ], [ %586, %585 ]
  %558 = trunc i64 %557 to i32
  %559 = lshr i32 %558, 1
  %560 = mul nsw i32 %559, %23
  %561 = add nsw i32 %560, %5
  %562 = load i32, i32* %177, align 4
  %563 = icmp slt i32 %561, %562
  br i1 %563, label %564, label %585

564:                                              ; preds = %556
  %565 = and i32 %558, 1
  %566 = mul nuw nsw i32 %565, %23
  %567 = add nsw i32 %566, %6
  %568 = load i32, i32* %181, align 8
  %569 = icmp slt i32 %567, %568
  br i1 %569, label %570, label %585

570:                                              ; preds = %564
  %571 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 11, i64 %557
  %572 = load %struct.PC_TREE*, %struct.PC_TREE** %571, align 8
  %573 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %572, i64 0, i32 2
  %574 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %573, align 8
  %575 = icmp eq %struct.PICK_MODE_CONTEXT* %574, null
  br i1 %575, label %576, label %583

576:                                              ; preds = %570
  %577 = call %struct.PICK_MODE_CONTEXT* @av1_alloc_pmc(%struct.AV1_COMP* %0, i8 zeroext %167, %struct.PC_TREE_SHARED_BUFFERS* %443) #4
  %578 = load %struct.PC_TREE*, %struct.PC_TREE** %571, align 8
  %579 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %578, i64 0, i32 2
  store %struct.PICK_MODE_CONTEXT* %577, %struct.PICK_MODE_CONTEXT** %579, align 8
  %580 = load %struct.PC_TREE*, %struct.PC_TREE** %571, align 8
  %581 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %580, i64 0, i32 2
  %582 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %581, align 8
  br label %583

583:                                              ; preds = %576, %570
  %584 = phi %struct.PICK_MODE_CONTEXT* [ %582, %576 ], [ %574, %570 ]
  call fastcc void @encode_b_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i32 %561, i32 %567, i8 zeroext 0, i8 zeroext %167, i8 zeroext 0, %struct.PICK_MODE_CONTEXT* %584)
  br label %585

585:                                              ; preds = %556, %564, %583
  %586 = add nuw nsw i64 %557, 1
  %587 = icmp eq i64 %586, 4
  br i1 %587, label %588, label %556

588:                                              ; preds = %585, %553
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %429) #4
  call void @llvm.lifetime.end.p0i8(i64 336, i8* nonnull %428) #4
  br label %602

589:                                              ; preds = %420, %417, %234
  %590 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 21, i32 11
  %591 = load i32, i32* %177, align 4
  %592 = icmp sgt i32 %591, %5
  br i1 %592, label %593, label %599

593:                                              ; preds = %589
  %594 = load i32, i32* %181, align 8
  %595 = icmp sgt i32 %594, %6
  br i1 %595, label %596, label %599

596:                                              ; preds = %593
  %597 = load %struct.PC_TREE*, %struct.PC_TREE** %236, align 8
  tail call void @av1_nonrd_use_partition(%struct.AV1_COMP* %0, %struct.ThreadData* %1, %struct.TileDataEnc* %2, %struct.MB_MODE_INFO** %3, %struct.TokenExtra** %4, i32 %5, i32 %6, i8 zeroext %167, %struct.PC_TREE* %597)
  %598 = load i32, i32* %177, align 4
  br label %599

599:                                              ; preds = %589, %593, %596
  %600 = phi i32 [ %591, %589 ], [ %591, %593 ], [ %598, %596 ]
  %601 = icmp sgt i32 %600, %5
  br i1 %601, label %638, label %647

602:                                              ; preds = %661, %664, %668, %409, %408, %411, %263, %414, %250, %588, %184, %166, %180
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %170) #4
  ret void

603:                                              ; preds = %405
  %604 = add nsw i32 %23, %6
  %605 = load i32, i32* %181, align 8
  %606 = icmp slt i32 %604, %605
  br i1 %606, label %607, label %613

607:                                              ; preds = %603
  %608 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 11, i64 1
  %609 = load %struct.PC_TREE*, %struct.PC_TREE** %608, align 8
  %610 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %609, i64 0, i32 2
  %611 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %610, align 8
  call fastcc void @encode_b_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i32 %5, i32 %604, i8 zeroext 0, i8 zeroext %307, i8 zeroext 0, %struct.PICK_MODE_CONTEXT* %611)
  %612 = load i32, i32* %177, align 4
  br label %613

613:                                              ; preds = %607, %603, %405
  %614 = phi i32 [ %612, %607 ], [ %406, %603 ], [ %406, %405 ]
  %615 = add nsw i32 %23, %5
  %616 = icmp slt i32 %615, %614
  br i1 %616, label %617, label %626

617:                                              ; preds = %613
  %618 = load i32, i32* %181, align 8
  %619 = icmp sgt i32 %618, %6
  br i1 %619, label %620, label %626

620:                                              ; preds = %617
  %621 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 11, i64 2
  %622 = load %struct.PC_TREE*, %struct.PC_TREE** %621, align 8
  %623 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %622, i64 0, i32 2
  %624 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %623, align 8
  call fastcc void @encode_b_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i32 %615, i32 %6, i8 zeroext 0, i8 zeroext %307, i8 zeroext 0, %struct.PICK_MODE_CONTEXT* %624)
  %625 = load i32, i32* %177, align 4
  br label %626

626:                                              ; preds = %620, %617, %613
  %627 = phi i32 [ %625, %620 ], [ %614, %617 ], [ %614, %613 ]
  %628 = icmp slt i32 %615, %627
  br i1 %628, label %629, label %408

629:                                              ; preds = %626
  %630 = add nsw i32 %23, %6
  %631 = load i32, i32* %181, align 8
  %632 = icmp slt i32 %630, %631
  br i1 %632, label %633, label %408

633:                                              ; preds = %629
  %634 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %8, i64 0, i32 11, i64 3
  %635 = load %struct.PC_TREE*, %struct.PC_TREE** %634, align 8
  %636 = getelementptr inbounds %struct.PC_TREE, %struct.PC_TREE* %635, i64 0, i32 2
  %637 = load %struct.PICK_MODE_CONTEXT*, %struct.PICK_MODE_CONTEXT** %636, align 8
  call fastcc void @encode_b_nonrd(%struct.AV1_COMP* %0, %struct.TileDataEnc* %2, %struct.ThreadData* %1, %struct.TokenExtra** %4, i32 %615, i32 %630, i8 zeroext 0, i8 zeroext %307, i8 zeroext 0, %struct.PICK_MODE_CONTEXT* %637)
  br label %408

638:                                              ; preds = %599
  %639 = add nsw i32 %23, %6
  %640 = load i32, i32* %181, align 8
  %641 = icmp slt i32 %639, %640
  br i1 %641, label %642, label %647

642:                                              ; preds = %638
  %643 = zext i8 %22 to i64
  %644 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %3, i64 %643
  %645 = load %struct.PC_TREE*, %struct.PC_TREE** %239, align 8
  tail call void @av1_nonrd_use_partition(%struct.AV1_COMP* %0, %struct.ThreadData* %1, %struct.TileDataEnc* %2, %struct.MB_MODE_INFO** %644, %struct.TokenExtra** %4, i32 %5, i32 %639, i8 zeroext %167, %struct.PC_TREE* %645)
  %646 = load i32, i32* %177, align 4
  br label %647

647:                                              ; preds = %642, %638, %599
  %648 = phi i32 [ %646, %642 ], [ %600, %638 ], [ %600, %599 ]
  %649 = add nsw i32 %23, %5
  %650 = icmp slt i32 %649, %648
  br i1 %650, label %651, label %661

651:                                              ; preds = %647
  %652 = load i32, i32* %181, align 8
  %653 = icmp sgt i32 %652, %6
  br i1 %653, label %654, label %661

654:                                              ; preds = %651
  %655 = load i32, i32* %590, align 4
  %656 = mul nsw i32 %655, %23
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %3, i64 %657
  %659 = load %struct.PC_TREE*, %struct.PC_TREE** %242, align 8
  tail call void @av1_nonrd_use_partition(%struct.AV1_COMP* %0, %struct.ThreadData* %1, %struct.TileDataEnc* %2, %struct.MB_MODE_INFO** %658, %struct.TokenExtra** %4, i32 %649, i32 %6, i8 zeroext %167, %struct.PC_TREE* %659)
  %660 = load i32, i32* %177, align 4
  br label %661

661:                                              ; preds = %654, %651, %647
  %662 = phi i32 [ %660, %654 ], [ %648, %651 ], [ %648, %647 ]
  %663 = icmp slt i32 %649, %662
  br i1 %663, label %664, label %602

664:                                              ; preds = %661
  %665 = add nsw i32 %23, %6
  %666 = load i32, i32* %181, align 8
  %667 = icmp slt i32 %665, %666
  br i1 %667, label %668, label %602

668:                                              ; preds = %664
  %669 = load i32, i32* %590, align 4
  %670 = mul nsw i32 %669, %23
  %671 = sext i32 %670 to i64
  %672 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %3, i64 %671
  %673 = zext i8 %22 to i64
  %674 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %672, i64 %673
  %675 = load %struct.PC_TREE*, %struct.PC_TREE** %245, align 8
  tail call void @av1_nonrd_use_partition(%struct.AV1_COMP* %0, %struct.ThreadData* %1, %struct.TileDataEnc* %2, %struct.MB_MODE_INFO** %674, %struct.TokenExtra** %4, i32 %649, i32 %665, i8 zeroext %167, %struct.PC_TREE* %675)
  br label %602
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @pick_sb_modes_nonrd(%struct.AV1_COMP*, %struct.TileDataEnc*, %struct.macroblock*, i32, i32, %struct.RD_STATS*, i8 zeroext, %struct.PICK_MODE_CONTEXT*) unnamed_addr #2 {
  %9 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %1, i64 0, i32 0
  tail call void @av1_set_offsets(%struct.AV1_COMP* %0, %struct.TileInfo* %9, %struct.macroblock* %2, i32 %3, i32 %4, i8 zeroext %6)
  %10 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 35
  %11 = load %struct.SequenceHeader*, %struct.SequenceHeader** %10, align 16
  %12 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %11, i64 0, i32 27
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 6
  %16 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %15, align 8
  %17 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %16, align 8
  %18 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 5, i32 5
  %19 = load i8, i8* %18, align 8
  %20 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %1, i64 0, i32 6
  %21 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %11, i64 0, i32 7
  %22 = load i8, i8* %21, align 4
  %23 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %11, i64 0, i32 9
  %24 = load i32, i32* %23, align 4
  %25 = zext i8 %22 to i64
  %26 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = add nsw i32 %28, -1
  %30 = and i32 %29, %3
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %8
  %33 = zext i8 %6 to i64
  %34 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  br label %56

37:                                               ; preds = %8
  %38 = and i32 %29, %4
  %39 = zext i8 %6 to i64
  %40 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = add nsw i32 %38, %42
  %44 = icmp slt i32 %43, %28
  br i1 %44, label %56, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %1, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = sub nsw i32 %3, %47
  %49 = ashr i32 %48, %24
  %50 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %1, i64 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = sub nsw i32 %4, %51
  %53 = ashr i32 %52, %24
  %54 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 61, i32 7, i32 6
  %55 = load void (%struct.AV1EncRowMultiThreadSync*, i32, i32)*, void (%struct.AV1EncRowMultiThreadSync*, i32, i32)** %54, align 8
  tail call void %55(%struct.AV1EncRowMultiThreadSync* %20, i32 %49, i32 %53) #4
  br label %56

56:                                               ; preds = %32, %37, %45
  %57 = phi i32 [ %36, %32 ], [ %42, %37 ], [ %42, %45 ]
  %58 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 58, i32 2, i64 0
  %59 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 15
  store i8* %58, i8** %59, align 8
  %60 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 16
  store i32 %57, i32* %60, align 16
  %61 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 4, i64 0
  %62 = bitcast i32** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 0, i32 3
  %65 = bitcast i32** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 5, i64 0
  %67 = bitcast i32** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 0, i32 2
  %70 = bitcast i32** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 6, i64 0
  %72 = bitcast i32** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 0, i32 1
  %75 = bitcast i32** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 7, i64 0
  %77 = bitcast i16** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 0, i32 4
  %80 = bitcast i16** %79 to i64*
  store i64 %78, i64* %80, align 8
  %81 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 8, i64 0
  %82 = bitcast i8** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 0, i32 5
  %85 = bitcast i8** %84 to i64*
  store i64 %83, i64* %85, align 8
  br i1 %14, label %144, label %86

86:                                               ; preds = %56, %144
  %87 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 2, i64 0
  %88 = bitcast i8** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 0, i32 8
  %91 = bitcast i8** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 2, i64 1
  %93 = bitcast i8** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 2, i32 4, i64 1, i32 8
  %96 = bitcast i8** %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 0, i32 6
  %98 = tail call i32 @av1_get_sby_perpixel_variance(%struct.AV1_COMP* %0, %struct.buf_2d* %97, i8 zeroext %6) #4
  %99 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 60
  store i32 %98, i32* %99, align 4
  %100 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 17
  %101 = load i32, i32* %100, align 8
  tail call fastcc void @setup_block_rdmult(%struct.AV1_COMP* %0, %struct.macroblock* %2, i32 %3, i32 %4, i8 zeroext %6, i8 zeroext %19, %struct.MB_MODE_INFO* %17)
  %102 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 24
  %103 = load i32, i32* %100, align 8
  %104 = ashr i32 %103, 6
  %105 = icmp sgt i32 %104, 1
  %106 = select i1 %105, i32 %104, i32 1
  store i32 %106, i32* %102, align 4
  %107 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 0, i32 0
  %108 = load i8, i8* %107, align 16
  %109 = and i8 %108, -3
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %119

111:                                              ; preds = %86
  %112 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 19
  %113 = load i32, i32* %112, align 4
  %114 = icmp ne i32 %113, 0
  %115 = icmp ult i8 %6, 6
  %116 = and i1 %115, %114
  br i1 %116, label %117, label %118

117:                                              ; preds = %111
  tail call void @av1_rd_pick_intra_mode_sb(%struct.AV1_COMP* %0, %struct.macroblock* %2, %struct.RD_STATS* %5, i8 zeroext %6, %struct.PICK_MODE_CONTEXT* %7, i64 9223372036854775807) #4
  br label %134

118:                                              ; preds = %111
  tail call void @av1_nonrd_pick_intra_mode(%struct.AV1_COMP* %0, %struct.macroblock* %2, %struct.RD_STATS* %5, i8 zeroext %6, %struct.PICK_MODE_CONTEXT* %7) #4
  br label %134

119:                                              ; preds = %86
  %120 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23, i32 0
  %121 = load i8, i8* %120, align 4
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %133, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %17, i64 0, i32 28
  %125 = load i16, i16* %124, align 1
  %126 = and i16 %125, 7
  %127 = zext i16 %126 to i64
  %128 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23, i32 5, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = and i32 %129, 64
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %133, label %132

132:                                              ; preds = %123
  tail call void @av1_rd_pick_inter_mode_sb_seg_skip(%struct.AV1_COMP* %0, %struct.TileDataEnc* %1, %struct.macroblock* %2, i32 %3, i32 %4, %struct.RD_STATS* %5, i8 zeroext %6, %struct.PICK_MODE_CONTEXT* %7, i64 9223372036854775807) #4
  br label %134

133:                                              ; preds = %119, %123
  tail call void @av1_nonrd_pick_inter_mode_sb(%struct.AV1_COMP* %0, %struct.TileDataEnc* %1, %struct.macroblock* %2, %struct.RD_STATS* %5, i8 zeroext %6, %struct.PICK_MODE_CONTEXT* %7) #4
  br label %134

134:                                              ; preds = %118, %117, %132, %133
  store i32 %101, i32* %100, align 8
  %135 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %5, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 15, i32 0
  store i32 %136, i32* %137, align 8
  %138 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %5, i64 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 15, i32 1
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %struct.RD_STATS, %struct.RD_STATS* %5, i64 0, i32 2
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 15, i32 2
  store i64 %142, i64* %143, align 8
  ret void

144:                                              ; preds = %56
  %145 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 4, i64 1
  %146 = bitcast i32** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 1, i32 3
  %149 = bitcast i32** %148 to i64*
  store i64 %147, i64* %149, align 8
  %150 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 5, i64 1
  %151 = bitcast i32** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 1, i32 2
  %154 = bitcast i32** %153 to i64*
  store i64 %152, i64* %154, align 8
  %155 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 6, i64 1
  %156 = bitcast i32** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 1, i32 1
  %159 = bitcast i32** %158 to i64*
  store i64 %157, i64* %159, align 8
  %160 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 7, i64 1
  %161 = bitcast i16** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 1, i32 4
  %164 = bitcast i16** %163 to i64*
  store i64 %162, i64* %164, align 8
  %165 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 8, i64 1
  %166 = bitcast i8** %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 1, i32 5
  %169 = bitcast i8** %168 to i64*
  store i64 %167, i64* %169, align 8
  %170 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 4, i64 2
  %171 = bitcast i32** %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 2, i32 3
  %174 = bitcast i32** %173 to i64*
  store i64 %172, i64* %174, align 8
  %175 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 5, i64 2
  %176 = bitcast i32** %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 2, i32 2
  %179 = bitcast i32** %178 to i64*
  store i64 %177, i64* %179, align 8
  %180 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 6, i64 2
  %181 = bitcast i32** %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 2, i32 1
  %184 = bitcast i32** %183 to i64*
  store i64 %182, i64* %184, align 8
  %185 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 7, i64 2
  %186 = bitcast i16** %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 2, i32 4
  %189 = bitcast i16** %188 to i64*
  store i64 %187, i64* %189, align 8
  %190 = getelementptr inbounds %struct.PICK_MODE_CONTEXT, %struct.PICK_MODE_CONTEXT* %7, i64 0, i32 8, i64 2
  %191 = bitcast i8** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %2, i64 0, i32 0, i64 2, i32 5
  %194 = bitcast i8** %193 to i64*
  store i64 %192, i64* %194, align 8
  br label %86
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @encode_b_nonrd(%struct.AV1_COMP*, %struct.TileDataEnc* nocapture readonly, %struct.ThreadData*, %struct.TokenExtra**, i32, i32, i8 zeroext, i8 zeroext, i8 zeroext, %struct.PICK_MODE_CONTEXT*) unnamed_addr #2 {
  %11 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %1, i64 0, i32 0
  %12 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0
  tail call void @av1_set_offsets_without_segment_id(%struct.AV1_COMP* %0, %struct.TileInfo* %11, %struct.macroblock* %12, i32 %4, i32 %5, i8 zeroext %7)
  %13 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 17
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %13, align 8
  %17 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 33, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 7
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = tail call i32 @av1_get_hier_tpl_rdmult(%struct.AV1_COMP* %0, %struct.macroblock* %12, i8 zeroext %7, i32 %4, i32 %5, i32 %16) #4
  store i32 %25, i32* %13, align 8
  br label %26

26:                                               ; preds = %24, %20, %10
  %27 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 12, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 24
  tail call void @av1_set_ssim_rdmult(%struct.AV1_COMP* %0, i32* %31, i8 zeroext %7, i32 %4, i32 %5, i32* %13) #4
  br label %32

32:                                               ; preds = %26, %30
  %33 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 6
  %34 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %33, align 8
  %35 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %34, align 8
  %36 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %35, i64 0, i32 1
  store i8 %8, i8* %36, align 1
  tail call void @av1_update_state(%struct.AV1_COMP* %0, %struct.ThreadData* %2, %struct.PICK_MODE_CONTEXT* %9, i32 %4, i32 %5, i8 zeroext %7, i8 zeroext %6) #4
  %37 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8
  %38 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 35
  %39 = load %struct.SequenceHeader*, %struct.SequenceHeader** %38, align 16
  %40 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %39, i64 0, i32 32
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %39, i64 0, i32 33
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i8 %6, 0
  br i1 %44, label %45, label %87

45:                                               ; preds = %32
  %46 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 4
  %47 = load %struct.MB_MODE_INFO_EXT_FRAME*, %struct.MB_MODE_INFO_EXT_FRAME** %46, align 8
  %48 = getelementptr inbounds %struct.MB_MODE_INFO_EXT_FRAME, %struct.MB_MODE_INFO_EXT_FRAME* %47, i64 0, i32 5, i64 0
  %49 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 8, i64 0
  %50 = load i16, i16* %49, align 8
  %51 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 8, i64 1
  %52 = load i16, i16* %51, align 2
  store i16 %50, i16* %48, align 2
  %53 = getelementptr inbounds %struct.MB_MODE_INFO_EXT_FRAME, %struct.MB_MODE_INFO_EXT_FRAME* %47, i64 0, i32 5, i64 1
  store i16 %52, i16* %53, align 2
  tail call fastcc void @encode_superblock(%struct.AV1_COMP* %0, %struct.TileDataEnc* %1, %struct.ThreadData* %2, %struct.TokenExtra** %3, i8 zeroext 0, i8 zeroext %7)
  %54 = zext i8 %7 to i64
  %55 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i16
  %58 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %54
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  %61 = mul nuw i16 %60, %57
  %62 = load i16, i16* %49, align 8
  %63 = add i16 %61, %62
  store i16 %63, i16* %49, align 8
  %64 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 3
  %65 = load i8, i8* %64, align 4, !range !5
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %82, label %67

67:                                               ; preds = %45
  %68 = sext i32 %41 to i64
  %69 = sext i32 %43 to i64
  %70 = getelementptr inbounds [22 x [2 x [2 x i8]]], [22 x [2 x [2 x i8]]]* @ss_size_lookup, i64 0, i64 %54, i64 %68, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i64
  %73 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i16
  %76 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %72
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  %79 = mul nuw i16 %78, %75
  %80 = load i16, i16* %51, align 2
  %81 = add i16 %79, %80
  store i16 %81, i16* %51, align 2
  br label %82

82:                                               ; preds = %45, %67
  %83 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %1, i64 0, i32 4
  %84 = load i8, i8* %83, align 8
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %82
  tail call fastcc void @update_stats(%struct.AV1Common* %37, %struct.ThreadData* %2)
  br label %88

87:                                               ; preds = %32
  tail call fastcc void @encode_superblock(%struct.AV1_COMP* %0, %struct.TileDataEnc* %1, %struct.ThreadData* %2, %struct.TokenExtra** %3, i8 zeroext %6, i8 zeroext %7)
  br label %88

88:                                               ; preds = %87, %82, %86
  %89 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 5, i32 5
  %90 = load i8, i8* %89, align 8
  %91 = icmp eq i8 %90, 3
  br i1 %91, label %92, label %97

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %35, i64 0, i32 23
  %94 = load i8, i8* %93, align 8
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %97, label %96

96:                                               ; preds = %92
  tail call void @av1_cyclic_reset_segment_skip(%struct.AV1_COMP* %0, %struct.macroblock* %12, i32 %4, i32 %5, i8 zeroext %7) #4
  br label %97

97:                                               ; preds = %92, %96, %88
  %98 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 4
  %99 = load %struct.MB_MODE_INFO_EXT_FRAME*, %struct.MB_MODE_INFO_EXT_FRAME** %98, align 8
  %100 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %33, align 8
  %101 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %100, align 8
  %102 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %101, i64 0, i32 6, i64 0
  %103 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %101, i64 0, i32 6, i64 1
  %104 = load i8, i8* %103, align 1
  %105 = icmp sgt i8 %104, 0
  %106 = load i8, i8* %102, align 1
  br i1 %105, label %107, label %137

107:                                              ; preds = %97
  %108 = icmp slt i8 %106, 5
  %109 = icmp sgt i8 %104, 4
  %110 = and i1 %109, %108
  br i1 %110, label %133, label %111

111:                                              ; preds = %107
  switch i8 %106, label %133 [
    i8 1, label %112
    i8 5, label %115
    i8 2, label %119
    i8 3, label %123
    i8 6, label %125
  ]

112:                                              ; preds = %111
  %113 = add i8 %104, -2
  %114 = icmp ult i8 %113, 3
  br i1 %114, label %130, label %133

115:                                              ; preds = %111
  %116 = icmp eq i8 %104, 6
  %117 = select i1 %116, i8 7, i8 -1
  %118 = icmp eq i8 %104, 7
  br i1 %118, label %130, label %127

119:                                              ; preds = %111
  %120 = icmp eq i8 %104, 4
  %121 = select i1 %120, i8 5, i8 -1
  %122 = icmp eq i8 %104, 3
  br i1 %122, label %130, label %127

123:                                              ; preds = %111
  %124 = icmp eq i8 %104, 4
  br i1 %124, label %130, label %133

125:                                              ; preds = %111
  %126 = icmp eq i8 %104, 7
  br i1 %126, label %130, label %133

127:                                              ; preds = %119, %115
  %128 = phi i8 [ %117, %115 ], [ %121, %119 ]
  %129 = icmp sgt i8 %128, -1
  br i1 %129, label %130, label %133

130:                                              ; preds = %112, %127, %125, %123, %119, %115
  %131 = phi i8 [ %128, %127 ], [ 8, %125 ], [ 6, %123 ], [ 3, %115 ], [ 4, %119 ], [ %113, %112 ]
  %132 = add nuw nsw i8 %131, 20
  br label %137

133:                                              ; preds = %112, %127, %125, %123, %111, %107
  %134 = shl i8 %104, 2
  %135 = add i8 %134, -13
  %136 = add i8 %135, %106
  br label %137

137:                                              ; preds = %97, %130, %133
  %138 = phi i8 [ %132, %130 ], [ %136, %133 ], [ %106, %97 ]
  %139 = bitcast %struct.MB_MODE_INFO_EXT_FRAME* %99 to i8*
  %140 = zext i8 %138 to i64
  %141 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 3, i32 0, i64 %140, i64 0
  %142 = bitcast %struct.candidate_mv* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 4 %142, i64 32, i1 false) #4
  %143 = getelementptr inbounds %struct.MB_MODE_INFO_EXT_FRAME, %struct.MB_MODE_INFO_EXT_FRAME* %99, i64 0, i32 1, i64 0
  %144 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 3, i32 1, i64 %140, i64 0
  %145 = bitcast i16* %144 to i64*
  %146 = bitcast i16* %143 to i64*
  %147 = load i64, i64* %145, align 4
  store i64 %147, i64* %146, align 4
  %148 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 3, i32 4, i64 %140
  %149 = load i16, i16* %148, align 2
  %150 = getelementptr inbounds %struct.MB_MODE_INFO_EXT_FRAME, %struct.MB_MODE_INFO_EXT_FRAME* %99, i64 0, i32 4
  store i16 %149, i16* %150, align 4
  %151 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 3, i32 2, i64 %140
  %152 = load i8, i8* %151, align 1
  %153 = getelementptr inbounds %struct.MB_MODE_INFO_EXT_FRAME, %struct.MB_MODE_INFO_EXT_FRAME* %99, i64 0, i32 2
  store i8 %152, i8* %153, align 4
  %154 = getelementptr inbounds %struct.MB_MODE_INFO_EXT_FRAME, %struct.MB_MODE_INFO_EXT_FRAME* %99, i64 0, i32 3, i64 0
  %155 = bitcast %union.int_mv* %154 to i8*
  %156 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 3, i32 3, i64 0
  %157 = bitcast %union.int_mv* %156 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %155, i8* align 4 %157, i64 32, i1 false) #4
  store i32 %14, i32* %13, align 8
  ret void
}

declare i32 @av1_is_leaf_split_partition(%struct.AV1Common*, i32, i32, i8 zeroext) local_unnamed_addr #3

declare i32 @av1_cyclic_refresh_get_rdmult(%struct.CYCLIC_REFRESH*) local_unnamed_addr #3

declare i32 @av1_get_hier_tpl_rdmult(%struct.AV1_COMP*, %struct.macroblock*, i8 zeroext, i32, i32, i32) local_unnamed_addr #3

declare void @av1_set_ssim_rdmult(%struct.AV1_COMP*, i32*, i8 zeroext, i32, i32, i32*) local_unnamed_addr #3

declare i32 @av1_get_qindex(%struct.segmentation*, i32, i32) local_unnamed_addr #3

declare i32 @av1_compute_rd_mult(%struct.AV1_COMP*, i32) local_unnamed_addr #3

declare i32 @av1_get_sby_perpixel_variance(%struct.AV1_COMP*, %struct.buf_2d*, i8 zeroext) local_unnamed_addr #3

declare void @av1_rd_pick_intra_mode_sb(%struct.AV1_COMP*, %struct.macroblock*, %struct.RD_STATS*, i8 zeroext, %struct.PICK_MODE_CONTEXT*, i64) local_unnamed_addr #3

declare void @av1_rd_pick_inter_mode_sb_seg_skip(%struct.AV1_COMP*, %struct.TileDataEnc*, %struct.macroblock*, i32, i32, %struct.RD_STATS*, i8 zeroext, %struct.PICK_MODE_CONTEXT*, i64) local_unnamed_addr #3

declare void @av1_rd_pick_inter_mode(%struct.AV1_COMP*, %struct.TileDataEnc*, %struct.macroblock*, %struct.RD_STATS*, i8 zeroext, %struct.PICK_MODE_CONTEXT*, i64) local_unnamed_addr #3

declare void @av1_caq_select_segment(%struct.AV1_COMP*, %struct.macroblock*, i8 zeroext, i32, i32, i32) local_unnamed_addr #3

declare void @av1_encode_intra_block_plane(%struct.AV1_COMP*, %struct.macroblock*, i8 zeroext, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #3

declare void @av1_tokenize_color_map(%struct.macroblock*, i32, %struct.TokenExtra**, i8 zeroext, i8 zeroext, i8 zeroext, i32, %struct.FRAME_COUNTS*) local_unnamed_addr #3

declare i32 @av1_cost_color_map(%struct.macroblock*, i32, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #3

declare void @av1_update_intra_mb_txb_context(%struct.AV1_COMP*, %struct.ThreadData*, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #3

declare void @av1_setup_pre_planes(%struct.macroblockd*, i32, %struct.yv12_buffer_config*, i32, i32, %struct.scale_factors*, i32) local_unnamed_addr #3

declare void @av1_enc_build_inter_predictor(%struct.AV1Common*, %struct.macroblockd*, i32, i32, %struct.BUFFER_SET*, i8 zeroext, i32, i32) local_unnamed_addr #3

declare void @av1_build_obmc_inter_predictors_sb(%struct.AV1Common*, %struct.macroblockd*) local_unnamed_addr #3

declare void @av1_encode_sb(%struct.AV1_COMP*, %struct.macroblock*, i8 zeroext, i8 zeroext) local_unnamed_addr #3

declare void @av1_tokenize_sb_vartx(%struct.AV1_COMP*, %struct.ThreadData*, i8 zeroext, i8 zeroext, i32*, i8 zeroext) local_unnamed_addr #3

declare void @cfl_store_block(%struct.macroblockd*, i8 zeroext, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @update_txfm_count(%struct.macroblock* nocapture, %struct.macroblockd* nocapture readonly, i8 zeroext, i32, i32, i32, i8 zeroext) unnamed_addr #2 {
  %8 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 6
  %9 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %8, align 8
  %10 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %9, align 8
  %11 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %10, i64 0, i32 0
  %12 = load i8, i8* %11, align 8
  %13 = zext i8 %12 to i64
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 20
  %18 = load i32, i32* %17, align 16
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %7
  %21 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 4, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = add nsw i32 %22, 3
  %24 = ashr i32 %18, %23
  %25 = add nsw i32 %24, %16
  br label %26

26:                                               ; preds = %7, %20
  %27 = phi i32 [ %25, %20 ], [ %16, %7 ]
  %28 = ashr i32 %27, 2
  %29 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %13
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 18
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %26
  %36 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 4, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, 3
  %39 = ashr i32 %33, %38
  %40 = add nsw i32 %39, %31
  br label %41

41:                                               ; preds = %26, %35
  %42 = phi i32 [ %40, %35 ], [ %31, %26 ]
  %43 = ashr i32 %42, 2
  %44 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 27
  %45 = load i8*, i8** %44, align 16
  %46 = sext i32 %5 to i64
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  %48 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 28
  %49 = load i8*, i8** %48, align 8
  %50 = sext i32 %4 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  %52 = zext i8 %2 to i64
  %53 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high, i64 0, i64 %52
  %56 = load i32, i32* %55, align 4
  %57 = load i8, i8* %47, align 1
  %58 = zext i8 %57 to i32
  %59 = and i32 %54, 255
  %60 = icmp ugt i32 %59, %58
  %61 = zext i1 %60 to i64
  %62 = load i8, i8* %51, align 1
  %63 = zext i8 %62 to i32
  %64 = and i32 %56, 255
  %65 = icmp ugt i32 %64, %63
  %66 = zext i1 %65 to i64
  %67 = icmp eq i8 %2, 0
  br i1 %67, label %91, label %68

68:                                               ; preds = %41
  %69 = icmp ugt i8 %30, %15
  %70 = select i1 %69, i8 %30, i8 %15
  switch i8 %70, label %87 [
    i8 -128, label %74
    i8 64, label %74
    i8 32, label %71
    i8 16, label %72
    i8 8, label %73
  ]

71:                                               ; preds = %68
  br label %74

72:                                               ; preds = %68
  br label %74

73:                                               ; preds = %68
  br label %74

74:                                               ; preds = %73, %72, %71, %68, %68
  %75 = phi i8 [ 4, %68 ], [ 4, %68 ], [ 3, %71 ], [ 2, %72 ], [ 1, %73 ]
  %76 = getelementptr inbounds [19 x i8], [19 x i8]* @txsize_sqr_up_map, i64 0, i64 %52
  %77 = load i8, i8* %76, align 1
  %78 = icmp ne i8 %77, %75
  %79 = icmp ne i8 %75, 1
  %80 = and i1 %79, %78
  %81 = zext i1 %80 to i64
  %82 = shl nuw nsw i8 %75, 1
  %83 = zext i8 %82 to i64
  %84 = sub nuw nsw i64 8, %83
  %85 = or i64 %84, %81
  %86 = mul nsw i64 %85, 3
  br label %87

87:                                               ; preds = %74, %68
  %88 = phi i64 [ %86, %74 ], [ 63, %68 ]
  %89 = add nuw nsw i64 %66, %61
  %90 = add nsw i64 %89, %88
  br label %91

91:                                               ; preds = %41, %87
  %92 = phi i64 [ %90, %87 ], [ 0, %41 ]
  %93 = getelementptr inbounds [22 x i8], [22 x i8]* @av1_get_txb_size_index.tw_h_log2_table, i64 0, i64 %13
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = ashr i32 %4, %95
  %97 = getelementptr inbounds [22 x i8], [22 x i8]* @av1_get_txb_size_index.stride_log2_table, i64 0, i64 %13
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = shl i32 %96, %99
  %101 = getelementptr inbounds [22 x i8], [22 x i8]* @av1_get_txb_size_index.tw_w_log2_table, i64 0, i64 %13
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = ashr i32 %5, %103
  %105 = add nsw i32 %104, %100
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %10, i64 0, i32 25, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = icmp sgt i32 %28, %4
  %110 = icmp sgt i32 %43, %5
  %111 = and i1 %109, %110
  br i1 %111, label %112, label %268

112:                                              ; preds = %91
  %113 = icmp eq i32 %3, 2
  br i1 %113, label %114, label %137

114:                                              ; preds = %112
  %115 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %10, i64 0, i32 24
  store i8 %2, i8* %115, align 1
  %116 = load i8*, i8** %44, align 16
  %117 = getelementptr inbounds i8, i8* %116, i64 %46
  %118 = load i8*, i8** %48, align 8
  %119 = getelementptr inbounds i8, i8* %118, i64 %50
  %120 = getelementptr inbounds [19 x i8], [19 x i8]* @txsize_to_bsize, i64 0, i64 %52
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i64
  %123 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %122
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = trunc i32 %54 to i8
  %130 = trunc i32 %56 to i8
  %131 = icmp ugt i32 %125, 1
  %132 = select i1 %131, i32 %125, i32 1
  %133 = zext i32 %132 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %119, i8 %130, i64 %133, i1 false) #4
  %134 = icmp ugt i32 %128, 1
  %135 = select i1 %134, i32 %128, i32 1
  %136 = zext i32 %135 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %117, i8 %129, i64 %136, i1 false) #4
  br label %268

137:                                              ; preds = %112
  %138 = icmp eq i8 %108, %2
  br i1 %138, label %139, label %185

139:                                              ; preds = %137
  %140 = icmp eq i8 %6, 0
  br i1 %140, label %162, label %141

141:                                              ; preds = %139
  %142 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 39
  %143 = load %struct.frame_contexts*, %struct.frame_contexts** %142, align 8
  %144 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %143, i64 0, i32 37, i64 %92, i64 2
  %145 = load i16, i16* %144, align 2
  %146 = icmp ugt i16 %145, 15
  %147 = select i1 %146, i32 4, i32 3
  %148 = icmp ugt i16 %145, 31
  %149 = select i1 %148, i32 2, i32 1
  %150 = add nuw nsw i32 %149, %147
  %151 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %143, i64 0, i32 37, i64 %92, i64 0
  %152 = load i16, i16* %151, align 2
  %153 = zext i16 %152 to i32
  %154 = icmp eq i16 %152, 0
  %155 = lshr i32 %153, %150
  %156 = trunc i32 %155 to i16
  %157 = sub i16 %152, %156
  %158 = select i1 %154, i16 0, i16 %157
  store i16 %158, i16* %151, align 2
  %159 = icmp ult i16 %145, 32
  %160 = zext i1 %159 to i16
  %161 = add i16 %145, %160
  store i16 %161, i16* %144, align 2
  br label %162

162:                                              ; preds = %139, %141
  %163 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %10, i64 0, i32 24
  store i8 %2, i8* %163, align 1
  %164 = load i8*, i8** %44, align 16
  %165 = getelementptr inbounds i8, i8* %164, i64 %46
  %166 = load i8*, i8** %48, align 8
  %167 = getelementptr inbounds i8, i8* %166, i64 %50
  %168 = getelementptr inbounds [19 x i8], [19 x i8]* @txsize_to_bsize, i64 0, i64 %52
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i64
  %171 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i32
  %174 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %170
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = trunc i32 %54 to i8
  %178 = trunc i32 %56 to i8
  %179 = icmp ugt i32 %173, 1
  %180 = select i1 %179, i32 %173, i32 1
  %181 = zext i32 %180 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %167, i8 %178, i64 %181, i1 false) #4
  %182 = icmp ugt i32 %176, 1
  %183 = select i1 %182, i32 %176, i32 1
  %184 = zext i32 %183 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %165, i8 %177, i64 %184, i1 false) #4
  br label %268

185:                                              ; preds = %137
  %186 = getelementptr inbounds [19 x i8], [19 x i8]* @sub_tx_size_map, i64 0, i64 %52
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide_unit, i64 0, i64 %188
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high_unit, i64 0, i64 %188
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i8 %6, 0
  br i1 %193, label %223, label %194

194:                                              ; preds = %185
  %195 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 39
  %196 = load %struct.frame_contexts*, %struct.frame_contexts** %195, align 8
  %197 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %196, i64 0, i32 37, i64 %92, i64 2
  %198 = load i16, i16* %197, align 2
  %199 = icmp ugt i16 %198, 15
  %200 = select i1 %199, i32 4, i32 3
  %201 = icmp ugt i16 %198, 31
  %202 = select i1 %201, i32 2, i32 1
  %203 = add nuw nsw i32 %202, %200
  %204 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %196, i64 0, i32 37, i64 %92, i64 0
  %205 = load i16, i16* %204, align 2
  %206 = zext i16 %205 to i32
  %207 = icmp ugt i16 %205, -32768
  br i1 %207, label %208, label %213

208:                                              ; preds = %194
  %209 = add nsw i32 %206, -32768
  %210 = ashr i32 %209, %203
  %211 = trunc i32 %210 to i16
  %212 = sub i16 %205, %211
  br label %218

213:                                              ; preds = %194
  %214 = sub nsw i32 32768, %206
  %215 = ashr i32 %214, %203
  %216 = trunc i32 %215 to i16
  %217 = add i16 %205, %216
  br label %218

218:                                              ; preds = %213, %208
  %219 = phi i16 [ %217, %213 ], [ %212, %208 ]
  store i16 %219, i16* %204, align 2
  %220 = icmp ult i16 %198, 32
  %221 = zext i1 %220 to i16
  %222 = add i16 %198, %221
  store i16 %222, i16* %197, align 2
  br label %223

223:                                              ; preds = %185, %218
  %224 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 58, i32 4
  %225 = load i32, i32* %224, align 16
  %226 = add i32 %225, 1
  store i32 %226, i32* %224, align 16
  %227 = lshr i64 99, %52
  %228 = and i64 %227, 1
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %234

230:                                              ; preds = %223
  %231 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high_unit, i64 0, i64 %52
  %232 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide_unit, i64 0, i64 %52
  %233 = add nsw i32 %3, 1
  br label %255

234:                                              ; preds = %223
  store i8 0, i8* %107, align 1
  %235 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %10, i64 0, i32 24
  store i8 0, i8* %235, align 1
  %236 = load i8*, i8** %44, align 16
  %237 = getelementptr inbounds i8, i8* %236, i64 %46
  %238 = load i8*, i8** %48, align 8
  %239 = getelementptr inbounds i8, i8* %238, i64 %50
  %240 = getelementptr inbounds [19 x i8], [19 x i8]* @txsize_to_bsize, i64 0, i64 %52
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i64
  %243 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i32
  %246 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %242
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i32
  %249 = icmp ugt i32 %245, 1
  %250 = select i1 %249, i32 %245, i32 1
  %251 = zext i32 %250 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %239, i8 4, i64 %251, i1 false) #4
  %252 = icmp ugt i32 %248, 1
  %253 = select i1 %252, i32 %248, i32 1
  %254 = zext i32 %253 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %237, i8 4, i64 %254, i1 false) #4
  br label %268

255:                                              ; preds = %258, %230
  %256 = phi i32 [ 0, %230 ], [ %259, %258 ]
  %257 = add nsw i32 %256, %4
  br label %262

258:                                              ; preds = %262
  %259 = add nsw i32 %256, %192
  %260 = load i32, i32* %231, align 4
  %261 = icmp slt i32 %259, %260
  br i1 %261, label %255, label %268

262:                                              ; preds = %255, %262
  %263 = phi i32 [ 0, %255 ], [ %265, %262 ]
  %264 = add nsw i32 %263, %5
  tail call fastcc void @update_txfm_count(%struct.macroblock* %0, %struct.macroblockd* %1, i8 zeroext %187, i32 %233, i32 %257, i32 %264, i8 zeroext %6)
  %265 = add nsw i32 %263, %190
  %266 = load i32, i32* %232, align 4
  %267 = icmp slt i32 %265, %266
  br i1 %267, label %262, label %258

268:                                              ; preds = %258, %162, %234, %91, %114
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @set_txfm_context(%struct.macroblockd* nocapture readonly, i8 zeroext, i32, i32) unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 6
  %6 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %5, align 8
  %7 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %6, align 8
  %8 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %7, i64 0, i32 0
  %9 = load i8, i8* %8, align 8
  %10 = zext i8 %9 to i64
  %11 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 20
  %15 = load i32, i32* %14, align 16
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = add nsw i32 %19, 3
  %21 = ashr i32 %15, %20
  %22 = add nsw i32 %21, %13
  br label %23

23:                                               ; preds = %4, %17
  %24 = phi i32 [ %22, %17 ], [ %13, %4 ]
  %25 = ashr i32 %24, 2
  %26 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %10
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 18
  %30 = load i32, i32* %29, align 8
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %23
  %33 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %34, 3
  %36 = ashr i32 %30, %35
  %37 = add nsw i32 %36, %28
  br label %38

38:                                               ; preds = %23, %32
  %39 = phi i32 [ %37, %32 ], [ %28, %23 ]
  %40 = ashr i32 %39, 2
  %41 = getelementptr inbounds [22 x i8], [22 x i8]* @av1_get_txb_size_index.tw_h_log2_table, i64 0, i64 %10
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = ashr i32 %2, %43
  %45 = getelementptr inbounds [22 x i8], [22 x i8]* @av1_get_txb_size_index.stride_log2_table, i64 0, i64 %10
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = shl i32 %44, %47
  %49 = getelementptr inbounds [22 x i8], [22 x i8]* @av1_get_txb_size_index.tw_w_log2_table, i64 0, i64 %10
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = ashr i32 %3, %51
  %53 = add nsw i32 %52, %48
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %7, i64 0, i32 25, i64 %54
  %56 = icmp sgt i32 %25, %2
  %57 = icmp sgt i32 %40, %3
  %58 = and i1 %56, %57
  br i1 %58, label %59, label %141

59:                                               ; preds = %38
  %60 = load i8, i8* %55, align 1
  %61 = icmp eq i8 %60, %1
  br i1 %61, label %62, label %94

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %7, i64 0, i32 24
  store i8 %1, i8* %63, align 1
  %64 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 27
  %65 = load i8*, i8** %64, align 16
  %66 = sext i32 %3 to i64
  %67 = getelementptr inbounds i8, i8* %65, i64 %66
  %68 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 28
  %69 = load i8*, i8** %68, align 8
  %70 = sext i32 %2 to i64
  %71 = getelementptr inbounds i8, i8* %69, i64 %70
  %72 = zext i8 %1 to i64
  %73 = getelementptr inbounds [19 x i8], [19 x i8]* @txsize_to_bsize, i64 0, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i64
  %76 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %75
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide, i64 0, i64 %72
  %83 = load i32, i32* %82, align 4
  %84 = trunc i32 %83 to i8
  %85 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high, i64 0, i64 %72
  %86 = load i32, i32* %85, align 4
  %87 = trunc i32 %86 to i8
  %88 = icmp ugt i32 %78, 1
  %89 = select i1 %88, i32 %78, i32 1
  %90 = zext i32 %89 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %71, i8 %87, i64 %90, i1 false) #4
  %91 = icmp ugt i32 %81, 1
  %92 = select i1 %91, i32 %81, i32 1
  %93 = zext i32 %92 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %67, i8 %84, i64 %93, i1 false) #4
  br label %141

94:                                               ; preds = %59
  %95 = icmp eq i8 %1, 1
  br i1 %95, label %96, label %108

96:                                               ; preds = %94
  store i8 0, i8* %55, align 1
  %97 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %7, i64 0, i32 24
  store i8 0, i8* %97, align 1
  %98 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 27
  %99 = load i8*, i8** %98, align 16
  %100 = sext i32 %3 to i64
  %101 = getelementptr inbounds i8, i8* %99, i64 %100
  %102 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 28
  %103 = load i8*, i8** %102, align 8
  %104 = sext i32 %2 to i64
  %105 = getelementptr inbounds i8, i8* %103, i64 %104
  %106 = bitcast i8* %105 to i16*
  store i16 1028, i16* %106, align 1
  %107 = bitcast i8* %101 to i16*
  store i16 1028, i16* %107, align 1
  br label %141

108:                                              ; preds = %94
  %109 = zext i8 %1 to i64
  %110 = getelementptr inbounds [19 x i8], [19 x i8]* @sub_tx_size_map, i64 0, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide_unit, i64 0, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high_unit, i64 0, i64 %112
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high_unit, i64 0, i64 %109
  %118 = load i32, i32* %117, align 4
  %119 = sub nsw i32 %25, %2
  %120 = icmp slt i32 %118, %119
  %121 = select i1 %120, i32 %118, i32 %119
  %122 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide_unit, i64 0, i64 %109
  %123 = load i32, i32* %122, align 4
  %124 = sub nsw i32 %40, %3
  %125 = icmp slt i32 %123, %124
  %126 = select i1 %125, i32 %123, i32 %124
  %127 = icmp sgt i32 %121, 0
  br i1 %127, label %128, label %141

128:                                              ; preds = %108
  %129 = icmp sgt i32 %126, 0
  br label %130

130:                                              ; preds = %128, %133
  %131 = phi i32 [ 0, %128 ], [ %134, %133 ]
  %132 = add nsw i32 %131, %2
  br i1 %129, label %136, label %133

133:                                              ; preds = %136, %130
  %134 = add nsw i32 %131, %116
  %135 = icmp slt i32 %134, %121
  br i1 %135, label %130, label %141

136:                                              ; preds = %130, %136
  %137 = phi i32 [ %139, %136 ], [ 0, %130 ]
  %138 = add nsw i32 %137, %3
  tail call fastcc void @set_txfm_context(%struct.macroblockd* %0, i8 zeroext %111, i32 %132, i32 %138)
  %139 = add nsw i32 %137, %114
  %140 = icmp slt i32 %139, %126
  br i1 %140, label %136, label %133

141:                                              ; preds = %133, %108, %62, %38, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @encode_b(%struct.AV1_COMP*, %struct.TileDataEnc* nocapture readonly, %struct.ThreadData*, %struct.TokenExtra**, i32, i32, i8 zeroext, i8 zeroext, i8 zeroext, %struct.PICK_MODE_CONTEXT*) unnamed_addr #2 {
  %11 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8
  %12 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %1, i64 0, i32 0
  %13 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0
  %14 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 35
  %15 = load %struct.SequenceHeader*, %struct.SequenceHeader** %14, align 16
  %16 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %15, i64 0, i32 32
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %15, i64 0, i32 33
  %19 = load i32, i32* %18, align 4
  tail call void @av1_set_offsets_without_segment_id(%struct.AV1_COMP* %0, %struct.TileInfo* %12, %struct.macroblock* %13, i32 %4, i32 %5, i8 zeroext %7)
  %20 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 17
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 31, i32 2
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %20, align 8
  %24 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 33, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %10
  %28 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 13, i32 7
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = tail call i32 @av1_get_hier_tpl_rdmult(%struct.AV1_COMP* %0, %struct.macroblock* %13, i8 zeroext %7, i32 %4, i32 %5, i32 %23) #4
  store i32 %32, i32* %20, align 8
  br label %33

33:                                               ; preds = %31, %27, %10
  %34 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 9, i32 12, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 24
  tail call void @av1_set_ssim_rdmult(%struct.AV1_COMP* %0, i32* %38, i8 zeroext %7, i32 %4, i32 %5, i32* %20) #4
  br label %39

39:                                               ; preds = %33, %37
  %40 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 6
  %41 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %40, align 8
  %42 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %41, align 8
  %43 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 1
  store i8 %8, i8* %43, align 1
  tail call void @av1_update_state(%struct.AV1_COMP* %0, %struct.ThreadData* %2, %struct.PICK_MODE_CONTEXT* %9, i32 %4, i32 %5, i8 zeroext %7, i8 zeroext %6) #4
  %44 = icmp eq i8 %6, 0
  br i1 %44, label %45, label %486

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 4
  %47 = load %struct.MB_MODE_INFO_EXT_FRAME*, %struct.MB_MODE_INFO_EXT_FRAME** %46, align 8
  %48 = getelementptr inbounds %struct.MB_MODE_INFO_EXT_FRAME, %struct.MB_MODE_INFO_EXT_FRAME* %47, i64 0, i32 5, i64 0
  %49 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 8, i64 0
  %50 = load i16, i16* %49, align 8
  %51 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 8, i64 1
  %52 = load i16, i16* %51, align 2
  store i16 %50, i16* %48, align 2
  %53 = getelementptr inbounds %struct.MB_MODE_INFO_EXT_FRAME, %struct.MB_MODE_INFO_EXT_FRAME* %47, i64 0, i32 5, i64 1
  store i16 %52, i16* %53, align 2
  tail call fastcc void @encode_superblock(%struct.AV1_COMP* %0, %struct.TileDataEnc* %1, %struct.ThreadData* %2, %struct.TokenExtra** %3, i8 zeroext 0, i8 zeroext %7)
  %54 = zext i8 %7 to i64
  %55 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i16
  %58 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %54
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i16
  %61 = mul nuw i16 %60, %57
  %62 = load i16, i16* %49, align 8
  %63 = add i16 %61, %62
  store i16 %63, i16* %49, align 8
  %64 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 3
  %65 = load i8, i8* %64, align 4, !range !5
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %82, label %67

67:                                               ; preds = %45
  %68 = sext i32 %17 to i64
  %69 = sext i32 %19 to i64
  %70 = getelementptr inbounds [22 x [2 x [2 x i8]]], [22 x [2 x [2 x i8]]]* @ss_size_lookup, i64 0, i64 %54, i64 %68, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i64
  %73 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i16
  %76 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %72
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  %79 = mul nuw i16 %78, %75
  %80 = load i16, i16* %51, align 2
  %81 = add i16 %79, %80
  store i16 %81, i16* %51, align 2
  br label %82

82:                                               ; preds = %45, %67
  %83 = load %struct.SequenceHeader*, %struct.SequenceHeader** %14, align 16
  %84 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %83, i64 0, i32 7
  %85 = load i8, i8* %84, align 4
  %86 = icmp eq i8 %85, %7
  br i1 %86, label %87, label %109

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 23
  %89 = load i8, i8* %88, align 8
  %90 = icmp eq i8 %89, 1
  br i1 %90, label %91, label %109

91:                                               ; preds = %87
  %92 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 33, i32 2
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %109, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %83, i64 0, i32 27
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 0
  %99 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 48, i64 0
  %100 = load i8, i8* %99, align 1
  %101 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 27, i64 0
  store i8 %100, i8* %101, align 1
  %102 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 48, i64 1
  %103 = load i8, i8* %102, align 1
  %104 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 27, i64 1
  store i8 %103, i8* %104, align 1
  br i1 %98, label %555, label %105

105:                                              ; preds = %555, %95
  %106 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 47
  %107 = load i8, i8* %106, align 16
  %108 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 26
  store i8 %107, i8* %108, align 2
  br label %109

109:                                              ; preds = %91, %105, %87, %82
  %110 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 6, i64 1
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 1
  br i1 %112, label %128, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 28
  %115 = load i16, i16* %114, align 1
  %116 = and i16 %115, 512
  %117 = icmp eq i16 %116, 0
  br i1 %117, label %122, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 17, i32 4
  %120 = load i8, i8* %119, align 1
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %118, %113
  %123 = and i16 %115, -257
  br label %126

124:                                              ; preds = %118
  %125 = or i16 %115, 256
  br label %126

126:                                              ; preds = %124, %122
  %127 = phi i16 [ %123, %122 ], [ %125, %124 ]
  store i16 %127, i16* %114, align 1
  br label %128

128:                                              ; preds = %126, %109
  %129 = load %struct.SequenceHeader*, %struct.SequenceHeader** %14, align 16
  %130 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %129, i64 0, i32 8
  %131 = load i32, i32* %130, align 8
  %132 = add nsw i32 %131, -1
  %133 = or i32 %5, %4
  %134 = and i32 %132, %133
  %135 = icmp eq i32 %134, 0
  %136 = load i32, i32* %24, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %175, label %138

138:                                              ; preds = %128
  %139 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %129, i64 0, i32 7
  %140 = load i8, i8* %139, align 4
  %141 = icmp eq i8 %140, %7
  br i1 %141, label %142, label %148

142:                                              ; preds = %138
  %143 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 23
  %144 = load i8, i8* %143, align 8
  %145 = icmp ne i8 %144, 0
  %146 = xor i1 %135, true
  %147 = or i1 %145, %146
  br i1 %147, label %175, label %149

148:                                              ; preds = %138
  br i1 %135, label %149, label %175

149:                                              ; preds = %142, %148
  %150 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 4
  %151 = load i32, i32* %150, align 4
  %152 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 43
  store i32 %151, i32* %152, align 4
  %153 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 33, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %175, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 33, i32 4
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %156
  %161 = load %struct.SequenceHeader*, %struct.SequenceHeader** %14, align 16
  %162 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %161, i64 0, i32 27
  %163 = load i8, i8* %162, align 1
  %164 = icmp eq i8 %163, 0
  %165 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 27, i64 0
  %166 = load i8, i8* %165, align 1
  %167 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 48, i64 0
  store i8 %166, i8* %167, align 1
  %168 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 27, i64 1
  %169 = load i8, i8* %168, align 1
  %170 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 48, i64 1
  store i8 %169, i8* %170, align 1
  br i1 %164, label %548, label %175

171:                                              ; preds = %156
  %172 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 26
  %173 = load i8, i8* %172, align 2
  %174 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 47
  store i8 %173, i8* %174, align 16
  br label %175

175:                                              ; preds = %160, %548, %142, %149, %128, %171, %148
  %176 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 28
  %177 = load i16, i16* %176, align 1
  %178 = and i16 %177, 64
  %179 = icmp eq i16 %178, 0
  br i1 %179, label %223, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 1, i32 2
  store i32 1, i32* %181, align 4
  %182 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 0, i32 1
  %183 = load i8, i8* %182, align 1
  %184 = icmp eq i8 %183, 2
  br i1 %184, label %185, label %187

185:                                              ; preds = %180
  %186 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 1, i32 1
  store i32 1, i32* %186, align 8
  br label %187

187:                                              ; preds = %185, %180
  %188 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 6, i64 0
  %189 = load i8, i8* %188, align 8
  %190 = load i8, i8* %110, align 1
  %191 = icmp sgt i8 %189, 1
  %192 = select i1 %191, i8 %189, i8 1
  %193 = add nsw i8 %192, -1
  %194 = icmp ult i8 %193, 8
  br i1 %194, label %195, label %203

195:                                              ; preds = %187
  %196 = zext i8 %192 to i64
  %197 = add nsw i64 %196, -1
  %198 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 13, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, -1
  %201 = sext i32 %199 to i64
  %202 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 15, i64 %201
  br i1 %200, label %203, label %204

203:                                              ; preds = %195, %187
  br label %204

204:                                              ; preds = %203, %195
  %205 = phi %struct.scale_factors* [ null, %203 ], [ %202, %195 ]
  %206 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 21, i64 0
  store %struct.scale_factors* %205, %struct.scale_factors** %206, align 8
  %207 = icmp sgt i8 %190, 1
  %208 = select i1 %207, i8 %190, i8 1
  %209 = add nsw i8 %208, -1
  %210 = icmp ult i8 %209, 8
  br i1 %210, label %211, label %219

211:                                              ; preds = %204
  %212 = zext i8 %208 to i64
  %213 = add nsw i64 %212, -1
  %214 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 13, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = icmp eq i32 %215, -1
  %217 = sext i32 %215 to i64
  %218 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 15, i64 %217
  br i1 %216, label %219, label %220

219:                                              ; preds = %211, %204
  br label %220

220:                                              ; preds = %211, %219
  %221 = phi %struct.scale_factors* [ null, %219 ], [ %218, %211 ]
  %222 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 21, i64 1
  store %struct.scale_factors* %221, %struct.scale_factors** %222, align 8
  br label %344

223:                                              ; preds = %175
  %224 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23, i32 0
  %225 = load i8, i8* %224, align 4
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %234, label %227

227:                                              ; preds = %223
  %228 = and i16 %177, 7
  %229 = zext i16 %228 to i64
  %230 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23, i32 5, i64 %229
  %231 = load i32, i32* %230, align 4
  %232 = and i32 %231, 32
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %344

234:                                              ; preds = %223, %227
  %235 = trunc i16 %177 to i8
  %236 = icmp sgt i8 %235, -1
  br i1 %236, label %237, label %241

237:                                              ; preds = %234
  %238 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 6, i64 0
  %239 = load i8, i8* %238, align 8
  %240 = icmp slt i8 %239, 1
  br i1 %240, label %344, label %241

241:                                              ; preds = %234, %237
  %242 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 38
  %243 = bitcast [8 x i8]* %242 to i64*
  store i64 0, i64* %243, align 2
  %244 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 12
  %245 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %244, align 16
  %246 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 11
  %247 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %246, align 8
  %248 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 7
  %249 = load i8, i8* %248, align 16, !range !5
  %250 = icmp eq i8 %249, 0
  %251 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 8
  %252 = load i8, i8* %251, align 1, !range !5
  %253 = icmp eq i8 %252, 0
  br i1 %250, label %276, label %254

254:                                              ; preds = %241
  %255 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %245, i64 0, i32 28
  %256 = load i16, i16* %255, align 1
  %257 = trunc i16 %256 to i8
  %258 = icmp sgt i8 %257, -1
  %259 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %245, i64 0, i32 6, i64 0
  %260 = load i8, i8* %259, align 8
  %261 = icmp slt i8 %260, 1
  %262 = and i1 %258, %261
  br i1 %262, label %276, label %263

263:                                              ; preds = %254
  %264 = sext i8 %260 to i64
  %265 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 38, i64 %264
  %266 = load i8, i8* %265, align 1
  %267 = add i8 %266, 1
  store i8 %267, i8* %265, align 1
  %268 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %245, i64 0, i32 6, i64 1
  %269 = load i8, i8* %268, align 1
  %270 = icmp slt i8 %269, 1
  br i1 %270, label %276, label %271

271:                                              ; preds = %263
  %272 = sext i8 %269 to i64
  %273 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 38, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = add i8 %274, 1
  store i8 %275, i8* %273, align 1
  br label %276

276:                                              ; preds = %271, %263, %254, %241
  br i1 %253, label %299, label %277

277:                                              ; preds = %276
  %278 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %247, i64 0, i32 28
  %279 = load i16, i16* %278, align 1
  %280 = trunc i16 %279 to i8
  %281 = icmp sgt i8 %280, -1
  %282 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %247, i64 0, i32 6, i64 0
  %283 = load i8, i8* %282, align 8
  %284 = icmp slt i8 %283, 1
  %285 = and i1 %281, %284
  br i1 %285, label %299, label %286

286:                                              ; preds = %277
  %287 = sext i8 %283 to i64
  %288 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 38, i64 %287
  %289 = load i8, i8* %288, align 1
  %290 = add i8 %289, 1
  store i8 %290, i8* %288, align 1
  %291 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %247, i64 0, i32 6, i64 1
  %292 = load i8, i8* %291, align 1
  %293 = icmp slt i8 %292, 1
  br i1 %293, label %299, label %294

294:                                              ; preds = %286
  %295 = sext i8 %292 to i64
  %296 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 38, i64 %295
  %297 = load i8, i8* %296, align 1
  %298 = add i8 %297, 1
  store i8 %298, i8* %296, align 1
  br label %299

299:                                              ; preds = %276, %277, %286, %294
  %300 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 0, i32 1
  %301 = load i8, i8* %300, align 1
  %302 = icmp eq i8 %301, 2
  br i1 %302, label %303, label %308

303:                                              ; preds = %299
  %304 = load i8, i8* %110, align 1
  %305 = icmp slt i8 %304, 1
  br i1 %305, label %308, label %306

306:                                              ; preds = %303
  %307 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 1, i32 1
  store i32 1, i32* %307, align 8
  br label %308

308:                                              ; preds = %303, %306, %299
  %309 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 6, i64 0
  %310 = load i8, i8* %309, align 8
  %311 = load i8, i8* %110, align 1
  %312 = icmp sgt i8 %310, 1
  %313 = select i1 %312, i8 %310, i8 1
  %314 = add nsw i8 %313, -1
  %315 = icmp ult i8 %314, 8
  br i1 %315, label %316, label %324

316:                                              ; preds = %308
  %317 = zext i8 %313 to i64
  %318 = add nsw i64 %317, -1
  %319 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 13, i64 %318
  %320 = load i32, i32* %319, align 4
  %321 = icmp eq i32 %320, -1
  %322 = sext i32 %320 to i64
  %323 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 15, i64 %322
  br i1 %321, label %324, label %325

324:                                              ; preds = %316, %308
  br label %325

325:                                              ; preds = %324, %316
  %326 = phi %struct.scale_factors* [ null, %324 ], [ %323, %316 ]
  %327 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 21, i64 0
  store %struct.scale_factors* %326, %struct.scale_factors** %327, align 8
  %328 = icmp sgt i8 %311, 1
  %329 = select i1 %328, i8 %311, i8 1
  %330 = add nsw i8 %329, -1
  %331 = icmp ult i8 %330, 8
  br i1 %331, label %332, label %340

332:                                              ; preds = %325
  %333 = zext i8 %329 to i64
  %334 = add nsw i64 %333, -1
  %335 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 13, i64 %334
  %336 = load i32, i32* %335, align 4
  %337 = icmp eq i32 %336, -1
  %338 = sext i32 %336 to i64
  %339 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 15, i64 %338
  br i1 %337, label %340, label %341

340:                                              ; preds = %332, %325
  br label %341

341:                                              ; preds = %332, %340
  %342 = phi %struct.scale_factors* [ null, %340 ], [ %339, %332 ]
  %343 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 21, i64 1
  store %struct.scale_factors* %342, %struct.scale_factors** %343, align 8
  br label %344

344:                                              ; preds = %341, %227, %237, %220
  %345 = getelementptr inbounds %struct.TileDataEnc, %struct.TileDataEnc* %1, i64 0, i32 4
  %346 = load i8, i8* %345, align 8
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %349, label %348

348:                                              ; preds = %344
  tail call fastcc void @update_stats(%struct.AV1Common* %11, %struct.ThreadData* %2)
  br label %349

349:                                              ; preds = %344, %348
  %350 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 23
  %351 = load i32, i32* %350, align 4
  %352 = icmp slt i32 %351, 1
  %353 = icmp eq i32 %351, 2147483647
  %354 = or i1 %352, %353
  br i1 %354, label %355, label %363

355:                                              ; preds = %349
  %356 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 5
  %357 = load i8, i8* %356, align 1, !range !5
  %358 = icmp eq i8 %357, 0
  br i1 %358, label %487, label %359

359:                                              ; preds = %355
  %360 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 40, i32 6, i32 24
  %361 = load i32, i32* %360, align 4
  %362 = icmp sgt i32 %361, 0
  br i1 %362, label %363, label %487

363:                                              ; preds = %349, %359
  %364 = load i16, i16* %176, align 1
  %365 = trunc i16 %364 to i8
  %366 = icmp sgt i8 %365, -1
  br i1 %366, label %367, label %372

367:                                              ; preds = %363
  %368 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 6, i64 0
  %369 = load i8, i8* %368, align 8
  %370 = icmp sgt i8 %369, 0
  %371 = zext i1 %370 to i32
  br label %372

372:                                              ; preds = %363, %367
  %373 = phi i32 [ 1, %363 ], [ %371, %367 ]
  %374 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23, i32 0
  %375 = load i8, i8* %374, align 4
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %384, label %377

377:                                              ; preds = %372
  %378 = and i16 %364, 7
  %379 = zext i16 %378 to i64
  %380 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 23, i32 5, i64 %379
  %381 = load i32, i32* %380, align 4
  %382 = and i32 %381, 32
  %383 = icmp eq i32 %382, 0
  br label %384

384:                                              ; preds = %372, %377
  %385 = phi i1 [ true, %372 ], [ %383, %377 ]
  %386 = icmp ne i32 %373, 0
  %387 = and i1 %386, %385
  br i1 %387, label %388, label %487

388:                                              ; preds = %384
  %389 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 11
  %390 = load i8, i8* %389, align 1, !range !5
  %391 = icmp eq i8 %390, 0
  br i1 %391, label %487, label %392

392:                                              ; preds = %388
  %393 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 46
  %394 = load %struct.WarpedMotionParams*, %struct.WarpedMotionParams** %393, align 8
  %395 = getelementptr inbounds %struct.AV1_COMP, %struct.AV1_COMP* %0, i64 0, i32 8, i32 20, i32 5
  %396 = load i8, i8* %395, align 1, !range !5
  %397 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 11
  %398 = load i8, i8* %397, align 2
  %399 = icmp eq i8 %398, 0
  br i1 %399, label %487, label %400

400:                                              ; preds = %392
  %401 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 44
  %402 = load i32, i32* %401, align 8
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %412, label %404

404:                                              ; preds = %400
  %405 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 0
  %406 = load i8, i8* %405, align 8
  %407 = zext i8 %406 to i64
  %408 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %407
  %409 = load i8, i8* %408, align 1
  %410 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %407
  %411 = load i8, i8* %410, align 1
  br label %433

412:                                              ; preds = %400
  %413 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 2
  %414 = load i8, i8* %413, align 2
  %415 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 0
  %416 = load i8, i8* %415, align 8
  %417 = zext i8 %416 to i64
  %418 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %417
  %419 = load i8, i8* %418, align 1
  %420 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %417
  %421 = load i8, i8* %420, align 1
  switch i8 %414, label %433 [
    i8 15, label %422
    i8 23, label %422
  ]

422:                                              ; preds = %412, %412
  %423 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 6, i64 0
  %424 = load i8, i8* %423, align 8
  %425 = sext i8 %424 to i64
  %426 = getelementptr inbounds %struct.WarpedMotionParams, %struct.WarpedMotionParams* %394, i64 %425, i32 5
  %427 = load i8, i8* %426, align 4
  %428 = icmp ult i8 %419, %421
  %429 = select i1 %428, i8 %419, i8 %421
  %430 = icmp ult i8 %429, 8
  %431 = icmp ult i8 %427, 2
  %432 = or i1 %430, %431
  br i1 %432, label %433, label %487

433:                                              ; preds = %422, %412, %404
  %434 = phi i8 [ %411, %404 ], [ %421, %412 ], [ %421, %422 ]
  %435 = phi i8 [ %409, %404 ], [ %419, %412 ], [ %419, %422 ]
  %436 = icmp ult i8 %435, %434
  %437 = select i1 %436, i8 %435, i8 %434
  %438 = icmp ult i8 %437, 8
  br i1 %438, label %487, label %439

439:                                              ; preds = %433
  %440 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 2
  %441 = load i8, i8* %440, align 2
  %442 = add i8 %441, -13
  %443 = icmp ugt i8 %442, 11
  br i1 %443, label %487, label %444

444:                                              ; preds = %439
  %445 = load i8, i8* %110, align 1
  %446 = icmp sgt i8 %445, -1
  br i1 %446, label %487, label %447

447:                                              ; preds = %444
  %448 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 10
  %449 = load i8, i8* %448, align 1
  %450 = icmp eq i8 %449, 0
  %451 = icmp eq i8 %396, 0
  %452 = or i1 %451, %450
  %453 = xor i1 %403, true
  %454 = or i1 %452, %453
  br i1 %454, label %469, label %455

455:                                              ; preds = %447
  %456 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 21, i64 0
  %457 = load %struct.scale_factors*, %struct.scale_factors** %456, align 8
  %458 = getelementptr inbounds %struct.scale_factors, %struct.scale_factors* %457, i64 0, i32 0
  %459 = load i32, i32* %458, align 8
  %460 = icmp eq i32 %459, -1
  br i1 %460, label %470, label %461

461:                                              ; preds = %455
  %462 = getelementptr inbounds %struct.scale_factors, %struct.scale_factors* %457, i64 0, i32 1
  %463 = load i32, i32* %462, align 4
  %464 = icmp eq i32 %463, -1
  br i1 %464, label %470, label %465

465:                                              ; preds = %461
  %466 = icmp eq i32 %459, 16384
  %467 = icmp eq i32 %463, 16384
  %468 = and i1 %466, %467
  br i1 %468, label %470, label %469

469:                                              ; preds = %465, %447
  br label %470

470:                                              ; preds = %455, %461, %465, %469
  %471 = phi i1 [ false, %469 ], [ true, %461 ], [ true, %455 ], [ true, %465 ]
  %472 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 9
  %473 = load i8, i8* %472, align 8
  %474 = icmp eq i8 %473, 1
  %475 = zext i1 %474 to i64
  %476 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 1, i32 4, i64 %54, i64 %475
  %477 = load i32, i32* %476, align 4
  %478 = add nsw i32 %477, 1
  store i32 %478, i32* %476, align 4
  br i1 %471, label %479, label %487

479:                                              ; preds = %470
  %480 = load i8, i8* %472, align 8
  %481 = icmp eq i8 %480, 2
  %482 = zext i1 %481 to i64
  %483 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 1, i32 5, i64 %482
  %484 = load i32, i32* %483, align 4
  %485 = add nsw i32 %484, 1
  store i32 %485, i32* %483, align 4
  br label %487

486:                                              ; preds = %39
  tail call fastcc void @encode_superblock(%struct.AV1_COMP* %0, %struct.TileDataEnc* %1, %struct.ThreadData* %2, %struct.TokenExtra** %3, i8 zeroext %6, i8 zeroext %7)
  br label %487

487:                                              ; preds = %422, %433, %439, %444, %392, %388, %359, %355, %479, %470, %384, %486
  %488 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 4
  %489 = load %struct.MB_MODE_INFO_EXT_FRAME*, %struct.MB_MODE_INFO_EXT_FRAME** %488, align 8
  %490 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %40, align 8
  %491 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %490, align 8
  %492 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %491, i64 0, i32 6, i64 0
  %493 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %491, i64 0, i32 6, i64 1
  %494 = load i8, i8* %493, align 1
  %495 = icmp sgt i8 %494, 0
  %496 = load i8, i8* %492, align 1
  br i1 %495, label %497, label %527

497:                                              ; preds = %487
  %498 = icmp slt i8 %496, 5
  %499 = icmp sgt i8 %494, 4
  %500 = and i1 %499, %498
  br i1 %500, label %523, label %501

501:                                              ; preds = %497
  switch i8 %496, label %523 [
    i8 1, label %502
    i8 5, label %505
    i8 2, label %509
    i8 3, label %513
    i8 6, label %515
  ]

502:                                              ; preds = %501
  %503 = add i8 %494, -2
  %504 = icmp ult i8 %503, 3
  br i1 %504, label %520, label %523

505:                                              ; preds = %501
  %506 = icmp eq i8 %494, 6
  %507 = select i1 %506, i8 7, i8 -1
  %508 = icmp eq i8 %494, 7
  br i1 %508, label %520, label %517

509:                                              ; preds = %501
  %510 = icmp eq i8 %494, 4
  %511 = select i1 %510, i8 5, i8 -1
  %512 = icmp eq i8 %494, 3
  br i1 %512, label %520, label %517

513:                                              ; preds = %501
  %514 = icmp eq i8 %494, 4
  br i1 %514, label %520, label %523

515:                                              ; preds = %501
  %516 = icmp eq i8 %494, 7
  br i1 %516, label %520, label %523

517:                                              ; preds = %509, %505
  %518 = phi i8 [ %507, %505 ], [ %511, %509 ]
  %519 = icmp sgt i8 %518, -1
  br i1 %519, label %520, label %523

520:                                              ; preds = %502, %517, %515, %513, %509, %505
  %521 = phi i8 [ %518, %517 ], [ 8, %515 ], [ 6, %513 ], [ 3, %505 ], [ 4, %509 ], [ %503, %502 ]
  %522 = add nuw nsw i8 %521, 20
  br label %527

523:                                              ; preds = %502, %517, %515, %513, %501, %497
  %524 = shl i8 %494, 2
  %525 = add i8 %524, -13
  %526 = add i8 %525, %496
  br label %527

527:                                              ; preds = %487, %520, %523
  %528 = phi i8 [ %522, %520 ], [ %526, %523 ], [ %496, %487 ]
  %529 = bitcast %struct.MB_MODE_INFO_EXT_FRAME* %489 to i8*
  %530 = zext i8 %528 to i64
  %531 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 3, i32 0, i64 %530, i64 0
  %532 = bitcast %struct.candidate_mv* %531 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %529, i8* align 4 %532, i64 32, i1 false) #4
  %533 = getelementptr inbounds %struct.MB_MODE_INFO_EXT_FRAME, %struct.MB_MODE_INFO_EXT_FRAME* %489, i64 0, i32 1, i64 0
  %534 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 3, i32 1, i64 %530, i64 0
  %535 = bitcast i16* %534 to i64*
  %536 = bitcast i16* %533 to i64*
  %537 = load i64, i64* %535, align 4
  store i64 %537, i64* %536, align 4
  %538 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 3, i32 4, i64 %530
  %539 = load i16, i16* %538, align 2
  %540 = getelementptr inbounds %struct.MB_MODE_INFO_EXT_FRAME, %struct.MB_MODE_INFO_EXT_FRAME* %489, i64 0, i32 4
  store i16 %539, i16* %540, align 4
  %541 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 3, i32 2, i64 %530
  %542 = load i8, i8* %541, align 1
  %543 = getelementptr inbounds %struct.MB_MODE_INFO_EXT_FRAME, %struct.MB_MODE_INFO_EXT_FRAME* %489, i64 0, i32 2
  store i8 %542, i8* %543, align 4
  %544 = getelementptr inbounds %struct.MB_MODE_INFO_EXT_FRAME, %struct.MB_MODE_INFO_EXT_FRAME* %489, i64 0, i32 3, i64 0
  %545 = bitcast %union.int_mv* %544 to i8*
  %546 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 3, i32 3, i64 0
  %547 = bitcast %union.int_mv* %546 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %545, i8* align 4 %547, i64 32, i1 false) #4
  store i32 %21, i32* %20, align 8
  ret void

548:                                              ; preds = %160
  %549 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 27, i64 2
  %550 = load i8, i8* %549, align 1
  %551 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 48, i64 2
  store i8 %550, i8* %551, align 1
  %552 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 27, i64 3
  %553 = load i8, i8* %552, align 1
  %554 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 48, i64 3
  store i8 %553, i8* %554, align 1
  br label %175

555:                                              ; preds = %95
  %556 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 48, i64 2
  %557 = load i8, i8* %556, align 1
  %558 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 27, i64 2
  store i8 %557, i8* %558, align 1
  %559 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i64 0, i32 0, i32 2, i32 48, i64 3
  %560 = load i8, i8* %559, align 1
  %561 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 27, i64 3
  store i8 %560, i8* %561, align 1
  br label %105
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @update_stats(%struct.AV1Common*, %struct.ThreadData*) unnamed_addr #2 {
  %3 = alloca %union.int_mv, align 4
  %4 = alloca %union.int_mv, align 4
  %5 = alloca %union.int_mv, align 4
  %6 = alloca %union.int_mv, align 4
  %7 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0
  %8 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2
  %9 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 6
  %10 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %9, align 8
  %11 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %10, align 8
  %12 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 0
  %13 = load i8, i8* %12, align 8
  %14 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 39
  %15 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %16 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 28
  %17 = load i16, i16* %16, align 1
  %18 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 23, i32 0
  %19 = load i8, i8* %18, align 4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %2
  %22 = and i16 %17, 7
  %23 = zext i16 %22 to i64
  %24 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 23, i32 5, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = lshr i32 %25, 5
  %27 = and i32 %26, 1
  br label %28

28:                                               ; preds = %2, %21
  %29 = phi i32 [ 0, %2 ], [ %27, %21 ]
  %30 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 0, i32 5, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  %33 = icmp ne i32 %29, 0
  %34 = or i1 %33, %32
  br i1 %34, label %98, label %35

35:                                               ; preds = %28
  %36 = zext i8 %13 to i64
  %37 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %36
  %40 = load i8, i8* %39, align 1
  %41 = icmp ult i8 %38, %40
  %42 = select i1 %41, i8 %38, i8 %40
  %43 = icmp ult i8 %42, 8
  br i1 %43, label %98, label %44

44:                                               ; preds = %35
  %45 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 12
  %46 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %45, align 16
  %47 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 11
  %48 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %47, align 8
  %49 = icmp eq %struct.MB_MODE_INFO* %46, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %46, i64 0, i32 28
  %52 = load i16, i16* %51, align 1
  %53 = lshr i16 %52, 6
  %54 = and i16 %53, 1
  %55 = zext i16 %54 to i64
  br label %56

56:                                               ; preds = %50, %44
  %57 = phi i64 [ %55, %50 ], [ 0, %44 ]
  %58 = icmp eq %struct.MB_MODE_INFO* %48, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %48, i64 0, i32 28
  %61 = load i16, i16* %60, align 1
  %62 = lshr i16 %61, 6
  %63 = and i16 %62, 1
  %64 = zext i16 %63 to i64
  br label %65

65:                                               ; preds = %56, %59
  %66 = phi i64 [ %64, %59 ], [ 0, %56 ]
  %67 = add nuw nsw i64 %66, %57
  %68 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 40, i64 %67, i64 2
  %69 = load i16, i16* %68, align 2
  %70 = icmp ugt i16 %69, 15
  %71 = select i1 %70, i32 4, i32 3
  %72 = icmp ugt i16 %69, 31
  %73 = select i1 %72, i32 2, i32 1
  %74 = add nuw nsw i32 %73, %71
  %75 = shl i16 %17, 9
  %76 = and i16 %75, -32768
  %77 = zext i16 %76 to i32
  %78 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 40, i64 %67, i64 0
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = icmp ult i16 %76, %79
  br i1 %81, label %82, label %87

82:                                               ; preds = %65
  %83 = sub nsw i32 %80, %77
  %84 = ashr i32 %83, %74
  %85 = trunc i32 %84 to i16
  %86 = sub i16 %79, %85
  br label %92

87:                                               ; preds = %65
  %88 = sub nsw i32 %77, %80
  %89 = ashr i32 %88, %74
  %90 = trunc i32 %89 to i16
  %91 = add i16 %79, %90
  br label %92

92:                                               ; preds = %87, %82
  %93 = phi i16 [ %91, %87 ], [ %86, %82 ]
  store i16 %93, i16* %78, align 2
  %94 = icmp ult i16 %69, 32
  %95 = zext i1 %94 to i16
  %96 = add i16 %69, %95
  store i16 %96, i16* %68, align 2
  %97 = load i16, i16* %16, align 1
  br label %98

98:                                               ; preds = %35, %28, %92
  %99 = phi i16 [ %17, %35 ], [ %17, %28 ], [ %97, %92 ]
  %100 = and i16 %99, 64
  %101 = icmp ne i16 %100, 0
  %102 = or i1 %33, %101
  br i1 %102, label %156, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 12
  %105 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %104, align 16
  %106 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 11
  %107 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %106, align 8
  %108 = icmp eq %struct.MB_MODE_INFO* %105, null
  br i1 %108, label %113, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %105, i64 0, i32 23
  %111 = load i8, i8* %110, align 8
  %112 = sext i8 %111 to i64
  br label %113

113:                                              ; preds = %109, %103
  %114 = phi i64 [ %112, %109 ], [ 0, %103 ]
  %115 = icmp eq %struct.MB_MODE_INFO* %107, null
  br i1 %115, label %120, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %107, i64 0, i32 23
  %118 = load i8, i8* %117, align 8
  %119 = sext i8 %118 to i64
  br label %120

120:                                              ; preds = %113, %116
  %121 = phi i64 [ %119, %116 ], [ 0, %113 ]
  %122 = add nsw i64 %121, %114
  %123 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 23
  %124 = load i8, i8* %123, align 8
  %125 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 41, i64 %122, i64 2
  %126 = load i16, i16* %125, align 2
  %127 = icmp ugt i16 %126, 15
  %128 = select i1 %127, i32 4, i32 3
  %129 = icmp ugt i16 %126, 31
  %130 = select i1 %129, i32 2, i32 1
  %131 = add nuw nsw i32 %130, %128
  %132 = sext i8 %124 to i64
  %133 = and i64 %132, 4294967295
  %134 = icmp eq i64 %133, 0
  %135 = select i1 %134, i32 0, i32 32768
  %136 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 41, i64 %122, i64 0
  %137 = load i16, i16* %136, align 2
  %138 = zext i16 %137 to i32
  %139 = icmp ult i32 %135, %138
  br i1 %139, label %140, label %145

140:                                              ; preds = %120
  %141 = sub nsw i32 %138, %135
  %142 = ashr i32 %141, %131
  %143 = trunc i32 %142 to i16
  %144 = sub i16 %137, %143
  br label %150

145:                                              ; preds = %120
  %146 = sub nsw i32 %135, %138
  %147 = ashr i32 %146, %131
  %148 = trunc i32 %147 to i16
  %149 = add i16 %137, %148
  br label %150

150:                                              ; preds = %145, %140
  %151 = phi i16 [ %149, %145 ], [ %144, %140 ]
  store i16 %151, i16* %136, align 2
  %152 = icmp ult i16 %126, 32
  %153 = zext i1 %152 to i16
  %154 = add i16 %126, %153
  store i16 %154, i16* %125, align 2
  %155 = load i16, i16* %16, align 1
  br label %156

156:                                              ; preds = %150, %98
  %157 = phi i16 [ %155, %150 ], [ %99, %98 ]
  %158 = trunc i16 %157 to i8
  %159 = icmp sgt i8 %158, -1
  br i1 %159, label %160, label %176

160:                                              ; preds = %156
  %161 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 6, i64 0
  %162 = load i8, i8* %161, align 8
  %163 = icmp slt i8 %162, 1
  br i1 %163, label %164, label %176

164:                                              ; preds = %160
  %165 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 2
  %166 = load %struct.FRAME_COUNTS*, %struct.FRAME_COUNTS** %165, align 8
  %167 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 12
  %168 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %167, align 16
  %169 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 11
  %170 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %169, align 8
  %171 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 0, i32 0
  %172 = load i8, i8* %171, align 16
  %173 = and i8 %172, -3
  %174 = icmp eq i8 %173, 0
  %175 = zext i1 %174 to i32
  tail call void @av1_sum_intra_stats(%struct.AV1Common* %0, %struct.FRAME_COUNTS* %166, %struct.macroblockd* %8, %struct.MB_MODE_INFO* %11, %struct.MB_MODE_INFO* %168, %struct.MB_MODE_INFO* %170, i32 %175) #4
  br label %176

176:                                              ; preds = %156, %160, %164
  %177 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 0, i32 0
  %178 = load i8, i8* %177, align 16
  %179 = and i8 %178, -3
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %181, label %233

181:                                              ; preds = %176
  %182 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 20, i32 3
  %183 = load i8, i8* %182, align 1, !range !5
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %233, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 20, i32 4
  %187 = load i8, i8* %186, align 4, !range !5
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %233, label %189

189:                                              ; preds = %185
  %190 = load i16, i16* %16, align 1
  %191 = lshr i16 %190, 7
  %192 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 45, i64 2
  %193 = load i16, i16* %192, align 2
  %194 = icmp ugt i16 %193, 15
  %195 = select i1 %194, i32 4, i32 3
  %196 = icmp ugt i16 %193, 31
  %197 = select i1 %196, i32 2, i32 1
  %198 = add nuw nsw i32 %197, %195
  %199 = shl i16 %191, 15
  %200 = zext i16 %199 to i32
  %201 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 45, i64 0
  %202 = load i16, i16* %201, align 2
  %203 = zext i16 %202 to i32
  %204 = icmp ult i16 %199, %202
  br i1 %204, label %205, label %210

205:                                              ; preds = %189
  %206 = sub nsw i32 %203, %200
  %207 = ashr i32 %206, %198
  %208 = trunc i32 %207 to i16
  %209 = sub i16 %202, %208
  br label %215

210:                                              ; preds = %189
  %211 = sub nsw i32 %200, %203
  %212 = ashr i32 %211, %198
  %213 = trunc i32 %212 to i16
  %214 = add i16 %202, %213
  br label %215

215:                                              ; preds = %210, %205
  %216 = phi i16 [ %214, %210 ], [ %209, %205 ]
  store i16 %216, i16* %201, align 2
  %217 = icmp ult i16 %193, 32
  %218 = zext i1 %217 to i16
  %219 = add i16 %193, %218
  store i16 %219, i16* %192, align 2
  %220 = trunc i16 %190 to i8
  %221 = icmp sgt i8 %220, -1
  br i1 %221, label %233, label %222

222:                                              ; preds = %215
  %223 = bitcast %union.int_mv* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %223) #4
  %224 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  store i32 -1431655766, i32* %224, align 4
  %225 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 4
  %226 = bitcast %struct.MB_MODE_INFO_EXT_FRAME** %225 to i32**
  %227 = load i32*, i32** %226, align 8
  %228 = load i32, i32* %227, align 4
  store i32 %228, i32* %224, align 4
  %229 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 5, i64 0
  %230 = bitcast %union.int_mv* %229 to %struct.mv*
  %231 = bitcast %union.int_mv* %3 to %struct.mv*
  %232 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 44
  call void @av1_update_mv_stats(%struct.mv* %230, %struct.mv* nonnull %231, %struct.nmv_context* %232, i8 signext -1) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %223) #4
  br label %233

233:                                              ; preds = %176, %181, %222, %215, %185
  %234 = load i8, i8* %177, align 16
  %235 = and i8 %234, -3
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %1996, label %237

237:                                              ; preds = %233
  %238 = load i16, i16* %16, align 1
  %239 = and i16 %238, 64
  %240 = icmp eq i16 %239, 0
  br i1 %240, label %241, label %1996

241:                                              ; preds = %237
  %242 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 2
  %243 = load %struct.FRAME_COUNTS*, %struct.FRAME_COUNTS** %242, align 8
  %244 = trunc i16 %238 to i8
  %245 = icmp sgt i8 %244, -1
  br i1 %245, label %246, label %251

246:                                              ; preds = %241
  %247 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 6, i64 0
  %248 = load i8, i8* %247, align 8
  %249 = icmp sgt i8 %248, 0
  %250 = zext i1 %249 to i32
  br label %251

251:                                              ; preds = %241, %246
  %252 = phi i32 [ 1, %241 ], [ %250, %246 ]
  br i1 %33, label %1493, label %253

253:                                              ; preds = %251
  %254 = call i32 @av1_get_intra_inter_context(%struct.macroblockd* %8) #4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 42, i64 %255, i64 2
  %257 = load i16, i16* %256, align 2
  %258 = icmp ugt i16 %257, 15
  %259 = select i1 %258, i32 4, i32 3
  %260 = icmp ugt i16 %257, 31
  %261 = select i1 %260, i32 2, i32 1
  %262 = add nuw nsw i32 %261, %259
  %263 = icmp eq i32 %252, 0
  %264 = select i1 %263, i32 0, i32 32768
  %265 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 42, i64 %255, i64 0
  %266 = load i16, i16* %265, align 2
  %267 = zext i16 %266 to i32
  %268 = icmp ult i32 %264, %267
  br i1 %268, label %269, label %274

269:                                              ; preds = %253
  %270 = sub nsw i32 %267, %264
  %271 = ashr i32 %270, %262
  %272 = trunc i32 %271 to i16
  %273 = sub i16 %266, %272
  br label %279

274:                                              ; preds = %253
  %275 = sub nsw i32 %264, %267
  %276 = ashr i32 %275, %262
  %277 = trunc i32 %276 to i16
  %278 = add i16 %266, %277
  br label %279

279:                                              ; preds = %274, %269
  %280 = phi i16 [ %278, %274 ], [ %273, %269 ]
  store i16 %280, i16* %265, align 2
  %281 = icmp ult i16 %257, 32
  %282 = zext i1 %281 to i16
  %283 = add i16 %257, %282
  store i16 %283, i16* %256, align 2
  %284 = icmp eq i32 %252, 0
  br i1 %284, label %1996, label %285

285:                                              ; preds = %279
  %286 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 6, i64 0
  %287 = load i8, i8* %286, align 8
  %288 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 6, i64 1
  %289 = load i8, i8* %288, align 1
  %290 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 0, i32 1
  %291 = load i8, i8* %290, align 1
  %292 = icmp eq i8 %291, 2
  br i1 %292, label %293, label %336

293:                                              ; preds = %285
  %294 = zext i8 %13 to i64
  %295 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %294
  %296 = load i8, i8* %295, align 1
  %297 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %294
  %298 = load i8, i8* %297, align 1
  %299 = icmp ult i8 %296, %298
  %300 = select i1 %299, i8 %296, i8 %298
  %301 = icmp ult i8 %300, 8
  br i1 %301, label %336, label %302

302:                                              ; preds = %293
  %303 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %304 = call i32 @av1_get_reference_mode_context(%struct.macroblockd* %8) #4
  %305 = sext i32 %304 to i64
  %306 = load i8, i8* %288, align 1
  %307 = icmp slt i8 %306, 1
  %308 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %303, i64 0, i32 31, i64 %305, i64 2
  %309 = load i16, i16* %308, align 2
  %310 = icmp ugt i16 %309, 15
  %311 = select i1 %310, i32 4, i32 3
  %312 = icmp ugt i16 %309, 31
  %313 = select i1 %312, i32 2, i32 1
  %314 = add nuw nsw i32 %313, %311
  %315 = select i1 %307, i32 0, i32 32768
  %316 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %303, i64 0, i32 31, i64 %305, i64 0
  %317 = load i16, i16* %316, align 2
  %318 = zext i16 %317 to i32
  %319 = icmp ult i32 %315, %318
  br i1 %319, label %320, label %325

320:                                              ; preds = %302
  %321 = sub nsw i32 %318, %315
  %322 = ashr i32 %321, %314
  %323 = trunc i32 %322 to i16
  %324 = sub i16 %317, %323
  br label %330

325:                                              ; preds = %302
  %326 = sub nsw i32 %315, %318
  %327 = ashr i32 %326, %314
  %328 = trunc i32 %327 to i16
  %329 = add i16 %317, %328
  br label %330

330:                                              ; preds = %325, %320
  %331 = phi i16 [ %329, %325 ], [ %324, %320 ]
  store i16 %331, i16* %316, align 2
  %332 = icmp ult i16 %309, 32
  %333 = zext i1 %332 to i16
  %334 = add i16 %309, %333
  store i16 %334, i16* %308, align 2
  %335 = load i8, i8* %288, align 1
  br label %336

336:                                              ; preds = %293, %330, %285
  %337 = phi i8 [ %289, %285 ], [ %335, %330 ], [ %289, %293 ]
  %338 = icmp slt i8 %337, 1
  br i1 %338, label %631, label %339

339:                                              ; preds = %336
  %340 = load i8, i8* %286, align 8
  %341 = icmp slt i8 %340, 5
  %342 = icmp sgt i8 %337, 4
  %343 = xor i1 %342, %341
  %344 = call i32 @av1_get_comp_reference_type_context(%struct.macroblockd* %8) #4
  %345 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %346 = sext i32 %344 to i64
  %347 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %345, i64 0, i32 33, i64 %346, i64 2
  %348 = load i16, i16* %347, align 2
  %349 = icmp ugt i16 %348, 15
  %350 = select i1 %349, i32 4, i32 3
  %351 = icmp ugt i16 %348, 31
  %352 = select i1 %351, i32 2, i32 1
  %353 = add nuw nsw i32 %352, %350
  %354 = select i1 %343, i32 0, i32 32768
  %355 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %345, i64 0, i32 33, i64 %346, i64 0
  %356 = load i16, i16* %355, align 2
  %357 = zext i16 %356 to i32
  %358 = icmp ult i32 %354, %357
  br i1 %358, label %359, label %364

359:                                              ; preds = %339
  %360 = sub nsw i32 %357, %354
  %361 = ashr i32 %360, %353
  %362 = trunc i32 %361 to i16
  %363 = sub i16 %356, %362
  br label %369

364:                                              ; preds = %339
  %365 = sub nsw i32 %354, %357
  %366 = ashr i32 %365, %353
  %367 = trunc i32 %366 to i16
  %368 = add i16 %356, %367
  br label %369

369:                                              ; preds = %364, %359
  %370 = phi i16 [ %368, %364 ], [ %363, %359 ]
  store i16 %370, i16* %355, align 2
  %371 = icmp ult i16 %348, 32
  %372 = zext i1 %371 to i16
  %373 = add i16 %348, %372
  store i16 %373, i16* %347, align 2
  br i1 %343, label %374, label %471

374:                                              ; preds = %369
  %375 = icmp eq i8 %287, 5
  %376 = call i32 @av1_get_pred_context_uni_comp_ref_p(%struct.macroblockd* %8) #4
  %377 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %378 = sext i32 %376 to i64
  %379 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %377, i64 0, i32 34, i64 %378, i64 0, i64 2
  %380 = load i16, i16* %379, align 2
  %381 = icmp ugt i16 %380, 15
  %382 = select i1 %381, i32 4, i32 3
  %383 = icmp ugt i16 %380, 31
  %384 = select i1 %383, i32 2, i32 1
  %385 = add nuw nsw i32 %384, %382
  %386 = select i1 %375, i32 32768, i32 0
  %387 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %377, i64 0, i32 34, i64 %378, i64 0, i64 0
  %388 = load i16, i16* %387, align 2
  %389 = zext i16 %388 to i32
  %390 = icmp ult i32 %386, %389
  br i1 %390, label %391, label %396

391:                                              ; preds = %374
  %392 = sub nsw i32 %389, %386
  %393 = ashr i32 %392, %385
  %394 = trunc i32 %393 to i16
  %395 = sub i16 %388, %394
  br label %401

396:                                              ; preds = %374
  %397 = sub nsw i32 %386, %389
  %398 = ashr i32 %397, %385
  %399 = trunc i32 %398 to i16
  %400 = add i16 %388, %399
  br label %401

401:                                              ; preds = %396, %391
  %402 = phi i16 [ %400, %396 ], [ %395, %391 ]
  store i16 %402, i16* %387, align 2
  %403 = icmp ult i16 %380, 32
  %404 = zext i1 %403 to i16
  %405 = add i16 %380, %404
  store i16 %405, i16* %379, align 2
  br i1 %375, label %823, label %406

406:                                              ; preds = %401
  %407 = add i8 %289, -3
  %408 = icmp ult i8 %407, 2
  %409 = call i32 @av1_get_pred_context_uni_comp_ref_p1(%struct.macroblockd* %8) #4
  %410 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %411 = sext i32 %409 to i64
  %412 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %410, i64 0, i32 34, i64 %411, i64 1, i64 2
  %413 = load i16, i16* %412, align 2
  %414 = icmp ugt i16 %413, 15
  %415 = select i1 %414, i32 4, i32 3
  %416 = icmp ugt i16 %413, 31
  %417 = select i1 %416, i32 2, i32 1
  %418 = add nuw nsw i32 %417, %415
  %419 = select i1 %408, i32 32768, i32 0
  %420 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %410, i64 0, i32 34, i64 %411, i64 1, i64 0
  %421 = load i16, i16* %420, align 2
  %422 = zext i16 %421 to i32
  %423 = icmp ult i32 %419, %422
  br i1 %423, label %424, label %429

424:                                              ; preds = %406
  %425 = sub nsw i32 %422, %419
  %426 = ashr i32 %425, %418
  %427 = trunc i32 %426 to i16
  %428 = sub i16 %421, %427
  br label %434

429:                                              ; preds = %406
  %430 = sub nsw i32 %419, %422
  %431 = ashr i32 %430, %418
  %432 = trunc i32 %431 to i16
  %433 = add i16 %421, %432
  br label %434

434:                                              ; preds = %429, %424
  %435 = phi i16 [ %433, %429 ], [ %428, %424 ]
  store i16 %435, i16* %420, align 2
  %436 = icmp ult i16 %413, 32
  %437 = zext i1 %436 to i16
  %438 = add i16 %413, %437
  store i16 %438, i16* %412, align 2
  br i1 %408, label %439, label %823

439:                                              ; preds = %434
  %440 = icmp eq i8 %289, 4
  %441 = call i32 @av1_get_pred_context_uni_comp_ref_p2(%struct.macroblockd* %8) #4
  %442 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %443 = sext i32 %441 to i64
  %444 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %442, i64 0, i32 34, i64 %443, i64 2, i64 2
  %445 = load i16, i16* %444, align 2
  %446 = icmp ugt i16 %445, 15
  %447 = select i1 %446, i32 4, i32 3
  %448 = icmp ugt i16 %445, 31
  %449 = select i1 %448, i32 2, i32 1
  %450 = add nuw nsw i32 %449, %447
  %451 = select i1 %440, i32 32768, i32 0
  %452 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %442, i64 0, i32 34, i64 %443, i64 2, i64 0
  %453 = load i16, i16* %452, align 2
  %454 = zext i16 %453 to i32
  %455 = icmp ult i32 %451, %454
  br i1 %455, label %456, label %461

456:                                              ; preds = %439
  %457 = sub nsw i32 %454, %451
  %458 = ashr i32 %457, %450
  %459 = trunc i32 %458 to i16
  %460 = sub i16 %453, %459
  br label %466

461:                                              ; preds = %439
  %462 = sub nsw i32 %451, %454
  %463 = ashr i32 %462, %450
  %464 = trunc i32 %463 to i16
  %465 = add i16 %453, %464
  br label %466

466:                                              ; preds = %461, %456
  %467 = phi i16 [ %465, %461 ], [ %460, %456 ]
  store i16 %467, i16* %452, align 2
  %468 = icmp ult i16 %445, 32
  %469 = zext i1 %468 to i16
  %470 = add i16 %445, %469
  store i16 %470, i16* %444, align 2
  br label %823

471:                                              ; preds = %369
  %472 = add i8 %287, -3
  %473 = icmp ult i8 %472, 2
  %474 = call i32 @av1_get_pred_context_comp_ref_p(%struct.macroblockd* %8) #4
  %475 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %476 = sext i32 %474 to i64
  %477 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %475, i64 0, i32 35, i64 %476, i64 0, i64 2
  %478 = load i16, i16* %477, align 2
  %479 = icmp ugt i16 %478, 15
  %480 = select i1 %479, i32 4, i32 3
  %481 = icmp ugt i16 %478, 31
  %482 = select i1 %481, i32 2, i32 1
  %483 = add nuw nsw i32 %482, %480
  %484 = select i1 %473, i32 32768, i32 0
  %485 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %475, i64 0, i32 35, i64 %476, i64 0, i64 0
  %486 = load i16, i16* %485, align 2
  %487 = zext i16 %486 to i32
  %488 = icmp ult i32 %484, %487
  br i1 %488, label %489, label %494

489:                                              ; preds = %471
  %490 = sub nsw i32 %487, %484
  %491 = ashr i32 %490, %483
  %492 = trunc i32 %491 to i16
  %493 = sub i16 %486, %492
  br label %499

494:                                              ; preds = %471
  %495 = sub nsw i32 %484, %487
  %496 = ashr i32 %495, %483
  %497 = trunc i32 %496 to i16
  %498 = add i16 %486, %497
  br label %499

499:                                              ; preds = %494, %489
  %500 = phi i16 [ %498, %494 ], [ %493, %489 ]
  store i16 %500, i16* %485, align 2
  %501 = icmp ult i16 %478, 32
  %502 = zext i1 %501 to i16
  %503 = add i16 %478, %502
  store i16 %503, i16* %477, align 2
  br i1 %473, label %533, label %504

504:                                              ; preds = %499
  %505 = call i32 @av1_get_pred_context_comp_ref_p1(%struct.macroblockd* %8) #4
  %506 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %507 = sext i32 %505 to i64
  %508 = icmp eq i8 %287, 2
  %509 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %506, i64 0, i32 35, i64 %507, i64 1, i64 2
  %510 = load i16, i16* %509, align 2
  %511 = icmp ugt i16 %510, 15
  %512 = select i1 %511, i32 4, i32 3
  %513 = icmp ugt i16 %510, 31
  %514 = select i1 %513, i32 2, i32 1
  %515 = add nuw nsw i32 %514, %512
  %516 = select i1 %508, i32 32768, i32 0
  %517 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %506, i64 0, i32 35, i64 %507, i64 1, i64 0
  %518 = load i16, i16* %517, align 2
  %519 = zext i16 %518 to i32
  %520 = icmp ult i32 %516, %519
  br i1 %520, label %521, label %526

521:                                              ; preds = %504
  %522 = sub nsw i32 %519, %516
  %523 = ashr i32 %522, %515
  %524 = trunc i32 %523 to i16
  %525 = sub i16 %518, %524
  br label %531

526:                                              ; preds = %504
  %527 = sub nsw i32 %516, %519
  %528 = ashr i32 %527, %515
  %529 = trunc i32 %528 to i16
  %530 = add i16 %518, %529
  br label %531

531:                                              ; preds = %526, %521
  %532 = phi i16 [ %530, %526 ], [ %525, %521 ]
  store i16 %532, i16* %517, align 2
  br label %562

533:                                              ; preds = %499
  %534 = icmp eq i8 %287, 4
  %535 = call i32 @av1_get_pred_context_comp_ref_p2(%struct.macroblockd* %8) #4
  %536 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %537 = sext i32 %535 to i64
  %538 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %536, i64 0, i32 35, i64 %537, i64 2, i64 2
  %539 = load i16, i16* %538, align 2
  %540 = icmp ugt i16 %539, 15
  %541 = select i1 %540, i32 4, i32 3
  %542 = icmp ugt i16 %539, 31
  %543 = select i1 %542, i32 2, i32 1
  %544 = add nuw nsw i32 %543, %541
  %545 = select i1 %534, i32 32768, i32 0
  %546 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %536, i64 0, i32 35, i64 %537, i64 2, i64 0
  %547 = load i16, i16* %546, align 2
  %548 = zext i16 %547 to i32
  %549 = icmp ult i32 %545, %548
  br i1 %549, label %550, label %555

550:                                              ; preds = %533
  %551 = sub nsw i32 %548, %545
  %552 = ashr i32 %551, %544
  %553 = trunc i32 %552 to i16
  %554 = sub i16 %547, %553
  br label %560

555:                                              ; preds = %533
  %556 = sub nsw i32 %545, %548
  %557 = ashr i32 %556, %544
  %558 = trunc i32 %557 to i16
  %559 = add i16 %547, %558
  br label %560

560:                                              ; preds = %555, %550
  %561 = phi i16 [ %559, %555 ], [ %554, %550 ]
  store i16 %561, i16* %546, align 2
  br label %562

562:                                              ; preds = %560, %531
  %563 = phi i16 [ %539, %560 ], [ %510, %531 ]
  %564 = phi i16* [ %538, %560 ], [ %509, %531 ]
  %565 = icmp ult i16 %563, 32
  %566 = zext i1 %565 to i16
  %567 = add i16 %563, %566
  store i16 %567, i16* %564, align 2
  %568 = call i32 @av1_get_pred_context_comp_bwdref_p(%struct.macroblockd* %8) #4
  %569 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %570 = sext i32 %568 to i64
  %571 = icmp eq i8 %289, 7
  %572 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %569, i64 0, i32 36, i64 %570, i64 0, i64 2
  %573 = load i16, i16* %572, align 2
  %574 = icmp ugt i16 %573, 15
  %575 = select i1 %574, i32 4, i32 3
  %576 = icmp ugt i16 %573, 31
  %577 = select i1 %576, i32 2, i32 1
  %578 = add nuw nsw i32 %577, %575
  %579 = select i1 %571, i32 32768, i32 0
  %580 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %569, i64 0, i32 36, i64 %570, i64 0, i64 0
  %581 = load i16, i16* %580, align 2
  %582 = zext i16 %581 to i32
  %583 = icmp ult i32 %579, %582
  br i1 %583, label %584, label %589

584:                                              ; preds = %562
  %585 = sub nsw i32 %582, %579
  %586 = ashr i32 %585, %578
  %587 = trunc i32 %586 to i16
  %588 = sub i16 %581, %587
  br label %594

589:                                              ; preds = %562
  %590 = sub nsw i32 %579, %582
  %591 = ashr i32 %590, %578
  %592 = trunc i32 %591 to i16
  %593 = add i16 %581, %592
  br label %594

594:                                              ; preds = %589, %584
  %595 = phi i16 [ %593, %589 ], [ %588, %584 ]
  store i16 %595, i16* %580, align 2
  %596 = icmp ult i16 %573, 32
  %597 = zext i1 %596 to i16
  %598 = add i16 %573, %597
  store i16 %598, i16* %572, align 2
  br i1 %571, label %823, label %599

599:                                              ; preds = %594
  %600 = call i32 @av1_get_pred_context_comp_bwdref_p1(%struct.macroblockd* %8) #4
  %601 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %602 = sext i32 %600 to i64
  %603 = icmp eq i8 %289, 6
  %604 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %601, i64 0, i32 36, i64 %602, i64 1, i64 2
  %605 = load i16, i16* %604, align 2
  %606 = icmp ugt i16 %605, 15
  %607 = select i1 %606, i32 4, i32 3
  %608 = icmp ugt i16 %605, 31
  %609 = select i1 %608, i32 2, i32 1
  %610 = add nuw nsw i32 %609, %607
  %611 = select i1 %603, i32 32768, i32 0
  %612 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %601, i64 0, i32 36, i64 %602, i64 1, i64 0
  %613 = load i16, i16* %612, align 2
  %614 = zext i16 %613 to i32
  %615 = icmp ult i32 %611, %614
  br i1 %615, label %616, label %621

616:                                              ; preds = %599
  %617 = sub nsw i32 %614, %611
  %618 = ashr i32 %617, %610
  %619 = trunc i32 %618 to i16
  %620 = sub i16 %613, %619
  br label %626

621:                                              ; preds = %599
  %622 = sub nsw i32 %611, %614
  %623 = ashr i32 %622, %610
  %624 = trunc i32 %623 to i16
  %625 = add i16 %613, %624
  br label %626

626:                                              ; preds = %621, %616
  %627 = phi i16 [ %625, %621 ], [ %620, %616 ]
  store i16 %627, i16* %612, align 2
  %628 = icmp ult i16 %605, 32
  %629 = zext i1 %628 to i16
  %630 = add i16 %605, %629
  store i16 %630, i16* %604, align 2
  br label %823

631:                                              ; preds = %336
  %632 = icmp sgt i8 %287, 4
  %633 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %634 = call i32 @av1_get_pred_context_single_ref_p1(%struct.macroblockd* %8) #4
  %635 = sext i32 %634 to i64
  %636 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %633, i64 0, i32 32, i64 %635, i64 0, i64 2
  %637 = load i16, i16* %636, align 2
  %638 = icmp ugt i16 %637, 15
  %639 = select i1 %638, i32 4, i32 3
  %640 = icmp ugt i16 %637, 31
  %641 = select i1 %640, i32 2, i32 1
  %642 = add nuw nsw i32 %641, %639
  %643 = select i1 %632, i32 32768, i32 0
  %644 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %633, i64 0, i32 32, i64 %635, i64 0, i64 0
  %645 = load i16, i16* %644, align 2
  %646 = zext i16 %645 to i32
  %647 = icmp ult i32 %643, %646
  br i1 %647, label %648, label %653

648:                                              ; preds = %631
  %649 = sub nsw i32 %646, %643
  %650 = ashr i32 %649, %642
  %651 = trunc i32 %650 to i16
  %652 = sub i16 %645, %651
  br label %658

653:                                              ; preds = %631
  %654 = sub nsw i32 %643, %646
  %655 = ashr i32 %654, %642
  %656 = trunc i32 %655 to i16
  %657 = add i16 %645, %656
  br label %658

658:                                              ; preds = %653, %648
  %659 = phi i16 [ %657, %653 ], [ %652, %648 ]
  store i16 %659, i16* %644, align 2
  %660 = icmp ult i16 %637, 32
  %661 = zext i1 %660 to i16
  %662 = add i16 %637, %661
  store i16 %662, i16* %636, align 2
  br i1 %632, label %663, label %727

663:                                              ; preds = %658
  %664 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %665 = call i32 @av1_get_pred_context_single_ref_p2(%struct.macroblockd* %8) #4
  %666 = sext i32 %665 to i64
  %667 = icmp eq i8 %287, 7
  %668 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %664, i64 0, i32 32, i64 %666, i64 1, i64 2
  %669 = load i16, i16* %668, align 2
  %670 = icmp ugt i16 %669, 15
  %671 = select i1 %670, i32 4, i32 3
  %672 = icmp ugt i16 %669, 31
  %673 = select i1 %672, i32 2, i32 1
  %674 = add nuw nsw i32 %673, %671
  %675 = select i1 %667, i32 32768, i32 0
  %676 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %664, i64 0, i32 32, i64 %666, i64 1, i64 0
  %677 = load i16, i16* %676, align 2
  %678 = zext i16 %677 to i32
  %679 = icmp ult i32 %675, %678
  br i1 %679, label %680, label %685

680:                                              ; preds = %663
  %681 = sub nsw i32 %678, %675
  %682 = ashr i32 %681, %674
  %683 = trunc i32 %682 to i16
  %684 = sub i16 %677, %683
  br label %690

685:                                              ; preds = %663
  %686 = sub nsw i32 %675, %678
  %687 = ashr i32 %686, %674
  %688 = trunc i32 %687 to i16
  %689 = add i16 %677, %688
  br label %690

690:                                              ; preds = %685, %680
  %691 = phi i16 [ %689, %685 ], [ %684, %680 ]
  store i16 %691, i16* %676, align 2
  %692 = icmp ult i16 %669, 32
  %693 = zext i1 %692 to i16
  %694 = add i16 %669, %693
  store i16 %694, i16* %668, align 2
  br i1 %667, label %823, label %695

695:                                              ; preds = %690
  %696 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %697 = call i32 @av1_get_pred_context_single_ref_p6(%struct.macroblockd* %8) #4
  %698 = sext i32 %697 to i64
  %699 = icmp eq i8 %287, 6
  %700 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %696, i64 0, i32 32, i64 %698, i64 5, i64 2
  %701 = load i16, i16* %700, align 2
  %702 = icmp ugt i16 %701, 15
  %703 = select i1 %702, i32 4, i32 3
  %704 = icmp ugt i16 %701, 31
  %705 = select i1 %704, i32 2, i32 1
  %706 = add nuw nsw i32 %705, %703
  %707 = select i1 %699, i32 32768, i32 0
  %708 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %696, i64 0, i32 32, i64 %698, i64 5, i64 0
  %709 = load i16, i16* %708, align 2
  %710 = zext i16 %709 to i32
  %711 = icmp ult i32 %707, %710
  br i1 %711, label %712, label %717

712:                                              ; preds = %695
  %713 = sub nsw i32 %710, %707
  %714 = ashr i32 %713, %706
  %715 = trunc i32 %714 to i16
  %716 = sub i16 %709, %715
  br label %722

717:                                              ; preds = %695
  %718 = sub nsw i32 %707, %710
  %719 = ashr i32 %718, %706
  %720 = trunc i32 %719 to i16
  %721 = add i16 %709, %720
  br label %722

722:                                              ; preds = %717, %712
  %723 = phi i16 [ %721, %717 ], [ %716, %712 ]
  store i16 %723, i16* %708, align 2
  %724 = icmp ult i16 %701, 32
  %725 = zext i1 %724 to i16
  %726 = add i16 %701, %725
  store i16 %726, i16* %700, align 2
  br label %823

727:                                              ; preds = %658
  %728 = add i8 %287, -1
  %729 = icmp ugt i8 %728, 1
  %730 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %731 = call i32 @av1_get_pred_context_single_ref_p3(%struct.macroblockd* %8) #4
  %732 = sext i32 %731 to i64
  %733 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %730, i64 0, i32 32, i64 %732, i64 2, i64 2
  %734 = load i16, i16* %733, align 2
  %735 = icmp ugt i16 %734, 15
  %736 = select i1 %735, i32 4, i32 3
  %737 = icmp ugt i16 %734, 31
  %738 = select i1 %737, i32 2, i32 1
  %739 = add nuw nsw i32 %738, %736
  %740 = select i1 %729, i32 32768, i32 0
  %741 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %730, i64 0, i32 32, i64 %732, i64 2, i64 0
  %742 = load i16, i16* %741, align 2
  %743 = zext i16 %742 to i32
  %744 = icmp ult i32 %740, %743
  br i1 %744, label %745, label %750

745:                                              ; preds = %727
  %746 = sub nsw i32 %743, %740
  %747 = ashr i32 %746, %739
  %748 = trunc i32 %747 to i16
  %749 = sub i16 %742, %748
  br label %755

750:                                              ; preds = %727
  %751 = sub nsw i32 %740, %743
  %752 = ashr i32 %751, %739
  %753 = trunc i32 %752 to i16
  %754 = add i16 %742, %753
  br label %755

755:                                              ; preds = %750, %745
  %756 = phi i16 [ %754, %750 ], [ %749, %745 ]
  store i16 %756, i16* %741, align 2
  %757 = icmp ult i16 %734, 32
  %758 = zext i1 %757 to i16
  %759 = add i16 %734, %758
  store i16 %759, i16* %733, align 2
  %760 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  br i1 %729, label %792, label %761

761:                                              ; preds = %755
  %762 = call i32 @av1_get_pred_context_single_ref_p4(%struct.macroblockd* %8) #4
  %763 = sext i32 %762 to i64
  %764 = icmp eq i8 %287, 1
  %765 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %760, i64 0, i32 32, i64 %763, i64 3, i64 2
  %766 = load i16, i16* %765, align 2
  %767 = icmp ugt i16 %766, 15
  %768 = select i1 %767, i32 4, i32 3
  %769 = icmp ugt i16 %766, 31
  %770 = select i1 %769, i32 2, i32 1
  %771 = add nuw nsw i32 %770, %768
  %772 = select i1 %764, i32 0, i32 32768
  %773 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %760, i64 0, i32 32, i64 %763, i64 3, i64 0
  %774 = load i16, i16* %773, align 2
  %775 = zext i16 %774 to i32
  %776 = icmp ult i32 %772, %775
  br i1 %776, label %777, label %782

777:                                              ; preds = %761
  %778 = sub nsw i32 %775, %772
  %779 = ashr i32 %778, %771
  %780 = trunc i32 %779 to i16
  %781 = sub i16 %774, %780
  br label %787

782:                                              ; preds = %761
  %783 = sub nsw i32 %772, %775
  %784 = ashr i32 %783, %771
  %785 = trunc i32 %784 to i16
  %786 = add i16 %774, %785
  br label %787

787:                                              ; preds = %782, %777
  %788 = phi i16 [ %786, %782 ], [ %781, %777 ]
  store i16 %788, i16* %773, align 2
  %789 = icmp ult i16 %766, 32
  %790 = zext i1 %789 to i16
  %791 = add i16 %766, %790
  store i16 %791, i16* %765, align 2
  br label %823

792:                                              ; preds = %755
  %793 = call i32 @av1_get_pred_context_single_ref_p5(%struct.macroblockd* %8) #4
  %794 = sext i32 %793 to i64
  %795 = icmp eq i8 %287, 3
  %796 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %760, i64 0, i32 32, i64 %794, i64 4, i64 2
  %797 = load i16, i16* %796, align 2
  %798 = icmp ugt i16 %797, 15
  %799 = select i1 %798, i32 4, i32 3
  %800 = icmp ugt i16 %797, 31
  %801 = select i1 %800, i32 2, i32 1
  %802 = add nuw nsw i32 %801, %799
  %803 = select i1 %795, i32 0, i32 32768
  %804 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %760, i64 0, i32 32, i64 %794, i64 4, i64 0
  %805 = load i16, i16* %804, align 2
  %806 = zext i16 %805 to i32
  %807 = icmp ult i32 %803, %806
  br i1 %807, label %808, label %813

808:                                              ; preds = %792
  %809 = sub nsw i32 %806, %803
  %810 = ashr i32 %809, %802
  %811 = trunc i32 %810 to i16
  %812 = sub i16 %805, %811
  br label %818

813:                                              ; preds = %792
  %814 = sub nsw i32 %803, %806
  %815 = ashr i32 %814, %802
  %816 = trunc i32 %815 to i16
  %817 = add i16 %805, %816
  br label %818

818:                                              ; preds = %813, %808
  %819 = phi i16 [ %817, %813 ], [ %812, %808 ]
  store i16 %819, i16* %804, align 2
  %820 = icmp ult i16 %797, 32
  %821 = zext i1 %820 to i16
  %822 = add i16 %797, %821
  store i16 %822, i16* %796, align 2
  br label %823

823:                                              ; preds = %722, %690, %818, %787, %434, %466, %401, %594, %626
  %824 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 35
  %825 = load %struct.SequenceHeader*, %struct.SequenceHeader** %824, align 16
  %826 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %825, i64 0, i32 17
  %827 = load i8, i8* %826, align 2
  %828 = icmp eq i8 %827, 0
  br i1 %828, label %995, label %829

829:                                              ; preds = %823
  %830 = load i8, i8* %12, align 8
  %831 = add i8 %830, -3
  %832 = icmp ugt i8 %831, 6
  br i1 %832, label %995, label %833

833:                                              ; preds = %829
  %834 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 2
  %835 = load i8, i8* %834, align 2
  %836 = add i8 %835, -13
  %837 = icmp ugt i8 %836, 3
  br i1 %837, label %995, label %838

838:                                              ; preds = %833
  %839 = load i8, i8* %286, align 1
  %840 = icmp sgt i8 %839, 0
  br i1 %840, label %841, label %995

841:                                              ; preds = %838
  %842 = load i8, i8* %288, align 1
  %843 = icmp sgt i8 %842, 0
  br i1 %843, label %995, label %844

844:                                              ; preds = %841
  %845 = zext i8 %13 to i64
  %846 = getelementptr inbounds [22 x i8], [22 x i8]* @size_group_lookup, i64 0, i64 %845
  %847 = load i8, i8* %846, align 1
  %848 = icmp eq i8 %842, 0
  %849 = zext i8 %847 to i64
  %850 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 20, i64 %849, i64 2
  %851 = load i16, i16* %850, align 2
  %852 = icmp ugt i16 %851, 15
  %853 = select i1 %852, i32 4, i32 3
  %854 = icmp ugt i16 %851, 31
  %855 = select i1 %854, i32 2, i32 1
  %856 = add nuw nsw i32 %855, %853
  %857 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 20, i64 %849, i64 0
  %858 = load i16, i16* %857, align 2
  %859 = zext i16 %858 to i32
  br i1 %848, label %869, label %860

860:                                              ; preds = %844
  %861 = icmp eq i16 %858, 0
  %862 = lshr i32 %859, %856
  %863 = trunc i32 %862 to i16
  %864 = sub i16 %858, %863
  %865 = select i1 %861, i16 0, i16 %864
  store i16 %865, i16* %857, align 2
  %866 = icmp ult i16 %851, 32
  %867 = zext i1 %866 to i16
  %868 = add i16 %851, %867
  store i16 %868, i16* %850, align 2
  br label %995

869:                                              ; preds = %844
  %870 = icmp ugt i16 %858, -32768
  br i1 %870, label %871, label %876

871:                                              ; preds = %869
  %872 = add nsw i32 %859, -32768
  %873 = ashr i32 %872, %856
  %874 = trunc i32 %873 to i16
  %875 = sub i16 %858, %874
  br label %881

876:                                              ; preds = %869
  %877 = sub nsw i32 32768, %859
  %878 = ashr i32 %877, %856
  %879 = trunc i32 %878 to i16
  %880 = add i16 %858, %879
  br label %881

881:                                              ; preds = %876, %871
  %882 = phi i16 [ %880, %876 ], [ %875, %871 ]
  store i16 %882, i16* %857, align 2
  %883 = icmp ult i16 %851, 32
  %884 = zext i1 %883 to i16
  %885 = add i16 %851, %884
  store i16 %885, i16* %850, align 2
  %886 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 14
  %887 = load i8, i8* %886, align 8
  %888 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 22, i64 %849, i64 4
  %889 = load i16, i16* %888, align 2
  %890 = icmp ugt i16 %889, 15
  %891 = select i1 %890, i32 4, i32 3
  %892 = icmp ugt i16 %889, 31
  %893 = select i1 %892, i32 3, i32 2
  %894 = add nuw nsw i32 %893, %891
  %895 = sext i8 %887 to i64
  %896 = and i64 %895, 4294967295
  %897 = icmp eq i64 %896, 0
  %898 = select i1 %897, i32 0, i32 32768
  %899 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 22, i64 %849, i64 0
  %900 = load i16, i16* %899, align 2
  %901 = zext i16 %900 to i32
  %902 = icmp ult i32 %898, %901
  br i1 %902, label %903, label %908

903:                                              ; preds = %881
  %904 = sub nsw i32 %901, %898
  %905 = ashr i32 %904, %894
  %906 = trunc i32 %905 to i16
  %907 = sub i16 %900, %906
  br label %913

908:                                              ; preds = %881
  %909 = sub nsw i32 %898, %901
  %910 = ashr i32 %909, %894
  %911 = trunc i32 %910 to i16
  %912 = add i16 %900, %911
  br label %913

913:                                              ; preds = %908, %903
  %914 = phi i16 [ %912, %908 ], [ %907, %903 ]
  store i16 %914, i16* %899, align 2
  %915 = icmp eq i64 %896, 1
  %916 = select i1 %915, i32 0, i32 %898
  %917 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 22, i64 %849, i64 1
  %918 = load i16, i16* %917, align 2
  %919 = zext i16 %918 to i32
  %920 = icmp ult i32 %916, %919
  br i1 %920, label %2122, label %2117

921:                                              ; preds = %2145
  %922 = load i16, i16* %16, align 1
  %923 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 21, i64 %845, i64 2
  %924 = load i16, i16* %923, align 2
  %925 = icmp ugt i16 %924, 15
  %926 = select i1 %925, i32 4, i32 3
  %927 = icmp ugt i16 %924, 31
  %928 = select i1 %927, i32 2, i32 1
  %929 = add nuw nsw i32 %928, %926
  %930 = shl i16 %922, 5
  %931 = and i16 %930, -32768
  %932 = zext i16 %931 to i32
  %933 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 21, i64 %845, i64 0
  %934 = load i16, i16* %933, align 2
  %935 = zext i16 %934 to i32
  %936 = icmp ult i16 %931, %934
  br i1 %936, label %937, label %942

937:                                              ; preds = %921
  %938 = sub nsw i32 %935, %932
  %939 = ashr i32 %938, %929
  %940 = trunc i32 %939 to i16
  %941 = sub i16 %934, %940
  br label %947

942:                                              ; preds = %921
  %943 = sub nsw i32 %932, %935
  %944 = ashr i32 %943, %929
  %945 = trunc i32 %944 to i16
  %946 = add i16 %934, %945
  br label %947

947:                                              ; preds = %942, %937
  %948 = phi i16 [ %946, %942 ], [ %941, %937 ]
  store i16 %948, i16* %933, align 2
  %949 = icmp ult i16 %924, 32
  %950 = zext i1 %949 to i16
  %951 = add i16 %924, %950
  store i16 %951, i16* %923, align 2
  %952 = load i16, i16* %16, align 1
  %953 = and i16 %952, 1024
  %954 = icmp eq i16 %953, 0
  br i1 %954, label %995, label %955

955:                                              ; preds = %947
  %956 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 15
  %957 = load i8, i8* %956, align 1
  %958 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 19, i64 %845, i64 16
  %959 = load i16, i16* %958, align 2
  %960 = icmp ugt i16 %959, 15
  %961 = select i1 %960, i32 4, i32 3
  %962 = icmp ugt i16 %959, 31
  %963 = select i1 %962, i32 3, i32 2
  %964 = add nuw nsw i32 %963, %961
  %965 = sext i8 %957 to i64
  %966 = and i64 %965, 4294967295
  br label %967

967:                                              ; preds = %986, %955
  %968 = phi i64 [ 0, %955 ], [ %988, %986 ]
  %969 = phi i32 [ 32768, %955 ], [ %971, %986 ]
  %970 = icmp eq i64 %968, %966
  %971 = select i1 %970, i32 0, i32 %969
  %972 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 19, i64 %845, i64 %968
  %973 = load i16, i16* %972, align 2
  %974 = zext i16 %973 to i32
  %975 = icmp slt i32 %971, %974
  br i1 %975, label %976, label %981

976:                                              ; preds = %967
  %977 = sub nsw i32 %974, %971
  %978 = ashr i32 %977, %964
  %979 = trunc i32 %978 to i16
  %980 = sub i16 %973, %979
  br label %986

981:                                              ; preds = %967
  %982 = sub nsw i32 %971, %974
  %983 = ashr i32 %982, %964
  %984 = trunc i32 %983 to i16
  %985 = add i16 %973, %984
  br label %986

986:                                              ; preds = %981, %976
  %987 = phi i16 [ %985, %981 ], [ %980, %976 ]
  store i16 %987, i16* %972, align 2
  %988 = add nuw nsw i64 %968, 1
  %989 = icmp eq i64 %988, 15
  br i1 %989, label %990, label %967

990:                                              ; preds = %986
  %991 = load i16, i16* %958, align 2
  %992 = icmp ult i16 %991, 32
  %993 = zext i1 %992 to i16
  %994 = add i16 %991, %993
  store i16 %994, i16* %958, align 2
  br label %995

995:                                              ; preds = %838, %829, %833, %860, %990, %2145, %947, %841, %823
  %996 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 20, i32 11
  %997 = load i8, i8* %996, align 1, !range !5
  %998 = icmp eq i8 %997, 0
  br i1 %998, label %1074, label %999

999:                                              ; preds = %995
  %1000 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 46
  %1001 = load %struct.WarpedMotionParams*, %struct.WarpedMotionParams** %1000, align 8
  %1002 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 20, i32 5
  %1003 = load i8, i8* %1002, align 1, !range !5
  %1004 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 11
  %1005 = load i8, i8* %1004, align 2
  %1006 = icmp eq i8 %1005, 0
  br i1 %1006, label %1074, label %1007

1007:                                             ; preds = %999
  %1008 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 44
  %1009 = load i32, i32* %1008, align 8
  %1010 = icmp eq i32 %1009, 0
  br i1 %1010, label %1018, label %1011

1011:                                             ; preds = %1007
  %1012 = load i8, i8* %12, align 8
  %1013 = zext i8 %1012 to i64
  %1014 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %1013
  %1015 = load i8, i8* %1014, align 1
  %1016 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %1013
  %1017 = load i8, i8* %1016, align 1
  br label %1037

1018:                                             ; preds = %1007
  %1019 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 2
  %1020 = load i8, i8* %1019, align 2
  %1021 = load i8, i8* %12, align 8
  %1022 = zext i8 %1021 to i64
  %1023 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %1022
  %1024 = load i8, i8* %1023, align 1
  %1025 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %1022
  %1026 = load i8, i8* %1025, align 1
  switch i8 %1020, label %1037 [
    i8 15, label %1027
    i8 23, label %1027
  ]

1027:                                             ; preds = %1018, %1018
  %1028 = load i8, i8* %286, align 8
  %1029 = sext i8 %1028 to i64
  %1030 = getelementptr inbounds %struct.WarpedMotionParams, %struct.WarpedMotionParams* %1001, i64 %1029, i32 5
  %1031 = load i8, i8* %1030, align 4
  %1032 = icmp ult i8 %1024, %1026
  %1033 = select i1 %1032, i8 %1024, i8 %1026
  %1034 = icmp ult i8 %1033, 8
  %1035 = icmp ult i8 %1031, 2
  %1036 = or i1 %1034, %1035
  br i1 %1036, label %1037, label %1074

1037:                                             ; preds = %1027, %1018, %1011
  %1038 = phi i8 [ %1017, %1011 ], [ %1026, %1018 ], [ %1026, %1027 ]
  %1039 = phi i8 [ %1015, %1011 ], [ %1024, %1018 ], [ %1024, %1027 ]
  %1040 = icmp ult i8 %1039, %1038
  %1041 = select i1 %1040, i8 %1039, i8 %1038
  %1042 = icmp ult i8 %1041, 8
  br i1 %1042, label %1074, label %1043

1043:                                             ; preds = %1037
  %1044 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 2
  %1045 = load i8, i8* %1044, align 2
  %1046 = add i8 %1045, -13
  %1047 = icmp ugt i8 %1046, 11
  br i1 %1047, label %1074, label %1048

1048:                                             ; preds = %1043
  %1049 = load i8, i8* %288, align 1
  %1050 = icmp sgt i8 %1049, -1
  br i1 %1050, label %1077, label %1051

1051:                                             ; preds = %1048
  %1052 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 10
  %1053 = load i8, i8* %1052, align 1
  %1054 = icmp eq i8 %1053, 0
  %1055 = icmp eq i8 %1003, 0
  %1056 = or i1 %1055, %1054
  %1057 = xor i1 %1010, true
  %1058 = or i1 %1056, %1057
  br i1 %1058, label %1073, label %1059

1059:                                             ; preds = %1051
  %1060 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 21, i64 0
  %1061 = load %struct.scale_factors*, %struct.scale_factors** %1060, align 8
  %1062 = getelementptr inbounds %struct.scale_factors, %struct.scale_factors* %1061, i64 0, i32 0
  %1063 = load i32, i32* %1062, align 8
  %1064 = icmp eq i32 %1063, -1
  br i1 %1064, label %1074, label %1065

1065:                                             ; preds = %1059
  %1066 = getelementptr inbounds %struct.scale_factors, %struct.scale_factors* %1061, i64 0, i32 1
  %1067 = load i32, i32* %1066, align 4
  %1068 = icmp eq i32 %1067, -1
  br i1 %1068, label %1074, label %1069

1069:                                             ; preds = %1065
  %1070 = icmp eq i32 %1063, 16384
  %1071 = icmp eq i32 %1067, 16384
  %1072 = and i1 %1070, %1071
  br i1 %1072, label %1074, label %1073

1073:                                             ; preds = %1069, %1051
  br label %1074

1074:                                             ; preds = %995, %999, %1027, %1037, %1043, %1059, %1065, %1069, %1073
  %1075 = phi i8 [ 2, %1069 ], [ 2, %1059 ], [ 2, %1065 ], [ 0, %1027 ], [ 0, %1037 ], [ 0, %1043 ], [ 0, %999 ], [ 1, %1073 ], [ 0, %995 ]
  %1076 = load i8, i8* %288, align 1
  br label %1077

1077:                                             ; preds = %1074, %1048
  %1078 = phi i8 [ %1076, %1074 ], [ %1049, %1048 ]
  %1079 = phi i8 [ %1075, %1074 ], [ 0, %1048 ]
  %1080 = icmp eq i8 %1078, 0
  br i1 %1080, label %1151, label %1081

1081:                                             ; preds = %1077
  switch i8 %1079, label %1151 [
    i8 2, label %1082
    i8 1, label %1119
  ]

1082:                                             ; preds = %1081
  %1083 = zext i8 %13 to i64
  %1084 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 9
  %1085 = load i8, i8* %1084, align 8
  %1086 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 23, i64 %1083, i64 3
  %1087 = load i16, i16* %1086, align 2
  %1088 = icmp ugt i16 %1087, 15
  %1089 = select i1 %1088, i32 4, i32 3
  %1090 = icmp ugt i16 %1087, 31
  %1091 = select i1 %1090, i32 2, i32 1
  %1092 = add nuw nsw i32 %1091, %1089
  %1093 = sext i8 %1085 to i64
  %1094 = and i64 %1093, 4294967295
  %1095 = icmp eq i64 %1094, 0
  %1096 = select i1 %1095, i32 0, i32 32768
  %1097 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 23, i64 %1083, i64 0
  %1098 = load i16, i16* %1097, align 2
  %1099 = zext i16 %1098 to i32
  %1100 = icmp ult i32 %1096, %1099
  br i1 %1100, label %1101, label %1106

1101:                                             ; preds = %1082
  %1102 = sub nsw i32 %1099, %1096
  %1103 = ashr i32 %1102, %1092
  %1104 = trunc i32 %1103 to i16
  %1105 = sub i16 %1098, %1104
  br label %1111

1106:                                             ; preds = %1082
  %1107 = sub nsw i32 %1096, %1099
  %1108 = ashr i32 %1107, %1092
  %1109 = trunc i32 %1108 to i16
  %1110 = add i16 %1098, %1109
  br label %1111

1111:                                             ; preds = %1106, %1101
  %1112 = phi i16 [ %1110, %1106 ], [ %1105, %1101 ]
  store i16 %1112, i16* %1097, align 2
  %1113 = icmp eq i64 %1094, 1
  %1114 = select i1 %1113, i32 0, i32 %1096
  %1115 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 23, i64 %1083, i64 1
  %1116 = load i16, i16* %1115, align 2
  %1117 = zext i16 %1116 to i32
  %1118 = icmp ult i32 %1114, %1117
  br i1 %1118, label %2107, label %2102

1119:                                             ; preds = %1081
  %1120 = zext i8 %13 to i64
  %1121 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 9
  %1122 = load i8, i8* %1121, align 8
  %1123 = icmp eq i8 %1122, 1
  %1124 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 24, i64 %1120, i64 2
  %1125 = load i16, i16* %1124, align 2
  %1126 = icmp ugt i16 %1125, 15
  %1127 = select i1 %1126, i32 4, i32 3
  %1128 = icmp ugt i16 %1125, 31
  %1129 = select i1 %1128, i32 2, i32 1
  %1130 = add nuw nsw i32 %1129, %1127
  %1131 = select i1 %1123, i32 32768, i32 0
  %1132 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 24, i64 %1120, i64 0
  %1133 = load i16, i16* %1132, align 2
  %1134 = zext i16 %1133 to i32
  %1135 = icmp ult i32 %1131, %1134
  br i1 %1135, label %1136, label %1141

1136:                                             ; preds = %1119
  %1137 = sub nsw i32 %1134, %1131
  %1138 = ashr i32 %1137, %1130
  %1139 = trunc i32 %1138 to i16
  %1140 = sub i16 %1133, %1139
  br label %1146

1141:                                             ; preds = %1119
  %1142 = sub nsw i32 %1131, %1134
  %1143 = ashr i32 %1142, %1130
  %1144 = trunc i32 %1143 to i16
  %1145 = add i16 %1133, %1144
  br label %1146

1146:                                             ; preds = %1141, %1136
  %1147 = phi i16 [ %1145, %1141 ], [ %1140, %1136 ]
  store i16 %1147, i16* %1132, align 2
  %1148 = icmp ult i16 %1125, 32
  %1149 = zext i1 %1148 to i16
  %1150 = add i16 %1125, %1149
  store i16 %1150, i16* %1124, align 2
  br label %1151

1151:                                             ; preds = %1081, %1077, %2112, %1146
  %1152 = load i8, i8* %288, align 1
  %1153 = icmp slt i8 %1152, 1
  br i1 %1153, label %1436, label %1154

1154:                                             ; preds = %1151
  %1155 = zext i8 %13 to i64
  %1156 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %1155
  %1157 = load i8, i8* %1156, align 1
  %1158 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %1155
  %1159 = load i8, i8* %1158, align 1
  %1160 = icmp ult i8 %1157, %1159
  %1161 = select i1 %1160, i8 %1157, i8 %1159
  %1162 = icmp ugt i8 %1161, 7
  br i1 %1162, label %1163, label %1243

1163:                                             ; preds = %1154
  %1164 = load %struct.SequenceHeader*, %struct.SequenceHeader** %824, align 16
  %1165 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %1164, i64 0, i32 18
  %1166 = load i8, i8* %1165, align 1
  %1167 = icmp eq i8 %1166, 0
  br i1 %1167, label %1243, label %1168

1168:                                             ; preds = %1163
  %1169 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 12
  %1170 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %1169, align 16
  %1171 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 11
  %1172 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %1171, align 8
  %1173 = icmp eq %struct.MB_MODE_INFO* %1170, null
  br i1 %1173, label %1189, label %1174

1174:                                             ; preds = %1168
  %1175 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %1170, i64 0, i32 6, i64 1
  %1176 = load i8, i8* %1175, align 1
  %1177 = icmp slt i8 %1176, 1
  br i1 %1177, label %1184, label %1178

1178:                                             ; preds = %1174
  %1179 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %1170, i64 0, i32 28
  %1180 = load i16, i16* %1179, align 1
  %1181 = lshr i16 %1180, 8
  %1182 = and i16 %1181, 1
  %1183 = zext i16 %1182 to i32
  br label %1189

1184:                                             ; preds = %1174
  %1185 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %1170, i64 0, i32 6, i64 0
  %1186 = load i8, i8* %1185, align 8
  %1187 = icmp eq i8 %1186, 7
  %1188 = select i1 %1187, i32 3, i32 0
  br label %1189

1189:                                             ; preds = %1184, %1178, %1168
  %1190 = phi i32 [ %1183, %1178 ], [ 0, %1168 ], [ %1188, %1184 ]
  %1191 = icmp eq %struct.MB_MODE_INFO* %1172, null
  br i1 %1191, label %1207, label %1192

1192:                                             ; preds = %1189
  %1193 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %1172, i64 0, i32 6, i64 1
  %1194 = load i8, i8* %1193, align 1
  %1195 = icmp slt i8 %1194, 1
  br i1 %1195, label %1202, label %1196

1196:                                             ; preds = %1192
  %1197 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %1172, i64 0, i32 28
  %1198 = load i16, i16* %1197, align 1
  %1199 = lshr i16 %1198, 8
  %1200 = and i16 %1199, 1
  %1201 = zext i16 %1200 to i32
  br label %1207

1202:                                             ; preds = %1192
  %1203 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %1172, i64 0, i32 6, i64 0
  %1204 = load i8, i8* %1203, align 8
  %1205 = icmp eq i8 %1204, 7
  %1206 = select i1 %1205, i32 3, i32 0
  br label %1207

1207:                                             ; preds = %1189, %1196, %1202
  %1208 = phi i32 [ %1201, %1196 ], [ 0, %1189 ], [ %1206, %1202 ]
  %1209 = add nuw nsw i32 %1208, %1190
  %1210 = icmp ult i32 %1209, 5
  %1211 = select i1 %1210, i32 %1209, i32 5
  %1212 = zext i32 %1211 to i64
  %1213 = load i16, i16* %16, align 1
  %1214 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 39, i64 %1212, i64 2
  %1215 = load i16, i16* %1214, align 2
  %1216 = icmp ugt i16 %1215, 15
  %1217 = select i1 %1216, i32 4, i32 3
  %1218 = icmp ugt i16 %1215, 31
  %1219 = select i1 %1218, i32 2, i32 1
  %1220 = add nuw nsw i32 %1219, %1217
  %1221 = shl i16 %1213, 7
  %1222 = and i16 %1221, -32768
  %1223 = zext i16 %1222 to i32
  %1224 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 39, i64 %1212, i64 0
  %1225 = load i16, i16* %1224, align 2
  %1226 = zext i16 %1225 to i32
  %1227 = icmp ult i16 %1222, %1225
  br i1 %1227, label %1228, label %1233

1228:                                             ; preds = %1207
  %1229 = sub nsw i32 %1226, %1223
  %1230 = ashr i32 %1229, %1220
  %1231 = trunc i32 %1230 to i16
  %1232 = sub i16 %1225, %1231
  br label %1238

1233:                                             ; preds = %1207
  %1234 = sub nsw i32 %1223, %1226
  %1235 = ashr i32 %1234, %1220
  %1236 = trunc i32 %1235 to i16
  %1237 = add i16 %1225, %1236
  br label %1238

1238:                                             ; preds = %1233, %1228
  %1239 = phi i16 [ %1237, %1233 ], [ %1232, %1228 ]
  store i16 %1239, i16* %1224, align 2
  %1240 = icmp ult i16 %1215, 32
  %1241 = zext i1 %1240 to i16
  %1242 = add i16 %1215, %1241
  store i16 %1242, i16* %1214, align 2
  br label %1243

1243:                                             ; preds = %1163, %1154, %1238
  %1244 = load i16, i16* %16, align 1
  %1245 = and i16 %1244, 256
  %1246 = icmp eq i16 %1245, 0
  br i1 %1246, label %1247, label %1397

1247:                                             ; preds = %1243
  %1248 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %9, align 8
  %1249 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %1248, align 8
  %1250 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %1249, i64 0, i32 6, i64 0
  %1251 = load i8, i8* %1250, align 8
  %1252 = add i8 %1251, -1
  %1253 = icmp ult i8 %1252, 8
  br i1 %1253, label %1254, label %1264

1254:                                             ; preds = %1247
  %1255 = sext i8 %1251 to i64
  %1256 = add nsw i64 %1255, -1
  %1257 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 13, i64 %1256
  %1258 = load i32, i32* %1257, align 4
  %1259 = icmp eq i32 %1258, -1
  br i1 %1259, label %1264, label %1260

1260:                                             ; preds = %1254
  %1261 = sext i32 %1258 to i64
  %1262 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 16, i64 %1261
  %1263 = load %struct.RefCntBuffer*, %struct.RefCntBuffer** %1262, align 8
  br label %1264

1264:                                             ; preds = %1260, %1254, %1247
  %1265 = phi %struct.RefCntBuffer* [ %1263, %1260 ], [ null, %1254 ], [ null, %1247 ]
  %1266 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %1249, i64 0, i32 6, i64 1
  %1267 = load i8, i8* %1266, align 1
  %1268 = add i8 %1267, -1
  %1269 = icmp ult i8 %1268, 8
  br i1 %1269, label %1270, label %1280

1270:                                             ; preds = %1264
  %1271 = sext i8 %1267 to i64
  %1272 = add nsw i64 %1271, -1
  %1273 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 13, i64 %1272
  %1274 = load i32, i32* %1273, align 4
  %1275 = icmp eq i32 %1274, -1
  br i1 %1275, label %1280, label %1276

1276:                                             ; preds = %1270
  %1277 = sext i32 %1274 to i64
  %1278 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 16, i64 %1277
  %1279 = load %struct.RefCntBuffer*, %struct.RefCntBuffer** %1278, align 8
  br label %1280

1280:                                             ; preds = %1276, %1270, %1264
  %1281 = phi %struct.RefCntBuffer* [ %1279, %1276 ], [ null, %1270 ], [ null, %1264 ]
  %1282 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 12
  %1283 = load %struct.RefCntBuffer*, %struct.RefCntBuffer** %1282, align 16
  %1284 = getelementptr inbounds %struct.RefCntBuffer, %struct.RefCntBuffer* %1283, i64 0, i32 1
  %1285 = load i32, i32* %1284, align 4
  %1286 = icmp eq %struct.RefCntBuffer* %1265, null
  br i1 %1286, label %1290, label %1287

1287:                                             ; preds = %1280
  %1288 = getelementptr inbounds %struct.RefCntBuffer, %struct.RefCntBuffer* %1265, i64 0, i32 1
  %1289 = load i32, i32* %1288, align 4
  br label %1290

1290:                                             ; preds = %1287, %1280
  %1291 = phi i32 [ %1289, %1287 ], [ 0, %1280 ]
  %1292 = icmp eq %struct.RefCntBuffer* %1281, null
  br i1 %1292, label %1296, label %1293

1293:                                             ; preds = %1290
  %1294 = getelementptr inbounds %struct.RefCntBuffer, %struct.RefCntBuffer* %1281, i64 0, i32 1
  %1295 = load i32, i32* %1294, align 4
  br label %1296

1296:                                             ; preds = %1293, %1290
  %1297 = phi i32 [ %1295, %1293 ], [ 0, %1290 ]
  %1298 = load %struct.SequenceHeader*, %struct.SequenceHeader** %824, align 16
  %1299 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %1298, i64 0, i32 10, i32 0
  %1300 = load i32, i32* %1299, align 4
  %1301 = icmp eq i32 %1300, 0
  br i1 %1301, label %1321, label %1302

1302:                                             ; preds = %1296
  %1303 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %1298, i64 0, i32 10, i32 1
  %1304 = load i32, i32* %1303, align 4
  %1305 = sub nsw i32 %1297, %1285
  %1306 = shl i32 1, %1304
  %1307 = add nsw i32 %1306, -1
  %1308 = and i32 %1307, %1305
  %1309 = and i32 %1306, %1305
  %1310 = sub nsw i32 %1308, %1309
  %1311 = icmp slt i32 %1310, 0
  %1312 = sub nsw i32 0, %1310
  %1313 = select i1 %1311, i32 %1312, i32 %1310
  %1314 = sub nsw i32 %1285, %1291
  %1315 = and i32 %1307, %1314
  %1316 = and i32 %1306, %1314
  %1317 = sub nsw i32 %1315, %1316
  %1318 = icmp slt i32 %1317, 0
  %1319 = sub nsw i32 0, %1317
  %1320 = select i1 %1318, i32 %1319, i32 %1317
  br label %1321

1321:                                             ; preds = %1302, %1296
  %1322 = phi i32 [ 0, %1296 ], [ %1313, %1302 ]
  %1323 = phi i32 [ 0, %1296 ], [ %1320, %1302 ]
  %1324 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 12
  %1325 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %1324, align 16
  %1326 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 11
  %1327 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %1326, align 8
  %1328 = icmp eq i32 %1322, %1323
  %1329 = icmp eq %struct.MB_MODE_INFO* %1325, null
  br i1 %1329, label %1345, label %1330

1330:                                             ; preds = %1321
  %1331 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %1325, i64 0, i32 6, i64 1
  %1332 = load i8, i8* %1331, align 1
  %1333 = icmp slt i8 %1332, 1
  br i1 %1333, label %1340, label %1334

1334:                                             ; preds = %1330
  %1335 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %1325, i64 0, i32 28
  %1336 = load i16, i16* %1335, align 1
  %1337 = lshr i16 %1336, 9
  %1338 = and i16 %1337, 1
  %1339 = zext i16 %1338 to i64
  br label %1345

1340:                                             ; preds = %1330
  %1341 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %1325, i64 0, i32 6, i64 0
  %1342 = load i8, i8* %1341, align 8
  %1343 = icmp eq i8 %1342, 7
  %1344 = zext i1 %1343 to i64
  br label %1345

1345:                                             ; preds = %1340, %1334, %1321
  %1346 = phi i64 [ %1339, %1334 ], [ 0, %1321 ], [ %1344, %1340 ]
  %1347 = icmp eq %struct.MB_MODE_INFO* %1327, null
  br i1 %1347, label %1363, label %1348

1348:                                             ; preds = %1345
  %1349 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %1327, i64 0, i32 6, i64 1
  %1350 = load i8, i8* %1349, align 1
  %1351 = icmp slt i8 %1350, 1
  br i1 %1351, label %1358, label %1352

1352:                                             ; preds = %1348
  %1353 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %1327, i64 0, i32 28
  %1354 = load i16, i16* %1353, align 1
  %1355 = lshr i16 %1354, 9
  %1356 = and i16 %1355, 1
  %1357 = zext i16 %1356 to i64
  br label %1363

1358:                                             ; preds = %1348
  %1359 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %1327, i64 0, i32 6, i64 0
  %1360 = load i8, i8* %1359, align 8
  %1361 = icmp eq i8 %1360, 7
  %1362 = zext i1 %1361 to i64
  br label %1363

1363:                                             ; preds = %1345, %1352, %1358
  %1364 = phi i64 [ %1357, %1352 ], [ 0, %1345 ], [ %1362, %1358 ]
  %1365 = select i1 %1328, i64 3, i64 0
  %1366 = add nuw nsw i64 %1346, %1365
  %1367 = add nuw nsw i64 %1366, %1364
  %1368 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 38, i64 %1367, i64 2
  %1369 = load i16, i16* %1368, align 2
  %1370 = icmp ugt i16 %1369, 15
  %1371 = select i1 %1370, i32 4, i32 3
  %1372 = icmp ugt i16 %1369, 31
  %1373 = select i1 %1372, i32 2, i32 1
  %1374 = add nuw nsw i32 %1373, %1371
  %1375 = shl i16 %1244, 6
  %1376 = and i16 %1375, -32768
  %1377 = zext i16 %1376 to i32
  %1378 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 38, i64 %1367, i64 0
  %1379 = load i16, i16* %1378, align 2
  %1380 = zext i16 %1379 to i32
  %1381 = icmp ult i16 %1376, %1379
  br i1 %1381, label %1382, label %1387

1382:                                             ; preds = %1363
  %1383 = sub nsw i32 %1380, %1377
  %1384 = ashr i32 %1383, %1374
  %1385 = trunc i32 %1384 to i16
  %1386 = sub i16 %1379, %1385
  br label %1392

1387:                                             ; preds = %1363
  %1388 = sub nsw i32 %1377, %1380
  %1389 = ashr i32 %1388, %1374
  %1390 = trunc i32 %1389 to i16
  %1391 = add i16 %1379, %1390
  br label %1392

1392:                                             ; preds = %1387, %1382
  %1393 = phi i16 [ %1391, %1387 ], [ %1386, %1382 ]
  store i16 %1393, i16* %1378, align 2
  %1394 = icmp ult i16 %1369, 32
  %1395 = zext i1 %1394 to i16
  %1396 = add i16 %1369, %1395
  store i16 %1396, i16* %1368, align 2
  br label %1436

1397:                                             ; preds = %1243
  br i1 %1162, label %1398, label %1436

1398:                                             ; preds = %1397
  %1399 = getelementptr inbounds [22 x %struct.wedge_params_type], [22 x %struct.wedge_params_type]* @av1_wedge_params_lookup, i64 0, i64 %1155, i32 0
  %1400 = load i32, i32* %1399, align 16
  %1401 = icmp slt i32 %1400, 1
  br i1 %1401, label %1436, label %1402

1402:                                             ; preds = %1398
  %1403 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 17, i32 4
  %1404 = load i8, i8* %1403, align 1
  %1405 = add i8 %1404, -2
  %1406 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 18, i64 %1155, i64 2
  %1407 = load i16, i16* %1406, align 2
  %1408 = icmp ugt i16 %1407, 15
  %1409 = select i1 %1408, i32 4, i32 3
  %1410 = icmp ugt i16 %1407, 31
  %1411 = select i1 %1410, i32 2, i32 1
  %1412 = add nuw nsw i32 %1411, %1409
  %1413 = sext i8 %1405 to i64
  %1414 = and i64 %1413, 4294967295
  %1415 = icmp eq i64 %1414, 0
  %1416 = select i1 %1415, i32 0, i32 32768
  %1417 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 18, i64 %1155, i64 0
  %1418 = load i16, i16* %1417, align 2
  %1419 = zext i16 %1418 to i32
  %1420 = icmp ult i32 %1416, %1419
  br i1 %1420, label %1421, label %1426

1421:                                             ; preds = %1402
  %1422 = sub nsw i32 %1419, %1416
  %1423 = ashr i32 %1422, %1412
  %1424 = trunc i32 %1423 to i16
  %1425 = sub i16 %1418, %1424
  br label %1431

1426:                                             ; preds = %1402
  %1427 = sub nsw i32 %1416, %1419
  %1428 = ashr i32 %1427, %1412
  %1429 = trunc i32 %1428 to i16
  %1430 = add i16 %1418, %1429
  br label %1431

1431:                                             ; preds = %1426, %1421
  %1432 = phi i16 [ %1430, %1426 ], [ %1425, %1421 ]
  store i16 %1432, i16* %1417, align 2
  %1433 = icmp ult i16 %1407, 32
  %1434 = zext i1 %1433 to i16
  %1435 = add i16 %1407, %1434
  store i16 %1435, i16* %1406, align 2
  br label %1436

1436:                                             ; preds = %1397, %1392, %1431, %1398, %1151
  %1437 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 17, i32 4
  %1438 = load i8, i8* %1437, align 1
  %1439 = icmp eq i8 %1438, 2
  br i1 %1439, label %1440, label %1493

1440:                                             ; preds = %1436
  %1441 = zext i8 %13 to i64
  %1442 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %1441
  %1443 = load i8, i8* %1442, align 1
  %1444 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %1441
  %1445 = load i8, i8* %1444, align 1
  %1446 = icmp ult i8 %1443, %1445
  %1447 = select i1 %1446, i8 %1443, i8 %1445
  %1448 = icmp ugt i8 %1447, 7
  br i1 %1448, label %1449, label %1493

1449:                                             ; preds = %1440
  %1450 = getelementptr inbounds [22 x %struct.wedge_params_type], [22 x %struct.wedge_params_type]* @av1_wedge_params_lookup, i64 0, i64 %1441, i32 0
  %1451 = load i32, i32* %1450, align 16
  %1452 = icmp slt i32 %1451, 1
  br i1 %1452, label %1493, label %1453

1453:                                             ; preds = %1449
  %1454 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 17, i32 1
  %1455 = load i8, i8* %1454, align 8
  %1456 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 19, i64 %1441, i64 16
  %1457 = load i16, i16* %1456, align 2
  %1458 = icmp ugt i16 %1457, 15
  %1459 = select i1 %1458, i32 4, i32 3
  %1460 = icmp ugt i16 %1457, 31
  %1461 = select i1 %1460, i32 3, i32 2
  %1462 = add nuw nsw i32 %1461, %1459
  %1463 = sext i8 %1455 to i64
  %1464 = and i64 %1463, 4294967295
  br label %1465

1465:                                             ; preds = %1484, %1453
  %1466 = phi i64 [ 0, %1453 ], [ %1486, %1484 ]
  %1467 = phi i32 [ 32768, %1453 ], [ %1469, %1484 ]
  %1468 = icmp eq i64 %1466, %1464
  %1469 = select i1 %1468, i32 0, i32 %1467
  %1470 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 19, i64 %1441, i64 %1466
  %1471 = load i16, i16* %1470, align 2
  %1472 = zext i16 %1471 to i32
  %1473 = icmp slt i32 %1469, %1472
  br i1 %1473, label %1474, label %1479

1474:                                             ; preds = %1465
  %1475 = sub nsw i32 %1472, %1469
  %1476 = ashr i32 %1475, %1462
  %1477 = trunc i32 %1476 to i16
  %1478 = sub i16 %1471, %1477
  br label %1484

1479:                                             ; preds = %1465
  %1480 = sub nsw i32 %1469, %1472
  %1481 = ashr i32 %1480, %1462
  %1482 = trunc i32 %1481 to i16
  %1483 = add i16 %1471, %1482
  br label %1484

1484:                                             ; preds = %1479, %1474
  %1485 = phi i16 [ %1483, %1479 ], [ %1478, %1474 ]
  store i16 %1485, i16* %1470, align 2
  %1486 = add nuw nsw i64 %1466, 1
  %1487 = icmp eq i64 %1486, 15
  br i1 %1487, label %1488, label %1465

1488:                                             ; preds = %1484
  %1489 = load i16, i16* %1456, align 2
  %1490 = icmp ult i16 %1489, 32
  %1491 = zext i1 %1490 to i16
  %1492 = add i16 %1489, %1491
  store i16 %1492, i16* %1456, align 2
  br label %1493

1493:                                             ; preds = %1440, %1436, %1488, %1449, %251
  %1494 = icmp eq i32 %252, 0
  br i1 %1494, label %1996, label %1495

1495:                                             ; preds = %1493
  %1496 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 20, i32 13
  %1497 = load i8, i8* %1496, align 1
  %1498 = icmp eq i8 %1497, 4
  br i1 %1498, label %1499, label %1646

1499:                                             ; preds = %1495
  %1500 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 9
  %1501 = load i8, i8* %1500, align 8
  %1502 = icmp eq i8 %1501, 2
  br i1 %1502, label %1646, label %1503

1503:                                             ; preds = %1499
  %1504 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 2
  %1505 = load i8, i8* %1504, align 2
  switch i8 %1505, label %1529 [
    i8 15, label %1506
    i8 23, label %1506
  ]

1506:                                             ; preds = %1503, %1503
  %1507 = load i8, i8* %12, align 8
  %1508 = zext i8 %1507 to i64
  %1509 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %1508
  %1510 = load i8, i8* %1509, align 1
  %1511 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %1508
  %1512 = load i8, i8* %1511, align 1
  %1513 = icmp ult i8 %1510, %1512
  %1514 = select i1 %1513, i8 %1510, i8 %1512
  %1515 = icmp ult i8 %1514, 2
  br i1 %1515, label %1529, label %1516

1516:                                             ; preds = %1506
  %1517 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 2, i32 46
  %1518 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 6, i64 1
  %1519 = load %struct.WarpedMotionParams*, %struct.WarpedMotionParams** %1517, align 8
  %1520 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 6, i64 0
  %1521 = load i8, i8* %1520, align 1
  %1522 = sext i8 %1521 to i64
  %1523 = getelementptr inbounds %struct.WarpedMotionParams, %struct.WarpedMotionParams* %1519, i64 %1522, i32 5
  %1524 = load i8, i8* %1523, align 4
  %1525 = icmp eq i8 %1524, 1
  br i1 %1525, label %1529, label %1526

1526:                                             ; preds = %1516
  %1527 = load i8, i8* %1518, align 1
  %1528 = icmp sgt i8 %1527, 0
  br i1 %1528, label %2153, label %1646

1529:                                             ; preds = %1516, %2153, %1503, %1506
  %1530 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 35
  %1531 = load %struct.SequenceHeader*, %struct.SequenceHeader** %1530, align 16
  %1532 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %1531, i64 0, i32 19
  %1533 = load i8, i8* %1532, align 8
  %1534 = icmp eq i8 %1533, 0
  %1535 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 8, i32 0
  %1536 = call i32 @av1_get_pred_context_switchable_interp(%struct.macroblockd* %8, i32 0) #4
  %1537 = load i32, i32* %1535, align 4
  %1538 = zext i32 %1537 to i64
  %1539 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %1540 = sext i32 %1536 to i64
  %1541 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %1539, i64 0, i32 55, i64 %1540, i64 3
  %1542 = load i16, i16* %1541, align 2
  %1543 = icmp ugt i16 %1542, 15
  %1544 = select i1 %1543, i32 4, i32 3
  %1545 = icmp ugt i16 %1542, 31
  %1546 = select i1 %1545, i32 2, i32 1
  %1547 = add nuw nsw i32 %1546, %1544
  %1548 = shl i64 %1538, 56
  %1549 = ashr exact i64 %1548, 56
  %1550 = and i64 %1549, 4294967295
  %1551 = icmp eq i64 %1550, 0
  %1552 = select i1 %1551, i32 0, i32 32768
  %1553 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %1539, i64 0, i32 55, i64 %1540, i64 0
  %1554 = load i16, i16* %1553, align 2
  %1555 = zext i16 %1554 to i32
  %1556 = icmp ult i32 %1552, %1555
  br i1 %1556, label %1557, label %1562

1557:                                             ; preds = %1529
  %1558 = sub nsw i32 %1555, %1552
  %1559 = ashr i32 %1558, %1547
  %1560 = trunc i32 %1559 to i16
  %1561 = sub i16 %1554, %1560
  br label %1567

1562:                                             ; preds = %1529
  %1563 = sub nsw i32 %1552, %1555
  %1564 = ashr i32 %1563, %1547
  %1565 = trunc i32 %1564 to i16
  %1566 = add i16 %1554, %1565
  br label %1567

1567:                                             ; preds = %1562, %1557
  %1568 = phi i16 [ %1566, %1562 ], [ %1561, %1557 ]
  store i16 %1568, i16* %1553, align 2
  %1569 = icmp eq i64 %1550, 1
  %1570 = select i1 %1569, i32 0, i32 %1552
  %1571 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %1539, i64 0, i32 55, i64 %1540, i64 1
  %1572 = load i16, i16* %1571, align 2
  %1573 = zext i16 %1572 to i32
  %1574 = icmp ult i32 %1570, %1573
  br i1 %1574, label %1580, label %1575

1575:                                             ; preds = %1567
  %1576 = sub nsw i32 %1570, %1573
  %1577 = ashr i32 %1576, %1547
  %1578 = trunc i32 %1577 to i16
  %1579 = add i16 %1572, %1578
  br label %1585

1580:                                             ; preds = %1567
  %1581 = sub nsw i32 %1573, %1570
  %1582 = ashr i32 %1581, %1547
  %1583 = trunc i32 %1582 to i16
  %1584 = sub i16 %1572, %1583
  br label %1585

1585:                                             ; preds = %1580, %1575
  %1586 = phi i16 [ %1579, %1575 ], [ %1584, %1580 ]
  store i16 %1586, i16* %1571, align 2
  %1587 = icmp ult i16 %1542, 32
  %1588 = zext i1 %1587 to i16
  %1589 = add i16 %1542, %1588
  store i16 %1589, i16* %1541, align 2
  br i1 %1534, label %1646, label %1590

1590:                                             ; preds = %1585
  %1591 = call i32 @av1_get_pred_context_switchable_interp(%struct.macroblockd* %8, i32 1) #4
  %1592 = load i32, i32* %1535, align 4
  %1593 = lshr i32 %1592, 16
  %1594 = zext i32 %1593 to i64
  %1595 = load %struct.frame_contexts*, %struct.frame_contexts** %14, align 8
  %1596 = sext i32 %1591 to i64
  %1597 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %1595, i64 0, i32 55, i64 %1596, i64 3
  %1598 = load i16, i16* %1597, align 2
  %1599 = icmp ugt i16 %1598, 15
  %1600 = select i1 %1599, i32 4, i32 3
  %1601 = icmp ugt i16 %1598, 31
  %1602 = select i1 %1601, i32 2, i32 1
  %1603 = add nuw nsw i32 %1602, %1600
  %1604 = shl i64 %1594, 56
  %1605 = ashr exact i64 %1604, 56
  %1606 = and i64 %1605, 4294967295
  %1607 = icmp eq i64 %1606, 0
  %1608 = select i1 %1607, i32 0, i32 32768
  %1609 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %1595, i64 0, i32 55, i64 %1596, i64 0
  %1610 = load i16, i16* %1609, align 2
  %1611 = zext i16 %1610 to i32
  %1612 = icmp ult i32 %1608, %1611
  br i1 %1612, label %1618, label %1613

1613:                                             ; preds = %1590
  %1614 = sub nsw i32 %1608, %1611
  %1615 = ashr i32 %1614, %1603
  %1616 = trunc i32 %1615 to i16
  %1617 = add i16 %1610, %1616
  br label %1623

1618:                                             ; preds = %1590
  %1619 = sub nsw i32 %1611, %1608
  %1620 = ashr i32 %1619, %1603
  %1621 = trunc i32 %1620 to i16
  %1622 = sub i16 %1610, %1621
  br label %1623

1623:                                             ; preds = %1618, %1613
  %1624 = phi i16 [ %1617, %1613 ], [ %1622, %1618 ]
  store i16 %1624, i16* %1609, align 2
  %1625 = icmp eq i64 %1606, 1
  %1626 = select i1 %1625, i32 0, i32 %1608
  %1627 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %1595, i64 0, i32 55, i64 %1596, i64 1
  %1628 = load i16, i16* %1627, align 2
  %1629 = zext i16 %1628 to i32
  %1630 = icmp ult i32 %1626, %1629
  br i1 %1630, label %1636, label %1631

1631:                                             ; preds = %1623
  %1632 = sub nsw i32 %1626, %1629
  %1633 = ashr i32 %1632, %1603
  %1634 = trunc i32 %1633 to i16
  %1635 = add i16 %1628, %1634
  br label %1641

1636:                                             ; preds = %1623
  %1637 = sub nsw i32 %1629, %1626
  %1638 = ashr i32 %1637, %1603
  %1639 = trunc i32 %1638 to i16
  %1640 = sub i16 %1628, %1639
  br label %1641

1641:                                             ; preds = %1636, %1631
  %1642 = phi i16 [ %1635, %1631 ], [ %1640, %1636 ]
  store i16 %1642, i16* %1627, align 2
  %1643 = icmp ult i16 %1598, 32
  %1644 = zext i1 %1643 to i16
  %1645 = add i16 %1598, %1644
  store i16 %1645, i16* %1597, align 2
  br label %1646

1646:                                             ; preds = %2153, %1526, %1495, %1499, %1585, %1641
  %1647 = load i8, i8* %18, align 4
  %1648 = icmp eq i8 %1647, 0
  br i1 %1648, label %1657, label %1649

1649:                                             ; preds = %1646
  %1650 = load i16, i16* %16, align 1
  %1651 = and i16 %1650, 7
  %1652 = zext i16 %1651 to i64
  %1653 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 23, i32 5, i64 %1652
  %1654 = load i32, i32* %1653, align 4
  %1655 = and i32 %1654, 64
  %1656 = icmp eq i32 %1655, 0
  br i1 %1656, label %1657, label %1996

1657:                                             ; preds = %1646, %1649
  %1658 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 2
  %1659 = load i8, i8* %1658, align 2
  %1660 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 6, i64 0
  %1661 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 6, i64 1
  %1662 = load i8, i8* %1661, align 1
  %1663 = icmp sgt i8 %1662, 0
  %1664 = load i8, i8* %1660, align 1
  br i1 %1663, label %1665, label %1745

1665:                                             ; preds = %1657
  %1666 = icmp slt i8 %1664, 5
  %1667 = icmp sgt i8 %1662, 4
  %1668 = and i1 %1667, %1666
  br i1 %1668, label %1691, label %1669

1669:                                             ; preds = %1665
  switch i8 %1664, label %1691 [
    i8 1, label %1670
    i8 5, label %1673
    i8 2, label %1677
    i8 3, label %1681
    i8 6, label %1683
  ]

1670:                                             ; preds = %1669
  %1671 = add i8 %1662, -2
  %1672 = icmp ult i8 %1671, 3
  br i1 %1672, label %1688, label %1691

1673:                                             ; preds = %1669
  %1674 = icmp eq i8 %1662, 6
  %1675 = select i1 %1674, i8 7, i8 -1
  %1676 = icmp eq i8 %1662, 7
  br i1 %1676, label %1688, label %1685

1677:                                             ; preds = %1669
  %1678 = icmp eq i8 %1662, 4
  %1679 = select i1 %1678, i8 5, i8 -1
  %1680 = icmp eq i8 %1662, 3
  br i1 %1680, label %1688, label %1685

1681:                                             ; preds = %1669
  %1682 = icmp eq i8 %1662, 4
  br i1 %1682, label %1688, label %1691

1683:                                             ; preds = %1669
  %1684 = icmp eq i8 %1662, 7
  br i1 %1684, label %1688, label %1691

1685:                                             ; preds = %1677, %1673
  %1686 = phi i8 [ %1675, %1673 ], [ %1679, %1677 ]
  %1687 = icmp sgt i8 %1686, -1
  br i1 %1687, label %1688, label %1691

1688:                                             ; preds = %1670, %1685, %1683, %1681, %1677, %1673
  %1689 = phi i8 [ %1686, %1685 ], [ 8, %1683 ], [ 6, %1681 ], [ 3, %1673 ], [ 4, %1677 ], [ %1671, %1670 ]
  %1690 = add nuw nsw i8 %1689, 20
  br label %1695

1691:                                             ; preds = %1670, %1685, %1683, %1681, %1669, %1665
  %1692 = shl i8 %1662, 2
  %1693 = add i8 %1692, -13
  %1694 = add i8 %1693, %1664
  br label %1695

1695:                                             ; preds = %1691, %1688
  %1696 = phi i8 [ %1694, %1691 ], [ %1690, %1688 ]
  %1697 = sext i8 %1696 to i64
  %1698 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 3, i32 4, i64 %1697
  %1699 = load i16, i16* %1698, align 2
  %1700 = and i16 %1699, 7
  %1701 = lshr i16 %1699, 5
  %1702 = and i16 %1701, 7
  %1703 = zext i16 %1702 to i64
  %1704 = zext i16 %1700 to i32
  %1705 = icmp ult i32 %1704, 4
  %1706 = select i1 %1705, i32 %1704, i32 4
  %1707 = zext i32 %1706 to i64
  %1708 = getelementptr inbounds [3 x [5 x i16]], [3 x [5 x i16]]* @compound_mode_ctx_map, i64 0, i64 %1703, i64 %1707
  %1709 = load i16, i16* %1708, align 2
  %1710 = sext i16 %1709 to i64
  %1711 = add i8 %1659, -17
  %1712 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 17, i64 %1710, i64 8
  %1713 = load i16, i16* %1712, align 2
  %1714 = icmp ugt i16 %1713, 15
  %1715 = select i1 %1714, i32 4, i32 3
  %1716 = icmp ugt i16 %1713, 31
  %1717 = select i1 %1716, i32 3, i32 2
  %1718 = add nuw nsw i32 %1717, %1715
  %1719 = sext i8 %1711 to i64
  %1720 = and i64 %1719, 4294967295
  %1721 = icmp eq i64 %1720, 0
  %1722 = select i1 %1721, i32 0, i32 32768
  %1723 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 17, i64 %1710, i64 0
  %1724 = load i16, i16* %1723, align 2
  %1725 = zext i16 %1724 to i32
  %1726 = icmp ult i32 %1722, %1725
  br i1 %1726, label %1727, label %1732

1727:                                             ; preds = %1695
  %1728 = sub nsw i32 %1725, %1722
  %1729 = ashr i32 %1728, %1718
  %1730 = trunc i32 %1729 to i16
  %1731 = sub i16 %1724, %1730
  br label %1737

1732:                                             ; preds = %1695
  %1733 = sub nsw i32 %1722, %1725
  %1734 = ashr i32 %1733, %1718
  %1735 = trunc i32 %1734 to i16
  %1736 = add i16 %1724, %1735
  br label %1737

1737:                                             ; preds = %1732, %1727
  %1738 = phi i16 [ %1736, %1732 ], [ %1731, %1727 ]
  store i16 %1738, i16* %1723, align 2
  %1739 = icmp eq i64 %1720, 1
  %1740 = select i1 %1739, i32 0, i32 %1722
  %1741 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 17, i64 %1710, i64 1
  %1742 = load i16, i16* %1741, align 2
  %1743 = zext i16 %1742 to i32
  %1744 = icmp ult i32 %1740, %1743
  br i1 %1744, label %2002, label %1997

1745:                                             ; preds = %1657
  %1746 = sext i8 %1664 to i64
  %1747 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 3, i32 4, i64 %1746
  %1748 = load i16, i16* %1747, align 2
  call void @av1_update_inter_mode_stats(%struct.frame_contexts* %15, %struct.FRAME_COUNTS* %243, i8 zeroext %1659, i16 signext %1748) #4
  br label %1749

1749:                                             ; preds = %1745, %2097
  %1750 = load i8, i8* %1658, align 2
  %1751 = or i8 %1750, 8
  %1752 = icmp eq i8 %1751, 24
  br i1 %1752, label %1753, label %1851

1753:                                             ; preds = %1749
  %1754 = load i8, i8* %1661, align 1
  %1755 = icmp sgt i8 %1754, 0
  %1756 = load i8, i8* %1660, align 1
  br i1 %1755, label %1757, label %1787

1757:                                             ; preds = %1753
  %1758 = icmp slt i8 %1756, 5
  %1759 = icmp sgt i8 %1754, 4
  %1760 = and i1 %1759, %1758
  br i1 %1760, label %1783, label %1761

1761:                                             ; preds = %1757
  switch i8 %1756, label %1783 [
    i8 1, label %1762
    i8 5, label %1765
    i8 2, label %1769
    i8 3, label %1773
    i8 6, label %1775
  ]

1762:                                             ; preds = %1761
  %1763 = add i8 %1754, -2
  %1764 = icmp ult i8 %1763, 3
  br i1 %1764, label %1780, label %1783

1765:                                             ; preds = %1761
  %1766 = icmp eq i8 %1754, 6
  %1767 = select i1 %1766, i8 7, i8 -1
  %1768 = icmp eq i8 %1754, 7
  br i1 %1768, label %1780, label %1777

1769:                                             ; preds = %1761
  %1770 = icmp eq i8 %1754, 4
  %1771 = select i1 %1770, i8 5, i8 -1
  %1772 = icmp eq i8 %1754, 3
  br i1 %1772, label %1780, label %1777

1773:                                             ; preds = %1761
  %1774 = icmp eq i8 %1754, 4
  br i1 %1774, label %1780, label %1783

1775:                                             ; preds = %1761
  %1776 = icmp eq i8 %1754, 7
  br i1 %1776, label %1780, label %1783

1777:                                             ; preds = %1769, %1765
  %1778 = phi i8 [ %1767, %1765 ], [ %1771, %1769 ]
  %1779 = icmp sgt i8 %1778, -1
  br i1 %1779, label %1780, label %1783

1780:                                             ; preds = %1762, %1777, %1775, %1773, %1769, %1765
  %1781 = phi i8 [ %1778, %1777 ], [ 8, %1775 ], [ 6, %1773 ], [ 3, %1765 ], [ 4, %1769 ], [ %1763, %1762 ]
  %1782 = add nuw nsw i8 %1781, 20
  br label %1787

1783:                                             ; preds = %1762, %1777, %1775, %1773, %1761, %1757
  %1784 = shl i8 %1754, 2
  %1785 = add i8 %1784, -13
  %1786 = add i8 %1785, %1756
  br label %1787

1787:                                             ; preds = %1753, %1780, %1783
  %1788 = phi i8 [ %1782, %1780 ], [ %1786, %1783 ], [ %1756, %1753 ]
  %1789 = zext i8 %1788 to i64
  %1790 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 3, i32 2, i64 %1789
  br label %1791

1791:                                             ; preds = %1848, %1787
  %1792 = phi i64 [ 0, %1787 ], [ %1794, %1848 ]
  %1793 = load i8, i8* %1790, align 1
  %1794 = add nuw nsw i64 %1792, 1
  %1795 = zext i8 %1793 to i64
  %1796 = icmp ult i64 %1794, %1795
  br i1 %1796, label %1797, label %1846

1797:                                             ; preds = %1791
  %1798 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 3, i32 1, i64 %1789, i64 %1792
  %1799 = load i16, i16* %1798, align 2
  %1800 = icmp ugt i16 %1799, 639
  %1801 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 3, i32 1, i64 %1789, i64 %1794
  %1802 = load i16, i16* %1801, align 2
  %1803 = icmp ult i16 %1802, 640
  %1804 = zext i1 %1803 to i64
  %1805 = select i1 %1803, i64 2, i64 0
  %1806 = select i1 %1800, i64 %1804, i64 %1805
  %1807 = load i16, i16* %16, align 1
  %1808 = lshr i16 %1807, 4
  %1809 = and i16 %1808, 3
  %1810 = zext i16 %1809 to i64
  %1811 = icmp eq i64 %1792, %1810
  %1812 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 16, i64 %1806, i64 2
  %1813 = load i16, i16* %1812, align 2
  %1814 = icmp ugt i16 %1813, 15
  %1815 = select i1 %1814, i32 4, i32 3
  %1816 = icmp ugt i16 %1813, 31
  %1817 = select i1 %1816, i32 2, i32 1
  %1818 = add nuw nsw i32 %1817, %1815
  %1819 = select i1 %1811, i32 0, i32 32768
  %1820 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 16, i64 %1806, i64 0
  %1821 = load i16, i16* %1820, align 2
  %1822 = zext i16 %1821 to i32
  %1823 = icmp ult i32 %1819, %1822
  br i1 %1823, label %1824, label %1829

1824:                                             ; preds = %1797
  %1825 = sub nsw i32 %1822, %1819
  %1826 = ashr i32 %1825, %1818
  %1827 = trunc i32 %1826 to i16
  %1828 = sub i16 %1821, %1827
  br label %1834

1829:                                             ; preds = %1797
  %1830 = sub nsw i32 %1819, %1822
  %1831 = ashr i32 %1830, %1818
  %1832 = trunc i32 %1831 to i16
  %1833 = add i16 %1821, %1832
  br label %1834

1834:                                             ; preds = %1829, %1824
  %1835 = phi i16 [ %1833, %1829 ], [ %1828, %1824 ]
  store i16 %1835, i16* %1820, align 2
  %1836 = icmp ult i16 %1813, 32
  %1837 = zext i1 %1836 to i16
  %1838 = add i16 %1813, %1837
  store i16 %1838, i16* %1812, align 2
  %1839 = load i16, i16* %16, align 1
  %1840 = lshr i16 %1839, 4
  %1841 = and i16 %1840, 3
  %1842 = zext i16 %1841 to i64
  %1843 = icmp ne i64 %1792, %1842
  %1844 = icmp ult i64 %1794, 2
  %1845 = and i1 %1843, %1844
  br i1 %1845, label %1848, label %1849

1846:                                             ; preds = %1791
  %1847 = icmp ult i64 %1794, 2
  br i1 %1847, label %1848, label %1849

1848:                                             ; preds = %1846, %1834
  br label %1791

1849:                                             ; preds = %1834, %1846
  %1850 = load i8, i8* %1658, align 2
  br label %1851

1851:                                             ; preds = %1849, %1749
  %1852 = phi i8 [ %1850, %1849 ], [ %1750, %1749 ]
  switch i8 %1852, label %1952 [
    i8 14, label %1853
    i8 18, label %1853
    i8 21, label %1853
    i8 22, label %1853
  ]

1853:                                             ; preds = %1851, %1851, %1851, %1851
  %1854 = load i8, i8* %1661, align 1
  %1855 = icmp sgt i8 %1854, 0
  %1856 = load i8, i8* %1660, align 1
  br i1 %1855, label %1857, label %1887

1857:                                             ; preds = %1853
  %1858 = icmp slt i8 %1856, 5
  %1859 = icmp sgt i8 %1854, 4
  %1860 = and i1 %1859, %1858
  br i1 %1860, label %1883, label %1861

1861:                                             ; preds = %1857
  switch i8 %1856, label %1883 [
    i8 1, label %1862
    i8 5, label %1865
    i8 2, label %1869
    i8 3, label %1873
    i8 6, label %1875
  ]

1862:                                             ; preds = %1861
  %1863 = add i8 %1854, -2
  %1864 = icmp ult i8 %1863, 3
  br i1 %1864, label %1880, label %1883

1865:                                             ; preds = %1861
  %1866 = icmp eq i8 %1854, 6
  %1867 = select i1 %1866, i8 7, i8 -1
  %1868 = icmp eq i8 %1854, 7
  br i1 %1868, label %1880, label %1877

1869:                                             ; preds = %1861
  %1870 = icmp eq i8 %1854, 4
  %1871 = select i1 %1870, i8 5, i8 -1
  %1872 = icmp eq i8 %1854, 3
  br i1 %1872, label %1880, label %1877

1873:                                             ; preds = %1861
  %1874 = icmp eq i8 %1854, 4
  br i1 %1874, label %1880, label %1883

1875:                                             ; preds = %1861
  %1876 = icmp eq i8 %1854, 7
  br i1 %1876, label %1880, label %1883

1877:                                             ; preds = %1869, %1865
  %1878 = phi i8 [ %1867, %1865 ], [ %1871, %1869 ]
  %1879 = icmp sgt i8 %1878, -1
  br i1 %1879, label %1880, label %1883

1880:                                             ; preds = %1862, %1877, %1875, %1873, %1869, %1865
  %1881 = phi i8 [ %1878, %1877 ], [ 8, %1875 ], [ 6, %1873 ], [ 3, %1865 ], [ 4, %1869 ], [ %1863, %1862 ]
  %1882 = add nuw nsw i8 %1881, 20
  br label %1887

1883:                                             ; preds = %1862, %1877, %1875, %1873, %1861, %1857
  %1884 = shl i8 %1854, 2
  %1885 = add i8 %1884, -13
  %1886 = add i8 %1885, %1856
  br label %1887

1887:                                             ; preds = %1853, %1880, %1883
  %1888 = phi i8 [ %1882, %1880 ], [ %1886, %1883 ], [ %1856, %1853 ]
  %1889 = zext i8 %1888 to i64
  %1890 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 3, i32 2, i64 %1889
  br label %1891

1891:                                             ; preds = %1949, %1887
  %1892 = phi i64 [ 1, %1887 ], [ %1894, %1949 ]
  %1893 = load i8, i8* %1890, align 1
  %1894 = add nuw nsw i64 %1892, 1
  %1895 = zext i8 %1893 to i64
  %1896 = icmp ult i64 %1894, %1895
  br i1 %1896, label %1897, label %1947

1897:                                             ; preds = %1891
  %1898 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 3, i32 1, i64 %1889, i64 %1892
  %1899 = load i16, i16* %1898, align 2
  %1900 = icmp ugt i16 %1899, 639
  %1901 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %1, i64 0, i32 0, i32 3, i32 1, i64 %1889, i64 %1894
  %1902 = load i16, i16* %1901, align 2
  %1903 = icmp ult i16 %1902, 640
  %1904 = zext i1 %1903 to i64
  %1905 = select i1 %1903, i64 2, i64 0
  %1906 = select i1 %1900, i64 %1904, i64 %1905
  %1907 = load i16, i16* %16, align 1
  %1908 = lshr i16 %1907, 4
  %1909 = and i16 %1908, 3
  %1910 = add nsw i64 %1892, -1
  %1911 = zext i16 %1909 to i64
  %1912 = icmp eq i64 %1910, %1911
  %1913 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 16, i64 %1906, i64 2
  %1914 = load i16, i16* %1913, align 2
  %1915 = icmp ugt i16 %1914, 15
  %1916 = select i1 %1915, i32 4, i32 3
  %1917 = icmp ugt i16 %1914, 31
  %1918 = select i1 %1917, i32 2, i32 1
  %1919 = add nuw nsw i32 %1918, %1916
  %1920 = select i1 %1912, i32 0, i32 32768
  %1921 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 16, i64 %1906, i64 0
  %1922 = load i16, i16* %1921, align 2
  %1923 = zext i16 %1922 to i32
  %1924 = icmp ult i32 %1920, %1923
  br i1 %1924, label %1925, label %1930

1925:                                             ; preds = %1897
  %1926 = sub nsw i32 %1923, %1920
  %1927 = ashr i32 %1926, %1919
  %1928 = trunc i32 %1927 to i16
  %1929 = sub i16 %1922, %1928
  br label %1935

1930:                                             ; preds = %1897
  %1931 = sub nsw i32 %1920, %1923
  %1932 = ashr i32 %1931, %1919
  %1933 = trunc i32 %1932 to i16
  %1934 = add i16 %1922, %1933
  br label %1935

1935:                                             ; preds = %1930, %1925
  %1936 = phi i16 [ %1934, %1930 ], [ %1929, %1925 ]
  store i16 %1936, i16* %1921, align 2
  %1937 = icmp ult i16 %1914, 32
  %1938 = zext i1 %1937 to i16
  %1939 = add i16 %1914, %1938
  store i16 %1939, i16* %1913, align 2
  %1940 = load i16, i16* %16, align 1
  %1941 = lshr i16 %1940, 4
  %1942 = and i16 %1941, 3
  %1943 = zext i16 %1942 to i64
  %1944 = icmp ne i64 %1910, %1943
  %1945 = icmp ult i64 %1894, 3
  %1946 = and i1 %1944, %1945
  br i1 %1946, label %1949, label %1950

1947:                                             ; preds = %1891
  %1948 = icmp ult i64 %1894, 3
  br i1 %1948, label %1949, label %1950

1949:                                             ; preds = %1947, %1935
  br label %1891

1950:                                             ; preds = %1935, %1947
  %1951 = load i8, i8* %1658, align 2
  br label %1952

1952:                                             ; preds = %1950, %1851
  %1953 = phi i8 [ %1951, %1950 ], [ %1852, %1851 ]
  switch i8 %1953, label %1996 [
    i8 16, label %1954
    i8 24, label %1954
    i8 19, label %1954
    i8 20, label %1954
    i8 21, label %1954
    i8 22, label %1954
  ]

1954:                                             ; preds = %1952, %1952, %1952, %1952, %1952, %1952
  %1955 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 20, i32 2
  %1956 = load i8, i8* %1955, align 2, !range !5
  %1957 = icmp eq i8 %1956, 0
  br i1 %1957, label %1958, label %1961

1958:                                             ; preds = %1954
  %1959 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 20, i32 1
  %1960 = load i8, i8* %1959, align 1
  br label %1961

1961:                                             ; preds = %1954, %1958
  %1962 = phi i8 [ %1960, %1958 ], [ -1, %1954 ]
  br i1 %1752, label %1963, label %1979

1963:                                             ; preds = %1961
  %1964 = bitcast %union.int_mv* %4 to i8*
  %1965 = getelementptr inbounds %union.int_mv, %union.int_mv* %4, i64 0, i32 0
  %1966 = bitcast %union.int_mv* %4 to %struct.mv*
  %1967 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 43
  br label %1968

1968:                                             ; preds = %1968, %1963
  %1969 = phi i64 [ %1974, %1968 ], [ 0, %1963 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1964) #4
  store i32 -1431655766, i32* %1965, align 4
  %1970 = trunc i64 %1969 to i32
  %1971 = call i32 @av1_get_ref_mv(%struct.macroblock* %7, i32 %1970) #4
  store i32 %1971, i32* %1965, align 4
  %1972 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 5, i64 %1969
  %1973 = bitcast %union.int_mv* %1972 to %struct.mv*
  call void @av1_update_mv_stats(%struct.mv* %1973, %struct.mv* nonnull %1966, %struct.nmv_context* %1967, i8 signext %1962) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1964) #4
  %1974 = add nuw nsw i64 %1969, 1
  %1975 = load i8, i8* %1661, align 1
  %1976 = icmp sgt i8 %1975, 0
  %1977 = zext i1 %1976 to i64
  %1978 = icmp ult i64 %1969, %1977
  br i1 %1978, label %1968, label %1996

1979:                                             ; preds = %1961
  switch i8 %1953, label %1996 [
    i8 19, label %1980
    i8 21, label %1980
    i8 20, label %1988
    i8 22, label %1988
  ]

1980:                                             ; preds = %1979, %1979
  %1981 = bitcast %union.int_mv* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1981) #4
  %1982 = getelementptr inbounds %union.int_mv, %union.int_mv* %5, i64 0, i32 0
  %1983 = call i32 @av1_get_ref_mv(%struct.macroblock* %7, i32 1) #4
  store i32 %1983, i32* %1982, align 4
  %1984 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 5, i64 1
  %1985 = bitcast %union.int_mv* %1984 to %struct.mv*
  %1986 = bitcast %union.int_mv* %5 to %struct.mv*
  %1987 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 43
  call void @av1_update_mv_stats(%struct.mv* %1985, %struct.mv* nonnull %1986, %struct.nmv_context* %1987, i8 signext %1962) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1981) #4
  br label %1996

1988:                                             ; preds = %1979, %1979
  %1989 = bitcast %union.int_mv* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1989) #4
  %1990 = getelementptr inbounds %union.int_mv, %union.int_mv* %6, i64 0, i32 0
  %1991 = call i32 @av1_get_ref_mv(%struct.macroblock* %7, i32 0) #4
  store i32 %1991, i32* %1990, align 4
  %1992 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 5, i64 0
  %1993 = bitcast %union.int_mv* %1992 to %struct.mv*
  %1994 = bitcast %union.int_mv* %6 to %struct.mv*
  %1995 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 43
  call void @av1_update_mv_stats(%struct.mv* %1993, %struct.mv* nonnull %1994, %struct.nmv_context* %1995, i8 signext %1962) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1989) #4
  br label %1996

1996:                                             ; preds = %1968, %1952, %1493, %233, %279, %1649, %1988, %1980, %1979, %237
  ret void

1997:                                             ; preds = %1737
  %1998 = sub nsw i32 %1740, %1743
  %1999 = ashr i32 %1998, %1718
  %2000 = trunc i32 %1999 to i16
  %2001 = add i16 %1742, %2000
  br label %2007

2002:                                             ; preds = %1737
  %2003 = sub nsw i32 %1743, %1740
  %2004 = ashr i32 %2003, %1718
  %2005 = trunc i32 %2004 to i16
  %2006 = sub i16 %1742, %2005
  br label %2007

2007:                                             ; preds = %2002, %1997
  %2008 = phi i16 [ %2001, %1997 ], [ %2006, %2002 ]
  store i16 %2008, i16* %1741, align 2
  %2009 = icmp eq i64 %1720, 2
  %2010 = select i1 %2009, i32 0, i32 %1740
  %2011 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 17, i64 %1710, i64 2
  %2012 = load i16, i16* %2011, align 2
  %2013 = zext i16 %2012 to i32
  %2014 = icmp ult i32 %2010, %2013
  br i1 %2014, label %2020, label %2015

2015:                                             ; preds = %2007
  %2016 = sub nsw i32 %2010, %2013
  %2017 = ashr i32 %2016, %1718
  %2018 = trunc i32 %2017 to i16
  %2019 = add i16 %2012, %2018
  br label %2025

2020:                                             ; preds = %2007
  %2021 = sub nsw i32 %2013, %2010
  %2022 = ashr i32 %2021, %1718
  %2023 = trunc i32 %2022 to i16
  %2024 = sub i16 %2012, %2023
  br label %2025

2025:                                             ; preds = %2020, %2015
  %2026 = phi i16 [ %2019, %2015 ], [ %2024, %2020 ]
  store i16 %2026, i16* %2011, align 2
  %2027 = icmp eq i64 %1720, 3
  %2028 = select i1 %2027, i32 0, i32 %2010
  %2029 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 17, i64 %1710, i64 3
  %2030 = load i16, i16* %2029, align 2
  %2031 = zext i16 %2030 to i32
  %2032 = icmp ult i32 %2028, %2031
  br i1 %2032, label %2038, label %2033

2033:                                             ; preds = %2025
  %2034 = sub nsw i32 %2028, %2031
  %2035 = ashr i32 %2034, %1718
  %2036 = trunc i32 %2035 to i16
  %2037 = add i16 %2030, %2036
  br label %2043

2038:                                             ; preds = %2025
  %2039 = sub nsw i32 %2031, %2028
  %2040 = ashr i32 %2039, %1718
  %2041 = trunc i32 %2040 to i16
  %2042 = sub i16 %2030, %2041
  br label %2043

2043:                                             ; preds = %2038, %2033
  %2044 = phi i16 [ %2037, %2033 ], [ %2042, %2038 ]
  store i16 %2044, i16* %2029, align 2
  %2045 = icmp eq i64 %1720, 4
  %2046 = select i1 %2045, i32 0, i32 %2028
  %2047 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 17, i64 %1710, i64 4
  %2048 = load i16, i16* %2047, align 2
  %2049 = zext i16 %2048 to i32
  %2050 = icmp ult i32 %2046, %2049
  br i1 %2050, label %2056, label %2051

2051:                                             ; preds = %2043
  %2052 = sub nsw i32 %2046, %2049
  %2053 = ashr i32 %2052, %1718
  %2054 = trunc i32 %2053 to i16
  %2055 = add i16 %2048, %2054
  br label %2061

2056:                                             ; preds = %2043
  %2057 = sub nsw i32 %2049, %2046
  %2058 = ashr i32 %2057, %1718
  %2059 = trunc i32 %2058 to i16
  %2060 = sub i16 %2048, %2059
  br label %2061

2061:                                             ; preds = %2056, %2051
  %2062 = phi i16 [ %2055, %2051 ], [ %2060, %2056 ]
  store i16 %2062, i16* %2047, align 2
  %2063 = icmp eq i64 %1720, 5
  %2064 = select i1 %2063, i32 0, i32 %2046
  %2065 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 17, i64 %1710, i64 5
  %2066 = load i16, i16* %2065, align 2
  %2067 = zext i16 %2066 to i32
  %2068 = icmp ult i32 %2064, %2067
  br i1 %2068, label %2074, label %2069

2069:                                             ; preds = %2061
  %2070 = sub nsw i32 %2064, %2067
  %2071 = ashr i32 %2070, %1718
  %2072 = trunc i32 %2071 to i16
  %2073 = add i16 %2066, %2072
  br label %2079

2074:                                             ; preds = %2061
  %2075 = sub nsw i32 %2067, %2064
  %2076 = ashr i32 %2075, %1718
  %2077 = trunc i32 %2076 to i16
  %2078 = sub i16 %2066, %2077
  br label %2079

2079:                                             ; preds = %2074, %2069
  %2080 = phi i16 [ %2073, %2069 ], [ %2078, %2074 ]
  store i16 %2080, i16* %2065, align 2
  %2081 = icmp eq i64 %1720, 6
  %2082 = select i1 %2081, i32 0, i32 %2064
  %2083 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 17, i64 %1710, i64 6
  %2084 = load i16, i16* %2083, align 2
  %2085 = zext i16 %2084 to i32
  %2086 = icmp slt i32 %2082, %2085
  br i1 %2086, label %2092, label %2087

2087:                                             ; preds = %2079
  %2088 = sub nsw i32 %2082, %2085
  %2089 = ashr i32 %2088, %1718
  %2090 = trunc i32 %2089 to i16
  %2091 = add i16 %2084, %2090
  br label %2097

2092:                                             ; preds = %2079
  %2093 = sub nsw i32 %2085, %2082
  %2094 = ashr i32 %2093, %1718
  %2095 = trunc i32 %2094 to i16
  %2096 = sub i16 %2084, %2095
  br label %2097

2097:                                             ; preds = %2092, %2087
  %2098 = phi i16 [ %2091, %2087 ], [ %2096, %2092 ]
  store i16 %2098, i16* %2083, align 2
  %2099 = icmp ult i16 %1713, 32
  %2100 = zext i1 %2099 to i16
  %2101 = add i16 %1713, %2100
  store i16 %2101, i16* %1712, align 2
  br label %1749

2102:                                             ; preds = %1111
  %2103 = sub nsw i32 %1114, %1117
  %2104 = ashr i32 %2103, %1092
  %2105 = trunc i32 %2104 to i16
  %2106 = add i16 %1116, %2105
  br label %2112

2107:                                             ; preds = %1111
  %2108 = sub nsw i32 %1117, %1114
  %2109 = ashr i32 %2108, %1092
  %2110 = trunc i32 %2109 to i16
  %2111 = sub i16 %1116, %2110
  br label %2112

2112:                                             ; preds = %2107, %2102
  %2113 = phi i16 [ %2106, %2102 ], [ %2111, %2107 ]
  store i16 %2113, i16* %1115, align 2
  %2114 = icmp ult i16 %1087, 32
  %2115 = zext i1 %2114 to i16
  %2116 = add i16 %1087, %2115
  store i16 %2116, i16* %1086, align 2
  br label %1151

2117:                                             ; preds = %913
  %2118 = sub nsw i32 %916, %919
  %2119 = ashr i32 %2118, %894
  %2120 = trunc i32 %2119 to i16
  %2121 = add i16 %918, %2120
  br label %2127

2122:                                             ; preds = %913
  %2123 = sub nsw i32 %919, %916
  %2124 = ashr i32 %2123, %894
  %2125 = trunc i32 %2124 to i16
  %2126 = sub i16 %918, %2125
  br label %2127

2127:                                             ; preds = %2122, %2117
  %2128 = phi i16 [ %2121, %2117 ], [ %2126, %2122 ]
  store i16 %2128, i16* %917, align 2
  %2129 = icmp eq i64 %896, 2
  %2130 = select i1 %2129, i32 0, i32 %916
  %2131 = getelementptr inbounds %struct.frame_contexts, %struct.frame_contexts* %15, i64 0, i32 22, i64 %849, i64 2
  %2132 = load i16, i16* %2131, align 2
  %2133 = zext i16 %2132 to i32
  %2134 = icmp ult i32 %2130, %2133
  br i1 %2134, label %2140, label %2135

2135:                                             ; preds = %2127
  %2136 = sub nsw i32 %2130, %2133
  %2137 = ashr i32 %2136, %894
  %2138 = trunc i32 %2137 to i16
  %2139 = add i16 %2132, %2138
  br label %2145

2140:                                             ; preds = %2127
  %2141 = sub nsw i32 %2133, %2130
  %2142 = ashr i32 %2141, %894
  %2143 = trunc i32 %2142 to i16
  %2144 = sub i16 %2132, %2143
  br label %2145

2145:                                             ; preds = %2140, %2135
  %2146 = phi i16 [ %2139, %2135 ], [ %2144, %2140 ]
  store i16 %2146, i16* %2131, align 2
  %2147 = icmp ult i16 %889, 32
  %2148 = zext i1 %2147 to i16
  %2149 = add i16 %889, %2148
  store i16 %2149, i16* %888, align 2
  %2150 = getelementptr inbounds [22 x %struct.wedge_params_type], [22 x %struct.wedge_params_type]* @av1_wedge_params_lookup, i64 0, i64 %845, i32 0
  %2151 = load i32, i32* %2150, align 16
  %2152 = icmp slt i32 %2151, 1
  br i1 %2152, label %995, label %921

2153:                                             ; preds = %1526
  %2154 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %11, i64 0, i32 6, i64 1
  %2155 = load i8, i8* %2154, align 1
  %2156 = sext i8 %2155 to i64
  %2157 = getelementptr inbounds %struct.WarpedMotionParams, %struct.WarpedMotionParams* %1519, i64 %2156, i32 5
  %2158 = load i8, i8* %2157, align 4
  %2159 = icmp eq i8 %2158, 1
  br i1 %2159, label %1529, label %1646
}

declare void @av1_sum_intra_stats(%struct.AV1Common*, %struct.FRAME_COUNTS*, %struct.macroblockd*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, i32) local_unnamed_addr #3

declare void @av1_update_mv_stats(%struct.mv*, %struct.mv*, %struct.nmv_context*, i8 signext) local_unnamed_addr #3

declare i32 @av1_get_intra_inter_context(%struct.macroblockd*) local_unnamed_addr #3

declare void @av1_update_inter_mode_stats(%struct.frame_contexts*, %struct.FRAME_COUNTS*, i8 zeroext, i16 signext) local_unnamed_addr #3

declare i32 @av1_get_ref_mv(%struct.macroblock*, i32) local_unnamed_addr #3

declare i32 @av1_get_reference_mode_context(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_comp_reference_type_context(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_pred_context_uni_comp_ref_p(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_pred_context_uni_comp_ref_p1(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_pred_context_uni_comp_ref_p2(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_pred_context_comp_ref_p(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_pred_context_comp_ref_p1(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_pred_context_comp_ref_p2(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_pred_context_comp_bwdref_p(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_pred_context_comp_bwdref_p1(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_pred_context_single_ref_p1(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_pred_context_single_ref_p2(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_pred_context_single_ref_p6(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_pred_context_single_ref_p3(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_pred_context_single_ref_p4(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_pred_context_single_ref_p5(%struct.macroblockd*) local_unnamed_addr #3

declare i32 @av1_get_pred_context_switchable_interp(%struct.macroblockd*, i32) local_unnamed_addr #3

declare void @av1_nonrd_pick_inter_mode_sb(%struct.AV1_COMP*, %struct.TileDataEnc*, %struct.macroblock*, %struct.RD_STATS*, i8 zeroext, %struct.PICK_MODE_CONTEXT*) local_unnamed_addr #3

declare void @av1_nonrd_pick_intra_mode(%struct.AV1_COMP*, %struct.macroblock*, %struct.RD_STATS*, i8 zeroext, %struct.PICK_MODE_CONTEXT*) local_unnamed_addr #3

declare void @av1_cyclic_reset_segment_skip(%struct.AV1_COMP*, %struct.macroblock*, i32, i32, i8 zeroext) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !3}
!5 = !{i8 0, i8 2}
