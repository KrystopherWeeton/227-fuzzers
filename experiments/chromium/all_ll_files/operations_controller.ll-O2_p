; ModuleID = '../../base/task/common/operations_controller.cc'
source_filename = "../../base/task/common/operations_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr, i8, [7 x i8] }>
%class.scoped_refptr = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.base::internal::OperationsController::OperationToken" = type { %"class.base::internal::OperationsController"* }

@_ZN4base8internal20OperationsControllerC1Ev = hidden unnamed_addr alias void (%"class.base::internal::OperationsController"*), void (%"class.base::internal::OperationsController"*)* @_ZN4base8internal20OperationsControllerC2Ev
@_ZN4base8internal20OperationsControllerD1Ev = hidden unnamed_addr alias void (%"class.base::internal::OperationsController"*), void (%"class.base::internal::OperationsController"*)* @_ZN4base8internal20OperationsControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal20OperationsControllerC2Ev(%"class.base::internal::OperationsController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::OperationsController", %"class.base::internal::OperationsController"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.base::internal::OperationsController", %"class.base::internal::OperationsController"* %0, i64 0, i32 2
  tail call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* %3, i32 0, i32 1) #4
  ret void
}

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal20OperationsControllerD2Ev(%"class.base::internal::OperationsController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::OperationsController", %"class.base::internal::OperationsController"* %0, i64 0, i32 2
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %2) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal20OperationsController24StartAcceptingOperationsEv(%"class.base::internal::OperationsController"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::OperationsController", %"class.base::internal::OperationsController"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw or i32* %2, i32 1073741824 release
  %4 = and i32 %3, 1073741823
  %5 = atomicrmw sub i32* %2, i32 %4 release
  %6 = icmp slt i32 %5, 0
  %7 = and i32 %5, 1073741823
  %8 = icmp eq i32 %7, %4
  %9 = and i1 %6, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::internal::OperationsController", %"class.base::internal::OperationsController"* %0, i64 0, i32 2
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %11) #4
  br label %12

12:                                               ; preds = %1, %10
  %13 = icmp ne i32 %4, 0
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal20OperationsController11DecrementByEj(%"class.base::internal::OperationsController"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::OperationsController", %"class.base::internal::OperationsController"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw sub i32* %3, i32 %1 release
  %5 = icmp slt i32 %4, 0
  %6 = and i32 %4, 1073741823
  %7 = icmp eq i32 %6, %1
  %8 = and i1 %5, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::internal::OperationsController", %"class.base::internal::OperationsController"* %0, i64 0, i32 2
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %10) #4
  br label %11

11:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal20OperationsController17TryBeginOperationEv(%"class.base::internal::OperationsController::OperationToken"* noalias nocapture sret, %"class.base::internal::OperationsController"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::OperationsController", %"class.base::internal::OperationsController"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw add i32* %3, i32 1 acquire
  %5 = icmp slt i32 %4, 0
  %6 = lshr i32 %4, 30
  %7 = and i32 %6, 1
  %8 = select i1 %5, i32 2, i32 %7
  switch i32 %8, label %16 [
    i32 0, label %17
    i32 1, label %9
    i32 2, label %10
  ]

9:                                                ; preds = %2
  br label %17

10:                                               ; preds = %2
  %11 = atomicrmw sub i32* %3, i32 1 release
  %12 = and i32 %11, -1073741825
  %13 = icmp eq i32 %12, -2147483647
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.base::internal::OperationsController", %"class.base::internal::OperationsController"* %1, i64 0, i32 2
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %15) #4
  br label %17

16:                                               ; preds = %2
  unreachable

17:                                               ; preds = %14, %10, %2, %9
  %18 = phi %"class.base::internal::OperationsController"* [ %1, %9 ], [ null, %2 ], [ null, %10 ], [ null, %14 ]
  %19 = getelementptr inbounds %"class.base::internal::OperationsController::OperationToken", %"class.base::internal::OperationsController::OperationToken"* %0, i64 0, i32 0
  store %"class.base::internal::OperationsController"* %18, %"class.base::internal::OperationsController"** %19, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4base8internal20OperationsController12ExtractStateEj(i32) local_unnamed_addr #3 align 2 {
  %2 = icmp slt i32 %0, 0
  %3 = lshr i32 %0, 30
  %4 = and i32 %3, 1
  %5 = select i1 %2, i32 2, i32 %4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal20OperationsController32ShutdownAndWaitForZeroOperationsEv(%"class.base::internal::OperationsController"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::OperationsController", %"class.base::internal::OperationsController"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw or i32* %2, i32 -2147483648 acquire
  %4 = icmp slt i32 %3, 0
  %5 = lshr i32 %3, 30
  %6 = and i32 %5, 1
  %7 = select i1 %4, i32 2, i32 %6
  switch i32 %7, label %22 [
    i32 0, label %8
    i32 1, label %17
  ]

8:                                                ; preds = %1
  %9 = and i32 %3, 1073741823
  %10 = atomicrmw sub i32* %2, i32 %9 release
  %11 = icmp slt i32 %10, 0
  %12 = and i32 %10, 1073741823
  %13 = icmp eq i32 %12, %9
  %14 = and i1 %11, %13
  br i1 %14, label %15, label %22

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.base::internal::OperationsController", %"class.base::internal::OperationsController"* %0, i64 0, i32 2
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %16) #4
  br label %22

17:                                               ; preds = %1
  %18 = and i32 %3, 1073741823
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.base::internal::OperationsController", %"class.base::internal::OperationsController"* %0, i64 0, i32 2
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* %21) #4
  br label %22

22:                                               ; preds = %15, %8, %17, %20, %1
  ret void
}

declare void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
