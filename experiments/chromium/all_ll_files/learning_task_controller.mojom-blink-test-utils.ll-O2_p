; ModuleID = 'gen/media/learning/mojo/public/mojom/learning_task_controller.mojom-blink-test-utils.cc'
source_filename = "gen/media/learning/mojo/public/mojom/learning_task_controller.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::learning::mojom::blink::LearningTaskControllerAsyncWaiter" = type { %"class.media::learning::mojom::blink::LearningTaskController"* }
%"class.media::learning::mojom::blink::LearningTaskController" = type { i32 (...)** }
%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting" = type { %"class.media::learning::mojom::blink::LearningTaskController" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.media::learning::Value"*, i32, i32 }
%"class.media::learning::Value" = type { double }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.media::learning::Value" }
%"struct.media::learning::ObservationCompletion" = type { %"class.media::learning::Value", i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional.1" = type { %"class.absl::optional_internal::optional_data.2" }
%"class.absl::optional_internal::optional_data.2" = type { %"class.absl::optional_internal::optional_data_base.3" }
%"class.absl::optional_internal::optional_data_base.3" = type { %"class.absl::optional_internal::optional_data_dtor_base.4" }
%"class.absl::optional_internal::optional_data_dtor_base.4" = type { i8, %union.anon.5 }
%union.anon.5 = type { %"class.media::learning::TargetHistogram" }
%"class.media::learning::TargetHistogram" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type { %"class.media::learning::Value", double }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.21, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector.7" }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.14", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.16" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.21 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.22" }>
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.24", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN5media8learning5mojom5blink22LearningTaskControllerD2Ev = comdat any

$_ZN5media8learning5mojom5blink43LearningTaskControllerInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [20 x i8] c"PredictDistribution\00", align 1
@.str.1 = private unnamed_addr constant [88 x i8] c"gen/media/learning/mojo/public/mojom/learning_task_controller.mojom-blink-test-utils.cc\00", align 1
@_ZTVN5media8learning5mojom5blink43LearningTaskControllerInterceptorForTestingE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::learning::mojom::blink::LearningTaskController"*)* @_ZN5media8learning5mojom5blink22LearningTaskControllerD2Ev to i8*), i8* bitcast (void (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)* @_ZN5media8learning5mojom5blink43LearningTaskControllerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*, %"class.base::UnguessableToken"*, %"class.WTF::Vector"*, %"class.absl::optional"*)* @_ZN5media8learning5mojom5blink43LearningTaskControllerInterceptorForTesting16BeginObservationERKN4base16UnguessableTokenERKN3WTF6VectorINS0_5ValueELj0ENS8_18PartitionAllocatorEEERKN4absl8optionalISA_EE to i8*), i8* bitcast (void (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*, %"class.base::UnguessableToken"*, %"struct.media::learning::ObservationCompletion"*)* @_ZN5media8learning5mojom5blink43LearningTaskControllerInterceptorForTesting19CompleteObservationERKN4base16UnguessableTokenERKNS0_21ObservationCompletionE to i8*), i8* bitcast (void (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*, %"class.base::UnguessableToken"*)* @_ZN5media8learning5mojom5blink43LearningTaskControllerInterceptorForTesting17CancelObservationERKN4base16UnguessableTokenE to i8*), i8* bitcast (void (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*, %"class.base::UnguessableToken"*, %"class.absl::optional"*)* @_ZN5media8learning5mojom5blink43LearningTaskControllerInterceptorForTesting19UpdateDefaultTargetERKN4base16UnguessableTokenERKN4absl8optionalINS0_5ValueEEE to i8*), i8* bitcast (void (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)* @_ZN5media8learning5mojom5blink43LearningTaskControllerInterceptorForTesting19PredictDistributionERKN3WTF6VectorINS0_5ValueELj0ENS4_18PartitionAllocatorEEEN4base12OnceCallbackIFvRKN4absl8optionalINS0_15TargetHistogramEEEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5media8learning5mojom5blink33LearningTaskControllerAsyncWaiterC1EPNS2_22LearningTaskControllerE = hidden unnamed_addr alias void (%"class.media::learning::mojom::blink::LearningTaskControllerAsyncWaiter"*, %"class.media::learning::mojom::blink::LearningTaskController"*), void (%"class.media::learning::mojom::blink::LearningTaskControllerAsyncWaiter"*, %"class.media::learning::mojom::blink::LearningTaskController"*)* @_ZN5media8learning5mojom5blink33LearningTaskControllerAsyncWaiterC2EPNS2_22LearningTaskControllerE
@_ZN5media8learning5mojom5blink33LearningTaskControllerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.media::learning::mojom::blink::LearningTaskControllerAsyncWaiter"*), void (%"class.media::learning::mojom::blink::LearningTaskControllerAsyncWaiter"*)* @_ZN5media8learning5mojom5blink33LearningTaskControllerAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning5mojom5blink43LearningTaskControllerInterceptorForTesting16BeginObservationERKN4base16UnguessableTokenERKN3WTF6VectorINS0_5ValueELj0ENS8_18PartitionAllocatorEEERKN4absl8optionalISA_EE(%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*, %"class.base::UnguessableToken"* dereferenceable(16), %"class.WTF::Vector"* dereferenceable(16), %"class.absl::optional"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"* %0 to %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)***
  %6 = load %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)**, %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)*, %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)** %6, i64 7
  %8 = load %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)*, %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.media::learning::mojom::blink::LearningTaskController"* %8(%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"* %0) #10
  %10 = bitcast %"class.media::learning::mojom::blink::LearningTaskController"* %9 to void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"class.WTF::Vector"*, %"class.absl::optional"*)***
  %11 = load void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"class.WTF::Vector"*, %"class.absl::optional"*)**, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"class.WTF::Vector"*, %"class.absl::optional"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"class.WTF::Vector"*, %"class.absl::optional"*)*, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"class.WTF::Vector"*, %"class.absl::optional"*)** %11, i64 2
  %13 = load void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"class.WTF::Vector"*, %"class.absl::optional"*)*, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"class.WTF::Vector"*, %"class.absl::optional"*)** %12, align 8
  tail call void %13(%"class.media::learning::mojom::blink::LearningTaskController"* %9, %"class.base::UnguessableToken"* dereferenceable(16) %1, %"class.WTF::Vector"* dereferenceable(16) %2, %"class.absl::optional"* dereferenceable(16) %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning5mojom5blink43LearningTaskControllerInterceptorForTesting19CompleteObservationERKN4base16UnguessableTokenERKNS0_21ObservationCompletionE(%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*, %"class.base::UnguessableToken"* dereferenceable(16), %"struct.media::learning::ObservationCompletion"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"* %0 to %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)***
  %5 = load %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)**, %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)*, %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)** %5, i64 7
  %7 = load %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)*, %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.media::learning::mojom::blink::LearningTaskController"* %7(%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.media::learning::mojom::blink::LearningTaskController"* %8 to void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"struct.media::learning::ObservationCompletion"*)***
  %10 = load void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"struct.media::learning::ObservationCompletion"*)**, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"struct.media::learning::ObservationCompletion"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"struct.media::learning::ObservationCompletion"*)*, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"struct.media::learning::ObservationCompletion"*)** %10, i64 3
  %12 = load void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"struct.media::learning::ObservationCompletion"*)*, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"struct.media::learning::ObservationCompletion"*)** %11, align 8
  tail call void %12(%"class.media::learning::mojom::blink::LearningTaskController"* %8, %"class.base::UnguessableToken"* dereferenceable(16) %1, %"struct.media::learning::ObservationCompletion"* dereferenceable(16) %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning5mojom5blink43LearningTaskControllerInterceptorForTesting17CancelObservationERKN4base16UnguessableTokenE(%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*, %"class.base::UnguessableToken"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"* %0 to %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)***
  %4 = load %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)**, %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)*, %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)** %4, i64 7
  %6 = load %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)*, %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.media::learning::mojom::blink::LearningTaskController"* %6(%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.media::learning::mojom::blink::LearningTaskController"* %7 to void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*)***
  %9 = load void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*)**, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*)*, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*)** %9, i64 4
  %11 = load void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*)*, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*)** %10, align 8
  tail call void %11(%"class.media::learning::mojom::blink::LearningTaskController"* %7, %"class.base::UnguessableToken"* dereferenceable(16) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning5mojom5blink43LearningTaskControllerInterceptorForTesting19UpdateDefaultTargetERKN4base16UnguessableTokenERKN4absl8optionalINS0_5ValueEEE(%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*, %"class.base::UnguessableToken"* dereferenceable(16), %"class.absl::optional"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"* %0 to %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)***
  %5 = load %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)**, %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)*, %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)** %5, i64 7
  %7 = load %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)*, %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.media::learning::mojom::blink::LearningTaskController"* %7(%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.media::learning::mojom::blink::LearningTaskController"* %8 to void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"class.absl::optional"*)***
  %10 = load void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"class.absl::optional"*)**, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"class.absl::optional"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"class.absl::optional"*)*, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"class.absl::optional"*)** %10, i64 5
  %12 = load void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"class.absl::optional"*)*, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.base::UnguessableToken"*, %"class.absl::optional"*)** %11, align 8
  tail call void %12(%"class.media::learning::mojom::blink::LearningTaskController"* %8, %"class.base::UnguessableToken"* dereferenceable(16) %1, %"class.absl::optional"* dereferenceable(16) %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning5mojom5blink43LearningTaskControllerInterceptorForTesting19PredictDistributionERKN3WTF6VectorINS0_5ValueELj0ENS4_18PartitionAllocatorEEEN4base12OnceCallbackIFvRKN4absl8optionalINS0_15TargetHistogramEEEEEE(%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*, %"class.WTF::Vector"* dereferenceable(16), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"* %0 to %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)***
  %6 = load %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)**, %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)*, %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)** %6, i64 7
  %8 = load %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)*, %"class.media::learning::mojom::blink::LearningTaskController"* (%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.media::learning::mojom::blink::LearningTaskController"* %8(%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.media::learning::mojom::blink::LearningTaskController"* %9 to void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)**, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %15, i64 6
  %17 = load void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.media::learning::mojom::blink::LearningTaskController"* %9, %"class.WTF::Vector"* dereferenceable(16) %1, %"class.base::OnceCallback"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media8learning5mojom5blink33LearningTaskControllerAsyncWaiterC2EPNS2_22LearningTaskControllerE(%"class.media::learning::mojom::blink::LearningTaskControllerAsyncWaiter"* nocapture, %"class.media::learning::mojom::blink::LearningTaskController"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.media::learning::mojom::blink::LearningTaskControllerAsyncWaiter", %"class.media::learning::mojom::blink::LearningTaskControllerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.media::learning::mojom::blink::LearningTaskController"* %1, %"class.media::learning::mojom::blink::LearningTaskController"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media8learning5mojom5blink33LearningTaskControllerAsyncWaiterD2Ev(%"class.media::learning::mojom::blink::LearningTaskControllerAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning5mojom5blink33LearningTaskControllerAsyncWaiter19PredictDistributionERKN3WTF6VectorINS0_5ValueELj0ENS4_18PartitionAllocatorEEEPN4absl8optionalINS0_15TargetHistogramEEE(%"class.media::learning::mojom::blink::LearningTaskControllerAsyncWaiter"* nocapture readonly, %"class.WTF::Vector"* dereferenceable(16), %"class.absl::optional.1"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.absl::optional.1"* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %9 = getelementptr inbounds %"class.media::learning::mojom::blink::LearningTaskControllerAsyncWaiter", %"class.media::learning::mojom::blink::LearningTaskControllerAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.media::learning::mojom::blink::LearningTaskController"*, %"class.media::learning::mojom::blink::LearningTaskController"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.1"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media8learning5mojom5blink33LearningTaskControllerAsyncWaiter19PredictDistributionERKN3WTF6VectorINS4_5ValueELj0ENS8_18PartitionAllocatorEEEPN4absl8optionalINS4_15TargetHistogramEEEE3$_0JPNS_7RunLoopESJ_EEEFvRKSI_EE7RunOnceEPNS0_13BindStateBaseESP_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5media8learning5mojom5blink33LearningTaskControllerAsyncWaiter19PredictDistributionERKN3WTF6VectorINS3_5ValueELj0ENS7_18PartitionAllocatorEEEPN4absl8optionalINS3_15TargetHistogramEEEE3$_0JPNS_7RunLoopESI_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !2
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !2
  %18 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !2
  %19 = bitcast %"class.media::learning::mojom::blink::LearningTaskController"* %10 to void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)**, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %20, i64 6
  %22 = load void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.media::learning::mojom::blink::LearningTaskController"*, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.media::learning::mojom::blink::LearningTaskController"* %10, %"class.WTF::Vector"* dereferenceable(16) %1, %"class.base::OnceCallback"* nonnull %5) #10
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1, i64 0, i64 0), i32 68) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media8learning5mojom5blink22LearningTaskControllerD2Ev(%"class.media::learning::mojom::blink::LearningTaskController"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media8learning5mojom5blink43LearningTaskControllerInterceptorForTestingD0Ev(%"class.media::learning::mojom::blink::LearningTaskControllerInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media8learning5mojom5blink33LearningTaskControllerAsyncWaiter19PredictDistributionERKN3WTF6VectorINS4_5ValueELj0ENS8_18PartitionAllocatorEEEPN4absl8optionalINS4_15TargetHistogramEEEE3$_0JPNS_7RunLoopESJ_EEEFvRKSI_EE7RunOnceEPNS0_13BindStateBaseESP_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.absl::optional.1"* dereferenceable(32)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.absl::optional.1"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.absl::optional.1"*, %"class.absl::optional.1"** %6, align 8
  %9 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !7
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !7
  %16 = icmp eq i8 %15, 0
  %17 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %16, label %20, label %18

18:                                               ; preds = %12
  %19 = tail call dereferenceable(24) %"class.media::learning::TargetHistogram"* @_ZN5media8learning15TargetHistogramaSERKS1_(%"class.media::learning::TargetHistogram"* %17, %"class.media::learning::TargetHistogram"* dereferenceable(24) %13) #10
  br label %27

20:                                               ; preds = %12
  tail call void @_ZN5media8learning15TargetHistogramC1ERKS1_(%"class.media::learning::TargetHistogram"* %17, %"class.media::learning::TargetHistogram"* dereferenceable(24) %13) #10
  store i8 1, i8* %14, align 8
  br label %27

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 8, !range !7
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5media8learning15TargetHistogramD1Ev(%"class.media::learning::TargetHistogram"* %26) #10
  store i8 0, i8* %22, align 8
  br label %27

27:                                               ; preds = %18, %20, %21, %25
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

declare dereferenceable(24) %"class.media::learning::TargetHistogram"* @_ZN5media8learning15TargetHistogramaSERKS1_(%"class.media::learning::TargetHistogram"*, %"class.media::learning::TargetHistogram"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZN5media8learning15TargetHistogramC1ERKS1_(%"class.media::learning::TargetHistogram"*, %"class.media::learning::TargetHistogram"* dereferenceable(24)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5media8learning15TargetHistogramD1Ev(%"class.media::learning::TargetHistogram"*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5media8learning5mojom5blink33LearningTaskControllerAsyncWaiter19PredictDistributionERKN3WTF6VectorINS3_5ValueELj0ENS7_18PartitionAllocatorEEEPN4absl8optionalINS3_15TargetHistogramEEEE3$_0JPNS_7RunLoopESI_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5media8learning5mojom5blink33LearningTaskControllerAsyncWaiter19PredictDistributionERKN3WTF6VectorINS4_5ValueELj0ENS8_18PartitionAllocatorEEEPN4absl8optionalINS4_15TargetHistogramEEEE3$_0JPNS_7RunLoopERSJ_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5media8learning5mojom5blink33LearningTaskControllerAsyncWaiter19PredictDistributionERKN3WTF6VectorINS4_5ValueELj0ENS8_18PartitionAllocatorEEEPN4absl8optionalINS4_15TargetHistogramEEEE3$_0JPNS_7RunLoopERSJ_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5media8learning5mojom5blink33LearningTaskControllerAsyncWaiter19PredictDistributionERKN3WTF6VectorINS2_5ValueELj0ENS6_18PartitionAllocatorEEEPN4absl8optionalINS2_15TargetHistogramEEEE3$_0JPNS_7RunLoopERSH_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5media8learning5mojom5blink33LearningTaskControllerAsyncWaiter19PredictDistributionERKN3WTF6VectorINS2_5ValueELj0ENS6_18PartitionAllocatorEEEPN4absl8optionalINS2_15TargetHistogramEEEE3$_0JPNS_7RunLoopERSH_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_"}
!7 = !{i8 0, i8 2}
