; ModuleID = 'gen/headless/lib/browser/protocol/base_string_adapter.cc'
source_filename = "gen/headless/lib/browser/protocol/base_string_adapter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.headless::protocol::Binary" = type { %"class.crdtp::Serializable", %class.scoped_refptr }
%"class.crdtp::Serializable" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.headless::protocol::Value" = type <{ %"class.crdtp::Serializable", i32, [4 x i8] }>
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::detail::const_dict_iterator" = type { %"class.std::__1::__wrap_iter" }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::pair" = type opaque
%"class.base::detail::const_dict_iterator_proxy" = type { %"class.base::flat_map"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.15" }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::pair"* }
%"class.base::detail::const_dict_iterator::pointer" = type { %"struct.std::__1::pair.118" }
%"struct.std::__1::pair.118" = type { %"class.std::__1::basic_string"*, %"class.base::Value"* }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::DictionaryValue::Iterator" = type { %"class.base::DictionaryValue"*, %"class.base::detail::const_dict_iterator" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.headless::protocol::ListValue" = type { %"class.headless::protocol::Value.base", %"class.std::__1::vector.47" }
%"class.headless::protocol::Value.base" = type <{ %"class.crdtp::Serializable", i32 }>
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.headless::protocol::Value"* }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.base::Value"* }
%"class.headless::protocol::DictionaryValue" = type { %"class.headless::protocol::Value.base", [4 x i8], %"class.std::__1::unordered_map", %"class.std::__1::vector.79" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.60", %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.76", [4 x i8] }>
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62", %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { i64 }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { float }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::pair.106" = type { %"class.std::__1::basic_string", %"class.headless::protocol::Value"* }
%"class.crdtp::DeserializerState" = type { %"class.std::__1::shared_ptr", %"class.crdtp::cbor::CBORTokenizer", %"struct.crdtp::Status", %"class.std::__1::vector.107" }
%"class.std::__1::shared_ptr" = type { %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i8* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.crdtp::cbor::CBORTokenizer" = type { %"class.crdtp::span", i32, %"struct.crdtp::Status", i64, i32, i64 }
%"class.crdtp::span" = type { i8*, i64 }
%"struct.crdtp::Status" = type { i32, i64 }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { %"class.crdtp::span.109"*, %"class.crdtp::span.109"*, %"class.std::__1::__compressed_pair.110" }
%"class.crdtp::span.109" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.crdtp::span.109"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::RefCountedBytes" = type { %"class.base::RefCountedMemory.base", %"class.std::__1::vector" }
%"class.base::RefCountedMemory.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::RefCountedString" = type { %"class.base::RefCountedMemory.base", %"class.std::__1::basic_string" }

$_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v = comdat any

@_ZTVN8headless8protocol6BinaryE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.headless::protocol::Binary"*, %"class.std::__1::vector"*)* @_ZNK8headless8protocol6Binary16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.headless::protocol::Binary"*)* @_ZN8headless8protocol6BinaryD2Ev to i8*), i8* bitcast (void (%"class.headless::protocol::Binary"*)* @_ZN8headless8protocol6BinaryD0Ev to i8*)] }, align 8
@_ZTVN8headless8protocol5ValueE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN8headless8protocol16FundamentalValueE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN8headless8protocol11StringValueE = external unnamed_addr constant { [11 x i8*] }, align 8

@_ZN8headless8protocol6BinaryC1Ev = hidden unnamed_addr alias void (%"class.headless::protocol::Binary"*), void (%"class.headless::protocol::Binary"*)* @_ZN8headless8protocol6BinaryC2Ev
@_ZN8headless8protocol6BinaryC1ERKS1_ = hidden unnamed_addr alias void (%"class.headless::protocol::Binary"*, %"class.headless::protocol::Binary"*), void (%"class.headless::protocol::Binary"*, %"class.headless::protocol::Binary"*)* @_ZN8headless8protocol6BinaryC2ERKS1_
@_ZN8headless8protocol6BinaryC1E13scoped_refptrIN4base16RefCountedMemoryEE = hidden unnamed_addr alias void (%"class.headless::protocol::Binary"*, %"class.base::RefCountedMemory"*), void (%"class.headless::protocol::Binary"*, %"class.base::RefCountedMemory"*)* @_ZN8headless8protocol6BinaryC2E13scoped_refptrIN4base16RefCountedMemoryEE
@_ZN8headless8protocol6BinaryD1Ev = hidden unnamed_addr alias void (%"class.headless::protocol::Binary"*), void (%"class.headless::protocol::Binary"*)* @_ZN8headless8protocol6BinaryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.headless::protocol::Value"* @_ZN8headless8protocol15toProtocolValueEPKN4base5ValueEi(%"class.base::Value"*, i32) local_unnamed_addr #0 {
  %3 = alloca %"class.base::detail::const_dict_iterator", align 8
  %4 = alloca %"class.base::detail::const_dict_iterator_proxy", align 8
  %5 = alloca %"class.base::detail::const_dict_iterator::pointer", align 8
  %6 = alloca %"class.base::detail::const_dict_iterator::pointer", align 8
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca double, align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.base::ListValue"*, align 8
  %12 = alloca %"class.base::Value"*, align 8
  %13 = alloca %"class.base::DictionaryValue"*, align 8
  %14 = alloca %"class.base::DictionaryValue::Iterator", align 8
  %15 = icmp ne %"class.base::Value"* %0, null
  %16 = icmp ne i32 %1, 0
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %159

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i8
  switch i8 %21, label %159 [
    i8 0, label %22
    i8 1, label %28
    i8 2, label %37
    i8 3, label %48
    i8 4, label %60
    i8 7, label %87
    i8 6, label %125
  ]

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 16) #9
  %24 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol5ValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 8
  %27 = ptrtoint i8* %23 to i64
  br label %159

28:                                               ; preds = %18
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #10
  store i8 -86, i8* %7, align 1
  %29 = call zeroext i1 @_ZNK4base5Value12GetAsBooleanEPb(%"class.base::Value"* nonnull %0, i8* nonnull %7) #10
  %30 = load i8, i8* %7, align 1, !range !2
  %31 = call i8* @_Znwm(i64 24) #9
  %32 = bitcast i8* %31 to i32 (...)***
  %33 = getelementptr inbounds i8, i8* %31, i64 8
  %34 = bitcast i8* %33 to i32*
  store i32 1, i32* %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %35 = getelementptr inbounds i8, i8* %31, i64 16
  store i8 %30, i8* %35, align 8
  %36 = ptrtoint i8* %31 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  br label %159

37:                                               ; preds = %18
  %38 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #10
  store i32 -1431655766, i32* %8, align 4
  %39 = call zeroext i1 @_ZNK4base5Value12GetAsIntegerEPi(%"class.base::Value"* nonnull %0, i32* nonnull %8) #10
  %40 = load i32, i32* %8, align 4
  %41 = call i8* @_Znwm(i64 24) #9
  %42 = bitcast i8* %41 to i32 (...)***
  %43 = getelementptr inbounds i8, i8* %41, i64 8
  %44 = bitcast i8* %43 to i32*
  store i32 2, i32* %44, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %45 = getelementptr inbounds i8, i8* %41, i64 16
  %46 = bitcast i8* %45 to i32*
  store i32 %40, i32* %46, align 8
  %47 = ptrtoint i8* %41 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #10
  br label %159

48:                                               ; preds = %18
  %49 = bitcast double* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #10
  store double 0xFFFFFFFFFFFFFFFF, double* %9, align 8
  %50 = call zeroext i1 @_ZNK4base5Value11GetAsDoubleEPd(%"class.base::Value"* nonnull %0, double* nonnull %9) #10
  %51 = bitcast double* %9 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = call i8* @_Znwm(i64 24) #9
  %54 = bitcast i8* %53 to i32 (...)***
  %55 = getelementptr inbounds i8, i8* %53, i64 8
  %56 = bitcast i8* %55 to i32*
  store i32 3, i32* %56, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol16FundamentalValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %57 = getelementptr inbounds i8, i8* %53, i64 16
  %58 = bitcast i8* %57 to i64*
  store i64 %52, i64* %58, align 8
  %59 = ptrtoint i8* %53 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #10
  br label %159

60:                                               ; preds = %18
  %61 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #10
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 24, i1 false) #10
  %63 = call zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* nonnull %0, %"class.std::__1::basic_string"* nonnull %10) #10
  %64 = call i8* @_Znwm(i64 40) #9
  %65 = bitcast i8* %64 to i32 (...)***
  %66 = getelementptr inbounds i8, i8* %64, i64 8
  %67 = bitcast i8* %66 to i32*
  store i32 4, i32* %67, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN8headless8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %68 = getelementptr inbounds i8, i8* %64, i64 16
  %69 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %60
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* nonnull align 8 %61, i64 24, i1 false) #10
  %74 = ptrtoint i8* %64 to i64
  br label %85

75:                                               ; preds = %60
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = bitcast i8* %68 to %"class.std::__1::basic_string"*
  %78 = load i8*, i8** %62, align 8
  %79 = load i64, i64* %76, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %77, i8* %78, i64 %79) #10
  %80 = load i8, i8* %70, align 1
  %81 = ptrtoint i8* %64 to i64
  %82 = icmp slt i8 %80, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %75
  %84 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %84) #9
  br label %85

85:                                               ; preds = %73, %75, %83
  %86 = phi i64 [ %74, %73 ], [ %81, %75 ], [ %81, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #10
  br label %159

87:                                               ; preds = %18
  %88 = bitcast %"class.base::ListValue"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #10
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %11, align 8
  %89 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* nonnull %0, %"class.base::ListValue"** nonnull %11) #10
  %90 = call i8* @_Znwm(i64 40) #9
  %91 = bitcast i8* %90 to %"class.headless::protocol::ListValue"*
  call void @_ZN8headless8protocol9ListValueC1Ev(%"class.headless::protocol::ListValue"* nonnull %91) #10
  %92 = ptrtoint i8* %90 to i64
  %93 = load %"class.base::ListValue"*, %"class.base::ListValue"** %11, align 8
  %94 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, 7
  br i1 %96, label %97, label %100, !prof !3

97:                                               ; preds = %87
  %98 = bitcast %"class.base::Value"** %12 to i8*
  %99 = add nsw i32 %1, -1
  br label %102

100:                                              ; preds = %119, %87
  %101 = call dereferenceable(24) %"class.std::__1::vector.23"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #11
  unreachable

102:                                              ; preds = %97, %119
  %103 = phi %"class.base::ListValue"* [ %93, %97 ], [ %121, %119 ]
  %104 = phi i64 [ 0, %97 ], [ %120, %119 ]
  %105 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.base::ListValue"* %103 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %106, %108
  %110 = ashr exact i64 %109, 5
  %111 = icmp ult i64 %104, %110
  br i1 %111, label %113, label %112

112:                                              ; preds = %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #10
  br label %159

113:                                              ; preds = %102
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #10
  store %"class.base::Value"* null, %"class.base::Value"** %12, align 8
  %114 = call zeroext i1 @_ZNK4base9ListValue3GetEmPPKNS_5ValueE(%"class.base::ListValue"* %103, i64 %104, %"class.base::Value"** nonnull %12) #10
  %115 = load %"class.base::Value"*, %"class.base::Value"** %12, align 8
  %116 = call %"class.headless::protocol::Value"* @_ZN8headless8protocol15toProtocolValueEPKN4base5ValueEi(%"class.base::Value"* %115, i32 %99)
  %117 = icmp eq %"class.headless::protocol::Value"* %116, null
  br i1 %117, label %119, label %118

118:                                              ; preds = %113
  call void @_ZN8headless8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.headless::protocol::ListValue"* nonnull %91, %"class.headless::protocol::Value"* nonnull %116) #10
  br label %119

119:                                              ; preds = %113, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #10
  %120 = add nuw i64 %104, 1
  %121 = load %"class.base::ListValue"*, %"class.base::ListValue"** %11, align 8
  %122 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, 7
  br i1 %124, label %102, label %100, !prof !3

125:                                              ; preds = %18
  %126 = bitcast %"class.base::DictionaryValue"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #10
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %13, align 8
  %127 = call zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"* nonnull %0, %"class.base::DictionaryValue"** nonnull %13) #10
  %128 = call i8* @_Znwm(i64 80) #9
  %129 = bitcast i8* %128 to %"class.headless::protocol::DictionaryValue"*
  call void @_ZN8headless8protocol15DictionaryValueC1Ev(%"class.headless::protocol::DictionaryValue"* nonnull %129) #10
  %130 = ptrtoint i8* %128 to i64
  %131 = bitcast %"class.base::DictionaryValue::Iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 -86, i64 16, i1 false)
  %132 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %13, align 8
  call void @_ZN4base15DictionaryValue8IteratorC1ERKS0_(%"class.base::DictionaryValue::Iterator"* nonnull %14, %"class.base::DictionaryValue"* dereferenceable(32) %132) #10
  %133 = getelementptr inbounds %"class.base::DictionaryValue::Iterator", %"class.base::DictionaryValue::Iterator"* %14, i64 0, i32 1
  %134 = bitcast %"class.base::detail::const_dict_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #10
  %135 = bitcast %"class.base::detail::const_dict_iterator_proxy"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135) #10
  %136 = bitcast %"class.base::DictionaryValue::Iterator"* %14 to %"class.base::Value"**
  %137 = load %"class.base::Value"*, %"class.base::Value"** %136, align 8
  %138 = call %"class.base::flat_map"* @_ZNK4base5Value9DictItemsEv(%"class.base::Value"* %137) #10
  %139 = getelementptr inbounds %"class.base::detail::const_dict_iterator_proxy", %"class.base::detail::const_dict_iterator_proxy"* %4, i64 0, i32 0
  store %"class.base::flat_map"* %138, %"class.base::flat_map"** %139, align 8
  call void @_ZNK4base6detail25const_dict_iterator_proxy3endEv(%"class.base::detail::const_dict_iterator"* nonnull sret %3, %"class.base::detail::const_dict_iterator_proxy"* nonnull %4) #10
  %140 = call zeroext i1 @_ZN4base6detaileqERKNS0_19const_dict_iteratorES3_(%"class.base::detail::const_dict_iterator"* dereferenceable(8) %133, %"class.base::detail::const_dict_iterator"* nonnull dereferenceable(8) %3) #10
  call void @_ZN4base6detail19const_dict_iteratorD1Ev(%"class.base::detail::const_dict_iterator"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #10
  br i1 %140, label %147, label %141

141:                                              ; preds = %125
  %142 = bitcast %"class.base::detail::const_dict_iterator::pointer"* %5 to i8*
  %143 = getelementptr inbounds %"class.base::detail::const_dict_iterator::pointer", %"class.base::detail::const_dict_iterator::pointer"* %5, i64 0, i32 0, i32 1
  %144 = add nsw i32 %1, -1
  %145 = bitcast %"class.base::detail::const_dict_iterator::pointer"* %6 to i8*
  %146 = getelementptr inbounds %"class.base::detail::const_dict_iterator::pointer", %"class.base::detail::const_dict_iterator::pointer"* %6, i64 0, i32 0, i32 0
  br label %148

147:                                              ; preds = %154, %125
  call void @_ZN4base15DictionaryValue8IteratorD1Ev(%"class.base::DictionaryValue::Iterator"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #10
  br label %159

148:                                              ; preds = %141, %154
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142) #10
  call void @_ZNK4base6detail19const_dict_iteratorptEv(%"class.base::detail::const_dict_iterator::pointer"* nonnull sret %5, %"class.base::detail::const_dict_iterator"* %133) #10
  %149 = load %"class.base::Value"*, %"class.base::Value"** %143, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #10
  %150 = call %"class.headless::protocol::Value"* @_ZN8headless8protocol15toProtocolValueEPKN4base5ValueEi(%"class.base::Value"* %149, i32 %144)
  %151 = icmp eq %"class.headless::protocol::Value"* %150, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %148
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %145) #10
  call void @_ZNK4base6detail19const_dict_iteratorptEv(%"class.base::detail::const_dict_iterator::pointer"* nonnull sret %6, %"class.base::detail::const_dict_iterator"* %133) #10
  %153 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %146, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %145) #10
  call void @_ZN8headless8protocol15DictionaryValue8setValueERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS2_10unique_ptrINS0_5ValueENS2_14default_deleteISC_EEEE(%"class.headless::protocol::DictionaryValue"* nonnull %129, %"class.std::__1::basic_string"* dereferenceable(24) %153, %"class.headless::protocol::Value"* nonnull %150) #10
  br label %154

154:                                              ; preds = %148, %152
  %155 = call dereferenceable(8) %"class.base::detail::const_dict_iterator"* @_ZN4base6detail19const_dict_iteratorppEv(%"class.base::detail::const_dict_iterator"* %133) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135) #10
  %156 = load %"class.base::Value"*, %"class.base::Value"** %136, align 8
  %157 = call %"class.base::flat_map"* @_ZNK4base5Value9DictItemsEv(%"class.base::Value"* %156) #10
  store %"class.base::flat_map"* %157, %"class.base::flat_map"** %139, align 8
  call void @_ZNK4base6detail25const_dict_iterator_proxy3endEv(%"class.base::detail::const_dict_iterator"* nonnull sret %3, %"class.base::detail::const_dict_iterator_proxy"* nonnull %4) #10
  %158 = call zeroext i1 @_ZN4base6detaileqERKNS0_19const_dict_iteratorES3_(%"class.base::detail::const_dict_iterator"* dereferenceable(8) %133, %"class.base::detail::const_dict_iterator"* nonnull dereferenceable(8) %3) #10
  call void @_ZN4base6detail19const_dict_iteratorD1Ev(%"class.base::detail::const_dict_iterator"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #10
  br i1 %158, label %147, label %148

159:                                              ; preds = %18, %2, %147, %112, %85, %48, %37, %28, %22
  %160 = phi i64 [ %27, %22 ], [ %36, %28 ], [ %47, %37 ], [ %59, %48 ], [ %86, %85 ], [ %92, %112 ], [ %130, %147 ], [ 0, %2 ], [ 0, %18 ]
  %161 = inttoptr i64 %160 to %"class.headless::protocol::Value"*
  ret %"class.headless::protocol::Value"* %161
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK4base5Value12GetAsBooleanEPb(%"class.base::Value"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK4base5Value12GetAsIntegerEPi(%"class.base::Value"*, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base5Value11GetAsDoubleEPd(%"class.base::Value"*, double*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"*, %"class.base::ListValue"**) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base9ListValue3GetEmPPKNS_5ValueE(%"class.base::ListValue"*, i64, %"class.base::Value"**) local_unnamed_addr #2

declare void @_ZN8headless8protocol9ListValue9pushValueENSt3__110unique_ptrINS0_5ValueENS2_14default_deleteIS4_EEEE(%"class.headless::protocol::ListValue"*, %"class.headless::protocol::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"*, %"class.base::DictionaryValue"**) local_unnamed_addr #2

declare void @_ZN4base15DictionaryValue8IteratorC1ERKS0_(%"class.base::DictionaryValue::Iterator"*, %"class.base::DictionaryValue"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN8headless8protocol15DictionaryValue8setValueERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS2_10unique_ptrINS0_5ValueENS2_14default_deleteISC_EEEE(%"class.headless::protocol::DictionaryValue"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.headless::protocol::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base15DictionaryValue8IteratorD1Ev(%"class.base::DictionaryValue::Iterator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::Value"* @_ZN8headless8protocol11toBaseValueEPNS0_5ValueEi(%"class.headless::protocol::Value"*, i32) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca double, align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"struct.std::__1::pair.106", align 8
  %8 = icmp ne %"class.headless::protocol::Value"* %0, null
  %9 = icmp ne i32 %1, 0
  %10 = and i1 %8, %9
  br i1 %10, label %11, label %145

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.headless::protocol::Value", %"class.headless::protocol::Value"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %145 [
    i32 0, label %14
    i32 1, label %18
    i32 2, label %29
    i32 3, label %40
    i32 4, label %51
    i32 7, label %77
    i32 6, label %104
  ]

14:                                               ; preds = %11
  %15 = tail call i8* @_Znwm(i64 32) #9
  %16 = bitcast i8* %15 to %"class.base::Value"*
  tail call void @_ZN4base5ValueC1Ev(%"class.base::Value"* nonnull %16) #10
  %17 = ptrtoint i8* %15 to i64
  br label %145

18:                                               ; preds = %11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #10
  store i8 -86, i8* %3, align 1
  %19 = bitcast %"class.headless::protocol::Value"* %0 to i1 (%"class.headless::protocol::Value"*, i8*)***
  %20 = load i1 (%"class.headless::protocol::Value"*, i8*)**, i1 (%"class.headless::protocol::Value"*, i8*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.headless::protocol::Value"*, i8*)*, i1 (%"class.headless::protocol::Value"*, i8*)** %20, i64 3
  %22 = load i1 (%"class.headless::protocol::Value"*, i8*)*, i1 (%"class.headless::protocol::Value"*, i8*)** %21, align 8
  %23 = call zeroext i1 %22(%"class.headless::protocol::Value"* nonnull %0, i8* nonnull %3) #10
  %24 = call i8* @_Znwm(i64 32) #9
  %25 = bitcast i8* %24 to %"class.base::Value"*
  %26 = load i8, i8* %3, align 1, !range !2
  %27 = icmp ne i8 %26, 0
  call void @_ZN4base5ValueC1Eb(%"class.base::Value"* nonnull %25, i1 zeroext %27) #10
  %28 = ptrtoint i8* %24 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #10
  br label %145

29:                                               ; preds = %11
  %30 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #10
  store i32 -1431655766, i32* %4, align 4
  %31 = bitcast %"class.headless::protocol::Value"* %0 to i1 (%"class.headless::protocol::Value"*, i32*)***
  %32 = load i1 (%"class.headless::protocol::Value"*, i32*)**, i1 (%"class.headless::protocol::Value"*, i32*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.headless::protocol::Value"*, i32*)*, i1 (%"class.headless::protocol::Value"*, i32*)** %32, i64 5
  %34 = load i1 (%"class.headless::protocol::Value"*, i32*)*, i1 (%"class.headless::protocol::Value"*, i32*)** %33, align 8
  %35 = call zeroext i1 %34(%"class.headless::protocol::Value"* nonnull %0, i32* nonnull %4) #10
  %36 = call i8* @_Znwm(i64 32) #9
  %37 = bitcast i8* %36 to %"class.base::Value"*
  %38 = load i32, i32* %4, align 4
  call void @_ZN4base5ValueC1Ei(%"class.base::Value"* nonnull %37, i32 %38) #10
  %39 = ptrtoint i8* %36 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #10
  br label %145

40:                                               ; preds = %11
  %41 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #10
  store double 0xFFFFFFFFFFFFFFFF, double* %5, align 8
  %42 = bitcast %"class.headless::protocol::Value"* %0 to i1 (%"class.headless::protocol::Value"*, double*)***
  %43 = load i1 (%"class.headless::protocol::Value"*, double*)**, i1 (%"class.headless::protocol::Value"*, double*)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.headless::protocol::Value"*, double*)*, i1 (%"class.headless::protocol::Value"*, double*)** %43, i64 4
  %45 = load i1 (%"class.headless::protocol::Value"*, double*)*, i1 (%"class.headless::protocol::Value"*, double*)** %44, align 8
  %46 = call zeroext i1 %45(%"class.headless::protocol::Value"* nonnull %0, double* nonnull %5) #10
  %47 = call i8* @_Znwm(i64 32) #9
  %48 = bitcast i8* %47 to %"class.base::Value"*
  %49 = load double, double* %5, align 8
  call void @_ZN4base5ValueC1Ed(%"class.base::Value"* nonnull %48, double %49) #10
  %50 = ptrtoint i8* %47 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #10
  br label %145

51:                                               ; preds = %11
  %52 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #10
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 24, i1 false) #10
  %55 = bitcast %"class.headless::protocol::Value"* %0 to i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)***
  %56 = load i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)**, i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)*** %55, align 8
  %57 = getelementptr inbounds i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)*, i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)** %56, i64 6
  %58 = load i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)*, i1 (%"class.headless::protocol::Value"*, %"class.std::__1::basic_string"*)** %57, align 8
  %59 = call zeroext i1 %58(%"class.headless::protocol::Value"* nonnull %0, %"class.std::__1::basic_string"* nonnull %6) #10
  %60 = call i8* @_Znwm(i64 32) #9
  %61 = bitcast i8* %60 to %"class.base::Value"*
  %62 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  %66 = load i8*, i8** %53, align 8
  %67 = select i1 %65, i8* %66, i8* %52
  %68 = load i64, i64* %54, align 8
  %69 = zext i8 %64 to i64
  %70 = select i1 %65, i64 %68, i64 %69
  call void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %61, i8* %67, i64 %70) #10
  %71 = ptrtoint i8* %60 to i64
  %72 = load i8, i8* %63, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %51
  %75 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %75) #9
  br label %76

76:                                               ; preds = %51, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #10
  br label %145

77:                                               ; preds = %11
  %78 = bitcast %"class.headless::protocol::Value"* %0 to %"class.headless::protocol::ListValue"*
  %79 = tail call i8* @_Znwm(i64 32) #9
  %80 = bitcast i8* %79 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %80) #10
  %81 = ptrtoint i8* %79 to i64
  %82 = getelementptr inbounds %"class.headless::protocol::Value", %"class.headless::protocol::Value"* %0, i64 1
  %83 = getelementptr inbounds %"class.headless::protocol::Value", %"class.headless::protocol::Value"* %0, i64 1, i32 1
  %84 = bitcast i32* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.headless::protocol::Value"* %82 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %85, %87
  br i1 %88, label %145, label %89

89:                                               ; preds = %77
  %90 = add nsw i32 %1, -1
  br label %91

91:                                               ; preds = %89, %97
  %92 = phi i64 [ 0, %89 ], [ %98, %97 ]
  %93 = tail call %"class.headless::protocol::Value"* @_ZN8headless8protocol9ListValue2atEm(%"class.headless::protocol::ListValue"* nonnull %78, i64 %92) #10
  %94 = tail call %"class.base::Value"* @_ZN8headless8protocol11toBaseValueEPNS0_5ValueEi(%"class.headless::protocol::Value"* %93, i32 %90)
  %95 = icmp eq %"class.base::Value"* %94, null
  br i1 %95, label %97, label %96

96:                                               ; preds = %91
  tail call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %80, %"class.base::Value"* nonnull %94) #10
  br label %97

97:                                               ; preds = %91, %96
  %98 = add nuw i64 %92, 1
  %99 = load i64, i64* %84, align 8
  %100 = load i64, i64* %86, align 8
  %101 = sub i64 %99, %100
  %102 = ashr exact i64 %101, 3
  %103 = icmp ult i64 %98, %102
  br i1 %103, label %91, label %145

104:                                              ; preds = %11
  %105 = bitcast %"class.headless::protocol::Value"* %0 to %"class.headless::protocol::DictionaryValue"*
  %106 = tail call i8* @_Znwm(i64 32) #9
  %107 = bitcast i8* %106 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %107) #10
  %108 = ptrtoint i8* %106 to i64
  %109 = getelementptr inbounds %"class.headless::protocol::Value", %"class.headless::protocol::Value"* %0, i64 2, i32 1
  %110 = bitcast i32* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %145, label %113

113:                                              ; preds = %104
  %114 = bitcast %"struct.std::__1::pair.106"* %7 to i8*
  %115 = getelementptr inbounds %"struct.std::__1::pair.106", %"struct.std::__1::pair.106"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::__1::pair.106", %"struct.std::__1::pair.106"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %117 = getelementptr inbounds %"struct.std::__1::pair.106", %"struct.std::__1::pair.106"* %7, i64 0, i32 1
  %118 = add nsw i32 %1, -1
  %119 = bitcast %"struct.std::__1::pair.106"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = bitcast %"struct.std::__1::pair.106"* %7 to i8*
  br label %122

122:                                              ; preds = %113, %141
  %123 = phi i64 [ 0, %113 ], [ %142, %141 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 32, i1 false)
  call void @_ZNK8headless8protocol15DictionaryValue2atEm(%"struct.std::__1::pair.106"* nonnull sret %7, %"class.headless::protocol::DictionaryValue"* nonnull %105, i64 %123) #10
  %124 = load %"class.headless::protocol::Value"*, %"class.headless::protocol::Value"** %117, align 8
  %125 = call %"class.base::Value"* @_ZN8headless8protocol11toBaseValueEPNS0_5ValueEi(%"class.headless::protocol::Value"* %124, i32 %118)
  %126 = icmp eq %"class.base::Value"* %125, null
  br i1 %126, label %136, label %127

127:                                              ; preds = %122
  %128 = load i8, i8* %120, align 1
  %129 = icmp slt i8 %128, 0
  %130 = load i8*, i8** %115, align 8
  %131 = select i1 %129, i8* %130, i8* %114
  %132 = load i64, i64* %116, align 8
  %133 = zext i8 %128 to i64
  %134 = select i1 %129, i64 %132, i64 %133
  %135 = call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %107, i8* %131, i64 %134, %"class.base::Value"* nonnull %125) #10
  br label %136

136:                                              ; preds = %122, %127
  %137 = load i8, i8* %120, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %136
  %140 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %140) #9
  br label %141

141:                                              ; preds = %136, %139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #10
  %142 = add nuw i64 %123, 1
  %143 = load i64, i64* %110, align 8
  %144 = icmp ult i64 %142, %143
  br i1 %144, label %122, label %145

145:                                              ; preds = %141, %97, %77, %104, %11, %2, %76, %40, %29, %18, %14
  %146 = phi i64 [ %17, %14 ], [ %28, %18 ], [ %39, %29 ], [ %50, %40 ], [ %71, %76 ], [ 0, %2 ], [ 0, %11 ], [ %81, %77 ], [ %108, %104 ], [ %81, %97 ], [ %108, %141 ]
  %147 = inttoptr i64 %146 to %"class.base::Value"*
  ret %"class.base::Value"* %147
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4base5ValueC1Eb(%"class.base::Value"*, i1 zeroext) unnamed_addr #2

declare void @_ZN4base5ValueC1Ei(%"class.base::Value"*, i32) unnamed_addr #2

declare void @_ZN4base5ValueC1Ed(%"class.base::Value"*, double) unnamed_addr #2

declare void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) unnamed_addr #2

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #2

declare %"class.headless::protocol::Value"* @_ZN8headless8protocol9ListValue2atEm(%"class.headless::protocol::ListValue"*, i64) local_unnamed_addr #2

declare void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"*, %"class.base::Value"*) local_unnamed_addr #2

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #2

declare void @_ZNK8headless8protocol15DictionaryValue2atEm(%"struct.std::__1::pair.106"* sret, %"class.headless::protocol::DictionaryValue"*, i64) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol10StringUtil11fromUTF16LEEPKtm(%"class.std::__1::basic_string"* noalias sret, i16*, i64) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #10
  %5 = tail call zeroext i1 @_ZN4base11UTF16ToUTF8EPKDsmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i16* %1, i64 %2, %"class.std::__1::basic_string"* %0) #10
  ret void
}

declare zeroext i1 @_ZN4base11UTF16ToUTF8EPKDsmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i16*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8headless8protocol10StringUtil10ReadStringEPN5crdtp17DeserializerStateEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.crdtp::DeserializerState"*, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %0, i64 0, i32 1
  %6 = tail call i32 @_ZNK5crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.crdtp::cbor::CBORTokenizer"* %5) #10
  %7 = icmp eq i32 %6, 6
  br i1 %7, label %8, label %45

8:                                                ; preds = %2
  %9 = tail call { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer10GetString8Ev(%"class.crdtp::cbor::CBORTokenizer"* %5) #10
  %10 = extractvalue { i8*, i64 } %9, 0
  %11 = extractvalue { i8*, i64 } %9, 1
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = icmp ugt i64 %11, -17
  br i1 %13, label %14, label %16

14:                                               ; preds = %8
  %15 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %15) #11
  unreachable

16:                                               ; preds = %8
  %17 = icmp ult i64 %11, 23
  br i1 %17, label %26, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %11, 16
  %20 = and i64 %19, -16
  %21 = tail call i8* @_Znwm(i64 %20) #9
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8, !alias.scope !4
  %23 = or i64 %20, -9223372036854775808
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %23, i64* %24, align 8, !alias.scope !4
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %11, i64* %25, align 8, !alias.scope !4
  br label %31

26:                                               ; preds = %16
  %27 = trunc i64 %11 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 %27, i8* %29, align 1, !alias.scope !4
  %30 = icmp eq i64 %11, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %26, %18
  %32 = phi i8* [ %21, %18 ], [ %12, %26 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 %10, i64 %11, i1 false) #10
  br label %33

33:                                               ; preds = %26, %31
  %34 = phi i8* [ %12, %26 ], [ %32, %31 ]
  %35 = getelementptr inbounds i8, i8* %34, i64 %11
  store i8 0, i8* %35, align 1
  %36 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  tail call void @_ZdlPv(i8* %42) #9
  br label %43

43:                                               ; preds = %40, %33
  %44 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 8 %12, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  br label %66

45:                                               ; preds = %2
  %46 = tail call i32 @_ZNK5crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.crdtp::cbor::CBORTokenizer"* %5) #10
  %47 = icmp eq i32 %46, 7
  br i1 %47, label %48, label %65

48:                                               ; preds = %45
  %49 = tail call { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer18GetString16WireRepEv(%"class.crdtp::cbor::CBORTokenizer"* %5) #10
  %50 = extractvalue { i8*, i64 } %49, 0
  %51 = extractvalue { i8*, i64 } %49, 1
  %52 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #10
  %53 = bitcast i8* %50 to i16*
  %54 = lshr i64 %51, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 24, i1 false) #10, !alias.scope !7
  %55 = call zeroext i1 @_ZN4base11UTF16ToUTF8EPKDsmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i16* %53, i64 %54, %"class.std::__1::basic_string"* nonnull %4) #10
  %56 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %48
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #9
  br label %63

63:                                               ; preds = %60, %48
  %64 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %52, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #10
  br label %66

65:                                               ; preds = %45
  tail call void @_ZN5crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.crdtp::DeserializerState"* %0, i32 52) #10
  br label %66

66:                                               ; preds = %65, %63, %43
  %67 = phi i1 [ true, %43 ], [ true, %63 ], [ false, %65 ]
  ret i1 %67
}

declare i32 @_ZNK5crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer10GetString8Ev(%"class.crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer18GetString16WireRepEv(%"class.crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

declare void @_ZN5crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.crdtp::DeserializerState"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol10StringUtil11WriteStringERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS2_6vectorIhNS6_IhEEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %5 to i64
  %14 = select i1 %6, i64 %12, i64 %13
  tail call void @_ZN5crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* %10, i64 %14, %"class.std::__1::vector"* %1) #10
  ret void
}

declare void @_ZN5crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol6BinaryC2Ev(%"class.headless::protocol::Binary"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call i8* @_Znwm(i64 40) #9
  %4 = bitcast i8* %3 to %"class.base::RefCountedBytes"*
  tail call void @_ZN4base15RefCountedBytesC1Ev(%"class.base::RefCountedBytes"* nonnull %4) #10
  %5 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 1, i32 0
  %6 = bitcast %"class.base::RefCountedMemory"** %5 to i8**
  store i8* %3, i8** %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  ret void
}

declare void @_ZN4base15RefCountedBytesC1Ev(%"class.base::RefCountedBytes"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8headless8protocol6BinaryC2ERKS1_(%"class.headless::protocol::Binary"* nocapture, %"class.headless::protocol::Binary"* nocapture readonly dereferenceable(16)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %1, i64 0, i32 1, i32 0
  %5 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %4, align 8
  %6 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 1, i32 0
  store %"class.base::RefCountedMemory"* %5, %"class.base::RefCountedMemory"** %6, align 8
  %7 = icmp eq %"class.base::RefCountedMemory"* %5, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol6BinaryC2E13scoped_refptrIN4base16RefCountedMemoryEE(%"class.headless::protocol::Binary"* nocapture, %"class.base::RefCountedMemory"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 1, i32 0
  store %"class.base::RefCountedMemory"* %1, %"class.base::RefCountedMemory"** %4, align 8
  %5 = icmp eq %"class.base::RefCountedMemory"* %1, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  %9 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::RefCountedMemory"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.base::RefCountedMemory"*)***
  %17 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %17, i64 3
  %19 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %18, align 8
  tail call void %19(%"class.base::RefCountedMemory"* nonnull %15) #10
  br label %20

20:                                               ; preds = %2, %6, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol6BinaryD2Ev(%"class.headless::protocol::Binary"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %3, align 8
  %5 = icmp eq %"class.base::RefCountedMemory"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::RefCountedMemory"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.base::RefCountedMemory"*)***
  %15 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %15, i64 3
  %17 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %16, align 8
  tail call void %17(%"class.base::RefCountedMemory"* nonnull %13) #10
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol6BinaryD0Ev(%"class.headless::protocol::Binary"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %3, align 8
  %5 = icmp eq %"class.base::RefCountedMemory"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::RefCountedMemory"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.base::RefCountedMemory"*)***
  %15 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %15, i64 3
  %17 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %16, align 8
  tail call void %17(%"class.base::RefCountedMemory"* nonnull %13) #10
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %"class.headless::protocol::Binary"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8headless8protocol6Binary16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.headless::protocol::Binary"* nocapture readonly, %"class.std::__1::vector"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %3, align 8
  %5 = bitcast %"class.base::RefCountedMemory"* %4 to i8* (%"class.base::RefCountedMemory"*)***
  %6 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %5, align 8
  %7 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %6, align 8
  %8 = tail call i8* %7(%"class.base::RefCountedMemory"* %4) #10
  %9 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %3, align 8
  %10 = bitcast %"class.base::RefCountedMemory"* %9 to i64 (%"class.base::RefCountedMemory"*)***
  %11 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %11, i64 1
  %13 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %12, align 8
  %14 = tail call i64 %13(%"class.base::RefCountedMemory"* %9) #10
  tail call void @_ZN5crdtp4cbor12EncodeBinaryENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* %8, i64 %14, %"class.std::__1::vector"* %1) #10
  ret void
}

declare void @_ZN5crdtp4cbor12EncodeBinaryENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8headless8protocol6Binary8toBase64Ev(%"class.std::__1::basic_string"* noalias sret, %"class.headless::protocol::Binary"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #10
  %5 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %1, i64 0, i32 1, i32 0
  %7 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %6, align 8
  %8 = bitcast %"class.base::RefCountedMemory"* %7 to i8* (%"class.base::RefCountedMemory"*)***
  %9 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %8, align 8
  %10 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %9, align 8
  %11 = tail call i8* %10(%"class.base::RefCountedMemory"* %7) #10
  %12 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %6, align 8
  %13 = bitcast %"class.base::RefCountedMemory"* %12 to i64 (%"class.base::RefCountedMemory"*)***
  %14 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %14, i64 1
  %16 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %15, align 8
  %17 = tail call i64 %16(%"class.base::RefCountedMemory"* %12) #10
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  store i8* %11, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  store i64 %17, i64* %19, align 8
  call void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3, %"class.std::__1::basic_string"* %0) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret void
}

declare void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol6Binary10fromBase64ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPb(%"class.headless::protocol::Binary"* noalias nocapture sret, %"class.std::__1::basic_string"* dereferenceable(24), i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #10
  %9 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %18 = select i1 %14, i8* %16, i8* %17
  store i8* %18, i8** %10, align 8
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %13 to i64
  %23 = select i1 %14, i64 %21, i64 %22
  store i64 %23, i64* %19, align 8
  %24 = call zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5, %"class.std::__1::basic_string"* nonnull %4) #10
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %2, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  br i1 %24, label %26, label %55

26:                                               ; preds = %3
  %27 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %7, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #10
  %28 = call %"class.base::RefCountedString"* @_ZN4base16RefCountedString10TakeStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %6) #10, !noalias !10
  %29 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8, !alias.scope !10
  %30 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 1, i32 0
  %31 = bitcast %"class.base::RefCountedMemory"** %30 to %"class.base::RefCountedString"**
  store %"class.base::RefCountedString"* %28, %"class.base::RefCountedString"** %31, align 8, !alias.scope !10
  %32 = icmp eq %"class.base::RefCountedString"* %28, null
  br i1 %32, label %47, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.base::RefCountedString", %"class.base::RefCountedString"* %28, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 1 monotonic, !noalias !10
  %36 = getelementptr inbounds %"class.base::RefCountedString", %"class.base::RefCountedString"* %28, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel, !noalias !10
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %47

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %36, i64 -2
  %42 = bitcast %"class.base::RefCountedThreadSafe"* %41 to %"class.base::RefCountedMemory"*
  %43 = bitcast %"class.base::RefCountedThreadSafe"* %41 to void (%"class.base::RefCountedMemory"*)***
  %44 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %43, align 8, !noalias !10
  %45 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %44, i64 3
  %46 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %45, align 8, !noalias !10
  call void %46(%"class.base::RefCountedMemory"* nonnull %42) #10, !noalias !10
  br label %47

47:                                               ; preds = %26, %33, %40
  %48 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #9
  br label %64

55:                                               ; preds = %3
  %56 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = call i8* @_Znwm(i64 40) #9
  %58 = bitcast i8* %57 to %"class.base::RefCountedBytes"*
  call void @_ZN4base15RefCountedBytesC1Ev(%"class.base::RefCountedBytes"* nonnull %58) #10
  %59 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 1, i32 0
  %60 = bitcast %"class.base::RefCountedMemory"** %59 to i8**
  store i8* %57, i8** %60, align 8
  %61 = getelementptr inbounds i8, i8* %57, i64 8
  %62 = bitcast i8* %61 to i32*
  %63 = atomicrmw add i32* %62, i32 1 monotonic
  br label %64

64:                                               ; preds = %52, %47, %55
  %65 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %64
  %70 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %70) #9
  br label %71

71:                                               ; preds = %64, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

declare zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol6Binary10fromStringENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.headless::protocol::Binary"* noalias nocapture sret, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.base::RefCountedString"* @_ZN4base16RefCountedString10TakeStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* %1) #10
  %4 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 1, i32 0
  %6 = bitcast %"class.base::RefCountedMemory"** %5 to %"class.base::RefCountedString"**
  store %"class.base::RefCountedString"* %3, %"class.base::RefCountedString"** %6, align 8
  %7 = icmp eq %"class.base::RefCountedString"* %3, null
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::RefCountedString", %"class.base::RefCountedString"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  %11 = getelementptr inbounds %"class.base::RefCountedString", %"class.base::RefCountedString"* %3, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.base::RefCountedMemory"*
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %16 to void (%"class.base::RefCountedMemory"*)***
  %19 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %19, i64 3
  %21 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %20, align 8
  tail call void %21(%"class.base::RefCountedMemory"* nonnull %17) #10
  br label %22

22:                                               ; preds = %15, %8, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol6Binary14fromRefCountedE13scoped_refptrIN4base16RefCountedMemoryEE(%"class.headless::protocol::Binary"* noalias nocapture sret, %"class.base::RefCountedMemory"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.base::RefCountedMemory"* %1, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 1 monotonic
  %7 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 1, i32 0
  store %"class.base::RefCountedMemory"* %1, %"class.base::RefCountedMemory"** %8, align 8
  %9 = atomicrmw add i32* %5, i32 1 monotonic
  %10 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %24

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 -2
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %15 to %"class.base::RefCountedMemory"*
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %15 to void (%"class.base::RefCountedMemory"*)***
  %18 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %18, i64 3
  %20 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %19, align 8
  tail call void %20(%"class.base::RefCountedMemory"* nonnull %16) #10
  br label %24

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 1, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %23, align 8
  br label %34

24:                                               ; preds = %4, %14
  %25 = atomicrmw sub i32* %11, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %34

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 -2
  %29 = bitcast %"class.base::RefCountedThreadSafe"* %28 to %"class.base::RefCountedMemory"*
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %28 to void (%"class.base::RefCountedMemory"*)***
  %31 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %31, i64 3
  %33 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %32, align 8
  tail call void %33(%"class.base::RefCountedMemory"* nonnull %29) #10
  br label %34

34:                                               ; preds = %21, %24, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol6Binary10fromVectorENSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.headless::protocol::Binary"* noalias nocapture sret, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.base::RefCountedBytes"* @_ZN4base15RefCountedBytes10TakeVectorEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector"* %1) #10
  %4 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 1, i32 0
  %6 = bitcast %"class.base::RefCountedMemory"** %5 to %"class.base::RefCountedBytes"**
  store %"class.base::RefCountedBytes"* %3, %"class.base::RefCountedBytes"** %6, align 8
  %7 = icmp eq %"class.base::RefCountedBytes"* %3, null
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::RefCountedBytes", %"class.base::RefCountedBytes"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  %11 = getelementptr inbounds %"class.base::RefCountedBytes", %"class.base::RefCountedBytes"* %3, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.base::RefCountedMemory"*
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %16 to void (%"class.base::RefCountedMemory"*)***
  %19 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %19, i64 3
  %21 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %20, align 8
  tail call void %21(%"class.base::RefCountedMemory"* nonnull %17) #10
  br label %22

22:                                               ; preds = %15, %8, %2
  ret void
}

declare %"class.base::RefCountedBytes"* @_ZN4base15RefCountedBytes10TakeVectorEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector"*) local_unnamed_addr #2

declare %"class.base::RefCountedString"* @_ZN4base16RefCountedString10TakeStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol6Binary8fromSpanEPKhm(%"class.headless::protocol::Binary"* noalias nocapture sret, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 40) #9
  %5 = bitcast i8* %4 to %"class.base::RefCountedBytes"*
  tail call void @_ZN4base15RefCountedBytesC1EPKhm(%"class.base::RefCountedBytes"* nonnull %5, i8* %1, i64 %2) #10
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i32*
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  %9 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %0, i64 0, i32 1, i32 0
  %11 = bitcast %"class.base::RefCountedMemory"** %10 to i8**
  store i8* %4, i8** %11, align 8
  %12 = atomicrmw add i32* %7, i32 1 monotonic
  %13 = atomicrmw sub i32* %7, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %3
  %16 = bitcast i8* %4 to %"class.base::RefCountedMemory"*
  %17 = bitcast i8* %4 to void (%"class.base::RefCountedMemory"*)***
  %18 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %18, i64 3
  %20 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %19, align 8
  tail call void %20(%"class.base::RefCountedMemory"* nonnull %16) #10
  br label %21

21:                                               ; preds = %15, %3
  ret void
}

declare void @_ZN4base15RefCountedBytesC1EPKhm(%"class.base::RefCountedBytes"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5crdtp18ProtocolTypeTraitsIN8headless8protocol6BinaryEvE11DeserializeEPNS_17DeserializerStateEPS3_(%"class.crdtp::DeserializerState"*, %"class.headless::protocol::Binary"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.headless::protocol::Binary", align 8
  %6 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %0, i64 0, i32 1
  %7 = tail call i32 @_ZNK5crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.crdtp::cbor::CBORTokenizer"* %6) #10
  %8 = icmp eq i32 %7, 8
  br i1 %8, label %9, label %56

9:                                                ; preds = %2
  %10 = tail call { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer9GetBinaryEv(%"class.crdtp::cbor::CBORTokenizer"* %6) #10
  %11 = extractvalue { i8*, i64 } %10, 0
  %12 = extractvalue { i8*, i64 } %10, 1
  %13 = tail call i8* @_Znwm(i64 40) #9, !noalias !13
  %14 = bitcast i8* %13 to %"class.base::RefCountedBytes"*
  tail call void @_ZN4base15RefCountedBytesC1EPKhm(%"class.base::RefCountedBytes"* nonnull %14, i8* %11, i64 %12) #10, !noalias !13
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to i32*
  %17 = atomicrmw add i32* %16, i32 1 monotonic, !noalias !13
  %18 = atomicrmw add i32* %16, i32 1 monotonic, !noalias !13
  %19 = atomicrmw sub i32* %16, i32 1 acq_rel, !noalias !13
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %9
  %22 = bitcast i8* %13 to %"class.base::RefCountedMemory"*
  %23 = bitcast i8* %13 to void (%"class.base::RefCountedMemory"*)***
  %24 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %23, align 8, !noalias !13
  %25 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %24, i64 3
  %26 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %25, align 8, !noalias !13
  tail call void %26(%"class.base::RefCountedMemory"* nonnull %22) #10, !noalias !13
  br label %27

27:                                               ; preds = %9, %21
  %28 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %1, i64 0, i32 1
  %29 = atomicrmw add i32* %16, i32 1 monotonic
  %30 = ptrtoint i8* %13 to i64
  %31 = bitcast %class.scoped_refptr* %28 to i64*
  %32 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 0, i32 0
  %33 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %32, align 8
  store i64 %30, i64* %31, align 8
  %34 = icmp eq %"class.base::RefCountedMemory"* %33, null
  br i1 %34, label %47, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %33, i64 0, i32 1
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %47

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %36, i64 -2
  %42 = bitcast %"class.base::RefCountedThreadSafe"* %41 to %"class.base::RefCountedMemory"*
  %43 = bitcast %"class.base::RefCountedThreadSafe"* %41 to void (%"class.base::RefCountedMemory"*)***
  %44 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %44, i64 3
  %46 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %45, align 8
  tail call void %46(%"class.base::RefCountedMemory"* nonnull %42) #10
  br label %47

47:                                               ; preds = %40, %35, %27
  %48 = atomicrmw sub i32* %16, i32 1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %141

50:                                               ; preds = %47
  %51 = bitcast i8* %13 to %"class.base::RefCountedMemory"*
  %52 = bitcast i8* %13 to void (%"class.base::RefCountedMemory"*)***
  %53 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %53, i64 3
  %55 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %54, align 8
  tail call void %55(%"class.base::RefCountedMemory"* nonnull %51) #10
  br label %141

56:                                               ; preds = %2
  %57 = tail call i32 @_ZNK5crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.crdtp::cbor::CBORTokenizer"* %6) #10
  %58 = icmp eq i32 %57, 6
  br i1 %58, label %59, label %140

59:                                               ; preds = %56
  %60 = tail call { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer10GetString8Ev(%"class.crdtp::cbor::CBORTokenizer"* %6) #10
  %61 = extractvalue { i8*, i64 } %60, 0
  %62 = extractvalue { i8*, i64 } %60, 1
  %63 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #10
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %67 = icmp ugt i64 %62, -17
  %68 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 24, i1 false)
  br i1 %67, label %69, label %71

69:                                               ; preds = %59
  %70 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %70) #11
  unreachable

71:                                               ; preds = %59
  %72 = icmp ult i64 %62, 23
  br i1 %72, label %78, label %73

73:                                               ; preds = %71
  %74 = add nuw i64 %62, 16
  %75 = and i64 %74, -16
  %76 = tail call i8* @_Znwm(i64 %75) #9
  store i8* %76, i8** %64, align 8, !alias.scope !16
  %77 = or i64 %75, -9223372036854775808
  store i64 %77, i64* %66, align 8, !alias.scope !16
  store i64 %62, i64* %65, align 8, !alias.scope !16
  br label %83

78:                                               ; preds = %71
  %79 = trunc i64 %62 to i8
  %80 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  store i8 %79, i8* %81, align 1, !alias.scope !16
  %82 = icmp eq i64 %62, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %78, %73
  %84 = phi i8* [ %76, %73 ], [ %63, %78 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %84, i8* align 1 %61, i64 %62, i1 false) #10
  br label %85

85:                                               ; preds = %78, %83
  %86 = phi i8* [ %63, %78 ], [ %84, %83 ]
  %87 = getelementptr inbounds i8, i8* %86, i64 %62
  store i8 0, i8* %87, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 0, i8* %4, align 1
  %88 = bitcast %"class.headless::protocol::Binary"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #10
  call void @_ZN8headless8protocol6Binary10fromBase64ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPb(%"class.headless::protocol::Binary"* nonnull sret %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i8* nonnull %4)
  %89 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %1, i64 0, i32 1
  %90 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %5, i64 0, i32 1, i32 0
  %91 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %90, align 8
  %92 = icmp eq %"class.base::RefCountedMemory"* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %91, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 1 monotonic
  br label %96

96:                                               ; preds = %93, %85
  %97 = ptrtoint %"class.base::RefCountedMemory"* %91 to i64
  %98 = bitcast %class.scoped_refptr* %89 to i64*
  %99 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %89, i64 0, i32 0
  %100 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %99, align 8
  store i64 %97, i64* %98, align 8
  %101 = icmp eq %"class.base::RefCountedMemory"* %100, null
  br i1 %101, label %114, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %100, i64 0, i32 1
  %104 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw sub i32* %104, i32 1 acq_rel
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %114

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %103, i64 -2
  %109 = bitcast %"class.base::RefCountedThreadSafe"* %108 to %"class.base::RefCountedMemory"*
  %110 = bitcast %"class.base::RefCountedThreadSafe"* %108 to void (%"class.base::RefCountedMemory"*)***
  %111 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %111, i64 3
  %113 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %112, align 8
  call void %113(%"class.base::RefCountedMemory"* nonnull %109) #10
  br label %114

114:                                              ; preds = %96, %102, %107
  %115 = getelementptr inbounds %"class.headless::protocol::Binary", %"class.headless::protocol::Binary"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8headless8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %115, align 8
  %116 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %90, align 8
  %117 = icmp eq %"class.base::RefCountedMemory"* %116, null
  br i1 %117, label %130, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %116, i64 0, i32 1
  %120 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = atomicrmw sub i32* %120, i32 1 acq_rel
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %130

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %119, i64 -2
  %125 = bitcast %"class.base::RefCountedThreadSafe"* %124 to %"class.base::RefCountedMemory"*
  %126 = bitcast %"class.base::RefCountedThreadSafe"* %124 to void (%"class.base::RefCountedMemory"*)***
  %127 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %127, i64 3
  %129 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %128, align 8
  call void %129(%"class.base::RefCountedMemory"* nonnull %125) #10
  br label %130

130:                                              ; preds = %114, %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #10
  %131 = load i8, i8* %4, align 1, !range !2
  %132 = icmp ne i8 %131, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  %133 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %130
  %138 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %138) #9
  br label %139

139:                                              ; preds = %130, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #10
  br label %141

140:                                              ; preds = %56
  tail call void @_ZN5crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.crdtp::DeserializerState"* %0, i32 54) #10
  br label %141

141:                                              ; preds = %50, %47, %140, %139
  %142 = phi i1 [ %132, %139 ], [ false, %140 ], [ true, %47 ], [ true, %50 ]
  ret i1 %142
}

declare { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer9GetBinaryEv(%"class.crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5crdtp18ProtocolTypeTraitsIN8headless8protocol6BinaryEvE9SerializeERKS3_PNSt3__16vectorIhNS7_9allocatorIhEEEE(%"class.headless::protocol::Binary"* dereferenceable(16), %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.headless::protocol::Binary"* %0 to void (%"class.headless::protocol::Binary"*, %"class.std::__1::vector"*)***
  %4 = load void (%"class.headless::protocol::Binary"*, %"class.std::__1::vector"*)**, void (%"class.headless::protocol::Binary"*, %"class.std::__1::vector"*)*** %3, align 8
  %5 = load void (%"class.headless::protocol::Binary"*, %"class.std::__1::vector"*)*, void (%"class.headless::protocol::Binary"*, %"class.std::__1::vector"*)** %4, align 8
  tail call void %5(%"class.headless::protocol::Binary"* %0, %"class.std::__1::vector"* %1) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN8headless8protocol9ListValueC1Ev(%"class.headless::protocol::ListValue"*) unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.23"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() local_unnamed_addr #7 comdat {
  tail call void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() #11
  unreachable
}

; Function Attrs: noreturn
declare void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() local_unnamed_addr #8

declare void @_ZN8headless8protocol15DictionaryValueC1Ev(%"class.headless::protocol::DictionaryValue"*) unnamed_addr #2

declare zeroext i1 @_ZN4base6detaileqERKNS0_19const_dict_iteratorES3_(%"class.base::detail::const_dict_iterator"* dereferenceable(8), %"class.base::detail::const_dict_iterator"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.base::flat_map"* @_ZNK4base5Value9DictItemsEv(%"class.base::Value"*) local_unnamed_addr #2

declare void @_ZNK4base6detail25const_dict_iterator_proxy3endEv(%"class.base::detail::const_dict_iterator"* sret, %"class.base::detail::const_dict_iterator_proxy"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base6detail19const_dict_iteratorD1Ev(%"class.base::detail::const_dict_iterator"*) unnamed_addr #3

declare void @_ZNK4base6detail19const_dict_iteratorptEv(%"class.base::detail::const_dict_iterator::pointer"* sret, %"class.base::detail::const_dict_iterator"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.base::detail::const_dict_iterator"* @_ZN4base6detail19const_dict_iteratorppEv(%"class.base::detail::const_dict_iterator"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN8headless8protocol10StringUtil8fromUTF8EPKhm: argument 0"}
!6 = distinct !{!6, !"_ZN8headless8protocol10StringUtil8fromUTF8EPKhm"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN8headless8protocol10StringUtil11fromUTF16LEEPKtm: argument 0"}
!9 = distinct !{!9, !"_ZN8headless8protocol10StringUtil11fromUTF16LEEPKtm"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN8headless8protocol6Binary10fromStringENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE: argument 0"}
!12 = distinct !{!12, !"_ZN8headless8protocol6Binary10fromStringENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN8headless8protocol6Binary8fromSpanEPKhm: argument 0"}
!15 = distinct !{!15, !"_ZN8headless8protocol6Binary8fromSpanEPKhm"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN8headless8protocol10StringUtil8fromUTF8EPKhm: argument 0"}
!18 = distinct !{!18, !"_ZN8headless8protocol10StringUtil8fromUTF8EPKhm"}
