; ModuleID = '../../net/base/scheme_host_port_matcher_rule.cc'
source_filename = "../../net/base/scheme_host_port_matcher_rule.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::SchemeHostPortMatcherHostnamePatternRule" = type <{ %"class.net::SchemeHostPortMatcherRule", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.net::SchemeHostPortMatcherRule" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::SchemeHostPortMatcherIPHostRule" = type <{ %"class.net::SchemeHostPortMatcherRule", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.net::SchemeHostPortMatcherIPBlockRule" = type { %"class.net::SchemeHostPortMatcherRule", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.net::IPAddress", i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.22" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.GURL* }
%"class.std::__1::allocator" = type { i8 }

$_ZN3net25SchemeHostPortMatcherRuleD2Ev = comdat any

$_ZN3net25SchemeHostPortMatcherRuleD0Ev = comdat any

$_ZN3net40SchemeHostPortMatcherHostnamePatternRuleD2Ev = comdat any

$_ZN3net40SchemeHostPortMatcherHostnamePatternRuleD0Ev = comdat any

$_ZN3net31SchemeHostPortMatcherIPHostRuleD2Ev = comdat any

$_ZN3net31SchemeHostPortMatcherIPHostRuleD0Ev = comdat any

$_ZN3net32SchemeHostPortMatcherIPBlockRuleD2Ev = comdat any

$_ZN3net32SchemeHostPortMatcherIPBlockRuleD0Ev = comdat any

@.str = private unnamed_addr constant [4 x i8] c"://\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@_ZTVN3net40SchemeHostPortMatcherHostnamePatternRuleE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::SchemeHostPortMatcherHostnamePatternRule"*)* @_ZN3net40SchemeHostPortMatcherHostnamePatternRuleD2Ev to i8*), i8* bitcast (void (%"class.net::SchemeHostPortMatcherHostnamePatternRule"*)* @_ZN3net40SchemeHostPortMatcherHostnamePatternRuleD0Ev to i8*), i8* bitcast (i32 (%"class.net::SchemeHostPortMatcherHostnamePatternRule"*, %class.GURL*)* @_ZNK3net40SchemeHostPortMatcherHostnamePatternRule8EvaluateERK4GURL to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherHostnamePatternRule"*)* @_ZNK3net40SchemeHostPortMatcherHostnamePatternRule8ToStringEv to i8*), i8* bitcast (i1 (%"class.net::SchemeHostPortMatcherHostnamePatternRule"*)* @_ZNK3net40SchemeHostPortMatcherHostnamePatternRule21IsHostnamePatternRuleEv to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [6 x i8] c"%s://\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c":%d\00", align 1
@_ZTVN3net31SchemeHostPortMatcherIPHostRuleE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::SchemeHostPortMatcherIPHostRule"*)* @_ZN3net31SchemeHostPortMatcherIPHostRuleD2Ev to i8*), i8* bitcast (void (%"class.net::SchemeHostPortMatcherIPHostRule"*)* @_ZN3net31SchemeHostPortMatcherIPHostRuleD0Ev to i8*), i8* bitcast (i32 (%"class.net::SchemeHostPortMatcherIPHostRule"*, %class.GURL*)* @_ZNK3net31SchemeHostPortMatcherIPHostRule8EvaluateERK4GURL to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherIPHostRule"*)* @_ZNK3net31SchemeHostPortMatcherIPHostRule8ToStringEv to i8*), i8* bitcast (i1 (%"class.net::SchemeHostPortMatcherRule"*)* @_ZNK3net25SchemeHostPortMatcherRule21IsHostnamePatternRuleEv to i8*)] }, align 8
@_ZTVN3net32SchemeHostPortMatcherIPBlockRuleE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::SchemeHostPortMatcherIPBlockRule"*)* @_ZN3net32SchemeHostPortMatcherIPBlockRuleD2Ev to i8*), i8* bitcast (void (%"class.net::SchemeHostPortMatcherIPBlockRule"*)* @_ZN3net32SchemeHostPortMatcherIPBlockRuleD0Ev to i8*), i8* bitcast (i32 (%"class.net::SchemeHostPortMatcherIPBlockRule"*, %class.GURL*)* @_ZNK3net32SchemeHostPortMatcherIPBlockRule8EvaluateERK4GURL to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherIPBlockRule"*)* @_ZNK3net32SchemeHostPortMatcherIPBlockRule8ToStringEv to i8*), i8* bitcast (i1 (%"class.net::SchemeHostPortMatcherRule"*)* @_ZNK3net25SchemeHostPortMatcherRule21IsHostnamePatternRuleEv to i8*)] }, align 8
@_ZTVN3net25SchemeHostPortMatcherRuleE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::SchemeHostPortMatcherRule"*)* @_ZN3net25SchemeHostPortMatcherRuleD2Ev to i8*), i8* bitcast (void (%"class.net::SchemeHostPortMatcherRule"*)* @_ZN3net25SchemeHostPortMatcherRuleD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.net::SchemeHostPortMatcherRule"*)* @_ZNK3net25SchemeHostPortMatcherRule21IsHostnamePatternRuleEv to i8*)] }, align 8
@.str.8 = private unnamed_addr constant [5 x i8] c"[%s]\00", align 1

@_ZN3net40SchemeHostPortMatcherHostnamePatternRuleC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_i = hidden unnamed_addr alias void (%"class.net::SchemeHostPortMatcherHostnamePatternRule"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i32), void (%"class.net::SchemeHostPortMatcherHostnamePatternRule"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i32)* @_ZN3net40SchemeHostPortMatcherHostnamePatternRuleC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_i
@_ZN3net31SchemeHostPortMatcherIPHostRuleC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_10IPEndPointE = hidden unnamed_addr alias void (%"class.net::SchemeHostPortMatcherIPHostRule"*, %"class.std::__1::basic_string"*, %"class.net::IPEndPoint"*), void (%"class.net::SchemeHostPortMatcherIPHostRule"*, %"class.std::__1::basic_string"*, %"class.net::IPEndPoint"*)* @_ZN3net31SchemeHostPortMatcherIPHostRuleC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_10IPEndPointE
@_ZN3net32SchemeHostPortMatcherIPBlockRuleC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_RKNS_9IPAddressEm = hidden unnamed_addr alias void (%"class.net::SchemeHostPortMatcherIPBlockRule"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.net::IPAddress"*, i64), void (%"class.net::SchemeHostPortMatcherIPBlockRule"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.net::IPAddress"*, i64)* @_ZN3net32SchemeHostPortMatcherIPBlockRuleC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_RKNS_9IPAddressEm

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::SchemeHostPortMatcherRule"* @_ZN3net25SchemeHostPortMatcherRule22FromUntrimmedRawStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.net::IPAddress", align 1
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.net::IPAddress", align 1
  %12 = alloca %"class.base::BasicStringPiece", align 8
  %13 = alloca %"class.net::IPEndPoint", align 2
  %14 = alloca %"class.base::BasicStringPiece", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %22 = tail call { i8*, i64 } @_ZN4base19TrimWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_13TrimPositionsE(i8* %0, i64 %1, i32 3) #12
  %23 = extractvalue { i8*, i64 } %22, 0
  store i8* %23, i8** %20, align 8
  %24 = extractvalue { i8*, i64 } %22, 1
  store i64 %24, i64* %21, align 8
  %25 = tail call i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %23, i64 %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i64 0) #12
  %26 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #12
  %29 = icmp eq i64 %25, -1
  br i1 %29, label %75, label %30

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %3, i64 0, i64 %25)
  %33 = extractvalue { i8*, i64 } %32, 0
  %34 = extractvalue { i8*, i64 } %32, 1
  %35 = icmp ugt i64 %34, -17
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %37) #13
  unreachable

38:                                               ; preds = %30
  %39 = icmp ult i64 %34, 23
  br i1 %39, label %48, label %40

40:                                               ; preds = %38
  %41 = add nuw i64 %34, 16
  %42 = and i64 %41, -16
  %43 = call i8* @_Znwm(i64 %42) #14
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %43, i8** %44, align 8, !alias.scope !2
  %45 = or i64 %42, -9223372036854775808
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %45, i64* %46, align 8, !alias.scope !2
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %34, i64* %47, align 8, !alias.scope !2
  br label %53

48:                                               ; preds = %38
  %49 = trunc i64 %34 to i8
  %50 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  store i8 %49, i8* %51, align 1, !alias.scope !2
  %52 = icmp eq i64 %34, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %48, %40
  %54 = phi i8* [ %43, %40 ], [ %31, %48 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %54, i8* align 1 %33, i64 %34, i1 false) #12
  br label %55

55:                                               ; preds = %48, %53
  %56 = phi i8* [ %31, %48 ], [ %54, %53 ]
  %57 = getelementptr inbounds i8, i8* %56, i64 %34
  store i8 0, i8* %57, align 1
  %58 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %55
  %63 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %63) #14
  br label %64

64:                                               ; preds = %62, %55
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %31, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  %65 = add i64 %25, 3
  %66 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %3, i64 %65, i64 -1)
  %67 = extractvalue { i8*, i64 } %66, 0
  %68 = extractvalue { i8*, i64 } %66, 1
  store i8* %67, i8** %20, align 8
  store i64 %68, i64* %21, align 8
  %69 = load i8, i8* %59, align 1
  %70 = icmp slt i8 %69, 0
  %71 = load i64, i64* %28, align 8
  %72 = zext i8 %69 to i64
  %73 = select i1 %70, i64 %71, i64 %72
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %328, label %75

75:                                               ; preds = %2, %64
  %76 = phi i8* [ %23, %2 ], [ %67, %64 ]
  %77 = phi i64 [ %24, %2 ], [ %68, %64 ]
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %328, label %79

79:                                               ; preds = %75
  %80 = call i8* @memchr(i8* %76, i32 47, i64 %77) #12
  %81 = icmp eq i8* %80, null
  br i1 %81, label %162, label %82

82:                                               ; preds = %79
  %83 = ptrtoint i8* %80 to i64
  %84 = ptrtoint i8* %76 to i64
  %85 = sub i64 %83, %84
  %86 = icmp eq i64 %85, -1
  br i1 %86, label %162, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %6, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %88) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %88, i8 -86, i64 17, i1 false)
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %6) #12
  %89 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #12
  store i64 -6148914691236517206, i64* %7, align 8
  %90 = load i8*, i8** %20, align 8
  %91 = load i64, i64* %21, align 8
  %92 = call zeroext i1 @_ZN3net14ParseCIDRBlockEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS_9IPAddressEPm(i8* %90, i64 %91, %"class.net::IPAddress"* nonnull %6, i64* nonnull %7) #12
  br i1 %92, label %93, label %160

93:                                               ; preds = %87
  %94 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #12
  %95 = load i8*, i8** %20, align 8, !noalias !5
  %96 = load i64, i64* %21, align 8, !noalias !5
  %97 = icmp ugt i64 %96, -17
  br i1 %97, label %98, label %100

98:                                               ; preds = %93
  %99 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %99) #13
  unreachable

100:                                              ; preds = %93
  %101 = icmp ult i64 %96, 23
  br i1 %101, label %111, label %102

102:                                              ; preds = %100
  %103 = add nuw i64 %96, 16
  %104 = and i64 %103, -16
  %105 = call i8* @_Znwm(i64 %104) #14
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %105, i8** %106, align 8, !alias.scope !5
  %107 = or i64 %104, -9223372036854775808
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %107, i64* %108, align 8, !alias.scope !5
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %96, i64* %109, align 8, !alias.scope !5
  %110 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %116

111:                                              ; preds = %100
  %112 = trunc i64 %96 to i8
  %113 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  store i8 %112, i8* %114, align 1, !alias.scope !5
  %115 = icmp eq i64 %96, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %111, %102
  %117 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %110, %102 ]
  %118 = phi i8* [ %94, %111 ], [ %105, %102 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %118, i8* align 1 %95, i64 %96, i1 false) #12
  br label %119

119:                                              ; preds = %111, %116
  %120 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %113, %111 ], [ %117, %116 ]
  %121 = phi i8* [ %94, %111 ], [ %118, %116 ]
  %122 = getelementptr inbounds i8, i8* %121, i64 %96
  store i8 0, i8* %122, align 1
  %123 = call i8* @_Znwm(i64 88) #14
  %124 = load i64, i64* %7, align 8
  %125 = bitcast i8* %123 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net32SchemeHostPortMatcherIPBlockRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %125, align 8
  %126 = getelementptr inbounds i8, i8* %123, i64 8
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %131, label %130

130:                                              ; preds = %119
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* nonnull align 8 %94, i64 24, i1 false) #12
  br label %137

131:                                              ; preds = %119
  %132 = bitcast i8* %126 to %"class.std::__1::basic_string"*
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %132, i8* %134, i64 %136) #12
  br label %137

137:                                              ; preds = %131, %130
  %138 = getelementptr inbounds i8, i8* %123, i64 32
  %139 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %144, label %143

143:                                              ; preds = %137
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* nonnull align 8 %26, i64 24, i1 false) #12
  br label %148

144:                                              ; preds = %137
  %145 = bitcast i8* %138 to %"class.std::__1::basic_string"*
  %146 = load i8*, i8** %27, align 8
  %147 = load i64, i64* %28, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %145, i8* %146, i64 %147) #12
  br label %148

148:                                              ; preds = %144, %143
  %149 = getelementptr inbounds i8, i8* %123, i64 56
  %150 = bitcast i8* %149 to %"class.net::IPAddress"*
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %150, %"class.net::IPAddress"* nonnull dereferenceable(17) %6) #12
  %151 = getelementptr inbounds i8, i8* %123, i64 80
  %152 = bitcast i8* %151 to i64*
  store i64 %124, i64* %152, align 8
  %153 = ptrtoint i8* %123 to i64
  %154 = load i8, i8* %127, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %148
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  call void @_ZdlPv(i8* %158) #14
  br label %159

159:                                              ; preds = %148, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #12
  br label %160

160:                                              ; preds = %87, %159
  %161 = phi i64 [ %153, %159 ], [ 0, %87 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #12
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %88) #12
  br label %328

162:                                              ; preds = %79, %82
  %163 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #12
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 0, i64 24, i1 false) #12
  %165 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %165) #12
  store i32 -1431655766, i32* %10, align 4
  %166 = call zeroext i1 @_ZN3net16ParseHostAndPortEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEEPi(i8* %76, i64 %77, %"class.std::__1::basic_string"* nonnull %9, i32* nonnull %10) #12
  br i1 %166, label %167, label %193

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %169 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %11, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %169) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %169, i8 -86, i64 17, i1 false)
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %11) #12
  %170 = bitcast %"class.base::BasicStringPiece"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %170) #12
  %171 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 0
  %172 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %174 = load i8, i8* %173, align 1
  %175 = icmp slt i8 %174, 0
  %176 = load i8*, i8** %164, align 8
  %177 = select i1 %175, i8* %176, i8* %163
  store i8* %177, i8** %171, align 8
  %178 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 1
  %179 = load i64, i64* %168, align 8
  %180 = zext i8 %174 to i64
  %181 = select i1 %175, i64 %179, i64 %180
  store i64 %181, i64* %178, align 8
  %182 = call zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"* nonnull %11, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %12) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170) #12
  br i1 %182, label %183, label %192

183:                                              ; preds = %167
  %184 = load i32, i32* %10, align 4
  %185 = icmp eq i32 %184, -1
  %186 = select i1 %185, i32 0, i32 %184
  %187 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %187) #12
  %188 = trunc i32 %186 to i16
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %13, %"class.net::IPAddress"* nonnull dereferenceable(17) %11, i16 zeroext %188) #12
  %189 = call i8* @_Znwm(i64 64) #14
  %190 = bitcast i8* %189 to %"class.net::SchemeHostPortMatcherIPHostRule"*
  call void @_ZN3net31SchemeHostPortMatcherIPHostRuleC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_10IPEndPointE(%"class.net::SchemeHostPortMatcherIPHostRule"* nonnull %190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %13) #12
  %191 = ptrtoint i8* %189 to i64
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %187) #12
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %169) #12
  br label %319

192:                                              ; preds = %167
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %169) #12
  br label %193

193:                                              ; preds = %192, %162
  %194 = load i64, i64* %21, align 8
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %198

196:                                              ; preds = %193
  %197 = load i8*, i8** %20, align 8
  br label %212

198:                                              ; preds = %193
  %199 = add i64 %194, -1
  %200 = load i8*, i8** %20, align 8
  %201 = getelementptr inbounds i8, i8* %200, i64 %199
  %202 = load i8, i8* %201, align 1
  %203 = icmp eq i8 %202, 58
  br i1 %203, label %214, label %204

204:                                              ; preds = %198, %207
  %205 = phi i64 [ %208, %207 ], [ %199, %198 ]
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %212, label %207

207:                                              ; preds = %204
  %208 = add i64 %205, -1
  %209 = getelementptr inbounds i8, i8* %200, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = icmp eq i8 %210, 58
  br i1 %211, label %214, label %204

212:                                              ; preds = %204, %196
  %213 = phi i8* [ %197, %196 ], [ %200, %204 ]
  store i32 -1, i32* %10, align 4
  br label %234

214:                                              ; preds = %207, %198
  %215 = phi i64 [ %199, %198 ], [ %208, %207 ]
  store i32 -1, i32* %10, align 4
  %216 = bitcast %"class.base::BasicStringPiece"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %216) #12
  %217 = getelementptr inbounds i8, i8* %200, i64 %215
  %218 = getelementptr inbounds i8, i8* %217, i64 1
  %219 = getelementptr inbounds i8, i8* %200, i64 %194
  %220 = ptrtoint i8* %219 to i64
  %221 = ptrtoint i8* %218 to i64
  %222 = sub i64 %220, %221
  %223 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %14, i64 0, i32 0
  store i8* %218, i8** %223, align 8
  %224 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %14, i64 0, i32 1
  store i64 %222, i64* %224, align 8
  %225 = call zeroext i1 @_ZN3net10ParseInt32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_14ParseIntFormatEPiPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %14, i32 0, i32* nonnull %10, i32* null) #12
  %226 = load i32, i32* %10, align 4
  %227 = icmp sgt i32 %226, 65535
  %228 = xor i1 %225, true
  %229 = or i1 %227, %228
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %216) #12
  br i1 %229, label %319, label %230

230:                                              ; preds = %214
  %231 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %3, i64 0, i64 %215)
  %232 = extractvalue { i8*, i64 } %231, 0
  %233 = extractvalue { i8*, i64 } %231, 1
  store i8* %232, i8** %20, align 8
  store i64 %233, i64* %21, align 8
  br label %234

234:                                              ; preds = %212, %230
  %235 = phi i64 [ %194, %212 ], [ %233, %230 ]
  %236 = phi i8* [ %213, %212 ], [ %232, %230 ]
  %237 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %237) #12
  %238 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %237, i8 0, i64 24, i1 false) #12
  %240 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %236, i64 %235, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1, i32 0) #12
  br i1 %240, label %241, label %256

241:                                              ; preds = %234
  %242 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %242) #12
  %243 = bitcast [2 x %"class.base::BasicStringPiece"]* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %243) #12
  %244 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %17, i64 0, i64 0
  %245 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %17, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %245, align 8
  %246 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %17, i64 0, i64 0, i32 1
  store i64 1, i64* %246, align 8
  %247 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %17, i64 0, i64 1
  %248 = bitcast %"class.base::BasicStringPiece"* %247 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %248, i8* nonnull align 8 %19, i64 16, i1 false)
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %16, i64 2, %"class.base::BasicStringPiece"* nonnull %244) #12
  %249 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %249, i64 0, i32 1, i32 0
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %255

253:                                              ; preds = %241
  %254 = load i8*, i8** %238, align 8
  call void @_ZdlPv(i8* %254) #14
  br label %255

255:                                              ; preds = %253, %241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %237, i8* nonnull align 8 %242, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %243) #12
  br label %284

256:                                              ; preds = %234
  %257 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #12
  %258 = load i8*, i8** %20, align 8, !noalias !8
  %259 = load i64, i64* %21, align 8, !noalias !8
  %260 = icmp ugt i64 %259, -17
  br i1 %260, label %261, label %263

261:                                              ; preds = %256
  %262 = bitcast %"class.std::__1::basic_string"* %18 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %262) #13
  unreachable

263:                                              ; preds = %256
  %264 = icmp ult i64 %259, 23
  br i1 %264, label %273, label %265

265:                                              ; preds = %263
  %266 = add nuw i64 %259, 16
  %267 = and i64 %266, -16
  %268 = call i8* @_Znwm(i64 %267) #14
  %269 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %268, i8** %269, align 8, !alias.scope !8
  %270 = or i64 %267, -9223372036854775808
  %271 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %270, i64* %271, align 8, !alias.scope !8
  %272 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %259, i64* %272, align 8, !alias.scope !8
  br label %278

273:                                              ; preds = %263
  %274 = trunc i64 %259 to i8
  %275 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %276 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %275, i64 0, i32 1, i32 0
  store i8 %274, i8* %276, align 1, !alias.scope !8
  %277 = icmp eq i64 %259, 0
  br i1 %277, label %280, label %278

278:                                              ; preds = %273, %265
  %279 = phi i8* [ %268, %265 ], [ %257, %273 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %279, i8* align 1 %258, i64 %259, i1 false) #12
  br label %280

280:                                              ; preds = %278, %273
  %281 = phi i8* [ %257, %273 ], [ %279, %278 ]
  %282 = getelementptr inbounds i8, i8* %281, i64 %259
  store i8 0, i8* %282, align 1
  %283 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %237, i8* nonnull align 8 %257, i64 24, i1 false) #12
  br label %284

284:                                              ; preds = %255, %280
  %285 = phi i8* [ %242, %255 ], [ %257, %280 ]
  %286 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %249, %255 ], [ %283, %280 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %285) #12
  %287 = call i8* @_Znwm(i64 64) #14
  %288 = load i32, i32* %10, align 4
  %289 = bitcast i8* %287 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net40SchemeHostPortMatcherHostnamePatternRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %289, align 8
  %290 = getelementptr inbounds i8, i8* %287, i64 8
  %291 = bitcast i8* %290 to %"class.std::__1::basic_string"*
  %292 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %293 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %292, i64 0, i32 1, i32 0
  %294 = load i8, i8* %293, align 1
  %295 = icmp slt i8 %294, 0
  %296 = load i8*, i8** %27, align 8
  %297 = select i1 %295, i8* %296, i8* %26
  %298 = load i64, i64* %28, align 8
  %299 = zext i8 %294 to i64
  %300 = select i1 %295, i64 %298, i64 %299
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %291, i8* %297, i64 %300) #12
  %301 = getelementptr inbounds i8, i8* %287, i64 32
  %302 = bitcast i8* %301 to %"class.std::__1::basic_string"*
  %303 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %286, i64 0, i32 1, i32 0
  %304 = load i8, i8* %303, align 1
  %305 = icmp slt i8 %304, 0
  %306 = load i8*, i8** %238, align 8
  %307 = select i1 %305, i8* %306, i8* %237
  %308 = load i64, i64* %239, align 8
  %309 = zext i8 %304 to i64
  %310 = select i1 %305, i64 %308, i64 %309
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %302, i8* %307, i64 %310) #12
  %311 = getelementptr inbounds i8, i8* %287, i64 56
  %312 = bitcast i8* %311 to i32*
  store i32 %288, i32* %312, align 8
  %313 = ptrtoint i8* %287 to i64
  %314 = load i8, i8* %303, align 1
  %315 = icmp slt i8 %314, 0
  br i1 %315, label %316, label %318

316:                                              ; preds = %284
  %317 = load i8*, i8** %238, align 8
  call void @_ZdlPv(i8* %317) #14
  br label %318

318:                                              ; preds = %284, %316
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %237) #12
  br label %319

319:                                              ; preds = %214, %318, %183
  %320 = phi i64 [ %191, %183 ], [ %313, %318 ], [ 0, %214 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #12
  %321 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %322 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %321, i64 0, i32 1, i32 0
  %323 = load i8, i8* %322, align 1
  %324 = icmp slt i8 %323, 0
  br i1 %324, label %325, label %327

325:                                              ; preds = %319
  %326 = load i8*, i8** %164, align 8
  call void @_ZdlPv(i8* %326) #14
  br label %327

327:                                              ; preds = %319, %325
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #12
  br label %328

328:                                              ; preds = %75, %64, %327, %160
  %329 = phi i64 [ %320, %327 ], [ %161, %160 ], [ 0, %64 ], [ 0, %75 ]
  %330 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %331 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %330, i64 0, i32 1, i32 0
  %332 = load i8, i8* %331, align 1
  %333 = icmp slt i8 %332, 0
  br i1 %333, label %334, label %336

334:                                              ; preds = %328
  %335 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %335) #14
  br label %336

336:                                              ; preds = %328, %334
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  %337 = inttoptr i64 %329 to %"class.net::SchemeHostPortMatcherRule"*
  ret %"class.net::SchemeHostPortMatcherRule"* %337
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare { i8*, i64 } @_ZN4base19TrimWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_13TrimPositionsE(i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"*) unnamed_addr #2

declare zeroext i1 @_ZN3net14ParseCIDRBlockEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS_9IPAddressEPm(i8*, i64, %"class.net::IPAddress"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

declare zeroext i1 @_ZN3net16ParseHostAndPortEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEEPi(i8*, i64, %"class.std::__1::basic_string"*, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"*, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #3

declare zeroext i1 @_ZN3net10ParseInt32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_14ParseIntFormatEPiPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* dereferenceable(16), i32, i32*, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3net25SchemeHostPortMatcherRule21IsHostnamePatternRuleEv(%"class.net::SchemeHostPortMatcherRule"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net40SchemeHostPortMatcherHostnamePatternRuleC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_i(%"class.net::SchemeHostPortMatcherHostnamePatternRule"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net40SchemeHostPortMatcherHostnamePatternRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %9 to i64
  %18 = select i1 %10, i64 %16, i64 %17
  tail call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %6, i8* %14, i64 %18) #12
  %19 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 2
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %22 to i64
  %31 = select i1 %23, i64 %29, i64 %30
  tail call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %19, i8* %27, i64 %31) #12
  %32 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 3
  store i32 %3, i32* %32, align 8
  ret void
}

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net40SchemeHostPortMatcherHostnamePatternRule8EvaluateERK4GURL(%"class.net::SchemeHostPortMatcherHostnamePatternRule"*, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::allocator", align 1
  %4 = alloca %"class.std::__1::allocator", align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = tail call i32 @_ZNK4GURL16EffectiveIntPortEv(%class.GURL* %1) #12
  %12 = load i32, i32* %7, align 8
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %155

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  br label %25

23:                                               ; preds = %14
  %24 = zext i8 %18 to i64
  br label %25

25:                                               ; preds = %20, %23
  %26 = phi i64 [ %22, %20 ], [ %24, %23 ]
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %103, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %30 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 1
  %31 = load i32, i32* %30, align 4, !noalias !11
  %32 = icmp slt i32 %31, 1
  br i1 %32, label %33, label %34

33:                                               ; preds = %28
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #12, !alias.scope !11
  br label %47

34:                                               ; preds = %28
  %35 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %36 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 0
  %37 = load i32, i32* %36, align 4, !noalias !11
  %38 = sext i32 %37 to i64
  %39 = sext i32 %31 to i64
  %40 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %40) #12, !noalias !11
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %35, i64 %38, i64 %39, %"class.std::__1::allocator"* nonnull dereferenceable(1) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %40) #12, !noalias !11
  %41 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = load i8, i8* %17, align 1
  br label %47

47:                                               ; preds = %33, %34
  %48 = phi i8 [ %18, %33 ], [ %46, %34 ]
  %49 = phi i64 [ 0, %33 ], [ %45, %34 ]
  %50 = phi i8 [ 0, %33 ], [ %43, %34 ]
  %51 = icmp slt i8 %50, 0
  %52 = zext i8 %50 to i64
  %53 = select i1 %51, i64 %49, i64 %52
  %54 = icmp slt i8 %48, 0
  %55 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %48 to i64
  %58 = select i1 %54, i64 %56, i64 %57
  %59 = icmp eq i64 %53, %58
  br i1 %59, label %60, label %93

60:                                               ; preds = %47
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = select i1 %51, i8* %62, i8* %29
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %67 = select i1 %54, i8* %65, i8* %66
  %68 = icmp eq i64 %53, 0
  br i1 %51, label %76, label %69

69:                                               ; preds = %60
  br i1 %68, label %92, label %70

70:                                               ; preds = %69
  %71 = ptrtoint i8* %62 to i64
  %72 = trunc i64 %71 to i8
  %73 = load i8, i8* %67, align 1
  %74 = icmp eq i8 %73, %72
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br label %155

76:                                               ; preds = %60
  br i1 %68, label %100, label %77

77:                                               ; preds = %76
  %78 = call i32 @bcmp(i8* %63, i8* %67, i64 %53) #12
  %79 = icmp ne i32 %78, 0
  br label %95

80:                                               ; preds = %70, %87
  %81 = phi i64 [ %84, %87 ], [ %52, %70 ]
  %82 = phi i8* [ %85, %87 ], [ %29, %70 ]
  %83 = phi i8* [ %88, %87 ], [ %67, %70 ]
  %84 = add i64 %81, -1
  %85 = getelementptr inbounds i8, i8* %82, i64 1
  %86 = icmp eq i64 %84, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds i8, i8* %83, i64 1
  %89 = load i8, i8* %85, align 1
  %90 = load i8, i8* %88, align 1
  %91 = icmp eq i8 %89, %90
  br i1 %91, label %80, label %93

92:                                               ; preds = %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br label %103

93:                                               ; preds = %80, %87, %47
  %94 = phi i1 [ true, %47 ], [ false, %80 ], [ true, %87 ]
  br i1 %51, label %95, label %99

95:                                               ; preds = %77, %93
  %96 = phi i1 [ %94, %93 ], [ %79, %77 ]
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br i1 %96, label %155, label %103

99:                                               ; preds = %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br i1 %94, label %155, label %103

100:                                              ; preds = %76
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br label %103

103:                                              ; preds = %100, %92, %95, %25, %99
  %104 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #12
  %105 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 1
  %106 = load i32, i32* %105, align 4, !noalias !16
  %107 = icmp slt i32 %106, 1
  br i1 %107, label %108, label %110

108:                                              ; preds = %103
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 0, i64 24, i1 false) #12, !alias.scope !16
  %109 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %124

110:                                              ; preds = %103
  %111 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %112 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 0
  %113 = load i32, i32* %112, align 4, !noalias !16
  %114 = sext i32 %113 to i64
  %115 = sext i32 %106 to i64
  %116 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %116) #12, !noalias !16
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %111, i64 %114, i64 %115, %"class.std::__1::allocator"* nonnull dereferenceable(1) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %116) #12, !noalias !16
  %117 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  br label %124

124:                                              ; preds = %108, %110
  %125 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %109, %108 ], [ %117, %110 ]
  %126 = phi i64 [ 0, %108 ], [ %123, %110 ]
  %127 = phi i8* [ null, %108 ], [ %121, %110 ]
  %128 = phi i8 [ 0, %108 ], [ %119, %110 ]
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %130 = icmp slt i8 %128, 0
  %131 = select i1 %130, i8* %127, i8* %104
  %132 = zext i8 %128 to i64
  %133 = select i1 %130, i64 %126, i64 %132
  %134 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 2
  %135 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  %142 = select i1 %138, i8* %140, i8* %141
  %143 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = zext i8 %137 to i64
  %146 = select i1 %138, i64 %144, i64 %145
  %147 = call zeroext i1 @_ZN4base12MatchPatternENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %131, i64 %133, i8* %142, i64 %146) #12
  %148 = zext i1 %147 to i32
  %149 = load i8, i8* %129, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %124
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #14
  br label %154

154:                                              ; preds = %124, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #12
  br label %155

155:                                              ; preds = %75, %95, %99, %10, %154
  %156 = phi i32 [ %148, %154 ], [ 0, %10 ], [ 0, %99 ], [ 0, %95 ], [ 0, %75 ]
  ret i32 %156
}

declare i32 @_ZNK4GURL16EffectiveIntPortEv(%class.GURL*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base12MatchPatternENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net40SchemeHostPortMatcherHostnamePatternRule8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::SchemeHostPortMatcherHostnamePatternRule"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #12
  %4 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %1, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %2
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %14
  br i1 %8, label %18, label %21

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  br label %23

21:                                               ; preds = %17
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i8* [ %20, %18 ], [ %22, %21 ]
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* %24) #12
  br label %25

25:                                               ; preds = %23, %14
  %26 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %1, i64 0, i32 2
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %36 = zext i8 %29 to i64
  %37 = select i1 %30, i8* %32, i8* %35
  %38 = select i1 %30, i64 %34, i64 %36
  %39 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %37, i64 %38) #12
  %40 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %1, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %44, label %43

43:                                               ; preds = %25
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i32 %41) #12
  br label %44

44:                                               ; preds = %43, %25
  ret void
}

declare void @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3net40SchemeHostPortMatcherHostnamePatternRule21IsHostnamePatternRuleEv(%"class.net::SchemeHostPortMatcherHostnamePatternRule"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.net::SchemeHostPortMatcherHostnamePatternRule"* @_ZNK3net40SchemeHostPortMatcherHostnamePatternRule26GenerateSuffixMatchingRuleEv(%"class.net::SchemeHostPortMatcherHostnamePatternRule"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %11 = select i1 %7, i8* %9, i8* %10
  %12 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  %16 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %11, i64 %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1, i32 0) #12
  %17 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 1
  br i1 %16, label %58, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %3) #12
  %20 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 3
  %21 = call i8* @_Znwm(i64 64) #14
  %22 = load i32, i32* %20, align 4
  %23 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net40SchemeHostPortMatcherHostnamePatternRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %21, i64 8
  %25 = bitcast i8* %24 to %"class.std::__1::basic_string"*
  %26 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %33 = select i1 %29, i8* %31, i8* %32
  %34 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %28 to i64
  %37 = select i1 %29, i64 %35, i64 %36
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %25, i8* %33, i64 %37) #12
  %38 = getelementptr inbounds i8, i8* %21, i64 32
  %39 = bitcast i8* %38 to %"class.std::__1::basic_string"*
  %40 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = select i1 %43, i8* %45, i8* %19
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = zext i8 %42 to i64
  %50 = select i1 %43, i64 %48, i64 %49
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %39, i8* %46, i64 %50) #12
  %51 = getelementptr inbounds i8, i8* %21, i64 56
  %52 = bitcast i8* %51 to i32*
  store i32 %22, i32* %52, align 8
  %53 = load i8, i8* %41, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %18
  %56 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %56) #14
  br label %57

57:                                               ; preds = %18, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  br label %88

58:                                               ; preds = %1
  %59 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 3
  %60 = tail call i8* @_Znwm(i64 64) #14
  %61 = load i32, i32* %59, align 4
  %62 = bitcast i8* %60 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net40SchemeHostPortMatcherHostnamePatternRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = getelementptr inbounds i8, i8* %60, i64 8
  %64 = bitcast i8* %63 to %"class.std::__1::basic_string"*
  %65 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %72 = select i1 %68, i8* %70, i8* %71
  %73 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = zext i8 %67 to i64
  %76 = select i1 %68, i64 %74, i64 %75
  tail call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %64, i8* %72, i64 %76) #12
  %77 = getelementptr inbounds i8, i8* %60, i64 32
  %78 = bitcast i8* %77 to %"class.std::__1::basic_string"*
  %79 = load i8, i8* %5, align 1
  %80 = icmp slt i8 %79, 0
  %81 = load i8*, i8** %8, align 8
  %82 = select i1 %80, i8* %81, i8* %10
  %83 = load i64, i64* %12, align 8
  %84 = zext i8 %79 to i64
  %85 = select i1 %80, i64 %83, i64 %84
  tail call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %78, i8* %82, i64 %85) #12
  %86 = getelementptr inbounds i8, i8* %60, i64 56
  %87 = bitcast i8* %86 to i32*
  store i32 %61, i32* %87, align 8
  br label %88

88:                                               ; preds = %58, %57
  %89 = phi i8* [ %21, %57 ], [ %60, %58 ]
  %90 = bitcast i8* %89 to %"class.net::SchemeHostPortMatcherHostnamePatternRule"*
  ret %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %90
}

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net31SchemeHostPortMatcherIPHostRuleC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_10IPEndPointE(%"class.net::SchemeHostPortMatcherIPHostRule"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net31SchemeHostPortMatcherIPHostRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %9 to i64
  %18 = select i1 %10, i64 %16, i64 %17
  tail call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %6, i8* %14, i64 %18) #12
  %19 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %2, i64 0, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12, !noalias !21
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false) #12, !noalias !21
  call void @_ZNK3net9IPAddress8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.net::IPAddress"* %20) #12, !noalias !21
  %23 = call zeroext i1 @_ZNK3net9IPAddress6IsIPv6Ev(%"class.net::IPAddress"* %20) #12, !noalias !21
  br i1 %23, label %26, label %24

24:                                               ; preds = %3
  %25 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* nonnull align 8 %21, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #12, !noalias !21
  br label %37

26:                                               ; preds = %3
  %27 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1, !noalias !21
  %30 = icmp slt i8 %29, 0
  %31 = load i8*, i8** %22, align 8, !noalias !21
  %32 = select i1 %30, i8* %31, i8* %21
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* %32) #12
  %33 = load i8, i8* %28, align 1, !noalias !21
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %26
  %36 = load i8*, i8** %22, align 8, !noalias !21
  call void @_ZdlPv(i8* %36) #14
  br label %37

37:                                               ; preds = %24, %26, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12, !noalias !21
  %38 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 3
  %39 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %2, i64 0, i32 1
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  store i32 %41, i32* %38, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net31SchemeHostPortMatcherIPHostRule8EvaluateERK4GURL(%"class.net::SchemeHostPortMatcherIPHostRule"*, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::allocator", align 1
  %4 = alloca %"class.std::__1::allocator", align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = tail call i32 @_ZNK4GURL16EffectiveIntPortEv(%class.GURL* %1) #12
  %12 = load i32, i32* %7, align 8
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %155

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  br label %25

23:                                               ; preds = %14
  %24 = zext i8 %18 to i64
  br label %25

25:                                               ; preds = %20, %23
  %26 = phi i64 [ %22, %20 ], [ %24, %23 ]
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %103, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %30 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 1
  %31 = load i32, i32* %30, align 4, !noalias !24
  %32 = icmp slt i32 %31, 1
  br i1 %32, label %33, label %34

33:                                               ; preds = %28
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #12, !alias.scope !24
  br label %47

34:                                               ; preds = %28
  %35 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %36 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 0
  %37 = load i32, i32* %36, align 4, !noalias !24
  %38 = sext i32 %37 to i64
  %39 = sext i32 %31 to i64
  %40 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %40) #12, !noalias !24
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %35, i64 %38, i64 %39, %"class.std::__1::allocator"* nonnull dereferenceable(1) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %40) #12, !noalias !24
  %41 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = load i8, i8* %17, align 1
  br label %47

47:                                               ; preds = %33, %34
  %48 = phi i8 [ %18, %33 ], [ %46, %34 ]
  %49 = phi i64 [ 0, %33 ], [ %45, %34 ]
  %50 = phi i8 [ 0, %33 ], [ %43, %34 ]
  %51 = icmp slt i8 %50, 0
  %52 = zext i8 %50 to i64
  %53 = select i1 %51, i64 %49, i64 %52
  %54 = icmp slt i8 %48, 0
  %55 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %48 to i64
  %58 = select i1 %54, i64 %56, i64 %57
  %59 = icmp eq i64 %53, %58
  br i1 %59, label %60, label %93

60:                                               ; preds = %47
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = select i1 %51, i8* %62, i8* %29
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %67 = select i1 %54, i8* %65, i8* %66
  %68 = icmp eq i64 %53, 0
  br i1 %51, label %76, label %69

69:                                               ; preds = %60
  br i1 %68, label %92, label %70

70:                                               ; preds = %69
  %71 = ptrtoint i8* %62 to i64
  %72 = trunc i64 %71 to i8
  %73 = load i8, i8* %67, align 1
  %74 = icmp eq i8 %73, %72
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br label %155

76:                                               ; preds = %60
  br i1 %68, label %100, label %77

77:                                               ; preds = %76
  %78 = call i32 @bcmp(i8* %63, i8* %67, i64 %53) #12
  %79 = icmp ne i32 %78, 0
  br label %95

80:                                               ; preds = %70, %87
  %81 = phi i64 [ %84, %87 ], [ %52, %70 ]
  %82 = phi i8* [ %85, %87 ], [ %29, %70 ]
  %83 = phi i8* [ %88, %87 ], [ %67, %70 ]
  %84 = add i64 %81, -1
  %85 = getelementptr inbounds i8, i8* %82, i64 1
  %86 = icmp eq i64 %84, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds i8, i8* %83, i64 1
  %89 = load i8, i8* %85, align 1
  %90 = load i8, i8* %88, align 1
  %91 = icmp eq i8 %89, %90
  br i1 %91, label %80, label %93

92:                                               ; preds = %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br label %103

93:                                               ; preds = %80, %87, %47
  %94 = phi i1 [ true, %47 ], [ false, %80 ], [ true, %87 ]
  br i1 %51, label %95, label %99

95:                                               ; preds = %77, %93
  %96 = phi i1 [ %94, %93 ], [ %79, %77 ]
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br i1 %96, label %155, label %103

99:                                               ; preds = %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br i1 %94, label %155, label %103

100:                                              ; preds = %76
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br label %103

103:                                              ; preds = %100, %92, %95, %25, %99
  %104 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #12
  %105 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 1
  %106 = load i32, i32* %105, align 4, !noalias !29
  %107 = icmp slt i32 %106, 1
  br i1 %107, label %108, label %110

108:                                              ; preds = %103
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 0, i64 24, i1 false) #12, !alias.scope !29
  %109 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %124

110:                                              ; preds = %103
  %111 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %112 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 0
  %113 = load i32, i32* %112, align 4, !noalias !29
  %114 = sext i32 %113 to i64
  %115 = sext i32 %106 to i64
  %116 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %116) #12, !noalias !29
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %111, i64 %114, i64 %115, %"class.std::__1::allocator"* nonnull dereferenceable(1) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %116) #12, !noalias !29
  %117 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  br label %124

124:                                              ; preds = %108, %110
  %125 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %109, %108 ], [ %117, %110 ]
  %126 = phi i64 [ 0, %108 ], [ %123, %110 ]
  %127 = phi i8* [ null, %108 ], [ %121, %110 ]
  %128 = phi i8 [ 0, %108 ], [ %119, %110 ]
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %130 = icmp slt i8 %128, 0
  %131 = select i1 %130, i8* %127, i8* %104
  %132 = zext i8 %128 to i64
  %133 = select i1 %130, i64 %126, i64 %132
  %134 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 2
  %135 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  %142 = select i1 %138, i8* %140, i8* %141
  %143 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = zext i8 %137 to i64
  %146 = select i1 %138, i64 %144, i64 %145
  %147 = call zeroext i1 @_ZN4base12MatchPatternENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %131, i64 %133, i8* %142, i64 %146) #12
  %148 = zext i1 %147 to i32
  %149 = load i8, i8* %129, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %124
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #14
  br label %154

154:                                              ; preds = %124, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #12
  br label %155

155:                                              ; preds = %75, %95, %99, %10, %154
  %156 = phi i32 [ %148, %154 ], [ 0, %10 ], [ 0, %99 ], [ 0, %95 ], [ 0, %75 ]
  ret i32 %156
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net31SchemeHostPortMatcherIPHostRule8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::SchemeHostPortMatcherIPHostRule"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #12
  %4 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %1, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %2
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %14
  br i1 %8, label %18, label %21

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  br label %23

21:                                               ; preds = %17
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i8* [ %20, %18 ], [ %22, %21 ]
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* %24) #12
  br label %25

25:                                               ; preds = %23, %14
  %26 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %1, i64 0, i32 2
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %36 = zext i8 %29 to i64
  %37 = select i1 %30, i8* %32, i8* %35
  %38 = select i1 %30, i64 %34, i64 %36
  %39 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %37, i64 %38) #12
  %40 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %1, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %25
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i32 %41) #12
  br label %44

44:                                               ; preds = %43, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net32SchemeHostPortMatcherIPBlockRuleC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_RKNS_9IPAddressEm(%"class.net::SchemeHostPortMatcherIPBlockRule"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.net::IPAddress"* dereferenceable(17), i64) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net32SchemeHostPortMatcherIPBlockRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #12
  br label %20

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %7, i8* %17, i64 %19) #12
  br label %20

20:                                               ; preds = %12, %15
  %21 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #12
  br label %34

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %31, i64 %33) #12
  br label %34

34:                                               ; preds = %26, %29
  %35 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 3
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %35, %"class.net::IPAddress"* dereferenceable(17) %3) #12
  %36 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 4
  store i64 %4, i64* %36, align 8
  ret void
}

declare void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net32SchemeHostPortMatcherIPBlockRule8EvaluateERK4GURL(%"class.net::SchemeHostPortMatcherIPBlockRule"*, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::allocator", align 1
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.net::IPAddress", align 1
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = tail call zeroext i1 @_ZNK4GURL15HostIsIPAddressEv(%class.GURL* %1) #12
  br i1 %7, label %8, label %114

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  br label %19

17:                                               ; preds = %8
  %18 = zext i8 %12 to i64
  br label %19

19:                                               ; preds = %14, %17
  %20 = phi i64 [ %16, %14 ], [ %18, %17 ]
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %97, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12
  %24 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 1
  %25 = load i32, i32* %24, align 4, !noalias !34
  %26 = icmp slt i32 %25, 1
  br i1 %26, label %27, label %28

27:                                               ; preds = %22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #12, !alias.scope !34
  br label %41

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %30 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 0
  %31 = load i32, i32* %30, align 4, !noalias !34
  %32 = sext i32 %31 to i64
  %33 = sext i32 %25 to i64
  %34 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #12, !noalias !34
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %29, i64 %32, i64 %33, %"class.std::__1::allocator"* nonnull dereferenceable(1) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #12, !noalias !34
  %35 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = load i8, i8* %11, align 1
  br label %41

41:                                               ; preds = %27, %28
  %42 = phi i8 [ %12, %27 ], [ %40, %28 ]
  %43 = phi i64 [ 0, %27 ], [ %39, %28 ]
  %44 = phi i8 [ 0, %27 ], [ %37, %28 ]
  %45 = icmp slt i8 %44, 0
  %46 = zext i8 %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  %48 = icmp slt i8 %42, 0
  %49 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = zext i8 %42 to i64
  %52 = select i1 %48, i64 %50, i64 %51
  %53 = icmp eq i64 %47, %52
  br i1 %53, label %54, label %87

54:                                               ; preds = %41
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = select i1 %45, i8* %56, i8* %23
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %61 = select i1 %48, i8* %59, i8* %60
  %62 = icmp eq i64 %47, 0
  br i1 %45, label %70, label %63

63:                                               ; preds = %54
  br i1 %62, label %86, label %64

64:                                               ; preds = %63
  %65 = ptrtoint i8* %56 to i64
  %66 = trunc i64 %65 to i8
  %67 = load i8, i8* %61, align 1
  %68 = icmp eq i8 %67, %66
  br i1 %68, label %74, label %69

69:                                               ; preds = %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  br label %114

70:                                               ; preds = %54
  br i1 %62, label %94, label %71

71:                                               ; preds = %70
  %72 = call i32 @bcmp(i8* %57, i8* %61, i64 %47) #12
  %73 = icmp ne i32 %72, 0
  br label %89

74:                                               ; preds = %64, %81
  %75 = phi i64 [ %78, %81 ], [ %46, %64 ]
  %76 = phi i8* [ %79, %81 ], [ %23, %64 ]
  %77 = phi i8* [ %82, %81 ], [ %61, %64 ]
  %78 = add i64 %75, -1
  %79 = getelementptr inbounds i8, i8* %76, i64 1
  %80 = icmp eq i64 %78, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds i8, i8* %77, i64 1
  %83 = load i8, i8* %79, align 1
  %84 = load i8, i8* %82, align 1
  %85 = icmp eq i8 %83, %84
  br i1 %85, label %74, label %87

86:                                               ; preds = %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  br label %97

87:                                               ; preds = %74, %81, %41
  %88 = phi i1 [ true, %41 ], [ false, %74 ], [ true, %81 ]
  br i1 %45, label %89, label %93

89:                                               ; preds = %71, %87
  %90 = phi i1 [ %88, %87 ], [ %73, %71 ]
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %92) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  br i1 %90, label %114, label %97

93:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  br i1 %88, label %114, label %97

94:                                               ; preds = %70
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %96) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  br label %97

97:                                               ; preds = %94, %86, %89, %19, %93
  %98 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %5, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %98) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %98, i8 -86, i64 17, i1 false)
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %5) #12
  %99 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #12
  %100 = call { i8*, i64 } @_ZNK4GURL19HostNoBracketsPieceEv(%class.GURL* %1) #12
  %101 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %102 = extractvalue { i8*, i64 } %100, 0
  store i8* %102, i8** %101, align 8
  %103 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %104 = extractvalue { i8*, i64 } %100, 1
  store i64 %104, i64* %103, align 8
  %105 = call zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"* nonnull %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #12
  br i1 %105, label %106, label %112

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 3
  %108 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 4
  %109 = load i64, i64* %108, align 8
  %110 = call zeroext i1 @_ZN3net22IPAddressMatchesPrefixERKNS_9IPAddressES2_m(%"class.net::IPAddress"* nonnull dereferenceable(17) %5, %"class.net::IPAddress"* dereferenceable(17) %107, i64 %109) #12
  %111 = zext i1 %110 to i32
  br label %112

112:                                              ; preds = %97, %106
  %113 = phi i32 [ %111, %106 ], [ 0, %97 ]
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %98) #12
  br label %114

114:                                              ; preds = %69, %89, %93, %2, %112
  %115 = phi i32 [ %113, %112 ], [ 0, %2 ], [ 0, %93 ], [ 0, %89 ], [ 0, %69 ]
  ret i32 %115
}

declare zeroext i1 @_ZNK4GURL15HostIsIPAddressEv(%class.GURL*) local_unnamed_addr #2

declare { i8*, i64 } @_ZNK4GURL19HostNoBracketsPieceEv(%class.GURL*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net22IPAddressMatchesPrefixERKNS_9IPAddressES2_m(%"class.net::IPAddress"* dereferenceable(17), %"class.net::IPAddress"* dereferenceable(17), i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net32SchemeHostPortMatcherIPBlockRule8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::SchemeHostPortMatcherIPBlockRule"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %1, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #12
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %13, i64 %15) #12
  br label %16

16:                                               ; preds = %8, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net25SchemeHostPortMatcherRuleD2Ev(%"class.net::SchemeHostPortMatcherRule"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net25SchemeHostPortMatcherRuleD0Ev(%"class.net::SchemeHostPortMatcherRule"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net40SchemeHostPortMatcherHostnamePatternRuleD2Ev(%"class.net::SchemeHostPortMatcherHostnamePatternRule"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net40SchemeHostPortMatcherHostnamePatternRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %11, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net40SchemeHostPortMatcherHostnamePatternRuleD0Ev(%"class.net::SchemeHostPortMatcherHostnamePatternRule"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net40SchemeHostPortMatcherHostnamePatternRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.net::SchemeHostPortMatcherHostnamePatternRule", %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %"class.net::SchemeHostPortMatcherHostnamePatternRule"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net31SchemeHostPortMatcherIPHostRuleD2Ev(%"class.net::SchemeHostPortMatcherIPHostRule"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net31SchemeHostPortMatcherIPHostRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %11, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net31SchemeHostPortMatcherIPHostRuleD0Ev(%"class.net::SchemeHostPortMatcherIPHostRule"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net31SchemeHostPortMatcherIPHostRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPHostRule", %"class.net::SchemeHostPortMatcherIPHostRule"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %"class.net::SchemeHostPortMatcherIPHostRule"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net32SchemeHostPortMatcherIPBlockRuleD2Ev(%"class.net::SchemeHostPortMatcherIPBlockRule"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net32SchemeHostPortMatcherIPBlockRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 3
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %3) #12
  %4 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %12, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net32SchemeHostPortMatcherIPBlockRuleD0Ev(%"class.net::SchemeHostPortMatcherIPBlockRule"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net32SchemeHostPortMatcherIPBlockRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 3
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %3) #12
  %4 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #14
  br label %12

12:                                               ; preds = %9, %1
  %13 = getelementptr inbounds %"class.net::SchemeHostPortMatcherIPBlockRule", %"class.net::SchemeHostPortMatcherIPBlockRule"* %0, i64 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %12, %18
  %22 = bitcast %"class.net::SchemeHostPortMatcherIPBlockRule"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #14
  ret void
}

declare i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8*, i64, i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #6

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

declare void @_ZNK3net9IPAddress8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.net::IPAddress"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net9IPAddress6IsIPv6Ev(%"class.net::IPAddress"*) local_unnamed_addr #2

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!13 = distinct !{!13, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!14 = distinct !{!14, !15, !"_ZNK4GURL6schemeEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4GURL6schemeEv"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!18 = distinct !{!18, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!19 = distinct !{!19, !20, !"_ZNK4GURL4hostEv: argument 0"}
!20 = distinct !{!20, !"_ZNK4GURL4hostEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3net12_GLOBAL__N_117AddBracketsIfIPv6ERKNS_9IPAddressE: argument 0"}
!23 = distinct !{!23, !"_ZN3net12_GLOBAL__N_117AddBracketsIfIPv6ERKNS_9IPAddressE"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!26 = distinct !{!26, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!27 = distinct !{!27, !28, !"_ZNK4GURL6schemeEv: argument 0"}
!28 = distinct !{!28, !"_ZNK4GURL6schemeEv"}
!29 = !{!30, !32}
!30 = distinct !{!30, !31, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!31 = distinct !{!31, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!32 = distinct !{!32, !33, !"_ZNK4GURL4hostEv: argument 0"}
!33 = distinct !{!33, !"_ZNK4GURL4hostEv"}
!34 = !{!35, !37}
!35 = distinct !{!35, !36, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!36 = distinct !{!36, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!37 = distinct !{!37, !38, !"_ZNK4GURL6schemeEv: argument 0"}
!38 = distinct !{!38, !"_ZNK4GURL6schemeEv"}
