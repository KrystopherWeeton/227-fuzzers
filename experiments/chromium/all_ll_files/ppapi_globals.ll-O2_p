; ModuleID = '../../ppapi/shared_impl/ppapi_globals.cc'
source_filename = "../../ppapi/shared_impl/ppapi_globals.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ppapi::PpapiGlobals" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::LazyInstance" = type { i64, [8 x i8] }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }

@_ZN5ppapi13ppapi_globalsE = hidden local_unnamed_addr global %"class.ppapi::PpapiGlobals"* null, align 8
@_ZTVN5ppapi12PpapiGlobalsE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ppapi::PpapiGlobals"*)* @_ZN5ppapi12PpapiGlobalsD2Ev to i8*), i8* bitcast (void (%"class.ppapi::PpapiGlobals"*)* @_ZN5ppapi12PpapiGlobalsD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.ppapi::PpapiGlobals"*)* @_ZNK5ppapi12PpapiGlobals13IsHostGlobalsEv to i8*), i8* bitcast (i1 (%"class.ppapi::PpapiGlobals"*)* @_ZNK5ppapi12PpapiGlobals15IsPluginGlobalsEv to i8*)] }, align 8
@_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE = internal global %"class.base::LazyInstance" zeroinitializer, align 8

@_ZN5ppapi12PpapiGlobalsD1Ev = hidden unnamed_addr alias void (%"class.ppapi::PpapiGlobals"*), void (%"class.ppapi::PpapiGlobals"*)* @_ZN5ppapi12PpapiGlobalsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi12PpapiGlobalsC2Ev(%"class.ppapi::PpapiGlobals"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::PpapiGlobals", %"class.ppapi::PpapiGlobals"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5ppapi12PpapiGlobalsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ppapi::PpapiGlobals", %"class.ppapi::PpapiGlobals"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %4, align 8
  store %"class.ppapi::PpapiGlobals"* %0, %"class.ppapi::PpapiGlobals"** @_ZN5ppapi13ppapi_globalsE, align 8
  %5 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #6
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  %7 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %6, align 8
  %8 = icmp eq %"class.base::SingleThreadTaskRunner"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %1, %9
  %13 = ptrtoint %"class.base::SingleThreadTaskRunner"* %7 to i64
  %14 = bitcast %class.scoped_refptr* %3 to i64*
  %15 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  store i64 %13, i64* %14, align 8
  %16 = icmp eq %"class.base::SingleThreadTaskRunner"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %15, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 -2
  %24 = bitcast %"class.base::RefCountedThreadSafe"* %23 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %24) #6
  br label %25

25:                                               ; preds = %12, %17, %22
  ret void
}

declare dereferenceable(8) %class.scoped_refptr* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi12PpapiGlobalsC2ENS0_16PerThreadForTestE(%"class.ppapi::PpapiGlobals"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::PpapiGlobals", %"class.ppapi::PpapiGlobals"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5ppapi12PpapiGlobalsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ppapi::PpapiGlobals", %"class.ppapi::PpapiGlobals"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %5 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #6
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  %7 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %6, align 8
  %8 = icmp eq %"class.base::SingleThreadTaskRunner"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %1, %9
  %13 = ptrtoint %"class.base::SingleThreadTaskRunner"* %7 to i64
  %14 = bitcast %class.scoped_refptr* %3 to i64*
  %15 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  store i64 %13, i64* %14, align 8
  %16 = icmp eq %"class.base::SingleThreadTaskRunner"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %15, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 -2
  %24 = bitcast %"class.base::RefCountedThreadSafe"* %23 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %24) #6
  br label %25

25:                                               ; preds = %12, %17, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi12PpapiGlobalsD2Ev(%"class.ppapi::PpapiGlobals"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::PpapiGlobals", %"class.ppapi::PpapiGlobals"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5ppapi12PpapiGlobalsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store %"class.ppapi::PpapiGlobals"* null, %"class.ppapi::PpapiGlobals"** @_ZN5ppapi13ppapi_globalsE, align 8
  %3 = getelementptr inbounds %"class.ppapi::PpapiGlobals", %"class.ppapi::PpapiGlobals"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #6
  br label %14

14:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5ppapi12PpapiGlobalsD0Ev(%"class.ppapi::PpapiGlobals"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() local_unnamed_addr #0 align 2 {
  %1 = load %"class.ppapi::PpapiGlobals"*, %"class.ppapi::PpapiGlobals"** @_ZN5ppapi13ppapi_globalsE, align 8
  %2 = icmp eq %"class.ppapi::PpapiGlobals"* %1, null
  br i1 %2, label %3, label %17

3:                                                ; preds = %0
  %4 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 0) acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 0)) #6
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #6
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE to i8*)) #6
  br label %11

9:                                                ; preds = %6
  %10 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 0) acquire, align 8
  br label %11

11:                                               ; preds = %3, %8, %9
  %12 = phi i64 [ %4, %3 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 1, i64 0) to i64), %8 ], [ %10, %9 ]
  %13 = inttoptr i64 %12 to %"class.base::ThreadLocalPointer"*
  %14 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %13, i64 0, i32 0
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #6
  %16 = bitcast i8* %15 to %"class.ppapi::PpapiGlobals"*
  br label %17

17:                                               ; preds = %0, %11
  %18 = phi %"class.ppapi::PpapiGlobals"* [ %16, %11 ], [ %1, %0 ]
  ret %"class.ppapi::PpapiGlobals"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals21GetThreadLocalPointerEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 0)) #6
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #6
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE to i8*)) #6
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %"class.base::ThreadLocalPointer"*
  %11 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %10, i64 0, i32 0
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #6
  %13 = bitcast i8* %12 to %"class.ppapi::PpapiGlobals"*
  ret %"class.ppapi::PpapiGlobals"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi12PpapiGlobals30SetPpapiGlobalsOnThreadForTestEPS0_(%"class.ppapi::PpapiGlobals"*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 0)) #6
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 1, i64 0) to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 1, i64 0) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #6
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE to i8*)) #6
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %1, %6, %7
  %10 = phi i64 [ %2, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN5ppapi12_GLOBAL__N_126tls_ppapi_globals_for_testE, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.base::ThreadLocalPointer"*
  %12 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %11, i64 0, i32 0
  %13 = bitcast %"class.ppapi::PpapiGlobals"* %0 to i8*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %13) #6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN5ppapi12PpapiGlobals24GetMainThreadMessageLoopEv(%"class.ppapi::PpapiGlobals"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::PpapiGlobals", %"class.ppapi::PpapiGlobals"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %2, align 8
  ret %"class.base::SingleThreadTaskRunner"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi12PpapiGlobals36ResetMainThreadMessageLoopForTestingEv(%"class.ppapi::PpapiGlobals"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #6
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.ppapi::PpapiGlobals", %"class.ppapi::PpapiGlobals"* %0, i64 0, i32 1
  %11 = ptrtoint %"class.base::SingleThreadTaskRunner"* %4 to i64
  %12 = bitcast %class.scoped_refptr* %10 to i64*
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %10, i64 0, i32 0
  %14 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %13, align 8
  store i64 %11, i64* %12, align 8
  %15 = icmp eq %"class.base::SingleThreadTaskRunner"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %14, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe"* %22 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %23) #6
  br label %24

24:                                               ; preds = %9, %16, %21
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5ppapi12PpapiGlobals13IsHostGlobalsEv(%"class.ppapi::PpapiGlobals"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5ppapi12PpapiGlobals15IsPluginGlobalsEv(%"class.ppapi::PpapiGlobals"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
