; ModuleID = '../../third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_info.cc'
source_filename = "../../third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.absl::time_internal::cctz::ZoneInfoSource" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { %"class.absl::time_internal::cctz::ZoneInfoSource"* (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::basic_string"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.absl::time_internal::cctz::TimeZoneInfo" = type { %"class.absl::time_internal::cctz::TimeZoneIf", %"class.std::__1::vector", %"class.std::__1::vector.1", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.absl::time_internal::cctz::TimeZoneIf" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"*, %"class.std::__1::__compressed_pair" }
%"struct.absl::time_internal::cctz::Transition" = type { i64, i8, [7 x i8], %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time" }
%"class.absl::time_internal::cctz::detail::civil_time" = type { %"struct.absl::time_internal::cctz::detail::fields" }
%"struct.absl::time_internal::cctz::detail::fields" = type <{ i64, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.absl::time_internal::cctz::Transition"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"*, %"class.std::__1::__compressed_pair.3" }
%"struct.absl::time_internal::cctz::TransitionType" = type <{ i32, [4 x i8], %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.absl::time_internal::cctz::TransitionType"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::chrono::duration" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__split_buffer.32" = type { %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.absl::time_internal::cctz::time_zone::absolute_lookup" = type { %"class.absl::time_internal::cctz::detail::civil_time", i32, i8, i8* }
%"struct.absl::time_internal::cctz::TimeZoneInfo::Header" = type { i64, i64, i64, i64, i64, i64 }
%struct.tzhead = type { [4 x i8], [1 x i8], [15 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8], [4 x i8] }
%"struct.std::__1::__split_buffer" = type { %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.std::__1::allocator.6"* }
%"class.std::__1::allocator.6" = type { i8 }
%"struct.absl::time_internal::cctz::PosixTimeZone" = type { %"class.std::__1::basic_string", i64, %"class.std::__1::basic_string", i64, %"struct.absl::time_internal::cctz::PosixTransition", %"struct.absl::time_internal::cctz::PosixTransition" }
%"struct.absl::time_internal::cctz::PosixTransition" = type { %"struct.absl::time_internal::cctz::PosixTransition::Date", %"struct.absl::time_internal::cctz::PosixTransition::Time" }
%"struct.absl::time_internal::cctz::PosixTransition::Date" = type { i32, %union.anon.17 }
%union.anon.17 = type { %"struct.absl::time_internal::cctz::PosixTransition::Date::NonLeapDay" }
%"struct.absl::time_internal::cctz::PosixTransition::Date::NonLeapDay" = type { i64 }
%"struct.absl::time_internal::cctz::PosixTransition::Time" = type { i64 }
%"struct.absl::time_internal::cctz::PosixTransition::Date::MonthWeekWeekday" = type { i8, i8, i8 }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { i8*, i8*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i8* }
%"struct.absl::time_internal::cctz::time_zone::civil_lookup" = type { i32, %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"struct.absl::time_internal::cctz::time_zone::civil_transition" = type { %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time" }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource" = type { %"class.absl::time_internal::cctz::ZoneInfoSource", %"class.std::__1::unique_ptr.38", i64 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %struct._IO_FILE* }
%"struct.std::__1::__compressed_pair_elem.41" = type { i32 (%struct._IO_FILE*)* }
%"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource" = type { %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource", %"class.std::__1::basic_string" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16vectorIN4absl13time_internal4cctz10TransitionENS_9allocatorIS4_EEE7emplaceIJEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_ = comdat any

$_ZNSt3__16vectorIN4absl13time_internal4cctz14TransitionTypeENS_9allocatorIS4_EEE7emplaceIJEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_ = comdat any

$_ZN4absl13time_internal4cctz12TimeZoneInfoD2Ev = comdat any

$_ZN4absl13time_internal4cctz12TimeZoneInfoD0Ev = comdat any

$_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll = comdat any

$_ZN4absl13time_internal4cctz6detail4impl5n_dayElallaaa = comdat any

$_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa = comdat any

$_ZNSt3__16vectorIN4absl13time_internal4cctz14TransitionTypeENS_9allocatorIS4_EEE8__appendEm = comdat any

$_ZNSt3__114__split_bufferIN4absl13time_internal4cctz10TransitionERNS_9allocatorIS4_EEE12emplace_backIJEEEvDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN4absl13time_internal4cctz14TransitionTypeERNS_9allocatorIS4_EEE12emplace_backIJEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN4absl13time_internal4cctz10TransitionENS_9allocatorIS4_EEE8__appendEm = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.ref.tmp = private constant [12 x i64] [i64 -576460752303423488, i64 1420070400, i64 1451606400, i64 1483228800, i64 1514764800, i64 1546300800, i64 1577836800, i64 1609459200, i64 1640995200, i64 1672531200, i64 1704067200, i64 1735689600], align 8
@_ZN4absl13time_internal4cctz12_GLOBAL__N_112kSecsPerYearE = internal unnamed_addr constant [2 x i32] [i32 31536000, i32 31622400], align 4
@_ZN4absl13time_internal4cctz12_GLOBAL__N_112kDaysPerYearE = internal unnamed_addr constant [2 x i32] [i32 365, i32 366], align 4
@.str = private unnamed_addr constant [5 x i8] c"TZif\00", align 1
@_ZN4absl13time_internal14cctz_extension24zone_info_source_factoryE = external local_unnamed_addr global %"class.absl::time_internal::cctz::ZoneInfoSource"* (%"class.std::__1::basic_string"*, %"class.std::__1::function"*)*, align 8
@.str.1 = private unnamed_addr constant [8 x i8] c"#trans=\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c" #types=\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c" spec='\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@_ZTVN4absl13time_internal4cctz12TimeZoneInfoE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.absl::time_internal::cctz::TimeZoneInfo"*)* @_ZN4absl13time_internal4cctz12TimeZoneInfoD2Ev to i8*), i8* bitcast (void (%"class.absl::time_internal::cctz::TimeZoneInfo"*)* @_ZN4absl13time_internal4cctz12TimeZoneInfoD0Ev to i8*), i8* bitcast (void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.std::__1::chrono::time_point"*)* @_ZNK4absl13time_internal4cctz12TimeZoneInfo9BreakTimeERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEE to i8*), i8* bitcast (void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"*)* @_ZNK4absl13time_internal4cctz12TimeZoneInfo8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEE to i8*), i8* bitcast (i1 (%"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)* @_ZNK4absl13time_internal4cctz12TimeZoneInfo14NextTransitionERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEEPNS1_9time_zone16civil_transitionE to i8*), i8* bitcast (i1 (%"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)* @_ZNK4absl13time_internal4cctz12TimeZoneInfo14PrevTransitionERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEEPNS1_9time_zone16civil_transitionE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*)* @_ZNK4absl13time_internal4cctz12TimeZoneInfo7VersionEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*)* @_ZNK4absl13time_internal4cctz12TimeZoneInfo11DescriptionEv to i8*)] }, align 8
@_ZZN4absl13time_internal4cctz6detail4impl14days_per_monthElaE16k_days_per_month = internal unnamed_addr constant [13 x i32] [i32 -1, i32 31, i32 28, i32 31, i32 30, i32 31, i32 30, i32 31, i32 31, i32 30, i32 31, i32 30, i32 31], align 16
@_ZZN4absl13time_internal4cctz6detail11get_weekdayERKNS2_10civil_timeINS2_10second_tagEEEE20k_weekday_by_mon_off = internal unnamed_addr constant [13 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5], align 16
@_ZN4absl13time_internal4cctz12_GLOBAL__N_113kMonthOffsetsE = internal unnamed_addr constant [2 x [14 x i16]] [[14 x i16] [i16 -1, i16 0, i16 31, i16 59, i16 90, i16 120, i16 151, i16 181, i16 212, i16 243, i16 273, i16 304, i16 334, i16 365], [14 x i16] [i16 -1, i16 0, i16 31, i16 60, i16 91, i16 121, i16 152, i16 182, i16 213, i16 244, i16 274, i16 305, i16 335, i16 366]], align 16
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.6 = private unnamed_addr constant [6 x i8] c"file:\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"/usr/share/zoneinfo\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"TZDIR\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@_ZTVN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSourceE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"*)* @_ZN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSourceD2Ev to i8*), i8* bitcast (void (%"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"*)* @_ZN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSourceD0Ev to i8*), i8* bitcast (i64 (%"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"*, i8*, i64)* @_ZN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSource4ReadEPvm to i8*), i8* bitcast (i32 (%"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"*, i64)* @_ZN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSource4SkipEm to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"*)* @_ZNK4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSource7VersionEv to i8*)] }, align 8
@.str.10 = private unnamed_addr constant [35 x i8] c"/data/misc/zoneinfo/current/tzdata\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"/system/usr/share/zoneinfo/tzdata\00", align 1
@.ref.tmp.12 = private constant [2 x i8*] [i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i32 0, i32 0)], align 8
@.str.13 = private unnamed_addr constant [7 x i8] c"tzdata\00", align 1
@.str.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN4absl13time_internal4cctz12_GLOBAL__N_121AndroidZoneInfoSourceE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"*)* @_ZN4absl13time_internal4cctz12_GLOBAL__N_121AndroidZoneInfoSourceD2Ev to i8*), i8* bitcast (void (%"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"*)* @_ZN4absl13time_internal4cctz12_GLOBAL__N_121AndroidZoneInfoSourceD0Ev to i8*), i8* bitcast (i64 (%"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"*, i8*, i64)* @_ZN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSource4ReadEPvm to i8*), i8* bitcast (i32 (%"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"*, i64)* @_ZN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSource4SkipEm to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"*)* @_ZNK4absl13time_internal4cctz12_GLOBAL__N_121AndroidZoneInfoSource7VersionEv to i8*)] }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4absl13time_internal4cctz12TimeZoneInfo4LoadERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_1FNS_10unique_ptrINS6_14ZoneInfoSourceENS_14default_deleteISI_EEEESF_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4absl13time_internal4cctz12TimeZoneInfo17ResetToBuiltinUTCERKNSt3__16chrono8durationIlNS3_5ratioILl1ELl1EEEEE(%"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.std::__1::chrono::duration"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.1"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 48
  %12 = icmp eq i64 %10, 0
  %13 = inttoptr i64 %9 to %"struct.absl::time_internal::cctz::TransitionType"*
  br i1 %12, label %14, label %17

14:                                               ; preds = %2
  %15 = sub nuw nsw i64 1, %11
  tail call void @_ZNSt3__16vectorIN4absl13time_internal4cctz14TransitionTypeENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.1"* %4, i64 %15) #17
  %16 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %5, align 8
  br label %22

17:                                               ; preds = %2
  %18 = inttoptr i64 %7 to %"struct.absl::time_internal::cctz::TransitionType"*
  %19 = icmp ugt i64 %11, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %13, i64 1
  store %"struct.absl::time_internal::cctz::TransitionType"* %21, %"struct.absl::time_internal::cctz::TransitionType"** %5, align 8
  br label %22

22:                                               ; preds = %14, %17, %20
  %23 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %16, %14 ], [ %18, %17 ], [ %21, %20 ]
  %24 = getelementptr inbounds %"class.std::__1::chrono::duration", %"class.std::__1::chrono::duration"* %1, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i32
  %27 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %23, i64 -1, i32 0
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %23, i64 -1, i32 4
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %23, i64 -1, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1
  %31 = bitcast %"class.std::__1::vector"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %34 = bitcast %"struct.absl::time_internal::cctz::Transition"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"struct.absl::time_internal::cctz::Transition"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %32
  %39 = sdiv exact i64 %38, 48
  %40 = icmp ult i64 %39, 12
  br i1 %40, label %41, label %49

41:                                               ; preds = %22
  %42 = tail call i8* @_Znwm(i64 576) #18
  %43 = ptrtoint i8* %42 to i64
  %44 = getelementptr inbounds i8, i8* %42, i64 576
  %45 = ptrtoint i8* %44 to i64
  store i64 %43, i64* %31, align 8
  store i64 %43, i64* %34, align 8
  store i64 %45, i64* %36, align 8
  %46 = icmp eq i64 %32, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %41
  %48 = inttoptr i64 %32 to i8*
  tail call void @_ZdlPv(i8* %48) #18
  br label %49

49:                                               ; preds = %22, %41, %47
  br label %162

50:                                               ; preds = %162
  %51 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 3
  store i8 0, i8* %51, align 8
  %52 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #17
  call void @_ZN4absl13time_internal4cctz17FixedOffsetToAbbrERKNSt3__16chrono8durationIlNS2_5ratioILl1ELl1EEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::chrono::duration"* dereferenceable(8) %1) #17
  %53 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 4
  %54 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #18
  br label %61

61:                                               ; preds = %58, %50
  %62 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %52, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #17
  %63 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %53, i64 1, i8 signext 0) #17
  %64 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 6
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  store i8 0, i8* %71, align 1
  %72 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %72, align 8
  br label %75

73:                                               ; preds = %61
  %74 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  store i8 0, i8* %74, align 1
  store i8 0, i8* %66, align 1
  br label %75

75:                                               ; preds = %69, %73
  %76 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 7
  store i8 0, i8* %76, align 8
  %77 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 1970, i64 1, i64 1, i64 0, i64 153722867280912930, i64 7) #17, !noalias !2
  %78 = extractvalue { i64, i64 } %77, 0
  %79 = extractvalue { i64, i64 } %77, 1
  %80 = load i32, i32* %27, align 8, !noalias !2
  %81 = sext i32 %80 to i64
  %82 = shl i64 %79, 56
  %83 = ashr exact i64 %82, 56
  %84 = shl i64 %79, 48
  %85 = ashr i64 %84, 56
  %86 = shl i64 %79, 40
  %87 = ashr i64 %86, 56
  %88 = shl i64 %79, 32
  %89 = ashr i64 %88, 56
  %90 = sdiv i64 %81, 60
  %91 = add nsw i64 %89, %90
  %92 = shl i64 %79, 24
  %93 = ashr i64 %92, 56
  %94 = srem i64 %81, 60
  %95 = add nsw i64 %93, %94
  %96 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %78, i64 %83, i64 %85, i64 %87, i64 %91, i64 %95) #17, !noalias !2
  %97 = extractvalue { i64, i64 } %96, 0
  %98 = extractvalue { i64, i64 } %96, 1
  %99 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %23, i64 -1, i32 2, i32 0, i32 0
  store i64 %97, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %23, i64 -1, i32 2, i32 0, i32 1
  %101 = bitcast i8* %100 to i64*
  store i64 %98, i64* %101, align 8
  %102 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 1970, i64 1, i64 1, i64 0, i64 -153722867280912930, i64 -8) #17, !noalias !5
  %103 = extractvalue { i64, i64 } %102, 0
  %104 = extractvalue { i64, i64 } %102, 1
  %105 = load i32, i32* %27, align 8, !noalias !5
  %106 = sext i32 %105 to i64
  %107 = shl i64 %104, 56
  %108 = ashr exact i64 %107, 56
  %109 = shl i64 %104, 48
  %110 = ashr i64 %109, 56
  %111 = shl i64 %104, 40
  %112 = ashr i64 %111, 56
  %113 = shl i64 %104, 32
  %114 = ashr i64 %113, 56
  %115 = sdiv i64 %106, 60
  %116 = add nsw i64 %114, %115
  %117 = shl i64 %104, 24
  %118 = ashr i64 %117, 56
  %119 = srem i64 %106, 60
  %120 = add nsw i64 %118, %119
  %121 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %103, i64 %108, i64 %110, i64 %112, i64 %116, i64 %120) #17, !noalias !5
  %122 = extractvalue { i64, i64 } %121, 0
  %123 = extractvalue { i64, i64 } %121, 1
  %124 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %23, i64 -1, i32 3, i32 0, i32 0
  store i64 %122, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %23, i64 -1, i32 3, i32 0, i32 1
  %126 = bitcast i8* %125 to i64*
  store i64 %123, i64* %126, align 8
  %127 = load i64, i64* %36, align 8
  %128 = load i64, i64* %31, align 8
  %129 = sub i64 %127, %128
  %130 = sdiv exact i64 %129, 48
  %131 = load i64, i64* %34, align 8
  %132 = sub i64 %131, %128
  %133 = sdiv exact i64 %132, 48
  %134 = icmp ugt i64 %130, %133
  br i1 %134, label %135, label %161

135:                                              ; preds = %75
  %136 = icmp eq i64 %132, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %135
  %138 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* null, i64 %133
  %139 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %138 to i64
  br label %155

140:                                              ; preds = %135
  %141 = icmp ugt i64 %133, 384307168202282325
  br i1 %141, label %142, label %143

142:                                              ; preds = %140
  call void @abort() #19
  unreachable

143:                                              ; preds = %140
  %144 = call i8* @_Znwm(i64 %132) #18
  %145 = bitcast i8* %144 to %"struct.absl::time_internal::cctz::Transition"*
  %146 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %145, i64 %133
  %147 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %146 to i64
  %148 = sdiv exact i64 %132, -48
  %149 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %146, i64 %148
  %150 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %149 to i64
  %151 = icmp sgt i64 %132, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %143
  %153 = bitcast %"struct.absl::time_internal::cctz::Transition"* %149 to i8*
  %154 = inttoptr i64 %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 %132, i1 false) #17
  br label %155

155:                                              ; preds = %152, %143, %137
  %156 = phi i64 [ %150, %143 ], [ %150, %152 ], [ %139, %137 ]
  %157 = phi i64 [ %147, %143 ], [ %147, %152 ], [ %139, %137 ]
  store i64 %156, i64* %31, align 8
  store i64 %157, i64* %34, align 8
  store i64 %157, i64* %36, align 8
  %158 = icmp eq i64 %128, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %155
  %160 = inttoptr i64 %128 to i8*
  call void @_ZdlPv(i8* %160) #18
  br label %161

161:                                              ; preds = %75, %155, %159
  ret i1 true

162:                                              ; preds = %49, %162
  %163 = phi i64* [ %213, %162 ], [ getelementptr inbounds ([12 x i64], [12 x i64]* @.ref.tmp, i64 0, i64 0), %49 ]
  %164 = load i64, i64* %163, align 8
  %165 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %33, align 8
  %166 = tail call %"struct.absl::time_internal::cctz::Transition"* @_ZNSt3__16vectorIN4absl13time_internal4cctz10TransitionENS_9allocatorIS4_EEE7emplaceIJEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector"* %30, %"struct.absl::time_internal::cctz::Transition"* %165)
  %167 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %166, i64 0, i32 0
  store i64 %164, i64* %167, align 8
  %168 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %166, i64 0, i32 1
  store i8 0, i8* %168, align 8
  %169 = sdiv i64 %164, 60
  %170 = srem i64 %164, 60
  %171 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 1970, i64 1, i64 1, i64 0, i64 %169, i64 %170) #17, !noalias !8
  %172 = extractvalue { i64, i64 } %171, 0
  %173 = extractvalue { i64, i64 } %171, 1
  %174 = load i32, i32* %27, align 8, !noalias !8
  %175 = sext i32 %174 to i64
  %176 = shl i64 %173, 56
  %177 = ashr exact i64 %176, 56
  %178 = shl i64 %173, 48
  %179 = ashr i64 %178, 56
  %180 = shl i64 %173, 40
  %181 = ashr i64 %180, 56
  %182 = shl i64 %173, 32
  %183 = ashr i64 %182, 56
  %184 = sdiv i64 %175, 60
  %185 = add nsw i64 %183, %184
  %186 = shl i64 %173, 24
  %187 = ashr i64 %186, 56
  %188 = srem i64 %175, 60
  %189 = add nsw i64 %187, %188
  %190 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %172, i64 %177, i64 %179, i64 %181, i64 %185, i64 %189) #17, !noalias !8
  %191 = extractvalue { i64, i64 } %190, 0
  %192 = extractvalue { i64, i64 } %190, 1
  %193 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %166, i64 0, i32 3, i32 0, i32 0
  store i64 %191, i64* %193, align 8
  %194 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %166, i64 0, i32 3, i32 0, i32 1
  %195 = bitcast i8* %194 to i64*
  store i64 %192, i64* %195, align 8
  %196 = shl i64 %192, 56
  %197 = ashr exact i64 %196, 56
  %198 = shl i64 %192, 48
  %199 = ashr i64 %198, 56
  %200 = shl i64 %192, 40
  %201 = ashr i64 %200, 56
  %202 = shl i64 %192, 32
  %203 = ashr i64 %202, 56
  %204 = shl i64 %192, 24
  %205 = ashr i64 %204, 56
  %206 = add nsw i64 %205, -1
  %207 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %191, i64 %197, i64 %199, i64 %201, i64 %203, i64 %206) #17
  %208 = extractvalue { i64, i64 } %207, 1
  %209 = extractvalue { i64, i64 } %207, 0
  %210 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %166, i64 0, i32 4, i32 0, i32 0
  store i64 %209, i64* %210, align 8
  %211 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %166, i64 0, i32 4, i32 0, i32 1
  %212 = bitcast i8* %211 to i64*
  store i64 %208, i64* %212, align 8
  %213 = getelementptr inbounds i64, i64* %163, i64 1
  %214 = icmp eq i64* %213, getelementptr inbounds ([12 x i64], [12 x i64]* @.ref.tmp, i64 1, i64 0)
  br i1 %214, label %50, label %162
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.absl::time_internal::cctz::Transition"* @_ZNSt3__16vectorIN4absl13time_internal4cctz10TransitionENS_9allocatorIS4_EEE7emplaceIJEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector"*, %"struct.absl::time_internal::cctz::Transition"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [16 x i8], align 8
  %4 = alloca [3 x i8], align 1
  %5 = alloca [3 x i8], align 1
  %6 = alloca %"struct.std::__1::__split_buffer.32", align 8
  %7 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %10 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %11, align 8
  %13 = icmp ult %"struct.absl::time_internal::cctz::Transition"* %10, %12
  %14 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %10 to i64
  %15 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %12 to i64
  br i1 %13, label %16, label %82

16:                                               ; preds = %2
  %17 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %10, %1
  br i1 %17, label %18, label %35

18:                                               ; preds = %16
  %19 = bitcast %"struct.absl::time_internal::cctz::Transition"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 48, i1 false) #17
  %20 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 3, i32 0, i32 0
  store i64 1970, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 3, i32 0, i32 1
  store i8 1, i8* %21, align 8
  %22 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 3, i32 0, i32 2
  store i8 1, i8* %22, align 1
  %23 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 3, i32 0, i32 3
  store i8 0, i8* %23, align 2
  %24 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 3, i32 0, i32 4
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 3, i32 0, i32 5
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 4, i32 0, i32 0
  store i64 1970, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 4, i32 0, i32 1
  store i8 1, i8* %27, align 8
  %28 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 4, i32 0, i32 2
  store i8 1, i8* %28, align 1
  %29 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 4, i32 0, i32 3
  store i8 0, i8* %29, align 2
  %30 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 4, i32 0, i32 4
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 4, i32 0, i32 5
  store i8 0, i8* %31, align 4
  %32 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 1
  %33 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %32 to i64
  %34 = bitcast %"struct.absl::time_internal::cctz::Transition"** %9 to i64*
  store i64 %33, i64* %34, align 8
  br label %186

35:                                               ; preds = %16
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36)
  %37 = getelementptr inbounds [3 x i8], [3 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %37)
  %38 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %38)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %37, i8 0, i64 3, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %38, i8 0, i64 3, i1 false)
  %39 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 1
  %40 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %39 to i64
  %41 = sub i64 %14, %40
  %42 = sdiv exact i64 %41, 48
  %43 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 %42
  %44 = bitcast %"struct.absl::time_internal::cctz::Transition"** %9 to i64*
  %45 = icmp ult %"struct.absl::time_internal::cctz::Transition"* %43, %10
  br i1 %45, label %58, label %48

46:                                               ; preds = %58
  %47 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %64 to i64
  br label %48

48:                                               ; preds = %46, %35
  %49 = phi i64 [ %47, %46 ], [ %14, %35 ]
  store i64 %49, i64* %44, align 8
  %50 = icmp eq i64 %41, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  %52 = bitcast %"struct.absl::time_internal::cctz::Transition"* %1 to i8*
  br label %66

53:                                               ; preds = %48
  %54 = sdiv exact i64 %41, -48
  %55 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %10, i64 %54
  %56 = bitcast %"struct.absl::time_internal::cctz::Transition"* %55 to i8*
  %57 = bitcast %"struct.absl::time_internal::cctz::Transition"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 %41, i1 false) #17
  br label %66

58:                                               ; preds = %35, %58
  %59 = phi %"struct.absl::time_internal::cctz::Transition"* [ %64, %58 ], [ %10, %35 ]
  %60 = phi %"struct.absl::time_internal::cctz::Transition"* [ %63, %58 ], [ %43, %35 ]
  %61 = bitcast %"struct.absl::time_internal::cctz::Transition"* %59 to i8*
  %62 = bitcast %"struct.absl::time_internal::cctz::Transition"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 48, i1 false) #17
  %63 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %60, i64 1
  %64 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %59, i64 1
  %65 = icmp ult %"struct.absl::time_internal::cctz::Transition"* %63, %10
  br i1 %65, label %58, label %46

66:                                               ; preds = %51, %53
  %67 = phi i8* [ %52, %51 ], [ %57, %53 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %36, i64 16, i1 false)
  %68 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 3, i32 0, i32 0
  store i64 1970, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 3, i32 0, i32 1
  store i8 1, i8* %69, align 8
  %70 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 3, i32 0, i32 2
  store i8 1, i8* %70, align 1
  %71 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 3, i32 0, i32 3
  store i8 0, i8* %71, align 2
  %72 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 3, i32 0, i32 4
  store i8 0, i8* %72, align 1
  %73 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 3, i32 0, i32 5
  store i8 0, i8* %73, align 4
  %74 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 3, i32 0, i32 6, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %74, i8* nonnull align 1 %37, i64 3, i1 false)
  %75 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 4, i32 0, i32 0
  store i64 1970, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 4, i32 0, i32 1
  store i8 1, i8* %76, align 8
  %77 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 4, i32 0, i32 2
  store i8 1, i8* %77, align 1
  %78 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 4, i32 0, i32 3
  store i8 0, i8* %78, align 2
  %79 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 4, i32 0, i32 4
  store i8 0, i8* %79, align 1
  %80 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 4, i32 0, i32 5
  store i8 0, i8* %80, align 4
  %81 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1, i64 0, i32 4, i32 0, i32 6, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* nonnull align 1 %38, i64 3, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36)
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %37)
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %38)
  br label %186

82:                                               ; preds = %2
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %84 = bitcast %"struct.std::__1::__split_buffer.32"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %84) #17
  %85 = getelementptr inbounds %"struct.std::__1::__split_buffer.32", %"struct.std::__1::__split_buffer.32"* %6, i64 0, i32 0
  %86 = getelementptr inbounds %"struct.std::__1::__split_buffer.32", %"struct.std::__1::__split_buffer.32"* %6, i64 0, i32 1
  %87 = getelementptr inbounds %"struct.std::__1::__split_buffer.32", %"struct.std::__1::__split_buffer.32"* %6, i64 0, i32 2
  %88 = getelementptr inbounds %"struct.std::__1::__split_buffer.32", %"struct.std::__1::__split_buffer.32"* %6, i64 0, i32 3, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::__1::__split_buffer.32", %"struct.std::__1::__split_buffer.32"* %6, i64 0, i32 3, i32 1, i32 0
  %90 = bitcast %"struct.absl::time_internal::cctz::Transition"** %9 to i64*
  %91 = bitcast %"class.std::__1::vector"* %0 to i64*
  %92 = bitcast %"struct.std::__1::__split_buffer.32"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 40, i1 false)
  %93 = load i64, i64* %91, align 8
  %94 = sub i64 %14, %93
  %95 = sdiv exact i64 %94, 48
  %96 = add nsw i64 %95, 1
  %97 = icmp ugt i64 %96, 384307168202282325
  br i1 %97, label %98, label %100

98:                                               ; preds = %82
  %99 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %99) #19
  unreachable

100:                                              ; preds = %82
  %101 = bitcast %"struct.absl::time_internal::cctz::Transition"** %11 to i64*
  %102 = sub i64 %15, %93
  %103 = sdiv exact i64 %102, 48
  %104 = icmp ult i64 %103, 192153584101141162
  br i1 %104, label %109, label %105

105:                                              ; preds = %100
  %106 = sub i64 %7, %93
  %107 = sdiv exact i64 %106, 48
  store %"struct.absl::time_internal::cctz::Transition"* null, %"struct.absl::time_internal::cctz::Transition"** %88, align 8
  %108 = bitcast %"class.std::__1::allocator"** %89 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %83, %"class.std::__1::__compressed_pair"** %108, align 8
  br label %117

109:                                              ; preds = %100
  %110 = shl nsw i64 %103, 1
  %111 = icmp ult i64 %110, %96
  %112 = select i1 %111, i64 %96, i64 %110
  %113 = sub i64 %7, %93
  %114 = sdiv exact i64 %113, 48
  store %"struct.absl::time_internal::cctz::Transition"* null, %"struct.absl::time_internal::cctz::Transition"** %88, align 8
  %115 = bitcast %"class.std::__1::allocator"** %89 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %83, %"class.std::__1::__compressed_pair"** %115, align 8
  %116 = icmp eq i64 %112, 0
  br i1 %116, label %123, label %117

117:                                              ; preds = %109, %105
  %118 = phi i64 [ %107, %105 ], [ %114, %109 ]
  %119 = phi i64 [ 384307168202282325, %105 ], [ %112, %109 ]
  %120 = mul i64 %119, 48
  %121 = tail call i8* @_Znwm(i64 %120) #18
  %122 = bitcast i8* %121 to %"struct.absl::time_internal::cctz::Transition"*
  br label %123

123:                                              ; preds = %109, %117
  %124 = phi i64 [ %118, %117 ], [ %114, %109 ]
  %125 = phi i64 [ %119, %117 ], [ 0, %109 ]
  %126 = phi %"struct.absl::time_internal::cctz::Transition"* [ %122, %117 ], [ null, %109 ]
  store %"struct.absl::time_internal::cctz::Transition"* %126, %"struct.absl::time_internal::cctz::Transition"** %85, align 8
  %127 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %126, i64 %124
  store %"struct.absl::time_internal::cctz::Transition"* %127, %"struct.absl::time_internal::cctz::Transition"** %87, align 8
  store %"struct.absl::time_internal::cctz::Transition"* %127, %"struct.absl::time_internal::cctz::Transition"** %86, align 8
  %128 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %126, i64 %125
  store %"struct.absl::time_internal::cctz::Transition"* %128, %"struct.absl::time_internal::cctz::Transition"** %88, align 8
  call void @_ZNSt3__114__split_bufferIN4absl13time_internal4cctz10TransitionERNS_9allocatorIS4_EEE12emplace_backIJEEEvDpOT_(%"struct.std::__1::__split_buffer.32"* nonnull %6)
  %129 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %86, align 8
  %130 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %8, align 8
  %131 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %130 to i64
  %132 = sub i64 %7, %131
  %133 = sdiv exact i64 %132, -48
  %134 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %129, i64 %133
  store %"struct.absl::time_internal::cctz::Transition"* %134, %"struct.absl::time_internal::cctz::Transition"** %86, align 8
  %135 = icmp sgt i64 %132, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %123
  %137 = bitcast %"struct.absl::time_internal::cctz::Transition"* %134 to i8*
  %138 = bitcast %"struct.absl::time_internal::cctz::Transition"* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 %132, i1 false) #17
  br label %139

139:                                              ; preds = %136, %123
  %140 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %9, align 8
  %141 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %140, %1
  br i1 %141, label %142, label %146

142:                                              ; preds = %139
  %143 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %140 to i64
  %144 = bitcast %"struct.absl::time_internal::cctz::Transition"** %87 to i64*
  %145 = load i64, i64* %144, align 8
  br label %160

146:                                              ; preds = %139
  %147 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %87, align 8
  br label %148

148:                                              ; preds = %148, %146
  %149 = phi %"struct.absl::time_internal::cctz::Transition"* [ %147, %146 ], [ %154, %148 ]
  %150 = phi %"struct.absl::time_internal::cctz::Transition"* [ %1, %146 ], [ %153, %148 ]
  %151 = bitcast %"struct.absl::time_internal::cctz::Transition"* %149 to i8*
  %152 = bitcast %"struct.absl::time_internal::cctz::Transition"* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 48, i1 false) #17
  %153 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %150, i64 1
  %154 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %149, i64 1
  %155 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %153, %140
  br i1 %155, label %156, label %148

156:                                              ; preds = %148
  store %"struct.absl::time_internal::cctz::Transition"* %154, %"struct.absl::time_internal::cctz::Transition"** %87, align 8
  %157 = load i64, i64* %90, align 8
  %158 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %154 to i64
  %159 = bitcast %"struct.absl::time_internal::cctz::Transition"** %87 to i64*
  br label %160

160:                                              ; preds = %142, %156
  %161 = phi i64* [ %144, %142 ], [ %159, %156 ]
  %162 = phi i64 [ %145, %142 ], [ %158, %156 ]
  %163 = phi i64 [ %143, %142 ], [ %157, %156 ]
  %164 = load i64, i64* %91, align 8
  %165 = bitcast %"struct.absl::time_internal::cctz::Transition"** %86 to i64*
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %91, align 8
  store i64 %164, i64* %165, align 8
  store i64 %162, i64* %90, align 8
  store i64 %163, i64* %161, align 8
  %167 = load i64, i64* %101, align 8
  %168 = bitcast %"struct.absl::time_internal::cctz::Transition"** %88 to i64*
  %169 = load i64, i64* %168, align 8
  store i64 %169, i64* %101, align 8
  store i64 %167, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__split_buffer.32"* %6 to i64*
  store i64 %164, i64* %170, align 8
  %171 = inttoptr i64 %164 to %"struct.absl::time_internal::cctz::Transition"*
  %172 = inttoptr i64 %163 to %"struct.absl::time_internal::cctz::Transition"*
  %173 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %172, %171
  br i1 %173, label %181, label %174

174:                                              ; preds = %160
  %175 = getelementptr %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %172, i64 -1, i32 0
  %176 = ptrtoint i64* %175 to i64
  %177 = sub i64 %176, %164
  %178 = udiv i64 %177, 48
  %179 = xor i64 %178, -1
  %180 = getelementptr %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %172, i64 %179
  store %"struct.absl::time_internal::cctz::Transition"* %180, %"struct.absl::time_internal::cctz::Transition"** %87, align 8
  br label %181

181:                                              ; preds = %174, %160
  %182 = icmp eq i64 %164, 0
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = inttoptr i64 %164 to i8*
  call void @_ZdlPv(i8* %184) #18
  br label %185

185:                                              ; preds = %181, %183
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %84) #17
  br label %186

186:                                              ; preds = %18, %66, %185
  %187 = phi %"struct.absl::time_internal::cctz::Transition"* [ %1, %18 ], [ %1, %66 ], [ %129, %185 ]
  ret %"struct.absl::time_internal::cctz::Transition"* %187
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE(%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* noalias nocapture sret, %"class.absl::time_internal::cctz::TimeZoneInfo"*, i64, %"struct.absl::time_internal::cctz::TransitionType"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %5 = sdiv i64 %2, 60
  %6 = srem i64 %2, 60
  %7 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 1970, i64 1, i64 1, i64 0, i64 %5, i64 %6) #17
  %8 = extractvalue { i64, i64 } %7, 0
  %9 = extractvalue { i64, i64 } %7, 1
  %10 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = shl i64 %9, 56
  %14 = ashr exact i64 %13, 56
  %15 = shl i64 %9, 48
  %16 = ashr i64 %15, 56
  %17 = shl i64 %9, 40
  %18 = ashr i64 %17, 56
  %19 = shl i64 %9, 32
  %20 = ashr i64 %19, 56
  %21 = sdiv i64 %12, 60
  %22 = add nsw i64 %20, %21
  %23 = shl i64 %9, 24
  %24 = ashr i64 %23, 56
  %25 = srem i64 %12, 60
  %26 = add nsw i64 %24, %25
  %27 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %8, i64 %14, i64 %16, i64 %18, i64 %22, i64 %26) #17
  %28 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = extractvalue { i64, i64 } %27, 0
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast i8* %30 to i64*
  %32 = extractvalue { i64, i64 } %27, 1
  store i64 %32, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 1
  %34 = load i32, i32* %10, align 8
  store i32 %34, i32* %33, align 8
  %35 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 2
  %36 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %3, i64 0, i32 4
  %37 = load i8, i8* %36, align 8, !range !11
  store i8 %37, i8* %35, align 4
  %38 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 3
  %39 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 4
  %40 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %3, i64 0, i32 5
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %4
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  br label %52

50:                                               ; preds = %4
  %51 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  br label %52

52:                                               ; preds = %47, %50
  %53 = phi i8* [ %49, %47 ], [ %51, %50 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 %42
  store i8* %54, i8** %38, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4absl13time_internal4cctz17FixedOffsetToAbbrERKNSt3__16chrono8durationIlNS2_5ratioILl1ELl1EEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::chrono::duration"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4absl13time_internal4cctz12TimeZoneInfo6Header5BuildERK6tzhead(%"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* nocapture, %struct.tzhead* nocapture readonly dereferenceable(44)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 6, i64 0
  %4 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 6, i64 1
  %5 = load i8, i8* %3, align 1
  %6 = zext i8 %5 to i64
  %7 = shl nuw nsw i64 %6, 8
  %8 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 6, i64 2
  %9 = load i8, i8* %4, align 1
  %10 = zext i8 %9 to i64
  %11 = or i64 %7, %10
  %12 = shl nuw nsw i64 %11, 8
  %13 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 6, i64 3
  %14 = load i8, i8* %8, align 1
  %15 = zext i8 %14 to i64
  %16 = or i64 %12, %15
  %17 = shl nuw nsw i64 %16, 8
  %18 = load i8, i8* %13, align 1
  %19 = zext i8 %18 to i64
  %20 = or i64 %17, %19
  %21 = icmp ult i64 %20, 2147483648
  %22 = add i64 %20, -4294967296
  %23 = select i1 %21, i64 %20, i64 %22
  %24 = icmp slt i64 %23, 0
  br i1 %24, label %147, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %0, i64 0, i32 0
  store i64 %23, i64* %26, align 8
  %27 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 7, i64 0
  %28 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 7, i64 1
  %29 = load i8, i8* %27, align 1
  %30 = zext i8 %29 to i64
  %31 = shl nuw nsw i64 %30, 8
  %32 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 7, i64 2
  %33 = load i8, i8* %28, align 1
  %34 = zext i8 %33 to i64
  %35 = or i64 %31, %34
  %36 = shl nuw nsw i64 %35, 8
  %37 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 7, i64 3
  %38 = load i8, i8* %32, align 1
  %39 = zext i8 %38 to i64
  %40 = or i64 %36, %39
  %41 = shl nuw nsw i64 %40, 8
  %42 = load i8, i8* %37, align 1
  %43 = zext i8 %42 to i64
  %44 = or i64 %41, %43
  %45 = icmp ult i64 %44, 2147483648
  %46 = add i64 %44, -4294967296
  %47 = select i1 %45, i64 %44, i64 %46
  %48 = icmp slt i64 %47, 0
  br i1 %48, label %147, label %49

49:                                               ; preds = %25
  %50 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %0, i64 0, i32 1
  store i64 %47, i64* %50, align 8
  %51 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 8, i64 0
  %52 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 8, i64 1
  %53 = load i8, i8* %51, align 1
  %54 = zext i8 %53 to i64
  %55 = shl nuw nsw i64 %54, 8
  %56 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 8, i64 2
  %57 = load i8, i8* %52, align 1
  %58 = zext i8 %57 to i64
  %59 = or i64 %55, %58
  %60 = shl nuw nsw i64 %59, 8
  %61 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 8, i64 3
  %62 = load i8, i8* %56, align 1
  %63 = zext i8 %62 to i64
  %64 = or i64 %60, %63
  %65 = shl nuw nsw i64 %64, 8
  %66 = load i8, i8* %61, align 1
  %67 = zext i8 %66 to i64
  %68 = or i64 %65, %67
  %69 = icmp ult i64 %68, 2147483648
  %70 = add i64 %68, -4294967296
  %71 = select i1 %69, i64 %68, i64 %70
  %72 = icmp slt i64 %71, 0
  br i1 %72, label %147, label %73

73:                                               ; preds = %49
  %74 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %0, i64 0, i32 2
  store i64 %71, i64* %74, align 8
  %75 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 5, i64 0
  %76 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 5, i64 1
  %77 = load i8, i8* %75, align 1
  %78 = zext i8 %77 to i64
  %79 = shl nuw nsw i64 %78, 8
  %80 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 5, i64 2
  %81 = load i8, i8* %76, align 1
  %82 = zext i8 %81 to i64
  %83 = or i64 %79, %82
  %84 = shl nuw nsw i64 %83, 8
  %85 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 5, i64 3
  %86 = load i8, i8* %80, align 1
  %87 = zext i8 %86 to i64
  %88 = or i64 %84, %87
  %89 = shl nuw nsw i64 %88, 8
  %90 = load i8, i8* %85, align 1
  %91 = zext i8 %90 to i64
  %92 = or i64 %89, %91
  %93 = icmp ult i64 %92, 2147483648
  %94 = add i64 %92, -4294967296
  %95 = select i1 %93, i64 %92, i64 %94
  %96 = icmp slt i64 %95, 0
  br i1 %96, label %147, label %97

97:                                               ; preds = %73
  %98 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %0, i64 0, i32 3
  store i64 %95, i64* %98, align 8
  %99 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 4, i64 0
  %100 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 4, i64 1
  %101 = load i8, i8* %99, align 1
  %102 = zext i8 %101 to i64
  %103 = shl nuw nsw i64 %102, 8
  %104 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 4, i64 2
  %105 = load i8, i8* %100, align 1
  %106 = zext i8 %105 to i64
  %107 = or i64 %103, %106
  %108 = shl nuw nsw i64 %107, 8
  %109 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 4, i64 3
  %110 = load i8, i8* %104, align 1
  %111 = zext i8 %110 to i64
  %112 = or i64 %108, %111
  %113 = shl nuw nsw i64 %112, 8
  %114 = load i8, i8* %109, align 1
  %115 = zext i8 %114 to i64
  %116 = or i64 %113, %115
  %117 = icmp ult i64 %116, 2147483648
  %118 = add i64 %116, -4294967296
  %119 = select i1 %117, i64 %116, i64 %118
  %120 = icmp slt i64 %119, 0
  br i1 %120, label %147, label %121

121:                                              ; preds = %97
  %122 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %0, i64 0, i32 4
  store i64 %119, i64* %122, align 8
  %123 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 3, i64 0
  %124 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 3, i64 1
  %125 = load i8, i8* %123, align 1
  %126 = zext i8 %125 to i64
  %127 = shl nuw nsw i64 %126, 8
  %128 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 3, i64 2
  %129 = load i8, i8* %124, align 1
  %130 = zext i8 %129 to i64
  %131 = or i64 %127, %130
  %132 = shl nuw nsw i64 %131, 8
  %133 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %1, i64 0, i32 3, i64 3
  %134 = load i8, i8* %128, align 1
  %135 = zext i8 %134 to i64
  %136 = or i64 %132, %135
  %137 = shl nuw nsw i64 %136, 8
  %138 = load i8, i8* %133, align 1
  %139 = zext i8 %138 to i64
  %140 = or i64 %137, %139
  %141 = icmp ult i64 %140, 2147483648
  %142 = add i64 %140, -4294967296
  %143 = select i1 %141, i64 %140, i64 %142
  %144 = icmp slt i64 %143, 0
  br i1 %144, label %147, label %145

145:                                              ; preds = %121
  %146 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %0, i64 0, i32 5
  store i64 %143, i64* %146, align 8
  br label %147

147:                                              ; preds = %121, %97, %73, %49, %25, %2, %145
  %148 = phi i1 [ true, %145 ], [ false, %2 ], [ false, %25 ], [ false, %49 ], [ false, %73 ], [ false, %97 ], [ false, %121 ]
  ret i1 %148
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4absl13time_internal4cctz12TimeZoneInfo6Header10DataLengthEm(%"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* nocapture readonly, i64) local_unnamed_addr #4 align 2 {
  %3 = add i64 %1, 1
  %4 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = mul i64 %5, %3
  %7 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = mul i64 %8, 6
  %10 = add i64 %9, %6
  %11 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %0, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %10, %12
  %14 = add i64 %1, 4
  %15 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %0, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = mul i64 %16, %14
  %18 = add i64 %13, %17
  %19 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %0, i64 0, i32 4
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %18, %20
  %22 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %0, i64 0, i32 5
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %21, %23
  ret i64 %24
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4absl13time_internal4cctz12TimeZoneInfo16EquivTransitionsEhh(%"class.absl::time_internal::cctz::TimeZoneInfo"* nocapture readonly, i8 zeroext, i8 zeroext) local_unnamed_addr #4 align 2 {
  %4 = icmp eq i8 %1, %2
  br i1 %4, label %27, label %5

5:                                                ; preds = %3
  %6 = zext i8 %1 to i64
  %7 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %7, align 8
  %9 = zext i8 %2 to i64
  %10 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %8, i64 %6, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %8, i64 %9, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %27

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %8, i64 %6, i32 4
  %17 = load i8, i8* %16, align 8, !range !11
  %18 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %8, i64 %9, i32 4
  %19 = load i8, i8* %18, align 8, !range !11
  %20 = icmp eq i8 %17, %19
  br i1 %20, label %21, label %27

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %8, i64 %6, i32 5
  %23 = load i8, i8* %22, align 1
  %24 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %8, i64 %9, i32 5
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %23, %25
  br label %27

27:                                               ; preds = %5, %15, %21, %3
  %28 = phi i1 [ true, %3 ], [ false, %5 ], [ false, %15 ], [ %26, %21 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4absl13time_internal4cctz12TimeZoneInfo17GetTransitionTypeElbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPh(%"class.absl::time_internal::cctz::TimeZoneInfo"*, i64, i1 zeroext, %"class.std::__1::basic_string"* dereferenceable(24), i8* nocapture) local_unnamed_addr #0 align 2 {
  %6 = zext i1 %2 to i8
  %7 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 4
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  br label %17

15:                                               ; preds = %5
  %16 = zext i8 %10 to i64
  br label %17

17:                                               ; preds = %12, %15
  %18 = phi i64 [ %14, %12 ], [ %16, %15 ]
  %19 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.1"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  br i1 %25, label %84, label %26

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = zext i1 %2 to i32
  br label %33

33:                                               ; preds = %82, %26
  %34 = phi i8 [ %10, %26 ], [ %83, %82 ]
  %35 = phi i64 [ %24, %26 ], [ %78, %82 ]
  %36 = phi i64 [ %18, %26 ], [ %63, %82 ]
  %37 = phi i64 [ 0, %26 ], [ %76, %82 ]
  %38 = inttoptr i64 %35 to %"struct.absl::time_internal::cctz::TransitionType"*
  %39 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %38, i64 %37, i32 5
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i64
  %42 = icmp slt i8 %34, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %33
  %44 = load i8*, i8** %28, align 8
  br label %45

45:                                               ; preds = %33, %43
  %46 = phi i8* [ %44, %43 ], [ %27, %33 ]
  %47 = getelementptr inbounds i8, i8* %46, i64 %41
  %48 = tail call i64 @strlen(i8* %47) #17
  %49 = load i8, i8* %30, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load i64, i64* %31, align 8
  %52 = zext i8 %49 to i64
  %53 = select i1 %50, i64 %51, i64 %52
  %54 = icmp eq i64 %48, %53
  br i1 %54, label %55, label %61

55:                                               ; preds = %45
  %56 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* %47, i64 %48) #17
  %57 = icmp eq i32 %56, 0
  %58 = load i8, i8* %39, align 1
  %59 = zext i8 %58 to i64
  %60 = select i1 %57, i64 %59, i64 %36
  br label %61

61:                                               ; preds = %45, %55
  %62 = phi i64 [ %59, %55 ], [ %41, %45 ]
  %63 = phi i64 [ %60, %55 ], [ %36, %45 ]
  %64 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %38, i64 %37, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = sext i32 %65 to i64
  %67 = icmp eq i64 %66, %1
  br i1 %67, label %68, label %75

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %38, i64 %37, i32 4
  %70 = load i8, i8* %69, align 8, !range !11
  %71 = zext i8 %70 to i32
  %72 = icmp eq i32 %71, %32
  %73 = icmp eq i64 %63, %62
  %74 = and i1 %73, %72
  br i1 %74, label %84, label %75

75:                                               ; preds = %61, %68
  %76 = add i64 %37, 1
  %77 = load i64, i64* %21, align 8
  %78 = load i64, i64* %23, align 8
  %79 = sub i64 %77, %78
  %80 = sdiv exact i64 %79, 48
  %81 = icmp eq i64 %76, %80
  br i1 %81, label %84, label %82

82:                                               ; preds = %75
  %83 = load i8, i8* %9, align 1
  br label %33

84:                                               ; preds = %75, %68, %17
  %85 = phi i64 [ 0, %17 ], [ %76, %75 ], [ %37, %68 ]
  %86 = phi i64 [ %18, %17 ], [ %63, %75 ], [ %62, %68 ]
  %87 = or i64 %86, %85
  %88 = icmp ugt i64 %87, 255
  br i1 %88, label %131, label %89

89:                                               ; preds = %84
  %90 = load i64, i64* %21, align 8
  %91 = load i64, i64* %23, align 8
  %92 = sub i64 %90, %91
  %93 = sdiv exact i64 %92, 48
  %94 = icmp eq i64 %85, %93
  br i1 %94, label %95, label %129

95:                                               ; preds = %89
  %96 = inttoptr i64 %90 to %"struct.absl::time_internal::cctz::TransitionType"*
  %97 = tail call %"struct.absl::time_internal::cctz::TransitionType"* @_ZNSt3__16vectorIN4absl13time_internal4cctz14TransitionTypeENS_9allocatorIS4_EEE7emplaceIJEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector.1"* %19, %"struct.absl::time_internal::cctz::TransitionType"* %96)
  %98 = trunc i64 %1 to i32
  %99 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %97, i64 0, i32 0
  store i32 %98, i32* %99, align 8
  %100 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %97, i64 0, i32 4
  store i8 %6, i8* %100, align 8
  %101 = load i8, i8* %9, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  br label %108

106:                                              ; preds = %95
  %107 = zext i8 %101 to i64
  br label %108

108:                                              ; preds = %103, %106
  %109 = phi i64 [ %105, %103 ], [ %107, %106 ]
  %110 = icmp eq i64 %86, %109
  br i1 %110, label %111, label %126

111:                                              ; preds = %108
  %112 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %121 = zext i8 %114 to i64
  %122 = select i1 %115, i8* %117, i8* %120
  %123 = select i1 %115, i64 %119, i64 %121
  %124 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %7, i8* %122, i64 %123) #17
  %125 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %7, i64 1, i8 signext 0) #17
  br label %126

126:                                              ; preds = %111, %108
  %127 = trunc i64 %86 to i8
  %128 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %97, i64 0, i32 5
  store i8 %127, i8* %128, align 1
  br label %129

129:                                              ; preds = %126, %89
  %130 = trunc i64 %85 to i8
  store i8 %130, i8* %4, align 1
  br label %131

131:                                              ; preds = %84, %129
  %132 = phi i1 [ true, %129 ], [ false, %84 ]
  ret i1 %132
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.absl::time_internal::cctz::TransitionType"* @_ZNSt3__16vectorIN4absl13time_internal4cctz14TransitionTypeENS_9allocatorIS4_EEE7emplaceIJEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector.1"*, %"struct.absl::time_internal::cctz::TransitionType"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [3 x i8], align 1
  %4 = alloca [11 x i8], align 1
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %10, align 8
  %12 = icmp ult %"struct.absl::time_internal::cctz::TransitionType"* %9, %11
  %13 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %9 to i64
  %14 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %11 to i64
  br i1 %12, label %15, label %77

15:                                               ; preds = %2
  %16 = icmp eq %"struct.absl::time_internal::cctz::TransitionType"* %9, %1
  br i1 %16, label %17, label %34

17:                                               ; preds = %15
  %18 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 48, i1 false) #17
  %19 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 2, i32 0, i32 0
  store i64 1970, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 2, i32 0, i32 1
  store i8 1, i8* %20, align 8
  %21 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 2, i32 0, i32 2
  store i8 1, i8* %21, align 1
  %22 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 2, i32 0, i32 3
  store i8 0, i8* %22, align 2
  %23 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 2, i32 0, i32 4
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 2, i32 0, i32 5
  store i8 0, i8* %24, align 4
  %25 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 3, i32 0, i32 0
  store i64 1970, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 3, i32 0, i32 1
  store i8 1, i8* %26, align 8
  %27 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 3, i32 0, i32 2
  store i8 1, i8* %27, align 1
  %28 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 3, i32 0, i32 3
  store i8 0, i8* %28, align 2
  %29 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 3, i32 0, i32 4
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 3, i32 0, i32 5
  store i8 0, i8* %30, align 4
  %31 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 1
  %32 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %31 to i64
  %33 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %8 to i64*
  store i64 %32, i64* %33, align 8
  br label %181

34:                                               ; preds = %15
  %35 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %35)
  %36 = getelementptr inbounds [11 x i8], [11 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 11, i8* nonnull %36)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %35, i8 0, i64 3, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %36, i8 0, i64 11, i1 false)
  %37 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 1
  %38 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %37 to i64
  %39 = sub i64 %13, %38
  %40 = sdiv exact i64 %39, 48
  %41 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 %40
  %42 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %8 to i64*
  %43 = icmp ult %"struct.absl::time_internal::cctz::TransitionType"* %41, %9
  br i1 %43, label %54, label %46

44:                                               ; preds = %54
  %45 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %60 to i64
  br label %46

46:                                               ; preds = %44, %34
  %47 = phi i64 [ %45, %44 ], [ %13, %34 ]
  store i64 %47, i64* %42, align 8
  %48 = icmp eq i64 %39, 0
  br i1 %48, label %62, label %49

49:                                               ; preds = %46
  %50 = sdiv exact i64 %39, -48
  %51 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %9, i64 %50
  %52 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %51 to i8*
  %53 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 %39, i1 false) #17
  br label %62

54:                                               ; preds = %34, %54
  %55 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %60, %54 ], [ %9, %34 ]
  %56 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %59, %54 ], [ %41, %34 ]
  %57 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %55 to i8*
  %58 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 48, i1 false) #17
  %59 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %56, i64 1
  %60 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %55, i64 1
  %61 = icmp ult %"struct.absl::time_internal::cctz::TransitionType"* %59, %9
  br i1 %61, label %54, label %44

62:                                               ; preds = %46, %49
  %63 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %1 to <2 x i64>*
  store <2 x i64> <i64 0, i64 1970>, <2 x i64>* %63, align 8
  %64 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 2, i32 0, i32 1
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 2, i32 0, i32 2
  store i8 1, i8* %65, align 1
  %66 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 2, i32 0, i32 3
  store i8 0, i8* %66, align 2
  %67 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 2, i32 0, i32 4
  store i8 0, i8* %67, align 1
  %68 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 2, i32 0, i32 5
  store i8 0, i8* %68, align 4
  %69 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 2, i32 0, i32 6, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* nonnull align 1 %35, i64 3, i1 false)
  %70 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 3, i32 0, i32 0
  store i64 1970, i64* %70, align 8
  %71 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 3, i32 0, i32 1
  store i8 1, i8* %71, align 8
  %72 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 3, i32 0, i32 2
  store i8 1, i8* %72, align 1
  %73 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 3, i32 0, i32 3
  store i8 0, i8* %73, align 2
  %74 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 3, i32 0, i32 4
  store i8 0, i8* %74, align 1
  %75 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 3, i32 0, i32 5
  store i8 0, i8* %75, align 4
  %76 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %1, i64 0, i32 3, i32 0, i32 6, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* nonnull align 1 %36, i64 5, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %35)
  call void @llvm.lifetime.end.p0i8(i64 11, i8* nonnull %36)
  br label %181

77:                                               ; preds = %2
  %78 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2
  %79 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %79) #17
  %80 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %81 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %82 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %83 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %85 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %8 to i64*
  %86 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %87 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 40, i1 false)
  %88 = load i64, i64* %86, align 8
  %89 = sub i64 %13, %88
  %90 = sdiv exact i64 %89, 48
  %91 = add nsw i64 %90, 1
  %92 = icmp ugt i64 %91, 384307168202282325
  br i1 %92, label %93, label %95

93:                                               ; preds = %77
  %94 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %94) #19
  unreachable

95:                                               ; preds = %77
  %96 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %10 to i64*
  %97 = sub i64 %14, %88
  %98 = sdiv exact i64 %97, 48
  %99 = icmp ult i64 %98, 192153584101141162
  br i1 %99, label %104, label %100

100:                                              ; preds = %95
  %101 = sub i64 %6, %88
  %102 = sdiv exact i64 %101, 48
  store %"struct.absl::time_internal::cctz::TransitionType"* null, %"struct.absl::time_internal::cctz::TransitionType"** %83, align 8
  %103 = bitcast %"class.std::__1::allocator.6"** %84 to %"class.std::__1::__compressed_pair.3"**
  store %"class.std::__1::__compressed_pair.3"* %78, %"class.std::__1::__compressed_pair.3"** %103, align 8
  br label %112

104:                                              ; preds = %95
  %105 = shl nsw i64 %98, 1
  %106 = icmp ult i64 %105, %91
  %107 = select i1 %106, i64 %91, i64 %105
  %108 = sub i64 %6, %88
  %109 = sdiv exact i64 %108, 48
  store %"struct.absl::time_internal::cctz::TransitionType"* null, %"struct.absl::time_internal::cctz::TransitionType"** %83, align 8
  %110 = bitcast %"class.std::__1::allocator.6"** %84 to %"class.std::__1::__compressed_pair.3"**
  store %"class.std::__1::__compressed_pair.3"* %78, %"class.std::__1::__compressed_pair.3"** %110, align 8
  %111 = icmp eq i64 %107, 0
  br i1 %111, label %118, label %112

112:                                              ; preds = %104, %100
  %113 = phi i64 [ %102, %100 ], [ %109, %104 ]
  %114 = phi i64 [ 384307168202282325, %100 ], [ %107, %104 ]
  %115 = mul i64 %114, 48
  %116 = tail call i8* @_Znwm(i64 %115) #18
  %117 = bitcast i8* %116 to %"struct.absl::time_internal::cctz::TransitionType"*
  br label %118

118:                                              ; preds = %104, %112
  %119 = phi i64 [ %113, %112 ], [ %109, %104 ]
  %120 = phi i64 [ %114, %112 ], [ 0, %104 ]
  %121 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %117, %112 ], [ null, %104 ]
  store %"struct.absl::time_internal::cctz::TransitionType"* %121, %"struct.absl::time_internal::cctz::TransitionType"** %80, align 8
  %122 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %121, i64 %119
  store %"struct.absl::time_internal::cctz::TransitionType"* %122, %"struct.absl::time_internal::cctz::TransitionType"** %82, align 8
  store %"struct.absl::time_internal::cctz::TransitionType"* %122, %"struct.absl::time_internal::cctz::TransitionType"** %81, align 8
  %123 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %121, i64 %120
  store %"struct.absl::time_internal::cctz::TransitionType"* %123, %"struct.absl::time_internal::cctz::TransitionType"** %83, align 8
  call void @_ZNSt3__114__split_bufferIN4absl13time_internal4cctz14TransitionTypeERNS_9allocatorIS4_EEE12emplace_backIJEEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5)
  %124 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %81, align 8
  %125 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %7, align 8
  %126 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %125 to i64
  %127 = sub i64 %6, %126
  %128 = sdiv exact i64 %127, -48
  %129 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %124, i64 %128
  store %"struct.absl::time_internal::cctz::TransitionType"* %129, %"struct.absl::time_internal::cctz::TransitionType"** %81, align 8
  %130 = icmp sgt i64 %127, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %118
  %132 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %129 to i8*
  %133 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %125 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 %127, i1 false) #17
  br label %134

134:                                              ; preds = %131, %118
  %135 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %8, align 8
  %136 = icmp eq %"struct.absl::time_internal::cctz::TransitionType"* %135, %1
  br i1 %136, label %137, label %141

137:                                              ; preds = %134
  %138 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %135 to i64
  %139 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %82 to i64*
  %140 = load i64, i64* %139, align 8
  br label %155

141:                                              ; preds = %134
  %142 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %82, align 8
  br label %143

143:                                              ; preds = %143, %141
  %144 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %142, %141 ], [ %149, %143 ]
  %145 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %1, %141 ], [ %148, %143 ]
  %146 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %144 to i8*
  %147 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 48, i1 false) #17
  %148 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %145, i64 1
  %149 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %144, i64 1
  %150 = icmp eq %"struct.absl::time_internal::cctz::TransitionType"* %148, %135
  br i1 %150, label %151, label %143

151:                                              ; preds = %143
  store %"struct.absl::time_internal::cctz::TransitionType"* %149, %"struct.absl::time_internal::cctz::TransitionType"** %82, align 8
  %152 = load i64, i64* %85, align 8
  %153 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %149 to i64
  %154 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %82 to i64*
  br label %155

155:                                              ; preds = %137, %151
  %156 = phi i64* [ %139, %137 ], [ %154, %151 ]
  %157 = phi i64 [ %140, %137 ], [ %153, %151 ]
  %158 = phi i64 [ %138, %137 ], [ %152, %151 ]
  %159 = load i64, i64* %86, align 8
  %160 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %81 to i64*
  %161 = load i64, i64* %160, align 8
  store i64 %161, i64* %86, align 8
  store i64 %159, i64* %160, align 8
  store i64 %157, i64* %85, align 8
  store i64 %158, i64* %156, align 8
  %162 = load i64, i64* %96, align 8
  %163 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %83 to i64*
  %164 = load i64, i64* %163, align 8
  store i64 %164, i64* %96, align 8
  store i64 %162, i64* %163, align 8
  %165 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %159, i64* %165, align 8
  %166 = inttoptr i64 %159 to %"struct.absl::time_internal::cctz::TransitionType"*
  %167 = inttoptr i64 %158 to %"struct.absl::time_internal::cctz::TransitionType"*
  %168 = icmp eq %"struct.absl::time_internal::cctz::TransitionType"* %167, %166
  br i1 %168, label %176, label %169

169:                                              ; preds = %155
  %170 = getelementptr %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %167, i64 -1, i32 0
  %171 = ptrtoint i32* %170 to i64
  %172 = sub i64 %171, %159
  %173 = udiv i64 %172, 48
  %174 = xor i64 %173, -1
  %175 = getelementptr %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %167, i64 %174
  store %"struct.absl::time_internal::cctz::TransitionType"* %175, %"struct.absl::time_internal::cctz::TransitionType"** %82, align 8
  br label %176

176:                                              ; preds = %169, %155
  %177 = icmp eq i64 %159, 0
  br i1 %177, label %180, label %178

178:                                              ; preds = %176
  %179 = inttoptr i64 %159 to i8*
  call void @_ZdlPv(i8* %179) #18
  br label %180

180:                                              ; preds = %176, %178
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %79) #17
  br label %181

181:                                              ; preds = %17, %62, %180
  %182 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %1, %17 ], [ %1, %62 ], [ %124, %180 ]
  ret %"struct.absl::time_internal::cctz::TransitionType"* %182
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4absl13time_internal4cctz12TimeZoneInfo17ExtendTransitionsEv(%"class.absl::time_internal::cctz::TimeZoneInfo"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.absl::time_internal::cctz::PosixTimeZone", align 8
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca %"struct.absl::time_internal::cctz::Transition", align 8
  %6 = alloca %"struct.absl::time_internal::cctz::Transition", align 8
  %7 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 7
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 6
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  br label %18

16:                                               ; preds = %1
  %17 = zext i8 %11 to i64
  br label %18

18:                                               ; preds = %13, %16
  %19 = phi i64 [ %15, %13 ], [ %17, %16 ]
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %517, label %21

21:                                               ; preds = %18
  %22 = bitcast %"struct.absl::time_internal::cctz::PosixTimeZone"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %22) #17
  %23 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTimeZone", %"struct.absl::time_internal::cctz::PosixTimeZone"* %2, i64 0, i32 1
  %24 = bitcast i64* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 88, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #17
  %25 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTimeZone", %"struct.absl::time_internal::cctz::PosixTimeZone"* %2, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #17
  %27 = call zeroext i1 @_ZN4absl13time_internal4cctz14ParsePosixSpecERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS1_13PosixTimeZoneE(%"class.std::__1::basic_string"* dereferenceable(24) %8, %"struct.absl::time_internal::cctz::PosixTimeZone"* nonnull %2) #17
  br i1 %27, label %28, label %499

28:                                               ; preds = %21
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17
  store i8 -86, i8* %3, align 1
  %29 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTimeZone", %"struct.absl::time_internal::cctz::PosixTimeZone"* %2, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTimeZone", %"struct.absl::time_internal::cctz::PosixTimeZone"* %2, i64 0, i32 0
  %32 = call zeroext i1 @_ZN4absl13time_internal4cctz12TimeZoneInfo17GetTransitionTypeElbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPh(%"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 %30, i1 zeroext false, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %31, i8* nonnull %3)
  br i1 %32, label %33, label %497

33:                                               ; preds = %28
  %34 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTimeZone", %"struct.absl::time_internal::cctz::PosixTimeZone"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %36 to i64
  %41 = select i1 %37, i64 %39, i64 %40
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %72

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %45 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %44, align 8
  %46 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %45, i64 -1, i32 1
  %47 = load i8, i8* %46, align 8
  %48 = load i8, i8* %3, align 1
  %49 = icmp eq i8 %47, %48
  br i1 %49, label %497, label %50

50:                                               ; preds = %43
  %51 = zext i8 %47 to i64
  %52 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %53 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %52, align 8
  %54 = zext i8 %48 to i64
  %55 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %53, i64 %51, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %53, i64 %54, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %60, label %497

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %53, i64 %51, i32 4
  %62 = load i8, i8* %61, align 8, !range !11
  %63 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %53, i64 %54, i32 4
  %64 = load i8, i8* %63, align 8, !range !11
  %65 = icmp eq i8 %62, %64
  br i1 %65, label %66, label %497

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %53, i64 %51, i32 5
  %68 = load i8, i8* %67, align 1
  %69 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %53, i64 %54, i32 5
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %68, %70
  br label %497

72:                                               ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 -86, i8* %4, align 1
  %73 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTimeZone", %"struct.absl::time_internal::cctz::PosixTimeZone"* %2, i64 0, i32 3
  %74 = load i64, i64* %73, align 8
  %75 = call zeroext i1 @_ZN4absl13time_internal4cctz12TimeZoneInfo17GetTransitionTypeElbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPh(%"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 %74, i1 zeroext true, %"class.std::__1::basic_string"* dereferenceable(24) %25, i8* nonnull %4)
  br i1 %75, label %76, label %495

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1
  %78 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %79 = bitcast %"struct.absl::time_internal::cctz::Transition"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.std::__1::vector"* %77 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %80, %82
  %84 = sdiv exact i64 %83, 48
  %85 = add nsw i64 %84, 802
  %86 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"struct.absl::time_internal::cctz::Transition"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %88, %82
  %90 = sdiv exact i64 %89, 48
  %91 = icmp ult i64 %90, %85
  %92 = inttoptr i64 %80 to %"struct.absl::time_internal::cctz::Transition"*
  br i1 %91, label %93, label %116

93:                                               ; preds = %76
  %94 = icmp ugt i64 %85, 384307168202282325
  br i1 %94, label %95, label %96

95:                                               ; preds = %93
  call void @abort() #19
  unreachable

96:                                               ; preds = %93
  %97 = add i64 %83, 38496
  %98 = call i8* @_Znwm(i64 %97) #18
  %99 = bitcast i8* %98 to %"struct.absl::time_internal::cctz::Transition"*
  %100 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %99, i64 %84
  %101 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %100 to i64
  %102 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %99, i64 %85
  %103 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %102 to i64
  %104 = sdiv exact i64 %83, -48
  %105 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %100, i64 %104
  %106 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %105 to i64
  %107 = icmp sgt i64 %83, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %96
  %109 = bitcast %"struct.absl::time_internal::cctz::Transition"* %105 to i8*
  %110 = inttoptr i64 %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 %83, i1 false) #17
  br label %111

111:                                              ; preds = %108, %96
  store i64 %106, i64* %81, align 8
  store i64 %101, i64* %79, align 8
  store i64 %103, i64* %87, align 8
  %112 = icmp eq i64 %82, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %111
  %114 = inttoptr i64 %82 to i8*
  call void @_ZdlPv(i8* %114) #18
  %115 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %78, align 8
  br label %116

116:                                              ; preds = %76, %111, %113
  %117 = phi %"struct.absl::time_internal::cctz::Transition"* [ %92, %76 ], [ %100, %111 ], [ %115, %113 ]
  store i8 1, i8* %7, align 8
  %118 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %117, i64 -1, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %117, i64 -1, i32 1
  %121 = load i8, i8* %120, align 8
  %122 = zext i8 %121 to i64
  %123 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %124 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %123, align 8
  %125 = sdiv i64 %119, 60
  %126 = srem i64 %119, 60
  %127 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 1970, i64 1, i64 1, i64 0, i64 %125, i64 %126) #17, !noalias !12
  %128 = extractvalue { i64, i64 } %127, 0
  %129 = extractvalue { i64, i64 } %127, 1
  %130 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %124, i64 %122, i32 0
  %131 = load i32, i32* %130, align 8, !noalias !12
  %132 = sext i32 %131 to i64
  %133 = shl i64 %129, 56
  %134 = ashr exact i64 %133, 56
  %135 = shl i64 %129, 48
  %136 = ashr i64 %135, 56
  %137 = shl i64 %129, 40
  %138 = ashr i64 %137, 56
  %139 = shl i64 %129, 32
  %140 = ashr i64 %139, 56
  %141 = sdiv i64 %132, 60
  %142 = add nsw i64 %140, %141
  %143 = shl i64 %129, 24
  %144 = ashr i64 %143, 56
  %145 = srem i64 %132, 60
  %146 = add nsw i64 %144, %145
  %147 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %128, i64 %134, i64 %136, i64 %138, i64 %142, i64 %146) #17, !noalias !12
  %148 = extractvalue { i64, i64 } %147, 0
  %149 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 8
  store i64 %148, i64* %149, align 8
  %150 = and i64 %148, 3
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %159

152:                                              ; preds = %116
  %153 = srem i64 %148, 100
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %159

155:                                              ; preds = %152
  %156 = srem i64 %148, 400
  %157 = icmp eq i64 %156, 0
  %158 = zext i1 %157 to i8
  br label %159

159:                                              ; preds = %116, %152, %155
  %160 = phi i8 [ 0, %116 ], [ 1, %152 ], [ %158, %155 ]
  %161 = call i64 @_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa(i64 %148, i8 signext 1, i8 signext 1, i64 1970, i8 signext 1, i8 signext 1) #17
  %162 = mul i64 %161, 86400
  %163 = srem i64 %148, 400
  %164 = add nsw i64 %163, 2399
  %165 = sdiv i64 %164, 4
  %166 = sdiv i64 %164, -100
  %167 = sdiv i64 %164, 400
  %168 = add nsw i64 %163, 2400
  %169 = add nsw i64 %168, %166
  %170 = add nuw nsw i64 %169, %165
  %171 = add nuw nsw i64 %170, %167
  %172 = srem i64 %171, 7
  %173 = add nuw nsw i64 %172, 6
  %174 = getelementptr inbounds [13 x i32], [13 x i32]* @_ZZN4absl13time_internal4cctz6detail11get_weekdayERKNS2_10civil_timeINS2_10second_tagEEEE20k_weekday_by_mon_off, i64 0, i64 %173
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i64 %172, 0
  %177 = add i32 %175, 1
  %178 = select i1 %176, i32 0, i32 %177
  %179 = bitcast %"struct.absl::time_internal::cctz::Transition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %179) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %179, i8 -86, i64 48, i1 false)
  %180 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 0
  store i64 0, i64* %180, align 8
  %181 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 1
  %182 = load i8, i8* %4, align 1
  store i8 %182, i8* %181, align 8
  %183 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 3, i32 0, i32 0
  store i64 1970, i64* %183, align 8
  %184 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 3, i32 0, i32 1
  store i8 1, i8* %184, align 8
  %185 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 3, i32 0, i32 2
  store i8 1, i8* %185, align 1
  %186 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 3, i32 0, i32 3
  store i8 0, i8* %186, align 2
  %187 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 3, i32 0, i32 4
  store i8 0, i8* %187, align 1
  %188 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 3, i32 0, i32 5
  store i8 0, i8* %188, align 4
  %189 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 4, i32 0, i32 0
  store i64 1970, i64* %189, align 8
  %190 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 4, i32 0, i32 1
  store i8 1, i8* %190, align 8
  %191 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 4, i32 0, i32 2
  store i8 1, i8* %191, align 1
  %192 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 4, i32 0, i32 3
  store i8 0, i8* %192, align 2
  %193 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 4, i32 0, i32 4
  store i8 0, i8* %193, align 1
  %194 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 4, i32 0, i32 5
  store i8 0, i8* %194, align 4
  %195 = bitcast %"struct.absl::time_internal::cctz::Transition"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %195) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 -86, i64 48, i1 false)
  %196 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %6, i64 0, i32 0
  store i64 0, i64* %196, align 8
  %197 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %6, i64 0, i32 1
  %198 = load i8, i8* %3, align 1
  store i8 %198, i8* %197, align 8
  %199 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %6, i64 0, i32 3, i32 0, i32 0
  store i64 1970, i64* %199, align 8
  %200 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %6, i64 0, i32 3, i32 0, i32 1
  store i8 1, i8* %200, align 8
  %201 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %6, i64 0, i32 3, i32 0, i32 2
  store i8 1, i8* %201, align 1
  %202 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %6, i64 0, i32 3, i32 0, i32 3
  store i8 0, i8* %202, align 2
  %203 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %6, i64 0, i32 3, i32 0, i32 4
  store i8 0, i8* %203, align 1
  %204 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %6, i64 0, i32 3, i32 0, i32 5
  store i8 0, i8* %204, align 4
  %205 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %6, i64 0, i32 4, i32 0, i32 0
  store i64 1970, i64* %205, align 8
  %206 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %6, i64 0, i32 4, i32 0, i32 1
  store i8 1, i8* %206, align 8
  %207 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %6, i64 0, i32 4, i32 0, i32 2
  store i8 1, i8* %207, align 1
  %208 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %6, i64 0, i32 4, i32 0, i32 3
  store i8 0, i8* %208, align 2
  %209 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %6, i64 0, i32 4, i32 0, i32 4
  store i8 0, i8* %209, align 1
  %210 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %6, i64 0, i32 4, i32 0, i32 5
  store i8 0, i8* %210, align 4
  %211 = load i64, i64* %149, align 8
  %212 = add nsw i64 %211, 400
  %213 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTimeZone", %"struct.absl::time_internal::cctz::PosixTimeZone"* %2, i64 0, i32 4, i32 0, i32 0
  %214 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTimeZone", %"struct.absl::time_internal::cctz::PosixTimeZone"* %2, i64 0, i32 4, i32 0, i32 1
  %215 = bitcast %union.anon.17* %214 to %"struct.absl::time_internal::cctz::PosixTransition::Date::MonthWeekWeekday"*
  %216 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTransition::Date::MonthWeekWeekday", %"struct.absl::time_internal::cctz::PosixTransition::Date::MonthWeekWeekday"* %215, i64 0, i32 1
  %217 = bitcast %union.anon.17* %214 to i8*
  %218 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTransition::Date::MonthWeekWeekday", %"struct.absl::time_internal::cctz::PosixTransition::Date::MonthWeekWeekday"* %215, i64 0, i32 2
  %219 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTimeZone", %"struct.absl::time_internal::cctz::PosixTimeZone"* %2, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %220 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTimeZone", %"struct.absl::time_internal::cctz::PosixTimeZone"* %2, i64 0, i32 4, i32 1, i32 0
  %221 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTimeZone", %"struct.absl::time_internal::cctz::PosixTimeZone"* %2, i64 0, i32 5, i32 0, i32 0
  %222 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTimeZone", %"struct.absl::time_internal::cctz::PosixTimeZone"* %2, i64 0, i32 5, i32 0, i32 1
  %223 = bitcast %union.anon.17* %222 to %"struct.absl::time_internal::cctz::PosixTransition::Date::MonthWeekWeekday"*
  %224 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTransition::Date::MonthWeekWeekday", %"struct.absl::time_internal::cctz::PosixTransition::Date::MonthWeekWeekday"* %223, i64 0, i32 1
  %225 = bitcast %union.anon.17* %222 to i8*
  %226 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTransition::Date::MonthWeekWeekday", %"struct.absl::time_internal::cctz::PosixTransition::Date::MonthWeekWeekday"* %223, i64 0, i32 2
  %227 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTimeZone", %"struct.absl::time_internal::cctz::PosixTimeZone"* %2, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %228 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTimeZone", %"struct.absl::time_internal::cctz::PosixTimeZone"* %2, i64 0, i32 5, i32 1, i32 0
  %229 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %77, i64 0, i32 0, i32 0
  br label %230

230:                                              ; preds = %491, %159
  %231 = phi i64 [ %162, %159 ], [ %475, %491 ]
  %232 = phi i8 [ %160, %159 ], [ %493, %491 ]
  %233 = phi i32 [ %178, %159 ], [ %479, %491 ]
  %234 = icmp ne i8 %232, 0
  %235 = load i32, i32* %213, align 8
  switch i32 %235, label %278 [
    i32 0, label %236
    i32 1, label %243
    i32 2, label %245
  ]

236:                                              ; preds = %230
  %237 = load i64, i64* %219, align 8
  %238 = xor i1 %234, true
  %239 = icmp slt i64 %237, 60
  %240 = or i1 %239, %238
  %241 = zext i1 %240 to i64
  %242 = sub i64 %237, %241
  br label %278

243:                                              ; preds = %230
  %244 = load i64, i64* %219, align 8
  br label %278

245:                                              ; preds = %230
  %246 = load i8, i8* %216, align 1
  %247 = icmp eq i8 %246, 5
  %248 = zext i8 %232 to i64
  %249 = load i8, i8* %217, align 8
  %250 = sext i8 %249 to i64
  %251 = zext i1 %247 to i64
  %252 = add nsw i64 %250, %251
  %253 = getelementptr inbounds [2 x [14 x i16]], [2 x [14 x i16]]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_113kMonthOffsetsE, i64 0, i64 %248, i64 %252
  %254 = load i16, i16* %253, align 2
  %255 = sext i16 %254 to i64
  %256 = sext i32 %233 to i64
  %257 = add nsw i64 %255, %256
  %258 = srem i64 %257, 7
  br i1 %247, label %259, label %267

259:                                              ; preds = %245
  %260 = add nsw i64 %258, 6
  %261 = load i8, i8* %218, align 2
  %262 = sext i8 %261 to i64
  %263 = sub nsw i64 %260, %262
  %264 = srem i64 %263, 7
  %265 = xor i64 %264, -1
  %266 = add nsw i64 %265, %255
  br label %278

267:                                              ; preds = %245
  %268 = sext i8 %246 to i64
  %269 = load i8, i8* %218, align 2
  %270 = sext i8 %269 to i64
  %271 = sub nsw i64 7, %258
  %272 = add nsw i64 %271, %270
  %273 = srem i64 %272, 7
  %274 = mul nsw i64 %268, 7
  %275 = add nsw i64 %274, -7
  %276 = add nsw i64 %275, %255
  %277 = add nsw i64 %276, %273
  br label %278

278:                                              ; preds = %230, %236, %243, %259, %267
  %279 = phi i64 [ 0, %230 ], [ %244, %243 ], [ %266, %259 ], [ %277, %267 ], [ %242, %236 ]
  %280 = mul nsw i64 %279, 86400
  %281 = load i64, i64* %220, align 8
  %282 = load i32, i32* %221, align 8
  switch i32 %282, label %325 [
    i32 0, label %283
    i32 1, label %290
    i32 2, label %292
  ]

283:                                              ; preds = %278
  %284 = load i64, i64* %227, align 8
  %285 = xor i1 %234, true
  %286 = icmp slt i64 %284, 60
  %287 = or i1 %286, %285
  %288 = zext i1 %287 to i64
  %289 = sub i64 %284, %288
  br label %325

290:                                              ; preds = %278
  %291 = load i64, i64* %227, align 8
  br label %325

292:                                              ; preds = %278
  %293 = load i8, i8* %224, align 1
  %294 = icmp eq i8 %293, 5
  %295 = zext i8 %232 to i64
  %296 = load i8, i8* %225, align 8
  %297 = sext i8 %296 to i64
  %298 = zext i1 %294 to i64
  %299 = add nsw i64 %297, %298
  %300 = getelementptr inbounds [2 x [14 x i16]], [2 x [14 x i16]]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_113kMonthOffsetsE, i64 0, i64 %295, i64 %299
  %301 = load i16, i16* %300, align 2
  %302 = sext i16 %301 to i64
  %303 = sext i32 %233 to i64
  %304 = add nsw i64 %302, %303
  %305 = srem i64 %304, 7
  br i1 %294, label %306, label %314

306:                                              ; preds = %292
  %307 = add nsw i64 %305, 6
  %308 = load i8, i8* %226, align 2
  %309 = sext i8 %308 to i64
  %310 = sub nsw i64 %307, %309
  %311 = srem i64 %310, 7
  %312 = xor i64 %311, -1
  %313 = add nsw i64 %312, %302
  br label %325

314:                                              ; preds = %292
  %315 = sext i8 %293 to i64
  %316 = load i8, i8* %226, align 2
  %317 = sext i8 %316 to i64
  %318 = sub nsw i64 7, %305
  %319 = add nsw i64 %318, %317
  %320 = srem i64 %319, 7
  %321 = mul nsw i64 %315, 7
  %322 = add nsw i64 %321, -7
  %323 = add nsw i64 %322, %302
  %324 = add nsw i64 %323, %320
  br label %325

325:                                              ; preds = %278, %283, %290, %306, %314
  %326 = phi i64 [ 0, %278 ], [ %291, %290 ], [ %313, %306 ], [ %324, %314 ], [ %289, %283 ]
  %327 = mul nsw i64 %326, 86400
  %328 = load i64, i64* %228, align 8
  %329 = load i64, i64* %29, align 8
  %330 = add i64 %281, %231
  %331 = add i64 %330, %280
  %332 = sub i64 %331, %329
  store i64 %332, i64* %180, align 8
  %333 = load i64, i64* %73, align 8
  %334 = add i64 %328, %231
  %335 = add i64 %334, %327
  %336 = sub i64 %335, %333
  store i64 %336, i64* %196, align 8
  %337 = icmp slt i64 %332, %336
  %338 = select i1 %337, %"struct.absl::time_internal::cctz::Transition"* %5, %"struct.absl::time_internal::cctz::Transition"* %6
  %339 = select i1 %337, %"struct.absl::time_internal::cctz::Transition"* %6, %"struct.absl::time_internal::cctz::Transition"* %5
  %340 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %339, i64 0, i32 0
  %341 = load i64, i64* %340, align 8
  %342 = icmp slt i64 %119, %341
  br i1 %342, label %343, label %467

343:                                              ; preds = %325
  %344 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %338, i64 0, i32 0
  %345 = load i64, i64* %344, align 8
  %346 = icmp slt i64 %119, %345
  br i1 %346, label %347, label %407

347:                                              ; preds = %343
  %348 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %78, align 8
  %349 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %86, align 8
  %350 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %348, %349
  %351 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %349 to i64
  br i1 %350, label %357, label %352

352:                                              ; preds = %347
  %353 = bitcast %"struct.absl::time_internal::cctz::Transition"* %348 to i8*
  %354 = bitcast %"struct.absl::time_internal::cctz::Transition"* %338 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %353, i8* nonnull align 8 %354, i64 48, i1 false) #17
  %355 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %348, i64 1
  %356 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %355 to i64
  store i64 %356, i64* %79, align 8
  br label %407

357:                                              ; preds = %347
  %358 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %348 to i64
  %359 = load i64, i64* %81, align 8
  %360 = sub i64 %358, %359
  %361 = sdiv exact i64 %360, 48
  %362 = add nsw i64 %361, 1
  %363 = icmp ugt i64 %362, 384307168202282325
  br i1 %363, label %364, label %366

364:                                              ; preds = %357
  %365 = bitcast %"class.std::__1::vector"* %77 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %365) #19
  unreachable

366:                                              ; preds = %357
  %367 = sub i64 %351, %359
  %368 = sdiv exact i64 %367, 48
  %369 = icmp ult i64 %368, 192153584101141162
  br i1 %369, label %370, label %375

370:                                              ; preds = %366
  %371 = shl nsw i64 %368, 1
  %372 = icmp ult i64 %371, %362
  %373 = select i1 %372, i64 %362, i64 %371
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %380, label %375

375:                                              ; preds = %370, %366
  %376 = phi i64 [ %373, %370 ], [ 384307168202282325, %366 ]
  %377 = mul i64 %376, 48
  %378 = call i8* @_Znwm(i64 %377) #18
  %379 = bitcast i8* %378 to %"struct.absl::time_internal::cctz::Transition"*
  br label %380

380:                                              ; preds = %375, %370
  %381 = phi i64 [ %376, %375 ], [ 0, %370 ]
  %382 = phi %"struct.absl::time_internal::cctz::Transition"* [ %379, %375 ], [ null, %370 ]
  %383 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %382, i64 %361
  %384 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %382, i64 %381
  %385 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %384 to i64
  %386 = bitcast %"struct.absl::time_internal::cctz::Transition"* %383 to i8*
  %387 = bitcast %"struct.absl::time_internal::cctz::Transition"* %338 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %386, i8* nonnull align 8 %387, i64 48, i1 false) #17
  %388 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %383, i64 1
  %389 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %388 to i64
  %390 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %229, align 8
  %391 = load i64, i64* %79, align 8
  %392 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %390 to i64
  %393 = sub i64 %391, %392
  %394 = sdiv exact i64 %393, -48
  %395 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %383, i64 %394
  %396 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %395 to i64
  %397 = icmp sgt i64 %393, 0
  br i1 %397, label %398, label %402

398:                                              ; preds = %380
  %399 = bitcast %"struct.absl::time_internal::cctz::Transition"* %395 to i8*
  %400 = bitcast %"struct.absl::time_internal::cctz::Transition"* %390 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %399, i8* align 8 %400, i64 %393, i1 false) #17
  %401 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %229, align 8
  br label %402

402:                                              ; preds = %398, %380
  %403 = phi %"struct.absl::time_internal::cctz::Transition"* [ %390, %380 ], [ %401, %398 ]
  store i64 %396, i64* %81, align 8
  store i64 %389, i64* %79, align 8
  store i64 %385, i64* %87, align 8
  %404 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %403, null
  br i1 %404, label %407, label %405

405:                                              ; preds = %402
  %406 = bitcast %"struct.absl::time_internal::cctz::Transition"* %403 to i8*
  call void @_ZdlPv(i8* %406) #18
  br label %407

407:                                              ; preds = %405, %402, %352, %343
  %408 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %78, align 8
  %409 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %86, align 8
  %410 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %408, %409
  %411 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %409 to i64
  br i1 %410, label %417, label %412

412:                                              ; preds = %407
  %413 = bitcast %"struct.absl::time_internal::cctz::Transition"* %408 to i8*
  %414 = bitcast %"struct.absl::time_internal::cctz::Transition"* %339 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %413, i8* nonnull align 8 %414, i64 48, i1 false) #17
  %415 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %408, i64 1
  %416 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %415 to i64
  store i64 %416, i64* %79, align 8
  br label %467

417:                                              ; preds = %407
  %418 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %408 to i64
  %419 = load i64, i64* %81, align 8
  %420 = sub i64 %418, %419
  %421 = sdiv exact i64 %420, 48
  %422 = add nsw i64 %421, 1
  %423 = icmp ugt i64 %422, 384307168202282325
  br i1 %423, label %424, label %426

424:                                              ; preds = %417
  %425 = bitcast %"class.std::__1::vector"* %77 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %425) #19
  unreachable

426:                                              ; preds = %417
  %427 = sub i64 %411, %419
  %428 = sdiv exact i64 %427, 48
  %429 = icmp ult i64 %428, 192153584101141162
  br i1 %429, label %430, label %435

430:                                              ; preds = %426
  %431 = shl nsw i64 %428, 1
  %432 = icmp ult i64 %431, %422
  %433 = select i1 %432, i64 %422, i64 %431
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %440, label %435

435:                                              ; preds = %430, %426
  %436 = phi i64 [ %433, %430 ], [ 384307168202282325, %426 ]
  %437 = mul i64 %436, 48
  %438 = call i8* @_Znwm(i64 %437) #18
  %439 = bitcast i8* %438 to %"struct.absl::time_internal::cctz::Transition"*
  br label %440

440:                                              ; preds = %435, %430
  %441 = phi i64 [ %436, %435 ], [ 0, %430 ]
  %442 = phi %"struct.absl::time_internal::cctz::Transition"* [ %439, %435 ], [ null, %430 ]
  %443 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %442, i64 %421
  %444 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %442, i64 %441
  %445 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %444 to i64
  %446 = bitcast %"struct.absl::time_internal::cctz::Transition"* %443 to i8*
  %447 = bitcast %"struct.absl::time_internal::cctz::Transition"* %339 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %446, i8* nonnull align 8 %447, i64 48, i1 false) #17
  %448 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %443, i64 1
  %449 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %448 to i64
  %450 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %229, align 8
  %451 = load i64, i64* %79, align 8
  %452 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %450 to i64
  %453 = sub i64 %451, %452
  %454 = sdiv exact i64 %453, -48
  %455 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %443, i64 %454
  %456 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %455 to i64
  %457 = icmp sgt i64 %453, 0
  br i1 %457, label %458, label %462

458:                                              ; preds = %440
  %459 = bitcast %"struct.absl::time_internal::cctz::Transition"* %455 to i8*
  %460 = bitcast %"struct.absl::time_internal::cctz::Transition"* %450 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %459, i8* align 8 %460, i64 %453, i1 false) #17
  %461 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %229, align 8
  br label %462

462:                                              ; preds = %458, %440
  %463 = phi %"struct.absl::time_internal::cctz::Transition"* [ %450, %440 ], [ %461, %458 ]
  store i64 %456, i64* %81, align 8
  store i64 %449, i64* %79, align 8
  store i64 %445, i64* %87, align 8
  %464 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %463, null
  br i1 %464, label %467, label %465

465:                                              ; preds = %462
  %466 = bitcast %"struct.absl::time_internal::cctz::Transition"* %463 to i8*
  call void @_ZdlPv(i8* %466) #18
  br label %467

467:                                              ; preds = %465, %462, %412, %325
  %468 = load i64, i64* %149, align 8
  %469 = icmp eq i64 %468, %212
  br i1 %469, label %494, label %470

470:                                              ; preds = %467
  %471 = zext i8 %232 to i64
  %472 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_112kSecsPerYearE, i64 0, i64 %471
  %473 = load i32, i32* %472, align 4
  %474 = sext i32 %473 to i64
  %475 = add nsw i64 %231, %474
  %476 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN4absl13time_internal4cctz12_GLOBAL__N_112kDaysPerYearE, i64 0, i64 %471
  %477 = load i32, i32* %476, align 4
  %478 = add nsw i32 %477, %233
  %479 = srem i32 %478, 7
  %480 = add nsw i64 %468, 1
  %481 = xor i1 %234, true
  %482 = and i64 %480, 3
  %483 = icmp eq i64 %482, 0
  %484 = and i1 %483, %481
  br i1 %484, label %485, label %491

485:                                              ; preds = %470
  %486 = srem i64 %480, 100
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %488, label %491

488:                                              ; preds = %485
  %489 = srem i64 %480, 400
  %490 = icmp eq i64 %489, 0
  br label %491

491:                                              ; preds = %470, %485, %488
  %492 = phi i1 [ true, %485 ], [ %490, %488 ], [ false, %470 ]
  %493 = zext i1 %492 to i8
  store i64 %480, i64* %149, align 8
  br label %230

494:                                              ; preds = %467
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %195) #17
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %179) #17
  br label %495

495:                                              ; preds = %72, %494
  %496 = phi i1 [ true, %494 ], [ false, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  br label %497

497:                                              ; preds = %66, %60, %50, %43, %28, %495
  %498 = phi i1 [ %496, %495 ], [ false, %28 ], [ true, %43 ], [ false, %50 ], [ false, %60 ], [ %71, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17
  br label %499

499:                                              ; preds = %21, %497
  %500 = phi i1 [ %498, %497 ], [ false, %21 ]
  %501 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %502 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %501, i64 0, i32 1, i32 0
  %503 = load i8, i8* %502, align 1
  %504 = icmp slt i8 %503, 0
  br i1 %504, label %505, label %508

505:                                              ; preds = %499
  %506 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %507 = load i8*, i8** %506, align 8
  call void @_ZdlPv(i8* %507) #18
  br label %508

508:                                              ; preds = %505, %499
  %509 = bitcast %"struct.absl::time_internal::cctz::PosixTimeZone"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %510 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %509, i64 0, i32 1, i32 0
  %511 = load i8, i8* %510, align 1
  %512 = icmp slt i8 %511, 0
  br i1 %512, label %513, label %516

513:                                              ; preds = %508
  %514 = getelementptr inbounds %"struct.absl::time_internal::cctz::PosixTimeZone", %"struct.absl::time_internal::cctz::PosixTimeZone"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %515 = load i8*, i8** %514, align 8
  call void @_ZdlPv(i8* %515) #18
  br label %516

516:                                              ; preds = %508, %513
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %22) #17
  br label %517

517:                                              ; preds = %18, %516
  %518 = phi i1 [ %500, %516 ], [ true, %18 ]
  ret i1 %518
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN4absl13time_internal4cctz14ParsePosixSpecERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS1_13PosixTimeZoneE(%"class.std::__1::basic_string"* dereferenceable(24), %"struct.absl::time_internal::cctz::PosixTimeZone"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4absl13time_internal4cctz12TimeZoneInfo4LoadEPNS1_14ZoneInfoSourceE(%"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::ZoneInfoSource"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca %struct.tzhead, align 1
  %7 = alloca %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", align 8
  %8 = alloca %"class.std::__1::vector.18", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %10) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %10, i8 -86, i64 44, i1 false)
  %11 = bitcast %"class.absl::time_internal::cctz::ZoneInfoSource"* %1 to i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)***
  %12 = load i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)**, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)** %12, i64 2
  %14 = load i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)** %13, align 8
  %15 = call i64 %14(%"class.absl::time_internal::cctz::ZoneInfoSource"* %1, i8* nonnull %10, i64 44) #17
  %16 = icmp eq i64 %15, 44
  br i1 %16, label %17, label %873

17:                                               ; preds = %2
  %18 = call i32 @bcmp(i8* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %873

20:                                               ; preds = %17
  %21 = bitcast %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #17
  %22 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %7, i64 0, i32 0
  %23 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %7, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %7, i64 0, i32 2
  %25 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %7, i64 0, i32 3
  %26 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %7, i64 0, i32 4
  %27 = getelementptr inbounds %"struct.absl::time_internal::cctz::TimeZoneInfo::Header", %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %7, i64 0, i32 5
  %28 = bitcast %"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 48, i1 false)
  %29 = call zeroext i1 @_ZN4absl13time_internal4cctz12TimeZoneInfo6Header5BuildERK6tzhead(%"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* nonnull %7, %struct.tzhead* nonnull dereferenceable(44) %6)
  br i1 %29, label %30, label %871

30:                                               ; preds = %20
  %31 = getelementptr inbounds %struct.tzhead, %struct.tzhead* %6, i64 0, i32 1, i64 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %69, label %34

34:                                               ; preds = %30
  %35 = load i64, i64* %22, align 8
  %36 = mul i64 %35, 5
  %37 = load i64, i64* %23, align 8
  %38 = mul i64 %37, 6
  %39 = add i64 %38, %36
  %40 = load i64, i64* %24, align 8
  %41 = add i64 %39, %40
  %42 = load i64, i64* %25, align 8
  %43 = shl i64 %42, 3
  %44 = add i64 %41, %43
  %45 = load i64, i64* %26, align 8
  %46 = add i64 %44, %45
  %47 = load i64, i64* %27, align 8
  %48 = add i64 %46, %47
  %49 = bitcast %"class.absl::time_internal::cctz::ZoneInfoSource"* %1 to i32 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i64)***
  %50 = load i32 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i64)**, i32 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i64)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i64)*, i32 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i64)** %50, i64 3
  %52 = load i32 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i64)*, i32 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i64)** %51, align 8
  %53 = call i32 %52(%"class.absl::time_internal::cctz::ZoneInfoSource"* %1, i64 %48) #17
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %871

55:                                               ; preds = %34
  %56 = load i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)**, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*** %11, align 8
  %57 = getelementptr inbounds i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)** %56, i64 2
  %58 = load i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)** %57, align 8
  %59 = call i64 %58(%"class.absl::time_internal::cctz::ZoneInfoSource"* %1, i8* nonnull %10, i64 44) #17
  %60 = icmp eq i64 %59, 44
  br i1 %60, label %61, label %871

61:                                               ; preds = %55
  %62 = call i32 @bcmp(i8* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4)
  %63 = icmp ne i32 %62, 0
  %64 = load i8, i8* %31, align 1
  %65 = icmp eq i8 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %871, label %67

67:                                               ; preds = %61
  %68 = call zeroext i1 @_ZN4absl13time_internal4cctz12TimeZoneInfo6Header5BuildERK6tzhead(%"struct.absl::time_internal::cctz::TimeZoneInfo::Header"* nonnull %7, %struct.tzhead* nonnull dereferenceable(44) %6)
  br i1 %68, label %69, label %871

69:                                               ; preds = %67, %30
  %70 = phi i64 [ 4, %30 ], [ 8, %67 ]
  %71 = load i64, i64* %23, align 8
  %72 = icmp ne i64 %71, 0
  %73 = load i64, i64* %25, align 8
  %74 = icmp eq i64 %73, 0
  %75 = and i1 %72, %74
  br i1 %75, label %76, label %871

76:                                               ; preds = %69
  %77 = load i64, i64* %26, align 8
  %78 = icmp eq i64 %77, 0
  %79 = icmp eq i64 %77, %71
  %80 = or i1 %78, %79
  br i1 %80, label %81, label %871

81:                                               ; preds = %76
  %82 = load i64, i64* %27, align 8
  %83 = icmp eq i64 %82, 0
  %84 = icmp eq i64 %82, %71
  %85 = or i1 %83, %84
  br i1 %85, label %86, label %871

86:                                               ; preds = %81
  %87 = or i64 %70, 1
  %88 = load i64, i64* %22, align 8
  %89 = mul i64 %88, %87
  %90 = mul i64 %71, 6
  %91 = load i64, i64* %24, align 8
  %92 = add i64 %90, %77
  %93 = add i64 %92, %82
  %94 = add i64 %93, %89
  %95 = add i64 %94, %91
  %96 = bitcast %"class.std::__1::vector.18"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #17
  %97 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %8, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %8, i64 0, i32 0, i32 1
  %99 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 0, i64 24, i1 false) #17
  %100 = icmp eq i64 %95, 0
  br i1 %100, label %114, label %101

101:                                              ; preds = %86
  %102 = icmp slt i64 %95, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %101
  %104 = bitcast %"class.std::__1::vector.18"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %104) #19
  unreachable

105:                                              ; preds = %101
  %106 = call i8* @_Znwm(i64 %95) #18
  store i8* %106, i8** %97, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 %95
  store i8* %107, i8** %99, align 8
  %108 = bitcast i8** %98 to i64*
  %109 = ptrtoint i8* %106 to i64
  %110 = sub i64 %95, %109
  %111 = getelementptr i8, i8* %106, i64 %110
  %112 = ptrtoint i8* %111 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %106, i8 0, i64 %112, i1 false) #17
  %113 = ptrtoint i8* %107 to i64
  store i64 %113, i64* %108, align 8
  br label %114

114:                                              ; preds = %86, %105
  %115 = phi i8* [ null, %86 ], [ %106, %105 ]
  %116 = load i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)**, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*** %11, align 8
  %117 = getelementptr inbounds i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)** %116, i64 2
  %118 = load i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)** %117, align 8
  %119 = call i64 %118(%"class.absl::time_internal::cctz::ZoneInfoSource"* %1, i8* %115, i64 %95) #17
  %120 = icmp eq i64 %119, %95
  br i1 %120, label %121, label %863

121:                                              ; preds = %114
  %122 = load i8*, i8** %97, align 8
  %123 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1
  %124 = add i64 %88, 2
  %125 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %126 = bitcast %"struct.absl::time_internal::cctz::Transition"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.std::__1::vector"* %123 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %127, %129
  %131 = sdiv exact i64 %130, 48
  %132 = icmp ult i64 %131, %124
  br i1 %132, label %133, label %161

133:                                              ; preds = %121
  %134 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %135 = bitcast %"struct.absl::time_internal::cctz::Transition"** %134 to i64*
  %136 = icmp ugt i64 %124, 384307168202282325
  br i1 %136, label %137, label %138

137:                                              ; preds = %133
  call void @abort() #19
  unreachable

138:                                              ; preds = %133
  %139 = load i64, i64* %135, align 8
  %140 = sub i64 %139, %129
  %141 = sdiv exact i64 %140, 48
  %142 = mul i64 %124, 48
  %143 = call i8* @_Znwm(i64 %142) #18
  %144 = bitcast i8* %143 to %"struct.absl::time_internal::cctz::Transition"*
  %145 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %144, i64 %141
  %146 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %145 to i64
  %147 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %144, i64 %124
  %148 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %147 to i64
  %149 = sdiv exact i64 %140, -48
  %150 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %145, i64 %149
  %151 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %150 to i64
  %152 = icmp sgt i64 %140, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %138
  %154 = bitcast %"struct.absl::time_internal::cctz::Transition"* %150 to i8*
  %155 = inttoptr i64 %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %155, i64 %140, i1 false) #17
  br label %156

156:                                              ; preds = %153, %138
  store i64 %151, i64* %128, align 8
  store i64 %146, i64* %135, align 8
  store i64 %148, i64* %126, align 8
  %157 = icmp eq i64 %129, 0
  br i1 %157, label %161, label %158

158:                                              ; preds = %156
  %159 = inttoptr i64 %129 to i8*
  call void @_ZdlPv(i8* %159) #18
  %160 = load i64, i64* %128, align 8
  br label %161

161:                                              ; preds = %156, %121, %158
  %162 = phi i64 [ %160, %158 ], [ %129, %121 ], [ %151, %156 ]
  %163 = inttoptr i64 %162 to %"struct.absl::time_internal::cctz::Transition"*
  %164 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %165 = bitcast %"struct.absl::time_internal::cctz::Transition"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %166, %162
  %168 = sdiv exact i64 %167, 48
  %169 = icmp ugt i64 %88, %168
  br i1 %169, label %170, label %172

170:                                              ; preds = %161
  %171 = sub i64 %88, %168
  call void @_ZNSt3__16vectorIN4absl13time_internal4cctz10TransitionENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector"* %123, i64 %171) #17
  br label %178

172:                                              ; preds = %161
  %173 = icmp ult i64 %88, %168
  br i1 %173, label %174, label %176

174:                                              ; preds = %172
  %175 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %163, i64 %88
  store %"struct.absl::time_internal::cctz::Transition"* %175, %"struct.absl::time_internal::cctz::Transition"** %164, align 8
  br label %176

176:                                              ; preds = %172, %174
  %177 = icmp eq i64 %88, 0
  br i1 %177, label %267, label %178

178:                                              ; preds = %170, %176
  %179 = icmp eq i64 %70, 4
  %180 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %123, i64 0, i32 0, i32 0
  br label %184

181:                                              ; preds = %246
  %182 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %123, i64 0, i32 0, i32 0
  %183 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %182, align 8
  br label %249

184:                                              ; preds = %178, %246
  %185 = phi i8* [ %122, %178 ], [ %236, %246 ]
  %186 = phi i64 [ 0, %178 ], [ %247, %246 ]
  %187 = getelementptr inbounds i8, i8* %185, i64 1
  %188 = load i8, i8* %185, align 1
  %189 = zext i8 %188 to i64
  %190 = shl nuw nsw i64 %189, 8
  %191 = getelementptr inbounds i8, i8* %185, i64 2
  %192 = load i8, i8* %187, align 1
  %193 = zext i8 %192 to i64
  %194 = or i64 %190, %193
  %195 = shl nuw nsw i64 %194, 8
  %196 = getelementptr inbounds i8, i8* %185, i64 3
  %197 = load i8, i8* %191, align 1
  %198 = zext i8 %197 to i64
  %199 = or i64 %195, %198
  %200 = shl nuw nsw i64 %199, 8
  br i1 %179, label %201, label %208

201:                                              ; preds = %184
  %202 = load i8, i8* %196, align 1
  %203 = zext i8 %202 to i64
  %204 = or i64 %200, %203
  %205 = icmp ult i64 %204, 2147483648
  %206 = add i64 %204, -4294967296
  %207 = select i1 %205, i64 %204, i64 %206
  br label %232

208:                                              ; preds = %184
  %209 = getelementptr inbounds i8, i8* %185, i64 4
  %210 = load i8, i8* %196, align 1
  %211 = zext i8 %210 to i64
  %212 = or i64 %200, %211
  %213 = shl i64 %212, 8
  %214 = getelementptr inbounds i8, i8* %185, i64 5
  %215 = load i8, i8* %209, align 1
  %216 = zext i8 %215 to i64
  %217 = or i64 %213, %216
  %218 = shl i64 %217, 8
  %219 = getelementptr inbounds i8, i8* %185, i64 6
  %220 = load i8, i8* %214, align 1
  %221 = zext i8 %220 to i64
  %222 = or i64 %218, %221
  %223 = shl i64 %222, 8
  %224 = getelementptr inbounds i8, i8* %185, i64 7
  %225 = load i8, i8* %219, align 1
  %226 = zext i8 %225 to i64
  %227 = or i64 %223, %226
  %228 = shl i64 %227, 8
  %229 = load i8, i8* %224, align 1
  %230 = zext i8 %229 to i64
  %231 = or i64 %228, %230
  br label %232

232:                                              ; preds = %208, %201
  %233 = phi i64 [ %207, %201 ], [ %231, %208 ]
  %234 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %180, align 8
  %235 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %234, i64 %186, i32 0
  store i64 %233, i64* %235, align 8
  %236 = getelementptr inbounds i8, i8* %185, i64 %70
  %237 = icmp eq i64 %186, 0
  br i1 %237, label %246, label %238

238:                                              ; preds = %232
  %239 = add i64 %186, -1
  %240 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %180, align 8
  %241 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %240, i64 %239, i32 0
  %242 = load i64, i64* %241, align 8
  %243 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %240, i64 %186, i32 0
  %244 = load i64, i64* %243, align 8
  %245 = icmp slt i64 %242, %244
  br i1 %245, label %246, label %863

246:                                              ; preds = %238, %232
  %247 = add i64 %186, 1
  %248 = icmp eq i64 %247, %88
  br i1 %248, label %181, label %184

249:                                              ; preds = %181, %261
  %250 = phi %"struct.absl::time_internal::cctz::Transition"* [ %183, %181 ], [ %256, %261 ]
  %251 = phi i8* [ %236, %181 ], [ %262, %261 ]
  %252 = phi i8 [ 0, %181 ], [ %264, %261 ]
  %253 = phi i64 [ 0, %181 ], [ %265, %261 ]
  %254 = load i8, i8* %251, align 1
  %255 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %250, i64 %253, i32 1
  store i8 %254, i8* %255, align 8
  %256 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %182, align 8
  %257 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %256, i64 %253, i32 1
  %258 = load i8, i8* %257, align 8
  %259 = zext i8 %258 to i64
  %260 = icmp ugt i64 %71, %259
  br i1 %260, label %261, label %863

261:                                              ; preds = %249
  %262 = getelementptr inbounds i8, i8* %251, i64 1
  %263 = icmp eq i8 %258, 0
  %264 = select i1 %263, i8 1, i8 %252
  %265 = add i64 %253, 1
  %266 = icmp eq i64 %265, %88
  br i1 %266, label %267, label %249

267:                                              ; preds = %261, %176
  %268 = phi i1 [ true, %176 ], [ false, %261 ]
  %269 = phi i8 [ 0, %176 ], [ %264, %261 ]
  %270 = phi i8* [ %122, %176 ], [ %262, %261 ]
  %271 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2
  %272 = add i64 %71, 2
  %273 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %274 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %273 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = bitcast %"class.std::__1::vector.1"* %271 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = sub i64 %275, %277
  %279 = sdiv exact i64 %278, 48
  %280 = icmp ult i64 %279, %272
  br i1 %280, label %281, label %309

281:                                              ; preds = %267
  %282 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %283 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %282 to i64*
  %284 = icmp ugt i64 %272, 384307168202282325
  br i1 %284, label %285, label %286

285:                                              ; preds = %281
  call void @abort() #19
  unreachable

286:                                              ; preds = %281
  %287 = load i64, i64* %283, align 8
  %288 = sub i64 %287, %277
  %289 = sdiv exact i64 %288, 48
  %290 = mul i64 %272, 48
  %291 = call i8* @_Znwm(i64 %290) #18
  %292 = bitcast i8* %291 to %"struct.absl::time_internal::cctz::TransitionType"*
  %293 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %292, i64 %289
  %294 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %293 to i64
  %295 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %292, i64 %272
  %296 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %295 to i64
  %297 = sdiv exact i64 %288, -48
  %298 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %293, i64 %297
  %299 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %298 to i64
  %300 = icmp sgt i64 %288, 0
  br i1 %300, label %301, label %304

301:                                              ; preds = %286
  %302 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %298 to i8*
  %303 = inttoptr i64 %277 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %302, i8* align 8 %303, i64 %288, i1 false) #17
  br label %304

304:                                              ; preds = %301, %286
  store i64 %299, i64* %276, align 8
  store i64 %294, i64* %283, align 8
  store i64 %296, i64* %274, align 8
  %305 = icmp eq i64 %277, 0
  br i1 %305, label %309, label %306

306:                                              ; preds = %304
  %307 = inttoptr i64 %277 to i8*
  call void @_ZdlPv(i8* %307) #18
  %308 = load i64, i64* %276, align 8
  br label %309

309:                                              ; preds = %304, %267, %306
  %310 = phi i64 [ %308, %306 ], [ %277, %267 ], [ %299, %304 ]
  %311 = inttoptr i64 %310 to %"struct.absl::time_internal::cctz::TransitionType"*
  %312 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %313 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = sub i64 %314, %310
  %316 = sdiv exact i64 %315, 48
  %317 = icmp ugt i64 %71, %316
  br i1 %317, label %318, label %320

318:                                              ; preds = %309
  %319 = sub i64 %71, %316
  call void @_ZNSt3__16vectorIN4absl13time_internal4cctz14TransitionTypeENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.1"* %271, i64 %319) #17
  br label %324

320:                                              ; preds = %309
  %321 = icmp ult i64 %71, %316
  br i1 %321, label %322, label %324

322:                                              ; preds = %320
  %323 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %311, i64 %71
  store %"struct.absl::time_internal::cctz::TransitionType"* %323, %"struct.absl::time_internal::cctz::TransitionType"** %312, align 8
  br label %324

324:                                              ; preds = %322, %320, %318
  %325 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %271, i64 0, i32 0, i32 0
  %326 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %325, align 8
  br label %327

327:                                              ; preds = %324, %369
  %328 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %326, %324 ], [ %364, %369 ]
  %329 = phi i8* [ %270, %324 ], [ %370, %369 ]
  %330 = phi i64 [ 0, %324 ], [ %371, %369 ]
  %331 = getelementptr inbounds i8, i8* %329, i64 1
  %332 = load i8, i8* %329, align 1
  %333 = zext i8 %332 to i32
  %334 = shl nuw nsw i32 %333, 8
  %335 = getelementptr inbounds i8, i8* %329, i64 2
  %336 = load i8, i8* %331, align 1
  %337 = zext i8 %336 to i32
  %338 = or i32 %334, %337
  %339 = shl nuw nsw i32 %338, 8
  %340 = getelementptr inbounds i8, i8* %329, i64 3
  %341 = load i8, i8* %335, align 1
  %342 = zext i8 %341 to i32
  %343 = or i32 %339, %342
  %344 = shl nuw i32 %343, 8
  %345 = load i8, i8* %340, align 1
  %346 = zext i8 %345 to i32
  %347 = or i32 %344, %346
  %348 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %328, i64 %330, i32 0
  store i32 %347, i32* %348, align 8
  %349 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %325, align 8
  %350 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %349, i64 %330, i32 0
  %351 = load i32, i32* %350, align 8
  %352 = add i32 %351, 86399
  %353 = icmp ugt i32 %352, 172798
  br i1 %353, label %863, label %354

354:                                              ; preds = %327
  %355 = getelementptr inbounds i8, i8* %329, i64 4
  %356 = getelementptr inbounds i8, i8* %329, i64 5
  %357 = load i8, i8* %355, align 1
  %358 = icmp ne i8 %357, 0
  %359 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %349, i64 %330, i32 4
  %360 = zext i1 %358 to i8
  store i8 %360, i8* %359, align 8
  %361 = load i8, i8* %356, align 1
  %362 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %325, align 8
  %363 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %362, i64 %330, i32 5
  store i8 %361, i8* %363, align 1
  %364 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %325, align 8
  %365 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %364, i64 %330, i32 5
  %366 = load i8, i8* %365, align 1
  %367 = zext i8 %366 to i64
  %368 = icmp ugt i64 %91, %367
  br i1 %368, label %369, label %863

369:                                              ; preds = %354
  %370 = getelementptr inbounds i8, i8* %329, i64 6
  %371 = add i64 %330, 1
  %372 = icmp eq i64 %371, %71
  br i1 %372, label %373, label %327

373:                                              ; preds = %369
  %374 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 3
  store i8 0, i8* %374, align 8
  %375 = and i8 %269, 1
  %376 = icmp eq i8 %375, 0
  %377 = or i1 %376, %268
  br i1 %377, label %414, label %378

378:                                              ; preds = %373
  %379 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %271, i64 0, i32 0, i32 0
  %380 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %379, align 8
  %381 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %380, i64 0, i32 4
  %382 = load i8, i8* %381, align 8, !range !11
  %383 = icmp eq i8 %382, 0
  br i1 %383, label %399, label %384

384:                                              ; preds = %378
  %385 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %123, i64 0, i32 0, i32 0
  %386 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %385, align 8
  %387 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %386, i64 0, i32 1
  %388 = load i8, i8* %387, align 8
  %389 = icmp eq i8 %388, 0
  br i1 %389, label %399, label %390

390:                                              ; preds = %384, %396
  %391 = phi i8 [ %397, %396 ], [ %388, %384 ]
  %392 = zext i8 %391 to i64
  %393 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %380, i64 %392, i32 4
  %394 = load i8, i8* %393, align 8, !range !11
  %395 = icmp eq i8 %394, 0
  br i1 %395, label %399, label %396

396:                                              ; preds = %390
  %397 = add i8 %391, -1
  %398 = icmp eq i8 %397, 0
  br i1 %398, label %399, label %390

399:                                              ; preds = %396, %390, %384, %378
  %400 = phi i8 [ 0, %378 ], [ 0, %384 ], [ 0, %396 ], [ %391, %390 ]
  %401 = zext i8 %400 to i64
  %402 = icmp eq i64 %71, %401
  br i1 %402, label %414, label %403

403:                                              ; preds = %399, %409
  %404 = phi i64 [ %411, %409 ], [ %401, %399 ]
  %405 = phi i8 [ %410, %409 ], [ %400, %399 ]
  %406 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %380, i64 %404, i32 4
  %407 = load i8, i8* %406, align 8, !range !11
  %408 = icmp eq i8 %407, 0
  br i1 %408, label %413, label %409

409:                                              ; preds = %403
  %410 = add i8 %405, 1
  %411 = zext i8 %410 to i64
  %412 = icmp eq i64 %71, %411
  br i1 %412, label %414, label %403

413:                                              ; preds = %403
  store i8 %405, i8* %374, align 8
  br label %414

414:                                              ; preds = %409, %399, %413, %373
  %415 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 4
  %416 = add i64 %91, 10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %415, i64 %416) #17
  %417 = call i1 @llvm.is.constant.i64(i64 %91) #17
  %418 = icmp ult i64 %91, 23
  %419 = and i1 %418, %417
  br i1 %419, label %420, label %438

420:                                              ; preds = %414
  %421 = bitcast %"class.std::__1::basic_string"* %415 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %422 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %421, i64 0, i32 1, i32 0
  %423 = load i8, i8* %422, align 1
  %424 = icmp slt i8 %423, 0
  br i1 %424, label %425, label %429

425:                                              ; preds = %420
  %426 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %91, i64* %426, align 8
  %427 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %415, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %428 = load i8*, i8** %427, align 8
  br label %432

429:                                              ; preds = %420
  %430 = trunc i64 %91 to i8
  store i8 %430, i8* %422, align 1
  %431 = bitcast %"class.std::__1::basic_string"* %415 to i8*
  br label %432

432:                                              ; preds = %429, %425
  %433 = phi i8* [ %428, %425 ], [ %431, %429 ]
  %434 = icmp eq i64 %91, 0
  br i1 %434, label %436, label %435

435:                                              ; preds = %432
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %433, i8* align 1 %370, i64 %91, i1 false) #17
  br label %436

436:                                              ; preds = %435, %432
  %437 = getelementptr inbounds i8, i8* %433, i64 %91
  store i8 0, i8* %437, align 1
  br label %440

438:                                              ; preds = %414
  %439 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %415, i8* %370, i64 %91) #17
  br label %440

440:                                              ; preds = %436, %438
  %441 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 6
  %442 = bitcast %"class.std::__1::basic_string"* %441 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %443 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %442, i64 0, i32 1, i32 0
  %444 = load i8, i8* %443, align 1
  %445 = icmp slt i8 %444, 0
  br i1 %445, label %446, label %450

446:                                              ; preds = %440
  %447 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %441, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %448 = load i8*, i8** %447, align 8
  store i8 0, i8* %448, align 1
  %449 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %449, align 8
  br label %452

450:                                              ; preds = %440
  %451 = bitcast %"class.std::__1::basic_string"* %441 to i8*
  store i8 0, i8* %451, align 1
  store i8 0, i8* %443, align 1
  br label %452

452:                                              ; preds = %446, %450
  %453 = load i8, i8* %31, align 1
  %454 = icmp eq i8 %453, 0
  br i1 %454, label %482, label %455

455:                                              ; preds = %452
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17
  store i8 -86, i8* %3, align 1
  %456 = load i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)**, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*** %11, align 8
  %457 = getelementptr inbounds i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)** %456, i64 2
  %458 = load i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)** %457, align 8
  %459 = call i64 %458(%"class.absl::time_internal::cctz::ZoneInfoSource"* %1, i8* nonnull %3, i64 1) #17
  %460 = icmp eq i64 %459, 1
  %461 = load i8, i8* %3, align 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17
  %462 = icmp eq i8 %461, 10
  %463 = and i1 %460, %462
  br i1 %463, label %464, label %863

464:                                              ; preds = %455
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 -86, i8* %4, align 1
  %465 = load i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)**, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*** %11, align 8
  %466 = getelementptr inbounds i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)** %465, i64 2
  %467 = load i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)** %466, align 8
  %468 = call i64 %467(%"class.absl::time_internal::cctz::ZoneInfoSource"* %1, i8* nonnull %4, i64 1) #17
  br label %469

469:                                              ; preds = %476, %464
  %470 = phi i8* [ %5, %476 ], [ %4, %464 ]
  %471 = phi i64 [ %481, %476 ], [ %468, %464 ]
  %472 = icmp eq i64 %471, 1
  %473 = load i8, i8* %470, align 1
  %474 = zext i8 %473 to i32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %470) #17
  %475 = select i1 %472, i32 %474, i32 -1
  switch i32 %475, label %476 [
    i32 10, label %482
    i32 -1, label %863
  ]

476:                                              ; preds = %469
  %477 = trunc i32 %475 to i8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %441, i8 signext %477) #17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #17
  store i8 -86, i8* %5, align 1
  %478 = load i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)**, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*** %11, align 8
  %479 = getelementptr inbounds i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)** %478, i64 2
  %480 = load i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)*, i64 (%"class.absl::time_internal::cctz::ZoneInfoSource"*, i8*, i64)** %479, align 8
  %481 = call i64 %480(%"class.absl::time_internal::cctz::ZoneInfoSource"* %1, i8* nonnull %5, i64 1) #17
  br label %469

482:                                              ; preds = %469, %452
  %483 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 5
  %484 = bitcast %"class.std::__1::basic_string"* %483 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %485 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %484, i64 0, i32 1, i32 0
  %486 = load i8, i8* %485, align 1
  %487 = icmp slt i8 %486, 0
  br i1 %487, label %488, label %491

488:                                              ; preds = %482
  %489 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %490 = load i64, i64* %489, align 8
  br label %493

491:                                              ; preds = %482
  %492 = zext i8 %486 to i64
  br label %493

493:                                              ; preds = %488, %491
  %494 = phi i64 [ %490, %488 ], [ %492, %491 ]
  %495 = icmp eq i64 %494, 0
  br i1 %495, label %496, label %509

496:                                              ; preds = %493
  %497 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %497) #17
  %498 = bitcast %"class.absl::time_internal::cctz::ZoneInfoSource"* %1 to void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::ZoneInfoSource"*)***
  %499 = load void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::ZoneInfoSource"*)**, void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::ZoneInfoSource"*)*** %498, align 8
  %500 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::ZoneInfoSource"*)*, void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::ZoneInfoSource"*)** %499, i64 4
  %501 = load void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::ZoneInfoSource"*)*, void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::ZoneInfoSource"*)** %500, align 8
  call void %501(%"class.std::__1::basic_string"* nonnull sret %9, %"class.absl::time_internal::cctz::ZoneInfoSource"* %1) #17
  %502 = load i8, i8* %485, align 1
  %503 = icmp slt i8 %502, 0
  br i1 %503, label %504, label %507

504:                                              ; preds = %496
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %483, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %506 = load i8*, i8** %505, align 8
  call void @_ZdlPv(i8* %506) #18
  br label %507

507:                                              ; preds = %504, %496
  %508 = bitcast %"class.std::__1::basic_string"* %483 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %508, i8* nonnull align 8 %497, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %497) #17
  br label %509

509:                                              ; preds = %507, %493
  %510 = icmp ugt i64 %88, 1
  br i1 %510, label %514, label %511

511:                                              ; preds = %509
  %512 = load i64, i64* %128, align 8
  %513 = inttoptr i64 %512 to %"struct.absl::time_internal::cctz::Transition"*
  br label %555

514:                                              ; preds = %509
  %515 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %123, i64 0, i32 0, i32 0
  %516 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %515, align 8
  %517 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %518 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %516 to i64
  br label %519

519:                                              ; preds = %514, %549
  %520 = phi i64 [ %88, %514 ], [ %521, %549 ]
  %521 = add i64 %520, -1
  %522 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %516, i64 %521, i32 1
  %523 = load i8, i8* %522, align 8
  %524 = add i64 %520, -2
  %525 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %516, i64 %524, i32 1
  %526 = load i8, i8* %525, align 8
  %527 = icmp eq i8 %523, %526
  br i1 %527, label %549, label %528

528:                                              ; preds = %519
  %529 = zext i8 %523 to i64
  %530 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %517, align 8
  %531 = zext i8 %526 to i64
  %532 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %530, i64 %529, i32 0
  %533 = load i32, i32* %532, align 8
  %534 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %530, i64 %531, i32 0
  %535 = load i32, i32* %534, align 8
  %536 = icmp eq i32 %533, %535
  br i1 %536, label %537, label %552

537:                                              ; preds = %528
  %538 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %530, i64 %529, i32 4
  %539 = load i8, i8* %538, align 8, !range !11
  %540 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %530, i64 %531, i32 4
  %541 = load i8, i8* %540, align 8, !range !11
  %542 = icmp eq i8 %539, %541
  br i1 %542, label %543, label %551

543:                                              ; preds = %537
  %544 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %530, i64 %529, i32 5
  %545 = load i8, i8* %544, align 1
  %546 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %530, i64 %531, i32 5
  %547 = load i8, i8* %546, align 1
  %548 = icmp eq i8 %545, %547
  br i1 %548, label %549, label %553

549:                                              ; preds = %519, %543
  %550 = icmp ugt i64 %521, 1
  br i1 %550, label %519, label %554

551:                                              ; preds = %537
  store i64 %520, i64* %22, align 8
  br label %555

552:                                              ; preds = %528
  store i64 %520, i64* %22, align 8
  br label %555

553:                                              ; preds = %543
  store i64 %520, i64* %22, align 8
  br label %555

554:                                              ; preds = %549
  store i64 %521, i64* %22, align 8
  br label %555

555:                                              ; preds = %511, %554, %553, %552, %551
  %556 = phi %"struct.absl::time_internal::cctz::Transition"* [ %516, %551 ], [ %516, %552 ], [ %516, %553 ], [ %516, %554 ], [ %513, %511 ]
  %557 = phi i64 [ %518, %551 ], [ %518, %552 ], [ %518, %553 ], [ %518, %554 ], [ %512, %511 ]
  %558 = phi i64 [ %520, %551 ], [ %520, %552 ], [ %520, %553 ], [ %521, %554 ], [ %88, %511 ]
  %559 = load i64, i64* %165, align 8
  %560 = sub i64 %559, %557
  %561 = sdiv exact i64 %560, 48
  %562 = icmp ugt i64 %558, %561
  %563 = inttoptr i64 %557 to %"struct.absl::time_internal::cctz::Transition"*
  br i1 %562, label %564, label %569

564:                                              ; preds = %555
  %565 = sub i64 %558, %561
  call void @_ZNSt3__16vectorIN4absl13time_internal4cctz10TransitionENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector"* %123, i64 %565) #17
  %566 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %123, i64 0, i32 0, i32 0
  %567 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %566, align 8
  %568 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %164, align 8
  br label %574

569:                                              ; preds = %555
  %570 = inttoptr i64 %559 to %"struct.absl::time_internal::cctz::Transition"*
  %571 = icmp ult i64 %558, %561
  br i1 %571, label %572, label %574

572:                                              ; preds = %569
  %573 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %563, i64 %558
  store %"struct.absl::time_internal::cctz::Transition"* %573, %"struct.absl::time_internal::cctz::Transition"** %164, align 8
  br label %574

574:                                              ; preds = %564, %569, %572
  %575 = phi %"struct.absl::time_internal::cctz::Transition"* [ %568, %564 ], [ %570, %569 ], [ %573, %572 ]
  %576 = phi %"struct.absl::time_internal::cctz::Transition"* [ %567, %564 ], [ %556, %569 ], [ %556, %572 ]
  %577 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %123, i64 0, i32 0, i32 0
  %578 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %576, %575
  br i1 %578, label %583, label %579

579:                                              ; preds = %574
  %580 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %576, i64 0, i32 0
  %581 = load i64, i64* %580, align 8
  %582 = icmp sgt i64 %581, -1
  br i1 %582, label %583, label %588

583:                                              ; preds = %579, %574
  %584 = call %"struct.absl::time_internal::cctz::Transition"* @_ZNSt3__16vectorIN4absl13time_internal4cctz10TransitionENS_9allocatorIS4_EEE7emplaceIJEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector"* %123, %"struct.absl::time_internal::cctz::Transition"* %576)
  %585 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %584, i64 0, i32 0
  store i64 -576460752303423488, i64* %585, align 8
  %586 = load i8, i8* %374, align 8
  %587 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %584, i64 0, i32 1
  store i8 %586, i8* %587, align 8
  br label %588

588:                                              ; preds = %583, %579
  %589 = call zeroext i1 @_ZN4absl13time_internal4cctz12TimeZoneInfo17ExtendTransitionsEv(%"class.absl::time_internal::cctz::TimeZoneInfo"* %0)
  br i1 %589, label %590, label %863

590:                                              ; preds = %588
  %591 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %164, align 8
  %592 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %591, i64 -1, i32 0
  %593 = load i64, i64* %592, align 8
  %594 = icmp slt i64 %593, 0
  %595 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %591 to i64
  br i1 %594, label %596, label %603

596:                                              ; preds = %590
  %597 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %591, i64 -1, i32 1
  %598 = load i8, i8* %597, align 8
  %599 = call %"struct.absl::time_internal::cctz::Transition"* @_ZNSt3__16vectorIN4absl13time_internal4cctz10TransitionENS_9allocatorIS4_EEE7emplaceIJEEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector"* %123, %"struct.absl::time_internal::cctz::Transition"* %591)
  %600 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %599, i64 0, i32 0
  store i64 2147483647, i64* %600, align 8
  %601 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %599, i64 0, i32 1
  store i8 %598, i8* %601, align 8
  %602 = load i64, i64* %165, align 8
  br label %603

603:                                              ; preds = %596, %590
  %604 = phi i64 [ %602, %596 ], [ %595, %590 ]
  %605 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %271, i64 0, i32 0, i32 0
  %606 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %605, align 8
  %607 = load i64, i64* %128, align 8
  %608 = icmp eq i64 %604, %607
  %609 = inttoptr i64 %607 to %"struct.absl::time_internal::cctz::Transition"*
  br i1 %608, label %757, label %610

610:                                              ; preds = %603
  %611 = load i8, i8* %374, align 8
  %612 = zext i8 %611 to i64
  %613 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %606, i64 %612
  br label %614

614:                                              ; preds = %610, %746
  %615 = phi %"struct.absl::time_internal::cctz::Transition"* [ %754, %746 ], [ %609, %610 ]
  %616 = phi i64 [ %749, %746 ], [ 0, %610 ]
  %617 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %666, %746 ], [ %613, %610 ]
  %618 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %615, i64 %616, i32 0
  %619 = load i64, i64* %618, align 8
  %620 = sdiv i64 %619, 60
  %621 = srem i64 %619, 60
  %622 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 1970, i64 1, i64 1, i64 0, i64 %620, i64 %621) #17, !noalias !15
  %623 = extractvalue { i64, i64 } %622, 0
  %624 = extractvalue { i64, i64 } %622, 1
  %625 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %617, i64 0, i32 0
  %626 = load i32, i32* %625, align 8, !noalias !15
  %627 = sext i32 %626 to i64
  %628 = shl i64 %624, 56
  %629 = ashr exact i64 %628, 56
  %630 = shl i64 %624, 48
  %631 = ashr i64 %630, 56
  %632 = shl i64 %624, 40
  %633 = ashr i64 %632, 56
  %634 = shl i64 %624, 32
  %635 = ashr i64 %634, 56
  %636 = sdiv i64 %627, 60
  %637 = add nsw i64 %635, %636
  %638 = shl i64 %624, 24
  %639 = ashr i64 %638, 56
  %640 = srem i64 %627, 60
  %641 = add nsw i64 %639, %640
  %642 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %623, i64 %629, i64 %631, i64 %633, i64 %637, i64 %641) #17, !noalias !15
  %643 = extractvalue { i64, i64 } %642, 0
  %644 = extractvalue { i64, i64 } %642, 1
  %645 = shl i64 %644, 56
  %646 = ashr exact i64 %645, 56
  %647 = shl i64 %644, 48
  %648 = ashr i64 %647, 56
  %649 = shl i64 %644, 40
  %650 = ashr i64 %649, 56
  %651 = shl i64 %644, 32
  %652 = ashr i64 %651, 56
  %653 = shl i64 %644, 24
  %654 = ashr i64 %653, 56
  %655 = add nsw i64 %654, -1
  %656 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %643, i64 %646, i64 %648, i64 %650, i64 %652, i64 %655) #17
  %657 = extractvalue { i64, i64 } %656, 1
  %658 = extractvalue { i64, i64 } %656, 0
  %659 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %615, i64 %616, i32 4, i32 0, i32 0
  store i64 %658, i64* %659, align 8
  %660 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %615, i64 %616, i32 4, i32 0, i32 1
  %661 = bitcast i8* %660 to i64*
  store i64 %657, i64* %661, align 8
  %662 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %615, i64 %616, i32 1
  %663 = load i8, i8* %662, align 8
  %664 = zext i8 %663 to i64
  %665 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %605, align 8
  %666 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %665, i64 %664
  %667 = load i64, i64* %618, align 8
  %668 = sdiv i64 %667, 60
  %669 = srem i64 %667, 60
  %670 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 1970, i64 1, i64 1, i64 0, i64 %668, i64 %669) #17, !noalias !18
  %671 = extractvalue { i64, i64 } %670, 0
  %672 = extractvalue { i64, i64 } %670, 1
  %673 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %666, i64 0, i32 0
  %674 = load i32, i32* %673, align 8, !noalias !18
  %675 = sext i32 %674 to i64
  %676 = shl i64 %672, 56
  %677 = ashr exact i64 %676, 56
  %678 = shl i64 %672, 48
  %679 = ashr i64 %678, 56
  %680 = shl i64 %672, 40
  %681 = ashr i64 %680, 56
  %682 = shl i64 %672, 32
  %683 = ashr i64 %682, 56
  %684 = sdiv i64 %675, 60
  %685 = add nsw i64 %683, %684
  %686 = shl i64 %672, 24
  %687 = ashr i64 %686, 56
  %688 = srem i64 %675, 60
  %689 = add nsw i64 %687, %688
  %690 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %671, i64 %677, i64 %679, i64 %681, i64 %685, i64 %689) #17, !noalias !18
  %691 = extractvalue { i64, i64 } %690, 0
  %692 = extractvalue { i64, i64 } %690, 1
  %693 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %615, i64 %616, i32 3, i32 0, i32 0
  store i64 %691, i64* %693, align 8
  %694 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %615, i64 %616, i32 3, i32 0, i32 1
  %695 = bitcast i8* %694 to i64*
  store i64 %692, i64* %695, align 8
  %696 = icmp eq i64 %616, 0
  %697 = trunc i64 %692 to i8
  br i1 %696, label %698, label %701

698:                                              ; preds = %614
  %699 = load i64, i64* %128, align 8
  %700 = inttoptr i64 %699 to %"struct.absl::time_internal::cctz::Transition"*
  br label %746

701:                                              ; preds = %614
  %702 = add i64 %616, -1
  %703 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %577, align 8
  %704 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %703, i64 %702, i32 3, i32 0, i32 0
  %705 = load i64, i64* %704, align 8
  %706 = icmp slt i64 %705, %691
  %707 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %703 to i64
  br i1 %706, label %746, label %708

708:                                              ; preds = %701
  %709 = icmp eq i64 %705, %691
  br i1 %709, label %710, label %863

710:                                              ; preds = %708
  %711 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %703, i64 %702, i32 3, i32 0, i32 1
  %712 = load i8, i8* %711, align 8
  %713 = icmp slt i8 %712, %697
  br i1 %713, label %746, label %714

714:                                              ; preds = %710
  %715 = icmp eq i8 %712, %697
  br i1 %715, label %716, label %863

716:                                              ; preds = %714
  %717 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %703, i64 %702, i32 3, i32 0, i32 2
  %718 = load i8, i8* %717, align 1
  %719 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %615, i64 %616, i32 3, i32 0, i32 2
  %720 = load i8, i8* %719, align 1
  %721 = icmp slt i8 %718, %720
  br i1 %721, label %746, label %722

722:                                              ; preds = %716
  %723 = icmp eq i8 %718, %720
  br i1 %723, label %724, label %863

724:                                              ; preds = %722
  %725 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %703, i64 %702, i32 3, i32 0, i32 3
  %726 = load i8, i8* %725, align 2
  %727 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %615, i64 %616, i32 3, i32 0, i32 3
  %728 = load i8, i8* %727, align 2
  %729 = icmp slt i8 %726, %728
  br i1 %729, label %746, label %730

730:                                              ; preds = %724
  %731 = icmp eq i8 %726, %728
  br i1 %731, label %732, label %863

732:                                              ; preds = %730
  %733 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %703, i64 %702, i32 3, i32 0, i32 4
  %734 = load i8, i8* %733, align 1
  %735 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %615, i64 %616, i32 3, i32 0, i32 4
  %736 = load i8, i8* %735, align 1
  %737 = icmp slt i8 %734, %736
  br i1 %737, label %746, label %738

738:                                              ; preds = %732
  %739 = icmp eq i8 %734, %736
  br i1 %739, label %740, label %863

740:                                              ; preds = %738
  %741 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %703, i64 %702, i32 3, i32 0, i32 5
  %742 = load i8, i8* %741, align 4
  %743 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %615, i64 %616, i32 3, i32 0, i32 5
  %744 = load i8, i8* %743, align 4
  %745 = icmp slt i8 %742, %744
  br i1 %745, label %746, label %863

746:                                              ; preds = %698, %732, %724, %716, %710, %701, %740
  %747 = phi %"struct.absl::time_internal::cctz::Transition"* [ %700, %698 ], [ %703, %732 ], [ %703, %724 ], [ %703, %716 ], [ %703, %710 ], [ %703, %701 ], [ %703, %740 ]
  %748 = phi i64 [ %699, %698 ], [ %707, %732 ], [ %707, %724 ], [ %707, %716 ], [ %707, %710 ], [ %707, %701 ], [ %707, %740 ]
  %749 = add i64 %616, 1
  %750 = load i64, i64* %165, align 8
  %751 = sub i64 %750, %748
  %752 = sdiv exact i64 %751, 48
  %753 = icmp eq i64 %749, %752
  %754 = inttoptr i64 %748 to %"struct.absl::time_internal::cctz::Transition"*
  br i1 %753, label %755, label %614

755:                                              ; preds = %746
  %756 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %605, align 8
  br label %757

757:                                              ; preds = %755, %603
  %758 = phi %"struct.absl::time_internal::cctz::Transition"* [ %747, %755 ], [ %609, %603 ]
  %759 = phi i64 [ %750, %755 ], [ %604, %603 ]
  %760 = phi i64 [ %748, %755 ], [ %604, %603 ]
  %761 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %756, %755 ], [ %606, %603 ]
  %762 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %312, align 8
  %763 = icmp eq %"struct.absl::time_internal::cctz::TransitionType"* %761, %762
  br i1 %763, label %764, label %808

764:                                              ; preds = %757
  %765 = inttoptr i64 %760 to %"struct.absl::time_internal::cctz::Transition"*
  br label %770

766:                                              ; preds = %808
  %767 = load i64, i64* %128, align 8
  %768 = load i64, i64* %165, align 8
  %769 = inttoptr i64 %767 to %"struct.absl::time_internal::cctz::Transition"*
  br label %770

770:                                              ; preds = %764, %766
  %771 = phi %"struct.absl::time_internal::cctz::Transition"* [ %765, %764 ], [ %769, %766 ]
  %772 = phi %"struct.absl::time_internal::cctz::Transition"* [ %758, %764 ], [ %769, %766 ]
  %773 = phi i64 [ %759, %764 ], [ %768, %766 ]
  %774 = phi i64 [ %760, %764 ], [ %767, %766 ]
  %775 = load i64, i64* %126, align 8
  %776 = sub i64 %775, %774
  %777 = sdiv exact i64 %776, 48
  %778 = sub i64 %773, %774
  %779 = sdiv exact i64 %778, 48
  %780 = icmp ugt i64 %777, %779
  br i1 %780, label %781, label %863

781:                                              ; preds = %770
  %782 = icmp eq i64 %778, 0
  br i1 %782, label %783, label %786

783:                                              ; preds = %781
  %784 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* null, i64 %779
  %785 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %784 to i64
  br label %801

786:                                              ; preds = %781
  %787 = icmp ugt i64 %779, 384307168202282325
  br i1 %787, label %788, label %789

788:                                              ; preds = %786
  call void @abort() #19
  unreachable

789:                                              ; preds = %786
  %790 = call i8* @_Znwm(i64 %778) #18
  %791 = bitcast i8* %790 to %"struct.absl::time_internal::cctz::Transition"*
  %792 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %791, i64 %779
  %793 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %792 to i64
  %794 = sdiv exact i64 %778, -48
  %795 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %792, i64 %794
  %796 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %795 to i64
  %797 = icmp sgt i64 %778, 0
  br i1 %797, label %798, label %801

798:                                              ; preds = %789
  %799 = bitcast %"struct.absl::time_internal::cctz::Transition"* %795 to i8*
  %800 = inttoptr i64 %774 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %799, i8* align 8 %800, i64 %778, i1 false) #17
  br label %801

801:                                              ; preds = %798, %789, %783
  %802 = phi i64 [ %796, %789 ], [ %796, %798 ], [ %785, %783 ]
  %803 = phi i64 [ %793, %789 ], [ %793, %798 ], [ %785, %783 ]
  %804 = phi %"struct.absl::time_internal::cctz::Transition"* [ %771, %789 ], [ %772, %798 ], [ %771, %783 ]
  store i64 %802, i64* %128, align 8
  store i64 %803, i64* %165, align 8
  store i64 %803, i64* %126, align 8
  %805 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %804, null
  br i1 %805, label %863, label %806

806:                                              ; preds = %801
  %807 = bitcast %"struct.absl::time_internal::cctz::Transition"* %804 to i8*
  call void @_ZdlPv(i8* %807) #18
  br label %863

808:                                              ; preds = %757, %808
  %809 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %861, %808 ], [ %761, %757 ]
  %810 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 1970, i64 1, i64 1, i64 0, i64 153722867280912930, i64 7) #17, !noalias !21
  %811 = extractvalue { i64, i64 } %810, 0
  %812 = extractvalue { i64, i64 } %810, 1
  %813 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %809, i64 0, i32 0
  %814 = load i32, i32* %813, align 8, !noalias !21
  %815 = sext i32 %814 to i64
  %816 = shl i64 %812, 56
  %817 = ashr exact i64 %816, 56
  %818 = shl i64 %812, 48
  %819 = ashr i64 %818, 56
  %820 = shl i64 %812, 40
  %821 = ashr i64 %820, 56
  %822 = shl i64 %812, 32
  %823 = ashr i64 %822, 56
  %824 = sdiv i64 %815, 60
  %825 = add nsw i64 %823, %824
  %826 = shl i64 %812, 24
  %827 = ashr i64 %826, 56
  %828 = srem i64 %815, 60
  %829 = add nsw i64 %827, %828
  %830 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %811, i64 %817, i64 %819, i64 %821, i64 %825, i64 %829) #17, !noalias !21
  %831 = extractvalue { i64, i64 } %830, 0
  %832 = extractvalue { i64, i64 } %830, 1
  %833 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %809, i64 0, i32 2, i32 0, i32 0
  store i64 %831, i64* %833, align 8
  %834 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %809, i64 0, i32 2, i32 0, i32 1
  %835 = bitcast i8* %834 to i64*
  store i64 %832, i64* %835, align 8
  %836 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 1970, i64 1, i64 1, i64 0, i64 -153722867280912930, i64 -8) #17, !noalias !24
  %837 = extractvalue { i64, i64 } %836, 0
  %838 = extractvalue { i64, i64 } %836, 1
  %839 = load i32, i32* %813, align 8, !noalias !24
  %840 = sext i32 %839 to i64
  %841 = shl i64 %838, 56
  %842 = ashr exact i64 %841, 56
  %843 = shl i64 %838, 48
  %844 = ashr i64 %843, 56
  %845 = shl i64 %838, 40
  %846 = ashr i64 %845, 56
  %847 = shl i64 %838, 32
  %848 = ashr i64 %847, 56
  %849 = sdiv i64 %840, 60
  %850 = add nsw i64 %848, %849
  %851 = shl i64 %838, 24
  %852 = ashr i64 %851, 56
  %853 = srem i64 %840, 60
  %854 = add nsw i64 %852, %853
  %855 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %837, i64 %842, i64 %844, i64 %846, i64 %850, i64 %854) #17, !noalias !24
  %856 = extractvalue { i64, i64 } %855, 0
  %857 = extractvalue { i64, i64 } %855, 1
  %858 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %809, i64 0, i32 3, i32 0, i32 0
  store i64 %856, i64* %858, align 8
  %859 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %809, i64 0, i32 3, i32 0, i32 1
  %860 = bitcast i8* %859 to i64*
  store i64 %857, i64* %860, align 8
  %861 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %809, i64 1
  %862 = icmp eq %"struct.absl::time_internal::cctz::TransitionType"* %861, %762
  br i1 %862, label %766, label %808

863:                                              ; preds = %238, %249, %354, %327, %469, %738, %730, %722, %714, %708, %740, %806, %801, %770, %455, %588, %114
  %864 = phi i1 [ false, %114 ], [ false, %588 ], [ false, %455 ], [ true, %770 ], [ true, %801 ], [ true, %806 ], [ false, %740 ], [ false, %708 ], [ false, %714 ], [ false, %722 ], [ false, %730 ], [ false, %738 ], [ false, %469 ], [ false, %327 ], [ false, %354 ], [ false, %249 ], [ false, %238 ]
  %865 = load i8*, i8** %97, align 8
  %866 = icmp eq i8* %865, null
  br i1 %866, label %870, label %867

867:                                              ; preds = %863
  %868 = ptrtoint i8* %865 to i64
  %869 = bitcast i8** %98 to i64*
  store i64 %868, i64* %869, align 8
  call void @_ZdlPv(i8* nonnull %865) #18
  br label %870

870:                                              ; preds = %863, %867
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #17
  br label %871

871:                                              ; preds = %69, %61, %870, %34, %55, %67, %76, %81, %20
  %872 = phi i1 [ false, %20 ], [ %864, %870 ], [ false, %34 ], [ false, %55 ], [ false, %61 ], [ false, %67 ], [ false, %69 ], [ false, %76 ], [ false, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #17
  br label %873

873:                                              ; preds = %17, %2, %871
  %874 = phi i1 [ %872, %871 ], [ false, %2 ], [ false, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %10) #17
  ret i1 %874
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4absl13time_internal4cctz12TimeZoneInfo4LoadERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::chrono::duration", align 8
  %4 = alloca %"class.std::__1::function", align 8
  %5 = bitcast %"class.std::__1::chrono::duration"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.std::__1::chrono::duration", %"class.std::__1::chrono::duration"* %3, i64 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = call zeroext i1 @_ZN4absl13time_internal4cctz19FixedOffsetFromNameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS2_6chrono8durationIlNS2_5ratioILl1ELl1EEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::chrono::duration"* nonnull %3) #17
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = call zeroext i1 @_ZN4absl13time_internal4cctz12TimeZoneInfo17ResetToBuiltinUTCERKNSt3__16chrono8durationIlNS3_5ratioILl1ELl1EEEEE(%"class.absl::time_internal::cctz::TimeZoneInfo"* %0, %"class.std::__1::chrono::duration"* nonnull dereferenceable(8) %3)
  br label %31

10:                                               ; preds = %2
  %11 = load %"class.absl::time_internal::cctz::ZoneInfoSource"* (%"class.std::__1::basic_string"*, %"class.std::__1::function"*)*, %"class.absl::time_internal::cctz::ZoneInfoSource"* (%"class.std::__1::basic_string"*, %"class.std::__1::function"*)** @_ZN4absl13time_internal14cctz_extension24zone_info_source_factoryE, align 8
  %12 = bitcast %"class.std::__1::function"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 2
  store %"class.absl::time_internal::cctz::ZoneInfoSource"* (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::basic_string"*)* @"_ZNSt3__110__function16__policy_invokerIFNS_10unique_ptrIN4absl13time_internal4cctz14ZoneInfoSourceENS_14default_deleteIS6_EEEERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEE11__call_implINS0_20__default_alloc_funcIZNS5_12TimeZoneInfo4LoadESH_E3$_1SI_EEEES9_PKNS0_16__policy_storageESH_", %"class.absl::time_internal::cctz::ZoneInfoSource"* (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::basic_string"*)** %13, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4absl13time_internal4cctz12TimeZoneInfo4LoadERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_1FNS_10unique_ptrINS6_14ZoneInfoSourceENS_14default_deleteISI_EEEESF_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %14, align 8
  %15 = call %"class.absl::time_internal::cctz::ZoneInfoSource"* %11(%"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::function"* nonnull dereferenceable(32) %4) #17
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 1
  %18 = load void (i8*)*, void (i8*)** %17, align 8
  %19 = icmp eq void (i8*)* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void %18(i8* %22) #17
  br label %23

23:                                               ; preds = %10, %20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #17
  %24 = icmp eq %"class.absl::time_internal::cctz::ZoneInfoSource"* %15, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %23
  %26 = call zeroext i1 @_ZN4absl13time_internal4cctz12TimeZoneInfo4LoadEPNS1_14ZoneInfoSourceE(%"class.absl::time_internal::cctz::TimeZoneInfo"* %0, %"class.absl::time_internal::cctz::ZoneInfoSource"* nonnull %15)
  %27 = bitcast %"class.absl::time_internal::cctz::ZoneInfoSource"* %15 to void (%"class.absl::time_internal::cctz::ZoneInfoSource"*)***
  %28 = load void (%"class.absl::time_internal::cctz::ZoneInfoSource"*)**, void (%"class.absl::time_internal::cctz::ZoneInfoSource"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.absl::time_internal::cctz::ZoneInfoSource"*)*, void (%"class.absl::time_internal::cctz::ZoneInfoSource"*)** %28, i64 1
  %30 = load void (%"class.absl::time_internal::cctz::ZoneInfoSource"*)*, void (%"class.absl::time_internal::cctz::ZoneInfoSource"*)** %29, align 8
  call void %30(%"class.absl::time_internal::cctz::ZoneInfoSource"* nonnull %15) #17
  br label %31

31:                                               ; preds = %23, %25, %8
  %32 = phi i1 [ true, %8 ], [ %26, %25 ], [ false, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  ret i1 %32
}

declare zeroext i1 @_ZN4absl13time_internal4cctz19FixedOffsetFromNameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS2_6chrono8durationIlNS2_5ratioILl1ELl1EEEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::chrono::duration"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_10TransitionE(%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* noalias nocapture sret, %"class.absl::time_internal::cctz::TimeZoneInfo"*, i64, %"struct.absl::time_internal::cctz::Transition"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %3, i64 0, i32 1
  %6 = load i8, i8* %5, align 8
  %7 = zext i8 %6 to i64
  %8 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 2, i32 0, i32 0
  %9 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %8, align 8
  %10 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %3, i64 0, i32 3, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %3, i64 0, i32 3, i32 0, i32 1
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %3, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = sub nsw i64 %2, %16
  %18 = shl i64 %14, 56
  %19 = ashr exact i64 %18, 56
  %20 = shl i64 %14, 48
  %21 = ashr i64 %20, 56
  %22 = shl i64 %14, 40
  %23 = ashr i64 %22, 56
  %24 = shl i64 %14, 32
  %25 = ashr i64 %24, 56
  %26 = sdiv i64 %17, 60
  %27 = add nsw i64 %26, %25
  %28 = shl i64 %14, 24
  %29 = ashr i64 %28, 56
  %30 = srem i64 %17, 60
  %31 = add nsw i64 %30, %29
  %32 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %11, i64 %19, i64 %21, i64 %23, i64 %27, i64 %31) #17
  %33 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = extractvalue { i64, i64 } %32, 0
  store i64 %34, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 1
  %36 = bitcast i8* %35 to i64*
  %37 = extractvalue { i64, i64 } %32, 1
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %9, i64 %7, i32 0
  %40 = load i32, i32* %39, align 8
  store i32 %40, i32* %38, align 8
  %41 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 2
  %42 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %9, i64 %7, i32 4
  %43 = load i8, i8* %42, align 8, !range !11
  store i8 %43, i8* %41, align 4
  %44 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 3
  %45 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 4
  %46 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %9, i64 %7, i32 5
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %4
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  br label %58

56:                                               ; preds = %4
  %57 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  br label %58

58:                                               ; preds = %53, %56
  %59 = phi i8* [ %55, %53 ], [ %57, %56 ]
  %60 = getelementptr inbounds i8, i8* %59, i64 %48
  store i8* %60, i8** %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz12TimeZoneInfo9TimeLocalERKNS1_6detail10civil_timeINS3_10second_tagEEEl(%"struct.absl::time_internal::cctz::time_zone::civil_lookup"* noalias sret, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"* dereferenceable(16), i64) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 32, i1 false)
  %6 = bitcast %"class.absl::time_internal::cctz::TimeZoneInfo"* %1 to void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"*)***
  %7 = load void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"*)**, void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"*)*, void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"*)** %7, i64 3
  %9 = load void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"*)*, void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"*)** %8, align 8
  tail call void %9(%"struct.absl::time_internal::cctz::time_zone::civil_lookup"* sret %0, %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, %"class.absl::time_internal::cctz::detail::civil_time"* dereferenceable(16) %2) #17
  %10 = icmp sgt i64 %3, 730692561
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 9223372036854775807, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %14, align 8
  br label %33

15:                                               ; preds = %4
  %16 = mul nsw i64 %3, 12622780800
  %17 = sub nsw i64 9223372036854775807, %16
  %18 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 1, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp slt i64 %17, %19
  %21 = add nsw i64 %19, %16
  %22 = select i1 %20, i64 9223372036854775807, i64 %21
  store i64 %22, i64* %18, align 8
  %23 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 2, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp slt i64 %17, %24
  %26 = add nsw i64 %24, %16
  %27 = select i1 %25, i64 9223372036854775807, i64 %26
  store i64 %27, i64* %23, align 8
  %28 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 3, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp slt i64 %17, %29
  %31 = add nsw i64 %29, %16
  %32 = select i1 %30, i64 9223372036854775807, i64 %31
  store i64 %32, i64* %28, align 8
  br label %33

33:                                               ; preds = %15, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz12TimeZoneInfo9BreakTimeERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEE(%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* noalias sret, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.std::__1::chrono::time_point"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::chrono::time_point", align 8
  %5 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17
  %6 = sdiv i64 %5, 1000000
  %7 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %2, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = sub nsw i64 %8, %6
  %10 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"struct.absl::time_internal::cctz::Transition"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = sdiv exact i64 %16, 48
  %18 = inttoptr i64 %15 to %"struct.absl::time_internal::cctz::Transition"*
  %19 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %18, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp slt i64 %9, %20
  br i1 %21, label %22, label %29

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 3
  %24 = load i8, i8* %23, align 8
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 2, i32 0, i32 0
  %27 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %26, align 8
  %28 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %27, i64 %25
  tail call void @_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE(%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* sret %0, %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 %9, %"struct.absl::time_internal::cctz::TransitionType"* dereferenceable(48) %28)
  br label %281

29:                                               ; preds = %3
  %30 = add nsw i64 %17, -1
  %31 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %18, i64 %30, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %9, %32
  br i1 %33, label %129, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 7
  %36 = load i8, i8* %35, align 8, !range !11
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %74, label %38

38:                                               ; preds = %34
  %39 = sub nsw i64 %9, %32
  %40 = sdiv i64 %39, 12622780800
  %41 = add nsw i64 %40, 1
  %42 = bitcast %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 -86, i64 32, i1 false)
  %43 = bitcast %"class.std::__1::chrono::time_point"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #17
  %44 = mul i64 %41, -12622780800
  %45 = add i64 %44, %8
  %46 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %4, i64 0, i32 0, i32 0
  store i64 %45, i64* %46, align 8
  %47 = bitcast %"class.absl::time_internal::cctz::TimeZoneInfo"* %1 to void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.std::__1::chrono::time_point"*)***
  %48 = load void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.std::__1::chrono::time_point"*)**, void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.std::__1::chrono::time_point"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.std::__1::chrono::time_point"*)*, void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.std::__1::chrono::time_point"*)** %48, i64 2
  %50 = load void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.std::__1::chrono::time_point"*)*, void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.std::__1::chrono::time_point"*)** %49, align 8
  call void %50(%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* sret %0, %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, %"class.std::__1::chrono::time_point"* nonnull dereferenceable(8) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #17
  %51 = mul nsw i64 %41, 400
  %52 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = add nsw i64 %53, %51
  %55 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 1
  %56 = load i8, i8* %55, align 8
  %57 = sext i8 %56 to i64
  %58 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 2
  %59 = load i8, i8* %58, align 1
  %60 = sext i8 %59 to i64
  %61 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 3
  %62 = load i8, i8* %61, align 2
  %63 = sext i8 %62 to i64
  %64 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 4
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 %65 to i64
  %67 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 5
  %68 = load i8, i8* %67, align 4
  %69 = sext i8 %68 to i64
  %70 = call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %54, i64 %57, i64 %60, i64 %63, i64 %66, i64 %69) #17
  %71 = extractvalue { i64, i64 } %70, 0
  %72 = extractvalue { i64, i64 } %70, 1
  store i64 %71, i64* %52, align 8
  %73 = bitcast i8* %55 to i64*
  store i64 %72, i64* %73, align 8
  br label %281

74:                                               ; preds = %34
  %75 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %18, i64 %30, i32 1
  %76 = load i8, i8* %75, align 8, !noalias !27
  %77 = zext i8 %76 to i64
  %78 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 2, i32 0, i32 0
  %79 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %78, align 8, !noalias !27
  %80 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %18, i64 %30, i32 3, i32 0, i32 0
  %81 = load i64, i64* %80, align 8, !noalias !27
  %82 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %18, i64 %30, i32 3, i32 0, i32 1
  %83 = bitcast i8* %82 to i64*
  %84 = load i64, i64* %83, align 8, !noalias !27
  %85 = sub nsw i64 %9, %32
  %86 = shl i64 %84, 56
  %87 = ashr exact i64 %86, 56
  %88 = shl i64 %84, 48
  %89 = ashr i64 %88, 56
  %90 = shl i64 %84, 40
  %91 = ashr i64 %90, 56
  %92 = shl i64 %84, 32
  %93 = ashr i64 %92, 56
  %94 = sdiv i64 %85, 60
  %95 = add nsw i64 %93, %94
  %96 = shl i64 %84, 24
  %97 = ashr i64 %96, 56
  %98 = srem i64 %85, 60
  %99 = add nsw i64 %97, %98
  %100 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %81, i64 %87, i64 %89, i64 %91, i64 %95, i64 %99) #17, !noalias !27
  %101 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 0
  %102 = extractvalue { i64, i64 } %100, 0
  store i64 %102, i64* %101, align 8, !alias.scope !27
  %103 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 1
  %104 = bitcast i8* %103 to i64*
  %105 = extractvalue { i64, i64 } %100, 1
  store i64 %105, i64* %104, align 8, !alias.scope !27
  %106 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 1
  %107 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %79, i64 %77, i32 0
  %108 = load i32, i32* %107, align 8, !noalias !27
  store i32 %108, i32* %106, align 8, !alias.scope !27
  %109 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 2
  %110 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %79, i64 %77, i32 4
  %111 = load i8, i8* %110, align 8, !range !11, !noalias !27
  store i8 %111, i8* %109, align 4, !alias.scope !27
  %112 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 3
  %113 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 4
  %114 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %79, i64 %77, i32 5
  %115 = load i8, i8* %114, align 1, !noalias !27
  %116 = zext i8 %115 to i64
  %117 = bitcast %"class.std::__1::basic_string"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1, !noalias !27
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %74
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8, !noalias !27
  br label %126

124:                                              ; preds = %74
  %125 = bitcast %"class.std::__1::basic_string"* %113 to i8*
  br label %126

126:                                              ; preds = %121, %124
  %127 = phi i8* [ %123, %121 ], [ %125, %124 ]
  %128 = getelementptr inbounds i8, i8* %127, i64 %116
  store i8* %128, i8** %112, align 8, !alias.scope !27
  br label %281

129:                                              ; preds = %29
  %130 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i64, i64* %130 monotonic, align 8
  %132 = icmp ne i64 %131, 0
  %133 = icmp ult i64 %131, %17
  %134 = and i1 %132, %133
  br i1 %134, label %135, label %199

135:                                              ; preds = %129
  %136 = add i64 %131, -1
  %137 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %18, i64 %136, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = icmp slt i64 %9, %138
  br i1 %139, label %199, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %18, i64 %131, i32 0
  %142 = load i64, i64* %141, align 8
  %143 = icmp slt i64 %9, %142
  br i1 %143, label %144, label %199

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %18, i64 %136, i32 1
  %146 = load i8, i8* %145, align 8, !noalias !30
  %147 = zext i8 %146 to i64
  %148 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 2, i32 0, i32 0
  %149 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %148, align 8, !noalias !30
  %150 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %18, i64 %136, i32 3, i32 0, i32 0
  %151 = load i64, i64* %150, align 8, !noalias !30
  %152 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %18, i64 %136, i32 3, i32 0, i32 1
  %153 = bitcast i8* %152 to i64*
  %154 = load i64, i64* %153, align 8, !noalias !30
  %155 = sub nsw i64 %9, %138
  %156 = shl i64 %154, 56
  %157 = ashr exact i64 %156, 56
  %158 = shl i64 %154, 48
  %159 = ashr i64 %158, 56
  %160 = shl i64 %154, 40
  %161 = ashr i64 %160, 56
  %162 = shl i64 %154, 32
  %163 = ashr i64 %162, 56
  %164 = sdiv i64 %155, 60
  %165 = add nsw i64 %163, %164
  %166 = shl i64 %154, 24
  %167 = ashr i64 %166, 56
  %168 = srem i64 %155, 60
  %169 = add nsw i64 %167, %168
  %170 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %151, i64 %157, i64 %159, i64 %161, i64 %165, i64 %169) #17, !noalias !30
  %171 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 0
  %172 = extractvalue { i64, i64 } %170, 0
  store i64 %172, i64* %171, align 8, !alias.scope !30
  %173 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 1
  %174 = bitcast i8* %173 to i64*
  %175 = extractvalue { i64, i64 } %170, 1
  store i64 %175, i64* %174, align 8, !alias.scope !30
  %176 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 1
  %177 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %149, i64 %147, i32 0
  %178 = load i32, i32* %177, align 8, !noalias !30
  store i32 %178, i32* %176, align 8, !alias.scope !30
  %179 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 2
  %180 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %149, i64 %147, i32 4
  %181 = load i8, i8* %180, align 8, !range !11, !noalias !30
  store i8 %181, i8* %179, align 4, !alias.scope !30
  %182 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 3
  %183 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 4
  %184 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %149, i64 %147, i32 5
  %185 = load i8, i8* %184, align 1, !noalias !30
  %186 = zext i8 %185 to i64
  %187 = bitcast %"class.std::__1::basic_string"* %183 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %187, i64 0, i32 1, i32 0
  %189 = load i8, i8* %188, align 1, !noalias !30
  %190 = icmp slt i8 %189, 0
  br i1 %190, label %191, label %194

191:                                              ; preds = %144
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %183, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load i8*, i8** %192, align 8, !noalias !30
  br label %196

194:                                              ; preds = %144
  %195 = bitcast %"class.std::__1::basic_string"* %183 to i8*
  br label %196

196:                                              ; preds = %191, %194
  %197 = phi i8* [ %193, %191 ], [ %195, %194 ]
  %198 = getelementptr inbounds i8, i8* %197, i64 %186
  store i8* %198, i8** %182, align 8, !alias.scope !30
  br label %281

199:                                              ; preds = %129, %135, %140
  %200 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %18, i64 %17
  %201 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %200 to i64
  %202 = sub i64 %201, %15
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %220, label %204

204:                                              ; preds = %199
  %205 = sdiv exact i64 %202, 48
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ %205, %204 ], [ %218, %206 ]
  %208 = phi %"struct.absl::time_internal::cctz::Transition"* [ %18, %204 ], [ %217, %206 ]
  %209 = lshr i64 %207, 1
  %210 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %208, i64 %209
  %211 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %210, i64 0, i32 0
  %212 = load i64, i64* %211, align 8
  %213 = icmp slt i64 %9, %212
  %214 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %210, i64 1
  %215 = xor i64 %209, -1
  %216 = add i64 %207, %215
  %217 = select i1 %213, %"struct.absl::time_internal::cctz::Transition"* %208, %"struct.absl::time_internal::cctz::Transition"* %214
  %218 = select i1 %213, i64 %209, i64 %216
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %206

220:                                              ; preds = %206, %199
  %221 = phi %"struct.absl::time_internal::cctz::Transition"* [ %18, %199 ], [ %217, %206 ]
  %222 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %221 to i64
  %223 = sub i64 %222, %15
  %224 = sdiv exact i64 %223, 48
  store atomic i64 %224, i64* %130 monotonic, align 8
  %225 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %221, i64 -1, i32 1
  %226 = load i8, i8* %225, align 8, !noalias !33
  %227 = zext i8 %226 to i64
  %228 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 2, i32 0, i32 0
  %229 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %228, align 8, !noalias !33
  %230 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %221, i64 -1, i32 3, i32 0, i32 0
  %231 = load i64, i64* %230, align 8, !noalias !33
  %232 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %221, i64 -1, i32 3, i32 0, i32 1
  %233 = bitcast i8* %232 to i64*
  %234 = load i64, i64* %233, align 8, !noalias !33
  %235 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %221, i64 -1, i32 0
  %236 = load i64, i64* %235, align 8, !noalias !33
  %237 = sub nsw i64 %9, %236
  %238 = shl i64 %234, 56
  %239 = ashr exact i64 %238, 56
  %240 = shl i64 %234, 48
  %241 = ashr i64 %240, 56
  %242 = shl i64 %234, 40
  %243 = ashr i64 %242, 56
  %244 = shl i64 %234, 32
  %245 = ashr i64 %244, 56
  %246 = sdiv i64 %237, 60
  %247 = add nsw i64 %246, %245
  %248 = shl i64 %234, 24
  %249 = ashr i64 %248, 56
  %250 = srem i64 %237, 60
  %251 = add nsw i64 %250, %249
  %252 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %231, i64 %239, i64 %241, i64 %243, i64 %247, i64 %251) #17, !noalias !33
  %253 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 0
  %254 = extractvalue { i64, i64 } %252, 0
  store i64 %254, i64* %253, align 8, !alias.scope !33
  %255 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 0, i32 0, i32 1
  %256 = bitcast i8* %255 to i64*
  %257 = extractvalue { i64, i64 } %252, 1
  store i64 %257, i64* %256, align 8, !alias.scope !33
  %258 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 1
  %259 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %229, i64 %227, i32 0
  %260 = load i32, i32* %259, align 8, !noalias !33
  store i32 %260, i32* %258, align 8, !alias.scope !33
  %261 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 2
  %262 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %229, i64 %227, i32 4
  %263 = load i8, i8* %262, align 8, !range !11, !noalias !33
  store i8 %263, i8* %261, align 4, !alias.scope !33
  %264 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::absolute_lookup", %"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* %0, i64 0, i32 3
  %265 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 4
  %266 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %229, i64 %227, i32 5
  %267 = load i8, i8* %266, align 1, !noalias !33
  %268 = zext i8 %267 to i64
  %269 = bitcast %"class.std::__1::basic_string"* %265 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %270 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %269, i64 0, i32 1, i32 0
  %271 = load i8, i8* %270, align 1, !noalias !33
  %272 = icmp slt i8 %271, 0
  br i1 %272, label %273, label %276

273:                                              ; preds = %220
  %274 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %265, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load i8*, i8** %274, align 8, !noalias !33
  br label %278

276:                                              ; preds = %220
  %277 = bitcast %"class.std::__1::basic_string"* %265 to i8*
  br label %278

278:                                              ; preds = %273, %276
  %279 = phi i8* [ %275, %273 ], [ %277, %276 ]
  %280 = getelementptr inbounds i8, i8* %279, i64 %268
  store i8* %280, i8** %264, align 8, !alias.scope !33
  br label %281

281:                                              ; preds = %196, %278, %126, %38, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz12TimeZoneInfo8MakeTimeERKNS1_6detail10civil_timeINS3_10second_tagEEE(%"struct.absl::time_internal::cctz::time_zone::civil_lookup"* noalias sret, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"* readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.absl::time_internal::cctz::detail::civil_time"*
  %6 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"struct.absl::time_internal::cctz::Transition"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 48
  %14 = inttoptr i64 %11 to %"struct.absl::time_internal::cctz::Transition"*
  %15 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %13
  %16 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 0, i32 3, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %278, label %21

21:                                               ; preds = %3
  %22 = icmp eq i64 %17, %19
  br i1 %22, label %23, label %61

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %25 = load i8, i8* %24, align 8
  %26 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 0, i32 3, i32 0, i32 1
  %27 = load i8, i8* %26, align 8
  %28 = icmp slt i8 %25, %27
  br i1 %28, label %278, label %29

29:                                               ; preds = %23
  %30 = icmp eq i8 %25, %27
  br i1 %30, label %31, label %61

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 0, i32 3, i32 0, i32 2
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %33, %35
  br i1 %36, label %278, label %37

37:                                               ; preds = %31
  %38 = icmp eq i8 %33, %35
  br i1 %38, label %39, label %61

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 3
  %41 = load i8, i8* %40, align 2
  %42 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 0, i32 3, i32 0, i32 3
  %43 = load i8, i8* %42, align 2
  %44 = icmp slt i8 %41, %43
  br i1 %44, label %278, label %45

45:                                               ; preds = %39
  %46 = icmp eq i8 %41, %43
  br i1 %46, label %47, label %61

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 4
  %49 = load i8, i8* %48, align 1
  %50 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 0, i32 3, i32 0, i32 4
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %49, %51
  br i1 %52, label %278, label %53

53:                                               ; preds = %47
  %54 = icmp eq i8 %49, %51
  br i1 %54, label %55, label %61

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 5
  %57 = load i8, i8* %56, align 4
  %58 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 0, i32 3, i32 0, i32 5
  %59 = load i8, i8* %58, align 4
  %60 = icmp slt i8 %57, %59
  br i1 %60, label %278, label %61

61:                                               ; preds = %53, %45, %37, %29, %21, %55
  %62 = add nsw i64 %13, -1
  %63 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %62, i32 3, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp slt i64 %17, %64
  br i1 %65, label %106, label %66

66:                                               ; preds = %61
  %67 = icmp eq i64 %17, %64
  br i1 %67, label %68, label %273

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %70 = load i8, i8* %69, align 8
  %71 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %62, i32 3, i32 0, i32 1
  %72 = load i8, i8* %71, align 8
  %73 = icmp slt i8 %70, %72
  br i1 %73, label %106, label %74

74:                                               ; preds = %68
  %75 = icmp eq i8 %70, %72
  br i1 %75, label %76, label %273

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 2
  %78 = load i8, i8* %77, align 1
  %79 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %62, i32 3, i32 0, i32 2
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %78, %80
  br i1 %81, label %106, label %82

82:                                               ; preds = %76
  %83 = icmp eq i8 %78, %80
  br i1 %83, label %84, label %273

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 3
  %86 = load i8, i8* %85, align 2
  %87 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %62, i32 3, i32 0, i32 3
  %88 = load i8, i8* %87, align 2
  %89 = icmp slt i8 %86, %88
  br i1 %89, label %106, label %90

90:                                               ; preds = %84
  %91 = icmp eq i8 %86, %88
  br i1 %91, label %92, label %273

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 4
  %94 = load i8, i8* %93, align 1
  %95 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %62, i32 3, i32 0, i32 4
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %94, %96
  br i1 %97, label %106, label %98

98:                                               ; preds = %92
  %99 = icmp eq i8 %94, %96
  br i1 %99, label %100, label %273

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 5
  %102 = load i8, i8* %101, align 4
  %103 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %62, i32 3, i32 0, i32 5
  %104 = load i8, i8* %103, align 4
  %105 = icmp slt i8 %102, %104
  br i1 %105, label %106, label %273

106:                                              ; preds = %100, %92, %84, %76, %68, %61
  %107 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i64, i64* %107 monotonic, align 8
  %109 = icmp ne i64 %108, 0
  %110 = icmp ult i64 %108, %13
  %111 = and i1 %109, %110
  br i1 %111, label %112, label %206

112:                                              ; preds = %106
  %113 = add i64 %108, -1
  %114 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %113, i32 3, i32 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = icmp slt i64 %17, %115
  br i1 %116, label %206, label %117

117:                                              ; preds = %112
  %118 = icmp eq i64 %17, %115
  br i1 %118, label %119, label %157

119:                                              ; preds = %117
  %120 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %121 = load i8, i8* %120, align 8
  %122 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %113, i32 3, i32 0, i32 1
  %123 = load i8, i8* %122, align 8
  %124 = icmp slt i8 %121, %123
  br i1 %124, label %206, label %125

125:                                              ; preds = %119
  %126 = icmp eq i8 %121, %123
  br i1 %126, label %127, label %157

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 2
  %129 = load i8, i8* %128, align 1
  %130 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %113, i32 3, i32 0, i32 2
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %129, %131
  br i1 %132, label %206, label %133

133:                                              ; preds = %127
  %134 = icmp eq i8 %129, %131
  br i1 %134, label %135, label %157

135:                                              ; preds = %133
  %136 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 3
  %137 = load i8, i8* %136, align 2
  %138 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %113, i32 3, i32 0, i32 3
  %139 = load i8, i8* %138, align 2
  %140 = icmp slt i8 %137, %139
  br i1 %140, label %206, label %141

141:                                              ; preds = %135
  %142 = icmp eq i8 %137, %139
  br i1 %142, label %143, label %157

143:                                              ; preds = %141
  %144 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 4
  %145 = load i8, i8* %144, align 1
  %146 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %113, i32 3, i32 0, i32 4
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %145, %147
  br i1 %148, label %206, label %149

149:                                              ; preds = %143
  %150 = icmp eq i8 %145, %147
  br i1 %150, label %151, label %157

151:                                              ; preds = %149
  %152 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 5
  %153 = load i8, i8* %152, align 4
  %154 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %113, i32 3, i32 0, i32 5
  %155 = load i8, i8* %154, align 4
  %156 = icmp slt i8 %153, %155
  br i1 %156, label %206, label %157

157:                                              ; preds = %151, %149, %141, %133, %125, %117
  %158 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %108
  %159 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %108, i32 3, i32 0, i32 0
  %160 = load i64, i64* %159, align 8
  %161 = icmp slt i64 %17, %160
  br i1 %161, label %204, label %162

162:                                              ; preds = %157
  %163 = icmp eq i64 %17, %160
  br i1 %163, label %164, label %206

164:                                              ; preds = %162
  %165 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %166 = load i8, i8* %165, align 8
  %167 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %108, i32 3, i32 0, i32 1
  %168 = load i8, i8* %167, align 8
  %169 = icmp slt i8 %166, %168
  br i1 %169, label %204, label %170

170:                                              ; preds = %164
  %171 = icmp eq i8 %166, %168
  br i1 %171, label %172, label %206

172:                                              ; preds = %170
  %173 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 2
  %174 = load i8, i8* %173, align 1
  %175 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %108, i32 3, i32 0, i32 2
  %176 = load i8, i8* %175, align 1
  %177 = icmp slt i8 %174, %176
  br i1 %177, label %204, label %178

178:                                              ; preds = %172
  %179 = icmp eq i8 %174, %176
  br i1 %179, label %180, label %206

180:                                              ; preds = %178
  %181 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 3
  %182 = load i8, i8* %181, align 2
  %183 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %108, i32 3, i32 0, i32 3
  %184 = load i8, i8* %183, align 2
  %185 = icmp slt i8 %182, %184
  br i1 %185, label %204, label %186

186:                                              ; preds = %180
  %187 = icmp eq i8 %182, %184
  br i1 %187, label %188, label %206

188:                                              ; preds = %186
  %189 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 4
  %190 = load i8, i8* %189, align 1
  %191 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %108, i32 3, i32 0, i32 4
  %192 = load i8, i8* %191, align 1
  %193 = icmp slt i8 %190, %192
  br i1 %193, label %204, label %194

194:                                              ; preds = %188
  %195 = icmp eq i8 %190, %192
  br i1 %195, label %196, label %206

196:                                              ; preds = %194
  %197 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 5
  %198 = load i8, i8* %197, align 4
  %199 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 %108, i32 3, i32 0, i32 5
  %200 = load i8, i8* %199, align 4
  %201 = icmp sge i8 %198, %200
  %202 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %158, null
  %203 = or i1 %202, %201
  br i1 %203, label %206, label %273

204:                                              ; preds = %188, %180, %172, %164, %157
  %205 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %158, null
  br i1 %205, label %206, label %273

206:                                              ; preds = %151, %196, %194, %186, %178, %170, %162, %143, %135, %127, %119, %112, %106, %204
  %207 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %208 = load i8, i8* %207, align 8
  %209 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 2
  %210 = load i8, i8* %209, align 1
  %211 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 3
  %212 = load i8, i8* %211, align 2
  %213 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 4
  %214 = load i8, i8* %213, align 1
  %215 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 5
  %216 = load i8, i8* %215, align 4
  %217 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %15 to i64
  %218 = sub i64 %217, %11
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %268, label %220

220:                                              ; preds = %206
  %221 = sdiv exact i64 %218, 48
  br label %222

222:                                              ; preds = %264, %220
  %223 = phi i64 [ %221, %220 ], [ %266, %264 ]
  %224 = phi %"struct.absl::time_internal::cctz::Transition"* [ %14, %220 ], [ %265, %264 ]
  %225 = lshr i64 %223, 1
  %226 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %224, i64 1
  %227 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %224, i64 %225, i32 3, i32 0, i32 0
  %228 = load i64, i64* %227, align 8
  %229 = icmp slt i64 %17, %228
  br i1 %229, label %264, label %230

230:                                              ; preds = %222
  %231 = icmp eq i64 %17, %228
  br i1 %231, label %232, label %260

232:                                              ; preds = %230
  %233 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %224, i64 %225, i32 3, i32 0, i32 1
  %234 = load i8, i8* %233, align 8
  %235 = icmp slt i8 %208, %234
  br i1 %235, label %264, label %236

236:                                              ; preds = %232
  %237 = icmp eq i8 %208, %234
  br i1 %237, label %238, label %260

238:                                              ; preds = %236
  %239 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %224, i64 %225, i32 3, i32 0, i32 2
  %240 = load i8, i8* %239, align 1
  %241 = icmp slt i8 %210, %240
  br i1 %241, label %264, label %242

242:                                              ; preds = %238
  %243 = icmp eq i8 %210, %240
  br i1 %243, label %244, label %260

244:                                              ; preds = %242
  %245 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %224, i64 %225, i32 3, i32 0, i32 3
  %246 = load i8, i8* %245, align 2
  %247 = icmp slt i8 %212, %246
  br i1 %247, label %264, label %248

248:                                              ; preds = %244
  %249 = icmp eq i8 %212, %246
  br i1 %249, label %250, label %260

250:                                              ; preds = %248
  %251 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %224, i64 %225, i32 3, i32 0, i32 4
  %252 = load i8, i8* %251, align 1
  %253 = icmp slt i8 %214, %252
  br i1 %253, label %264, label %254

254:                                              ; preds = %250
  %255 = icmp eq i8 %214, %252
  br i1 %255, label %256, label %260

256:                                              ; preds = %254
  %257 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %224, i64 %225, i32 3, i32 0, i32 5
  %258 = load i8, i8* %257, align 4
  %259 = icmp slt i8 %216, %258
  br i1 %259, label %264, label %260

260:                                              ; preds = %256, %254, %248, %242, %236, %230
  %261 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %226, i64 %225
  %262 = xor i64 %225, -1
  %263 = add i64 %223, %262
  br label %264

264:                                              ; preds = %260, %256, %250, %244, %238, %232, %222
  %265 = phi %"struct.absl::time_internal::cctz::Transition"* [ %261, %260 ], [ %224, %256 ], [ %224, %222 ], [ %224, %232 ], [ %224, %238 ], [ %224, %244 ], [ %224, %250 ]
  %266 = phi i64 [ %263, %260 ], [ %225, %256 ], [ %225, %222 ], [ %225, %232 ], [ %225, %238 ], [ %225, %244 ], [ %225, %250 ]
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %222

268:                                              ; preds = %264, %206
  %269 = phi %"struct.absl::time_internal::cctz::Transition"* [ %14, %206 ], [ %265, %264 ]
  %270 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %269 to i64
  %271 = sub i64 %270, %11
  %272 = sdiv exact i64 %271, 48
  store atomic i64 %272, i64* %107 monotonic, align 8
  br label %273

273:                                              ; preds = %100, %196, %98, %90, %82, %74, %66, %204, %268
  %274 = phi %"struct.absl::time_internal::cctz::Transition"* [ %15, %100 ], [ %269, %268 ], [ %158, %204 ], [ %15, %66 ], [ %15, %74 ], [ %15, %82 ], [ %15, %90 ], [ %15, %98 ], [ %158, %196 ]
  %275 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %274, %14
  br i1 %275, label %276, label %545

276:                                              ; preds = %273
  %277 = load i64, i64* %16, align 8
  br label %278

278:                                              ; preds = %276, %47, %39, %31, %23, %3, %55
  %279 = phi i64 [ %277, %276 ], [ %17, %47 ], [ %17, %39 ], [ %17, %31 ], [ %17, %23 ], [ %17, %3 ], [ %17, %55 ]
  %280 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 0, i32 4, i32 0, i32 0
  %281 = load i64, i64* %280, align 8
  %282 = icmp slt i64 %281, %279
  br i1 %282, label %434, label %283

283:                                              ; preds = %278
  %284 = icmp eq i64 %281, %279
  br i1 %284, label %285, label %323

285:                                              ; preds = %283
  %286 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 0, i32 4, i32 0, i32 1
  %287 = load i8, i8* %286, align 8
  %288 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %289 = load i8, i8* %288, align 8
  %290 = icmp slt i8 %287, %289
  br i1 %290, label %434, label %291

291:                                              ; preds = %285
  %292 = icmp eq i8 %287, %289
  br i1 %292, label %293, label %323

293:                                              ; preds = %291
  %294 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 0, i32 4, i32 0, i32 2
  %295 = load i8, i8* %294, align 1
  %296 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 2
  %297 = load i8, i8* %296, align 1
  %298 = icmp slt i8 %295, %297
  br i1 %298, label %434, label %299

299:                                              ; preds = %293
  %300 = icmp eq i8 %295, %297
  br i1 %300, label %301, label %323

301:                                              ; preds = %299
  %302 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 0, i32 4, i32 0, i32 3
  %303 = load i8, i8* %302, align 2
  %304 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 3
  %305 = load i8, i8* %304, align 2
  %306 = icmp slt i8 %303, %305
  br i1 %306, label %434, label %307

307:                                              ; preds = %301
  %308 = icmp eq i8 %303, %305
  br i1 %308, label %309, label %323

309:                                              ; preds = %307
  %310 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 0, i32 4, i32 0, i32 4
  %311 = load i8, i8* %310, align 1
  %312 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 4
  %313 = load i8, i8* %312, align 1
  %314 = icmp slt i8 %311, %313
  br i1 %314, label %434, label %315

315:                                              ; preds = %309
  %316 = icmp eq i8 %311, %313
  br i1 %316, label %317, label %323

317:                                              ; preds = %315
  %318 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 0, i32 4, i32 0, i32 5
  %319 = load i8, i8* %318, align 4
  %320 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 5
  %321 = load i8, i8* %320, align 4
  %322 = icmp slt i8 %319, %321
  br i1 %322, label %434, label %323

323:                                              ; preds = %317, %315, %307, %299, %291, %283
  %324 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 3
  %325 = load i8, i8* %324, align 8
  %326 = zext i8 %325 to i64
  %327 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 2, i32 0, i32 0
  %328 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %327, align 8
  %329 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %328, i64 %326, i32 3, i32 0, i32 0
  %330 = load i64, i64* %329, align 8
  %331 = icmp slt i64 %279, %330
  br i1 %331, label %372, label %332

332:                                              ; preds = %323
  %333 = icmp eq i64 %279, %330
  br i1 %333, label %334, label %376

334:                                              ; preds = %332
  %335 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %336 = load i8, i8* %335, align 8
  %337 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %328, i64 %326, i32 3, i32 0, i32 1
  %338 = load i8, i8* %337, align 8
  %339 = icmp slt i8 %336, %338
  br i1 %339, label %372, label %340

340:                                              ; preds = %334
  %341 = icmp eq i8 %336, %338
  br i1 %341, label %342, label %376

342:                                              ; preds = %340
  %343 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 2
  %344 = load i8, i8* %343, align 1
  %345 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %328, i64 %326, i32 3, i32 0, i32 2
  %346 = load i8, i8* %345, align 1
  %347 = icmp slt i8 %344, %346
  br i1 %347, label %372, label %348

348:                                              ; preds = %342
  %349 = icmp eq i8 %344, %346
  br i1 %349, label %350, label %376

350:                                              ; preds = %348
  %351 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 3
  %352 = load i8, i8* %351, align 2
  %353 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %328, i64 %326, i32 3, i32 0, i32 3
  %354 = load i8, i8* %353, align 2
  %355 = icmp slt i8 %352, %354
  br i1 %355, label %372, label %356

356:                                              ; preds = %350
  %357 = icmp eq i8 %352, %354
  br i1 %357, label %358, label %376

358:                                              ; preds = %356
  %359 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 4
  %360 = load i8, i8* %359, align 1
  %361 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %328, i64 %326, i32 3, i32 0, i32 4
  %362 = load i8, i8* %361, align 1
  %363 = icmp slt i8 %360, %362
  br i1 %363, label %372, label %364

364:                                              ; preds = %358
  %365 = icmp eq i8 %360, %362
  br i1 %365, label %366, label %376

366:                                              ; preds = %364
  %367 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 5
  %368 = load i8, i8* %367, align 4
  %369 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %328, i64 %326, i32 3, i32 0, i32 5
  %370 = load i8, i8* %369, align 4
  %371 = icmp slt i8 %368, %370
  br i1 %371, label %372, label %376

372:                                              ; preds = %358, %350, %342, %334, %323, %366
  %373 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 2, i32 0, i32 0
  %374 = bitcast i64* %373 to <2 x i64>*
  store <2 x i64> <i64 -9223372036854775808, i64 -9223372036854775808>, <2 x i64>* %374, align 8, !alias.scope !36
  %375 = bitcast %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0 to <2 x i64>*
  store <2 x i64> <i64 -6148914694099828736, i64 -9223372036854775808>, <2 x i64>* %375, align 8, !alias.scope !36
  br label %1253

376:                                              ; preds = %364, %356, %348, %340, %332, %366
  %377 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %378 = bitcast i8* %377 to i64*
  %379 = load i64, i64* %378, align 8
  %380 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %328, i64 %326, i32 0
  %381 = load i32, i32* %380, align 8
  %382 = sext i32 %381 to i64
  %383 = sdiv i64 %382, 60
  %384 = srem i64 %382, 60
  %385 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 1970, i64 1, i64 1, i64 0, i64 %383, i64 %384) #17
  %386 = extractvalue { i64, i64 } %385, 0
  %387 = extractvalue { i64, i64 } %385, 1
  %388 = lshr i64 %379, 32
  %389 = lshr i64 %387, 32
  %390 = lshr i64 %379, 16
  %391 = lshr i64 %387, 16
  %392 = trunc i64 %379 to i8
  %393 = lshr i64 %379, 8
  %394 = trunc i64 %393 to i8
  %395 = trunc i64 %387 to i8
  %396 = lshr i64 %387, 8
  %397 = trunc i64 %396 to i8
  %398 = tail call i64 @_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa(i64 %279, i8 signext %392, i8 signext %394, i64 %386, i8 signext %395, i8 signext %397) #17
  %399 = shl i64 %390, 24
  %400 = trunc i64 %399 to i32
  %401 = ashr exact i32 %400, 24
  %402 = shl i64 %391, 24
  %403 = trunc i64 %402 to i32
  %404 = ashr exact i32 %403, 24
  %405 = sub nsw i32 %401, %404
  %406 = sext i32 %405 to i64
  %407 = mul i64 %398, 24
  %408 = add i64 %407, %406
  %409 = trunc i64 %379 to i32
  %410 = ashr i32 %409, 24
  %411 = trunc i64 %387 to i32
  %412 = ashr i32 %411, 24
  %413 = sub nsw i32 %410, %412
  %414 = sext i32 %413 to i64
  %415 = mul i64 %408, 60
  %416 = add i64 %415, %414
  %417 = shl nuw nsw i64 %388, 24
  %418 = trunc i64 %417 to i32
  %419 = ashr exact i32 %418, 24
  %420 = shl nuw nsw i64 %389, 24
  %421 = trunc i64 %420 to i32
  %422 = ashr exact i32 %421, 24
  %423 = sub nsw i32 %419, %422
  %424 = sext i32 %423 to i64
  %425 = mul i64 %416, 60
  %426 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17, !noalias !39
  %427 = sdiv i64 %426, 1000000
  %428 = add nsw i64 %427, %424
  %429 = add i64 %428, %425
  %430 = bitcast %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0 to i64*
  store i64 -6148914694099828736, i64* %430, align 8, !alias.scope !42
  %431 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 1, i32 0, i32 0
  %432 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %429, i64* %432, align 8, !alias.scope !42
  %433 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %429, i64* %433, align 8, !alias.scope !42
  store i64 %429, i64* %431, align 8, !alias.scope !42
  br label %1253

434:                                              ; preds = %317, %309, %301, %293, %285, %278
  %435 = bitcast %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0 to i64*
  store i64 -6148914694099828735, i64* %435, align 8, !alias.scope !45
  %436 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 1, i32 0, i32 0
  %437 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 0, i32 0
  %438 = load i64, i64* %437, align 8, !noalias !45
  %439 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %440 = bitcast i8* %439 to i64*
  %441 = load i64, i64* %440, align 8, !noalias !45
  %442 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 0, i32 4, i32 0, i32 1
  %443 = bitcast i8* %442 to i64*
  %444 = load i64, i64* %443, align 8, !noalias !45
  %445 = lshr i64 %441, 32
  %446 = lshr i64 %444, 32
  %447 = lshr i64 %441, 16
  %448 = lshr i64 %444, 16
  %449 = trunc i64 %441 to i8
  %450 = lshr i64 %441, 8
  %451 = trunc i64 %450 to i8
  %452 = trunc i64 %444 to i8
  %453 = lshr i64 %444, 8
  %454 = trunc i64 %453 to i8
  %455 = tail call i64 @_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa(i64 %279, i8 signext %449, i8 signext %451, i64 %281, i8 signext %452, i8 signext %454) #17, !noalias !45
  %456 = shl i64 %447, 24
  %457 = trunc i64 %456 to i32
  %458 = ashr exact i32 %457, 24
  %459 = shl i64 %448, 24
  %460 = trunc i64 %459 to i32
  %461 = ashr exact i32 %460, 24
  %462 = sub nsw i32 %458, %461
  %463 = sext i32 %462 to i64
  %464 = mul i64 %455, 24
  %465 = add i64 %464, %463
  %466 = trunc i64 %441 to i32
  %467 = ashr i32 %466, 24
  %468 = trunc i64 %444 to i32
  %469 = ashr i32 %468, 24
  %470 = sub nsw i32 %467, %469
  %471 = sext i32 %470 to i64
  %472 = mul i64 %465, 60
  %473 = add i64 %472, %471
  %474 = shl nuw nsw i64 %445, 24
  %475 = trunc i64 %474 to i32
  %476 = ashr exact i32 %475, 24
  %477 = shl nuw nsw i64 %446, 24
  %478 = trunc i64 %477 to i32
  %479 = ashr exact i32 %478, 24
  %480 = sub nsw i32 %476, %479
  %481 = sext i32 %480 to i64
  %482 = mul i64 %473, 60
  %483 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17, !noalias !45
  %484 = sdiv i64 %483, 1000000
  %485 = add i64 %438, -1
  %486 = add i64 %485, %484
  %487 = add i64 %486, %481
  %488 = add i64 %487, %482
  store i64 %488, i64* %436, align 8, !alias.scope !45
  %489 = load i64, i64* %437, align 8, !noalias !45
  %490 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17, !noalias !45
  %491 = sdiv i64 %490, 1000000
  %492 = add nsw i64 %491, %489
  %493 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %492, i64* %493, align 8, !alias.scope !45
  %494 = load i64, i64* %437, align 8, !noalias !45
  %495 = load i64, i64* %18, align 8, !noalias !45
  %496 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %14, i64 0, i32 3, i32 0, i32 1
  %497 = bitcast i8* %496 to i64*
  %498 = load i64, i64* %497, align 8, !noalias !45
  %499 = load i64, i64* %16, align 8, !noalias !45
  %500 = load i64, i64* %440, align 8, !noalias !45
  %501 = lshr i64 %498, 32
  %502 = lshr i64 %500, 32
  %503 = lshr i64 %498, 16
  %504 = lshr i64 %500, 16
  %505 = trunc i64 %498 to i8
  %506 = lshr i64 %498, 8
  %507 = trunc i64 %506 to i8
  %508 = trunc i64 %500 to i8
  %509 = lshr i64 %500, 8
  %510 = trunc i64 %509 to i8
  %511 = tail call i64 @_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa(i64 %495, i8 signext %505, i8 signext %507, i64 %499, i8 signext %508, i8 signext %510) #17
  %512 = shl i64 %503, 24
  %513 = trunc i64 %512 to i32
  %514 = ashr exact i32 %513, 24
  %515 = shl i64 %504, 24
  %516 = trunc i64 %515 to i32
  %517 = ashr exact i32 %516, 24
  %518 = sub nsw i32 %514, %517
  %519 = sext i32 %518 to i64
  %520 = mul i64 %511, 24
  %521 = add i64 %520, %519
  %522 = trunc i64 %498 to i32
  %523 = ashr i32 %522, 24
  %524 = trunc i64 %500 to i32
  %525 = ashr i32 %524, 24
  %526 = sub nsw i32 %523, %525
  %527 = sext i32 %526 to i64
  %528 = mul i64 %521, 60
  %529 = add i64 %528, %527
  %530 = shl nuw nsw i64 %501, 24
  %531 = trunc i64 %530 to i32
  %532 = ashr exact i32 %531, 24
  %533 = shl nuw nsw i64 %502, 24
  %534 = trunc i64 %533 to i32
  %535 = ashr exact i32 %534, 24
  %536 = sub nsw i32 %535, %532
  %537 = sext i32 %536 to i64
  %538 = mul i64 %529, -60
  %539 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17, !noalias !45
  %540 = sdiv i64 %539, 1000000
  %541 = add i64 %540, %494
  %542 = add i64 %541, %537
  %543 = add i64 %542, %538
  %544 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %543, i64* %544, align 8, !alias.scope !45
  br label %1253

545:                                              ; preds = %273
  %546 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %274, %15
  br i1 %546, label %547, label %881

547:                                              ; preds = %545
  %548 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %15, i64 -1
  %549 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %15, i64 -1, i32 4, i32 0, i32 0
  %550 = load i64, i64* %549, align 8
  %551 = load i64, i64* %16, align 8
  %552 = icmp slt i64 %550, %551
  br i1 %552, label %593, label %553

553:                                              ; preds = %547
  %554 = icmp eq i64 %550, %551
  br i1 %554, label %555, label %769

555:                                              ; preds = %553
  %556 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %15, i64 -1, i32 4, i32 0, i32 1
  %557 = load i8, i8* %556, align 8
  %558 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %559 = load i8, i8* %558, align 8
  %560 = icmp slt i8 %557, %559
  br i1 %560, label %593, label %561

561:                                              ; preds = %555
  %562 = icmp eq i8 %557, %559
  br i1 %562, label %563, label %769

563:                                              ; preds = %561
  %564 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %15, i64 -1, i32 4, i32 0, i32 2
  %565 = load i8, i8* %564, align 1
  %566 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 2
  %567 = load i8, i8* %566, align 1
  %568 = icmp slt i8 %565, %567
  br i1 %568, label %593, label %569

569:                                              ; preds = %563
  %570 = icmp eq i8 %565, %567
  br i1 %570, label %571, label %769

571:                                              ; preds = %569
  %572 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %15, i64 -1, i32 4, i32 0, i32 3
  %573 = load i8, i8* %572, align 2
  %574 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 3
  %575 = load i8, i8* %574, align 2
  %576 = icmp slt i8 %573, %575
  br i1 %576, label %593, label %577

577:                                              ; preds = %571
  %578 = icmp eq i8 %573, %575
  br i1 %578, label %579, label %769

579:                                              ; preds = %577
  %580 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %15, i64 -1, i32 4, i32 0, i32 4
  %581 = load i8, i8* %580, align 1
  %582 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 4
  %583 = load i8, i8* %582, align 1
  %584 = icmp slt i8 %581, %583
  br i1 %584, label %593, label %585

585:                                              ; preds = %579
  %586 = icmp eq i8 %581, %583
  br i1 %586, label %587, label %769

587:                                              ; preds = %585
  %588 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %15, i64 -1, i32 4, i32 0, i32 5
  %589 = load i8, i8* %588, align 4
  %590 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 5
  %591 = load i8, i8* %590, align 4
  %592 = icmp slt i8 %589, %591
  br i1 %592, label %593, label %769

593:                                              ; preds = %579, %571, %563, %555, %547, %587
  %594 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 7
  %595 = load i8, i8* %594, align 8, !range !11
  %596 = icmp eq i8 %595, 0
  br i1 %596, label %658, label %597

597:                                              ; preds = %593
  %598 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 8
  %599 = load i64, i64* %598, align 8
  %600 = icmp sgt i64 %551, %599
  br i1 %600, label %601, label %658

601:                                              ; preds = %597
  %602 = xor i64 %599, -1
  %603 = add i64 %551, %602
  %604 = sdiv i64 %603, 400
  %605 = add nsw i64 %604, 1
  %606 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %606) #17
  %607 = mul nsw i64 %605, -400
  %608 = add nsw i64 %607, %551
  %609 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %610 = load i8, i8* %609, align 8
  %611 = sext i8 %610 to i64
  %612 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 2
  %613 = load i8, i8* %612, align 1
  %614 = sext i8 %613 to i64
  %615 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 3
  %616 = load i8, i8* %615, align 2
  %617 = sext i8 %616 to i64
  %618 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 4
  %619 = load i8, i8* %618, align 1
  %620 = sext i8 %619 to i64
  %621 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 5
  %622 = load i8, i8* %621, align 4
  %623 = sext i8 %622 to i64
  %624 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %608, i64 %611, i64 %614, i64 %617, i64 %620, i64 %623) #17
  %625 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %626 = extractvalue { i64, i64 } %624, 0
  store i64 %626, i64* %625, align 8
  %627 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %628 = extractvalue { i64, i64 } %624, 1
  store i64 %628, i64* %627, align 8
  %629 = bitcast %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %629, i8 -86, i64 32, i1 false) #17, !alias.scope !48
  %630 = bitcast %"class.absl::time_internal::cctz::TimeZoneInfo"* %1 to void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"*)***
  %631 = load void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"*)**, void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"*)*** %630, align 8, !noalias !48
  %632 = getelementptr inbounds void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"*)*, void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"*)** %631, i64 3
  %633 = load void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"*)*, void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneInfo"*, %"class.absl::time_internal::cctz::detail::civil_time"*)** %632, align 8, !noalias !48
  call void %633(%"struct.absl::time_internal::cctz::time_zone::civil_lookup"* sret %0, %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, %"class.absl::time_internal::cctz::detail::civil_time"* nonnull dereferenceable(16) %5) #17
  %634 = icmp sgt i64 %603, 292277024399
  br i1 %634, label %635, label %639

635:                                              ; preds = %601
  %636 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 9223372036854775807, i64* %636, align 8, !alias.scope !48
  %637 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 1, i32 0, i32 0
  %638 = bitcast i64* %637 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %638, align 8, !alias.scope !48
  br label %657

639:                                              ; preds = %601
  %640 = mul nsw i64 %605, 12622780800
  %641 = sub nsw i64 9223372036854775807, %640
  %642 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 1, i32 0, i32 0
  %643 = load i64, i64* %642, align 8, !alias.scope !48
  %644 = icmp slt i64 %641, %643
  %645 = add nsw i64 %643, %640
  %646 = select i1 %644, i64 9223372036854775807, i64 %645
  store i64 %646, i64* %642, align 8, !alias.scope !48
  %647 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 2, i32 0, i32 0
  %648 = load i64, i64* %647, align 8, !alias.scope !48
  %649 = icmp slt i64 %641, %648
  %650 = add nsw i64 %648, %640
  %651 = select i1 %649, i64 9223372036854775807, i64 %650
  store i64 %651, i64* %647, align 8, !alias.scope !48
  %652 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 3, i32 0, i32 0
  %653 = load i64, i64* %652, align 8, !alias.scope !48
  %654 = icmp slt i64 %641, %653
  %655 = add nsw i64 %653, %640
  %656 = select i1 %654, i64 9223372036854775807, i64 %655
  store i64 %656, i64* %652, align 8, !alias.scope !48
  br label %657

657:                                              ; preds = %635, %639
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %606) #17
  br label %1253

658:                                              ; preds = %593, %597
  %659 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %15, i64 -1, i32 1
  %660 = load i8, i8* %659, align 8
  %661 = zext i8 %660 to i64
  %662 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 2, i32 0, i32 0
  %663 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %662, align 8
  %664 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %663, i64 %661, i32 2, i32 0, i32 0
  %665 = load i64, i64* %664, align 8
  %666 = icmp slt i64 %665, %551
  br i1 %666, label %707, label %667

667:                                              ; preds = %658
  %668 = icmp eq i64 %665, %551
  br i1 %668, label %669, label %711

669:                                              ; preds = %667
  %670 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %663, i64 %661, i32 2, i32 0, i32 1
  %671 = load i8, i8* %670, align 8
  %672 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %673 = load i8, i8* %672, align 8
  %674 = icmp slt i8 %671, %673
  br i1 %674, label %707, label %675

675:                                              ; preds = %669
  %676 = icmp eq i8 %671, %673
  br i1 %676, label %677, label %711

677:                                              ; preds = %675
  %678 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %663, i64 %661, i32 2, i32 0, i32 2
  %679 = load i8, i8* %678, align 1
  %680 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 2
  %681 = load i8, i8* %680, align 1
  %682 = icmp slt i8 %679, %681
  br i1 %682, label %707, label %683

683:                                              ; preds = %677
  %684 = icmp eq i8 %679, %681
  br i1 %684, label %685, label %711

685:                                              ; preds = %683
  %686 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %663, i64 %661, i32 2, i32 0, i32 3
  %687 = load i8, i8* %686, align 2
  %688 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 3
  %689 = load i8, i8* %688, align 2
  %690 = icmp slt i8 %687, %689
  br i1 %690, label %707, label %691

691:                                              ; preds = %685
  %692 = icmp eq i8 %687, %689
  br i1 %692, label %693, label %711

693:                                              ; preds = %691
  %694 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %663, i64 %661, i32 2, i32 0, i32 4
  %695 = load i8, i8* %694, align 1
  %696 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 4
  %697 = load i8, i8* %696, align 1
  %698 = icmp slt i8 %695, %697
  br i1 %698, label %707, label %699

699:                                              ; preds = %693
  %700 = icmp eq i8 %695, %697
  br i1 %700, label %701, label %711

701:                                              ; preds = %699
  %702 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %663, i64 %661, i32 2, i32 0, i32 5
  %703 = load i8, i8* %702, align 4
  %704 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 5
  %705 = load i8, i8* %704, align 4
  %706 = icmp slt i8 %703, %705
  br i1 %706, label %707, label %711

707:                                              ; preds = %693, %685, %677, %669, %658, %701
  %708 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 2, i32 0, i32 0
  %709 = bitcast i64* %708 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %709, align 8, !alias.scope !51
  %710 = bitcast %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0 to <2 x i64>*
  store <2 x i64> <i64 -6148914694099828736, i64 9223372036854775807>, <2 x i64>* %710, align 8, !alias.scope !51
  br label %1253

711:                                              ; preds = %699, %691, %683, %675, %667, %701
  %712 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %548, i64 0, i32 0
  %713 = load i64, i64* %712, align 8
  %714 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %715 = bitcast i8* %714 to i64*
  %716 = load i64, i64* %715, align 8
  %717 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %15, i64 -1, i32 3, i32 0, i32 0
  %718 = load i64, i64* %717, align 8
  %719 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %15, i64 -1, i32 3, i32 0, i32 1
  %720 = bitcast i8* %719 to i64*
  %721 = load i64, i64* %720, align 8
  %722 = lshr i64 %716, 32
  %723 = lshr i64 %721, 32
  %724 = lshr i64 %716, 16
  %725 = lshr i64 %721, 16
  %726 = trunc i64 %716 to i8
  %727 = lshr i64 %716, 8
  %728 = trunc i64 %727 to i8
  %729 = trunc i64 %721 to i8
  %730 = lshr i64 %721, 8
  %731 = trunc i64 %730 to i8
  %732 = tail call i64 @_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa(i64 %551, i8 signext %726, i8 signext %728, i64 %718, i8 signext %729, i8 signext %731) #17
  %733 = shl i64 %724, 24
  %734 = trunc i64 %733 to i32
  %735 = ashr exact i32 %734, 24
  %736 = shl i64 %725, 24
  %737 = trunc i64 %736 to i32
  %738 = ashr exact i32 %737, 24
  %739 = sub nsw i32 %735, %738
  %740 = sext i32 %739 to i64
  %741 = mul i64 %732, 24
  %742 = add i64 %741, %740
  %743 = trunc i64 %716 to i32
  %744 = ashr i32 %743, 24
  %745 = trunc i64 %721 to i32
  %746 = ashr i32 %745, 24
  %747 = sub nsw i32 %744, %746
  %748 = sext i32 %747 to i64
  %749 = mul i64 %742, 60
  %750 = add i64 %749, %748
  %751 = shl nuw nsw i64 %722, 24
  %752 = trunc i64 %751 to i32
  %753 = ashr exact i32 %752, 24
  %754 = shl nuw nsw i64 %723, 24
  %755 = trunc i64 %754 to i32
  %756 = ashr exact i32 %755, 24
  %757 = sub nsw i32 %753, %756
  %758 = sext i32 %757 to i64
  %759 = mul i64 %750, 60
  %760 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17, !noalias !54
  %761 = sdiv i64 %760, 1000000
  %762 = add i64 %761, %713
  %763 = add i64 %762, %758
  %764 = add i64 %763, %759
  %765 = bitcast %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0 to i64*
  store i64 -6148914694099828736, i64* %765, align 8, !alias.scope !57
  %766 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 1, i32 0, i32 0
  %767 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %764, i64* %767, align 8, !alias.scope !57
  %768 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %764, i64* %768, align 8, !alias.scope !57
  store i64 %764, i64* %766, align 8, !alias.scope !57
  br label %1253

769:                                              ; preds = %585, %577, %569, %561, %553, %587
  %770 = bitcast %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0 to i64*
  store i64 -6148914694099828734, i64* %770, align 8, !alias.scope !60
  %771 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 1, i32 0, i32 0
  %772 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %548, i64 0, i32 0
  %773 = load i64, i64* %772, align 8, !noalias !60
  %774 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %15, i64 -1, i32 4, i32 0, i32 1
  %775 = bitcast i8* %774 to i64*
  %776 = load i64, i64* %775, align 8, !noalias !60
  %777 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %778 = bitcast i8* %777 to i64*
  %779 = load i64, i64* %778, align 8, !noalias !60
  %780 = lshr i64 %776, 32
  %781 = lshr i64 %779, 32
  %782 = lshr i64 %776, 16
  %783 = lshr i64 %779, 16
  %784 = trunc i64 %776 to i8
  %785 = lshr i64 %776, 8
  %786 = trunc i64 %785 to i8
  %787 = trunc i64 %779 to i8
  %788 = lshr i64 %779, 8
  %789 = trunc i64 %788 to i8
  %790 = tail call i64 @_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa(i64 %550, i8 signext %784, i8 signext %786, i64 %551, i8 signext %787, i8 signext %789) #17, !noalias !60
  %791 = shl i64 %782, 24
  %792 = trunc i64 %791 to i32
  %793 = ashr exact i32 %792, 24
  %794 = shl i64 %783, 24
  %795 = trunc i64 %794 to i32
  %796 = ashr exact i32 %795, 24
  %797 = sub nsw i32 %793, %796
  %798 = sext i32 %797 to i64
  %799 = mul i64 %790, 24
  %800 = add i64 %799, %798
  %801 = trunc i64 %776 to i32
  %802 = ashr i32 %801, 24
  %803 = trunc i64 %779 to i32
  %804 = ashr i32 %803, 24
  %805 = sub nsw i32 %802, %804
  %806 = sext i32 %805 to i64
  %807 = mul i64 %800, 60
  %808 = add i64 %807, %806
  %809 = shl nuw nsw i64 %780, 24
  %810 = trunc i64 %809 to i32
  %811 = ashr exact i32 %810, 24
  %812 = shl nuw nsw i64 %781, 24
  %813 = trunc i64 %812 to i32
  %814 = ashr exact i32 %813, 24
  %815 = sub nsw i32 %811, %814
  %816 = sext i32 %815 to i64
  %817 = mul i64 %808, 60
  %818 = add i64 %817, %816
  %819 = xor i64 %818, -1
  %820 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17, !noalias !60
  %821 = sdiv i64 %820, 1000000
  %822 = add i64 %821, %773
  %823 = add i64 %822, %819
  store i64 %823, i64* %771, align 8, !alias.scope !60
  %824 = load i64, i64* %772, align 8, !noalias !60
  %825 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17, !noalias !60
  %826 = sdiv i64 %825, 1000000
  %827 = add nsw i64 %826, %824
  %828 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %827, i64* %828, align 8, !alias.scope !60
  %829 = load i64, i64* %772, align 8, !noalias !60
  %830 = load i64, i64* %16, align 8, !noalias !60
  %831 = load i64, i64* %778, align 8, !noalias !60
  %832 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %15, i64 -1, i32 3, i32 0, i32 0
  %833 = load i64, i64* %832, align 8, !noalias !60
  %834 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %15, i64 -1, i32 3, i32 0, i32 1
  %835 = bitcast i8* %834 to i64*
  %836 = load i64, i64* %835, align 8, !noalias !60
  %837 = lshr i64 %831, 32
  %838 = lshr i64 %836, 32
  %839 = lshr i64 %831, 16
  %840 = lshr i64 %836, 16
  %841 = trunc i64 %831 to i8
  %842 = lshr i64 %831, 8
  %843 = trunc i64 %842 to i8
  %844 = trunc i64 %836 to i8
  %845 = lshr i64 %836, 8
  %846 = trunc i64 %845 to i8
  %847 = tail call i64 @_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa(i64 %830, i8 signext %841, i8 signext %843, i64 %833, i8 signext %844, i8 signext %846) #17
  %848 = shl i64 %839, 24
  %849 = trunc i64 %848 to i32
  %850 = ashr exact i32 %849, 24
  %851 = shl i64 %840, 24
  %852 = trunc i64 %851 to i32
  %853 = ashr exact i32 %852, 24
  %854 = sub nsw i32 %850, %853
  %855 = sext i32 %854 to i64
  %856 = mul i64 %847, 24
  %857 = add i64 %856, %855
  %858 = trunc i64 %831 to i32
  %859 = ashr i32 %858, 24
  %860 = trunc i64 %836 to i32
  %861 = ashr i32 %860, 24
  %862 = sub nsw i32 %859, %861
  %863 = sext i32 %862 to i64
  %864 = mul i64 %857, 60
  %865 = add i64 %864, %863
  %866 = shl nuw nsw i64 %837, 24
  %867 = trunc i64 %866 to i32
  %868 = ashr exact i32 %867, 24
  %869 = shl nuw nsw i64 %838, 24
  %870 = trunc i64 %869 to i32
  %871 = ashr exact i32 %870, 24
  %872 = sub nsw i32 %868, %871
  %873 = sext i32 %872 to i64
  %874 = mul i64 %865, 60
  %875 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17, !noalias !60
  %876 = sdiv i64 %875, 1000000
  %877 = add i64 %876, %829
  %878 = add i64 %877, %873
  %879 = add i64 %878, %874
  %880 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %879, i64* %880, align 8, !alias.scope !60
  br label %1253

881:                                              ; preds = %545
  %882 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 0, i32 4, i32 0, i32 0
  %883 = load i64, i64* %882, align 8
  %884 = load i64, i64* %16, align 8
  %885 = icmp slt i64 %883, %884
  br i1 %885, label %926, label %886

886:                                              ; preds = %881
  %887 = icmp eq i64 %883, %884
  br i1 %887, label %888, label %1038

888:                                              ; preds = %886
  %889 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 0, i32 4, i32 0, i32 1
  %890 = load i8, i8* %889, align 8
  %891 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %892 = load i8, i8* %891, align 8
  %893 = icmp slt i8 %890, %892
  br i1 %893, label %926, label %894

894:                                              ; preds = %888
  %895 = icmp eq i8 %890, %892
  br i1 %895, label %896, label %1038

896:                                              ; preds = %894
  %897 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 0, i32 4, i32 0, i32 2
  %898 = load i8, i8* %897, align 1
  %899 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 2
  %900 = load i8, i8* %899, align 1
  %901 = icmp slt i8 %898, %900
  br i1 %901, label %926, label %902

902:                                              ; preds = %896
  %903 = icmp eq i8 %898, %900
  br i1 %903, label %904, label %1038

904:                                              ; preds = %902
  %905 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 0, i32 4, i32 0, i32 3
  %906 = load i8, i8* %905, align 2
  %907 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 3
  %908 = load i8, i8* %907, align 2
  %909 = icmp slt i8 %906, %908
  br i1 %909, label %926, label %910

910:                                              ; preds = %904
  %911 = icmp eq i8 %906, %908
  br i1 %911, label %912, label %1038

912:                                              ; preds = %910
  %913 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 0, i32 4, i32 0, i32 4
  %914 = load i8, i8* %913, align 1
  %915 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 4
  %916 = load i8, i8* %915, align 1
  %917 = icmp slt i8 %914, %916
  br i1 %917, label %926, label %918

918:                                              ; preds = %912
  %919 = icmp eq i8 %914, %916
  br i1 %919, label %920, label %1038

920:                                              ; preds = %918
  %921 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 0, i32 4, i32 0, i32 5
  %922 = load i8, i8* %921, align 4
  %923 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 5
  %924 = load i8, i8* %923, align 4
  %925 = icmp slt i8 %922, %924
  br i1 %925, label %926, label %1038

926:                                              ; preds = %912, %904, %896, %888, %881, %920
  %927 = bitcast %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0 to i64*
  store i64 -6148914694099828735, i64* %927, align 8, !alias.scope !63
  %928 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 1, i32 0, i32 0
  %929 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 0, i32 0
  %930 = load i64, i64* %929, align 8, !noalias !63
  %931 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %932 = bitcast i8* %931 to i64*
  %933 = load i64, i64* %932, align 8, !noalias !63
  %934 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 0, i32 4, i32 0, i32 1
  %935 = bitcast i8* %934 to i64*
  %936 = load i64, i64* %935, align 8, !noalias !63
  %937 = lshr i64 %933, 32
  %938 = lshr i64 %936, 32
  %939 = lshr i64 %933, 16
  %940 = lshr i64 %936, 16
  %941 = trunc i64 %933 to i8
  %942 = lshr i64 %933, 8
  %943 = trunc i64 %942 to i8
  %944 = trunc i64 %936 to i8
  %945 = lshr i64 %936, 8
  %946 = trunc i64 %945 to i8
  %947 = tail call i64 @_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa(i64 %884, i8 signext %941, i8 signext %943, i64 %883, i8 signext %944, i8 signext %946) #17, !noalias !63
  %948 = shl i64 %939, 24
  %949 = trunc i64 %948 to i32
  %950 = ashr exact i32 %949, 24
  %951 = shl i64 %940, 24
  %952 = trunc i64 %951 to i32
  %953 = ashr exact i32 %952, 24
  %954 = sub nsw i32 %950, %953
  %955 = sext i32 %954 to i64
  %956 = mul i64 %947, 24
  %957 = add i64 %956, %955
  %958 = trunc i64 %933 to i32
  %959 = ashr i32 %958, 24
  %960 = trunc i64 %936 to i32
  %961 = ashr i32 %960, 24
  %962 = sub nsw i32 %959, %961
  %963 = sext i32 %962 to i64
  %964 = mul i64 %957, 60
  %965 = add i64 %964, %963
  %966 = shl nuw nsw i64 %937, 24
  %967 = trunc i64 %966 to i32
  %968 = ashr exact i32 %967, 24
  %969 = shl nuw nsw i64 %938, 24
  %970 = trunc i64 %969 to i32
  %971 = ashr exact i32 %970, 24
  %972 = sub nsw i32 %968, %971
  %973 = sext i32 %972 to i64
  %974 = mul i64 %965, 60
  %975 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17, !noalias !63
  %976 = sdiv i64 %975, 1000000
  %977 = add i64 %930, -1
  %978 = add i64 %977, %976
  %979 = add i64 %978, %973
  %980 = add i64 %979, %974
  store i64 %980, i64* %928, align 8, !alias.scope !63
  %981 = load i64, i64* %929, align 8, !noalias !63
  %982 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17, !noalias !63
  %983 = sdiv i64 %982, 1000000
  %984 = add nsw i64 %983, %981
  %985 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %984, i64* %985, align 8, !alias.scope !63
  %986 = load i64, i64* %929, align 8, !noalias !63
  %987 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 0, i32 3, i32 0, i32 0
  %988 = load i64, i64* %987, align 8, !noalias !63
  %989 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 0, i32 3, i32 0, i32 1
  %990 = bitcast i8* %989 to i64*
  %991 = load i64, i64* %990, align 8, !noalias !63
  %992 = load i64, i64* %16, align 8, !noalias !63
  %993 = load i64, i64* %932, align 8, !noalias !63
  %994 = lshr i64 %991, 32
  %995 = lshr i64 %993, 32
  %996 = lshr i64 %991, 16
  %997 = lshr i64 %993, 16
  %998 = trunc i64 %991 to i8
  %999 = lshr i64 %991, 8
  %1000 = trunc i64 %999 to i8
  %1001 = trunc i64 %993 to i8
  %1002 = lshr i64 %993, 8
  %1003 = trunc i64 %1002 to i8
  %1004 = tail call i64 @_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa(i64 %988, i8 signext %998, i8 signext %1000, i64 %992, i8 signext %1001, i8 signext %1003) #17
  %1005 = shl i64 %996, 24
  %1006 = trunc i64 %1005 to i32
  %1007 = ashr exact i32 %1006, 24
  %1008 = shl i64 %997, 24
  %1009 = trunc i64 %1008 to i32
  %1010 = ashr exact i32 %1009, 24
  %1011 = sub nsw i32 %1007, %1010
  %1012 = sext i32 %1011 to i64
  %1013 = mul i64 %1004, 24
  %1014 = add i64 %1013, %1012
  %1015 = trunc i64 %991 to i32
  %1016 = ashr i32 %1015, 24
  %1017 = trunc i64 %993 to i32
  %1018 = ashr i32 %1017, 24
  %1019 = sub nsw i32 %1016, %1018
  %1020 = sext i32 %1019 to i64
  %1021 = mul i64 %1014, 60
  %1022 = add i64 %1021, %1020
  %1023 = shl nuw nsw i64 %994, 24
  %1024 = trunc i64 %1023 to i32
  %1025 = ashr exact i32 %1024, 24
  %1026 = shl nuw nsw i64 %995, 24
  %1027 = trunc i64 %1026 to i32
  %1028 = ashr exact i32 %1027, 24
  %1029 = sub nsw i32 %1028, %1025
  %1030 = sext i32 %1029 to i64
  %1031 = mul i64 %1022, -60
  %1032 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17, !noalias !63
  %1033 = sdiv i64 %1032, 1000000
  %1034 = add i64 %1033, %986
  %1035 = add i64 %1034, %1030
  %1036 = add i64 %1035, %1031
  %1037 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %1036, i64* %1037, align 8, !alias.scope !63
  br label %1253

1038:                                             ; preds = %918, %910, %902, %894, %886, %920
  %1039 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 -1
  %1040 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 -1, i32 4, i32 0, i32 0
  %1041 = load i64, i64* %1040, align 8
  %1042 = icmp slt i64 %1041, %884
  br i1 %1042, label %1195, label %1043

1043:                                             ; preds = %1038
  %1044 = icmp eq i64 %1041, %884
  br i1 %1044, label %1045, label %1083

1045:                                             ; preds = %1043
  %1046 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 -1, i32 4, i32 0, i32 1
  %1047 = load i8, i8* %1046, align 8
  %1048 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %1049 = load i8, i8* %1048, align 8
  %1050 = icmp slt i8 %1047, %1049
  br i1 %1050, label %1195, label %1051

1051:                                             ; preds = %1045
  %1052 = icmp eq i8 %1047, %1049
  br i1 %1052, label %1053, label %1083

1053:                                             ; preds = %1051
  %1054 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 -1, i32 4, i32 0, i32 2
  %1055 = load i8, i8* %1054, align 1
  %1056 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 2
  %1057 = load i8, i8* %1056, align 1
  %1058 = icmp slt i8 %1055, %1057
  br i1 %1058, label %1195, label %1059

1059:                                             ; preds = %1053
  %1060 = icmp eq i8 %1055, %1057
  br i1 %1060, label %1061, label %1083

1061:                                             ; preds = %1059
  %1062 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 -1, i32 4, i32 0, i32 3
  %1063 = load i8, i8* %1062, align 2
  %1064 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 3
  %1065 = load i8, i8* %1064, align 2
  %1066 = icmp slt i8 %1063, %1065
  br i1 %1066, label %1195, label %1067

1067:                                             ; preds = %1061
  %1068 = icmp eq i8 %1063, %1065
  br i1 %1068, label %1069, label %1083

1069:                                             ; preds = %1067
  %1070 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 -1, i32 4, i32 0, i32 4
  %1071 = load i8, i8* %1070, align 1
  %1072 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 4
  %1073 = load i8, i8* %1072, align 1
  %1074 = icmp slt i8 %1071, %1073
  br i1 %1074, label %1195, label %1075

1075:                                             ; preds = %1069
  %1076 = icmp eq i8 %1071, %1073
  br i1 %1076, label %1077, label %1083

1077:                                             ; preds = %1075
  %1078 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 -1, i32 4, i32 0, i32 5
  %1079 = load i8, i8* %1078, align 4
  %1080 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 5
  %1081 = load i8, i8* %1080, align 4
  %1082 = icmp slt i8 %1079, %1081
  br i1 %1082, label %1195, label %1083

1083:                                             ; preds = %1077, %1075, %1067, %1059, %1051, %1043
  %1084 = bitcast %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0 to i64*
  store i64 -6148914694099828734, i64* %1084, align 8, !alias.scope !66
  %1085 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 1, i32 0, i32 0
  %1086 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1039, i64 0, i32 0
  %1087 = load i64, i64* %1086, align 8, !noalias !66
  %1088 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 -1, i32 4, i32 0, i32 1
  %1089 = bitcast i8* %1088 to i64*
  %1090 = load i64, i64* %1089, align 8, !noalias !66
  %1091 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %1092 = bitcast i8* %1091 to i64*
  %1093 = load i64, i64* %1092, align 8, !noalias !66
  %1094 = lshr i64 %1090, 32
  %1095 = lshr i64 %1093, 32
  %1096 = lshr i64 %1090, 16
  %1097 = lshr i64 %1093, 16
  %1098 = trunc i64 %1090 to i8
  %1099 = lshr i64 %1090, 8
  %1100 = trunc i64 %1099 to i8
  %1101 = trunc i64 %1093 to i8
  %1102 = lshr i64 %1093, 8
  %1103 = trunc i64 %1102 to i8
  %1104 = tail call i64 @_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa(i64 %1041, i8 signext %1098, i8 signext %1100, i64 %884, i8 signext %1101, i8 signext %1103) #17, !noalias !66
  %1105 = shl i64 %1096, 24
  %1106 = trunc i64 %1105 to i32
  %1107 = ashr exact i32 %1106, 24
  %1108 = shl i64 %1097, 24
  %1109 = trunc i64 %1108 to i32
  %1110 = ashr exact i32 %1109, 24
  %1111 = sub nsw i32 %1107, %1110
  %1112 = sext i32 %1111 to i64
  %1113 = mul i64 %1104, 24
  %1114 = add i64 %1113, %1112
  %1115 = trunc i64 %1090 to i32
  %1116 = ashr i32 %1115, 24
  %1117 = trunc i64 %1093 to i32
  %1118 = ashr i32 %1117, 24
  %1119 = sub nsw i32 %1116, %1118
  %1120 = sext i32 %1119 to i64
  %1121 = mul i64 %1114, 60
  %1122 = add i64 %1121, %1120
  %1123 = shl nuw nsw i64 %1094, 24
  %1124 = trunc i64 %1123 to i32
  %1125 = ashr exact i32 %1124, 24
  %1126 = shl nuw nsw i64 %1095, 24
  %1127 = trunc i64 %1126 to i32
  %1128 = ashr exact i32 %1127, 24
  %1129 = sub nsw i32 %1125, %1128
  %1130 = sext i32 %1129 to i64
  %1131 = mul i64 %1122, 60
  %1132 = add i64 %1131, %1130
  %1133 = xor i64 %1132, -1
  %1134 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17, !noalias !66
  %1135 = sdiv i64 %1134, 1000000
  %1136 = add i64 %1135, %1087
  %1137 = add i64 %1136, %1133
  store i64 %1137, i64* %1085, align 8, !alias.scope !66
  %1138 = load i64, i64* %1086, align 8, !noalias !66
  %1139 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17, !noalias !66
  %1140 = sdiv i64 %1139, 1000000
  %1141 = add nsw i64 %1140, %1138
  %1142 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %1141, i64* %1142, align 8, !alias.scope !66
  %1143 = load i64, i64* %1086, align 8, !noalias !66
  %1144 = load i64, i64* %16, align 8, !noalias !66
  %1145 = load i64, i64* %1092, align 8, !noalias !66
  %1146 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 -1, i32 3, i32 0, i32 0
  %1147 = load i64, i64* %1146, align 8, !noalias !66
  %1148 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 -1, i32 3, i32 0, i32 1
  %1149 = bitcast i8* %1148 to i64*
  %1150 = load i64, i64* %1149, align 8, !noalias !66
  %1151 = lshr i64 %1145, 32
  %1152 = lshr i64 %1150, 32
  %1153 = lshr i64 %1145, 16
  %1154 = lshr i64 %1150, 16
  %1155 = trunc i64 %1145 to i8
  %1156 = lshr i64 %1145, 8
  %1157 = trunc i64 %1156 to i8
  %1158 = trunc i64 %1150 to i8
  %1159 = lshr i64 %1150, 8
  %1160 = trunc i64 %1159 to i8
  %1161 = tail call i64 @_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa(i64 %1144, i8 signext %1155, i8 signext %1157, i64 %1147, i8 signext %1158, i8 signext %1160) #17
  %1162 = shl i64 %1153, 24
  %1163 = trunc i64 %1162 to i32
  %1164 = ashr exact i32 %1163, 24
  %1165 = shl i64 %1154, 24
  %1166 = trunc i64 %1165 to i32
  %1167 = ashr exact i32 %1166, 24
  %1168 = sub nsw i32 %1164, %1167
  %1169 = sext i32 %1168 to i64
  %1170 = mul i64 %1161, 24
  %1171 = add i64 %1170, %1169
  %1172 = trunc i64 %1145 to i32
  %1173 = ashr i32 %1172, 24
  %1174 = trunc i64 %1150 to i32
  %1175 = ashr i32 %1174, 24
  %1176 = sub nsw i32 %1173, %1175
  %1177 = sext i32 %1176 to i64
  %1178 = mul i64 %1171, 60
  %1179 = add i64 %1178, %1177
  %1180 = shl nuw nsw i64 %1151, 24
  %1181 = trunc i64 %1180 to i32
  %1182 = ashr exact i32 %1181, 24
  %1183 = shl nuw nsw i64 %1152, 24
  %1184 = trunc i64 %1183 to i32
  %1185 = ashr exact i32 %1184, 24
  %1186 = sub nsw i32 %1182, %1185
  %1187 = sext i32 %1186 to i64
  %1188 = mul i64 %1179, 60
  %1189 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17, !noalias !66
  %1190 = sdiv i64 %1189, 1000000
  %1191 = add i64 %1190, %1143
  %1192 = add i64 %1191, %1187
  %1193 = add i64 %1192, %1188
  %1194 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %1193, i64* %1194, align 8, !alias.scope !66
  br label %1253

1195:                                             ; preds = %1077, %1069, %1061, %1053, %1045, %1038
  %1196 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %1039, i64 0, i32 0
  %1197 = load i64, i64* %1196, align 8
  %1198 = getelementptr inbounds %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time"* %2, i64 0, i32 0, i32 1
  %1199 = bitcast i8* %1198 to i64*
  %1200 = load i64, i64* %1199, align 8
  %1201 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 -1, i32 3, i32 0, i32 0
  %1202 = load i64, i64* %1201, align 8
  %1203 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %274, i64 -1, i32 3, i32 0, i32 1
  %1204 = bitcast i8* %1203 to i64*
  %1205 = load i64, i64* %1204, align 8
  %1206 = lshr i64 %1200, 32
  %1207 = lshr i64 %1205, 32
  %1208 = lshr i64 %1200, 16
  %1209 = lshr i64 %1205, 16
  %1210 = trunc i64 %1200 to i8
  %1211 = lshr i64 %1200, 8
  %1212 = trunc i64 %1211 to i8
  %1213 = trunc i64 %1205 to i8
  %1214 = lshr i64 %1205, 8
  %1215 = trunc i64 %1214 to i8
  %1216 = tail call i64 @_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa(i64 %884, i8 signext %1210, i8 signext %1212, i64 %1202, i8 signext %1213, i8 signext %1215) #17
  %1217 = shl i64 %1208, 24
  %1218 = trunc i64 %1217 to i32
  %1219 = ashr exact i32 %1218, 24
  %1220 = shl i64 %1209, 24
  %1221 = trunc i64 %1220 to i32
  %1222 = ashr exact i32 %1221, 24
  %1223 = sub nsw i32 %1219, %1222
  %1224 = sext i32 %1223 to i64
  %1225 = mul i64 %1216, 24
  %1226 = add i64 %1225, %1224
  %1227 = trunc i64 %1200 to i32
  %1228 = ashr i32 %1227, 24
  %1229 = trunc i64 %1205 to i32
  %1230 = ashr i32 %1229, 24
  %1231 = sub nsw i32 %1228, %1230
  %1232 = sext i32 %1231 to i64
  %1233 = mul i64 %1226, 60
  %1234 = add i64 %1233, %1232
  %1235 = shl nuw nsw i64 %1206, 24
  %1236 = trunc i64 %1235 to i32
  %1237 = ashr exact i32 %1236, 24
  %1238 = shl nuw nsw i64 %1207, 24
  %1239 = trunc i64 %1238 to i32
  %1240 = ashr exact i32 %1239, 24
  %1241 = sub nsw i32 %1237, %1240
  %1242 = sext i32 %1241 to i64
  %1243 = mul i64 %1234, 60
  %1244 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17, !noalias !69
  %1245 = sdiv i64 %1244, 1000000
  %1246 = add i64 %1245, %1197
  %1247 = add i64 %1246, %1242
  %1248 = add i64 %1247, %1243
  %1249 = bitcast %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0 to i64*
  store i64 -6148914694099828736, i64* %1249, align 8, !alias.scope !72
  %1250 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 1, i32 0, i32 0
  %1251 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %1248, i64* %1251, align 8, !alias.scope !72
  %1252 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_lookup", %"struct.absl::time_internal::cctz::time_zone::civil_lookup"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %1248, i64* %1252, align 8, !alias.scope !72
  store i64 %1248, i64* %1250, align 8, !alias.scope !72
  br label %1253

1253:                                             ; preds = %707, %711, %372, %376, %1195, %1083, %926, %769, %657, %434
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz12TimeZoneInfo7VersionEv(%"class.std::__1::basic_string"* noalias sret, %"class.absl::time_internal::cctz::TimeZoneInfo"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 5
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #17
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %13, i64 %15) #17
  br label %16

16:                                               ; preds = %8, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz12TimeZoneInfo11DescriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.absl::time_internal::cctz::TimeZoneInfo"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_ostringstream", align 8
  %4 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_stringbuf"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 256, i1 false)
  %7 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8**
  %15 = inttoptr i64 %11 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %4, i64 %18
  %20 = bitcast i8* %19 to i64*
  store i64 %13, i64* %20, align 8
  %21 = load i8*, i8** %14, align 8
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %4, i64 %24
  %26 = bitcast i8* %25 to %"class.std::__1::ios_base"*
  %27 = bitcast %"class.std::__1::basic_stringbuf"* %9 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %26, i8* %27) #17
  %28 = getelementptr inbounds i8, i8* %25, i64 136
  %29 = bitcast i8* %28 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %29, align 8
  %30 = getelementptr inbounds i8, i8* %25, i64 144
  %31 = bitcast i8* %30 to i32*
  store i32 -1, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %10) #17
  %32 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 3
  %35 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 32, i1 false) #17
  store i32 16, i32* %34, align 8
  %36 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %36, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7) #17
  %38 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 1, i32 0, i32 1
  %40 = bitcast %"struct.absl::time_internal::cctz::Transition"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector"* %38 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = sdiv exact i64 %44, 48
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %45) #17
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %36, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 8) #17
  %48 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 2
  %49 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 2, i32 0, i32 1
  %50 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.1"* %48 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = sdiv exact i64 %54, 48
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %47, i64 %55) #17
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %36, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7) #17
  %58 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 6
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %68 = zext i8 %61 to i64
  %69 = select i1 %62, i8* %64, i8* %67
  %70 = select i1 %62, i64 %66, i64 %68
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %57, i8* %69, i64 %70) #17
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #17
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %9) #17
  %73 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %73, i64* %12, align 8
  %74 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %75 = inttoptr i64 %73 to i8*
  %76 = getelementptr i8, i8* %75, i64 -24
  %77 = bitcast i8* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds i8, i8* %4, i64 %78
  %80 = bitcast i8* %79 to i64*
  store i64 %74, i64* %80, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %81 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %2
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #18
  br label %88

88:                                               ; preds = %2, %85
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %10) #17
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %36, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %89 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2
  %90 = bitcast %"class.std::__1::basic_ios.base"* %89 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %90) #17
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %4) #17
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4absl13time_internal4cctz12TimeZoneInfo14NextTransitionERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEEPNS1_9time_zone16civil_transitionE(%"class.absl::time_internal::cctz::TimeZoneInfo"* nocapture readonly, %"class.std::__1::chrono::time_point"* nocapture readonly dereferenceable(8), %"struct.absl::time_internal::cctz::time_zone::civil_transition"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %4, align 8
  %6 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %6, align 8
  %8 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %5, %7
  br i1 %8, label %106, label %9

9:                                                ; preds = %3
  %10 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %7 to i64
  %11 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %12, -576460752303423487
  %14 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 1
  %15 = select i1 %13, %"struct.absl::time_internal::cctz::Transition"* %14, %"struct.absl::time_internal::cctz::Transition"* %5
  %16 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17
  %17 = sdiv i64 %16, 1000000
  %18 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %1, i64 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = sub nsw i64 %19, %17
  %21 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %15 to i64
  %22 = sub i64 %10, %21
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %9
  %25 = sdiv exact i64 %22, 48
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i64 [ %25, %24 ], [ %38, %26 ]
  %28 = phi %"struct.absl::time_internal::cctz::Transition"* [ %15, %24 ], [ %37, %26 ]
  %29 = lshr i64 %27, 1
  %30 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %28, i64 %29
  %31 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %30, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %20, %32
  %34 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %30, i64 1
  %35 = xor i64 %29, -1
  %36 = add i64 %27, %35
  %37 = select i1 %33, %"struct.absl::time_internal::cctz::Transition"* %28, %"struct.absl::time_internal::cctz::Transition"* %34
  %38 = select i1 %33, i64 %29, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %26

40:                                               ; preds = %26, %9
  %41 = phi %"struct.absl::time_internal::cctz::Transition"* [ %15, %9 ], [ %37, %26 ]
  %42 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %41, %7
  br i1 %42, label %106, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 3
  %45 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2, i32 0, i32 0
  br label %46

46:                                               ; preds = %43, %76
  %47 = phi %"struct.absl::time_internal::cctz::Transition"* [ %41, %43 ], [ %77, %76 ]
  %48 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %47, %15
  %49 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %47, i64 -1, i32 1
  %50 = select i1 %48, i8* %44, i8* %49
  %51 = load i8, i8* %50, align 8
  %52 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %47, i64 0, i32 1
  %53 = load i8, i8* %52, align 8
  %54 = icmp eq i8 %51, %53
  br i1 %54, label %76, label %55

55:                                               ; preds = %46
  %56 = zext i8 %51 to i64
  %57 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %45, align 8
  %58 = zext i8 %53 to i64
  %59 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %57, i64 %56, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %57, i64 %58, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %79

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %57, i64 %56, i32 4
  %66 = load i8, i8* %65, align 8, !range !11
  %67 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %57, i64 %58, i32 4
  %68 = load i8, i8* %67, align 8, !range !11
  %69 = icmp eq i8 %66, %68
  br i1 %69, label %70, label %79

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %57, i64 %56, i32 5
  %72 = load i8, i8* %71, align 1
  %73 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %57, i64 %58, i32 5
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %72, %74
  br i1 %75, label %76, label %79

76:                                               ; preds = %46, %70
  %77 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %47, i64 1
  %78 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %77, %7
  br i1 %78, label %106, label %46

79:                                               ; preds = %64, %55, %70
  %80 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %47, i64 0, i32 4, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %47, i64 0, i32 4, i32 0, i32 1
  %83 = bitcast i8* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = shl i64 %84, 56
  %86 = ashr exact i64 %85, 56
  %87 = shl i64 %84, 48
  %88 = ashr i64 %87, 56
  %89 = shl i64 %84, 40
  %90 = ashr i64 %89, 56
  %91 = shl i64 %84, 32
  %92 = ashr i64 %91, 56
  %93 = shl i64 %84, 24
  %94 = ashr i64 %93, 56
  %95 = add nsw i64 %94, 1
  %96 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %81, i64 %86, i64 %88, i64 %90, i64 %92, i64 %95) #17
  %97 = extractvalue { i64, i64 } %96, 0
  %98 = extractvalue { i64, i64 } %96, 1
  %99 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_transition", %"struct.absl::time_internal::cctz::time_zone::civil_transition"* %2, i64 0, i32 0, i32 0, i32 0
  store i64 %97, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_transition", %"struct.absl::time_internal::cctz::time_zone::civil_transition"* %2, i64 0, i32 0, i32 0, i32 1
  %101 = bitcast i8* %100 to i64*
  store i64 %98, i64* %101, align 8
  %102 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %47, i64 0, i32 3
  %103 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_transition", %"struct.absl::time_internal::cctz::time_zone::civil_transition"* %2, i64 0, i32 1
  %104 = bitcast %"class.absl::time_internal::cctz::detail::civil_time"* %103 to i8*
  %105 = bitcast %"class.absl::time_internal::cctz::detail::civil_time"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 16, i1 false)
  br label %106

106:                                              ; preds = %76, %40, %79, %3
  %107 = phi i1 [ false, %3 ], [ true, %79 ], [ false, %40 ], [ false, %76 ]
  ret i1 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4absl13time_internal4cctz12TimeZoneInfo14PrevTransitionERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEEPNS1_9time_zone16civil_transitionE(%"class.absl::time_internal::cctz::TimeZoneInfo"* nocapture readonly, %"class.std::__1::chrono::time_point"* nocapture readonly dereferenceable(8), %"struct.absl::time_internal::cctz::time_zone::civil_transition"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %4, align 8
  %6 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %6, align 8
  %8 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %5, %7
  %9 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %7 to i64
  br i1 %8, label %144, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %12, -576460752303423487
  %14 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %5, i64 1
  %15 = select i1 %13, %"struct.absl::time_internal::cctz::Transition"* %14, %"struct.absl::time_internal::cctz::Transition"* %5
  %16 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17
  %17 = sdiv i64 %16, 1000000
  %18 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %1, i64 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = sub nsw i64 %19, %17
  %21 = tail call i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64 0) #17
  %22 = sdiv i64 %21, 1000000
  %23 = add nsw i64 %22, %20
  %24 = load i64, i64* %18, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %59, label %26

26:                                               ; preds = %10
  %27 = icmp eq i64 %20, 9223372036854775807
  br i1 %27, label %28, label %57

28:                                               ; preds = %26
  %29 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %7, %15
  br i1 %29, label %144, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %7, i64 -1, i32 4, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %7, i64 -1, i32 4, i32 0, i32 1
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = shl i64 %35, 56
  %37 = ashr exact i64 %36, 56
  %38 = shl i64 %35, 48
  %39 = ashr i64 %38, 56
  %40 = shl i64 %35, 40
  %41 = ashr i64 %40, 56
  %42 = shl i64 %35, 32
  %43 = ashr i64 %42, 56
  %44 = shl i64 %35, 24
  %45 = ashr i64 %44, 56
  %46 = add nsw i64 %45, 1
  %47 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %32, i64 %37, i64 %39, i64 %41, i64 %43, i64 %46) #17
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = extractvalue { i64, i64 } %47, 1
  %50 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_transition", %"struct.absl::time_internal::cctz::time_zone::civil_transition"* %2, i64 0, i32 0, i32 0, i32 0
  store i64 %48, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_transition", %"struct.absl::time_internal::cctz::time_zone::civil_transition"* %2, i64 0, i32 0, i32 0, i32 1
  %52 = bitcast i8* %51 to i64*
  store i64 %49, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %7, i64 -1, i32 3
  %54 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_transition", %"struct.absl::time_internal::cctz::time_zone::civil_transition"* %2, i64 0, i32 1
  %55 = bitcast %"class.absl::time_internal::cctz::detail::civil_time"* %54 to i8*
  %56 = bitcast %"class.absl::time_internal::cctz::detail::civil_time"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 16, i1 false)
  br label %144

57:                                               ; preds = %26
  %58 = add nsw i64 %20, 1
  br label %59

59:                                               ; preds = %10, %57
  %60 = phi i64 [ %58, %57 ], [ %20, %10 ]
  %61 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %15 to i64
  %62 = sub i64 %9, %61
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %144, label %64

64:                                               ; preds = %59
  %65 = sdiv exact i64 %62, 48
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ %65, %64 ], [ %78, %66 ]
  %68 = phi %"struct.absl::time_internal::cctz::Transition"* [ %15, %64 ], [ %77, %66 ]
  %69 = lshr i64 %67, 1
  %70 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %68, i64 %69
  %71 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %70, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp slt i64 %72, %60
  %74 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %70, i64 1
  %75 = xor i64 %69, -1
  %76 = add i64 %67, %75
  %77 = select i1 %73, %"struct.absl::time_internal::cctz::Transition"* %74, %"struct.absl::time_internal::cctz::Transition"* %68
  %78 = select i1 %73, i64 %76, i64 %69
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %66

80:                                               ; preds = %66
  %81 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %77, %15
  br i1 %81, label %144, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 3
  %84 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2, i32 0, i32 0
  br label %85

85:                                               ; preds = %82, %116
  %86 = phi %"struct.absl::time_internal::cctz::Transition"* [ %77, %82 ], [ %87, %116 ]
  %87 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %86, i64 -1
  %88 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %87, %15
  %89 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %86, i64 -2, i32 1
  %90 = select i1 %88, i8* %83, i8* %89
  %91 = load i8, i8* %90, align 8
  %92 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %86, i64 -1, i32 1
  %93 = load i8, i8* %92, align 8
  %94 = icmp eq i8 %91, %93
  br i1 %94, label %116, label %95

95:                                               ; preds = %85
  %96 = zext i8 %91 to i64
  %97 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %84, align 8
  %98 = zext i8 %93 to i64
  %99 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %97, i64 %96, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %97, i64 %98, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %100, %102
  br i1 %103, label %104, label %117

104:                                              ; preds = %95
  %105 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %97, i64 %96, i32 4
  %106 = load i8, i8* %105, align 8, !range !11
  %107 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %97, i64 %98, i32 4
  %108 = load i8, i8* %107, align 8, !range !11
  %109 = icmp eq i8 %106, %108
  br i1 %109, label %110, label %117

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %97, i64 %96, i32 5
  %112 = load i8, i8* %111, align 1
  %113 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %97, i64 %98, i32 5
  %114 = load i8, i8* %113, align 1
  %115 = icmp eq i8 %112, %114
  br i1 %115, label %116, label %117

116:                                              ; preds = %85, %110
  br i1 %88, label %144, label %85

117:                                              ; preds = %104, %95, %110
  %118 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %86, i64 -1, i32 4, i32 0, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %86, i64 -1, i32 4, i32 0, i32 1
  %121 = bitcast i8* %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = shl i64 %122, 56
  %124 = ashr exact i64 %123, 56
  %125 = shl i64 %122, 48
  %126 = ashr i64 %125, 56
  %127 = shl i64 %122, 40
  %128 = ashr i64 %127, 56
  %129 = shl i64 %122, 32
  %130 = ashr i64 %129, 56
  %131 = shl i64 %122, 24
  %132 = ashr i64 %131, 56
  %133 = add nsw i64 %132, 1
  %134 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64 %119, i64 %124, i64 %126, i64 %128, i64 %130, i64 %133) #17
  %135 = extractvalue { i64, i64 } %134, 0
  %136 = extractvalue { i64, i64 } %134, 1
  %137 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_transition", %"struct.absl::time_internal::cctz::time_zone::civil_transition"* %2, i64 0, i32 0, i32 0, i32 0
  store i64 %135, i64* %137, align 8
  %138 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_transition", %"struct.absl::time_internal::cctz::time_zone::civil_transition"* %2, i64 0, i32 0, i32 0, i32 1
  %139 = bitcast i8* %138 to i64*
  store i64 %136, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %86, i64 -1, i32 3
  %141 = getelementptr inbounds %"struct.absl::time_internal::cctz::time_zone::civil_transition", %"struct.absl::time_internal::cctz::time_zone::civil_transition"* %2, i64 0, i32 1
  %142 = bitcast %"class.absl::time_internal::cctz::detail::civil_time"* %141 to i8*
  %143 = bitcast %"class.absl::time_internal::cctz::detail::civil_time"* %140 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 16, i1 false)
  br label %144

144:                                              ; preds = %116, %59, %80, %117, %30, %28, %3
  %145 = phi i1 [ false, %3 ], [ true, %30 ], [ false, %28 ], [ true, %117 ], [ false, %80 ], [ false, %59 ], [ false, %116 ]
  ret i1 %145
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl13time_internal4cctz12TimeZoneInfoD2Ev(%"class.absl::time_internal::cctz::TimeZoneInfo"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN4absl13time_internal4cctz12TimeZoneInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 6
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 5
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 4
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #18
  br label %29

29:                                               ; preds = %20, %26
  %30 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %30, align 8
  %32 = icmp eq %"struct.absl::time_internal::cctz::TransitionType"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %31 to i64
  %35 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %36 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 0
  %40 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %39, align 8
  %41 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %40 to i64
  %44 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %45 = bitcast %"struct.absl::time_internal::cctz::Transition"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast %"struct.absl::time_internal::cctz::Transition"* %40 to i8*
  tail call void @_ZdlPv(i8* %46) #18
  br label %47

47:                                               ; preds = %38, %42
  %48 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 0
  tail call void @_ZN4absl13time_internal4cctz10TimeZoneIfD2Ev(%"class.absl::time_internal::cctz::TimeZoneIf"* %48) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl13time_internal4cctz12TimeZoneInfoD0Ev(%"class.absl::time_internal::cctz::TimeZoneInfo"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN4absl13time_internal4cctz12TimeZoneInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 6
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 5
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %17, %11
  %21 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 4
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #18
  br label %29

29:                                               ; preds = %26, %20
  %30 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %30, align 8
  %32 = icmp eq %"struct.absl::time_internal::cctz::TransitionType"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %31 to i64
  %35 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %36 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #18
  br label %38

38:                                               ; preds = %33, %29
  %39 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 0
  %40 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %39, align 8
  %41 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %40 to i64
  %44 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %45 = bitcast %"struct.absl::time_internal::cctz::Transition"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast %"struct.absl::time_internal::cctz::Transition"* %40 to i8*
  tail call void @_ZdlPv(i8* %46) #18
  br label %47

47:                                               ; preds = %38, %42
  %48 = getelementptr inbounds %"class.absl::time_internal::cctz::TimeZoneInfo", %"class.absl::time_internal::cctz::TimeZoneInfo"* %0, i64 0, i32 0
  tail call void @_ZN4absl13time_internal4cctz10TimeZoneIfD2Ev(%"class.absl::time_internal::cctz::TimeZoneIf"* %48) #17
  %49 = bitcast %"class.absl::time_internal::cctz::TimeZoneInfo"* %0 to i8*
  tail call void @_ZdlPv(i8* %49) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_secEllllll(i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat {
  %7 = icmp ult i64 %5, 60
  br i1 %7, label %8, label %118

8:                                                ; preds = %6
  %9 = trunc i64 %5 to i8
  %10 = icmp ult i64 %4, 60
  br i1 %10, label %11, label %73

11:                                               ; preds = %8
  %12 = trunc i64 %4 to i8
  %13 = icmp ult i64 %3, 24
  br i1 %13, label %14, label %43

14:                                               ; preds = %11
  %15 = trunc i64 %3 to i8
  %16 = add i64 %2, -1
  %17 = icmp ult i64 %16, 28
  %18 = add i64 %1, -1
  %19 = icmp ult i64 %18, 12
  %20 = and i1 %19, %17
  br i1 %20, label %178, label %21

21:                                               ; preds = %14
  %22 = icmp eq i64 %1, 12
  br i1 %22, label %31, label %23

23:                                               ; preds = %21
  %24 = sdiv i64 %1, 12
  %25 = add nsw i64 %24, %0
  %26 = srem i64 %1, 12
  %27 = icmp slt i64 %26, 1
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = add nsw i64 %25, -1
  %30 = add nsw i64 %26, 12
  br label %31

31:                                               ; preds = %21, %23, %28
  %32 = phi i64 [ %30, %28 ], [ %26, %23 ], [ 12, %21 ]
  %33 = phi i64 [ %29, %28 ], [ %25, %23 ], [ %0, %21 ]
  %34 = trunc i64 %32 to i8
  %35 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_dayElallaaa(i64 %33, i8 signext %34, i64 %2, i64 0, i8 signext %15, i8 signext %12, i8 signext %9) #17
  %36 = extractvalue { i64, i64 } %35, 0
  %37 = extractvalue { i64, i64 } %35, 1
  %38 = lshr i64 %37, 8
  %39 = lshr i64 %37, 16
  %40 = lshr i64 %37, 24
  %41 = lshr i64 %37, 32
  %42 = and i64 %37, -1099511627776
  br label %178

43:                                               ; preds = %11
  %44 = sdiv i64 %3, 24
  %45 = srem i64 %3, 24
  %46 = icmp slt i64 %45, 0
  %47 = add nsw i64 %45, 24
  %48 = select i1 %46, i64 %47, i64 %45
  %49 = ashr i64 %45, 63
  %50 = add nsw i64 %49, %44
  %51 = trunc i64 %48 to i8
  %52 = icmp eq i64 %1, 12
  br i1 %52, label %61, label %53

53:                                               ; preds = %43
  %54 = sdiv i64 %1, 12
  %55 = add nsw i64 %54, %0
  %56 = srem i64 %1, 12
  %57 = icmp slt i64 %56, 1
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = add nsw i64 %55, -1
  %60 = add nsw i64 %56, 12
  br label %61

61:                                               ; preds = %43, %53, %58
  %62 = phi i64 [ %60, %58 ], [ %56, %53 ], [ 12, %43 ]
  %63 = phi i64 [ %59, %58 ], [ %55, %53 ], [ %0, %43 ]
  %64 = trunc i64 %62 to i8
  %65 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_dayElallaaa(i64 %63, i8 signext %64, i64 %2, i64 %50, i8 signext %51, i8 signext %12, i8 signext %9) #17
  %66 = extractvalue { i64, i64 } %65, 0
  %67 = extractvalue { i64, i64 } %65, 1
  %68 = lshr i64 %67, 8
  %69 = lshr i64 %67, 16
  %70 = lshr i64 %67, 24
  %71 = lshr i64 %67, 32
  %72 = and i64 %67, -1099511627776
  br label %178

73:                                               ; preds = %8
  %74 = sdiv i64 %4, 60
  %75 = srem i64 %4, 60
  %76 = icmp slt i64 %75, 0
  %77 = add nsw i64 %75, 60
  %78 = select i1 %76, i64 %77, i64 %75
  %79 = ashr i64 %75, 63
  %80 = add nsw i64 %79, %74
  %81 = sdiv i64 %3, 24
  %82 = sdiv i64 %80, 24
  %83 = add nsw i64 %82, %81
  %84 = srem i64 %3, 24
  %85 = srem i64 %80, 24
  %86 = add nsw i64 %85, %84
  %87 = trunc i64 %78 to i8
  %88 = sdiv i64 %86, 24
  %89 = add nsw i64 %83, %88
  %90 = srem i64 %86, 24
  %91 = icmp slt i64 %90, 0
  %92 = add nsw i64 %90, 24
  %93 = select i1 %91, i64 %92, i64 %90
  %94 = ashr i64 %90, 63
  %95 = add nsw i64 %89, %94
  %96 = trunc i64 %93 to i8
  %97 = icmp eq i64 %1, 12
  br i1 %97, label %106, label %98

98:                                               ; preds = %73
  %99 = sdiv i64 %1, 12
  %100 = add nsw i64 %99, %0
  %101 = srem i64 %1, 12
  %102 = icmp slt i64 %101, 1
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = add nsw i64 %100, -1
  %105 = add nsw i64 %101, 12
  br label %106

106:                                              ; preds = %73, %98, %103
  %107 = phi i64 [ %105, %103 ], [ %101, %98 ], [ 12, %73 ]
  %108 = phi i64 [ %104, %103 ], [ %100, %98 ], [ %0, %73 ]
  %109 = trunc i64 %107 to i8
  %110 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_dayElallaaa(i64 %108, i8 signext %109, i64 %2, i64 %95, i8 signext %96, i8 signext %87, i8 signext %9) #17
  %111 = extractvalue { i64, i64 } %110, 0
  %112 = extractvalue { i64, i64 } %110, 1
  %113 = lshr i64 %112, 8
  %114 = lshr i64 %112, 16
  %115 = lshr i64 %112, 24
  %116 = lshr i64 %112, 32
  %117 = and i64 %112, -1099511627776
  br label %178

118:                                              ; preds = %6
  %119 = sdiv i64 %5, 60
  %120 = srem i64 %5, 60
  %121 = icmp slt i64 %120, 0
  %122 = add nsw i64 %120, 60
  %123 = select i1 %121, i64 %122, i64 %120
  %124 = ashr i64 %120, 63
  %125 = add nsw i64 %124, %119
  %126 = sdiv i64 %4, 60
  %127 = sdiv i64 %125, 60
  %128 = add nsw i64 %127, %126
  %129 = srem i64 %4, 60
  %130 = srem i64 %125, 60
  %131 = add nsw i64 %130, %129
  %132 = trunc i64 %123 to i8
  %133 = sdiv i64 %131, 60
  %134 = add nsw i64 %128, %133
  %135 = srem i64 %131, 60
  %136 = icmp slt i64 %135, 0
  %137 = add nsw i64 %135, 60
  %138 = select i1 %136, i64 %137, i64 %135
  %139 = ashr i64 %135, 63
  %140 = add nsw i64 %134, %139
  %141 = sdiv i64 %3, 24
  %142 = sdiv i64 %140, 24
  %143 = add nsw i64 %142, %141
  %144 = srem i64 %3, 24
  %145 = srem i64 %140, 24
  %146 = add nsw i64 %145, %144
  %147 = trunc i64 %138 to i8
  %148 = sdiv i64 %146, 24
  %149 = add nsw i64 %143, %148
  %150 = srem i64 %146, 24
  %151 = icmp slt i64 %150, 0
  %152 = add nsw i64 %150, 24
  %153 = select i1 %151, i64 %152, i64 %150
  %154 = ashr i64 %150, 63
  %155 = add nsw i64 %149, %154
  %156 = trunc i64 %153 to i8
  %157 = icmp eq i64 %1, 12
  br i1 %157, label %166, label %158

158:                                              ; preds = %118
  %159 = sdiv i64 %1, 12
  %160 = add nsw i64 %159, %0
  %161 = srem i64 %1, 12
  %162 = icmp slt i64 %161, 1
  br i1 %162, label %163, label %166

163:                                              ; preds = %158
  %164 = add nsw i64 %160, -1
  %165 = add nsw i64 %161, 12
  br label %166

166:                                              ; preds = %118, %158, %163
  %167 = phi i64 [ %165, %163 ], [ %161, %158 ], [ 12, %118 ]
  %168 = phi i64 [ %164, %163 ], [ %160, %158 ], [ %0, %118 ]
  %169 = trunc i64 %167 to i8
  %170 = tail call { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_dayElallaaa(i64 %168, i8 signext %169, i64 %2, i64 %155, i8 signext %156, i8 signext %147, i8 signext %132) #17
  %171 = extractvalue { i64, i64 } %170, 0
  %172 = extractvalue { i64, i64 } %170, 1
  %173 = lshr i64 %172, 8
  %174 = lshr i64 %172, 16
  %175 = lshr i64 %172, 24
  %176 = lshr i64 %172, 32
  %177 = and i64 %172, -1099511627776
  br label %178

178:                                              ; preds = %14, %106, %31, %61, %166
  %179 = phi i64 [ %42, %31 ], [ %72, %61 ], [ %117, %106 ], [ %177, %166 ], [ 0, %14 ]
  %180 = phi i64 [ %41, %31 ], [ %71, %61 ], [ %116, %106 ], [ %176, %166 ], [ %5, %14 ]
  %181 = phi i64 [ %40, %31 ], [ %70, %61 ], [ %115, %106 ], [ %175, %166 ], [ %4, %14 ]
  %182 = phi i64 [ %39, %31 ], [ %69, %61 ], [ %114, %106 ], [ %174, %166 ], [ %3, %14 ]
  %183 = phi i64 [ %38, %31 ], [ %68, %61 ], [ %113, %106 ], [ %173, %166 ], [ %2, %14 ]
  %184 = phi i64 [ %37, %31 ], [ %67, %61 ], [ %112, %106 ], [ %172, %166 ], [ %1, %14 ]
  %185 = phi i64 [ %36, %31 ], [ %66, %61 ], [ %111, %106 ], [ %171, %166 ], [ %0, %14 ]
  %186 = insertvalue { i64, i64 } undef, i64 %185, 0
  %187 = shl i64 %180, 32
  %188 = and i64 %187, 1095216660480
  %189 = or i64 %188, %179
  %190 = shl i64 %181, 24
  %191 = and i64 %190, 4278190080
  %192 = or i64 %189, %191
  %193 = shl i64 %182, 16
  %194 = and i64 %193, 16711680
  %195 = or i64 %192, %194
  %196 = shl i64 %183, 8
  %197 = and i64 %196, 65280
  %198 = or i64 %195, %197
  %199 = and i64 %184, 255
  %200 = or i64 %198, %199
  %201 = insertvalue { i64, i64 } %186, i64 %200, 1
  ret { i64, i64 } %201
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN4absl13time_internal4cctz6detail4impl5n_dayElallaaa(i64, i8 signext, i64, i64, i8 signext, i8 signext, i8 signext) local_unnamed_addr #0 comdat {
  %8 = srem i64 %0, 400
  %9 = sdiv i64 %3, 146097
  %10 = mul nsw i64 %9, 400
  %11 = add nsw i64 %10, %8
  %12 = srem i64 %3, 146097
  %13 = icmp slt i64 %12, 0
  %14 = add nsw i64 %11, -400
  %15 = add nsw i64 %12, 146097
  %16 = select i1 %13, i64 %15, i64 %12
  %17 = select i1 %13, i64 %14, i64 %11
  %18 = sdiv i64 %2, 146097
  %19 = mul nsw i64 %18, 400
  %20 = add nsw i64 %17, %19
  %21 = srem i64 %2, 146097
  %22 = add nsw i64 %16, %21
  %23 = icmp sgt i64 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %7
  %25 = icmp sgt i64 %22, 146097
  br i1 %25, label %26, label %51

26:                                               ; preds = %24
  %27 = add nsw i64 %20, 400
  %28 = add nsw i64 %22, -146097
  br label %51

29:                                               ; preds = %7
  %30 = icmp sgt i64 %22, -365
  br i1 %30, label %31, label %48

31:                                               ; preds = %29
  %32 = add nsw i64 %20, -1
  %33 = icmp sgt i8 %1, 2
  %34 = zext i1 %33 to i64
  %35 = add nsw i64 %32, %34
  %36 = and i64 %35, 3
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %31
  %39 = srem i64 %35, 100
  %40 = icmp ne i64 %39, 0
  %41 = srem i64 %35, 400
  %42 = icmp eq i64 %41, 0
  %43 = or i1 %40, %42
  %44 = select i1 %43, i64 366, i64 365
  br label %45

45:                                               ; preds = %31, %38
  %46 = phi i64 [ %44, %38 ], [ 365, %31 ]
  %47 = add nsw i64 %46, %22
  br label %51

48:                                               ; preds = %29
  %49 = add nsw i64 %20, -400
  %50 = add nsw i64 %22, 146097
  br label %51

51:                                               ; preds = %45, %48, %24, %26
  %52 = phi i64 [ %28, %26 ], [ %22, %24 ], [ %47, %45 ], [ %50, %48 ]
  %53 = phi i64 [ %27, %26 ], [ %20, %24 ], [ %32, %45 ], [ %49, %48 ]
  %54 = icmp sgt i64 %52, 365
  br i1 %54, label %55, label %116

55:                                               ; preds = %51
  %56 = icmp sgt i8 %1, 2
  %57 = zext i1 %56 to i64
  br label %58

58:                                               ; preds = %55, %58
  %59 = phi i64 [ %73, %58 ], [ %52, %55 ]
  %60 = phi i64 [ %71, %58 ], [ %53, %55 ]
  %61 = add nsw i64 %60, %57
  %62 = srem i64 %61, 400
  %63 = trunc i64 %62 to i32
  %64 = add nsw i32 %63, 400
  %65 = srem i32 %64, 400
  %66 = icmp eq i32 %65, 0
  %67 = icmp sgt i32 %65, 300
  %68 = or i1 %66, %67
  %69 = select i1 %68, i64 36525, i64 36524
  %70 = icmp sgt i64 %59, %69
  %71 = add nsw i64 %60, 100
  %72 = select i1 %70, i64 %69, i64 0
  %73 = sub nsw i64 %59, %72
  br i1 %70, label %58, label %74

74:                                               ; preds = %58, %90
  %75 = phi i64 [ %95, %90 ], [ %73, %58 ]
  %76 = phi i64 [ %93, %90 ], [ %60, %58 ]
  %77 = add nsw i64 %76, %57
  %78 = srem i64 %77, 400
  %79 = trunc i64 %78 to i32
  %80 = add nsw i32 %79, 400
  %81 = srem i32 %80, 400
  %82 = icmp eq i32 %81, 0
  %83 = icmp sgt i32 %81, 300
  %84 = or i1 %82, %83
  br i1 %84, label %90, label %85

85:                                               ; preds = %74
  %86 = add nsw i32 %81, -1
  %87 = srem i32 %86, 100
  %88 = icmp slt i32 %87, 96
  %89 = select i1 %88, i64 1461, i64 1460
  br label %90

90:                                               ; preds = %74, %85
  %91 = phi i64 [ 1461, %74 ], [ %89, %85 ]
  %92 = icmp sgt i64 %75, %91
  %93 = add nsw i64 %76, 4
  %94 = select i1 %92, i64 %91, i64 0
  %95 = sub nsw i64 %75, %94
  br i1 %92, label %74, label %96

96:                                               ; preds = %90, %109
  %97 = phi i64 [ %113, %109 ], [ %95, %90 ]
  %98 = phi i64 [ %115, %109 ], [ %76, %90 ]
  %99 = add nsw i64 %98, %57
  %100 = and i64 %99, 3
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %109

102:                                              ; preds = %96
  %103 = srem i64 %99, 100
  %104 = icmp ne i64 %103, 0
  %105 = srem i64 %99, 400
  %106 = icmp eq i64 %105, 0
  %107 = or i1 %104, %106
  %108 = select i1 %107, i64 366, i64 365
  br label %109

109:                                              ; preds = %96, %102
  %110 = phi i64 [ %108, %102 ], [ 365, %96 ]
  %111 = icmp sgt i64 %97, %110
  %112 = select i1 %111, i64 %110, i64 0
  %113 = sub nsw i64 %97, %112
  %114 = zext i1 %111 to i64
  %115 = add nsw i64 %98, %114
  br i1 %111, label %96, label %116

116:                                              ; preds = %109, %51
  %117 = phi i64 [ %52, %51 ], [ %113, %109 ]
  %118 = phi i64 [ %53, %51 ], [ %115, %109 ]
  %119 = icmp sgt i64 %117, 28
  br i1 %119, label %120, label %150

120:                                              ; preds = %116, %143
  %121 = phi i64 [ %144, %143 ], [ %117, %116 ]
  %122 = phi i8 [ %147, %143 ], [ %1, %116 ]
  %123 = phi i64 [ %149, %143 ], [ %118, %116 ]
  %124 = sext i8 %122 to i64
  %125 = getelementptr inbounds [13 x i32], [13 x i32]* @_ZZN4absl13time_internal4cctz6detail4impl14days_per_monthElaE16k_days_per_month, i64 0, i64 %124
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i8 %122, 2
  %128 = and i64 %123, 3
  %129 = icmp eq i64 %128, 0
  %130 = and i1 %127, %129
  br i1 %130, label %131, label %138

131:                                              ; preds = %120
  %132 = srem i64 %123, 100
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %138

134:                                              ; preds = %131
  %135 = srem i64 %123, 400
  %136 = icmp eq i64 %135, 0
  %137 = zext i1 %136 to i32
  br label %138

138:                                              ; preds = %120, %131, %134
  %139 = phi i32 [ 0, %120 ], [ 1, %131 ], [ %137, %134 ]
  %140 = add nsw i32 %139, %126
  %141 = sext i32 %140 to i64
  %142 = icmp sgt i64 %121, %141
  br i1 %142, label %143, label %150

143:                                              ; preds = %138
  %144 = sub nsw i64 %121, %141
  %145 = add i8 %122, 1
  %146 = icmp sgt i8 %145, 12
  %147 = select i1 %146, i8 1, i8 %145
  %148 = zext i1 %146 to i64
  %149 = add nsw i64 %123, %148
  br label %120

150:                                              ; preds = %138, %116
  %151 = phi i64 [ %117, %116 ], [ %121, %138 ]
  %152 = phi i8 [ %1, %116 ], [ %122, %138 ]
  %153 = phi i64 [ %118, %116 ], [ %123, %138 ]
  %154 = sub i64 %0, %8
  %155 = add i64 %154, %153
  %156 = insertvalue { i64, i64 } undef, i64 %155, 0
  %157 = zext i8 %6 to i64
  %158 = shl nuw nsw i64 %157, 32
  %159 = zext i8 %5 to i64
  %160 = shl nuw nsw i64 %159, 24
  %161 = zext i8 %4 to i64
  %162 = shl nuw nsw i64 %161, 16
  %163 = shl i64 %151, 8
  %164 = and i64 %163, 65280
  %165 = zext i8 %152 to i64
  %166 = or i64 %160, %162
  %167 = or i64 %166, %158
  %168 = or i64 %167, %164
  %169 = or i64 %168, %165
  %170 = insertvalue { i64, i64 } %156, i64 %169, 1
  ret { i64, i64 } %170
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl13time_internal4cctz6detail4impl14day_differenceElaalaa(i64, i8 signext, i8 signext, i64, i8 signext, i8 signext) local_unnamed_addr #0 comdat {
  %7 = srem i64 %0, 400
  %8 = srem i64 %3, 400
  %9 = sub nsw i64 %0, %7
  %10 = sub i64 %8, %3
  %11 = add i64 %10, %9
  %12 = sext i8 %1 to i32
  %13 = icmp slt i8 %1, 3
  %14 = zext i1 %13 to i64
  %15 = sub nsw i64 %7, %14
  %16 = icmp sgt i64 %15, -1
  %17 = add nsw i64 %15, -399
  %18 = select i1 %16, i64 %15, i64 %17
  %19 = sdiv i64 %18, 400
  %20 = mul nsw i64 %19, -400
  %21 = add nsw i64 %20, %15
  %22 = icmp sgt i8 %1, 2
  %23 = select i1 %22, i32 -3, i32 9
  %24 = add nsw i32 %23, %12
  %25 = mul nsw i32 %24, 153
  %26 = add nsw i32 %25, 2
  %27 = sdiv i32 %26, 5
  %28 = sext i8 %2 to i32
  %29 = add nsw i32 %28, -1
  %30 = add nsw i32 %29, %27
  %31 = sext i32 %30 to i64
  %32 = sdiv i64 %21, 4
  %33 = sdiv i64 %21, -100
  %34 = sext i8 %4 to i32
  %35 = icmp slt i8 %4, 3
  %36 = zext i1 %35 to i64
  %37 = sub nsw i64 %8, %36
  %38 = icmp sgt i64 %37, -1
  %39 = add nsw i64 %37, -399
  %40 = select i1 %38, i64 %37, i64 %39
  %41 = sdiv i64 %40, 400
  %42 = mul nsw i64 %41, -400
  %43 = add nsw i64 %42, %37
  %44 = icmp sgt i8 %4, 2
  %45 = select i1 %44, i32 -3, i32 9
  %46 = add nsw i32 %45, %34
  %47 = mul nsw i32 %46, 153
  %48 = add nsw i32 %47, 2
  %49 = sdiv i32 %48, 5
  %50 = sext i8 %5 to i32
  %51 = add nsw i32 %50, -1
  %52 = add nsw i32 %51, %49
  %53 = sdiv i64 %43, 100
  %54 = sub nsw i32 0, %52
  %55 = sext i32 %54 to i64
  %56 = sdiv i64 %43, -4
  %57 = sub nsw i64 %21, %43
  %58 = mul i64 %57, 365
  %59 = sub nsw i64 %19, %41
  %60 = mul nsw i64 %59, 146097
  %61 = add nsw i64 %32, %31
  %62 = add nsw i64 %61, %33
  %63 = add nsw i64 %62, %55
  %64 = add nsw i64 %63, %60
  %65 = add nsw i64 %64, %56
  %66 = add nsw i64 %65, %53
  %67 = add nsw i64 %66, %58
  %68 = icmp sgt i64 %11, 0
  %69 = icmp slt i64 %67, 0
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %74

71:                                               ; preds = %6
  %72 = add nsw i64 %67, 292194
  %73 = add nsw i64 %11, -800
  br label %81

74:                                               ; preds = %6
  %75 = icmp slt i64 %11, 0
  %76 = icmp sgt i64 %67, 0
  %77 = and i1 %75, %76
  br i1 %77, label %78, label %81

78:                                               ; preds = %74
  %79 = add nsw i64 %67, -292194
  %80 = add nsw i64 %11, 800
  br label %81

81:                                               ; preds = %74, %78, %71
  %82 = phi i64 [ %73, %71 ], [ %80, %78 ], [ %11, %74 ]
  %83 = phi i64 [ %72, %71 ], [ %79, %78 ], [ %67, %74 ]
  %84 = sdiv i64 %82, 400
  %85 = mul nsw i64 %84, 146097
  %86 = add nsw i64 %85, %83
  ret i64 %86
}

; Function Attrs: nounwind
declare i64 @_ZNSt3__16chrono12system_clock11from_time_tEl(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4absl13time_internal4cctz10TimeZoneIfD2Ev(%"class.absl::time_internal::cctz::TimeZoneIf"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl13time_internal4cctz14TransitionTypeENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.1"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 48
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %37, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.absl::time_internal::cctz::TransitionType"*
  %14 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %35, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %14 to i64
  br label %35

18:                                               ; preds = %12, %18
  %19 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %33, %18 ], [ %13, %12 ]
  %20 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 48, i1 false) #17
  %21 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %19, i64 0, i32 2, i32 0, i32 0
  store i64 1970, i64* %21, align 8
  %22 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %19, i64 0, i32 2, i32 0, i32 1
  store i8 1, i8* %22, align 8
  %23 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %19, i64 0, i32 2, i32 0, i32 2
  store i8 1, i8* %23, align 1
  %24 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %19, i64 0, i32 2, i32 0, i32 3
  store i8 0, i8* %24, align 2
  %25 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %19, i64 0, i32 2, i32 0, i32 4
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %19, i64 0, i32 2, i32 0, i32 5
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %19, i64 0, i32 3, i32 0, i32 0
  store i64 1970, i64* %27, align 8
  %28 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %19, i64 0, i32 3, i32 0, i32 1
  store i8 1, i8* %28, align 8
  %29 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %19, i64 0, i32 3, i32 0, i32 2
  store i8 1, i8* %29, align 1
  %30 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %19, i64 0, i32 3, i32 0, i32 3
  store i8 0, i8* %30, align 2
  %31 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %19, i64 0, i32 3, i32 0, i32 4
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %19, i64 0, i32 3, i32 0, i32 5
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %19, i64 1
  %34 = icmp eq %"struct.absl::time_internal::cctz::TransitionType"* %33, %14
  br i1 %34, label %16, label %18

35:                                               ; preds = %12, %16
  %36 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %36, i64* %7, align 8
  br label %104

37:                                               ; preds = %2
  %38 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %8, %39
  %41 = sdiv exact i64 %40, 48
  %42 = add i64 %41, %1
  %43 = icmp ugt i64 %42, 384307168202282325
  br i1 %43, label %44, label %46

44:                                               ; preds = %37
  %45 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %45) #19
  unreachable

46:                                               ; preds = %37
  %47 = sub i64 %5, %39
  %48 = sdiv exact i64 %47, 48
  %49 = icmp ult i64 %48, 192153584101141162
  br i1 %49, label %50, label %55

50:                                               ; preds = %46
  %51 = shl nsw i64 %48, 1
  %52 = icmp ult i64 %51, %42
  %53 = select i1 %52, i64 %42, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %46, %50
  %56 = phi i64 [ %53, %50 ], [ 384307168202282325, %46 ]
  %57 = mul i64 %56, 48
  %58 = tail call i8* @_Znwm(i64 %57) #18
  %59 = bitcast i8* %58 to %"struct.absl::time_internal::cctz::TransitionType"*
  br label %60

60:                                               ; preds = %50, %55
  %61 = phi i64 [ %56, %55 ], [ 0, %50 ]
  %62 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %59, %55 ], [ null, %50 ]
  %63 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %62, i64 %41
  %64 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %62, i64 %61
  %65 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %63, i64 %1
  br label %66

66:                                               ; preds = %60, %66
  %67 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %81, %66 ], [ %63, %60 ]
  %68 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 48, i1 false) #17
  %69 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %67, i64 0, i32 2, i32 0, i32 0
  store i64 1970, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %67, i64 0, i32 2, i32 0, i32 1
  store i8 1, i8* %70, align 8
  %71 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %67, i64 0, i32 2, i32 0, i32 2
  store i8 1, i8* %71, align 1
  %72 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %67, i64 0, i32 2, i32 0, i32 3
  store i8 0, i8* %72, align 2
  %73 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %67, i64 0, i32 2, i32 0, i32 4
  store i8 0, i8* %73, align 1
  %74 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %67, i64 0, i32 2, i32 0, i32 5
  store i8 0, i8* %74, align 4
  %75 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %67, i64 0, i32 3, i32 0, i32 0
  store i64 1970, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %67, i64 0, i32 3, i32 0, i32 1
  store i8 1, i8* %76, align 8
  %77 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %67, i64 0, i32 3, i32 0, i32 2
  store i8 1, i8* %77, align 1
  %78 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %67, i64 0, i32 3, i32 0, i32 3
  store i8 0, i8* %78, align 2
  %79 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %67, i64 0, i32 3, i32 0, i32 4
  store i8 0, i8* %79, align 1
  %80 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %67, i64 0, i32 3, i32 0, i32 5
  store i8 0, i8* %80, align 4
  %81 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %67, i64 1
  %82 = icmp eq %"struct.absl::time_internal::cctz::TransitionType"* %65, %81
  br i1 %82, label %83, label %66

83:                                               ; preds = %66
  %84 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %64 to i64
  %85 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %65 to i64
  %86 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %87 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %86, align 8
  %88 = load i64, i64* %7, align 8
  %89 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %87 to i64
  %90 = sub i64 %88, %89
  %91 = sdiv exact i64 %90, -48
  %92 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %63, i64 %91
  %93 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %92 to i64
  %94 = icmp sgt i64 %90, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %83
  %96 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %92 to i8*
  %97 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 %90, i1 false) #17
  %98 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %86, align 8
  br label %99

99:                                               ; preds = %83, %95
  %100 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %87, %83 ], [ %98, %95 ]
  store i64 %93, i64* %38, align 8
  store i64 %85, i64* %7, align 8
  store i64 %84, i64* %4, align 8
  %101 = icmp eq %"struct.absl::time_internal::cctz::TransitionType"* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %100 to i8*
  tail call void @_ZdlPv(i8* %103) #18
  br label %104

104:                                              ; preds = %102, %99, %35
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4absl13time_internal4cctz10TransitionERNS_9allocatorIS4_EEE12emplace_backIJEEEvDpOT_(%"struct.std::__1::__split_buffer.32"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer.32", %"struct.std::__1::__split_buffer.32"* %0, i64 0, i32 2
  %3 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.32", %"struct.std::__1::__split_buffer.32"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %4, align 8
  %6 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %3, %5
  %7 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %5 to i64
  br i1 %6, label %8, label %83

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.std::__1::__split_buffer.32", %"struct.std::__1::__split_buffer.32"* %0, i64 0, i32 1
  %10 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.32", %"struct.std::__1::__split_buffer.32"* %0, i64 0, i32 0
  %12 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %11, align 8
  %13 = icmp ugt %"struct.absl::time_internal::cctz::Transition"* %10, %12
  %14 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %12 to i64
  br i1 %13, label %15, label %34

15:                                               ; preds = %8
  %16 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %10 to i64
  %17 = sub i64 %16, %14
  %18 = sdiv exact i64 %17, 48
  %19 = add nsw i64 %18, 1
  %20 = sdiv i64 %19, -2
  %21 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %10, i64 %20
  %22 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %3 to i64
  %23 = sub i64 %22, %16
  %24 = sdiv exact i64 %23, 48
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %15
  %27 = bitcast %"struct.absl::time_internal::cctz::Transition"* %21 to i8*
  %28 = bitcast %"struct.absl::time_internal::cctz::Transition"* %10 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 %23, i1 false) #17
  %29 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %9, align 8
  br label %30

30:                                               ; preds = %15, %26
  %31 = phi %"struct.absl::time_internal::cctz::Transition"* [ %10, %15 ], [ %29, %26 ]
  %32 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %21, i64 %24
  store %"struct.absl::time_internal::cctz::Transition"* %32, %"struct.absl::time_internal::cctz::Transition"** %2, align 8
  %33 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %31, i64 %20
  store %"struct.absl::time_internal::cctz::Transition"* %33, %"struct.absl::time_internal::cctz::Transition"** %9, align 8
  br label %83

34:                                               ; preds = %8
  %35 = bitcast %"struct.absl::time_internal::cctz::Transition"** %4 to i64*
  %36 = bitcast %"struct.std::__1::__split_buffer.32"* %0 to i64*
  %37 = sub i64 %7, %14
  %38 = sdiv exact i64 %37, 48
  %39 = shl nsw i64 %38, 1
  %40 = icmp eq i64 %37, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 384307168202282325
  br i1 %42, label %43, label %44

43:                                               ; preds = %34
  tail call void @abort() #19
  unreachable

44:                                               ; preds = %34
  %45 = lshr i64 %41, 2
  %46 = mul i64 %41, 48
  %47 = tail call i8* @_Znwm(i64 %46) #18
  %48 = bitcast i8* %47 to %"struct.absl::time_internal::cctz::Transition"*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %48, i64 %45
  %51 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %50 to i64
  %52 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %48, i64 %41
  %53 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %52 to i64
  %54 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %10 to i64
  %55 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %3 to i64
  %56 = sub i64 %55, %54
  %57 = sdiv exact i64 %56, 48
  %58 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %73, label %60

60:                                               ; preds = %44, %60
  %61 = phi %"struct.absl::time_internal::cctz::Transition"* [ %66, %60 ], [ %50, %44 ]
  %62 = phi i64 [ %67, %60 ], [ %51, %44 ]
  %63 = phi %"struct.absl::time_internal::cctz::Transition"* [ %68, %60 ], [ %10, %44 ]
  %64 = inttoptr i64 %62 to i8*
  %65 = bitcast %"struct.absl::time_internal::cctz::Transition"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 48, i1 false) #17
  %66 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %61, i64 1
  %67 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %66 to i64
  %68 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %63, i64 1
  %69 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %58, %66
  br i1 %69, label %70, label %60

70:                                               ; preds = %60
  %71 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %58 to i64
  %72 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %11, align 8
  br label %73

73:                                               ; preds = %44, %70
  %74 = phi %"struct.absl::time_internal::cctz::Transition"* [ %72, %70 ], [ %12, %44 ]
  %75 = phi i64 [ %71, %70 ], [ %51, %44 ]
  store i64 %49, i64* %36, align 8
  %76 = bitcast %"struct.absl::time_internal::cctz::Transition"** %9 to i64*
  store i64 %51, i64* %76, align 8
  %77 = bitcast %"struct.absl::time_internal::cctz::Transition"** %2 to i64*
  store i64 %75, i64* %77, align 8
  store i64 %53, i64* %35, align 8
  %78 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %74, null
  %79 = inttoptr i64 %75 to %"struct.absl::time_internal::cctz::Transition"*
  br i1 %78, label %83, label %80

80:                                               ; preds = %73
  %81 = bitcast %"struct.absl::time_internal::cctz::Transition"* %74 to i8*
  tail call void @_ZdlPv(i8* %81) #18
  %82 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %2, align 8
  br label %83

83:                                               ; preds = %80, %73, %30, %1
  %84 = phi %"struct.absl::time_internal::cctz::Transition"* [ %82, %80 ], [ %79, %73 ], [ %32, %30 ], [ %3, %1 ]
  %85 = bitcast %"struct.absl::time_internal::cctz::Transition"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 48, i1 false) #17
  %86 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %84, i64 0, i32 3, i32 0, i32 0
  store i64 1970, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %84, i64 0, i32 3, i32 0, i32 1
  store i8 1, i8* %87, align 8
  %88 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %84, i64 0, i32 3, i32 0, i32 2
  store i8 1, i8* %88, align 1
  %89 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %84, i64 0, i32 3, i32 0, i32 3
  store i8 0, i8* %89, align 2
  %90 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %84, i64 0, i32 3, i32 0, i32 4
  store i8 0, i8* %90, align 1
  %91 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %84, i64 0, i32 3, i32 0, i32 5
  store i8 0, i8* %91, align 4
  %92 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %84, i64 0, i32 4, i32 0, i32 0
  store i64 1970, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %84, i64 0, i32 4, i32 0, i32 1
  store i8 1, i8* %93, align 8
  %94 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %84, i64 0, i32 4, i32 0, i32 2
  store i8 1, i8* %94, align 1
  %95 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %84, i64 0, i32 4, i32 0, i32 3
  store i8 0, i8* %95, align 2
  %96 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %84, i64 0, i32 4, i32 0, i32 4
  store i8 0, i8* %96, align 1
  %97 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %84, i64 0, i32 4, i32 0, i32 5
  store i8 0, i8* %97, align 4
  %98 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %2, align 8
  %99 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %98, i64 1
  store %"struct.absl::time_internal::cctz::Transition"* %99, %"struct.absl::time_internal::cctz::Transition"** %2, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN4absl13time_internal4cctz14TransitionTypeERNS_9allocatorIS4_EEE12emplace_backIJEEEvDpOT_(%"struct.std::__1::__split_buffer"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %3 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %4, align 8
  %6 = icmp eq %"struct.absl::time_internal::cctz::TransitionType"* %3, %5
  %7 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %5 to i64
  br i1 %6, label %8, label %83

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %10 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %12 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %11, align 8
  %13 = icmp ugt %"struct.absl::time_internal::cctz::TransitionType"* %10, %12
  %14 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %12 to i64
  br i1 %13, label %15, label %34

15:                                               ; preds = %8
  %16 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %10 to i64
  %17 = sub i64 %16, %14
  %18 = sdiv exact i64 %17, 48
  %19 = add nsw i64 %18, 1
  %20 = sdiv i64 %19, -2
  %21 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %10, i64 %20
  %22 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %3 to i64
  %23 = sub i64 %22, %16
  %24 = sdiv exact i64 %23, 48
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %15
  %27 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %21 to i8*
  %28 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %10 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 %23, i1 false) #17
  %29 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %9, align 8
  br label %30

30:                                               ; preds = %15, %26
  %31 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %10, %15 ], [ %29, %26 ]
  %32 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %21, i64 %24
  store %"struct.absl::time_internal::cctz::TransitionType"* %32, %"struct.absl::time_internal::cctz::TransitionType"** %2, align 8
  %33 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %31, i64 %20
  store %"struct.absl::time_internal::cctz::TransitionType"* %33, %"struct.absl::time_internal::cctz::TransitionType"** %9, align 8
  br label %83

34:                                               ; preds = %8
  %35 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %4 to i64*
  %36 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %37 = sub i64 %7, %14
  %38 = sdiv exact i64 %37, 48
  %39 = shl nsw i64 %38, 1
  %40 = icmp eq i64 %37, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 384307168202282325
  br i1 %42, label %43, label %44

43:                                               ; preds = %34
  tail call void @abort() #19
  unreachable

44:                                               ; preds = %34
  %45 = lshr i64 %41, 2
  %46 = mul i64 %41, 48
  %47 = tail call i8* @_Znwm(i64 %46) #18
  %48 = bitcast i8* %47 to %"struct.absl::time_internal::cctz::TransitionType"*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %48, i64 %45
  %51 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %50 to i64
  %52 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %48, i64 %41
  %53 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %52 to i64
  %54 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %10 to i64
  %55 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %3 to i64
  %56 = sub i64 %55, %54
  %57 = sdiv exact i64 %56, 48
  %58 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %73, label %60

60:                                               ; preds = %44, %60
  %61 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %66, %60 ], [ %50, %44 ]
  %62 = phi i64 [ %67, %60 ], [ %51, %44 ]
  %63 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %68, %60 ], [ %10, %44 ]
  %64 = inttoptr i64 %62 to i8*
  %65 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 48, i1 false) #17
  %66 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %61, i64 1
  %67 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %66 to i64
  %68 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %63, i64 1
  %69 = icmp eq %"struct.absl::time_internal::cctz::TransitionType"* %58, %66
  br i1 %69, label %70, label %60

70:                                               ; preds = %60
  %71 = ptrtoint %"struct.absl::time_internal::cctz::TransitionType"* %58 to i64
  %72 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %11, align 8
  br label %73

73:                                               ; preds = %44, %70
  %74 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %72, %70 ], [ %12, %44 ]
  %75 = phi i64 [ %71, %70 ], [ %51, %44 ]
  store i64 %49, i64* %36, align 8
  %76 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %9 to i64*
  store i64 %51, i64* %76, align 8
  %77 = bitcast %"struct.absl::time_internal::cctz::TransitionType"** %2 to i64*
  store i64 %75, i64* %77, align 8
  store i64 %53, i64* %35, align 8
  %78 = icmp eq %"struct.absl::time_internal::cctz::TransitionType"* %74, null
  %79 = inttoptr i64 %75 to %"struct.absl::time_internal::cctz::TransitionType"*
  br i1 %78, label %83, label %80

80:                                               ; preds = %73
  %81 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %74 to i8*
  tail call void @_ZdlPv(i8* %81) #18
  %82 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %2, align 8
  br label %83

83:                                               ; preds = %80, %73, %30, %1
  %84 = phi %"struct.absl::time_internal::cctz::TransitionType"* [ %82, %80 ], [ %79, %73 ], [ %32, %30 ], [ %3, %1 ]
  %85 = bitcast %"struct.absl::time_internal::cctz::TransitionType"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 48, i1 false) #17
  %86 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %84, i64 0, i32 2, i32 0, i32 0
  store i64 1970, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %84, i64 0, i32 2, i32 0, i32 1
  store i8 1, i8* %87, align 8
  %88 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %84, i64 0, i32 2, i32 0, i32 2
  store i8 1, i8* %88, align 1
  %89 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %84, i64 0, i32 2, i32 0, i32 3
  store i8 0, i8* %89, align 2
  %90 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %84, i64 0, i32 2, i32 0, i32 4
  store i8 0, i8* %90, align 1
  %91 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %84, i64 0, i32 2, i32 0, i32 5
  store i8 0, i8* %91, align 4
  %92 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %84, i64 0, i32 3, i32 0, i32 0
  store i64 1970, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %84, i64 0, i32 3, i32 0, i32 1
  store i8 1, i8* %93, align 8
  %94 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %84, i64 0, i32 3, i32 0, i32 2
  store i8 1, i8* %94, align 1
  %95 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %84, i64 0, i32 3, i32 0, i32 3
  store i8 0, i8* %95, align 2
  %96 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %84, i64 0, i32 3, i32 0, i32 4
  store i8 0, i8* %96, align 1
  %97 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %84, i64 0, i32 3, i32 0, i32 5
  store i8 0, i8* %97, align 4
  %98 = load %"struct.absl::time_internal::cctz::TransitionType"*, %"struct.absl::time_internal::cctz::TransitionType"** %2, align 8
  %99 = getelementptr inbounds %"struct.absl::time_internal::cctz::TransitionType", %"struct.absl::time_internal::cctz::TransitionType"* %98, i64 1
  store %"struct.absl::time_internal::cctz::TransitionType"* %99, %"struct.absl::time_internal::cctz::TransitionType"** %2, align 8
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl13time_internal4cctz10TransitionENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.absl::time_internal::cctz::Transition"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.absl::time_internal::cctz::Transition"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 48
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %37, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.absl::time_internal::cctz::Transition"*
  %14 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %35, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %14 to i64
  br label %35

18:                                               ; preds = %12, %18
  %19 = phi %"struct.absl::time_internal::cctz::Transition"* [ %33, %18 ], [ %13, %12 ]
  %20 = bitcast %"struct.absl::time_internal::cctz::Transition"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 48, i1 false) #17
  %21 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %19, i64 0, i32 3, i32 0, i32 0
  store i64 1970, i64* %21, align 8
  %22 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %19, i64 0, i32 3, i32 0, i32 1
  store i8 1, i8* %22, align 8
  %23 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %19, i64 0, i32 3, i32 0, i32 2
  store i8 1, i8* %23, align 1
  %24 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %19, i64 0, i32 3, i32 0, i32 3
  store i8 0, i8* %24, align 2
  %25 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %19, i64 0, i32 3, i32 0, i32 4
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %19, i64 0, i32 3, i32 0, i32 5
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %19, i64 0, i32 4, i32 0, i32 0
  store i64 1970, i64* %27, align 8
  %28 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %19, i64 0, i32 4, i32 0, i32 1
  store i8 1, i8* %28, align 8
  %29 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %19, i64 0, i32 4, i32 0, i32 2
  store i8 1, i8* %29, align 1
  %30 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %19, i64 0, i32 4, i32 0, i32 3
  store i8 0, i8* %30, align 2
  %31 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %19, i64 0, i32 4, i32 0, i32 4
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %19, i64 0, i32 4, i32 0, i32 5
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %19, i64 1
  %34 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %33, %14
  br i1 %34, label %16, label %18

35:                                               ; preds = %12, %16
  %36 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %36, i64* %7, align 8
  br label %104

37:                                               ; preds = %2
  %38 = bitcast %"class.std::__1::vector"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %8, %39
  %41 = sdiv exact i64 %40, 48
  %42 = add i64 %41, %1
  %43 = icmp ugt i64 %42, 384307168202282325
  br i1 %43, label %44, label %46

44:                                               ; preds = %37
  %45 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %45) #19
  unreachable

46:                                               ; preds = %37
  %47 = sub i64 %5, %39
  %48 = sdiv exact i64 %47, 48
  %49 = icmp ult i64 %48, 192153584101141162
  br i1 %49, label %50, label %55

50:                                               ; preds = %46
  %51 = shl nsw i64 %48, 1
  %52 = icmp ult i64 %51, %42
  %53 = select i1 %52, i64 %42, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %46, %50
  %56 = phi i64 [ %53, %50 ], [ 384307168202282325, %46 ]
  %57 = mul i64 %56, 48
  %58 = tail call i8* @_Znwm(i64 %57) #18
  %59 = bitcast i8* %58 to %"struct.absl::time_internal::cctz::Transition"*
  br label %60

60:                                               ; preds = %50, %55
  %61 = phi i64 [ %56, %55 ], [ 0, %50 ]
  %62 = phi %"struct.absl::time_internal::cctz::Transition"* [ %59, %55 ], [ null, %50 ]
  %63 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %62, i64 %41
  %64 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %62, i64 %61
  %65 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %63, i64 %1
  br label %66

66:                                               ; preds = %60, %66
  %67 = phi %"struct.absl::time_internal::cctz::Transition"* [ %81, %66 ], [ %63, %60 ]
  %68 = bitcast %"struct.absl::time_internal::cctz::Transition"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 48, i1 false) #17
  %69 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %67, i64 0, i32 3, i32 0, i32 0
  store i64 1970, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %67, i64 0, i32 3, i32 0, i32 1
  store i8 1, i8* %70, align 8
  %71 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %67, i64 0, i32 3, i32 0, i32 2
  store i8 1, i8* %71, align 1
  %72 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %67, i64 0, i32 3, i32 0, i32 3
  store i8 0, i8* %72, align 2
  %73 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %67, i64 0, i32 3, i32 0, i32 4
  store i8 0, i8* %73, align 1
  %74 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %67, i64 0, i32 3, i32 0, i32 5
  store i8 0, i8* %74, align 4
  %75 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %67, i64 0, i32 4, i32 0, i32 0
  store i64 1970, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %67, i64 0, i32 4, i32 0, i32 1
  store i8 1, i8* %76, align 8
  %77 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %67, i64 0, i32 4, i32 0, i32 2
  store i8 1, i8* %77, align 1
  %78 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %67, i64 0, i32 4, i32 0, i32 3
  store i8 0, i8* %78, align 2
  %79 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %67, i64 0, i32 4, i32 0, i32 4
  store i8 0, i8* %79, align 1
  %80 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %67, i64 0, i32 4, i32 0, i32 5
  store i8 0, i8* %80, align 4
  %81 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %67, i64 1
  %82 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %65, %81
  br i1 %82, label %83, label %66

83:                                               ; preds = %66
  %84 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %64 to i64
  %85 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %65 to i64
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %87 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %86, align 8
  %88 = load i64, i64* %7, align 8
  %89 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %87 to i64
  %90 = sub i64 %88, %89
  %91 = sdiv exact i64 %90, -48
  %92 = getelementptr inbounds %"struct.absl::time_internal::cctz::Transition", %"struct.absl::time_internal::cctz::Transition"* %63, i64 %91
  %93 = ptrtoint %"struct.absl::time_internal::cctz::Transition"* %92 to i64
  %94 = icmp sgt i64 %90, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %83
  %96 = bitcast %"struct.absl::time_internal::cctz::Transition"* %92 to i8*
  %97 = bitcast %"struct.absl::time_internal::cctz::Transition"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 %90, i1 false) #17
  %98 = load %"struct.absl::time_internal::cctz::Transition"*, %"struct.absl::time_internal::cctz::Transition"** %86, align 8
  br label %99

99:                                               ; preds = %83, %95
  %100 = phi %"struct.absl::time_internal::cctz::Transition"* [ %87, %83 ], [ %98, %95 ]
  store i64 %93, i64* %38, align 8
  store i64 %85, i64* %7, align 8
  store i64 %84, i64* %4, align 8
  %101 = icmp eq %"struct.absl::time_internal::cctz::Transition"* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = bitcast %"struct.absl::time_internal::cctz::Transition"* %100 to i8*
  tail call void @_ZdlPv(i8* %103) #18
  br label %104

104:                                              ; preds = %102, %99, %35
  ret void
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #12

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal %"class.absl::time_internal::cctz::ZoneInfoSource"* @"_ZNSt3__110__function16__policy_invokerIFNS_10unique_ptrIN4absl13time_internal4cctz14ZoneInfoSourceENS_14default_deleteIS6_EEEERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEE11__call_implINS0_20__default_alloc_funcIZNS5_12TimeZoneInfo4LoadESH_E3$_1SI_EEEES9_PKNS0_16__policy_storageESH_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.std::__1::basic_string"* dereferenceable(24)) #0 align 2 {
  %3 = alloca [24 x i8], align 16
  %4 = alloca [52 x i8], align 16
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc(%"class.std::__1::basic_string"* %1, i64 0, i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)) #17
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %7, i64 5, i64 0
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #17
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %8, %18
  br i1 %19, label %28, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %24 = select i1 %14, i8* %22, i8* %23
  %25 = getelementptr inbounds i8, i8* %24, i64 %8
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 47
  br i1 %27, label %38, label %28

28:                                               ; preds = %20, %2
  %29 = tail call i8* @getenv(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)) #17
  %30 = icmp eq i8* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = load i8, i8* %29, align 1
  %33 = icmp eq i8 %32, 0
  %34 = select i1 %33, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), i8* %29
  br label %35

35:                                               ; preds = %31, %28
  %36 = phi i8* [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), %28 ], [ %34, %31 ]
  %37 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* %36) #17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %5, i8 signext 47) #17
  br label %38

38:                                               ; preds = %35, %20
  %39 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendERKS5_mm(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %8, i64 -1) #17
  %40 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i8*, i8** %10, align 8
  %45 = select i1 %43, i8* %44, i8* %9
  %46 = call %struct._IO_FILE* @fopen64(i8* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #17
  %47 = icmp eq %struct._IO_FILE* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %38
  %49 = call i32 @fseek(%struct._IO_FILE* nonnull %46, i64 0, i32 2) #17
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %48
  %52 = call i64 @ftell(%struct._IO_FILE* nonnull %46) #17
  %53 = icmp sgt i64 %52, 0
  %54 = select i1 %53, i64 %52, i64 0
  call void @rewind(%struct._IO_FILE* nonnull %46) #17
  br label %55

55:                                               ; preds = %51, %48
  %56 = phi i64 [ %54, %51 ], [ 0, %48 ]
  %57 = call i8* @_Znwm(i64 32) #18
  %58 = bitcast i8* %57 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds i8, i8* %57, i64 8
  %60 = ptrtoint %struct._IO_FILE* %46 to i64
  %61 = bitcast i8* %59 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds i8, i8* %57, i64 16
  %63 = bitcast i8* %62 to i64*
  store i64 ptrtoint (i32 (%struct._IO_FILE*)* @fclose to i64), i64* %63, align 8
  %64 = getelementptr inbounds i8, i8* %57, i64 24
  %65 = bitcast i8* %64 to i64*
  store i64 %56, i64* %65, align 8
  %66 = bitcast i8* %57 to %"class.absl::time_internal::cctz::ZoneInfoSource"*
  br label %67

67:                                               ; preds = %55, %38
  %68 = phi %"class.absl::time_internal::cctz::ZoneInfoSource"* [ %66, %55 ], [ null, %38 ]
  %69 = load i8, i8* %41, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %72) #18
  br label %73

73:                                               ; preds = %71, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #17
  %74 = ptrtoint %"class.absl::time_internal::cctz::ZoneInfoSource"* %68 to i64
  %75 = icmp eq %"class.absl::time_internal::cctz::ZoneInfoSource"* %68, null
  br i1 %75, label %76, label %281

76:                                               ; preds = %73
  %77 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc(%"class.std::__1::basic_string"* %1, i64 0, i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)) #17
  %78 = icmp eq i32 %77, 0
  %79 = select i1 %78, i64 5, i64 0
  %80 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 0
  %81 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 6
  %82 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 11
  %83 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 12
  %84 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 13
  %85 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 14
  %86 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 15
  %87 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 16
  %88 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 17
  %89 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 18
  %90 = getelementptr inbounds [24 x i8], [24 x i8]* %3, i64 0, i64 19
  %91 = getelementptr inbounds [52 x i8], [52 x i8]* %4, i64 0, i64 0
  %92 = getelementptr inbounds [52 x i8], [52 x i8]* %4, i64 0, i64 40
  %93 = getelementptr inbounds [52 x i8], [52 x i8]* %4, i64 0, i64 41
  %94 = getelementptr inbounds [52 x i8], [52 x i8]* %4, i64 0, i64 42
  %95 = getelementptr inbounds [52 x i8], [52 x i8]* %4, i64 0, i64 43
  %96 = getelementptr inbounds [52 x i8], [52 x i8]* %4, i64 0, i64 44
  %97 = getelementptr inbounds [52 x i8], [52 x i8]* %4, i64 0, i64 45
  %98 = getelementptr inbounds [52 x i8], [52 x i8]* %4, i64 0, i64 46
  %99 = getelementptr inbounds [52 x i8], [52 x i8]* %4, i64 0, i64 47
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %102

102:                                              ; preds = %275, %76
  %103 = phi i8** [ getelementptr inbounds ([2 x i8*], [2 x i8*]* @.ref.tmp.12, i64 0, i64 0), %76 ], [ %276, %275 ]
  %104 = phi i64 [ undef, %76 ], [ %268, %275 ]
  %105 = load i8*, i8** %103, align 8
  %106 = call %struct._IO_FILE* @fopen64(i8* %105, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #17
  %107 = ptrtoint %struct._IO_FILE* %106 to i64
  %108 = icmp eq %struct._IO_FILE* %106, null
  br i1 %108, label %266, label %109

109:                                              ; preds = %102
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %80, i8 -86, i64 24, i1 false) #17
  %110 = call i64 @fread(i8* nonnull %80, i64 1, i64 24, %struct._IO_FILE* nonnull %106) #17
  %111 = icmp eq i64 %110, 24
  br i1 %111, label %112, label %262

112:                                              ; preds = %109
  %113 = call i32 @bcmp(i8* nonnull %80, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i64 6) #17
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %262

115:                                              ; preds = %112
  %116 = load i8, i8* %82, align 1
  %117 = icmp eq i8 %116, 0
  %118 = select i1 %117, i8* %81, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0)
  %119 = load i8, i8* %83, align 4
  %120 = zext i8 %119 to i64
  %121 = shl nuw nsw i64 %120, 8
  %122 = load i8, i8* %84, align 1
  %123 = zext i8 %122 to i64
  %124 = or i64 %121, %123
  %125 = shl nuw nsw i64 %124, 8
  %126 = load i8, i8* %85, align 2
  %127 = zext i8 %126 to i64
  %128 = or i64 %125, %127
  %129 = shl nuw nsw i64 %128, 8
  %130 = load i8, i8* %86, align 1
  %131 = zext i8 %130 to i64
  %132 = or i64 %129, %131
  %133 = icmp ult i64 %132, 2147483648
  %134 = add i64 %132, -4294967296
  %135 = select i1 %133, i64 %132, i64 %134
  %136 = load i8, i8* %87, align 16
  %137 = zext i8 %136 to i64
  %138 = shl nuw nsw i64 %137, 8
  %139 = load i8, i8* %88, align 1
  %140 = zext i8 %139 to i64
  %141 = or i64 %138, %140
  %142 = shl nuw nsw i64 %141, 8
  %143 = load i8, i8* %89, align 2
  %144 = zext i8 %143 to i64
  %145 = or i64 %142, %144
  %146 = shl nuw nsw i64 %145, 8
  %147 = load i8, i8* %90, align 1
  %148 = zext i8 %147 to i64
  %149 = or i64 %146, %148
  %150 = icmp ult i64 %149, 2147483648
  %151 = add i64 %149, -4294967296
  %152 = select i1 %150, i64 %149, i64 %151
  %153 = icmp slt i64 %135, 0
  %154 = icmp slt i64 %152, %135
  %155 = or i1 %153, %154
  br i1 %155, label %262, label %156

156:                                              ; preds = %115
  %157 = call i32 @fseek(%struct._IO_FILE* nonnull %106, i64 %135, i32 0) #17
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %262

159:                                              ; preds = %156
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %91) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %91, i8 -86, i64 52, i1 false) #17
  %160 = sub nsw i64 %152, %135
  %161 = udiv i64 %160, 52
  %162 = mul i64 %161, 52
  %163 = icmp eq i64 %162, %160
  br i1 %163, label %164, label %258

164:                                              ; preds = %159
  %165 = icmp ult i64 %160, 52
  br i1 %165, label %258, label %168

166:                                              ; preds = %210
  %167 = icmp eq i64 %218, %161
  br i1 %167, label %258, label %168

168:                                              ; preds = %164, %166
  %169 = phi i64 [ %218, %166 ], [ 0, %164 ]
  %170 = call i64 @fread(i8* nonnull %91, i64 1, i64 52, %struct._IO_FILE* nonnull %106) #17
  %171 = icmp eq i64 %170, 52
  br i1 %171, label %172, label %258

172:                                              ; preds = %168
  %173 = load i8, i8* %92, align 8
  %174 = zext i8 %173 to i64
  %175 = shl nuw nsw i64 %174, 8
  %176 = load i8, i8* %93, align 1
  %177 = zext i8 %176 to i64
  %178 = or i64 %175, %177
  %179 = shl nuw nsw i64 %178, 8
  %180 = load i8, i8* %94, align 2
  %181 = zext i8 %180 to i64
  %182 = or i64 %179, %181
  %183 = shl nuw nsw i64 %182, 8
  %184 = load i8, i8* %95, align 1
  %185 = zext i8 %184 to i64
  %186 = or i64 %183, %185
  %187 = icmp ult i64 %186, 2147483648
  %188 = add i64 %186, -4294967296
  %189 = select i1 %187, i64 %186, i64 %188
  %190 = add nsw i64 %189, %152
  %191 = load i8, i8* %96, align 4
  %192 = zext i8 %191 to i64
  %193 = shl nuw nsw i64 %192, 8
  %194 = load i8, i8* %97, align 1
  %195 = zext i8 %194 to i64
  %196 = or i64 %193, %195
  %197 = shl nuw nsw i64 %196, 8
  %198 = load i8, i8* %98, align 2
  %199 = zext i8 %198 to i64
  %200 = or i64 %197, %199
  %201 = shl nuw nsw i64 %200, 8
  %202 = load i8, i8* %99, align 1
  %203 = zext i8 %202 to i64
  %204 = or i64 %201, %203
  %205 = icmp ult i64 %204, 2147483648
  %206 = add i64 %204, -4294967296
  %207 = select i1 %205, i64 %204, i64 %206
  %208 = or i64 %207, %190
  %209 = icmp slt i64 %208, 0
  br i1 %209, label %258, label %210

210:                                              ; preds = %172
  store i8 0, i8* %92, align 8
  %211 = load i8, i8* %12, align 1
  %212 = icmp slt i8 %211, 0
  %213 = load i8*, i8** %100, align 8
  %214 = select i1 %212, i8* %213, i8* %101
  %215 = getelementptr inbounds i8, i8* %214, i64 %79
  %216 = call i32 @strcmp(i8* %215, i8* nonnull %91) #20
  %217 = icmp eq i32 %216, 0
  %218 = add i64 %169, 1
  br i1 %217, label %219, label %166

219:                                              ; preds = %210
  %220 = call i32 @fseek(%struct._IO_FILE* nonnull %106, i64 %190, i32 0) #17
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %258

222:                                              ; preds = %219
  %223 = call i8* @_Znwm(i64 56) #18
  %224 = bitcast i8* %223 to i32 (...)***
  %225 = getelementptr inbounds i8, i8* %223, i64 8
  %226 = bitcast i8* %225 to i64*
  store i64 %107, i64* %226, align 8
  %227 = getelementptr inbounds i8, i8* %223, i64 16
  %228 = bitcast i8* %227 to i64*
  store i64 ptrtoint (i32 (%struct._IO_FILE*)* @fclose to i64), i64* %228, align 8
  %229 = getelementptr inbounds i8, i8* %223, i64 24
  %230 = bitcast i8* %229 to i64*
  store i64 %207, i64* %230, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4absl13time_internal4cctz12_GLOBAL__N_121AndroidZoneInfoSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %224, align 8
  %231 = getelementptr inbounds i8, i8* %223, i64 32
  %232 = call i64 @strlen(i8* %118) #17
  %233 = icmp ugt i64 %232, -17
  br i1 %233, label %234, label %236

234:                                              ; preds = %222
  %235 = bitcast i8* %231 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %235) #19
  unreachable

236:                                              ; preds = %222
  %237 = icmp ult i64 %232, 23
  br i1 %237, label %248, label %238

238:                                              ; preds = %236
  %239 = add nuw i64 %232, 16
  %240 = and i64 %239, -16
  %241 = call i8* @_Znwm(i64 %240) #18
  %242 = bitcast i8* %231 to i8**
  store i8* %241, i8** %242, align 8
  %243 = or i64 %240, -9223372036854775808
  %244 = getelementptr inbounds i8, i8* %223, i64 48
  %245 = bitcast i8* %244 to i64*
  store i64 %243, i64* %245, align 8
  %246 = getelementptr inbounds i8, i8* %223, i64 40
  %247 = bitcast i8* %246 to i64*
  store i64 %232, i64* %247, align 8
  br label %252

248:                                              ; preds = %236
  %249 = trunc i64 %232 to i8
  %250 = getelementptr inbounds i8, i8* %223, i64 55
  store i8 %249, i8* %250, align 1
  %251 = icmp eq i64 %232, 0
  br i1 %251, label %254, label %252

252:                                              ; preds = %248, %238
  %253 = phi i8* [ %241, %238 ], [ %231, %248 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %253, i8* align 1 %118, i64 %232, i1 false) #17
  br label %254

254:                                              ; preds = %252, %248
  %255 = phi i8* [ %231, %248 ], [ %253, %252 ]
  %256 = getelementptr inbounds i8, i8* %255, i64 %232
  store i8 0, i8* %256, align 1
  %257 = ptrtoint i8* %223 to i64
  br label %258

258:                                              ; preds = %172, %168, %166, %254, %219, %164, %159
  %259 = phi i64 [ %107, %159 ], [ 0, %254 ], [ %107, %219 ], [ %107, %164 ], [ %107, %166 ], [ %107, %168 ], [ %107, %172 ]
  %260 = phi i64 [ %104, %159 ], [ %257, %254 ], [ %104, %219 ], [ %104, %164 ], [ %104, %166 ], [ %104, %168 ], [ %104, %172 ]
  %261 = phi i32 [ 3, %159 ], [ 1, %254 ], [ 0, %219 ], [ 0, %164 ], [ 0, %166 ], [ 0, %168 ], [ 0, %172 ]
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %91) #17
  br label %262

262:                                              ; preds = %258, %156, %115, %112, %109
  %263 = phi i64 [ %107, %115 ], [ %259, %258 ], [ %107, %156 ], [ %107, %112 ], [ %107, %109 ]
  %264 = phi i64 [ %104, %115 ], [ %260, %258 ], [ %104, %156 ], [ %104, %112 ], [ %104, %109 ]
  %265 = phi i32 [ 3, %115 ], [ %261, %258 ], [ 3, %156 ], [ 3, %112 ], [ 3, %109 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #17
  br label %266

266:                                              ; preds = %262, %102
  %267 = phi i64 [ %107, %102 ], [ %263, %262 ]
  %268 = phi i64 [ %104, %102 ], [ %264, %262 ]
  %269 = phi i32 [ 3, %102 ], [ %265, %262 ]
  %270 = icmp eq i64 %267, 0
  br i1 %270, label %274, label %271

271:                                              ; preds = %266
  %272 = inttoptr i64 %267 to %struct._IO_FILE*
  %273 = call i32 @fclose(%struct._IO_FILE* nonnull %272) #17
  br label %274

274:                                              ; preds = %271, %266
  switch i32 %269, label %278 [
    i32 0, label %275
    i32 3, label %275
  ]

275:                                              ; preds = %274, %274
  %276 = getelementptr inbounds i8*, i8** %103, i64 1
  %277 = icmp eq i8** %276, getelementptr inbounds ([2 x i8*], [2 x i8*]* @.ref.tmp.12, i64 1, i64 0)
  br i1 %277, label %280, label %102

278:                                              ; preds = %274
  %279 = icmp eq i64 %268, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %275, %278
  br label %281

281:                                              ; preds = %73, %278, %280
  %282 = phi i64 [ %74, %73 ], [ %268, %278 ], [ 0, %280 ]
  %283 = inttoptr i64 %282 to %"class.absl::time_internal::cctz::ZoneInfoSource"*
  ret %"class.absl::time_internal::cctz::ZoneInfoSource"* %283
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKc(%"class.std::__1::basic_string"*, i64, i64, i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #13

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendERKS5_mm(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @fseek(%struct._IO_FILE* nocapture, i64, i32) local_unnamed_addr #14

; Function Attrs: nofree nounwind
declare i64 @ftell(%struct._IO_FILE* nocapture) local_unnamed_addr #14

; Function Attrs: nofree nounwind
declare void @rewind(%struct._IO_FILE* nocapture) local_unnamed_addr #14

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #14

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) #14

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSourceD2Ev(%"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  store %struct._IO_FILE* null, %struct._IO_FILE** %3, align 8
  %5 = icmp eq %struct._IO_FILE* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %8 = load i32 (%struct._IO_FILE*)*, i32 (%struct._IO_FILE*)** %7, align 8
  %9 = tail call i32 %8(%struct._IO_FILE* nonnull %4) #17
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* %0, i64 0, i32 0
  tail call void @_ZN4absl13time_internal4cctz14ZoneInfoSourceD2Ev(%"class.absl::time_internal::cctz::ZoneInfoSource"* %11) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSourceD0Ev(%"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  store %struct._IO_FILE* null, %struct._IO_FILE** %3, align 8
  %5 = icmp eq %struct._IO_FILE* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %8 = load i32 (%struct._IO_FILE*)*, i32 (%struct._IO_FILE*)** %7, align 8
  %9 = tail call i32 %8(%struct._IO_FILE* nonnull %4) #17
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* %0, i64 0, i32 0
  tail call void @_ZN4absl13time_internal4cctz14ZoneInfoSourceD2Ev(%"class.absl::time_internal::cctz::ZoneInfoSource"* %11) #17
  %12 = bitcast %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #18
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal i64 @_ZN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSource4ReadEPvm(%"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* nocapture, i8* nocapture, i64) unnamed_addr #15 align 2 {
  %4 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %2
  %7 = select i1 %6, i64 %5, i64 %2
  %8 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %10 = tail call i64 @fread(i8* %1, i64 1, i64 %7, %struct._IO_FILE* %9)
  %11 = load i64, i64* %4, align 8
  %12 = sub i64 %11, %10
  store i64 %12, i64* %4, align 8
  ret i64 %10
}

; Function Attrs: nofree nounwind ssp uwtable
define internal i32 @_ZN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSource4SkipEm(%"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* nocapture, i64) unnamed_addr #15 align 2 {
  %3 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, %1
  %6 = select i1 %5, i64 %4, i64 %1
  %7 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %9 = tail call i32 @fseek(%struct._IO_FILE* %8, i64 %6, i32 1)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = load i64, i64* %3, align 8
  %13 = sub i64 %12, %6
  store i64 %13, i64* %3, align 8
  br label %14

14:                                               ; preds = %11, %2
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSource7VersionEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.absl::time_internal::cctz::(anonymous namespace)::FileZoneInfoSource"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4absl13time_internal4cctz14ZoneInfoSourceD2Ev(%"class.absl::time_internal::cctz::ZoneInfoSource"*) unnamed_addr #6

; Function Attrs: nofree nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #14

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #13

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4absl13time_internal4cctz12_GLOBAL__N_121AndroidZoneInfoSourceD2Ev(%"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4absl13time_internal4cctz12_GLOBAL__N_121AndroidZoneInfoSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %1, %8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  store %struct._IO_FILE* null, %struct._IO_FILE** %12, align 8
  %14 = icmp eq %struct._IO_FILE* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %17 = load i32 (%struct._IO_FILE*)*, i32 (%struct._IO_FILE*)** %16, align 8
  %18 = tail call i32 %17(%struct._IO_FILE* nonnull %13) #17
  br label %19

19:                                               ; preds = %11, %15
  %20 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4absl13time_internal4cctz14ZoneInfoSourceD2Ev(%"class.absl::time_internal::cctz::ZoneInfoSource"* %20) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4absl13time_internal4cctz12_GLOBAL__N_121AndroidZoneInfoSourceD0Ev(%"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4absl13time_internal4cctz12_GLOBAL__N_121AndroidZoneInfoSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %8, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4absl13time_internal4cctz12_GLOBAL__N_118FileZoneInfoSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  store %struct._IO_FILE* null, %struct._IO_FILE** %12, align 8
  %14 = icmp eq %struct._IO_FILE* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %17 = load i32 (%struct._IO_FILE*)*, i32 (%struct._IO_FILE*)** %16, align 8
  %18 = tail call i32 %17(%struct._IO_FILE* nonnull %13) #17
  br label %19

19:                                               ; preds = %11, %15
  %20 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4absl13time_internal4cctz14ZoneInfoSourceD2Ev(%"class.absl::time_internal::cctz::ZoneInfoSource"* %20) #17
  %21 = bitcast %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK4absl13time_internal4cctz12_GLOBAL__N_121AndroidZoneInfoSource7VersionEv(%"class.std::__1::basic_string"* noalias sret, %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"* %1, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #17
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource", %"class.absl::time_internal::cctz::(anonymous namespace)::AndroidZoneInfoSource"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %13, i64 %15) #17
  br label %16

16:                                               ; preds = %8, %11
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #17
  %7 = load i8, i8* %6, align 8, !range !11
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #17
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #17
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #17
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #17
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #17
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #18
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #17
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #17
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #17
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone }
attributes #13 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind readonly }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }
attributes #20 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE: argument 0"}
!4 = distinct !{!4, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE: argument 0"}
!7 = distinct !{!7, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE: argument 0"}
!10 = distinct !{!10, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE: argument 0"}
!14 = distinct !{!14, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE: argument 0"}
!17 = distinct !{!17, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE: argument 0"}
!20 = distinct !{!20, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE: argument 0"}
!23 = distinct !{!23, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE: argument 0"}
!26 = distinct !{!26, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_14TransitionTypeE"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_10TransitionE: argument 0"}
!29 = distinct !{!29, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_10TransitionE"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_10TransitionE: argument 0"}
!32 = distinct !{!32, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_10TransitionE"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_10TransitionE: argument 0"}
!35 = distinct !{!35, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9LocalTimeElRKNS1_10TransitionE"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEE: argument 0"}
!38 = distinct !{!38, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEE"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueEl: argument 0"}
!41 = distinct !{!41, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueEl"}
!42 = !{!43, !40}
!43 = distinct !{!43, !44, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEE: argument 0"}
!44 = distinct !{!44, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEE"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_111MakeSkippedERKNS1_10TransitionERKNS1_6detail10civil_timeINS6_10second_tagEEE: argument 0"}
!47 = distinct !{!47, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_111MakeSkippedERKNS1_10TransitionERKNS1_6detail10civil_timeINS6_10second_tagEEE"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9TimeLocalERKNS1_6detail10civil_timeINS3_10second_tagEEEl: argument 0"}
!50 = distinct !{!50, !"_ZNK4absl13time_internal4cctz12TimeZoneInfo9TimeLocalERKNS1_6detail10civil_timeINS3_10second_tagEEEl"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEE: argument 0"}
!53 = distinct !{!53, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEE"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueEl: argument 0"}
!56 = distinct !{!56, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueEl"}
!57 = !{!58, !55}
!58 = distinct !{!58, !59, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEE: argument 0"}
!59 = distinct !{!59, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEE"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_112MakeRepeatedERKNS1_10TransitionERKNS1_6detail10civil_timeINS6_10second_tagEEE: argument 0"}
!62 = distinct !{!62, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_112MakeRepeatedERKNS1_10TransitionERKNS1_6detail10civil_timeINS6_10second_tagEEE"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_111MakeSkippedERKNS1_10TransitionERKNS1_6detail10civil_timeINS6_10second_tagEEE: argument 0"}
!65 = distinct !{!65, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_111MakeSkippedERKNS1_10TransitionERKNS1_6detail10civil_timeINS6_10second_tagEEE"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_112MakeRepeatedERKNS1_10TransitionERKNS1_6detail10civil_timeINS6_10second_tagEEE: argument 0"}
!68 = distinct !{!68, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_112MakeRepeatedERKNS1_10TransitionERKNS1_6detail10civil_timeINS6_10second_tagEEE"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueEl: argument 0"}
!71 = distinct !{!71, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueEl"}
!72 = !{!73, !70}
!73 = distinct !{!73, !74, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEE: argument 0"}
!74 = distinct !{!74, !"_ZN4absl13time_internal4cctz12_GLOBAL__N_110MakeUniqueERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEE"}
