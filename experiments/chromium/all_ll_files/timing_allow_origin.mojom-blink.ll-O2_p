; ModuleID = 'gen/services/network/public/mojom/timing_allow_origin.mojom-blink.cc'
source_filename = "gen/services/network/public/mojom/timing_allow_origin.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::mojom::blink::TimingAllowOrigin" = type { i32, %"union.network::mojom::blink::TimingAllowOrigin::Union_" }
%"union.network::mojom::blink::TimingAllowOrigin::Union_" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.3", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.1"*, %"class.mojo::ScopedHandleBase.1"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.1" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.1"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.6" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.19, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.12" }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.18", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.18" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.19 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.20" }>
%"class.base::RefCountedThreadSafe.20" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.network::mojom::internal::TimingAllowOrigin_Data" = type { i32, i32, %"union.network::mojom::internal::TimingAllowOrigin_Data::Union_" }
%"union.network::mojom::internal::TimingAllowOrigin_Data::Union_" = type { %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.network::mojom::blink::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOriginDataView" = type { %"class.network::mojom::internal::TimingAllowOrigin_Data"*, %"class.mojo::Message"* }
%"struct.std::__1::default_delete" = type { i8 }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.mojo::internal::Array_Data.33" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN7network5mojom25TimingAllowOriginDataView21ReadSerializedOriginsIN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEEEbPT_ = comdat any

$_ZN7network5mojom5blink17TimingAllowOrigin20NewSerializedOriginsEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE = comdat any

$_ZNKSt3__114default_deleteIN7network5mojom5blink17TimingAllowOriginEEclEPS4_ = comdat any

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS_14StringDataViewEEEN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsIS9_EES9_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINSF_IcEEEEEEPS9_PNS_7MessageE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6resizeEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [100 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<WTF::String, 0, WTF::PartitionAllocator>]\00", align 1
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN7network5mojom5blink17TimingAllowOriginC1Ev = hidden unnamed_addr alias void (%"class.network::mojom::blink::TimingAllowOrigin"*), void (%"class.network::mojom::blink::TimingAllowOrigin"*)* @_ZN7network5mojom5blink17TimingAllowOriginC2Ev
@_ZN7network5mojom5blink17TimingAllowOriginD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::blink::TimingAllowOrigin"*), void (%"class.network::mojom::blink::TimingAllowOrigin"*)* @_ZN7network5mojom5blink17TimingAllowOriginD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink17TimingAllowOriginC2Ev(%"class.network::mojom::blink::TimingAllowOrigin"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #7
  %4 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %0, i64 0, i32 1, i32 0
  %5 = bitcast %"class.WTF::Vector"** %4 to i8**
  store i8* %3, i8** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink17TimingAllowOriginD2Ev(%"class.network::mojom::blink::TimingAllowOrigin"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %49

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %6, align 8
  %8 = icmp eq %"class.WTF::Vector"* %7, null
  br i1 %8, label %49, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %12 = icmp eq %"class.WTF::String"* %11, null
  br i1 %12, label %47, label %13, !prof !2

13:                                               ; preds = %9
  %14 = bitcast %"class.WTF::String"* %11 to i8*
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %45, label %18, !prof !3

18:                                               ; preds = %13
  %19 = zext i32 %16 to i64
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %19
  br label %21

21:                                               ; preds = %39, %18
  %22 = phi %"class.WTF::String"* [ %40, %39 ], [ %11, %18 ]
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #7
  br label %39

39:                                               ; preds = %38, %35, %21
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 1
  %41 = icmp eq %"class.WTF::String"* %40, %20
  br i1 %41, label %42, label %21

42:                                               ; preds = %39
  store i32 0, i32* %15, align 4
  %43 = bitcast %"class.WTF::Vector"* %7 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %13
  %46 = phi i8* [ %44, %42 ], [ %14, %13 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %46) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %10, align 8
  br label %47

47:                                               ; preds = %45, %9
  %48 = bitcast %"class.WTF::Vector"* %7 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %48) #7
  br label %49

49:                                               ; preds = %1, %5, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink17TimingAllowOrigin13DestroyActiveEv(%"class.network::mojom::blink::TimingAllowOrigin"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %49

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %6, align 8
  %8 = icmp eq %"class.WTF::Vector"* %7, null
  br i1 %8, label %49, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %12 = icmp eq %"class.WTF::String"* %11, null
  br i1 %12, label %47, label %13, !prof !2

13:                                               ; preds = %9
  %14 = bitcast %"class.WTF::String"* %11 to i8*
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %45, label %18, !prof !3

18:                                               ; preds = %13
  %19 = zext i32 %16 to i64
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %19
  br label %21

21:                                               ; preds = %39, %18
  %22 = phi %"class.WTF::String"* [ %40, %39 ], [ %11, %18 ]
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #7
  br label %39

39:                                               ; preds = %38, %35, %21
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 1
  %41 = icmp eq %"class.WTF::String"* %40, %20
  br i1 %41, label %42, label %21

42:                                               ; preds = %39
  store i32 0, i32* %15, align 4
  %43 = bitcast %"class.WTF::Vector"* %7 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %13
  %46 = phi i8* [ %44, %42 ], [ %14, %13 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %46) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %10, align 8
  br label %47

47:                                               ; preds = %9, %45
  %48 = bitcast %"class.WTF::Vector"* %7 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %48) #7
  br label %49

49:                                               ; preds = %5, %47, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink17TimingAllowOrigin22set_serialized_originsEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.network::mojom::blink::TimingAllowOrigin"* nocapture, %"class.WTF::Vector"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %7, align 8
  %9 = bitcast %"class.WTF::Vector"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.WTF::Vector"* %8 to i64*
  %12 = load i64, i64* %11, align 8
  store atomic i64 %12, i64* %9 monotonic, align 8
  store atomic i64 %10, i64* %11 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %13, align 4
  %16 = load i32, i32* %14, align 4
  store i32 %16, i32* %13, align 4
  store i32 %15, i32* %14, align 4
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %17, align 4
  %20 = load i32, i32* %18, align 4
  store i32 %20, i32* %17, align 4
  store i32 %19, i32* %18, align 4
  br label %38

21:                                               ; preds = %2
  store i32 0, i32* %3, align 8
  %22 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #7
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  %24 = bitcast i8* %23 to i32*
  %25 = getelementptr inbounds i8, i8* %22, i64 12
  %26 = bitcast i8* %25 to i32*
  %27 = bitcast %"class.WTF::Vector"* %1 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #7
  %28 = load i64, i64* %27, align 8
  %29 = bitcast i8* %22 to i64*
  store atomic i64 0, i64* %27 monotonic, align 8
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %24, align 4
  %32 = load i32, i32* %30, align 4
  store i32 %32, i32* %24, align 4
  store i32 %31, i32* %30, align 4
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %34 = load i32, i32* %26, align 4
  %35 = load i32, i32* %33, align 4
  store i32 %35, i32* %26, align 4
  store i32 %34, i32* %33, align 4
  %36 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %0, i64 0, i32 1, i32 0
  %37 = bitcast %"class.WTF::Vector"** %36 to i8**
  store i8* %22, i8** %37, align 8
  br label %38

38:                                               ; preds = %21, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink17TimingAllowOrigin7set_allEh(%"class.network::mojom::blink::TimingAllowOrigin"* nocapture, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %49 [
    i32 1, label %50
    i32 0, label %5
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %6, align 8
  %8 = icmp eq %"class.WTF::Vector"* %7, null
  br i1 %8, label %49, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %12 = icmp eq %"class.WTF::String"* %11, null
  br i1 %12, label %47, label %13, !prof !2

13:                                               ; preds = %9
  %14 = bitcast %"class.WTF::String"* %11 to i8*
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %45, label %18, !prof !3

18:                                               ; preds = %13
  %19 = zext i32 %16 to i64
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %19
  br label %21

21:                                               ; preds = %39, %18
  %22 = phi %"class.WTF::String"* [ %40, %39 ], [ %11, %18 ]
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #7
  br label %39

39:                                               ; preds = %38, %35, %21
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 1
  %41 = icmp eq %"class.WTF::String"* %40, %20
  br i1 %41, label %42, label %21

42:                                               ; preds = %39
  store i32 0, i32* %15, align 4
  %43 = bitcast %"class.WTF::Vector"* %7 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %13
  %46 = phi i8* [ %44, %42 ], [ %14, %13 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %46) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %10, align 8
  br label %47

47:                                               ; preds = %45, %9
  %48 = bitcast %"class.WTF::Vector"* %7 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %48) #7
  br label %49

49:                                               ; preds = %2, %5, %47
  store i32 1, i32* %3, align 8
  br label %50

50:                                               ; preds = %2, %49
  %51 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %0, i64 0, i32 1
  %52 = bitcast %"union.network::mojom::blink::TimingAllowOrigin::Union_"* %51 to i8*
  store i8 %1, i8* %52, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7network5mojom5blink17TimingAllowOrigin8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN7network5mojom8internal22TimingAllowOrigin_Data8ValidateEPKvPN4mojo8internal17ValidationContextEb(i8* %0, %"class.mojo::internal::ValidationContext"* %1, i1 zeroext false) #7
  ret i1 %3
}

declare zeroext i1 @_ZN7network5mojom8internal22TimingAllowOrigin_Data8ValidateEPKvPN4mojo8internal17ValidationContextEb(i8*, %"class.mojo::internal::ValidationContext"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo11UnionTraitsIN7network5mojom25TimingAllowOriginDataViewENS_9StructPtrINS2_5blink17TimingAllowOriginEEEE4ReadES3_PS7_(%"class.network::mojom::internal::TimingAllowOrigin_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.network::mojom::TimingAllowOriginDataView", align 8
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.mojo::StructPtr", align 8
  %7 = alloca %"class.WTF::Vector", align 8
  %8 = alloca %"class.mojo::StructPtr", align 8
  %9 = getelementptr inbounds %"class.network::mojom::TimingAllowOriginDataView", %"class.network::mojom::TimingAllowOriginDataView"* %4, i64 0, i32 0
  store %"class.network::mojom::internal::TimingAllowOrigin_Data"* %0, %"class.network::mojom::internal::TimingAllowOrigin_Data"** %9, align 8
  %10 = getelementptr inbounds %"class.network::mojom::TimingAllowOriginDataView", %"class.network::mojom::TimingAllowOriginDataView"* %4, i64 0, i32 1
  store %"class.mojo::Message"* %1, %"class.mojo::Message"** %10, align 8
  %11 = getelementptr inbounds %"class.network::mojom::internal::TimingAllowOrigin_Data", %"class.network::mojom::internal::TimingAllowOrigin_Data"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 1
  switch i32 %12, label %188 [
    i32 0, label %13
    i32 1, label %159
  ]

13:                                               ; preds = %3
  %14 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #7
  %18 = call zeroext i1 @_ZN7network5mojom25TimingAllowOriginDataView21ReadSerializedOriginsIN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEEEbPT_(%"class.network::mojom::TimingAllowOriginDataView"* nonnull %4, %"class.WTF::Vector"* nonnull %5)
  br i1 %18, label %19, label %122

19:                                               ; preds = %13
  %20 = bitcast %"class.mojo::StructPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 2
  %23 = bitcast %"class.WTF::Vector"* %5 to i64*
  %24 = bitcast %"class.WTF::Vector"* %7 to i64*
  store i64 0, i64* %24, align 8
  %25 = load i64, i64* %23, align 8
  %26 = bitcast %"class.WTF::Vector"* %7 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = load i32, i32* %16, align 8
  store i32 %27, i32* %21, align 8
  store i32 0, i32* %16, align 8
  %28 = load i32, i32* %17, align 4
  store i32 %28, i32* %22, align 4
  store i32 0, i32* %17, align 4
  call void @_ZN7network5mojom5blink17TimingAllowOrigin20NewSerializedOriginsEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.mojo::StructPtr"* nonnull sret %6, %"class.WTF::Vector"* nonnull %7)
  %29 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.network::mojom::blink::TimingAllowOrigin"*, %"class.network::mojom::blink::TimingAllowOrigin"** %29, align 8
  store %"class.network::mojom::blink::TimingAllowOrigin"* null, %"class.network::mojom::blink::TimingAllowOrigin"** %29, align 8
  %31 = icmp eq %"class.network::mojom::blink::TimingAllowOrigin"* %30, null
  br i1 %31, label %32, label %37

32:                                               ; preds = %19
  %33 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %34 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %33, align 8
  %36 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::TimingAllowOrigin"* null, %"class.network::mojom::blink::TimingAllowOrigin"** %36, align 8
  br label %48

37:                                               ; preds = %19
  %38 = bitcast %"class.mojo::StructPtr"* %2 to %"struct.std::__1::default_delete"*
  call void @_ZNKSt3__114default_deleteIN7network5mojom5blink17TimingAllowOriginEEclEPS4_(%"struct.std::__1::default_delete"* %38, %"class.network::mojom::blink::TimingAllowOrigin"* nonnull %30) #7
  %39 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %39, align 8
  %43 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::TimingAllowOrigin"* null, %"class.network::mojom::blink::TimingAllowOrigin"** %43, align 8
  %44 = icmp eq i64 %40, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %37
  %46 = inttoptr i64 %40 to %"class.network::mojom::blink::TimingAllowOrigin"*
  %47 = bitcast %"class.mojo::StructPtr"* %6 to %"struct.std::__1::default_delete"*
  call void @_ZNKSt3__114default_deleteIN7network5mojom5blink17TimingAllowOriginEEclEPS4_(%"struct.std::__1::default_delete"* nonnull %47, %"class.network::mojom::blink::TimingAllowOrigin"* nonnull %46) #7
  br label %48

48:                                               ; preds = %32, %37, %45
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::String"*, %"class.WTF::String"** %49, align 8
  %51 = icmp eq %"class.WTF::String"* %50, null
  br i1 %51, label %85, label %52, !prof !2

52:                                               ; preds = %48
  %53 = bitcast %"class.WTF::String"* %50 to i8*
  %54 = load i32, i32* %22, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !3

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #7
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %22, align 4
  %81 = bitcast %"class.WTF::Vector"* %7 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %52
  %84 = phi i8* [ %82, %80 ], [ %53, %52 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %49, align 8
  br label %85

85:                                               ; preds = %48, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %87 = icmp eq %"class.WTF::String"* %86, null
  br i1 %87, label %121, label %88, !prof !2

88:                                               ; preds = %85
  %89 = bitcast %"class.WTF::String"* %86 to i8*
  %90 = load i32, i32* %17, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %119, label %92, !prof !3

92:                                               ; preds = %88
  %93 = zext i32 %90 to i64
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 %93
  br label %95

95:                                               ; preds = %113, %92
  %96 = phi %"class.WTF::String"* [ %114, %113 ], [ %86, %92 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #7
  br label %113

113:                                              ; preds = %112, %109, %95
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 1
  %115 = icmp eq %"class.WTF::String"* %114, %94
  br i1 %115, label %116, label %95

116:                                              ; preds = %113
  store i32 0, i32* %17, align 4
  %117 = bitcast %"class.WTF::Vector"* %5 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %88
  %120 = phi i8* [ %118, %116 ], [ %89, %88 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %120) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %121

121:                                              ; preds = %85, %119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  br label %188

122:                                              ; preds = %13
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %124 = icmp eq %"class.WTF::String"* %123, null
  br i1 %124, label %158, label %125, !prof !2

125:                                              ; preds = %122
  %126 = bitcast %"class.WTF::String"* %123 to i8*
  %127 = load i32, i32* %17, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %156, label %129, !prof !3

129:                                              ; preds = %125
  %130 = zext i32 %127 to i64
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %123, i64 %130
  br label %132

132:                                              ; preds = %150, %129
  %133 = phi %"class.WTF::String"* [ %151, %150 ], [ %123, %129 ]
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %133, i64 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #7
  br label %150

150:                                              ; preds = %149, %146, %132
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %133, i64 1
  %152 = icmp eq %"class.WTF::String"* %151, %131
  br i1 %152, label %153, label %132

153:                                              ; preds = %150
  store i32 0, i32* %17, align 4
  %154 = bitcast %"class.WTF::Vector"* %5 to i8**
  %155 = load i8*, i8** %154, align 8
  br label %156

156:                                              ; preds = %153, %125
  %157 = phi i8* [ %155, %153 ], [ %126, %125 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %157) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %158

158:                                              ; preds = %122, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  br label %188

159:                                              ; preds = %3
  %160 = bitcast %"class.mojo::StructPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #7
  %161 = getelementptr inbounds %"class.network::mojom::internal::TimingAllowOrigin_Data", %"class.network::mojom::internal::TimingAllowOrigin_Data"* %0, i64 0, i32 2
  %162 = bitcast %"union.network::mojom::internal::TimingAllowOrigin_Data::Union_"* %161 to i8*
  %163 = load i8, i8* %162, align 1
  %164 = tail call i8* @_Znwm(i64 16) #8, !noalias !4
  %165 = bitcast i8* %164 to i32*
  store i32 0, i32* %165, align 8, !noalias !4
  %166 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #7, !noalias !4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 16, i1 false) #7, !noalias !4
  %167 = getelementptr inbounds i8, i8* %164, i64 8
  %168 = bitcast i8* %167 to i8**
  store i8* %166, i8** %168, align 8, !noalias !4
  %169 = ptrtoint i8* %164 to i64
  %170 = bitcast %"class.mojo::StructPtr"* %8 to i64*
  store i64 %169, i64* %170, align 8, !alias.scope !4
  %171 = bitcast i8* %164 to %"class.network::mojom::blink::TimingAllowOrigin"*
  tail call void @_ZN7network5mojom5blink17TimingAllowOrigin7set_allEh(%"class.network::mojom::blink::TimingAllowOrigin"* nonnull %171, i8 zeroext %163) #7, !noalias !4
  %172 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %173 = load %"class.network::mojom::blink::TimingAllowOrigin"*, %"class.network::mojom::blink::TimingAllowOrigin"** %172, align 8
  store %"class.network::mojom::blink::TimingAllowOrigin"* null, %"class.network::mojom::blink::TimingAllowOrigin"** %172, align 8
  %174 = icmp eq %"class.network::mojom::blink::TimingAllowOrigin"* %173, null
  br i1 %174, label %175, label %178

175:                                              ; preds = %159
  %176 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %169, i64* %176, align 8
  %177 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::TimingAllowOrigin"* null, %"class.network::mojom::blink::TimingAllowOrigin"** %177, align 8
  br label %187

178:                                              ; preds = %159
  %179 = bitcast %"class.mojo::StructPtr"* %2 to %"struct.std::__1::default_delete"*
  tail call void @_ZNKSt3__114default_deleteIN7network5mojom5blink17TimingAllowOriginEEclEPS4_(%"struct.std::__1::default_delete"* %179, %"class.network::mojom::blink::TimingAllowOrigin"* nonnull %173) #7
  %180 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %181 = load i64, i64* %180, align 8
  store i64 %169, i64* %180, align 8
  %182 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::TimingAllowOrigin"* null, %"class.network::mojom::blink::TimingAllowOrigin"** %182, align 8
  %183 = icmp eq i64 %181, 0
  br i1 %183, label %187, label %184

184:                                              ; preds = %178
  %185 = inttoptr i64 %181 to %"class.network::mojom::blink::TimingAllowOrigin"*
  %186 = bitcast %"class.mojo::StructPtr"* %8 to %"struct.std::__1::default_delete"*
  call void @_ZNKSt3__114default_deleteIN7network5mojom5blink17TimingAllowOriginEEclEPS4_(%"struct.std::__1::default_delete"* nonnull %186, %"class.network::mojom::blink::TimingAllowOrigin"* nonnull %185) #7
  br label %187

187:                                              ; preds = %175, %178, %184
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #7
  br label %188

188:                                              ; preds = %187, %121, %3, %158
  %189 = phi i1 [ false, %158 ], [ false, %3 ], [ true, %121 ], [ true, %187 ]
  ret i1 %189
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7network5mojom25TimingAllowOriginDataView21ReadSerializedOriginsIN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEEEbPT_(%"class.network::mojom::TimingAllowOriginDataView"*, %"class.WTF::Vector"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::TimingAllowOriginDataView", %"class.network::mojom::TimingAllowOriginDataView"* %0, i64 0, i32 0
  %4 = load %"class.network::mojom::internal::TimingAllowOrigin_Data"*, %"class.network::mojom::internal::TimingAllowOrigin_Data"** %3, align 8
  %5 = getelementptr inbounds %"class.network::mojom::internal::TimingAllowOrigin_Data", %"class.network::mojom::internal::TimingAllowOrigin_Data"* %4, i64 0, i32 2, i32 0
  %6 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %9 = bitcast %"struct.mojo::internal::Pointer"* %5 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %7
  %11 = icmp eq i8* %10, null
  %12 = or i1 %8, %11
  br i1 %12, label %13, label %52

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %57, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %48, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::String"*, %"class.WTF::String"** %22, align 8
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 %24
  br label %26

26:                                               ; preds = %44, %21
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %23, %21 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #7
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %18, align 4
  br label %48

48:                                               ; preds = %47, %17
  %49 = bitcast %"class.WTF::Vector"* %1 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast %"class.WTF::Vector"* %1 to i64*
  store atomic i64 0, i64* %51 monotonic, align 8
  store i32 0, i32* %14, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #7
  br label %57

52:                                               ; preds = %2
  %53 = bitcast i8* %10 to %"class.mojo::internal::Array_Data"*
  %54 = getelementptr inbounds %"class.network::mojom::TimingAllowOriginDataView", %"class.network::mojom::TimingAllowOriginDataView"* %0, i64 0, i32 1
  %55 = load %"class.mojo::Message"*, %"class.mojo::Message"** %54, align 8
  %56 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS_14StringDataViewEEEN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsIS9_EES9_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINSF_IcEEEEEEPS9_PNS_7MessageE(%"class.mojo::internal::Array_Data"* nonnull %53, %"class.WTF::Vector"* %1, %"class.mojo::Message"* %55) #7
  br label %57

57:                                               ; preds = %13, %48, %52
  %58 = phi i1 [ %56, %52 ], [ true, %13 ], [ true, %48 ]
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom5blink17TimingAllowOrigin20NewSerializedOriginsEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.mojo::StructPtr"* noalias sret, %"class.WTF::Vector"*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 16) #8
  %4 = bitcast i8* %3 to i32*
  store i32 0, i32* %4, align 8
  %5 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #7
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i8**
  store i8* %5, i8** %7, align 8
  %8 = ptrtoint i8* %3 to i64
  %9 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %8, i64* %9, align 8
  %10 = bitcast %"class.WTF::Vector"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  store atomic i64 0, i64* %10 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  store i32 0, i32* %12, align 4
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  store i32 0, i32* %14, align 4
  %16 = load i32, i32* %4, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %2
  store i32 0, i32* %4, align 8
  %19 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #7
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr inbounds i8, i8* %19, i64 12
  %23 = bitcast i8* %22 to i32*
  %24 = bitcast i8* %19 to i64*
  store atomic i64 %11, i64* %24 monotonic, align 8
  store i32 %13, i32* %21, align 4
  store i32 %15, i32* %23, align 4
  store i8* %19, i8** %7, align 8
  br label %63

25:                                               ; preds = %2
  %26 = bitcast i8* %5 to i64*
  %27 = load i64, i64* %26, align 8
  store atomic i64 %11, i64* %26 monotonic, align 8
  %28 = getelementptr inbounds i8, i8* %5, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 %13, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %5, i64 12
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 4
  store i32 %15, i32* %31, align 4
  %33 = inttoptr i64 %27 to %"class.WTF::String"*
  %34 = icmp eq i64 %27, 0
  br i1 %34, label %63, label %35, !prof !2

35:                                               ; preds = %25
  %36 = icmp eq i32 %32, 0
  br i1 %36, label %61, label %37, !prof !3

37:                                               ; preds = %35
  %38 = zext i32 %32 to i64
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 %38
  br label %40

40:                                               ; preds = %58, %37
  %41 = phi %"class.WTF::String"* [ %59, %58 ], [ %33, %37 ]
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #7
  br label %58

58:                                               ; preds = %57, %54, %40
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 1
  %60 = icmp eq %"class.WTF::String"* %59, %39
  br i1 %60, label %61, label %40

61:                                               ; preds = %58, %35
  %62 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %62) #7
  br label %63

63:                                               ; preds = %18, %25, %61
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN7network5mojom5blink17TimingAllowOriginEEclEPS4_(%"struct.std::__1::default_delete"*, %"class.network::mojom::blink::TimingAllowOrigin"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.network::mojom::blink::TimingAllowOrigin"* %1, null
  br i1 %3, label %54, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %52

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %1, i64 0, i32 1, i32 0
  %10 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %9, align 8
  %11 = icmp eq %"class.WTF::Vector"* %10, null
  br i1 %11, label %52, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::String"*, %"class.WTF::String"** %13, align 8
  %15 = icmp eq %"class.WTF::String"* %14, null
  br i1 %15, label %50, label %16, !prof !2

16:                                               ; preds = %12
  %17 = bitcast %"class.WTF::String"* %14 to i8*
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %10, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %48, label %21, !prof !3

21:                                               ; preds = %16
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 %22
  br label %24

24:                                               ; preds = %42, %21
  %25 = phi %"class.WTF::String"* [ %43, %42 ], [ %14, %21 ]
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %42

42:                                               ; preds = %41, %38, %24
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 1
  %44 = icmp eq %"class.WTF::String"* %43, %23
  br i1 %44, label %45, label %24

45:                                               ; preds = %42
  store i32 0, i32* %18, align 4
  %46 = bitcast %"class.WTF::Vector"* %10 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %16
  %49 = phi i8* [ %47, %45 ], [ %17, %16 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %13, align 8
  br label %50

50:                                               ; preds = %48, %12
  %51 = bitcast %"class.WTF::Vector"* %10 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %51) #7
  br label %52

52:                                               ; preds = %4, %8, %50
  %53 = bitcast %"class.network::mojom::blink::TimingAllowOrigin"* %1 to i8*
  tail call void @_ZdlPv(i8* %53) #8
  br label %54

54:                                               ; preds = %52, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS_14StringDataViewEEEN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsIS9_EES9_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINSF_IcEEEEEEPS9_PNS_7MessageE(%"class.mojo::internal::Array_Data"*, %"class.WTF::Vector"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"* %1, i32 %5) #7
  %6 = load i32, i32* %4, align 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %34, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 1
  br label %10

10:                                               ; preds = %8, %30
  %11 = phi i64 [ 0, %8 ], [ %18, %30 ]
  %12 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %9, i64 %11
  %13 = bitcast %"class.mojo::internal::Array_Data"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  %16 = bitcast %"class.mojo::internal::Array_Data"* %12 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %14
  %18 = add nuw nsw i64 %11, 1
  %19 = trunc i64 %11 to i32
  %20 = tail call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %19) #7
  %21 = icmp eq i8* %17, null
  %22 = or i1 %15, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %10
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %20) #7
  br label %30

24:                                               ; preds = %10
  %25 = bitcast i8* %17 to %"class.mojo::internal::Array_Data.33"*
  %26 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data.33"* nonnull %25, %"class.WTF::String"* %20) #7
  br i1 %26, label %27, label %34

27:                                               ; preds = %24
  %28 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %20) #7
  br i1 %28, label %30, label %29

29:                                               ; preds = %27
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #7
  br label %30

30:                                               ; preds = %23, %29, %27
  %31 = load i32, i32* %4, align 1
  %32 = zext i32 %31 to i64
  %33 = icmp ult i64 %18, %32
  br i1 %33, label %10, label %34

34:                                               ; preds = %30, %24, %3
  %35 = phi i1 [ true, %3 ], [ false, %24 ], [ true, %30 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %36, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %9
  %11 = icmp eq i32 %4, %1
  br i1 %11, label %91, label %12

12:                                               ; preds = %6
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %13
  br label %15

15:                                               ; preds = %12, %33
  %16 = phi %"class.WTF::String"* [ %34, %33 ], [ %14, %12 ]
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #7
  br label %33

33:                                               ; preds = %32, %29, %15
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 1
  %35 = icmp eq %"class.WTF::String"* %34, %10
  br i1 %35, label %91, label %15

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp ult i32 %38, %1
  br i1 %39, label %40, label %79

40:                                               ; preds = %36
  %41 = lshr i32 %38, 2
  %42 = add nuw i32 %38, 1
  %43 = add i32 %42, %41
  %44 = icmp ugt i32 %43, 4
  %45 = select i1 %44, i32 %43, i32 4
  %46 = icmp ugt i32 %45, %1
  %47 = select i1 %46, i32 %45, i32 %1
  %48 = icmp ult i32 %38, %47
  br i1 %48, label %49, label %79, !prof !2

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::String"*, %"class.WTF::String"** %50, align 8
  %52 = icmp eq %"class.WTF::String"* %51, null
  %53 = zext i32 %47 to i64
  %54 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %53) #7
  %55 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %54, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #7
  br i1 %52, label %56, label %61

56:                                               ; preds = %49
  %57 = ptrtoint i8* %55 to i64
  %58 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = lshr i64 %54, 3
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %37, align 8
  br label %79

61:                                               ; preds = %49
  %62 = lshr i64 %54, 3
  %63 = ptrtoint i8* %55 to i64
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %50, align 8
  %65 = icmp ne i8* %55, null
  %66 = icmp ne %"class.WTF::String"* %64, null
  %67 = and i1 %65, %66
  %68 = bitcast %"class.WTF::String"* %64 to i8*
  br i1 %67, label %69, label %75, !prof !2

69:                                               ; preds = %61
  %70 = load i32, i32* %3, align 4
  %71 = zext i32 %70 to i64
  %72 = shl nuw nsw i64 %71, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* nonnull align 8 %68, i64 %72, i1 false) #7
  %73 = bitcast %"class.WTF::Vector"* %0 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %69, %61
  %76 = phi i8* [ %74, %69 ], [ %68, %61 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #7
  %77 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %63, i64* %77 monotonic, align 8
  %78 = trunc i64 %62 to i32
  store i32 %78, i32* %37, align 8
  br label %79

79:                                               ; preds = %75, %56, %40, %36
  %80 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::String"*, %"class.WTF::String"** %80, align 8
  %82 = load i32, i32* %3, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 %83
  %85 = zext i32 %1 to i64
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 %85
  %87 = bitcast %"class.WTF::String"* %84 to i8*
  %88 = ptrtoint %"class.WTF::String"* %86 to i64
  %89 = ptrtoint %"class.WTF::String"* %84 to i64
  %90 = sub i64 %88, %89
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 %90, i1 false) #7
  br label %91

91:                                               ; preds = %33, %6, %79
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data.33"*, %"class.WTF::String"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #1

declare void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN7network5mojom5blink17TimingAllowOrigin6NewAllEh: argument 0"}
!6 = distinct !{!6, !"_ZN7network5mojom5blink17TimingAllowOrigin6NewAllEh"}
