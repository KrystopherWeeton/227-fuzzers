; ModuleID = '../../extensions/renderer/dom_activity_logger.cc'
source_filename = "../../extensions/renderer/dom_activity_logger.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::DOMActivityLogger" = type { %"class.blink::WebDOMActivityLogger", %"class.std::__1::basic_string" }
%"class.blink::WebDOMActivityLogger" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.16" }
%"union.absl::variant_internal::DestructibleUnionImpl.16" = type { %"union.absl::variant_internal::DestructibleUnionImpl.17" }
%"union.absl::variant_internal::DestructibleUnionImpl.17" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"union.absl::variant_internal::DestructibleUnionImpl.19" }
%"union.absl::variant_internal::DestructibleUnionImpl.19" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.8 }
%struct.anon.8 = type { %"struct.std::__1::__padding.9", i8 }
%"struct.std::__1::__padding.9" = type { [1 x i8] }
%struct.ExtensionHostMsg_DOMAction_Params = type <{ %class.GURL, %"class.std::__1::basic_string.4", %"class.std::__1::basic_string", %"class.base::ListValue", i32, [4 x i8] }>
%"class.content::RenderThread" = type { %"class.content::ChildThread" }
%"class.content::ChildThread" = type { %"class.IPC::Sender" }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.IPC::MessageT" = type { %"class.IPC::Message" }
%"class.IPC::Message" = type { %"class.base::Pickle", i8, %class.scoped_refptr.46 }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%class.scoped_refptr.46 = type { %"class.IPC::MessageAttachmentSet"* }
%"class.IPC::MessageAttachmentSet" = type opaque
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.extensions::ActivityLogConverterStrategy" = type { %"class.content::V8ValueConverter::Strategy" }
%"class.content::V8ValueConverter::Strategy" = type { i32 (...)** }
%"class.content::V8ValueConverter" = type { %"class.blink::WebV8ValueConverter" }
%"class.blink::WebV8ValueConverter" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

@_ZTVN10extensions17DOMActivityLoggerE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::DOMActivityLogger"*)* @_ZN10extensions17DOMActivityLoggerD2Ev to i8*), i8* bitcast (void (%"class.extensions::DOMActivityLogger"*)* @_ZN10extensions17DOMActivityLoggerD0Ev to i8*), i8* bitcast (void (%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)* @_ZN10extensions17DOMActivityLogger9LogGetterERKN5blink9WebStringERKNS1_6WebURLES4_ to i8*), i8* bitcast (void (%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"*, %"class.v8::Local"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)* @_ZN10extensions17DOMActivityLogger9LogSetterERKN5blink9WebStringERKN2v85LocalINS5_5ValueEEERKNS1_6WebURLES4_ to i8*), i8* bitcast (void (%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"*, i32, %"class.v8::Local"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)* @_ZN10extensions17DOMActivityLogger9LogMethodERKN5blink9WebStringEiPKN2v85LocalINS5_5ValueEEERKNS1_6WebURLES4_ to i8*), i8* bitcast (void (%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"*, i32, %"class.blink::WebString"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)* @_ZN10extensions17DOMActivityLogger8LogEventERKN5blink9WebStringEiPS3_RKNS1_6WebURLES4_ to i8*), i8* bitcast (void (%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"*, %"class.v8::Local"*, %"class.v8::Local"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)* @_ZN10extensions17DOMActivityLogger9logSetterERKN5blink9WebStringERKN2v85LocalINS5_5ValueEEESA_RKNS1_6WebURLES4_ to i8*)] }, align 8

@_ZN10extensions17DOMActivityLoggerC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.extensions::DOMActivityLogger"*, %"class.std::__1::basic_string"*), void (%"class.extensions::DOMActivityLogger"*, %"class.std::__1::basic_string"*)* @_ZN10extensions17DOMActivityLoggerC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN10extensions17DOMActivityLoggerD1Ev = hidden unnamed_addr alias void (%"class.extensions::DOMActivityLogger"*), void (%"class.extensions::DOMActivityLogger"*)* @_ZN10extensions17DOMActivityLoggerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17DOMActivityLoggerC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::DOMActivityLogger"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::DOMActivityLogger", %"class.extensions::DOMActivityLogger"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN10extensions17DOMActivityLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.extensions::DOMActivityLogger", %"class.extensions::DOMActivityLogger"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false) #8
  br label %17

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %4, i8* %14, i64 %16) #8
  br label %17

17:                                               ; preds = %9, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17DOMActivityLoggerD2Ev(%"class.extensions::DOMActivityLogger"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::DOMActivityLogger", %"class.extensions::DOMActivityLogger"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN10extensions17DOMActivityLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::DOMActivityLogger", %"class.extensions::DOMActivityLogger"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17DOMActivityLoggerD0Ev(%"class.extensions::DOMActivityLogger"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::DOMActivityLogger", %"class.extensions::DOMActivityLogger"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN10extensions17DOMActivityLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::DOMActivityLogger", %"class.extensions::DOMActivityLogger"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.extensions::DOMActivityLogger"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17DOMActivityLogger13AttachToWorldEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebString", align 8
  %4 = alloca %"class.blink::WebString", align 8
  %5 = bitcast %"class.blink::WebString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1, !noalias !2
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8, !noalias !2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !noalias !2
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = zext i8 %8 to i64
  %16 = select i1 %9, i8* %11, i8* %14
  %17 = select i1 %9, i64 %13, i64 %15
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %3, i8* %16, i64 %17) #8
  %18 = call zeroext i1 @_ZN5blink20HasDOMActivityLoggerEiRKNS_9WebStringE(i32 %0, %"class.blink::WebString"* nonnull dereferenceable(8) %3) #8
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  br i1 %18, label %41, label %19

19:                                               ; preds = %2
  %20 = call i8* @_Znwm(i64 32) #9
  %21 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN10extensions17DOMActivityLoggerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = load i8, i8* %7, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %14, i64 24, i1 false) #8
  br label %31

26:                                               ; preds = %19
  %27 = bitcast i8* %22 to %"class.std::__1::basic_string"*
  %28 = load i8*, i8** %10, align 8
  %29 = load i64, i64* %12, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %27, i8* %28, i64 %29) #8
  %30 = load i8, i8* %7, align 1, !noalias !5
  br label %31

31:                                               ; preds = %25, %26
  %32 = phi i8 [ %23, %25 ], [ %30, %26 ]
  %33 = bitcast %"class.blink::WebString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = icmp slt i8 %32, 0
  %35 = load i8*, i8** %10, align 8, !noalias !5
  %36 = load i64, i64* %12, align 8, !noalias !5
  %37 = zext i8 %32 to i64
  %38 = select i1 %34, i8* %35, i8* %14
  %39 = select i1 %34, i64 %36, i64 %37
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %4, i8* %38, i64 %39) #8
  %40 = bitcast i8* %20 to %"class.blink::WebDOMActivityLogger"*
  call void @_ZN5blink20SetDOMActivityLoggerEiRKNS_9WebStringEPNS_20WebDOMActivityLoggerE(i32 %0, %"class.blink::WebString"* nonnull dereferenceable(8) %4, %"class.blink::WebDOMActivityLogger"* nonnull %40) #8
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  br label %41

41:                                               ; preds = %2, %31
  ret void
}

declare zeroext i1 @_ZN5blink20HasDOMActivityLoggerEiRKNS_9WebStringE(i32, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN5blink20SetDOMActivityLoggerEiRKNS_9WebStringEPNS_20WebDOMActivityLoggerE(i32, %"class.blink::WebString"* dereferenceable(8), %"class.blink::WebDOMActivityLogger"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17DOMActivityLogger9LogGetterERKN5blink9WebStringERKNS1_6WebURLES4_(%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"* dereferenceable(8), %"class.blink::WebURL"* dereferenceable(96), %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %class.GURL, align 8
  %8 = alloca %"class.std::__1::basic_string.4", align 8
  %9 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.blink::WebString"* %1, i32 0) #8
  %10 = bitcast %class.GURL* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %10) #8
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %2, i64 0, i32 0
  %13 = call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* %12) #8, !noalias !8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %4
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %7) #8
  br label %28

16:                                               ; preds = %4
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.blink::WebString"* %12, i32 0) #8
  %17 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %2, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %2, i64 0, i32 2
  %19 = load i8, i8* %18, align 8, !range !11, !noalias !8
  %20 = icmp ne i8 %19, 0
  call void @_ZN4GURLC1ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN3url6ParsedEb(%class.GURL* nonnull %7, %"class.std::__1::basic_string"* nonnull %5, %"struct.url::Parsed"* dereferenceable(80) %17, i1 zeroext %20) #8
  %21 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1, !noalias !8
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8, !noalias !8
  call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %15, %16, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11)
  %29 = bitcast %"class.std::__1::basic_string.4"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #8
  %30 = call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* %3) #8, !noalias !12
  %31 = call i8* @_ZNK5blink9WebString5Data8Ev(%"class.blink::WebString"* %3) #8, !noalias !12
  %32 = call i16* @_ZNK5blink9WebString6Data16Ev(%"class.blink::WebString"* %3) #8, !noalias !12
  call void @_ZN4base20Latin1OrUTF16ToUTF16EmPKhPKDs(%"class.std::__1::basic_string.4"* nonnull sret %8, i64 %30, i8* %31, i16* %32) #8
  %33 = call i8* @_Znwm(i64 32) #9
  %34 = bitcast i8* %33 to %"class.base::ListValue"*
  call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %34) #8
  call void @_ZN10extensions17DOMActivityLogger20SendDomActionMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERK4GURLRKNS2_IDsNS3_IDsEENS5_IDsEEEENS_13DomActionType4TypeENS1_10unique_ptrIN4base9ListValueENS1_14default_deleteISM_EEEE(%"class.extensions::DOMActivityLogger"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, %class.GURL* nonnull dereferenceable(120) %7, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %8, i32 0, %"class.base::ListValue"* nonnull %34)
  %35 = bitcast %"class.std::__1::basic_string.4"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %28
  %40 = bitcast %"class.std::__1::basic_string.4"* %8 to i8**
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #9
  br label %42

42:                                               ; preds = %28, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %10) #8
  %43 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %42, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17DOMActivityLogger20SendDomActionMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERK4GURLRKNS2_IDsNS3_IDsEENS5_IDsEEEENS_13DomActionType4TypeENS1_10unique_ptrIN4base9ListValueENS1_14default_deleteISM_EEEE(%"class.extensions::DOMActivityLogger"*, %"class.std::__1::basic_string"* dereferenceable(24), %class.GURL* dereferenceable(120), %"class.std::__1::basic_string.4"* dereferenceable(24), i32, %"class.base::ListValue"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.ExtensionHostMsg_DOMAction_Params, align 8
  %8 = bitcast %struct.ExtensionHostMsg_DOMAction_Params* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 208, i1 false)
  call void @_ZN33ExtensionHostMsg_DOMAction_ParamsC1Ev(%struct.ExtensionHostMsg_DOMAction_Params* nonnull %7) #8
  %9 = getelementptr inbounds %struct.ExtensionHostMsg_DOMAction_Params, %struct.ExtensionHostMsg_DOMAction_Params* %7, i64 0, i32 2
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %1
  %11 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %10, label %40, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %15, label %30, label %20

20:                                               ; preds = %12
  br i1 %19, label %24, label %21

21:                                               ; preds = %20
  %22 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #8
  br label %40

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %9, i8* %26, i64 %28) #8
  br label %40

30:                                               ; preds = %12
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %36 = zext i8 %18 to i64
  %37 = select i1 %19, i8* %32, i8* %35
  %38 = select i1 %19, i64 %34, i64 %36
  %39 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %9, i8* %37, i64 %38) #8
  br label %40

40:                                               ; preds = %6, %21, %24, %30
  %41 = getelementptr inbounds %struct.ExtensionHostMsg_DOMAction_Params, %struct.ExtensionHostMsg_DOMAction_Params* %7, i64 0, i32 0
  %42 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* nonnull %41, %class.GURL* dereferenceable(120) %2) #8
  %43 = getelementptr inbounds %struct.ExtensionHostMsg_DOMAction_Params, %struct.ExtensionHostMsg_DOMAction_Params* %7, i64 0, i32 1
  %44 = call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"* %43, %"class.std::__1::basic_string.4"* dereferenceable(24) %3)
  %45 = getelementptr inbounds %struct.ExtensionHostMsg_DOMAction_Params, %struct.ExtensionHostMsg_DOMAction_Params* %7, i64 0, i32 4
  store i32 %4, i32* %45, align 8
  %46 = getelementptr inbounds %struct.ExtensionHostMsg_DOMAction_Params, %struct.ExtensionHostMsg_DOMAction_Params* %7, i64 0, i32 3
  call void @_ZN4base9ListValue4SwapEPS0_(%"class.base::ListValue"* %46, %"class.base::ListValue"* %5) #8
  %47 = call %"class.content::RenderThread"* @_ZN7content12RenderThread3GetEv() #8
  %48 = bitcast %"class.content::RenderThread"* %47 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr i8, i8* %49, i64 -80
  %51 = bitcast i8* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.content::RenderThread"* %47 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 %52
  %55 = bitcast i8* %54 to %"class.IPC::Sender"*
  %56 = call i8* @_Znwm(i64 56) #9
  %57 = bitcast i8* %56 to %"class.IPC::MessageT"*
  %58 = getelementptr inbounds %"class.extensions::DOMActivityLogger", %"class.extensions::DOMActivityLogger"* %0, i64 0, i32 1
  call void @_ZN3IPC8MessageTI47ExtensionHostMsg_AddDOMActionToActivityLog_MetaNSt3__15tupleIJNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE33ExtensionHostMsg_DOMAction_ParamsEEEvEC2ENS_7RoutingERKS9_RKSA_(%"class.IPC::MessageT"* nonnull %57, i32 2147483647, %"class.std::__1::basic_string"* dereferenceable(24) %58, %struct.ExtensionHostMsg_DOMAction_Params* nonnull dereferenceable(208) %7) #8
  %59 = bitcast i8* %56 to %"class.IPC::Message"*
  %60 = bitcast i8* %54 to i1 (%"class.IPC::Sender"*, %"class.IPC::Message"*)***
  %61 = load i1 (%"class.IPC::Sender"*, %"class.IPC::Message"*)**, i1 (%"class.IPC::Sender"*, %"class.IPC::Message"*)*** %60, align 8
  %62 = load i1 (%"class.IPC::Sender"*, %"class.IPC::Message"*)*, i1 (%"class.IPC::Sender"*, %"class.IPC::Message"*)** %61, align 8
  %63 = call zeroext i1 %62(%"class.IPC::Sender"* %55, %"class.IPC::Message"* nonnull %59) #8
  %64 = getelementptr inbounds %struct.ExtensionHostMsg_DOMAction_Params, %struct.ExtensionHostMsg_DOMAction_Params* %7, i64 0, i32 3, i32 0
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* %64) #8
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %40
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %70) #9
  br label %71

71:                                               ; preds = %68, %40
  %72 = bitcast %"class.std::__1::basic_string.4"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %72, i64 0, i32 1, i32 1
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = bitcast %"class.std::__1::basic_string.4"* %43 to i8**
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #9
  br label %79

79:                                               ; preds = %71, %76
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %8) #8
  %80 = icmp eq %"class.base::ListValue"* %5, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %5, i64 0, i32 0
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %82) #8
  %83 = bitcast %"class.base::ListValue"* %5 to i8*
  call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %79, %81
  ret void
}

declare void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.blink::WebString"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17DOMActivityLogger9LogSetterERKN5blink9WebStringERKN2v85LocalINS5_5ValueEEERKNS1_6WebURLES4_(%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"* dereferenceable(8), %"class.v8::Local"* dereferenceable(8), %"class.blink::WebURL"* dereferenceable(96), %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::Local", align 8
  %7 = bitcast %"class.v8::Local"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %6, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %8, align 8
  %9 = bitcast %"class.extensions::DOMActivityLogger"* %0 to void (%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"*, %"class.v8::Local"*, %"class.v8::Local"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)***
  %10 = load void (%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"*, %"class.v8::Local"*, %"class.v8::Local"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)**, void (%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"*, %"class.v8::Local"*, %"class.v8::Local"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"*, %"class.v8::Local"*, %"class.v8::Local"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)*, void (%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"*, %"class.v8::Local"*, %"class.v8::Local"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)** %10, i64 6
  %12 = load void (%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"*, %"class.v8::Local"*, %"class.v8::Local"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)*, void (%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"*, %"class.v8::Local"*, %"class.v8::Local"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)** %11, align 8
  call void %12(%"class.extensions::DOMActivityLogger"* %0, %"class.blink::WebString"* dereferenceable(8) %1, %"class.v8::Local"* dereferenceable(8) %2, %"class.v8::Local"* nonnull dereferenceable(8) %6, %"class.blink::WebURL"* dereferenceable(96) %3, %"class.blink::WebString"* dereferenceable(8) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17DOMActivityLogger9logSetterERKN5blink9WebStringERKN2v85LocalINS5_5ValueEEESA_RKNS1_6WebURLES4_(%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"* dereferenceable(8), %"class.v8::Local"* nocapture readonly dereferenceable(8), %"class.v8::Local"* nocapture readonly dereferenceable(8), %"class.blink::WebURL"* dereferenceable(96), %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %class.GURL, align 8
  %10 = alloca %"class.std::__1::basic_string.4", align 8
  %11 = tail call i8* @_Znwm(i64 32) #9
  %12 = bitcast i8* %11 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %12) #8
  %13 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.blink::WebString"* %1, i32 0) #8
  call fastcc void @_ZN10extensions12_GLOBAL__N_113AppendV8ValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKN2v85LocalINSA_5ValueEEEPN4base9ListValueE(%"class.v8::Local"* dereferenceable(8) %2, %"class.base::ListValue"* nonnull %12)
  %16 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %3, i64 0, i32 0
  %17 = load %"class.v8::Value"*, %"class.v8::Value"** %16, align 8
  %18 = icmp eq %"class.v8::Value"* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %6
  call fastcc void @_ZN10extensions12_GLOBAL__N_113AppendV8ValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKN2v85LocalINSA_5ValueEEEPN4base9ListValueE(%"class.v8::Local"* dereferenceable(8) %3, %"class.base::ListValue"* nonnull %12)
  br label %20

20:                                               ; preds = %19, %6
  %21 = bitcast %class.GURL* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %21) #8
  %22 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22)
  %23 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %4, i64 0, i32 0
  %24 = call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* %23) #8, !noalias !15
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %20
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %9) #8
  br label %39

27:                                               ; preds = %20
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.blink::WebString"* %23, i32 0) #8
  %28 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %4, i64 0, i32 1
  %29 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %4, i64 0, i32 2
  %30 = load i8, i8* %29, align 8, !range !11, !noalias !15
  %31 = icmp ne i8 %30, 0
  call void @_ZN4GURLC1ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN3url6ParsedEb(%class.GURL* nonnull %9, %"class.std::__1::basic_string"* nonnull %7, %"struct.url::Parsed"* dereferenceable(80) %28, i1 zeroext %31) #8
  %32 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1, !noalias !15
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8, !noalias !15
  call void @_ZdlPv(i8* %38) #9
  br label %39

39:                                               ; preds = %26, %27, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22)
  %40 = bitcast %"class.std::__1::basic_string.4"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #8
  %41 = call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* %5) #8, !noalias !18
  %42 = call i8* @_ZNK5blink9WebString5Data8Ev(%"class.blink::WebString"* %5) #8, !noalias !18
  %43 = call i16* @_ZNK5blink9WebString6Data16Ev(%"class.blink::WebString"* %5) #8, !noalias !18
  call void @_ZN4base20Latin1OrUTF16ToUTF16EmPKhPKDs(%"class.std::__1::basic_string.4"* nonnull sret %10, i64 %41, i8* %42, i16* %43) #8
  call void @_ZN10extensions17DOMActivityLogger20SendDomActionMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERK4GURLRKNS2_IDsNS3_IDsEENS5_IDsEEEENS_13DomActionType4TypeENS1_10unique_ptrIN4base9ListValueENS1_14default_deleteISM_EEEE(%"class.extensions::DOMActivityLogger"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %class.GURL* nonnull dereferenceable(120) %9, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %10, i32 1, %"class.base::ListValue"* nonnull %12)
  %44 = bitcast %"class.std::__1::basic_string.4"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %39
  %49 = bitcast %"class.std::__1::basic_string.4"* %10 to i8**
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #9
  br label %51

51:                                               ; preds = %39, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %21) #8
  %52 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %57) #9
  br label %58

58:                                               ; preds = %56, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  ret void
}

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN10extensions12_GLOBAL__N_113AppendV8ValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKN2v85LocalINSA_5ValueEEEPN4base9ListValueE(%"class.v8::Local"* nocapture readonly dereferenceable(8), %"class.base::ListValue"*) unnamed_addr #0 {
  %3 = alloca %"class.extensions::ActivityLogConverterStrategy", align 8
  %4 = tail call %"class.content::V8ValueConverter"* @_ZN7content16V8ValueConverter6CreateEv() #8
  %5 = bitcast %"class.extensions::ActivityLogConverterStrategy"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.extensions::ActivityLogConverterStrategy", %"class.extensions::ActivityLogConverterStrategy"* %3, i64 0, i32 0, i32 0
  store i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 (...)*** %6, align 8
  call void @_ZN10extensions28ActivityLogConverterStrategyC1Ev(%"class.extensions::ActivityLogConverterStrategy"* nonnull %3) #8
  %7 = bitcast %"class.content::V8ValueConverter"* %4 to void (%"class.content::V8ValueConverter"*, i1)***
  %8 = load void (%"class.content::V8ValueConverter"*, i1)**, void (%"class.content::V8ValueConverter"*, i1)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.content::V8ValueConverter"*, i1)*, void (%"class.content::V8ValueConverter"*, i1)** %8, i64 6
  %10 = load void (%"class.content::V8ValueConverter"*, i1)*, void (%"class.content::V8ValueConverter"*, i1)** %9, align 8
  call void %10(%"class.content::V8ValueConverter"* %4, i1 zeroext true) #8
  %11 = getelementptr inbounds %"class.extensions::ActivityLogConverterStrategy", %"class.extensions::ActivityLogConverterStrategy"* %3, i64 0, i32 0
  %12 = bitcast %"class.content::V8ValueConverter"* %4 to void (%"class.content::V8ValueConverter"*, %"class.content::V8ValueConverter::Strategy"*)***
  %13 = load void (%"class.content::V8ValueConverter"*, %"class.content::V8ValueConverter::Strategy"*)**, void (%"class.content::V8ValueConverter"*, %"class.content::V8ValueConverter::Strategy"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.content::V8ValueConverter"*, %"class.content::V8ValueConverter::Strategy"*)*, void (%"class.content::V8ValueConverter"*, %"class.content::V8ValueConverter::Strategy"*)** %13, i64 9
  %15 = load void (%"class.content::V8ValueConverter"*, %"class.content::V8ValueConverter::Strategy"*)*, void (%"class.content::V8ValueConverter"*, %"class.content::V8ValueConverter::Strategy"*)** %14, align 8
  call void %15(%"class.content::V8ValueConverter"* %4, %"class.content::V8ValueConverter::Strategy"* nonnull %11) #8
  %16 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %0, i64 0, i32 0
  %17 = load %"class.v8::Value"*, %"class.v8::Value"** %16, align 8
  %18 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #8
  %19 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %18) #8
  %20 = bitcast %"class.content::V8ValueConverter"* %4 to %"class.base::Value"* (%"class.content::V8ValueConverter"*, %"class.v8::Value"*, %"class.v8::Context"*)***
  %21 = load %"class.base::Value"* (%"class.content::V8ValueConverter"*, %"class.v8::Value"*, %"class.v8::Context"*)**, %"class.base::Value"* (%"class.content::V8ValueConverter"*, %"class.v8::Value"*, %"class.v8::Context"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.base::Value"* (%"class.content::V8ValueConverter"*, %"class.v8::Value"*, %"class.v8::Context"*)*, %"class.base::Value"* (%"class.content::V8ValueConverter"*, %"class.v8::Value"*, %"class.v8::Context"*)** %21, i64 5
  %23 = load %"class.base::Value"* (%"class.content::V8ValueConverter"*, %"class.v8::Value"*, %"class.v8::Context"*)*, %"class.base::Value"* (%"class.content::V8ValueConverter"*, %"class.v8::Value"*, %"class.v8::Context"*)** %22, align 8
  %24 = call %"class.base::Value"* %23(%"class.content::V8ValueConverter"* %4, %"class.v8::Value"* %17, %"class.v8::Context"* %19) #8
  %25 = icmp eq %"class.base::Value"* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %2
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* %1, %"class.base::Value"* nonnull %24) #8
  br label %27

27:                                               ; preds = %2, %26
  call void @_ZN10extensions28ActivityLogConverterStrategyD1Ev(%"class.extensions::ActivityLogConverterStrategy"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %28 = icmp eq %"class.content::V8ValueConverter"* %4, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %27
  %30 = bitcast %"class.content::V8ValueConverter"* %4 to void (%"class.content::V8ValueConverter"*)***
  %31 = load void (%"class.content::V8ValueConverter"*)**, void (%"class.content::V8ValueConverter"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.content::V8ValueConverter"*)*, void (%"class.content::V8ValueConverter"*)** %31, i64 1
  %33 = load void (%"class.content::V8ValueConverter"*)*, void (%"class.content::V8ValueConverter"*)** %32, align 8
  call void %33(%"class.content::V8ValueConverter"* nonnull %4) #8
  br label %34

34:                                               ; preds = %27, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17DOMActivityLogger9LogMethodERKN5blink9WebStringEiPKN2v85LocalINS5_5ValueEEERKNS1_6WebURLES4_(%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"* dereferenceable(8), i32, %"class.v8::Local"* nocapture readonly, %"class.blink::WebURL"* dereferenceable(96), %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %class.GURL, align 8
  %10 = alloca %"class.std::__1::basic_string.4", align 8
  %11 = tail call i8* @_Znwm(i64 32) #9
  %12 = bitcast i8* %11 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %12) #8
  %13 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.blink::WebString"* %1, i32 0) #8
  %16 = icmp sgt i32 %2, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = zext i32 %2 to i64
  br label %58

19:                                               ; preds = %58, %6
  %20 = bitcast %class.GURL* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %20) #8
  %21 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21)
  %22 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %4, i64 0, i32 0
  %23 = call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* %22) #8, !noalias !21
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %19
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %9) #8
  br label %38

26:                                               ; preds = %19
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.blink::WebString"* %22, i32 0) #8
  %27 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %4, i64 0, i32 1
  %28 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %4, i64 0, i32 2
  %29 = load i8, i8* %28, align 8, !range !11, !noalias !21
  %30 = icmp ne i8 %29, 0
  call void @_ZN4GURLC1ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN3url6ParsedEb(%class.GURL* nonnull %9, %"class.std::__1::basic_string"* nonnull %7, %"struct.url::Parsed"* dereferenceable(80) %27, i1 zeroext %30) #8
  %31 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1, !noalias !21
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8, !noalias !21
  call void @_ZdlPv(i8* %37) #9
  br label %38

38:                                               ; preds = %25, %26, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21)
  %39 = bitcast %"class.std::__1::basic_string.4"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #8
  %40 = call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* %5) #8, !noalias !24
  %41 = call i8* @_ZNK5blink9WebString5Data8Ev(%"class.blink::WebString"* %5) #8, !noalias !24
  %42 = call i16* @_ZNK5blink9WebString6Data16Ev(%"class.blink::WebString"* %5) #8, !noalias !24
  call void @_ZN4base20Latin1OrUTF16ToUTF16EmPKhPKDs(%"class.std::__1::basic_string.4"* nonnull sret %10, i64 %40, i8* %41, i16* %42) #8
  call void @_ZN10extensions17DOMActivityLogger20SendDomActionMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERK4GURLRKNS2_IDsNS3_IDsEENS5_IDsEEEENS_13DomActionType4TypeENS1_10unique_ptrIN4base9ListValueENS1_14default_deleteISM_EEEE(%"class.extensions::DOMActivityLogger"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %class.GURL* nonnull dereferenceable(120) %9, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %10, i32 2, %"class.base::ListValue"* nonnull %12)
  %43 = bitcast %"class.std::__1::basic_string.4"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %38
  %48 = bitcast %"class.std::__1::basic_string.4"* %10 to i8**
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %38, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %20) #8
  %51 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %56) #9
  br label %57

57:                                               ; preds = %55, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  ret void

58:                                               ; preds = %58, %17
  %59 = phi i64 [ 0, %17 ], [ %61, %58 ]
  %60 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %3, i64 %59
  call fastcc void @_ZN10extensions12_GLOBAL__N_113AppendV8ValueERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKN2v85LocalINSA_5ValueEEEPN4base9ListValueE(%"class.v8::Local"* dereferenceable(8) %60, %"class.base::ListValue"* nonnull %12)
  %61 = add nuw nsw i64 %59, 1
  %62 = icmp eq i64 %61, %18
  br i1 %62, label %19, label %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17DOMActivityLogger8LogEventERKN5blink9WebStringEiPS3_RKNS1_6WebURLES4_(%"class.extensions::DOMActivityLogger"*, %"class.blink::WebString"* dereferenceable(8), i32, %"class.blink::WebString"*, %"class.blink::WebURL"* dereferenceable(96), %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %class.GURL, align 8
  %11 = alloca %"class.std::__1::basic_string.4", align 8
  %12 = tail call i8* @_Znwm(i64 32) #9
  %13 = bitcast i8* %12 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %13) #8
  %14 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.blink::WebString"* %1, i32 0) #8
  %17 = icmp sgt i32 %2, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %6
  %19 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = zext i32 %2 to i64
  br label %64

25:                                               ; preds = %78, %6
  %26 = bitcast %class.GURL* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %26) #8
  %27 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27)
  %28 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %4, i64 0, i32 0
  %29 = call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* %28) #8, !noalias !27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %25
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %10) #8
  br label %44

32:                                               ; preds = %25
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.blink::WebString"* %28, i32 0) #8
  %33 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %4, i64 0, i32 2
  %35 = load i8, i8* %34, align 8, !range !11, !noalias !27
  %36 = icmp ne i8 %35, 0
  call void @_ZN4GURLC1ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN3url6ParsedEb(%class.GURL* nonnull %10, %"class.std::__1::basic_string"* nonnull %7, %"struct.url::Parsed"* dereferenceable(80) %33, i1 zeroext %36) #8
  %37 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1, !noalias !27
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8, !noalias !27
  call void @_ZdlPv(i8* %43) #9
  br label %44

44:                                               ; preds = %31, %32, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27)
  %45 = bitcast %"class.std::__1::basic_string.4"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #8
  %46 = call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* %5) #8, !noalias !30
  %47 = call i8* @_ZNK5blink9WebString5Data8Ev(%"class.blink::WebString"* %5) #8, !noalias !30
  %48 = call i16* @_ZNK5blink9WebString6Data16Ev(%"class.blink::WebString"* %5) #8, !noalias !30
  call void @_ZN4base20Latin1OrUTF16ToUTF16EmPKhPKDs(%"class.std::__1::basic_string.4"* nonnull sret %11, i64 %46, i8* %47, i16* %48) #8
  call void @_ZN10extensions17DOMActivityLogger20SendDomActionMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERK4GURLRKNS2_IDsNS3_IDsEENS5_IDsEEEENS_13DomActionType4TypeENS1_10unique_ptrIN4base9ListValueENS1_14default_deleteISM_EEEE(%"class.extensions::DOMActivityLogger"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %class.GURL* nonnull dereferenceable(120) %10, %"class.std::__1::basic_string.4"* nonnull dereferenceable(24) %11, i32 2, %"class.base::ListValue"* nonnull %13)
  %49 = bitcast %"class.std::__1::basic_string.4"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %49, i64 0, i32 1, i32 1
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %44
  %54 = bitcast %"class.std::__1::basic_string.4"* %11 to i8**
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #9
  br label %56

56:                                               ; preds = %44, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %26) #8
  %57 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %62) #9
  br label %63

63:                                               ; preds = %61, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8
  ret void

64:                                               ; preds = %78, %18
  %65 = phi i64 [ 0, %18 ], [ %79, %78 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8
  %66 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %3, i64 %65
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.blink::WebString"* %66, i32 0) #8
  %67 = load i8, i8* %21, align 1
  %68 = icmp slt i8 %67, 0
  %69 = load i8*, i8** %22, align 8
  %70 = select i1 %68, i8* %69, i8* %19
  %71 = load i64, i64* %23, align 8
  %72 = zext i8 %67 to i64
  %73 = select i1 %68, i64 %71, i64 %72
  call void @_ZN4base9ListValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::ListValue"* nonnull %13, i8* %70, i64 %73) #8
  %74 = load i8, i8* %21, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %64
  %77 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %77) #9
  br label %78

78:                                               ; preds = %64, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8
  %79 = add nuw nsw i64 %65, 1
  %80 = icmp eq i64 %79, %24
  br i1 %80, label %25, label %64
}

declare void @_ZN4base9ListValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::ListValue"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN33ExtensionHostMsg_DOMAction_ParamsC1Ev(%struct.ExtensionHostMsg_DOMAction_Params*) unnamed_addr #2

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.4"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.4"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.4"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.4"*
  %35 = icmp ugt %"class.std::__1::basic_string.4"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !33
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !33
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !36, !noalias !33
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !36, !noalias !33
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !33
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !33
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !36, !noalias !33
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !36, !noalias !33
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !33
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !33
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !36, !noalias !33
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !36, !noalias !33
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !33
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !33
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !36, !noalias !33
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !36, !noalias !33
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !38

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !33
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !33
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !36, !noalias !33
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !36, !noalias !33
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !40

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !42

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !43

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #10
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #10
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #9
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !44
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !44
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !47, !noalias !44
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !47, !noalias !44
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !44
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !44
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !47, !noalias !44
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !47, !noalias !44
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !44
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !44
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !47, !noalias !44
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !47, !noalias !44
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !44
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !44
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !47, !noalias !44
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !47, !noalias !44
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !49

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !44
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !44
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !47, !noalias !44
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !47, !noalias !44
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !50

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !51

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !52

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.4"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !53
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !53
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !56, !noalias !53
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !56, !noalias !53
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !53
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !53
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !56, !noalias !53
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !56, !noalias !53
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !53
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !53
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !56, !noalias !53
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !56, !noalias !53
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !53
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !53
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !56, !noalias !53
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !56, !noalias !53
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !58

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !53
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !53
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !56, !noalias !53
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !56, !noalias !53
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !59

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !60

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !61

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #8
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.4"* %0
}

declare void @_ZN4base9ListValue4SwapEPS0_(%"class.base::ListValue"*, %"class.base::ListValue"*) local_unnamed_addr #2

declare %"class.content::RenderThread"* @_ZN7content12RenderThread3GetEv() local_unnamed_addr #2

declare void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

declare void @_ZN4GURLC1ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN3url6ParsedEb(%class.GURL*, %"class.std::__1::basic_string"*, %"struct.url::Parsed"* dereferenceable(80), i1 zeroext) unnamed_addr #2

declare i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"*) local_unnamed_addr #2

declare void @_ZN4base20Latin1OrUTF16ToUTF16EmPKhPKDs(%"class.std::__1::basic_string.4"* sret, i64, i8*, i16*) local_unnamed_addr #2

declare i8* @_ZNK5blink9WebString5Data8Ev(%"class.blink::WebString"*) local_unnamed_addr #2

declare i16* @_ZNK5blink9WebString6Data16Ev(%"class.blink::WebString"*) local_unnamed_addr #2

declare %"class.content::V8ValueConverter"* @_ZN7content16V8ValueConverter6CreateEv() local_unnamed_addr #2

declare void @_ZN10extensions28ActivityLogConverterStrategyC1Ev(%"class.extensions::ActivityLogConverterStrategy"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"*, %"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10extensions28ActivityLogConverterStrategyD1Ev(%"class.extensions::ActivityLogConverterStrategy"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #10
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #10
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #9
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !62
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !62
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !65, !noalias !62
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !65, !noalias !62
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !62
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !62
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !65, !noalias !62
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !65, !noalias !62
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !62
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !62
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !65, !noalias !62
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !65, !noalias !62
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !62
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !62
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !65, !noalias !62
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !65, !noalias !62
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !67

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !62
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !62
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !65, !noalias !62
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !65, !noalias !62
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !68

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !69

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !70

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !71

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !72

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !73

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !75
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !75
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !78, !noalias !75
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !78, !noalias !75
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !75
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !75
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !78, !noalias !75
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !78, !noalias !75
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !75
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !75
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !78, !noalias !75
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !78, !noalias !75
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !75
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !75
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !78, !noalias !75
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !78, !noalias !75
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !80

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !75
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !75
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !78, !noalias !75
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !78, !noalias !75
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !81

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !82

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !83

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #9
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

declare void @_ZN3IPC8MessageTI47ExtensionHostMsg_AddDOMActionToActivityLog_MetaNSt3__15tupleIJNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE33ExtensionHostMsg_DOMAction_ParamsEEEvEC2ENS_7RoutingERKS9_RKSA_(%"class.IPC::MessageT"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %struct.ExtensionHostMsg_DOMAction_Params* dereferenceable(208)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!4 = distinct !{!4, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink6WebURLcv4GURLEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink6WebURLcv4GURLEv"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK5blink9WebString5Utf16Ev: argument 0"}
!14 = distinct !{!14, !"_ZNK5blink9WebString5Utf16Ev"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5blink6WebURLcv4GURLEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5blink6WebURLcv4GURLEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5blink9WebString5Utf16Ev: argument 0"}
!20 = distinct !{!20, !"_ZNK5blink9WebString5Utf16Ev"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK5blink6WebURLcv4GURLEv: argument 0"}
!23 = distinct !{!23, !"_ZNK5blink6WebURLcv4GURLEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK5blink9WebString5Utf16Ev: argument 0"}
!26 = distinct !{!26, !"_ZNK5blink9WebString5Utf16Ev"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK5blink6WebURLcv4GURLEv: argument 0"}
!29 = distinct !{!29, !"_ZNK5blink6WebURLcv4GURLEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK5blink9WebString5Utf16Ev: argument 0"}
!32 = distinct !{!32, !"_ZNK5blink9WebString5Utf16Ev"}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !39}
!39 = !{!"llvm.loop.isvectorized", i32 1}
!40 = distinct !{!40, !41}
!41 = !{!"llvm.loop.unroll.disable"}
!42 = distinct !{!42, !41}
!43 = distinct !{!43, !39}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !39}
!50 = distinct !{!50, !41}
!51 = distinct !{!51, !41}
!52 = distinct !{!52, !39}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !39}
!59 = distinct !{!59, !41}
!60 = distinct !{!60, !41}
!61 = distinct !{!61, !39}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !39}
!68 = distinct !{!68, !41}
!69 = distinct !{!69, !41}
!70 = distinct !{!70, !39}
!71 = distinct !{!71, !39}
!72 = distinct !{!72, !41}
!73 = distinct !{!73, !74, !39}
!74 = !{!"llvm.loop.unroll.runtime.disable"}
!75 = !{!76}
!76 = distinct !{!76, !77}
!77 = distinct !{!77, !"LVerDomain"}
!78 = !{!79}
!79 = distinct !{!79, !77}
!80 = distinct !{!80, !39}
!81 = distinct !{!81, !41}
!82 = distinct !{!82, !41}
!83 = distinct !{!83, !39}
