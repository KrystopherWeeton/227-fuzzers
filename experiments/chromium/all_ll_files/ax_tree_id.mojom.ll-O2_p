; ModuleID = 'gen/ui/accessibility/mojom/ax_tree_id.mojom.cc'
source_filename = "gen/ui/accessibility/mojom/ax_tree_id.mojom.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ax::mojom::AXTreeID" = type { i32, %"union.ax::mojom::AXTreeID::Union_" }
%"union.ax::mojom::AXTreeID::Union_" = type { %"class.base::UnguessableToken"* }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.0"*, %"class.mojo::ScopedHandleBase.0"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.0" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.0"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.4" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.13, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.15", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.13 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.14" }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }
%"class.ax::mojom::internal::AXTreeID_Data" = type { i32, i32, %"union.ax::mojom::internal::AXTreeID_Data::Union_" }
%"union.ax::mojom::internal::AXTreeID_Data::Union_" = type { %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.ax::mojom::AXTreeID"* }
%"class.mojo_base::mojom::internal::UnguessableToken_Data" = type { %"struct.mojo::internal::StructHeader", i64, i64 }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }

@_ZN2ax5mojom8AXTreeIDC1Ev = hidden unnamed_addr alias void (%"class.ax::mojom::AXTreeID"*), void (%"class.ax::mojom::AXTreeID"*)* @_ZN2ax5mojom8AXTreeIDC2Ev
@_ZN2ax5mojom8AXTreeIDD1Ev = hidden unnamed_addr alias void (%"class.ax::mojom::AXTreeID"*), void (%"class.ax::mojom::AXTreeID"*)* @_ZN2ax5mojom8AXTreeIDD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ax5mojom8AXTreeIDC2Ev(%"class.ax::mojom::AXTreeID"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %0, i64 0, i32 1
  %4 = bitcast %"union.ax::mojom::AXTreeID::Union_"* %3 to i8*
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ax5mojom8AXTreeIDD2Ev(%"class.ax::mojom::AXTreeID"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.base::UnguessableToken"*, %"class.base::UnguessableToken"** %6, align 8
  %8 = icmp eq %"class.base::UnguessableToken"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.base::UnguessableToken"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #6
  br label %11

11:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ax5mojom8AXTreeID13DestroyActiveEv(%"class.ax::mojom::AXTreeID"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.base::UnguessableToken"*, %"class.base::UnguessableToken"** %6, align 8
  %8 = icmp eq %"class.base::UnguessableToken"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.base::UnguessableToken"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #6
  br label %11

11:                                               ; preds = %5, %9, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ax5mojom8AXTreeID11set_unknownEh(%"class.ax::mojom::AXTreeID"* nocapture, i8 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %11 [
    i32 0, label %12
    i32 1, label %5
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.base::UnguessableToken"*, %"class.base::UnguessableToken"** %6, align 8
  %8 = icmp eq %"class.base::UnguessableToken"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.base::UnguessableToken"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #6
  br label %11

11:                                               ; preds = %2, %5, %9
  store i32 0, i32* %3, align 8
  br label %12

12:                                               ; preds = %2, %11
  %13 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %0, i64 0, i32 1
  %14 = bitcast %"union.ax::mojom::AXTreeID::Union_"* %13 to i8*
  store i8 %1, i8* %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ax5mojom8AXTreeID9set_tokenERKN4base16UnguessableTokenE(%"class.ax::mojom::AXTreeID"* nocapture, %"class.base::UnguessableToken"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %0, i64 0, i32 1, i32 0
  %8 = bitcast %"class.base::UnguessableToken"** %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.base::UnguessableToken"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  br label %16

11:                                               ; preds = %2
  store i32 1, i32* %3, align 8
  %12 = tail call i8* @_Znwm(i64 16) #6
  %13 = bitcast %"class.base::UnguessableToken"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %12, i8* align 8 %13, i64 16, i1 false)
  %14 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %0, i64 0, i32 1, i32 0
  %15 = bitcast %"class.base::UnguessableToken"** %14 to i8**
  store i8* %12, i8** %15, align 8
  br label %16

16:                                               ; preds = %11, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ax5mojom8AXTreeID8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #1 align 2 {
  %3 = tail call zeroext i1 @_ZN2ax5mojom8internal13AXTreeID_Data8ValidateEPKvPN4mojo8internal17ValidationContextEb(i8* %0, %"class.mojo::internal::ValidationContext"* %1, i1 zeroext false) #7
  ret i1 %3
}

declare zeroext i1 @_ZN2ax5mojom8internal13AXTreeID_Data8ValidateEPKvPN4mojo8internal17ValidationContextEb(i8*, %"class.mojo::internal::ValidationContext"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo11UnionTraitsIN2ax5mojom16AXTreeIDDataViewENS_9StructPtrINS2_8AXTreeIDEEEE4ReadES3_PS6_(%"class.ax::mojom::internal::AXTreeID_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::UnguessableToken", align 8
  %5 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 1
  switch i32 %6, label %99 [
    i32 0, label %7
    i32 1, label %47
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data"* %0, i64 0, i32 2
  %9 = bitcast %"union.ax::mojom::internal::AXTreeID_Data::Union_"* %8 to i8*
  %10 = load i8, i8* %9, align 1
  %11 = tail call i8* @_Znwm(i64 16) #6, !noalias !2
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8, !noalias !2
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = ptrtoint i8* %11 to i64
  store i8 %10, i8* %13, align 8, !noalias !2
  %15 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.ax::mojom::AXTreeID"*, %"class.ax::mojom::AXTreeID"** %15, align 8
  store %"class.ax::mojom::AXTreeID"* null, %"class.ax::mojom::AXTreeID"** %15, align 8
  %17 = icmp eq %"class.ax::mojom::AXTreeID"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %7
  %19 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %14, i64* %19, align 8
  br label %99

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %16, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %16, i64 0, i32 1, i32 0
  %26 = load %"class.base::UnguessableToken"*, %"class.base::UnguessableToken"** %25, align 8
  %27 = icmp eq %"class.base::UnguessableToken"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.base::UnguessableToken"* %26 to i8*
  tail call void @_ZdlPv(i8* %29) #6
  br label %30

30:                                               ; preds = %20, %24, %28
  %31 = bitcast %"class.ax::mojom::AXTreeID"* %16 to i8*
  tail call void @_ZdlPv(i8* %31) #6
  %32 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %33 = load %"class.ax::mojom::AXTreeID"*, %"class.ax::mojom::AXTreeID"** %15, align 8
  store i64 %14, i64* %32, align 8
  %34 = icmp eq %"class.ax::mojom::AXTreeID"* %33, null
  br i1 %34, label %99, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %33, i64 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %33, i64 0, i32 1, i32 0
  %41 = load %"class.base::UnguessableToken"*, %"class.base::UnguessableToken"** %40, align 8
  %42 = icmp eq %"class.base::UnguessableToken"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.base::UnguessableToken"* %41 to i8*
  tail call void @_ZdlPv(i8* %44) #6
  br label %45

45:                                               ; preds = %43, %39, %35
  %46 = bitcast %"class.ax::mojom::AXTreeID"* %33 to i8*
  tail call void @_ZdlPv(i8* %46) #6
  br label %99

47:                                               ; preds = %3
  %48 = bitcast %"class.base::UnguessableToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #7
  %49 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data"* %0, i64 0, i32 2, i32 0
  %50 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %49, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %47
  %54 = bitcast %"struct.mojo::internal::Pointer"* %49 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 %51
  %56 = bitcast i8* %55 to %"class.mojo_base::mojom::internal::UnguessableToken_Data"*
  %57 = call zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom24UnguessableTokenDataViewEN4base16UnguessableTokenEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::UnguessableToken_Data"* nonnull %56, %"class.base::UnguessableToken"* nonnull %4) #7
  br i1 %57, label %58, label %98

58:                                               ; preds = %47, %53
  %59 = call i8* @_Znwm(i64 16) #6, !noalias !5
  %60 = bitcast i8* %59 to i32*
  %61 = getelementptr inbounds i8, i8* %59, i64 8
  %62 = ptrtoint i8* %59 to i64
  store i32 1, i32* %60, align 8, !noalias !5
  %63 = call i8* @_Znwm(i64 16) #6, !noalias !5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %63, i8* nonnull align 8 %48, i64 16, i1 false) #7, !noalias !5
  %64 = bitcast i8* %61 to i8**
  store i8* %63, i8** %64, align 8, !noalias !5
  %65 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"class.ax::mojom::AXTreeID"*, %"class.ax::mojom::AXTreeID"** %65, align 8
  store %"class.ax::mojom::AXTreeID"* null, %"class.ax::mojom::AXTreeID"** %65, align 8
  %67 = icmp eq %"class.ax::mojom::AXTreeID"* %66, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %58
  %69 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %62, i64* %69, align 8
  br label %97

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %66, i64 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %66, i64 0, i32 1, i32 0
  %76 = load %"class.base::UnguessableToken"*, %"class.base::UnguessableToken"** %75, align 8
  %77 = icmp eq %"class.base::UnguessableToken"* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.base::UnguessableToken"* %76 to i8*
  call void @_ZdlPv(i8* %79) #6
  br label %80

80:                                               ; preds = %70, %74, %78
  %81 = bitcast %"class.ax::mojom::AXTreeID"* %66 to i8*
  call void @_ZdlPv(i8* %81) #6
  %82 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %83 = load %"class.ax::mojom::AXTreeID"*, %"class.ax::mojom::AXTreeID"** %65, align 8
  store i64 %62, i64* %82, align 8
  %84 = icmp eq %"class.ax::mojom::AXTreeID"* %83, null
  br i1 %84, label %97, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %83, i64 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %95

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.ax::mojom::AXTreeID", %"class.ax::mojom::AXTreeID"* %83, i64 0, i32 1, i32 0
  %91 = load %"class.base::UnguessableToken"*, %"class.base::UnguessableToken"** %90, align 8
  %92 = icmp eq %"class.base::UnguessableToken"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.base::UnguessableToken"* %91 to i8*
  call void @_ZdlPv(i8* %94) #6
  br label %95

95:                                               ; preds = %93, %89, %85
  %96 = bitcast %"class.ax::mojom::AXTreeID"* %83 to i8*
  call void @_ZdlPv(i8* %96) #6
  br label %97

97:                                               ; preds = %68, %80, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #7
  br label %99

98:                                               ; preds = %53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #7
  br label %99

99:                                               ; preds = %45, %30, %18, %97, %3, %98
  %100 = phi i1 [ false, %98 ], [ false, %3 ], [ true, %97 ], [ true, %18 ], [ true, %30 ], [ true, %45 ]
  ret i1 %100
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom24UnguessableTokenDataViewEN4base16UnguessableTokenEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::UnguessableToken_Data"*, %"class.base::UnguessableToken"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2ax5mojom8AXTreeID10NewUnknownEh: argument 0"}
!4 = distinct !{!4, !"_ZN2ax5mojom8AXTreeID10NewUnknownEh"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN2ax5mojom8AXTreeID8NewTokenERKN4base16UnguessableTokenE: argument 0"}
!7 = distinct !{!7, !"_ZN2ax5mojom8AXTreeID8NewTokenERKN4base16UnguessableTokenE"}
