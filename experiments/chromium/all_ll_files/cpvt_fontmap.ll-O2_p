; ModuleID = '../../third_party/pdfium/core/fpdfdoc/cpvt_fontmap.cpp'
source_filename = "../../third_party/pdfium/core/fpdfdoc/cpvt_fontmap.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPVT_FontMap = type { %class.IPVT_FontMap, %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.143", %"class.fxcrt::RetainPtr.143", %"class.fxcrt::ByteString", %"class.fxcrt::ByteString" }
%class.IPVT_FontMap = type { i32 (...)** }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%"class.fxcrt::RetainPtr.33" = type { %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.143" = type { %"class.std::__1::unique_ptr.144" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %class.CPDF_Font* }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %class.CFX_Font, %"class.std::__1::vector.196", %"class.fxcrt::RetainPtr.204", %"class.fxcrt::RetainPtr.33", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.222", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.147", %"class.std::__1::unique_ptr.153", %"class.fxcrt::RetainPtr.159", %"class.fxcrt::RetainPtr.175", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.std::__1::vector.191", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.147" = type { %"class.std::__1::unique_ptr.148" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.159" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.163", %"class.fxcrt::RetainPtr.167" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.167" = type { %"class.std::__1::unique_ptr.168" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.175" = type { %"class.std::__1::unique_ptr.176" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { i8* }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { i8*, i8*, %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.195", i64 }
%"class.fxcrt::UnownedPtr.195" = type { i8* }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"class.std::__1::unique_ptr.198"*, %"class.std::__1::unique_ptr.198"*, %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::unique_ptr.198" = type opaque
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.std::__1::unique_ptr.198"* }
%"class.fxcrt::RetainPtr.204" = type { %"class.std::__1::unique_ptr.205" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.208", %"class.fxcrt::RetainPtr.214" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.187", %"class.fxcrt::UnownedPtr.195" }
%"class.fxcrt::RetainPtr.208" = type { %"class.std::__1::unique_ptr.209" }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.214" = type { %"class.std::__1::unique_ptr.215" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type opaque
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.68" }
%"class.fxcrt::RetainPtr.68" = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.16", %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33", %"class.std::__1::vector", i8, i8, i32, i32, %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.std::__1::vector.129", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.137" }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.4" }
%"class.std::__1::__tree.4" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.231" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.234", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236", %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { float }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.23", %"class.fxcrt::UnownedPtr.29", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.30", i64, %"class.fxcrt::RetainPtr.62", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.74", %"class.std::__1::map.80", %"class.std::__1::set.89", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.fxcrt::UnownedPtr.29" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr.33", %"class.std::__1::map.50" }
%"class.std::__1::map.50" = type { %"class.std::__1::__tree.51" }
%"class.std::__1::__tree.51" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.62" = type { %"class.std::__1::unique_ptr.63" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.80" = type { %"class.std::__1::__tree.81" }
%"class.std::__1::__tree.81" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.89" = type { %"class.std::__1::__tree.90" }
%"class.std::__1::__tree.90" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.100" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { i32*, i32*, %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { i32* }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.136" }
%"class.fxcrt::UnownedPtr.136" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map.37" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.std::__1::map.37" = type { %"class.std::__1::__tree.38" }
%"class.std::__1::__tree.38" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.CPDF_Reference = type <{ %class.CPDF_Object, %"class.fxcrt::UnownedPtr.230", i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.230" = type { %class.CPDF_IndirectObjectHolder* }
%"class.fxcrt::RetainPtr.255" = type { %"class.std::__1::unique_ptr.256" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %class.CPDF_Object* }

$_ZN15CPDF_Dictionary9SetNewForI14CPDF_ReferenceJRP13CPDF_DocumentjEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_ = comdat any

@_ZTV12CPVT_FontMap = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPVT_FontMap*)* @_ZN12CPVT_FontMapD2Ev to i8*), i8* bitcast (void (%class.CPVT_FontMap*)* @_ZN12CPVT_FontMapD0Ev to i8*), i8* bitcast (void (%"class.fxcrt::RetainPtr.143"*, %class.CPVT_FontMap*, i32)* @_ZN12CPVT_FontMap10GetPDFFontEi to i8*), i8* bitcast (void (%"class.fxcrt::ByteString"*, %class.CPVT_FontMap*, i32)* @_ZN12CPVT_FontMap15GetPDFFontAliasEi to i8*), i8* bitcast (i32 (%class.CPVT_FontMap*, i16, i32, i32)* @_ZN12CPVT_FontMap16GetWordFontIndexEtii to i8*), i8* bitcast (i32 (%class.CPVT_FontMap*, i32, i16)* @_ZN12CPVT_FontMap19CharCodeFromUnicodeEit to i8*), i8* bitcast (i32 (%class.CPVT_FontMap*, i16, i32)* @_ZN12CPVT_FontMap18CharSetFromUnicodeEti to i8*)] }, align 8
@.str = private unnamed_addr constant [9 x i8] c"AcroForm\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"Font\00", align 1

@_ZN12CPVT_FontMapC1EP13CPDF_DocumentP15CPDF_DictionaryRKN5fxcrt9RetainPtrI9CPDF_FontEERKNS4_10ByteStringE = hidden unnamed_addr alias void (%class.CPVT_FontMap*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %"class.fxcrt::RetainPtr.143"*, %"class.fxcrt::ByteString"*), void (%class.CPVT_FontMap*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %"class.fxcrt::RetainPtr.143"*, %"class.fxcrt::ByteString"*)* @_ZN12CPVT_FontMapC2EP13CPDF_DocumentP15CPDF_DictionaryRKN5fxcrt9RetainPtrI9CPDF_FontEERKNS4_10ByteStringE
@_ZN12CPVT_FontMapD1Ev = hidden unnamed_addr alias void (%class.CPVT_FontMap*), void (%class.CPVT_FontMap*)* @_ZN12CPVT_FontMapD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPVT_FontMapC2EP13CPDF_DocumentP15CPDF_DictionaryRKN5fxcrt9RetainPtrI9CPDF_FontEERKNS4_10ByteStringE(%class.CPVT_FontMap*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %"class.fxcrt::RetainPtr.143"* nocapture readonly dereferenceable(8), %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV12CPVT_FontMap, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %0, i64 0, i32 1, i32 0
  store %class.CPDF_Document* %1, %class.CPDF_Document** %7, align 8
  %8 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %0, i64 0, i32 2
  %9 = ptrtoint %class.CPDF_Dictionary* %2 to i64
  %10 = bitcast %"class.fxcrt::RetainPtr.33"* %8 to i64*
  store i64 %9, i64* %10, align 8
  %11 = icmp eq %class.CPDF_Dictionary* %2, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %2, i64 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, 1
  store i64 %15, i64* %13, align 8
  br label %16

16:                                               ; preds = %5, %12
  %17 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.fxcrt::RetainPtr.143", %"class.fxcrt::RetainPtr.143"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %class.CPDF_Font*, %class.CPDF_Font** %18, align 8
  %20 = ptrtoint %class.CPDF_Font* %19 to i64
  %21 = bitcast %"class.fxcrt::RetainPtr.143"* %17 to i64*
  store i64 %20, i64* %21, align 8
  %22 = icmp eq %class.CPDF_Font* %19, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %19, i64 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i64 %25, 1
  store i64 %26, i64* %24, align 8
  br label %27

27:                                               ; preds = %16, %23
  %28 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %0, i64 0, i32 4
  %29 = bitcast %"class.fxcrt::RetainPtr.143"* %28 to i64*
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %0, i64 0, i32 5
  tail call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* %30, %"class.fxcrt::ByteString"* dereferenceable(8) %4) #7
  %31 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %0, i64 0, i32 6
  tail call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %31) #7
  ret void
}

declare void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPVT_FontMapD2Ev(%class.CPVT_FontMap*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV12CPVT_FontMap, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %0, i64 0, i32 6
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %3) #7
  %4 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %0, i64 0, i32 5
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %4) #7
  %5 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CPDF_Font*, %class.CPDF_Font** %5, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %5, align 8
  %7 = icmp eq %class.CPDF_Font* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %6, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, -1
  store i64 %11, i64* %9, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %6, i64 0, i32 0
  %15 = bitcast %class.CPDF_Font* %6 to void (%"class.fxcrt::Retainable"*)***
  %16 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %16, i64 1
  %18 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %17, align 8
  tail call void %18(%"class.fxcrt::Retainable"* nonnull %14) #7
  br label %19

19:                                               ; preds = %1, %8, %13
  %20 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %21 = load %class.CPDF_Font*, %class.CPDF_Font** %20, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %20, align 8
  %22 = icmp eq %class.CPDF_Font* %21, null
  br i1 %22, label %34, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %21, i64 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i64 %25, -1
  store i64 %26, i64* %24, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %21, i64 0, i32 0
  %30 = bitcast %class.CPDF_Font* %21 to void (%"class.fxcrt::Retainable"*)***
  %31 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %31, i64 1
  %33 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %32, align 8
  tail call void %33(%"class.fxcrt::Retainable"* nonnull %29) #7
  br label %34

34:                                               ; preds = %19, %23, %28
  %35 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %36 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %35, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %35, align 8
  %37 = icmp eq %class.CPDF_Dictionary* %36, null
  br i1 %37, label %49, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %36, i64 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = add nsw i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %36, i64 0, i32 0, i32 0
  %45 = bitcast %class.CPDF_Dictionary* %36 to void (%"class.fxcrt::Retainable"*)***
  %46 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %46, i64 1
  %48 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %47, align 8
  tail call void %48(%"class.fxcrt::Retainable"* nonnull %44) #7
  br label %49

49:                                               ; preds = %34, %38, %43
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPVT_FontMapD0Ev(%class.CPVT_FontMap*) unnamed_addr #0 align 2 {
  tail call void @_ZN12CPVT_FontMapD2Ev(%class.CPVT_FontMap* %0) #7
  %2 = bitcast %class.CPVT_FontMap* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPVT_FontMap18GetAnnotSysPDFFontEP13CPDF_DocumentP15CPDF_DictionaryPN5fxcrt10ByteStringE(%"class.fxcrt::RetainPtr.143"* noalias nocapture sret, %class.CPDF_Document*, %class.CPDF_Dictionary*, %"class.fxcrt::ByteString"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.CPDF_Document*, align 8
  %6 = alloca %class.CPDF_Dictionary*, align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::RetainPtr.143", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca i32, align 4
  store %class.CPDF_Document* %1, %class.CPDF_Document** %5, align 8
  %11 = icmp ne %class.CPDF_Document* %1, null
  %12 = icmp ne %class.CPDF_Dictionary* %2, null
  %13 = and i1 %11, %12
  br i1 %13, label %16, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.fxcrt::RetainPtr.143"* %0 to i64*
  store i64 0, i64* %15, align 8
  br label %48

16:                                               ; preds = %4
  %17 = bitcast %class.CPDF_Dictionary** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  %18 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %19 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %18, align 8
  %20 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #7
  %21 = call %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %19, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #7
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  store %class.CPDF_Dictionary* %21, %class.CPDF_Dictionary** %6, align 8
  %22 = bitcast %"class.fxcrt::RetainPtr.143"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7
  %23 = getelementptr inbounds %"class.fxcrt::RetainPtr.143", %"class.fxcrt::RetainPtr.143"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Font* inttoptr (i64 -6148914691236517206 to %class.CPDF_Font*), %class.CPDF_Font** %23, align 8
  call void @_ZN20CPDF_InteractiveForm28AddNativeInteractiveFormFontERP15CPDF_DictionaryP13CPDF_DocumentPN5fxcrt10ByteStringE(%"class.fxcrt::RetainPtr.143"* nonnull sret %8, %class.CPDF_Dictionary** nonnull dereferenceable(8) %6, %class.CPDF_Document* nonnull %1, %"class.fxcrt::ByteString"* %3) #7
  %24 = load %class.CPDF_Font*, %class.CPDF_Font** %23, align 8
  %25 = icmp eq %class.CPDF_Font* %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %16
  %27 = bitcast %"class.fxcrt::RetainPtr.143"* %0 to i64*
  br label %46

28:                                               ; preds = %16
  %29 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #7
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #7
  %30 = call %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %2, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #7
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7
  %31 = call zeroext i1 @_Z24ValidateFontResourceDictPK15CPDF_Dictionary(%class.CPDF_Dictionary* %30) #7
  br i1 %31, label %32, label %42

32:                                               ; preds = %28
  %33 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %30, %"class.fxcrt::ByteString"* dereferenceable(8) %3) #7
  br i1 %33, label %42, label %34

34:                                               ; preds = %32
  %35 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #7
  %36 = load %class.CPDF_Font*, %class.CPDF_Font** %23, align 8
  %37 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %36, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %38 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %37, align 8
  %39 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %38, i64 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  store i32 %40, i32* %10, align 4
  %41 = call %class.CPDF_Reference* @_ZN15CPDF_Dictionary9SetNewForI14CPDF_ReferenceJRP13CPDF_DocumentjEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary* %30, %"class.fxcrt::ByteString"* dereferenceable(8) %3, %class.CPDF_Document** nonnull dereferenceable(8) %5, i32* nonnull dereferenceable(4) %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #7
  br label %42

42:                                               ; preds = %28, %32, %34
  %43 = bitcast %"class.fxcrt::RetainPtr.143"* %0 to i64*
  %44 = bitcast %"class.fxcrt::RetainPtr.143"* %8 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %43, align 8
  br label %46

46:                                               ; preds = %42, %26
  %47 = phi i64* [ %44, %42 ], [ %27, %26 ]
  store i64 0, i64* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %48

48:                                               ; preds = %46, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN20CPDF_InteractiveForm28AddNativeInteractiveFormFontERP15CPDF_DictionaryP13CPDF_DocumentPN5fxcrt10ByteStringE(%"class.fxcrt::RetainPtr.143"* sret, %class.CPDF_Dictionary** dereferenceable(8), %class.CPDF_Document*, %"class.fxcrt::ByteString"*) local_unnamed_addr #1

declare zeroext i1 @_Z24ValidateFontResourceDictPK15CPDF_Dictionary(%class.CPDF_Dictionary*) local_unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CPDF_Reference* @_ZN15CPDF_Dictionary9SetNewForI14CPDF_ReferenceJRP13CPDF_DocumentjEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), %class.CPDF_Document** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.fxcrt::RetainPtr.255", align 8
  %6 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !2

9:                                                ; preds = %4
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !3
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !4
  unreachable

10:                                               ; preds = %4
  %11 = tail call i8* @_Znwm(i64 40) #8, !noalias !5
  %12 = bitcast i8* %11 to %class.CPDF_Reference*
  %13 = bitcast %class.CPDF_Document** %2 to %class.CPDF_IndirectObjectHolder**
  %14 = load %class.CPDF_IndirectObjectHolder*, %class.CPDF_IndirectObjectHolder** %13, align 8, !noalias !5
  %15 = load i32, i32* %3, align 4, !noalias !5
  tail call void @_ZN14CPDF_ReferenceC1EP25CPDF_IndirectObjectHolderj(%class.CPDF_Reference* nonnull %12, %class.CPDF_IndirectObjectHolder* %14, i32 %15) #7, !noalias !5
  %16 = ptrtoint i8* %11 to i64
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8, !noalias !5
  %20 = bitcast %"class.fxcrt::RetainPtr.255"* %5 to i64*
  store i64 %16, i64* %20, align 8
  %21 = add nsw i64 %19, 2
  store i64 %21, i64* %18, align 8
  %22 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, %"class.fxcrt::RetainPtr.255"* nonnull %5) #7
  %23 = bitcast %class.CPDF_Object* %22 to %class.CPDF_Reference*
  %24 = getelementptr inbounds %"class.fxcrt::RetainPtr.255", %"class.fxcrt::RetainPtr.255"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %class.CPDF_Object*, %class.CPDF_Object** %24, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %24, align 8
  %26 = icmp eq %class.CPDF_Object* %25, null
  br i1 %26, label %38, label %27

27:                                               ; preds = %10
  %28 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %25, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add nsw i64 %29, -1
  store i64 %30, i64* %28, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %25, i64 0, i32 0
  %34 = bitcast %class.CPDF_Object* %25 to void (%"class.fxcrt::Retainable"*)***
  %35 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %35, i64 1
  %37 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %36, align 8
  call void %37(%"class.fxcrt::Retainable"* nonnull %33) #7
  br label %38

38:                                               ; preds = %32, %27, %10
  %39 = load i64, i64* %18, align 8
  %40 = add nsw i64 %39, -1
  store i64 %40, i64* %18, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = bitcast i8* %11 to %"class.fxcrt::Retainable"*
  %44 = bitcast i8* %11 to void (%"class.fxcrt::Retainable"*)***
  %45 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %45, i64 1
  %47 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %46, align 8
  call void %47(%"class.fxcrt::Retainable"* nonnull %43) #7
  br label %48

48:                                               ; preds = %38, %42
  ret %class.CPDF_Reference* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPVT_FontMap10GetPDFFontEi(%"class.fxcrt::RetainPtr.143"* noalias nocapture sret, %class.CPVT_FontMap*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.143", align 8
  switch i32 %2, label %60 [
    i32 0, label %5
    i32 1, label %15
  ]

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.CPDF_Font*, %class.CPDF_Font** %6, align 8
  %8 = ptrtoint %class.CPDF_Font* %7 to i64
  %9 = bitcast %"class.fxcrt::RetainPtr.143"* %0 to i64*
  store i64 %8, i64* %9, align 8
  %10 = icmp eq %class.CPDF_Font* %7, null
  br i1 %10, label %62, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %7, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, 1
  store i64 %14, i64* %12, align 8
  br label %62

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %1, i64 0, i32 4
  %17 = getelementptr inbounds %"class.fxcrt::RetainPtr.143", %"class.fxcrt::RetainPtr.143"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CPDF_Font*, %class.CPDF_Font** %17, align 8
  %19 = icmp eq %class.CPDF_Font* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = ptrtoint %class.CPDF_Font* %18 to i64
  %22 = bitcast %"class.fxcrt::RetainPtr.143"* %0 to i64*
  store i64 %21, i64* %22, align 8
  br label %55

23:                                               ; preds = %15
  %24 = bitcast %"class.fxcrt::RetainPtr.143"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  %25 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %1, i64 0, i32 1, i32 0
  %26 = load %class.CPDF_Document*, %class.CPDF_Document** %25, align 8
  %27 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %28 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %27, align 8
  %29 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %1, i64 0, i32 6
  call void @_ZN12CPVT_FontMap18GetAnnotSysPDFFontEP13CPDF_DocumentP15CPDF_DictionaryPN5fxcrt10ByteStringE(%"class.fxcrt::RetainPtr.143"* nonnull sret %4, %class.CPDF_Document* %26, %class.CPDF_Dictionary* %28, %"class.fxcrt::ByteString"* %29)
  %30 = getelementptr inbounds %"class.fxcrt::RetainPtr.143", %"class.fxcrt::RetainPtr.143"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.fxcrt::RetainPtr.143"* %4 to i64*
  %32 = load i64, i64* %31, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %30, align 8
  %33 = load %class.CPDF_Font*, %class.CPDF_Font** %17, align 8
  %34 = bitcast %"class.fxcrt::RetainPtr.143"* %16 to i64*
  store i64 %32, i64* %34, align 8
  %35 = icmp eq %class.CPDF_Font* %33, null
  %36 = inttoptr i64 %32 to %class.CPDF_Font*
  br i1 %35, label %50, label %37

37:                                               ; preds = %23
  %38 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %33, i64 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = add nsw i64 %39, -1
  store i64 %40, i64* %38, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %48

42:                                               ; preds = %37
  %43 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %33, i64 0, i32 0
  %44 = bitcast %class.CPDF_Font* %33 to void (%"class.fxcrt::Retainable"*)***
  %45 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %45, i64 1
  %47 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %46, align 8
  tail call void %47(%"class.fxcrt::Retainable"* nonnull %43) #7
  br label %48

48:                                               ; preds = %42, %37
  %49 = load %class.CPDF_Font*, %class.CPDF_Font** %17, align 8
  br label %50

50:                                               ; preds = %48, %23
  %51 = phi %class.CPDF_Font* [ %49, %48 ], [ %36, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  %52 = ptrtoint %class.CPDF_Font* %51 to i64
  %53 = bitcast %"class.fxcrt::RetainPtr.143"* %0 to i64*
  store i64 %52, i64* %53, align 8
  %54 = icmp eq %class.CPDF_Font* %51, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %20, %50
  %56 = phi %class.CPDF_Font* [ %18, %20 ], [ %51, %50 ]
  %57 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %56, i64 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = add nsw i64 %58, 1
  store i64 %59, i64* %57, align 8
  br label %62

60:                                               ; preds = %3
  %61 = bitcast %"class.fxcrt::RetainPtr.143"* %0 to i64*
  store i64 0, i64* %61, align 8
  br label %62

62:                                               ; preds = %55, %50, %11, %5, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12CPVT_FontMap15GetPDFFontAliasEi(%"class.fxcrt::ByteString"* noalias sret, %class.CPVT_FontMap*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.143", align 8
  switch i32 %2, label %39 [
    i32 0, label %5
    i32 1, label %7
  ]

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %1, i64 0, i32 5
  tail call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %6) #7
  br label %40

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %1, i64 0, i32 4
  %9 = getelementptr inbounds %"class.fxcrt::RetainPtr.143", %"class.fxcrt::RetainPtr.143"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CPDF_Font*, %class.CPDF_Font** %9, align 8
  %11 = icmp eq %class.CPDF_Font* %10, null
  br i1 %11, label %12, label %37

12:                                               ; preds = %7
  %13 = bitcast %"class.fxcrt::RetainPtr.143"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %1, i64 0, i32 1, i32 0
  %15 = load %class.CPDF_Document*, %class.CPDF_Document** %14, align 8
  %16 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %17 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %16, align 8
  %18 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %1, i64 0, i32 6
  call void @_ZN12CPVT_FontMap18GetAnnotSysPDFFontEP13CPDF_DocumentP15CPDF_DictionaryPN5fxcrt10ByteStringE(%"class.fxcrt::RetainPtr.143"* nonnull sret %4, %class.CPDF_Document* %15, %class.CPDF_Dictionary* %17, %"class.fxcrt::ByteString"* %18)
  %19 = getelementptr inbounds %"class.fxcrt::RetainPtr.143", %"class.fxcrt::RetainPtr.143"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.fxcrt::RetainPtr.143"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %19, align 8
  %22 = load %class.CPDF_Font*, %class.CPDF_Font** %9, align 8
  %23 = bitcast %"class.fxcrt::RetainPtr.143"* %8 to i64*
  store i64 %21, i64* %23, align 8
  %24 = icmp eq %class.CPDF_Font* %22, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %12
  %26 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %22, i64 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add nsw i64 %27, -1
  store i64 %28, i64* %26, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  %31 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %22, i64 0, i32 0
  %32 = bitcast %class.CPDF_Font* %22 to void (%"class.fxcrt::Retainable"*)***
  %33 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %33, i64 1
  %35 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %34, align 8
  tail call void %35(%"class.fxcrt::Retainable"* nonnull %31) #7
  br label %36

36:                                               ; preds = %30, %25, %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  br label %37

37:                                               ; preds = %7, %36
  %38 = getelementptr inbounds %class.CPVT_FontMap, %class.CPVT_FontMap* %1, i64 0, i32 6
  tail call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %38) #7
  br label %40

39:                                               ; preds = %3
  tail call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %0) #7
  br label %40

40:                                               ; preds = %39, %37, %5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN12CPVT_FontMap16GetWordFontIndexEtii(%class.CPVT_FontMap* nocapture readnone, i16 zeroext, i32, i32) unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN12CPVT_FontMap19CharCodeFromUnicodeEit(%class.CPVT_FontMap* nocapture readnone, i32, i16 zeroext) unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN12CPVT_FontMap18CharSetFromUnicodeEti(%class.CPVT_FontMap* nocapture readnone, i16 zeroext, i32) unnamed_addr #5 align 2 {
  ret i32 0
}

declare %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), %"class.fxcrt::RetainPtr.255"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN14CPDF_ReferenceC1EP25CPDF_IndirectObjectHolderj(%class.CPDF_Reference*, %class.CPDF_IndirectObjectHolder*, i32) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i32 -2143109739}
!4 = !{i32 -2143109718}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6pdfium10MakeRetainI14CPDF_ReferenceJRP13CPDF_DocumentjEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZN6pdfium10MakeRetainI14CPDF_ReferenceJRP13CPDF_DocumentjEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
