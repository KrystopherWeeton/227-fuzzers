; ModuleID = '../../third_party/skia/src/effects/SkTableColorFilter.cpp'
source_filename = "../../third_party/skia/src/effects/SkTableColorFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ColorTableEffect = type { %class.GrFragmentProcessor.base, [4 x i8] }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.16"*, i64 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.22, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.22 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.23, %class.sk_sp.24, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.62" }
%class.SkNVRefCnt.23 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.24 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.27 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.25, i8* }
%class.sk_sp.25 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.26, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.26 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.27 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.28, void (i8*)*, i8* }
%class.SkNVRefCnt.28 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.29, i32, [4 x i8] }
%union.anon.29 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.24, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.59, %class.sk_sp.61, %class.sk_sp.61 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.39, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.50, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.31 }
%class.SkTHashTable.31 = type { i32, i32, %class.SkAutoTArray.32 }
%class.SkAutoTArray.32 = type { %"class.std::__1::unique_ptr.33" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.39 = type { %class.SkTHashTable.40 }
%class.SkTHashTable.40 = type { i32, i32, %class.SkAutoTArray.41 }
%class.SkAutoTArray.41 = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.48, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.48 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.49, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.49 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.50 = type { %class.SkTHashTable.51 }
%class.SkTHashTable.51 = type { i32, i32, %class.SkAutoTArray.52 }
%class.SkAutoTArray.52 = type { %"class.std::__1::unique_ptr.53" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.59 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.60, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.60 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.61 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.sk_sp.9 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.9*, %class.SkReadBuffer*)* }
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkDeserialProcs = type { {}*, i8*, {}*, i8*, void (%class.sk_sp*, i8*, i64, i8*)*, i8* }
%class.SkTable_ColorFilter = type { %class.SkColorFilterBase.base, %class.SkBitmap }
%class.SkColorFilterBase.base = type { %class.SkColorFilter.base }
%class.SkColorFilter.base = type { %class.SkFlattenable.base }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkBitmap = type { %class.sk_sp.136, %class.SkPixmap, %class.sk_sp.137 }
%class.sk_sp.136 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.11, i32, i32 }
%class.sk_sp.11 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.sk_sp.137 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.sk_sp.10 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkMatrix = type { [9 x float], i32 }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.70, %class.SkTArray.72 }
%class.SkTArray.70 = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp.71 }
%class.sk_sp.71 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTArray.72 = type { %"class.std::__1::unique_ptr.67"*, i64 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.GrGLSLFragmentProcessor* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.83", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.130" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.82 }
%class.sk_sp.82 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.86, %class.SkTHashMap.88, %class.SkTHashMap.97, %class.SkTArray.106, %class.SkTArray.70, i32, i8, [3 x i8] }>
%class.SkTArray.86 = type { %"class.std::__1::unique_ptr.87"*, i64 }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.70, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkTHashMap.88 = type { %class.SkTHashTable.89 }
%class.SkTHashTable.89 = type { i32, i32, %class.SkAutoTArray.90 }
%class.SkAutoTArray.90 = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.177" }
%"struct.std::__1::pair.177" = type { i32, i32 }
%class.SkTHashMap.97 = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.178" }
%"struct.std::__1::pair.178" = type { i32, %class.SkTArray.179* }
%class.SkTArray.179 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.106 = type { %"class.std::__1::unique_ptr.107"*, i64 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.179, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.120 }
%class.SkFibBlockSizes.120 = type { i32 }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %class.GrProxyProvider* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.138", [4 x i8] }
%"class.std::__1::__tuple_leaf" = type { %class.GrSurfaceProxyView }
%"class.std::__1::__tuple_leaf.138" = type { i32 }
%class.GrColorInfo = type { %class.sk_sp.11, %class.sk_sp.143, i32, i32 }
%class.sk_sp.143 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.25*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.25*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.25*, %class.SkTypeface*, i8*)*, i8* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.12", [7 x i8] }>
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkColorFilterBase = type { %class.SkColorFilter.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%struct.SkStageRec = type { %class.SkRasterPipeline*, %class.SkArenaAlloc*, i32, %class.SkColorSpace*, %class.SkPaint*, %class.SkMatrix*, %class.SkMatrixProvider* }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%class.SkPaint = type <{ %class.sk_sp.145, %class.sk_sp.146, %class.sk_sp.147, %class.sk_sp.10, %class.sk_sp.148, %struct.SkRGBA4f.149, float, float, %union.anon.150, [4 x i8] }>
%class.sk_sp.145 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.146 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.147 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.148 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f.149 = type { float, float, float, float }
%union.anon.150 = type { %struct.anon.151 }
%struct.anon.151 = type { i32 }
%class.SkMatrixProvider = type opaque
%"class.skvm::Builder" = type <{ %class.SkTHashMap.152, %"class.std::__1::vector", %"class.std::__1::vector.164", %"struct.skvm::Features", [6 x i8] }>
%class.SkTHashMap.152 = type { %class.SkTHashTable.153 }
%class.SkTHashTable.153 = type { i32, i32, %class.SkAutoTArray.154 }
%class.SkAutoTArray.154 = type { %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"*, %"class.std::__1::__compressed_pair.161" }
%"struct.skvm::Instruction" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.skvm::Instruction"* }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { i32*, i32*, %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { i32* }
%"struct.skvm::Features" = type { i8, i8 }
%"struct.skvm::Color" = type { %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::F32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"struct.skvm::Uniforms" = type { %"struct.skvm::Ptr", %"class.std::__1::vector.164" }
%"struct.skvm::Ptr" = type { i32 }
%class.anon.187 = type { %"struct.skvm::Uniforms"** }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.171*, i32, i32 }
%class.SkTArray.171 = type { i32*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.Impl = type { %class.GrGLSLFragmentProcessor }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.198, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.200, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.209], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.193 }
%union.anon.193 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.198 = type { %class.SkAlignedSTStorage.199, %class.SkTArray.70 }
%class.SkAlignedSTStorage.199 = type { [120 x i8] }
%class.SkSTArray.200 = type { %class.SkAlignedSTStorage.201, %class.SkTArray.202 }
%class.SkAlignedSTStorage.201 = type { [16 x i8] }
%class.SkTArray.202 = type { %"class.std::__1::unique_ptr.203"*, i64 }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.209 = type { %class.SkAlignedSTStorage.210, %class.SkTArray.70 }
%class.SkAlignedSTStorage.210 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.194 }
%struct.anon.194 = type { i8 }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.198, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.200, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.209], i32, i8, [3 x i8], i32, [12 x i8] }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN19SkTable_ColorFilterD2Ev = comdat any

$_ZN19SkTable_ColorFilterD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK19SkTable_ColorFilter10getFactoryEv = comdat any

$_ZNK19SkTable_ColorFilter11getTypeNameEv = comdat any

$_ZNK19SkTable_ColorFilter7flattenER13SkWriteBuffer = comdat any

$_ZNK17SkColorFilterBase18getFlattenableTypeEv = comdat any

$_ZNK17SkColorFilterBase18onIsAlphaUnchangedEv = comdat any

$_ZNK19SkTable_ColorFilter14onAppendStagesERK10SkStageRecb = comdat any

$_ZNK19SkTable_ColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc = comdat any

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN16ColorTableEffectD0Ev = comdat any

$_ZNK16ColorTableEffect4nameEv = comdat any

$_ZNK16ColorTableEffect5cloneEv = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZNK16ColorTableEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder = comdat any

$_ZNK16ColorTableEffect9onIsEqualERK19GrFragmentProcessor = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZZNK19SkTable_ColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAllocENKUlNS0_3F32EPKhE_clESA_SC_ = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZN19SkTable_ColorFilterC2EPKhS1_S1_S1_ = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

@_ZTV16ColorTableEffect = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.ColorTableEffect*)* @_ZN16ColorTableEffectD0Ev to i8*), i8* bitcast (i8* (%class.ColorTableEffect*)* @_ZNK16ColorTableEffect4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.ColorTableEffect*)* @_ZNK16ColorTableEffect5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.ColorTableEffect*)* @_ZNK16ColorTableEffect17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.ColorTableEffect*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK16ColorTableEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.ColorTableEffect*, %class.GrFragmentProcessor*)* @_ZNK16ColorTableEffect9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@.str = private unnamed_addr constant [20 x i8] c"SkTable_ColorFilter\00", align 1
@_ZTV19SkTable_ColorFilter = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkTable_ColorFilter*)* @_ZN19SkTable_ColorFilterD2Ev to i8*), i8* bitcast (void (%class.SkTable_ColorFilter*)* @_ZN19SkTable_ColorFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.9*, %class.SkReadBuffer*)* (%class.SkTable_ColorFilter*)* @_ZNK19SkTable_ColorFilter10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkTable_ColorFilter*)* @_ZNK19SkTable_ColorFilter11getTypeNameEv to i8*), i8* bitcast (void (%class.SkTable_ColorFilter*, %class.SkWriteBuffer*)* @_ZNK19SkTable_ColorFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkColorFilterBase*)* @_ZNK17SkColorFilterBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*)* @_ZNK17SkColorFilterBase18onIsAlphaUnchangedEv to i8*), i8* bitcast ({ i8, %class.GrFragmentProcessor* } (%class.SkTable_ColorFilter*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)* @_ZNK19SkTable_ColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f*, %class.SkColorSpace*)* @_ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, float*)* @_ZNK17SkColorFilterBase16onAsAColorMatrixEPf to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, i32*, i32*)* @_ZNK17SkColorFilterBase14onAsAColorModeEPjP11SkBlendMode to i8*), i8* bitcast (i1 (%class.SkTable_ColorFilter*, %struct.SkStageRec*, i1)* @_ZNK19SkTable_ColorFilter14onAppendStagesERK10SkStageRecb to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %class.SkTable_ColorFilter*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK19SkTable_ColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc to i8*)] }, align 8
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [17 x i8] c"ColorTableEffect\00", align 1
@.str.3 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.4 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1
@_ZTVZNK16ColorTableEffect17onMakeProgramImplEvE4Impl = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.Impl*)* @_ZZNK16ColorTableEffect17onMakeProgramImplEvEN4ImplD0Ev to i8*), i8* bitcast (void (%class.Impl*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZZNK16ColorTableEffect17onMakeProgramImplEvEN4Impl8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, align 8
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [20 x i8] c"half2(coord.a, 0.5)\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"half2(coord.r, 1.5)\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"half2(coord.g, 2.5)\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"half2(coord.b, 3.5)\00", align 1
@.str.10 = private unnamed_addr constant [104 x i8] c"half4 coord = 255 * unpremul(%s) + 0.5;\0Ahalf4 color = half4(%s.a, %s.a, %s.a, 1);\0Areturn color * %s.a;\0A\00", align 1

@_ZN16ColorTableEffectC1ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE18GrSurfaceProxyView = hidden unnamed_addr alias void (%class.ColorTableEffect*, %class.GrFragmentProcessor*, %class.GrSurfaceProxyView*), void (%class.ColorTableEffect*, %class.GrFragmentProcessor*, %class.GrSurfaceProxyView*)* @_ZN16ColorTableEffectC2ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE18GrSurfaceProxyView
@_ZN16ColorTableEffectC1ERKS_ = hidden unnamed_addr alias void (%class.ColorTableEffect*, %class.ColorTableEffect*), void (%class.ColorTableEffect*, %class.ColorTableEffect*)* @_ZN16ColorTableEffectC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkTable_ColorFilter10CreateProcER12SkReadBuffer(%class.sk_sp.9* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca [1024 x i8], align 16
  %4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 1024, i1 false)
  %5 = call zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer* %1, i8* nonnull %4, i64 1024) #10
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 256
  %8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 512
  %9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 768
  %10 = call i8* @_Znwm(i64 72) #11, !noalias !2
  %11 = bitcast i8* %10 to %class.SkTable_ColorFilter*
  call void @_ZN19SkTable_ColorFilterC2EPKhS1_S1_S1_(%class.SkTable_ColorFilter* nonnull %11, i8* nonnull %4, i8* %7, i8* %8, i8* %9) #10, !noalias !2
  %12 = ptrtoint i8* %10 to i64
  %13 = bitcast %class.sk_sp.9* %0 to i64*
  store i64 %12, i64* %13, align 8
  br label %16

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %15, align 8
  br label %16

16:                                               ; preds = %14, %6
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %4) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkTableColorFilter8MakeARGBEPKhS1_S1_S1_(%class.sk_sp.10* noalias nocapture sret, i8*, i8*, i8*, i8*) local_unnamed_addr #0 align 2 {
  %6 = icmp ne i8* %1, null
  %7 = icmp ne i8* %2, null
  %8 = or i1 %6, %7
  %9 = icmp ne i8* %3, null
  %10 = or i1 %8, %9
  %11 = icmp ne i8* %4, null
  %12 = or i1 %10, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %0, i64 0, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %14, align 8
  br label %20

15:                                               ; preds = %5
  %16 = tail call i8* @_Znwm(i64 72) #11, !noalias !7
  %17 = bitcast i8* %16 to %class.SkTable_ColorFilter*
  tail call void @_ZN19SkTable_ColorFilterC2EPKhS1_S1_S1_(%class.SkTable_ColorFilter* nonnull %17, i8* %1, i8* %2, i8* %3, i8* %4) #10, !noalias !7
  %18 = ptrtoint i8* %16 to i64
  %19 = bitcast %class.sk_sp.10* %0 to i64*
  store i64 %18, i64* %19, align 8
  br label %20

20:                                               ; preds = %15, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16ColorTableEffectC2ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE18GrSurfaceProxyView(%class.ColorTableEffect*, %class.GrFragmentProcessor*, %class.GrSurfaceProxyView* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %class.GrSurfaceProxyView, align 8
  %5 = bitcast %class.ColorTableEffect* %0 to %class.GrFragmentProcessor*
  %6 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %7, align 8
  %8 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 1, i32 1
  %10 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %11 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %12 = bitcast %class.SkTArray* %9 to i8**
  store i8* %10, i8** %12, align 8
  store i64 8589934592, i64* %11, align 8
  %13 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 2
  %14 = bitcast %class.GrFragmentProcessor** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 17, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16ColorTableEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %15 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 0, i32 0
  %16 = bitcast %class.GrSurfaceProxyView* %2 to i64*
  %17 = load i64, i64* %16, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %15, align 8
  %18 = bitcast %class.GrSurfaceProxyView* %4 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 1
  %20 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 2, i32 0
  %23 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %2, i64 0, i32 2, i32 0
  %24 = load i16, i16* %23, align 2
  store i16 %24, i16* %22, align 4
  %25 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #10
  %26 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %4, i32 0, %class.SkMatrix* dereferenceable(40) %25, i32 0, i32 0) #10
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %5, %class.GrFragmentProcessor* %26, i64 3) #10
  %27 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 0, i32 0
  %28 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %27, align 8
  %29 = icmp eq %class.GrSurfaceProxy* %28, null
  br i1 %29, label %42, label %30

30:                                               ; preds = %3
  %31 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %28, i64 0, i32 1
  %32 = getelementptr inbounds %class.SkNVRefCnt.23, %class.SkNVRefCnt.23* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %42

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.SkNVRefCnt.23, %class.SkNVRefCnt.23* %31, i64 -2
  %37 = bitcast %class.SkNVRefCnt.23* %36 to %class.GrSurfaceProxy*
  %38 = bitcast %class.SkNVRefCnt.23* %36 to void (%class.GrSurfaceProxy*)***
  %39 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %39, i64 1
  %41 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %40, align 8
  call void %41(%class.GrSurfaceProxy* nonnull %37) #10
  br label %42

42:                                               ; preds = %35, %30, %3
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %5, %class.GrFragmentProcessor* %1, i64 1) #10
  ret void
}

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i32, i32) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16ColorTableEffectC2ERKS_(%class.ColorTableEffect*, %class.ColorTableEffect* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.ColorTableEffect* %0 to %class.GrFragmentProcessor*
  %4 = bitcast %class.ColorTableEffect* %1 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %1, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %9, align 8
  %10 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 1, i32 1
  %12 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %14 = bitcast %class.SkTArray* %11 to i8**
  store i8* %12, i8** %14, align 8
  store i64 8589934592, i64* %13, align 8
  %15 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %15, align 8
  %16 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 3
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %18, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16ColorTableEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #10
  ret void
}

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK16ColorTableEffect17onMakeProgramImplEv(%class.ColorTableEffect* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #11
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2, i8 0, i64 16, i1 false) #10
  store i64 1, i64* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 32
  %7 = bitcast i8* %6 to i64*
  %8 = getelementptr inbounds i8, i8* %2, i64 24
  %9 = bitcast i8* %8 to %"class.std::__1::unique_ptr.67"**
  store %"class.std::__1::unique_ptr.67"* null, %"class.std::__1::unique_ptr.67"** %9, align 8
  store i64 1, i64* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVZNK16ColorTableEffect17onMakeProgramImplEvE4Impl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %10 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZN16ColorTableEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK8SkBitmap(%class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %class.GrSurfaceProxyView, align 8
  %6 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  call void @_Z27GrMakeCachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped(%"class.std::__1::tuple"* nonnull sret %4, %class.GrRecordingContext* %1, %class.SkBitmap* dereferenceable(56) %2, i1 zeroext false) #10
  %7 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::tuple"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %7, align 8
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %13 = load i16, i16* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  %14 = icmp eq i64 %9, 0
  br i1 %14, label %37, label %15

15:                                               ; preds = %3
  %16 = call i8* @_ZN11GrProcessornwEm(i64 64) #10
  %17 = bitcast i8* %16 to %class.ColorTableEffect*
  %18 = bitcast %class.GrSurfaceProxyView* %5 to i64*
  store i64 %9, i64* %18, align 8
  %19 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %5, i64 0, i32 1
  store i32 %11, i32* %19, align 8
  %20 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %5, i64 0, i32 2, i32 0
  store i16 %13, i16* %20, align 4
  call void @_ZN16ColorTableEffectC2ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE18GrSurfaceProxyView(%class.ColorTableEffect* %17, %class.GrFragmentProcessor* %0, %class.GrSurfaceProxyView* nonnull %5)
  %21 = ptrtoint i8* %16 to i64
  %22 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %5, i64 0, i32 0, i32 0
  %23 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %22, align 8
  %24 = icmp eq %class.GrSurfaceProxy* %23, null
  br i1 %24, label %44, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %23, i64 0, i32 1
  %27 = getelementptr inbounds %class.SkNVRefCnt.23, %class.SkNVRefCnt.23* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %44

30:                                               ; preds = %25
  %31 = getelementptr inbounds %class.SkNVRefCnt.23, %class.SkNVRefCnt.23* %26, i64 -2
  %32 = bitcast %class.SkNVRefCnt.23* %31 to %class.GrSurfaceProxy*
  %33 = bitcast %class.SkNVRefCnt.23* %31 to void (%class.GrSurfaceProxy*)***
  %34 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %33, align 8
  %35 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %34, i64 1
  %36 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %35, align 8
  call void %36(%class.GrSurfaceProxy* nonnull %32) #10
  br label %44

37:                                               ; preds = %3
  %38 = icmp eq %class.GrFragmentProcessor* %0, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %37
  %40 = bitcast %class.GrFragmentProcessor* %0 to void (%class.GrFragmentProcessor*)***
  %41 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %41, i64 1
  %43 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %42, align 8
  call void %43(%class.GrFragmentProcessor* nonnull %0) #10
  br label %44

44:                                               ; preds = %15, %25, %30, %37, %39
  %45 = phi i64 [ 0, %37 ], [ 0, %39 ], [ %21, %30 ], [ %21, %25 ], [ %21, %15 ]
  %46 = inttoptr i64 %45 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %46
}

declare void @_Z27GrMakeCachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped(%"class.std::__1::tuple"* sret, %class.GrRecordingContext*, %class.SkBitmap* dereferenceable(56), i1 zeroext) local_unnamed_addr #2

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i8, %class.GrFragmentProcessor* } @_ZNK19SkTable_ColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo(%class.SkTable_ColorFilter*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %class.GrSurfaceProxyView, align 8
  %7 = getelementptr inbounds %class.SkTable_ColorFilter, %class.SkTable_ColorFilter* %0, i64 0, i32 1
  %8 = bitcast %class.GrSurfaceProxyView* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8)
  %9 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  call void @_Z27GrMakeCachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped(%"class.std::__1::tuple"* nonnull sret %5, %class.GrRecordingContext* %2, %class.SkBitmap* dereferenceable(56) %7, i1 zeroext false) #10
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::tuple"* %5 to i64*
  %12 = load i64, i64* %11, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %10, align 8
  %13 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %16 = load i16, i16* %15, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  %17 = icmp eq i64 %12, 0
  br i1 %17, label %39, label %18

18:                                               ; preds = %4
  %19 = call i8* @_ZN11GrProcessornwEm(i64 64) #10
  %20 = bitcast i8* %19 to %class.ColorTableEffect*
  %21 = bitcast %class.GrSurfaceProxyView* %6 to i64*
  store i64 %12, i64* %21, align 8
  %22 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %6, i64 0, i32 1
  store i32 %14, i32* %22, align 8
  %23 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %6, i64 0, i32 2, i32 0
  store i16 %16, i16* %23, align 4
  call void @_ZN16ColorTableEffectC2ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE18GrSurfaceProxyView(%class.ColorTableEffect* %20, %class.GrFragmentProcessor* %1, %class.GrSurfaceProxyView* nonnull %6) #10
  %24 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %6, i64 0, i32 0, i32 0
  %25 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %24, align 8
  %26 = icmp eq %class.GrSurfaceProxy* %25, null
  br i1 %26, label %47, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %25, i64 0, i32 1
  %29 = getelementptr inbounds %class.SkNVRefCnt.23, %class.SkNVRefCnt.23* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %47

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.SkNVRefCnt.23, %class.SkNVRefCnt.23* %28, i64 -2
  %34 = bitcast %class.SkNVRefCnt.23* %33 to %class.GrSurfaceProxy*
  %35 = bitcast %class.SkNVRefCnt.23* %33 to void (%class.GrSurfaceProxy*)***
  %36 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %36, i64 1
  %38 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %37, align 8
  call void %38(%class.GrSurfaceProxy* nonnull %34) #10
  br label %47

39:                                               ; preds = %4
  %40 = icmp eq %class.GrFragmentProcessor* %1, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %39
  %42 = bitcast %class.GrFragmentProcessor* %1 to void (%class.GrFragmentProcessor*)***
  %43 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %43, i64 1
  %45 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %44, align 8
  call void %45(%class.GrFragmentProcessor* nonnull %1) #10
  br label %46

46:                                               ; preds = %39, %41
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8)
  br label %51

47:                                               ; preds = %18, %27, %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8)
  %48 = icmp ne i8* %19, null
  %49 = bitcast i8* %19 to %class.GrFragmentProcessor*
  %50 = zext i1 %48 to i8
  br label %51

51:                                               ; preds = %47, %46
  %52 = phi %class.GrFragmentProcessor* [ null, %46 ], [ %49, %47 ]
  %53 = phi i8 [ 0, %46 ], [ %50, %47 ]
  %54 = insertvalue { i8, %class.GrFragmentProcessor* } undef, i8 %53, 0
  %55 = insertvalue { i8, %class.GrFragmentProcessor* } %54, %class.GrFragmentProcessor* %52, 1
  ret { i8, %class.GrFragmentProcessor* } %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkTableColorFilter4MakeEPKh(%class.sk_sp.10* noalias nocapture sret, i8*) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 72) #11, !noalias !10
  %4 = bitcast i8* %3 to %class.SkTable_ColorFilter*
  tail call void @_ZN19SkTable_ColorFilterC2EPKhS1_S1_S1_(%class.SkTable_ColorFilter* nonnull %4, i8* %1, i8* %1, i8* %1, i8* %1) #10, !noalias !10
  %5 = ptrtoint i8* %3 to i64
  %6 = bitcast %class.sk_sp.10* %0 to i64*
  store i64 %5, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkTableColorFilter20RegisterFlattenablesEv() local_unnamed_addr #0 align 2 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.9*, %class.SkReadBuffer*)* nonnull @_ZN19SkTable_ColorFilter10CreateProcER12SkReadBuffer) #10
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.9*, %class.SkReadBuffer*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkTable_ColorFilterD2Ev(%class.SkTable_ColorFilter*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.SkTable_ColorFilter, %class.SkTable_ColorFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV19SkTable_ColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkTable_ColorFilter, %class.SkTable_ColorFilter* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %3) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkTable_ColorFilterD0Ev(%class.SkTable_ColorFilter*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.SkTable_ColorFilter, %class.SkTable_ColorFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV19SkTable_ColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkTable_ColorFilter, %class.SkTable_ColorFilter* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %3) #10
  %4 = bitcast %class.SkTable_ColorFilter* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #10
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.9*, %class.SkReadBuffer*)* @_ZNK19SkTable_ColorFilter10getFactoryEv(%class.SkTable_ColorFilter*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.9*, %class.SkReadBuffer*)* @_ZN19SkTable_ColorFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK19SkTable_ColorFilter11getTypeNameEv(%class.SkTable_ColorFilter*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK19SkTable_ColorFilter7flattenER13SkWriteBuffer(%class.SkTable_ColorFilter*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTable_ColorFilter, %class.SkTable_ColorFilter* %0, i64 0, i32 1, i32 1, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i8*, i64)***
  %6 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %6, i64 3
  %8 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, i8* %4, i64 1024) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK17SkColorFilterBase18getFlattenableTypeEv(%class.SkColorFilterBase*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK17SkColorFilterBase18onIsAlphaUnchangedEv(%class.SkColorFilterBase*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare { <2 x float>, <2 x float> } @_ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace(%class.SkColorFilterBase*, %struct.SkRGBA4f* dereferenceable(16), %class.SkColorSpace*) unnamed_addr #2

declare zeroext i1 @_ZNK17SkColorFilterBase16onAsAColorMatrixEPf(%class.SkColorFilterBase*, float*) unnamed_addr #2

declare zeroext i1 @_ZNK17SkColorFilterBase14onAsAColorModeEPjP11SkBlendMode(%class.SkColorFilterBase*, i32*, i32*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK19SkTable_ColorFilter14onAppendStagesERK10SkStageRecb(%class.SkTable_ColorFilter*, %struct.SkStageRec* dereferenceable(56), i1 zeroext) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 0
  %5 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %4, align 8
  br i1 %2, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %5, i32 7, i8* null) #10
  br label %7

7:                                                ; preds = %6, %3
  %8 = getelementptr inbounds %class.SkTable_ColorFilter, %class.SkTable_ColorFilter* %0, i64 0, i32 1, i32 1, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %class.SkTable_ColorFilter, %class.SkTable_ColorFilter* %0, i64 0, i32 1, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 %11
  %13 = shl i64 %11, 1
  %14 = getelementptr inbounds i8, i8* %9, i64 %13
  %15 = mul i64 %11, 3
  %16 = getelementptr inbounds i8, i8* %9, i64 %15
  %17 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 1
  %18 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %17, align 8
  %19 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %18, i64 0, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 0, %21
  %23 = and i64 %22, 7
  %24 = or i64 %23, 32
  %25 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %18, i64 0, i32 2
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %21
  %29 = icmp ugt i64 %24, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %7
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %18, i32 32, i32 8) #10
  %31 = load i64, i64* %20, align 8
  %32 = sub i64 0, %31
  %33 = and i64 %32, 7
  br label %34

34:                                               ; preds = %7, %30
  %35 = phi i64 [ %31, %30 ], [ %21, %7 ]
  %36 = phi i64 [ %33, %30 ], [ %23, %7 ]
  %37 = inttoptr i64 %35 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 %36
  %39 = getelementptr inbounds i8, i8* %38, i64 32
  store i8* %39, i8** %19, align 8
  %40 = bitcast i8* %38 to i8**
  store i8* %12, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %38, i64 8
  %42 = bitcast i8* %41 to i8**
  store i8* %14, i8** %42, align 8
  %43 = getelementptr inbounds i8, i8* %38, i64 16
  %44 = bitcast i8* %43 to i8**
  store i8* %16, i8** %44, align 8
  %45 = getelementptr inbounds i8, i8* %38, i64 24
  %46 = bitcast i8* %45 to i8**
  store i8* %9, i8** %46, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %5, i32 181, i8* %38) #10
  br i1 %2, label %47, label %51

47:                                               ; preds = %34
  %48 = getelementptr inbounds i8, i8* %9, i64 255
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, -1
  br i1 %50, label %52, label %51

51:                                               ; preds = %34, %47
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %5, i32 8, i8* null) #10
  br label %52

52:                                               ; preds = %51, %47
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK19SkTable_ColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias sret, %class.SkTable_ColorFilter*, %"class.skvm::Builder"*, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.skvm::Color", align 8
  %9 = alloca %"struct.skvm::Color", align 8
  %10 = alloca %"struct.skvm::Uniforms"*, align 8
  %11 = alloca %class.anon.187, align 8
  %12 = alloca [64 x i8], align 8
  %13 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i64 0, i64 0
  store %"struct.skvm::Uniforms"* %5, %"struct.skvm::Uniforms"** %10, align 8
  %14 = bitcast %class.anon.187* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %class.anon.187, %class.anon.187* %11, i64 0, i32 0
  store %"struct.skvm::Uniforms"** %10, %"struct.skvm::Uniforms"*** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13)
  %16 = bitcast %"struct.skvm::Color"* %3 to i8*
  %17 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 3, i32 0
  %18 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %17, align 8
  %19 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 3, i32 1
  %20 = bitcast i32* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"struct.skvm::Color"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %22) #10, !noalias !13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %16, i64 48, i1 false)
  %23 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %18, %"class.skvm::Builder"** %23, align 8, !noalias !13
  %24 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 3, i32 1
  %25 = bitcast i32* %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 2
  %29 = trunc i64 %21 to i32
  call void @_ZN4skvm7Builder8unpremulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"* %18, %"struct.skvm::F32"* nonnull %26, %"struct.skvm::F32"* %27, %"struct.skvm::F32"* %28, %"class.skvm::Builder"* %18, i32 %29) #10, !noalias !16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %22, i64 64, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %22) #10, !noalias !13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* nonnull align 8 %13, i64 64, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13)
  %30 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %17, align 8
  %31 = load i32, i32* %19, align 8
  %32 = getelementptr inbounds %class.SkTable_ColorFilter, %class.SkTable_ColorFilter* %1, i64 0, i32 1, i32 1, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %class.SkTable_ColorFilter, %class.SkTable_ColorFilter* %1, i64 0, i32 1, i32 1, i32 1
  %35 = call { %"class.skvm::Builder"*, i32 } @_ZZNK19SkTable_ColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAllocENKUlNS0_3F32EPKhE_clESA_SC_(%class.anon.187* nonnull %11, %"class.skvm::Builder"* %30, i32 %31, i8* %33)
  %36 = extractvalue { %"class.skvm::Builder"*, i32 } %35, 0
  %37 = extractvalue { %"class.skvm::Builder"*, i32 } %35, 1
  store %"class.skvm::Builder"* %36, %"class.skvm::Builder"** %17, align 8
  store i32 %37, i32* %19, align 8
  %38 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 0, i32 0
  %39 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %38, align 8
  %40 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load i8*, i8** %32, align 8
  %43 = load i64, i64* %34, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 %43
  %45 = call { %"class.skvm::Builder"*, i32 } @_ZZNK19SkTable_ColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAllocENKUlNS0_3F32EPKhE_clESA_SC_(%class.anon.187* nonnull %11, %"class.skvm::Builder"* %39, i32 %41, i8* %44)
  %46 = extractvalue { %"class.skvm::Builder"*, i32 } %45, 0
  %47 = extractvalue { %"class.skvm::Builder"*, i32 } %45, 1
  store %"class.skvm::Builder"* %46, %"class.skvm::Builder"** %38, align 8
  store i32 %47, i32* %40, align 8
  %48 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 1, i32 0
  %49 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %48, align 8
  %50 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 1, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = load i8*, i8** %32, align 8
  %53 = load i64, i64* %34, align 8
  %54 = shl i64 %53, 1
  %55 = getelementptr inbounds i8, i8* %52, i64 %54
  %56 = call { %"class.skvm::Builder"*, i32 } @_ZZNK19SkTable_ColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAllocENKUlNS0_3F32EPKhE_clESA_SC_(%class.anon.187* nonnull %11, %"class.skvm::Builder"* %49, i32 %51, i8* %55)
  %57 = extractvalue { %"class.skvm::Builder"*, i32 } %56, 0
  %58 = extractvalue { %"class.skvm::Builder"*, i32 } %56, 1
  store %"class.skvm::Builder"* %57, %"class.skvm::Builder"** %48, align 8
  store i32 %58, i32* %50, align 8
  %59 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 2, i32 0
  %60 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %59, align 8
  %61 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 2, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = load i8*, i8** %32, align 8
  %64 = load i64, i64* %34, align 8
  %65 = mul i64 %64, 3
  %66 = getelementptr inbounds i8, i8* %63, i64 %65
  %67 = call { %"class.skvm::Builder"*, i32 } @_ZZNK19SkTable_ColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAllocENKUlNS0_3F32EPKhE_clESA_SC_(%class.anon.187* nonnull %11, %"class.skvm::Builder"* %60, i32 %62, i8* %66)
  %68 = extractvalue { %"class.skvm::Builder"*, i32 } %67, 0
  %69 = extractvalue { %"class.skvm::Builder"*, i32 } %67, 1
  store %"class.skvm::Builder"* %68, %"class.skvm::Builder"** %59, align 8
  store i32 %69, i32* %61, align 8
  %70 = load i64, i64* %20, align 8
  %71 = bitcast %"struct.skvm::Color"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %71) #10, !noalias !19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %16, i64 48, i1 false)
  %72 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %8, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %36, %"class.skvm::Builder"** %72, align 8, !noalias !19
  %73 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %8, i64 0, i32 3, i32 1
  %74 = bitcast i32* %73 to i64*
  store i64 %70, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %8, i64 0, i32 0
  %76 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %8, i64 0, i32 1
  %77 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %8, i64 0, i32 2
  %78 = trunc i64 %70 to i32
  call void @_ZN4skvm7Builder6premulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"* %36, %"struct.skvm::F32"* nonnull %75, %"struct.skvm::F32"* %76, %"struct.skvm::F32"* %77, %"class.skvm::Builder"* %36, i32 %78) #10, !noalias !22
  %79 = bitcast %"struct.skvm::Color"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* nonnull align 8 %71, i64 64, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %71) #10, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.16"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #10
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #10
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16ColorTableEffectD0Ev(%class.ColorTableEffect*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrFragmentProcessor* %18 to void (%class.GrFragmentProcessor*)***
  %22 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrFragmentProcessor* nonnull %18) #10
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #10
  br label %34

34:                                               ; preds = %10, %31
  %35 = bitcast %class.ColorTableEffect* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %35) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK16ColorTableEffect4nameEv(%class.ColorTableEffect*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrFragmentProcessor* @_ZNK16ColorTableEffect5cloneEv(%class.ColorTableEffect*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 64) #10
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = bitcast %class.ColorTableEffect* %0 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.ColorTableEffect, %class.ColorTableEffect* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 8, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 8589934592, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 40
  %19 = bitcast i8* %18 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 %7, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16ColorTableEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #10
  ret %class.GrFragmentProcessor* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK16ColorTableEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.ColorTableEffect*, %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16ColorTableEffect9onIsEqualERK19GrFragmentProcessor(%class.ColorTableEffect*, %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline*, i32, i8*) local_unnamed_addr #2

declare void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"class.skvm::Builder"*, i32 } @_ZZNK19SkTable_ColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAllocENKUlNS0_3F32EPKhE_clESA_SC_(%class.anon.187*, %"class.skvm::Builder"*, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %5 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %1, i32 0) #10
  %6 = extractvalue { %"class.skvm::Builder"*, i32 } %5, 0
  %7 = extractvalue { %"class.skvm::Builder"*, i32 } %5, 1
  %8 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %1, i32 1065353216) #10
  %9 = extractvalue { %"class.skvm::Builder"*, i32 } %8, 0
  %10 = extractvalue { %"class.skvm::Builder"*, i32 } %8, 1
  %11 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"* %1, %"class.skvm::Builder"* %1, i32 %2, %"class.skvm::Builder"* %9, i32 %10) #10
  %12 = extractvalue { %"class.skvm::Builder"*, i32 } %11, 0
  %13 = extractvalue { %"class.skvm::Builder"*, i32 } %11, 1
  %14 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %1, %"class.skvm::Builder"* %6, i32 %7, %"class.skvm::Builder"* %12, i32 %13) #10
  %15 = extractvalue { %"class.skvm::Builder"*, i32 } %14, 0
  %16 = extractvalue { %"class.skvm::Builder"*, i32 } %14, 1
  %17 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder8to_unormEiNS_3F32E(%"class.skvm::Builder"* %15, i32 8, %"class.skvm::Builder"* %15, i32 %16) #10
  %18 = extractvalue { %"class.skvm::Builder"*, i32 } %17, 0
  %19 = extractvalue { %"class.skvm::Builder"*, i32 } %17, 1
  %20 = getelementptr inbounds %class.anon.187, %class.anon.187* %0, i64 0, i32 0
  %21 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %20, align 8
  %22 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %21, align 8
  %23 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %22, i64 0, i32 1
  %24 = ptrtoint i8* %3 to i64
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %22, i64 0, i32 1, i32 0, i32 1
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %22, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = icmp eq i32* %27, %29
  %31 = ptrtoint i32* %29 to i64
  br i1 %30, label %36, label %32

32:                                               ; preds = %4
  store i32 %25, i32* %27, align 4
  %33 = getelementptr inbounds i32, i32* %27, i64 1
  %34 = ptrtoint i32* %33 to i64
  %35 = bitcast i32** %26 to i64*
  store i64 %34, i64* %35, align 8
  br label %93

36:                                               ; preds = %4
  %37 = ptrtoint i32* %27 to i64
  %38 = bitcast i32** %26 to i64*
  %39 = bitcast %"class.std::__1::vector.164"* %23 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %37, %40
  %42 = ashr exact i64 %41, 2
  %43 = add nsw i64 %42, 1
  %44 = icmp ugt i64 %43, 4611686018427387903
  br i1 %44, label %45, label %47

45:                                               ; preds = %36
  %46 = bitcast %"class.std::__1::vector.164"* %23 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %46) #12
  unreachable

47:                                               ; preds = %36
  %48 = bitcast i32** %28 to i64*
  %49 = sub i64 %31, %40
  %50 = ashr exact i64 %49, 2
  %51 = icmp ult i64 %50, 2305843009213693951
  br i1 %51, label %52, label %60

52:                                               ; preds = %47
  %53 = ashr exact i64 %49, 1
  %54 = icmp ult i64 %53, %43
  %55 = select i1 %54, i64 %43, i64 %53
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %65, label %57

57:                                               ; preds = %52
  %58 = icmp ugt i64 %55, 4611686018427387903
  br i1 %58, label %59, label %60

59:                                               ; preds = %57
  tail call void @abort() #12
  unreachable

60:                                               ; preds = %57, %47
  %61 = phi i64 [ %55, %57 ], [ 4611686018427387903, %47 ]
  %62 = shl i64 %61, 2
  %63 = tail call i8* @_Znwm(i64 %62) #11
  %64 = bitcast i8* %63 to i32*
  br label %65

65:                                               ; preds = %60, %52
  %66 = phi i64 [ %61, %60 ], [ 0, %52 ]
  %67 = phi i32* [ %64, %60 ], [ null, %52 ]
  %68 = getelementptr inbounds i32, i32* %67, i64 %42
  %69 = getelementptr inbounds i32, i32* %67, i64 %66
  %70 = ptrtoint i32* %69 to i64
  store i32 %25, i32* %68, align 4
  %71 = getelementptr inbounds i32, i32* %68, i64 1
  %72 = ptrtoint i32* %71 to i64
  %73 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %23, i64 0, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = load i64, i64* %38, align 8
  %76 = ptrtoint i32* %74 to i64
  %77 = sub i64 %75, %76
  %78 = ashr exact i64 %77, 2
  %79 = sub nsw i64 0, %78
  %80 = getelementptr inbounds i32, i32* %68, i64 %79
  %81 = ptrtoint i32* %80 to i64
  %82 = icmp sgt i64 %77, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %65
  %84 = bitcast i32* %80 to i8*
  %85 = bitcast i32* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %85, i64 %77, i1 false) #10
  %86 = load i32*, i32** %73, align 8
  br label %87

87:                                               ; preds = %83, %65
  %88 = phi i32* [ %74, %65 ], [ %86, %83 ]
  store i64 %81, i64* %39, align 8
  store i64 %72, i64* %38, align 8
  store i64 %70, i64* %48, align 8
  %89 = icmp eq i32* %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %87
  %91 = bitcast i32* %88 to i8*
  tail call void @_ZdlPv(i8* %91) #11
  %92 = load i32*, i32** %26, align 8
  br label %93

93:                                               ; preds = %32, %87, %90
  %94 = phi i32* [ %33, %32 ], [ %71, %87 ], [ %92, %90 ]
  %95 = lshr i64 %24, 32
  %96 = trunc i64 %95 to i32
  %97 = load i32*, i32** %28, align 8
  %98 = icmp eq i32* %94, %97
  br i1 %98, label %104, label %99

99:                                               ; preds = %93
  store i32 %96, i32* %94, align 4
  %100 = getelementptr inbounds i32, i32* %94, i64 1
  %101 = ptrtoint i32* %100 to i64
  %102 = bitcast i32** %26 to i64*
  store i64 %101, i64* %102, align 8
  %103 = bitcast %"class.std::__1::vector.164"* %23 to i64*
  br label %159

104:                                              ; preds = %93
  %105 = ptrtoint i32* %97 to i64
  %106 = bitcast i32** %26 to i64*
  %107 = bitcast %"class.std::__1::vector.164"* %23 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %105, %108
  %110 = ashr exact i64 %109, 2
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 4611686018427387903
  br i1 %112, label %113, label %115

113:                                              ; preds = %104
  %114 = bitcast %"class.std::__1::vector.164"* %23 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #12
  unreachable

115:                                              ; preds = %104
  %116 = bitcast i32** %28 to i64*
  %117 = icmp ult i64 %110, 2305843009213693951
  br i1 %117, label %118, label %126

118:                                              ; preds = %115
  %119 = ashr exact i64 %109, 1
  %120 = icmp ult i64 %119, %111
  %121 = select i1 %120, i64 %111, i64 %119
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %118
  %124 = icmp ugt i64 %121, 4611686018427387903
  br i1 %124, label %125, label %126

125:                                              ; preds = %123
  tail call void @abort() #12
  unreachable

126:                                              ; preds = %123, %115
  %127 = phi i64 [ %121, %123 ], [ 4611686018427387903, %115 ]
  %128 = shl i64 %127, 2
  %129 = tail call i8* @_Znwm(i64 %128) #11
  %130 = bitcast i8* %129 to i32*
  br label %131

131:                                              ; preds = %126, %118
  %132 = phi i64 [ %127, %126 ], [ 0, %118 ]
  %133 = phi i32* [ %130, %126 ], [ null, %118 ]
  %134 = getelementptr inbounds i32, i32* %133, i64 %110
  %135 = getelementptr inbounds i32, i32* %133, i64 %132
  %136 = ptrtoint i32* %135 to i64
  store i32 %96, i32* %134, align 4
  %137 = getelementptr inbounds i32, i32* %134, i64 1
  %138 = ptrtoint i32* %137 to i64
  %139 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %23, i64 0, i32 0, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = load i64, i64* %106, align 8
  %142 = ptrtoint i32* %140 to i64
  %143 = sub i64 %141, %142
  %144 = ashr exact i64 %143, 2
  %145 = sub nsw i64 0, %144
  %146 = getelementptr inbounds i32, i32* %134, i64 %145
  %147 = ptrtoint i32* %146 to i64
  %148 = icmp sgt i64 %143, 0
  br i1 %148, label %149, label %153

149:                                              ; preds = %131
  %150 = bitcast i32* %146 to i8*
  %151 = bitcast i32* %140 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %150, i8* align 4 %151, i64 %143, i1 false) #10
  %152 = load i32*, i32** %139, align 8
  br label %153

153:                                              ; preds = %149, %131
  %154 = phi i32* [ %140, %131 ], [ %152, %149 ]
  store i64 %147, i64* %107, align 8
  store i64 %138, i64* %106, align 8
  store i64 %136, i64* %116, align 8
  %155 = icmp eq i32* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %153
  %157 = bitcast i32* %154 to i8*
  tail call void @_ZdlPv(i8* %157) #11
  %158 = load i64, i64* %106, align 8
  br label %159

159:                                              ; preds = %99, %153, %156
  %160 = phi i64* [ %103, %99 ], [ %107, %153 ], [ %107, %156 ]
  %161 = phi i64 [ %101, %99 ], [ %138, %153 ], [ %158, %156 ]
  %162 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %22, i64 0, i32 0, i32 0
  %163 = load i32, i32* %162, align 8
  %164 = load i64, i64* %160, align 8
  %165 = sub i64 %161, %164
  %166 = shl i64 %165, 32
  %167 = add i64 %166, -34359738368
  %168 = lshr exact i64 %167, 32
  %169 = trunc i64 %168 to i32
  %170 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7gather8ENS_3PtrEiNS_3I32E(%"class.skvm::Builder"* %18, i32 %163, i32 %169, %"class.skvm::Builder"* %18, i32 %19) #10
  %171 = extractvalue { %"class.skvm::Builder"*, i32 } %170, 0
  %172 = extractvalue { %"class.skvm::Builder"*, i32 } %170, 1
  %173 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder10from_unormEiNS_3I32E(%"class.skvm::Builder"* %171, i32 8, %"class.skvm::Builder"* %171, i32 %172) #10
  ret { %"class.skvm::Builder"*, i32 } %173
}

declare void @_ZN4skvm7Builder8unpremulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder8to_unormEiNS_3F32E(%"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3minENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder10from_unormEiNS_3I32E(%"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7gather8ENS_3PtrEiNS_3I32E(%"class.skvm::Builder"*, i32, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare void @_ZN4skvm7Builder6premulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"class.skvm::Builder"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZNK16ColorTableEffect17onMakeProgramImplEvEN4ImplD0Ev(%class.Impl*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.Impl, %class.Impl* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %2) #10
  %3 = bitcast %class.Impl* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZZNK16ColorTableEffect17onMakeProgramImplEvEN4Impl8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%class.Impl*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %class.SkString, align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %class.SkString, align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %class.SkString, align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %class.SkString, align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %class.SkString, align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 0
  %19 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %18, align 8
  %20 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %21, align 8
  %22 = getelementptr inbounds %class.Impl, %class.Impl* %0, i64 0, i32 0
  %23 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 0, i8* %24, align 1
  %25 = bitcast %"class.SkSL::String"* %9 to i8*
  store i8 0, i8* %25, align 8
  %26 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %25, i64 24, i1 false) #10, !noalias !25
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %8, %class.GrGLSLFragmentProcessor* %22, i32 1, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %7) #10
  %27 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1, !noalias !25
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8, !noalias !25
  call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %31, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26)
  %35 = bitcast %class.SkString* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = getelementptr inbounds %class.SkString, %class.SkString* %10, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %36, align 8
  %37 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 19, i8* %38, align 1
  %39 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i64 19, i1 false) #10
  %40 = getelementptr inbounds i8, i8* %39, i64 19
  store i8 0, i8* %40, align 1
  %41 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* nonnull align 8 %39, i64 24, i1 false) #10, !noalias !28
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %10, %class.GrGLSLFragmentProcessor* %22, i32 0, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %6) #10
  %42 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1, !noalias !28
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8, !noalias !28
  call void @_ZdlPv(i8* %48) #11
  br label %49

49:                                               ; preds = %46, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41)
  %50 = bitcast %class.SkString* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #10
  %51 = getelementptr inbounds %class.SkString, %class.SkString* %12, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %51, align 8
  %52 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  store i8 19, i8* %53, align 1
  %54 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), i64 19, i1 false) #10
  %55 = getelementptr inbounds i8, i8* %54, i64 19
  store i8 0, i8* %55, align 1
  %56 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* nonnull align 8 %54, i64 24, i1 false) #10, !noalias !31
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %12, %class.GrGLSLFragmentProcessor* %22, i32 0, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %5) #10
  %57 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1, !noalias !31
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %49
  %62 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8, !noalias !31
  call void @_ZdlPv(i8* %63) #11
  br label %64

64:                                               ; preds = %61, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56)
  %65 = bitcast %class.SkString* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #10
  %66 = getelementptr inbounds %class.SkString, %class.SkString* %14, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %66, align 8
  %67 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  store i8 19, i8* %68, align 1
  %69 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i64 19, i1 false) #10
  %70 = getelementptr inbounds i8, i8* %69, i64 19
  store i8 0, i8* %70, align 1
  %71 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %69, i64 24, i1 false) #10, !noalias !34
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %14, %class.GrGLSLFragmentProcessor* %22, i32 0, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %4) #10
  %72 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1, !noalias !34
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %64
  %77 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8, !noalias !34
  call void @_ZdlPv(i8* %78) #11
  br label %79

79:                                               ; preds = %76, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71)
  %80 = bitcast %class.SkString* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #10
  %81 = getelementptr inbounds %class.SkString, %class.SkString* %16, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %81, align 8
  %82 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  store i8 19, i8* %83, align 1
  %84 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %84, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i64 19, i1 false) #10
  %85 = getelementptr inbounds i8, i8* %84, i64 19
  store i8 0, i8* %85, align 1
  %86 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %86, i8* nonnull align 8 %84, i64 24, i1 false) #10, !noalias !37
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %16, %class.GrGLSLFragmentProcessor* %22, i32 0, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %3) #10
  %87 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1, !noalias !37
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %79
  %92 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8, !noalias !37
  call void @_ZdlPv(i8* %93) #11
  br label %94

94:                                               ; preds = %79, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86)
  %95 = bitcast %class.GrGLSLFPFragmentBuilder* %19 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr i8, i8* %96, i64 -24
  %98 = bitcast i8* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %21, align 8
  %101 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %51, align 8
  %102 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %66, align 8
  %103 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %81, align 8
  %104 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %36, align 8
  %105 = bitcast %class.GrGLSLFPFragmentBuilder* %19 to i8*
  %106 = getelementptr inbounds i8, i8* %105, i64 %99
  %107 = bitcast i8* %106 to %class.GrGLSLShaderBuilder*
  %108 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %100, i64 0, i32 2
  %109 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %101, i64 0, i32 2
  %110 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %102, i64 0, i32 2
  %111 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %103, i64 0, i32 2
  %112 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %104, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %107, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.10, i64 0, i64 0), i8* %108, i8* %109, i8* %110, i8* %111, i8* %112)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.72, %class.SkTArray.72* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.67"*, %"class.std::__1::unique_ptr.67"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #10
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.72* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #10
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray.70, %class.SkTArray.70* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #10
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray.70* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #10
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #10
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

declare void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* sret, %class.GrGLSLFragmentProcessor*, i32, i8*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56), %"class.SkSL::String"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkTable_ColorFilterC2EPKhS1_S1_S1_(%class.SkTable_ColorFilter*, i8*, i8*, i8*, i8*) unnamed_addr #0 comdat align 2 {
  %6 = alloca %struct.SkImageInfo, align 16
  %7 = getelementptr inbounds %class.SkTable_ColorFilter, %class.SkTable_ColorFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %7, align 4
  %8 = getelementptr inbounds %class.SkTable_ColorFilter, %class.SkTable_ColorFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV19SkTable_ColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %class.SkTable_ColorFilter, %class.SkTable_ColorFilter* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %9) #10
  %10 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = bitcast %struct.SkImageInfo* %6 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934593>, <2 x i64>* %11, align 16, !alias.scope !40
  %12 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %13 = bitcast %struct.SkISize* %12 to i64*
  store i64 17179869440, i64* %13, align 16, !alias.scope !40
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* %9, %struct.SkImageInfo* nonnull dereferenceable(24) %6) #10
  %14 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 16
  %16 = icmp eq %class.SkColorSpace* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = bitcast %class.SkColorSpace* %15 to i8*
  call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %5, %17, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  %24 = getelementptr inbounds %class.SkTable_ColorFilter, %class.SkTable_ColorFilter* %0, i64 0, i32 1, i32 1, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %class.SkTable_ColorFilter, %class.SkTable_ColorFilter* %0, i64 0, i32 1, i32 1, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  %29 = shl i64 %27, 1
  %30 = getelementptr inbounds i8, i8* %25, i64 %29
  %31 = mul i64 %27, 3
  %32 = getelementptr inbounds i8, i8* %25, i64 %31
  %33 = icmp eq i8* %1, null
  %34 = icmp eq i8* %2, null
  %35 = icmp eq i8* %3, null
  %36 = icmp eq i8* %4, null
  br label %38

37:                                               ; preds = %69
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* %9) #10
  ret void

38:                                               ; preds = %69, %23
  %39 = phi i64 [ 0, %23 ], [ %73, %69 ]
  %40 = trunc i64 %39 to i32
  br i1 %33, label %45, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, i8* %1, i64 %39
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  br label %45

45:                                               ; preds = %38, %41
  %46 = phi i32 [ %44, %41 ], [ %40, %38 ]
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds i8, i8* %25, i64 %39
  store i8 %47, i8* %48, align 1
  br i1 %34, label %53, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds i8, i8* %2, i64 %39
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  br label %53

53:                                               ; preds = %45, %49
  %54 = phi i32 [ %52, %49 ], [ %40, %45 ]
  %55 = trunc i32 %54 to i8
  %56 = getelementptr inbounds i8, i8* %28, i64 %39
  store i8 %55, i8* %56, align 1
  br i1 %35, label %61, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds i8, i8* %3, i64 %39
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  br label %61

61:                                               ; preds = %53, %57
  %62 = phi i32 [ %60, %57 ], [ %40, %53 ]
  %63 = trunc i32 %62 to i8
  %64 = getelementptr inbounds i8, i8* %30, i64 %39
  store i8 %63, i8* %64, align 1
  br i1 %36, label %69, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds i8, i8* %4, i64 %39
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  br label %69

69:                                               ; preds = %61, %65
  %70 = phi i32 [ %68, %65 ], [ %40, %61 ]
  %71 = trunc i32 %70 to i8
  %72 = getelementptr inbounds i8, i8* %32, i64 %39
  store i8 %71, i8* %72, align 1
  %73 = add nuw nsw i64 %39, 1
  %74 = icmp eq i64 %73, 256
  br i1 %74, label %37, label %38
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_Z10sk_make_spI19SkTable_ColorFilterJRPKhS3_S3_S3_EE5sk_spIT_EDpOT0_: argument 0"}
!4 = distinct !{!4, !"_Z10sk_make_spI19SkTable_ColorFilterJRPKhS3_S3_S3_EE5sk_spIT_EDpOT0_"}
!5 = distinct !{!5, !6, !"_ZN18SkTableColorFilter8MakeARGBEPKhS1_S1_S1_: argument 0"}
!6 = distinct !{!6, !"_ZN18SkTableColorFilter8MakeARGBEPKhS1_S1_S1_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_Z10sk_make_spI19SkTable_ColorFilterJRPKhS3_S3_S3_EE5sk_spIT_EDpOT0_: argument 0"}
!9 = distinct !{!9, !"_Z10sk_make_spI19SkTable_ColorFilterJRPKhS3_S3_S3_EE5sk_spIT_EDpOT0_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_Z10sk_make_spI19SkTable_ColorFilterJRPKhS3_S3_S3_EE5sk_spIT_EDpOT0_: argument 0"}
!12 = distinct !{!12, !"_Z10sk_make_spI19SkTable_ColorFilterJRPKhS3_S3_S3_EE5sk_spIT_EDpOT0_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN4skvmL8unpremulENS_5ColorE: argument 0"}
!15 = distinct !{!15, !"_ZN4skvmL8unpremulENS_5ColorE"}
!16 = !{!17, !14}
!17 = distinct !{!17, !18, !"_ZN4skvm7Builder8unpremulENS_5ColorE: argument 0"}
!18 = distinct !{!18, !"_ZN4skvm7Builder8unpremulENS_5ColorE"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN4skvmL6premulENS_5ColorE: argument 0"}
!21 = distinct !{!21, !"_ZN4skvmL6premulENS_5ColorE"}
!22 = !{!23, !20}
!23 = distinct !{!23, !24, !"_ZN4skvm7Builder6premulENS_5ColorE: argument 0"}
!24 = distinct !{!24, !"_ZN4skvm7Builder6premulENS_5ColorE"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!27 = distinct !{!27, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!30 = distinct !{!30, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!33 = distinct !{!33, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!36 = distinct !{!36, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!39 = distinct !{!39, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!42 = distinct !{!42, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!43 = distinct !{!43, !44, !"_ZN11SkImageInfo6MakeA8Eii: argument 0"}
!44 = distinct !{!44, !"_ZN11SkImageInfo6MakeA8Eii"}
