; ModuleID = '../../v8/src/torque/type-inference.cc'
source_filename = "../../v8/src/torque/type-inference.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::torque::TypeArgumentInference" = type { i64, %"class.std::__1::unordered_map", %"class.std::__1::vector", %"class.v8::base::Optional.94" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::base::Optional"*, %"class.v8::base::Optional"*, %"class.std::__1::__compressed_pair.89" }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.v8::internal::torque::Type"* }
%"class.v8::internal::torque::Type" = type { %"class.v8::internal::torque::TypeBase.base", %"class.v8::internal::torque::Type"*, %"class.std::__1::set", i64, %"class.v8::base::Optional.21", %"class.v8::internal::torque::Type"* }
%"class.v8::internal::torque::TypeBase.base" = type <{ i32 (...)**, i32 }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::base::Optional.21" = type { %"class.v8::base::internal::OptionalBase.22" }
%"class.v8::base::internal::OptionalBase.22" = type { %"struct.v8::base::internal::OptionalStorage.23" }
%"struct.v8::base::internal::OptionalStorage.23" = type { %"struct.v8::base::internal::OptionalStorageBase.24" }
%"struct.v8::base::internal::OptionalStorageBase.24" = type { i8, %union.anon.25 }
%union.anon.25 = type { %"struct.v8::internal::torque::SpecializationKey" }
%"struct.v8::internal::torque::SpecializationKey" = type { %"class.v8::internal::torque::GenericType"*, %"class.std::__1::vector.82" }
%"class.v8::internal::torque::GenericType" = type { %"class.v8::internal::torque::GenericDeclarable" }
%"class.v8::internal::torque::GenericDeclarable" = type { %"class.v8::internal::torque::Declarable.base", %"class.std::__1::basic_string", %"struct.v8::internal::torque::GenericTypeDeclaration"*, %"class.std::__1::unordered_map.44", %"class.v8::base::Optional.70" }
%"class.v8::internal::torque::Declarable.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.v8::internal::torque::Scope"*, %"struct.v8::internal::torque::SourcePosition", %"struct.v8::internal::torque::SourcePosition", i8 }>
%"class.v8::internal::torque::Scope" = type { %"class.v8::internal::torque::Declarable.base", [7 x i8], %"class.std::__1::unordered_map.99", %"struct.v8::internal::torque::SpecializationRequester" }
%"class.std::__1::unordered_map.99" = type { %"class.std::__1::__hash_table.100" }
%"class.std::__1::__hash_table.100" = type <{ %"class.std::__1::unique_ptr.101", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.119", [4 x i8] }>
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103", %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base.104"** }
%"struct.std::__1::__hash_node_base.104" = type { %"struct.std::__1::__hash_node_base.104"* }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::__bucket_list_deallocator.106" }
%"class.std::__1::__bucket_list_deallocator.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.std::__1::__hash_node_base.104" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.v8::internal::torque::SpecializationRequester" = type { %"struct.v8::internal::torque::SourcePosition", %"class.v8::internal::torque::Scope"*, %"class.std::__1::basic_string" }
%"struct.v8::internal::torque::SourcePosition" = type { %"class.v8::internal::torque::SourceId", %"struct.v8::internal::torque::LineAndColumn", %"struct.v8::internal::torque::LineAndColumn" }
%"class.v8::internal::torque::SourceId" = type { i32 }
%"struct.v8::internal::torque::LineAndColumn" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.28 }
%union.anon.28 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.v8::internal::torque::GenericTypeDeclaration" = type { %"struct.v8::internal::torque::Declaration", %"class.std::__1::vector.32", %"struct.v8::internal::torque::TypeDeclaration"* }
%"struct.v8::internal::torque::Declaration" = type { %"struct.v8::internal::torque::AstNode" }
%"struct.v8::internal::torque::AstNode" = type { i32 (...)**, i32, %"struct.v8::internal::torque::SourcePosition" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"struct.v8::internal::torque::GenericParameter"*, %"struct.v8::internal::torque::GenericParameter"*, %"class.std::__1::__compressed_pair.39" }
%"struct.v8::internal::torque::GenericParameter" = type { %"struct.v8::internal::torque::Identifier"*, %"class.v8::base::Optional.34" }
%"struct.v8::internal::torque::Identifier" = type { %"struct.v8::internal::torque::AstNode", %"class.std::__1::basic_string" }
%"class.v8::base::Optional.34" = type { %"class.v8::base::internal::OptionalBase.35" }
%"class.v8::base::internal::OptionalBase.35" = type { %"struct.v8::base::internal::OptionalStorage.36" }
%"struct.v8::base::internal::OptionalStorage.36" = type { %"struct.v8::base::internal::OptionalStorageBase.37" }
%"struct.v8::base::internal::OptionalStorageBase.37" = type { i8, %union.anon.38 }
%union.anon.38 = type { %"struct.v8::internal::torque::TypeExpression"* }
%"struct.v8::internal::torque::TypeExpression" = type { %"struct.v8::internal::torque::AstNode" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.v8::internal::torque::GenericParameter"* }
%"struct.v8::internal::torque::TypeDeclaration" = type { %"struct.v8::internal::torque::Declaration", %"struct.v8::internal::torque::Identifier"* }
%"class.std::__1::unordered_map.44" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.64", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::base::Optional.70" = type { %"class.v8::base::internal::OptionalBase.71" }
%"class.v8::base::internal::OptionalBase.71" = type { %"struct.v8::base::internal::OptionalStorage.72" }
%"struct.v8::base::internal::OptionalStorage.72" = type { %"struct.v8::base::internal::OptionalStorageBase.73" }
%"struct.v8::base::internal::OptionalStorageBase.73" = type { i8, %union.anon.74 }
%union.anon.74 = type { %"class.std::__1::vector.75" }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.v8::internal::torque::TypeConstraint"*, %"class.v8::internal::torque::TypeConstraint"*, %"class.std::__1::__compressed_pair.77" }
%"class.v8::internal::torque::TypeConstraint" = type { %"class.v8::base::Optional" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.v8::internal::torque::TypeConstraint"* }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"**, %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.v8::internal::torque::Type"** }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.v8::base::Optional"* }
%"class.v8::base::Optional.94" = type { %"class.v8::base::internal::OptionalBase.95" }
%"class.v8::base::internal::OptionalBase.95" = type { %"struct.v8::base::internal::OptionalStorage.96" }
%"struct.v8::base::internal::OptionalStorage.96" = type { %"struct.v8::base::internal::OptionalStorageBase.97" }
%"struct.v8::base::internal::OptionalStorageBase.97" = type { i8, %union.anon.98 }
%union.anon.98 = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"struct.v8::internal::torque::TypeExpression"**, %"struct.v8::internal::torque::TypeExpression"**, %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.v8::internal::torque::TypeExpression"** }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::tuple.151" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.v8::internal::torque::BasicTypeExpression" = type { %"struct.v8::internal::torque::TypeExpression", %"class.std::__1::vector.131", i8, %"class.std::__1::basic_string", %"class.std::__1::vector.123" }
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.std::__1::basic_string"* }
%"struct.v8::internal::torque::QualifiedName" = type { %"class.std::__1::vector.131", %"class.std::__1::basic_string" }
%"class.v8::internal::torque::MessageBuilder" = type { %"struct.v8::internal::torque::TorqueMessage", %"class.std::__1::vector.143" }
%"struct.v8::internal::torque::TorqueMessage" = type <{ %"class.std::__1::basic_string", %"class.v8::base::Optional.138", i32, [4 x i8] }>
%"class.v8::base::Optional.138" = type { %"class.v8::base::internal::OptionalBase.139" }
%"class.v8::base::internal::OptionalBase.139" = type { %"struct.v8::base::internal::OptionalStorage.140" }
%"struct.v8::base::internal::OptionalStorage.140" = type { %"struct.v8::base::internal::OptionalStorageBase.141" }
%"struct.v8::base::internal::OptionalStorageBase.141" = type { i8, %union.anon.142 }
%union.anon.142 = type { %"struct.v8::internal::torque::SourcePosition" }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"*, %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.v8::internal::torque::TorqueMessage"* }
%"class.std::length_error" = type { %"class.std::logic_error" }
%"class.std::logic_error" = type { %"class.std::exception", %"class.std::__1::__libcpp_refstring" }
%"class.std::exception" = type { i32 (...)** }
%"class.std::__1::__libcpp_refstring" = type { i8* }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN2v88internal6torque21TypeArgumentInference4FailENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2ERKS8_ = comdat any

$_ZN2v88internal6torque14MessageBuilderD2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt3__16vectorIN2v88internal6torque13TorqueMessageENS_9allocatorIS4_EEED2Ev = comdat any

$_ZN2v88internal6torque13TorqueMessageD2Ev = comdat any

$_ZNSt3__120__throw_length_errorEPKc = comdat any

$_ZNSt12length_errorC2EPKc = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_ = comdat any

$_ZN2v88internal6torque8ToStringIJRA93_KcEEENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEDpOT_ = comdat any

$_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [43 x i8] c"more explicit type arguments than expected\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"more arguments than expected\00", align 1
@.str.2 = private unnamed_addr constant [50 x i8] c"failed to infer arguments for all type parameters\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"!HasFailed()\00", align 1
@.str.5 = private unnamed_addr constant [46 x i8] c"found conflicting types for generic parameter\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"found conflicting generic type constructors\00", align 1
@.str.7 = private unnamed_addr constant [93 x i8] c"cannot infer types from generic-struct-typed parameter with incompatible number of arguments\00", align 1
@.str.8 = private unnamed_addr constant [68 x i8] c"allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size\00", align 1
@_ZTISt12length_error = external constant i8*
@_ZTVSt12length_error = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2v88internal6torque21TypeArgumentInferenceC1ERKNSt3__16vectorINS1_16GenericParameterENS3_9allocatorIS5_EEEERKNS4_IPKNS1_4TypeENS6_ISD_EEEERKNS4_IPNS1_14TypeExpressionENS6_ISJ_EEEERKNS4_INS_4base8OptionalISD_EENS6_ISQ_EEEE = hidden unnamed_addr alias void (%"class.v8::internal::torque::TypeArgumentInference"*, %"class.std::__1::vector.32"*, %"class.std::__1::vector.82"*, %"class.std::__1::vector.123"*, %"class.std::__1::vector"*), void (%"class.v8::internal::torque::TypeArgumentInference"*, %"class.std::__1::vector.32"*, %"class.std::__1::vector.82"*, %"class.std::__1::vector.123"*, %"class.std::__1::vector"*)* @_ZN2v88internal6torque21TypeArgumentInferenceC2ERKNSt3__16vectorINS1_16GenericParameterENS3_9allocatorIS5_EEEERKNS4_IPKNS1_4TypeENS6_ISD_EEEERKNS4_IPNS1_14TypeExpressionENS6_ISJ_EEEERKNS4_INS_4base8OptionalISD_EENS6_ISQ_EEEE

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque21TypeArgumentInferenceC2ERKNSt3__16vectorINS1_16GenericParameterENS3_9allocatorIS5_EEEERKNS4_IPKNS1_4TypeENS6_ISD_EEEERKNS4_IPNS1_14TypeExpressionENS6_ISJ_EEEERKNS4_INS_4base8OptionalISD_EENS6_ISQ_EEEE(%"class.v8::internal::torque::TypeArgumentInference"*, %"class.std::__1::vector.32"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.82"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.123"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.151", align 1
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %2, i64 0, i32 0, i32 1
  %13 = bitcast %"class.v8::internal::torque::Type"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.82"* %2 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  store i64 %18, i64* %11, align 8
  %19 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %1, i64 0, i32 0, i32 1
  %21 = bitcast %"struct.v8::internal::torque::GenericParameter"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.32"* %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = sdiv exact i64 %25, 24
  %27 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %19, i64 0, i32 0
  %28 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 1, i32 0, i32 3
  %29 = bitcast %"class.std::__1::__compressed_pair.11"* %28 to i32*
  %30 = bitcast %"class.std::__1::unordered_map"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false)
  store i32 1065353216, i32* %29, align 4
  invoke void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %27, i64 %26)
          to label %58 unwind label %31

31:                                               ; preds = %5
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base"* %34, null
  br i1 %35, label %51, label %36

36:                                               ; preds = %31, %48
  %37 = phi %"struct.std::__1::__hash_node_base"* [ %39, %48 ], [ %34, %31 ]
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 2
  %41 = bitcast %"struct.std::__1::__hash_node_base"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %36
  %46 = bitcast %"struct.std::__1::__hash_node_base"* %40 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #15
  br label %48

48:                                               ; preds = %45, %36
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %37 to i8*
  tail call void @_ZdlPv(i8* %49) #15
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %50, label %51, label %36

51:                                               ; preds = %48, %31
  %52 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %52, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"** %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.std::__1::__hash_node_base"** %53 to i8*
  tail call void @_ZdlPv(i8* %56) #15
  br label %57

57:                                               ; preds = %55, %51
  resume { i8*, i32 } %32

58:                                               ; preds = %5
  %59 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 2
  %60 = load i64, i64* %21, align 8
  %61 = load i64, i64* %23, align 8
  %62 = sub i64 %60, %61
  %63 = sdiv exact i64 %62, 24
  %64 = bitcast %"class.std::__1::vector"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #16
  %65 = icmp eq i64 %62, 0
  br i1 %65, label %99, label %66

66:                                               ; preds = %58
  %67 = icmp ugt i64 %63, 1152921504606846975
  br i1 %67, label %68, label %71

68:                                               ; preds = %66
  %69 = bitcast %"class.std::__1::vector"* %59 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %69) #17
          to label %70 unwind label %89

70:                                               ; preds = %68
  unreachable

71:                                               ; preds = %66
  %72 = shl nsw i64 %63, 4
  %73 = invoke i8* @_Znwm(i64 %72) #18
          to label %74 unwind label %89

74:                                               ; preds = %71
  %75 = bitcast i8* %73 to %"class.v8::base::Optional"*
  %76 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 2, i32 0, i32 1
  %77 = bitcast %"class.std::__1::vector"* %59 to i8**
  store i8* %73, i8** %77, align 8
  %78 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %75, i64 %63
  %79 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::base::Optional"* %78, %"class.v8::base::Optional"** %79, align 8
  %80 = bitcast %"class.v8::base::Optional"** %76 to i64*
  %81 = ptrtoint i8* %73 to i64
  %82 = add nsw i64 %63, -1
  %83 = getelementptr %"class.v8::base::Optional", %"class.v8::base::Optional"* %75, i64 %82, i32 0, i32 0, i32 0, i32 0
  %84 = ptrtoint i8* %83 to i64
  %85 = sub i64 16, %81
  %86 = add i64 %85, %84
  %87 = and i64 %86, -16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 %87, i1 false)
  %88 = ptrtoint %"class.v8::base::Optional"* %78 to i64
  store i64 %88, i64* %80, align 8
  br label %99

89:                                               ; preds = %71, %68
  %90 = landingpad { i8*, i32 }
          cleanup
  %91 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %59, i64 0, i32 0, i32 0
  %92 = load %"class.v8::base::Optional"*, %"class.v8::base::Optional"** %91, align 8
  %93 = icmp eq %"class.v8::base::Optional"* %92, null
  br i1 %93, label %123, label %94

94:                                               ; preds = %89
  %95 = ptrtoint %"class.v8::base::Optional"* %92 to i64
  %96 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 2, i32 0, i32 1
  %97 = bitcast %"class.v8::base::Optional"** %96 to i64*
  store i64 %95, i64* %97, align 8
  %98 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %92, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %98) #15
  br label %123

99:                                               ; preds = %58, %74
  %100 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %102 = bitcast %union.anon.98* %101 to i8*
  store i8 0, i8* %102, align 8
  %103 = load i64, i64* %11, align 8
  %104 = load i64, i64* %21, align 8
  %105 = load i64, i64* %23, align 8
  %106 = sub i64 %104, %105
  %107 = sdiv exact i64 %106, 24
  %108 = icmp ugt i64 %103, %107
  br i1 %108, label %109, label %140

109:                                              ; preds = %99
  %110 = invoke i8* @_Znwm(i64 48) #18
          to label %111 unwind label %126

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %110, i8** %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> <i64 42, i64 -9223372036854775760>, <2 x i64>* %114, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %110, i8* align 1 getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i64 42, i1 false) #16
  %115 = getelementptr inbounds i8, i8* %110, i64 42
  store i8 0, i8* %115, align 1
  invoke void @_ZN2v88internal6torque21TypeArgumentInference4FailENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.v8::internal::torque::TypeArgumentInference"* %0, %"class.std::__1::basic_string"* nonnull %8)
          to label %116 unwind label %130

116:                                              ; preds = %111
  %117 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %315

121:                                              ; preds = %116
  %122 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %122) #15
  br label %315

123:                                              ; preds = %89, %94
  %124 = extractvalue { i8*, i32 } %90, 0
  %125 = extractvalue { i8*, i32 } %90, 1
  br label %339

126:                                              ; preds = %162, %109
  %127 = landingpad { i8*, i32 }
          cleanup
  %128 = extractvalue { i8*, i32 } %127, 0
  %129 = extractvalue { i8*, i32 } %127, 1
  br label %316

130:                                              ; preds = %111
  %131 = landingpad { i8*, i32 }
          cleanup
  %132 = extractvalue { i8*, i32 } %131, 0
  %133 = extractvalue { i8*, i32 } %131, 1
  %134 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %316

138:                                              ; preds = %130
  %139 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %139) #15
  br label %316

140:                                              ; preds = %99
  %141 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %142 = bitcast %"class.v8::base::Optional"** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.std::__1::vector"* %4 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = sub i64 %143, %145
  %147 = ashr exact i64 %146, 4
  %148 = getelementptr inbounds %"class.std::__1::vector.123", %"class.std::__1::vector.123"* %3, i64 0, i32 0, i32 1
  %149 = bitcast %"struct.v8::internal::torque::TypeExpression"*** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.std::__1::vector.123"* %3 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = sub i64 %150, %152
  %154 = ashr exact i64 %153, 3
  %155 = icmp ugt i64 %147, %154
  br i1 %155, label %162, label %156

156:                                              ; preds = %140
  %157 = icmp eq i64 %104, %105
  br i1 %157, label %188, label %158

158:                                              ; preds = %156
  %159 = bitcast %"class.std::__1::tuple"* %6 to i8*
  %160 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  %161 = getelementptr inbounds %"class.std::__1::tuple.151", %"class.std::__1::tuple.151"* %7, i64 0, i32 0
  br label %194

162:                                              ; preds = %140
  %163 = invoke i8* @_Znwm(i64 32) #18
          to label %164 unwind label %126

164:                                              ; preds = %162
  %165 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %163, i8** %165, align 8
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %167 = bitcast i64* %166 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %167, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %163, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i64 28, i1 false) #16
  %168 = getelementptr inbounds i8, i8* %163, i64 28
  store i8 0, i8* %168, align 1
  invoke void @_ZN2v88internal6torque21TypeArgumentInference4FailENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.v8::internal::torque::TypeArgumentInference"* %0, %"class.std::__1::basic_string"* nonnull %9)
          to label %169 unwind label %176

169:                                              ; preds = %164
  %170 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %170, i64 0, i32 1, i32 0
  %172 = load i8, i8* %171, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %315

174:                                              ; preds = %169
  %175 = load i8*, i8** %165, align 8
  call void @_ZdlPv(i8* %175) #15
  br label %315

176:                                              ; preds = %164
  %177 = landingpad { i8*, i32 }
          cleanup
  %178 = extractvalue { i8*, i32 } %177, 0
  %179 = extractvalue { i8*, i32 } %177, 1
  %180 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %180, i64 0, i32 1, i32 0
  %182 = load i8, i8* %181, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %316

184:                                              ; preds = %176
  %185 = load i8*, i8** %165, align 8
  call void @_ZdlPv(i8* %185) #15
  br label %316

186:                                              ; preds = %202
  %187 = load i64, i64* %11, align 8
  br label %188

188:                                              ; preds = %186, %156
  %189 = phi i64 [ %187, %186 ], [ %103, %156 ]
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %216, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %2, i64 0, i32 0, i32 0
  %193 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %59, i64 0, i32 0, i32 0
  br label %223

194:                                              ; preds = %158, %202
  %195 = phi i64 [ %105, %158 ], [ %208, %202 ]
  %196 = phi i64 [ 0, %158 ], [ %206, %202 ]
  %197 = inttoptr i64 %195 to %"struct.v8::internal::torque::GenericParameter"*
  %198 = getelementptr inbounds %"struct.v8::internal::torque::GenericParameter", %"struct.v8::internal::torque::GenericParameter"* %197, i64 %196, i32 0
  %199 = load %"struct.v8::internal::torque::Identifier"*, %"struct.v8::internal::torque::Identifier"** %198, align 8
  %200 = getelementptr inbounds %"struct.v8::internal::torque::Identifier", %"struct.v8::internal::torque::Identifier"* %199, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #16
  store %"class.std::__1::basic_string"* %200, %"class.std::__1::basic_string"** %160, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %161) #16
  %201 = invoke { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %27, %"class.std::__1::basic_string"* dereferenceable(24) %200, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.151"* nonnull dereferenceable(1) %7)
          to label %202 unwind label %212

202:                                              ; preds = %194
  %203 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %201, 0
  %204 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %203, i64 5
  %205 = bitcast %"struct.std::__1::__hash_node_base"* %204 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %161) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #16
  store i64 %196, i64* %205, align 8
  %206 = add nuw i64 %196, 1
  %207 = load i64, i64* %21, align 8
  %208 = load i64, i64* %23, align 8
  %209 = sub i64 %207, %208
  %210 = sdiv exact i64 %209, 24
  %211 = icmp ult i64 %206, %210
  br i1 %211, label %194, label %186

212:                                              ; preds = %194
  %213 = landingpad { i8*, i32 }
          cleanup
  %214 = extractvalue { i8*, i32 } %213, 0
  %215 = extractvalue { i8*, i32 } %213, 1
  br label %316

216:                                              ; preds = %239, %188
  %217 = load i64, i64* %142, align 8
  %218 = load i64, i64* %144, align 8
  %219 = icmp eq i64 %217, %218
  br i1 %219, label %249, label %220

220:                                              ; preds = %216
  %221 = getelementptr inbounds %"class.std::__1::vector.123", %"class.std::__1::vector.123"* %3, i64 0, i32 0, i32 0
  %222 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  br label %258

223:                                              ; preds = %191, %239
  %224 = phi i64 [ 0, %191 ], [ %240, %239 ]
  %225 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %192, align 8
  %226 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %225, i64 %224
  %227 = bitcast %"class.v8::internal::torque::Type"** %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = load %"class.v8::base::Optional"*, %"class.v8::base::Optional"** %193, align 8
  %230 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %229, i64 %224, i32 0, i32 0, i32 0, i32 0
  %231 = load i8, i8* %230, align 8, !range !2
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %236, label %233

233:                                              ; preds = %223
  %234 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %229, i64 %224, i32 0, i32 0, i32 0, i32 1
  %235 = bitcast %union.anon* %234 to i64*
  store i64 %228, i64* %235, align 8
  br label %239

236:                                              ; preds = %223
  %237 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %229, i64 %224, i32 0, i32 0, i32 0, i32 1, i32 0
  %238 = bitcast %"class.v8::internal::torque::Type"** %237 to i64*
  store i64 %228, i64* %238, align 8
  store i8 1, i8* %230, align 8
  br label %239

239:                                              ; preds = %233, %236
  %240 = add nuw i64 %224, 1
  %241 = load i64, i64* %11, align 8
  %242 = icmp ult i64 %240, %241
  br i1 %242, label %223, label %216

243:                                              ; preds = %275
  %244 = load i64, i64* %142, align 8
  %245 = load i64, i64* %144, align 8
  %246 = sub i64 %244, %245
  %247 = ashr exact i64 %246, 4
  %248 = icmp ult i64 %278, %247
  br i1 %248, label %258, label %249

249:                                              ; preds = %243, %216
  %250 = load i64, i64* %21, align 8
  %251 = load i64, i64* %23, align 8
  %252 = icmp eq i64 %250, %251
  br i1 %252, label %315, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %59, i64 0, i32 0, i32 0
  %255 = load %"class.v8::base::Optional"*, %"class.v8::base::Optional"** %254, align 8
  %256 = sub i64 %250, %251
  %257 = sdiv exact i64 %256, 24
  br label %281

258:                                              ; preds = %220, %243
  %259 = phi i64 [ %218, %220 ], [ %245, %243 ]
  %260 = phi i64 [ 0, %220 ], [ %278, %243 ]
  %261 = inttoptr i64 %259 to %"class.v8::base::Optional"*
  %262 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %261, i64 %260, i32 0, i32 0, i32 0, i32 0
  %263 = load i8, i8* %262, align 8, !range !2
  %264 = icmp eq i8 %263, 0
  br i1 %264, label %275, label %265

265:                                              ; preds = %258
  %266 = load %"struct.v8::internal::torque::TypeExpression"**, %"struct.v8::internal::torque::TypeExpression"*** %221, align 8
  %267 = getelementptr inbounds %"struct.v8::internal::torque::TypeExpression"*, %"struct.v8::internal::torque::TypeExpression"** %266, i64 %260
  %268 = load %"struct.v8::internal::torque::TypeExpression"*, %"struct.v8::internal::torque::TypeExpression"** %267, align 8
  %269 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %261, i64 %260, i32 0, i32 0, i32 0, i32 1, i32 0
  %270 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %269, align 8
  invoke void @_ZN2v88internal6torque21TypeArgumentInference5MatchEPNS1_14TypeExpressionEPKNS1_4TypeE(%"class.v8::internal::torque::TypeArgumentInference"* %0, %"struct.v8::internal::torque::TypeExpression"* %268, %"class.v8::internal::torque::Type"* %270)
          to label %275 unwind label %271

271:                                              ; preds = %265
  %272 = landingpad { i8*, i32 }
          cleanup
  %273 = extractvalue { i8*, i32 } %272, 0
  %274 = extractvalue { i8*, i32 } %272, 1
  br label %316

275:                                              ; preds = %258, %265
  %276 = load i8, i8* %222, align 8, !range !2
  %277 = icmp eq i8 %276, 0
  %278 = add nuw i64 %260, 1
  br i1 %277, label %243, label %315

279:                                              ; preds = %281
  %280 = icmp ult i64 %286, %257
  br i1 %280, label %281, label %315

281:                                              ; preds = %253, %279
  %282 = phi i64 [ 0, %253 ], [ %286, %279 ]
  %283 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %255, i64 %282, i32 0, i32 0, i32 0, i32 0
  %284 = load i8, i8* %283, align 8, !range !2
  %285 = icmp eq i8 %284, 0
  %286 = add nuw i64 %282, 1
  br i1 %285, label %287, label %279

287:                                              ; preds = %281
  %288 = invoke i8* @_Znwm(i64 64) #18
          to label %289 unwind label %301

289:                                              ; preds = %287
  %290 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %288, i8** %290, align 8
  %291 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %292 = bitcast i64* %291 to <2 x i64>*
  store <2 x i64> <i64 49, i64 -9223372036854775744>, <2 x i64>* %292, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %288, i8* align 1 getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i64 0, i64 0), i64 49, i1 false) #16
  %293 = getelementptr inbounds i8, i8* %288, i64 49
  store i8 0, i8* %293, align 1
  invoke void @_ZN2v88internal6torque21TypeArgumentInference4FailENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.v8::internal::torque::TypeArgumentInference"* %0, %"class.std::__1::basic_string"* nonnull %10)
          to label %294 unwind label %305

294:                                              ; preds = %289
  %295 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %296 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %295, i64 0, i32 1, i32 0
  %297 = load i8, i8* %296, align 1
  %298 = icmp slt i8 %297, 0
  br i1 %298, label %299, label %315

299:                                              ; preds = %294
  %300 = load i8*, i8** %290, align 8
  call void @_ZdlPv(i8* %300) #15
  br label %315

301:                                              ; preds = %287
  %302 = landingpad { i8*, i32 }
          cleanup
  %303 = extractvalue { i8*, i32 } %302, 0
  %304 = extractvalue { i8*, i32 } %302, 1
  br label %316

305:                                              ; preds = %289
  %306 = landingpad { i8*, i32 }
          cleanup
  %307 = extractvalue { i8*, i32 } %306, 0
  %308 = extractvalue { i8*, i32 } %306, 1
  %309 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %310 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %309, i64 0, i32 1, i32 0
  %311 = load i8, i8* %310, align 1
  %312 = icmp slt i8 %311, 0
  br i1 %312, label %313, label %316

313:                                              ; preds = %305
  %314 = load i8*, i8** %290, align 8
  call void @_ZdlPv(i8* %314) #15
  br label %316

315:                                              ; preds = %275, %279, %249, %299, %294, %174, %169, %121, %116
  ret void

316:                                              ; preds = %313, %305, %184, %176, %138, %130, %301, %271, %212, %126
  %317 = phi i8* [ %128, %126 ], [ %214, %212 ], [ %273, %271 ], [ %303, %301 ], [ %132, %130 ], [ %132, %138 ], [ %178, %176 ], [ %178, %184 ], [ %307, %305 ], [ %307, %313 ]
  %318 = phi i32 [ %129, %126 ], [ %215, %212 ], [ %274, %271 ], [ %304, %301 ], [ %133, %130 ], [ %133, %138 ], [ %179, %176 ], [ %179, %184 ], [ %308, %305 ], [ %308, %313 ]
  %319 = load i8, i8* %100, align 8, !range !2
  %320 = icmp eq i8 %319, 0
  br i1 %320, label %330, label %321

321:                                              ; preds = %316
  %322 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %323 = bitcast %"class.std::__1::basic_string"* %322 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %324 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %323, i64 0, i32 1, i32 0
  %325 = load i8, i8* %324, align 1
  %326 = icmp slt i8 %325, 0
  br i1 %326, label %327, label %330

327:                                              ; preds = %321
  %328 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %322, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load i8*, i8** %328, align 8
  call void @_ZdlPv(i8* %329) #15
  br label %330

330:                                              ; preds = %327, %321, %316
  %331 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %59, i64 0, i32 0, i32 0
  %332 = load %"class.v8::base::Optional"*, %"class.v8::base::Optional"** %331, align 8
  %333 = icmp eq %"class.v8::base::Optional"* %332, null
  br i1 %333, label %339, label %334

334:                                              ; preds = %330
  %335 = ptrtoint %"class.v8::base::Optional"* %332 to i64
  %336 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 2, i32 0, i32 1
  %337 = bitcast %"class.v8::base::Optional"** %336 to i64*
  store i64 %335, i64* %337, align 8
  %338 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %332, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %338) #15
  br label %339

339:                                              ; preds = %334, %330, %123
  %340 = phi i8* [ %124, %123 ], [ %317, %330 ], [ %317, %334 ]
  %341 = phi i32 [ %125, %123 ], [ %318, %330 ], [ %318, %334 ]
  %342 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %343 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %342, align 8
  %344 = icmp eq %"struct.std::__1::__hash_node_base"* %343, null
  br i1 %344, label %360, label %345

345:                                              ; preds = %339, %357
  %346 = phi %"struct.std::__1::__hash_node_base"* [ %348, %357 ], [ %343, %339 ]
  %347 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %346, i64 0, i32 0
  %348 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %347, align 8
  %349 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %346, i64 2
  %350 = bitcast %"struct.std::__1::__hash_node_base"* %349 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %351 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %350, i64 0, i32 1, i32 0
  %352 = load i8, i8* %351, align 1
  %353 = icmp slt i8 %352, 0
  br i1 %353, label %354, label %357

354:                                              ; preds = %345
  %355 = bitcast %"struct.std::__1::__hash_node_base"* %349 to i8**
  %356 = load i8*, i8** %355, align 8
  call void @_ZdlPv(i8* %356) #15
  br label %357

357:                                              ; preds = %354, %345
  %358 = bitcast %"struct.std::__1::__hash_node_base"* %346 to i8*
  call void @_ZdlPv(i8* %358) #15
  %359 = icmp eq %"struct.std::__1::__hash_node_base"* %348, null
  br i1 %359, label %360, label %345

360:                                              ; preds = %357, %339
  %361 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %361, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %361, align 8
  %363 = icmp eq %"struct.std::__1::__hash_node_base"** %362, null
  br i1 %363, label %366, label %364

364:                                              ; preds = %360
  %365 = bitcast %"struct.std::__1::__hash_node_base"** %362 to i8*
  call void @_ZdlPv(i8* %365) #15
  br label %366

366:                                              ; preds = %360, %364
  %367 = insertvalue { i8*, i32 } undef, i8* %340, 0
  %368 = insertvalue { i8*, i32 } %367, i32 %341, 1
  resume { i8*, i32 } %368
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @__gxx_personality_v0(...)

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque21TypeArgumentInference4FailENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.v8::internal::torque::TypeArgumentInference"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = alloca %"class.v8::base::Optional.94", align 8
  %4 = getelementptr inbounds %"class.v8::base::Optional.94", %"class.v8::base::Optional.94"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #16
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::base::Optional.94", %"class.v8::base::Optional.94"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  %13 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %15, label %43, label %29

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* %19, i64 %21)
  %22 = load i8, i8* %4, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %23, label %48, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %26, label %43, label %29

29:                                               ; preds = %10, %27
  %30 = phi %"class.std::__1::basic_string"* [ %16, %10 ], [ %28, %27 ]
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #15
  br label %38

38:                                               ; preds = %35, %29
  %39 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #16
  %41 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  store i8 0, i8* %42, align 1
  store i8 0, i8* %40, align 8
  br label %59

43:                                               ; preds = %10, %27
  %44 = phi %"class.std::__1::basic_string"* [ %16, %10 ], [ %28, %27 ]
  %45 = phi i8* [ %13, %10 ], [ %24, %27 ]
  %46 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  %47 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #16
  store i8 1, i8* %45, align 8
  br label %59

48:                                               ; preds = %17
  br i1 %26, label %59, label %49

49:                                               ; preds = %48
  %50 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #15
  br label %58

58:                                               ; preds = %55, %49
  store i8 0, i8* %24, align 8
  br label %59

59:                                               ; preds = %38, %43, %48, %58
  %60 = load i8, i8* %4, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %59
  %63 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #15
  br label %70

70:                                               ; preds = %59, %62, %67
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #16
  ret void
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque21TypeArgumentInference5MatchEPNS1_14TypeExpressionEPKNS1_4TypeE(%"class.v8::internal::torque::TypeArgumentInference"*, %"struct.v8::internal::torque::TypeExpression"*, %"class.v8::internal::torque::Type"*) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = ptrtoint %"class.v8::internal::torque::Type"* %2 to i64
  %6 = icmp eq %"struct.v8::internal::torque::TypeExpression"* %1, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.v8::internal::torque::TypeExpression", %"struct.v8::internal::torque::TypeExpression"* %1, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 20
  %11 = bitcast %"struct.v8::internal::torque::TypeExpression"* %1 to %"struct.v8::internal::torque::BasicTypeExpression"*
  br i1 %10, label %12, label %84

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"struct.v8::internal::torque::TypeExpression", %"struct.v8::internal::torque::TypeExpression"* %1, i64 1
  %14 = bitcast %"struct.v8::internal::torque::TypeExpression"* %13 to %"class.std::__1::basic_string"**
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::torque::TypeExpression", %"struct.v8::internal::torque::TypeExpression"* %1, i64 1, i32 0, i32 1
  %17 = bitcast i32* %16 to %"class.std::__1::basic_string"**
  %18 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %19 = icmp eq %"class.std::__1::basic_string"* %15, %18
  br i1 %19, label %20, label %75

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"struct.v8::internal::torque::TypeExpression", %"struct.v8::internal::torque::TypeExpression"* %1, i64 1, i32 0, i32 2, i32 2
  %22 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %21 to i8*
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %75

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"struct.v8::internal::torque::TypeExpression", %"struct.v8::internal::torque::TypeExpression"* %1, i64 2
  %27 = bitcast %"struct.v8::internal::torque::TypeExpression"* %26 to %"class.std::__1::basic_string"*
  %28 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 1, i32 0
  %29 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table"* %28, %"class.std::__1::basic_string"* dereferenceable(24) %27)
  %30 = icmp eq %"struct.std::__1::__hash_node_base"* %29, null
  br i1 %30, label %75, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 5
  %33 = bitcast %"struct.std::__1::__hash_node_base"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp ult i64 %34, %36
  br i1 %37, label %84, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.v8::base::Optional"*, %"class.v8::base::Optional"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %40, i64 %34, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  %44 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %40, i64 %34, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %43, label %73, label %45

45:                                               ; preds = %38
  %46 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %44, align 8
  %47 = icmp eq %"class.v8::internal::torque::Type"* %46, %2
  br i1 %47, label %70, label %48

48:                                               ; preds = %45
  %49 = tail call i8* @_Znwm(i64 48) #18
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %49, i8** %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = bitcast i64* %51 to <2 x i64>*
  store <2 x i64> <i64 45, i64 -9223372036854775760>, <2 x i64>* %52, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* align 1 getelementptr inbounds ([46 x i8], [46 x i8]* @.str.5, i64 0, i64 0), i64 45, i1 false) #16
  %53 = getelementptr inbounds i8, i8* %49, i64 45
  store i8 0, i8* %53, align 1
  invoke void @_ZN2v88internal6torque21TypeArgumentInference4FailENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.v8::internal::torque::TypeArgumentInference"* %0, %"class.std::__1::basic_string"* nonnull %4)
          to label %54 unwind label %61

54:                                               ; preds = %48
  %55 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %84

59:                                               ; preds = %54
  %60 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %60) #15
  br label %84

61:                                               ; preds = %48
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %61
  %68 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %61, %67
  resume { i8*, i32 } %62

70:                                               ; preds = %45
  %71 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %40, i64 %34, i32 0, i32 0, i32 0, i32 1
  %72 = bitcast %union.anon* %71 to i64*
  store i64 %5, i64* %72, align 8
  br label %84

73:                                               ; preds = %38
  %74 = bitcast %"class.v8::internal::torque::Type"** %44 to i64*
  store i64 %5, i64* %74, align 8
  store i8 1, i8* %41, align 8
  br label %84

75:                                               ; preds = %25, %20, %12
  %76 = getelementptr inbounds %"struct.v8::internal::torque::TypeExpression", %"struct.v8::internal::torque::TypeExpression"* %1, i64 2, i32 0, i32 2, i32 2
  %77 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %76 to %"struct.v8::internal::torque::TypeExpression"***
  %78 = load %"struct.v8::internal::torque::TypeExpression"**, %"struct.v8::internal::torque::TypeExpression"*** %77, align 8
  %79 = getelementptr inbounds %"struct.v8::internal::torque::LineAndColumn", %"struct.v8::internal::torque::LineAndColumn"* %76, i64 1
  %80 = bitcast %"struct.v8::internal::torque::LineAndColumn"* %79 to %"struct.v8::internal::torque::TypeExpression"***
  %81 = load %"struct.v8::internal::torque::TypeExpression"**, %"struct.v8::internal::torque::TypeExpression"*** %80, align 8
  %82 = icmp eq %"struct.v8::internal::torque::TypeExpression"** %78, %81
  br i1 %82, label %84, label %83

83:                                               ; preds = %75
  tail call void @_ZN2v88internal6torque21TypeArgumentInference12MatchGenericEPNS1_19BasicTypeExpressionEPKNS1_4TypeE(%"class.v8::internal::torque::TypeArgumentInference"* %0, %"struct.v8::internal::torque::BasicTypeExpression"* nonnull %11, %"class.v8::internal::torque::Type"* %2)
  br label %84

84:                                               ; preds = %7, %3, %31, %73, %70, %59, %54, %83, %75
  ret void
}

; Function Attrs: ssp uwtable
define hidden void @_ZNK2v88internal6torque21TypeArgumentInference9GetResultEv(%"class.std::__1::vector.82"* noalias sret, %"class.v8::internal::torque::TypeArgumentInference"* nocapture readonly) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6, !prof !3

6:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #17
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %1, i64 0, i32 2
  %9 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %1, i64 0, i32 2, i32 0, i32 1
  %10 = bitcast %"class.v8::base::Optional"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 4
  %16 = bitcast %"class.std::__1::vector.82"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #16
  %17 = icmp eq i64 %14, 0
  %18 = inttoptr i64 %13 to %"class.v8::base::Optional"*
  %19 = inttoptr i64 %11 to %"class.v8::base::Optional"*
  br i1 %17, label %54, label %20

20:                                               ; preds = %7
  %21 = icmp ugt i64 %15, 2305843009213693951
  br i1 %21, label %22, label %25

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.82"* %0 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %23) #17
          to label %24 unwind label %43

24:                                               ; preds = %22
  unreachable

25:                                               ; preds = %20
  %26 = ashr exact i64 %14, 1
  %27 = invoke i8* @_Znwm(i64 %26) #18
          to label %28 unwind label %43

28:                                               ; preds = %25
  %29 = bitcast i8* %27 to %"class.v8::internal::torque::Type"**
  %30 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %0, i64 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::vector.82"* %0 to i8**
  store i8* %27, i8** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %29, i64 %15
  %33 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::torque::Type"** %32, %"class.v8::internal::torque::Type"*** %33, align 8
  %34 = bitcast %"class.v8::internal::torque::Type"*** %30 to i64*
  %35 = ptrtoint i8* %27 to i64
  %36 = add nsw i64 %15, -1
  %37 = getelementptr %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %29, i64 %36
  %38 = ptrtoint %"class.v8::internal::torque::Type"** %37 to i64
  %39 = sub i64 8, %35
  %40 = add i64 %39, %38
  %41 = and i64 %40, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 %41, i1 false)
  %42 = ptrtoint %"class.v8::internal::torque::Type"** %32 to i64
  store i64 %42, i64* %34, align 8
  br label %54

43:                                               ; preds = %25, %22
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %0, i64 0, i32 0, i32 0
  %46 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %45, align 8
  %47 = icmp eq %"class.v8::internal::torque::Type"** %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = ptrtoint %"class.v8::internal::torque::Type"** %46 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %0, i64 0, i32 0, i32 1
  %51 = bitcast %"class.v8::internal::torque::Type"*** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = bitcast %"class.v8::internal::torque::Type"** %46 to i8*
  tail call void @_ZdlPv(i8* %52) #15
  br label %53

53:                                               ; preds = %48, %43
  resume { i8*, i32 } %44

54:                                               ; preds = %7, %28
  %55 = phi %"class.v8::internal::torque::Type"** [ null, %7 ], [ %29, %28 ]
  %56 = icmp eq %"class.v8::base::Optional"* %18, %19
  br i1 %56, label %127, label %57

57:                                               ; preds = %54
  %58 = getelementptr %"class.v8::base::Optional", %"class.v8::base::Optional"* %19, i64 -1, i32 0, i32 0, i32 0, i32 0
  %59 = sub i64 0, %13
  %60 = getelementptr i8, i8* %58, i64 %59
  %61 = ptrtoint i8* %60 to i64
  %62 = lshr i64 %61, 4
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 7
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %78, label %66

66:                                               ; preds = %57, %66
  %67 = phi %"class.v8::internal::torque::Type"** [ %75, %66 ], [ %55, %57 ]
  %68 = phi %"class.v8::base::Optional"* [ %74, %66 ], [ %18, %57 ]
  %69 = phi i64 [ %76, %66 ], [ %64, %57 ]
  %70 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %68, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %71 = bitcast %"class.v8::internal::torque::Type"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.v8::internal::torque::Type"** %67 to i64*
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %68, i64 1
  %75 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %67, i64 1
  %76 = add i64 %69, -1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %66, !llvm.loop !4

78:                                               ; preds = %66, %57
  %79 = phi %"class.v8::internal::torque::Type"** [ %55, %57 ], [ %75, %66 ]
  %80 = phi %"class.v8::base::Optional"* [ %18, %57 ], [ %74, %66 ]
  %81 = icmp ult i8* %60, inttoptr (i64 112 to i8*)
  br i1 %81, label %127, label %82

82:                                               ; preds = %78, %82
  %83 = phi %"class.v8::internal::torque::Type"** [ %125, %82 ], [ %79, %78 ]
  %84 = phi %"class.v8::base::Optional"* [ %124, %82 ], [ %80, %78 ]
  %85 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %84, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %86 = bitcast %"class.v8::internal::torque::Type"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.v8::internal::torque::Type"** %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %83, i64 1
  %90 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %84, i64 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %91 = bitcast %"class.v8::internal::torque::Type"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.v8::internal::torque::Type"** %89 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %83, i64 2
  %95 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %84, i64 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %96 = bitcast %"class.v8::internal::torque::Type"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.v8::internal::torque::Type"** %94 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %83, i64 3
  %100 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %84, i64 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %101 = bitcast %"class.v8::internal::torque::Type"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.v8::internal::torque::Type"** %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %83, i64 4
  %105 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %84, i64 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %106 = bitcast %"class.v8::internal::torque::Type"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.v8::internal::torque::Type"** %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %83, i64 5
  %110 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %84, i64 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %111 = bitcast %"class.v8::internal::torque::Type"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.v8::internal::torque::Type"** %109 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %83, i64 6
  %115 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %84, i64 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %116 = bitcast %"class.v8::internal::torque::Type"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.v8::internal::torque::Type"** %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %83, i64 7
  %120 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %84, i64 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %121 = bitcast %"class.v8::internal::torque::Type"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.v8::internal::torque::Type"** %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::base::Optional", %"class.v8::base::Optional"* %84, i64 8
  %125 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %83, i64 8
  %126 = icmp eq %"class.v8::base::Optional"* %124, %19
  br i1 %126, label %127, label %82

127:                                              ; preds = %78, %82, %54
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque21TypeArgumentInference12MatchGenericEPNS1_19BasicTypeExpressionEPKNS1_4TypeE(%"class.v8::internal::torque::TypeArgumentInference"*, %"struct.v8::internal::torque::BasicTypeExpression"*, %"class.v8::internal::torque::Type"* nocapture readonly) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"struct.v8::internal::torque::QualifiedName", align 16
  %6 = alloca %"class.std::__1::vector.131", align 16
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.v8::internal::torque::MessageBuilder", align 8
  %10 = bitcast %"struct.v8::internal::torque::QualifiedName"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"struct.v8::internal::torque::BasicTypeExpression", %"struct.v8::internal::torque::BasicTypeExpression"* %1, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2ERKS8_(%"class.std::__1::vector.131"* nonnull %6, %"class.std::__1::vector.131"* dereferenceable(24) %11)
  %12 = getelementptr inbounds %"struct.v8::internal::torque::BasicTypeExpression", %"struct.v8::internal::torque::BasicTypeExpression"* %1, i64 0, i32 3
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %19, i64 24, i1 false)
  br label %27

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"struct.v8::internal::torque::BasicTypeExpression", %"struct.v8::internal::torque::BasicTypeExpression"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  invoke void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %22, i64 %24)
          to label %25 unwind label %64

25:                                               ; preds = %20
  %26 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  br label %27

27:                                               ; preds = %25, %17
  %28 = phi i8* [ %26, %25 ], [ %18, %17 ]
  %29 = bitcast %"class.std::__1::vector.131"* %6 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 16
  %31 = getelementptr inbounds %"struct.v8::internal::torque::QualifiedName", %"struct.v8::internal::torque::QualifiedName"* %5, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast %"struct.v8::internal::torque::QualifiedName"* %5 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %32, align 16
  %33 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.std::__1::basic_string"** %33 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = getelementptr inbounds %"struct.v8::internal::torque::QualifiedName", %"struct.v8::internal::torque::QualifiedName"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.std::__1::basic_string"** %36 to i64*
  store i64 %35, i64* %37, align 16
  %38 = bitcast %"class.std::__1::vector.131"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 0, i64 24, i1 false) #16
  %39 = getelementptr inbounds %"struct.v8::internal::torque::QualifiedName", %"struct.v8::internal::torque::QualifiedName"* %5, i64 0, i32 1
  %40 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %28, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #16
  %41 = invoke %"class.v8::internal::torque::GenericType"* @_ZN2v88internal6torque12Declarations23LookupUniqueGenericTypeERKNS1_13QualifiedNameE(%"struct.v8::internal::torque::QualifiedName"* nonnull dereferenceable(48) %5)
          to label %42 unwind label %93

42:                                               ; preds = %27
  %43 = getelementptr inbounds %"class.v8::internal::torque::Type", %"class.v8::internal::torque::Type"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.v8::internal::torque::Type", %"class.v8::internal::torque::Type"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %48 = load %"class.v8::internal::torque::GenericType"*, %"class.v8::internal::torque::GenericType"** %47, align 8
  %49 = icmp eq %"class.v8::internal::torque::GenericType"* %48, %41
  br i1 %49, label %111, label %50

50:                                               ; preds = %42, %46
  %51 = invoke i8* @_Znwm(i64 48) #18
          to label %52 unwind label %97

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %51, i8** %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast i64* %54 to <2 x i64>*
  store <2 x i64> <i64 43, i64 -9223372036854775760>, <2 x i64>* %55, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %51, i8* align 1 getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i64 43, i1 false) #16
  %56 = getelementptr inbounds i8, i8* %51, i64 43
  store i8 0, i8* %56, align 1
  invoke void @_ZN2v88internal6torque21TypeArgumentInference4FailENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.v8::internal::torque::TypeArgumentInference"* %0, %"class.std::__1::basic_string"* nonnull %8)
          to label %57 unwind label %101

57:                                               ; preds = %52
  %58 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %204

62:                                               ; preds = %57
  %63 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %63) #15
  br label %204

64:                                               ; preds = %20
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  %67 = extractvalue { i8*, i32 } %65, 1
  %68 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %6, i64 0, i32 0, i32 0
  %69 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %68, align 16
  %70 = icmp eq %"class.std::__1::basic_string"* %69, null
  br i1 %70, label %273, label %71

71:                                               ; preds = %64
  %72 = bitcast %"class.std::__1::basic_string"* %69 to i8*
  %73 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %6, i64 0, i32 0, i32 1
  %74 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %73, align 8
  %75 = icmp eq %"class.std::__1::basic_string"* %74, %69
  br i1 %75, label %91, label %76

76:                                               ; preds = %71, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %74, %71 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %85) #15
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %69
  br i1 %87, label %88, label %76

88:                                               ; preds = %86
  %89 = bitcast %"class.std::__1::vector.131"* %6 to i8**
  %90 = load i8*, i8** %89, align 16
  br label %91

91:                                               ; preds = %88, %71
  %92 = phi i8* [ %90, %88 ], [ %72, %71 ]
  store %"class.std::__1::basic_string"* %69, %"class.std::__1::basic_string"** %73, align 8
  call void @_ZdlPv(i8* %92) #15
  br label %273

93:                                               ; preds = %27
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  %96 = extractvalue { i8*, i32 } %94, 1
  br label %238

97:                                               ; preds = %50
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  %100 = extractvalue { i8*, i32 } %98, 1
  br label %238

101:                                              ; preds = %52
  %102 = landingpad { i8*, i32 }
          cleanup
  %103 = extractvalue { i8*, i32 } %102, 0
  %104 = extractvalue { i8*, i32 } %102, 1
  %105 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %238

109:                                              ; preds = %101
  %110 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %110) #15
  br label %238

111:                                              ; preds = %46
  %112 = getelementptr inbounds %"struct.v8::internal::torque::BasicTypeExpression", %"struct.v8::internal::torque::BasicTypeExpression"* %1, i64 0, i32 4
  %113 = getelementptr inbounds %"class.v8::internal::torque::Type", %"class.v8::internal::torque::Type"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %114 = getelementptr inbounds %"struct.v8::internal::torque::BasicTypeExpression", %"struct.v8::internal::torque::BasicTypeExpression"* %1, i64 0, i32 4, i32 0, i32 1
  %115 = bitcast %"struct.v8::internal::torque::TypeExpression"*** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.std::__1::vector.123"* %112 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %116, %118
  %120 = getelementptr inbounds %"class.v8::internal::torque::Type", %"class.v8::internal::torque::Type"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %121 = bitcast %"class.v8::internal::torque::Type"*** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.std::__1::vector.82"* %113 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = sub i64 %122, %124
  %126 = icmp eq i64 %119, %125
  %127 = inttoptr i64 %124 to %"class.v8::internal::torque::Type"**
  br i1 %126, label %128, label %133

128:                                              ; preds = %111
  %129 = icmp eq i64 %116, %118
  br i1 %129, label %204, label %130

130:                                              ; preds = %128
  %131 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %113, i64 0, i32 0, i32 0
  %132 = getelementptr inbounds %"class.v8::internal::torque::TypeArgumentInference", %"class.v8::internal::torque::TypeArgumentInference"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  br label %187

133:                                              ; preds = %111
  %134 = bitcast %"class.v8::internal::torque::MessageBuilder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %134) #16
  %135 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #16, !noalias !6
  invoke void @_ZN2v88internal6torque8ToStringIJRA93_KcEEENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEDpOT_(%"class.std::__1::basic_string"* nonnull sret %4, [93 x i8]* nonnull dereferenceable(93) @.str.7)
          to label %136 unwind label %166

136:                                              ; preds = %133
  invoke void @_ZN2v88internal6torque14MessageBuilderC1ERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_13TorqueMessage4KindE(%"class.v8::internal::torque::MessageBuilder"* nonnull %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i32 0)
          to label %137 unwind label %145

137:                                              ; preds = %136
  %138 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %140 = load i8, i8* %139, align 1, !noalias !6
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %155

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8, !noalias !6
  call void @_ZdlPv(i8* %144) #15
  br label %155

145:                                              ; preds = %136
  %146 = landingpad { i8*, i32 }
          cleanup
  %147 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1, !noalias !6
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8, !noalias !6
  call void @_ZdlPv(i8* %153) #15
  br label %154

154:                                              ; preds = %151, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #16, !noalias !6
  br label %168

155:                                              ; preds = %142, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #16, !noalias !6
  %156 = getelementptr inbounds %"struct.v8::internal::torque::BasicTypeExpression", %"struct.v8::internal::torque::BasicTypeExpression"* %1, i64 0, i32 0, i32 0, i32 2
  %157 = bitcast %"struct.v8::internal::torque::SourcePosition"* %156 to i8*
  %158 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %159 = load i8, i8* %158, align 8, !range !2
  %160 = icmp eq i8 %159, 0
  %161 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %162 = bitcast %"struct.v8::internal::torque::SourcePosition"* %161 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %162, i8* align 4 %157, i64 20, i1 false)
  br i1 %160, label %163, label %164

163:                                              ; preds = %155
  store i8 1, i8* %158, align 8
  br label %164

164:                                              ; preds = %155, %163
  invoke void @_ZNK2v88internal6torque14MessageBuilder5ThrowEv(%"class.v8::internal::torque::MessageBuilder"* nonnull %9) #17
          to label %165 unwind label %172

165:                                              ; preds = %164
  unreachable

166:                                              ; preds = %133
  %167 = landingpad { i8*, i32 }
          cleanup
  br label %168

168:                                              ; preds = %154, %166
  %169 = phi { i8*, i32 } [ %167, %166 ], [ %146, %154 ]
  %170 = extractvalue { i8*, i32 } %169, 0
  %171 = extractvalue { i8*, i32 } %169, 1
  br label %176

172:                                              ; preds = %164
  %173 = landingpad { i8*, i32 }
          cleanup
  %174 = extractvalue { i8*, i32 } %173, 0
  %175 = extractvalue { i8*, i32 } %173, 1
  call void @_ZN2v88internal6torque14MessageBuilderD2Ev(%"class.v8::internal::torque::MessageBuilder"* nonnull %9) #16
  br label %176

176:                                              ; preds = %172, %168
  %177 = phi i32 [ %175, %172 ], [ %171, %168 ]
  %178 = phi i8* [ %174, %172 ], [ %170, %168 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %134) #16
  br label %238

179:                                              ; preds = %196
  %180 = load i64, i64* %115, align 8
  %181 = load i64, i64* %117, align 8
  %182 = sub i64 %180, %181
  %183 = ashr exact i64 %182, 3
  %184 = icmp ult i64 %199, %183
  br i1 %184, label %185, label %204

185:                                              ; preds = %179
  %186 = load %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"*** %131, align 8
  br label %187

187:                                              ; preds = %185, %130
  %188 = phi %"class.v8::internal::torque::Type"** [ %127, %130 ], [ %186, %185 ]
  %189 = phi i64 [ %118, %130 ], [ %181, %185 ]
  %190 = phi i64 [ 0, %130 ], [ %199, %185 ]
  %191 = inttoptr i64 %189 to %"struct.v8::internal::torque::TypeExpression"**
  %192 = getelementptr inbounds %"struct.v8::internal::torque::TypeExpression"*, %"struct.v8::internal::torque::TypeExpression"** %191, i64 %190
  %193 = load %"struct.v8::internal::torque::TypeExpression"*, %"struct.v8::internal::torque::TypeExpression"** %192, align 8
  %194 = getelementptr inbounds %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %188, i64 %190
  %195 = load %"class.v8::internal::torque::Type"*, %"class.v8::internal::torque::Type"** %194, align 8
  invoke void @_ZN2v88internal6torque21TypeArgumentInference5MatchEPNS1_14TypeExpressionEPKNS1_4TypeE(%"class.v8::internal::torque::TypeArgumentInference"* %0, %"struct.v8::internal::torque::TypeExpression"* %193, %"class.v8::internal::torque::Type"* %195)
          to label %196 unwind label %200

196:                                              ; preds = %187
  %197 = load i8, i8* %132, align 8, !range !2
  %198 = icmp eq i8 %197, 0
  %199 = add nuw i64 %190, 1
  br i1 %198, label %179, label %204

200:                                              ; preds = %187
  %201 = landingpad { i8*, i32 }
          cleanup
  %202 = extractvalue { i8*, i32 } %201, 0
  %203 = extractvalue { i8*, i32 } %201, 1
  br label %238

204:                                              ; preds = %179, %196, %128, %62, %57
  %205 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %206 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %205, i64 0, i32 1, i32 0
  %207 = load i8, i8* %206, align 1
  %208 = icmp slt i8 %207, 0
  br i1 %208, label %209, label %212

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  call void @_ZdlPv(i8* %211) #15
  br label %212

212:                                              ; preds = %209, %204
  %213 = getelementptr inbounds %"struct.v8::internal::torque::QualifiedName", %"struct.v8::internal::torque::QualifiedName"* %5, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %213, align 16
  %215 = icmp eq %"class.std::__1::basic_string"* %214, null
  br i1 %215, label %237, label %216

216:                                              ; preds = %212
  %217 = bitcast %"class.std::__1::basic_string"* %214 to i8*
  %218 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %219 = icmp eq %"class.std::__1::basic_string"* %218, %214
  br i1 %219, label %235, label %220

220:                                              ; preds = %216, %230
  %221 = phi %"class.std::__1::basic_string"* [ %222, %230 ], [ %218, %216 ]
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %221, i64 -1
  %223 = bitcast %"class.std::__1::basic_string"* %222 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %227, label %230

227:                                              ; preds = %220
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %222, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load i8*, i8** %228, align 8
  call void @_ZdlPv(i8* %229) #15
  br label %230

230:                                              ; preds = %227, %220
  %231 = icmp eq %"class.std::__1::basic_string"* %222, %214
  br i1 %231, label %232, label %220

232:                                              ; preds = %230
  %233 = bitcast %"struct.v8::internal::torque::QualifiedName"* %5 to i8**
  %234 = load i8*, i8** %233, align 16
  br label %235

235:                                              ; preds = %232, %216
  %236 = phi i8* [ %234, %232 ], [ %217, %216 ]
  store %"class.std::__1::basic_string"* %214, %"class.std::__1::basic_string"** %31, align 8
  call void @_ZdlPv(i8* %236) #15
  br label %237

237:                                              ; preds = %212, %235
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #16
  ret void

238:                                              ; preds = %109, %101, %97, %200, %176, %93
  %239 = phi i32 [ %96, %93 ], [ %100, %97 ], [ %177, %176 ], [ %203, %200 ], [ %104, %101 ], [ %104, %109 ]
  %240 = phi i8* [ %95, %93 ], [ %99, %97 ], [ %178, %176 ], [ %202, %200 ], [ %103, %101 ], [ %103, %109 ]
  %241 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %241, i64 0, i32 1, i32 0
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %238
  %246 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load i8*, i8** %246, align 8
  call void @_ZdlPv(i8* %247) #15
  br label %248

248:                                              ; preds = %245, %238
  %249 = getelementptr inbounds %"struct.v8::internal::torque::QualifiedName", %"struct.v8::internal::torque::QualifiedName"* %5, i64 0, i32 0, i32 0, i32 0
  %250 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %249, align 16
  %251 = icmp eq %"class.std::__1::basic_string"* %250, null
  br i1 %251, label %273, label %252

252:                                              ; preds = %248
  %253 = bitcast %"class.std::__1::basic_string"* %250 to i8*
  %254 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %255 = icmp eq %"class.std::__1::basic_string"* %254, %250
  br i1 %255, label %271, label %256

256:                                              ; preds = %252, %266
  %257 = phi %"class.std::__1::basic_string"* [ %258, %266 ], [ %254, %252 ]
  %258 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %257, i64 -1
  %259 = bitcast %"class.std::__1::basic_string"* %258 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %260 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %259, i64 0, i32 1, i32 0
  %261 = load i8, i8* %260, align 1
  %262 = icmp slt i8 %261, 0
  br i1 %262, label %263, label %266

263:                                              ; preds = %256
  %264 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %258, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load i8*, i8** %264, align 8
  call void @_ZdlPv(i8* %265) #15
  br label %266

266:                                              ; preds = %263, %256
  %267 = icmp eq %"class.std::__1::basic_string"* %258, %250
  br i1 %267, label %268, label %256

268:                                              ; preds = %266
  %269 = bitcast %"struct.v8::internal::torque::QualifiedName"* %5 to i8**
  %270 = load i8*, i8** %269, align 16
  br label %271

271:                                              ; preds = %268, %252
  %272 = phi i8* [ %270, %268 ], [ %253, %252 ]
  store %"class.std::__1::basic_string"* %250, %"class.std::__1::basic_string"** %31, align 8
  call void @_ZdlPv(i8* %272) #15
  br label %273

273:                                              ; preds = %271, %248, %91, %64
  %274 = phi i32 [ %67, %64 ], [ %67, %91 ], [ %239, %248 ], [ %239, %271 ]
  %275 = phi i8* [ %66, %64 ], [ %66, %91 ], [ %240, %248 ], [ %240, %271 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #16
  %276 = insertvalue { i8*, i32 } undef, i8* %275, 0
  %277 = insertvalue { i8*, i32 } %276, i32 %274, 1
  resume { i8*, i32 } %277
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2ERKS8_(%"class.std::__1::vector.131"*, %"class.std::__1::vector.131"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = bitcast %"class.std::__1::vector.131"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #16
  %4 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.131"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %92, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 768614336404564650
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.131"* %0 to %"class.std::__1::__vector_base_common"*
  invoke void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #17
          to label %16 unwind label %62

16:                                               ; preds = %14
  unreachable

17:                                               ; preds = %12
  %18 = invoke i8* @_Znwm(i64 %9) #18
          to label %19 unwind label %62

19:                                               ; preds = %17
  %20 = bitcast i8* %18 to %"class.std::__1::basic_string"*
  %21 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %0, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"** %21 to i8**
  store i8* %18, i8** %22, align 8
  %23 = bitcast %"class.std::__1::vector.131"* %0 to i8**
  store i8* %18, i8** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 %10
  %25 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"** %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %28 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %29 = bitcast %"class.std::__1::basic_string"** %21 to i64*
  %30 = ptrtoint i8* %18 to i64
  %31 = icmp eq %"class.std::__1::basic_string"* %27, %28
  br i1 %31, label %60, label %32

32:                                               ; preds = %19
  %33 = bitcast i8* %18 to %"class.std::__1::basic_string"*
  br label %34

34:                                               ; preds = %50, %32
  %35 = phi i64 [ %30, %32 ], [ %54, %50 ]
  %36 = phi %"class.std::__1::basic_string"* [ %33, %32 ], [ %53, %50 ]
  %37 = phi %"class.std::__1::basic_string"* [ %27, %32 ], [ %51, %50 ]
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %34
  %43 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false)
  br label %50

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  invoke void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %36, i8* %47, i64 %49)
          to label %50 unwind label %56

50:                                               ; preds = %45, %42
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 1
  %52 = inttoptr i64 %35 to %"class.std::__1::basic_string"*
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 1
  %54 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  %55 = icmp eq %"class.std::__1::basic_string"* %51, %28
  br i1 %55, label %58, label %34

56:                                               ; preds = %45
  %57 = landingpad { i8*, i32 }
          cleanup
  store i64 %35, i64* %29, align 8
  br label %64

58:                                               ; preds = %50
  %59 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %60

60:                                               ; preds = %58, %19
  %61 = phi i64 [ %30, %19 ], [ %59, %58 ]
  store i64 %61, i64* %29, align 8
  br label %92

62:                                               ; preds = %17, %14
  %63 = landingpad { i8*, i32 }
          cleanup
  br label %64

64:                                               ; preds = %56, %62
  %65 = phi { i8*, i32 } [ %63, %62 ], [ %57, %56 ]
  %66 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %0, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %66, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %64
  %70 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  %71 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %0, i64 0, i32 0, i32 1
  %72 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %71, align 8
  %73 = icmp eq %"class.std::__1::basic_string"* %72, %67
  br i1 %73, label %89, label %74

74:                                               ; preds = %69, %84
  %75 = phi %"class.std::__1::basic_string"* [ %76, %84 ], [ %72, %69 ]
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 -1
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  tail call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %81, %74
  %85 = icmp eq %"class.std::__1::basic_string"* %76, %67
  br i1 %85, label %86, label %74

86:                                               ; preds = %84
  %87 = bitcast %"class.std::__1::vector.131"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %86, %69
  %90 = phi i8* [ %88, %86 ], [ %70, %69 ]
  store %"class.std::__1::basic_string"* %67, %"class.std::__1::basic_string"** %71, align 8
  tail call void @_ZdlPv(i8* %90) #15
  br label %91

91:                                               ; preds = %64, %89
  resume { i8*, i32 } %65

92:                                               ; preds = %60, %2
  ret void
}

declare %"class.v8::internal::torque::GenericType"* @_ZN2v88internal6torque12Declarations23LookupUniqueGenericTypeERKNS1_13QualifiedNameE(%"struct.v8::internal::torque::QualifiedName"* dereferenceable(48)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNK2v88internal6torque14MessageBuilder5ThrowEv(%"class.v8::internal::torque::MessageBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque14MessageBuilderD2Ev(%"class.v8::internal::torque::MessageBuilder"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  invoke void @_ZNK2v88internal6torque14MessageBuilder6ReportEv(%"class.v8::internal::torque::MessageBuilder"* %0)
          to label %2 unwind label %38

2:                                                ; preds = %1
  %3 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %4, align 8
  %6 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %5 to i8*
  %9 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %9, align 8
  %11 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"struct.v8::internal::torque::TorqueMessage"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %13, i64 -1
  %15 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #15
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.143"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"struct.v8::internal::torque::TorqueMessage"* %5, %"struct.v8::internal::torque::TorqueMessage"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %2, %27
  %30 = bitcast %"class.v8::internal::torque::MessageBuilder"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #15
  br label %37

37:                                               ; preds = %29, %34
  ret void

38:                                               ; preds = %1
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  %41 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 1
  tail call void @_ZNSt3__16vectorIN2v88internal6torque13TorqueMessageENS_9allocatorIS4_EEED2Ev(%"class.std::__1::vector.143"* %41) #16
  %42 = getelementptr inbounds %"class.v8::internal::torque::MessageBuilder", %"class.v8::internal::torque::MessageBuilder"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal6torque13TorqueMessageD2Ev(%"struct.v8::internal::torque::TorqueMessage"* %42) #16
  tail call void @__clang_call_terminate(i8* %40) #19
  unreachable
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) local_unnamed_addr #5 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #16
  tail call void @_ZSt9terminatev() #19
  unreachable
}

declare i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNK2v88internal6torque14MessageBuilder6ReportEv(%"class.v8::internal::torque::MessageBuilder"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal6torque13TorqueMessageENS_9allocatorIS4_EEED2Ev(%"class.std::__1::vector.143"*) unnamed_addr #4 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %2, align 8
  %4 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::vector.143", %"class.std::__1::vector.143"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.v8::internal::torque::TorqueMessage"*, %"struct.v8::internal::torque::TorqueMessage"** %7, align 8
  %9 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %8, %3
  br i1 %9, label %25, label %10

10:                                               ; preds = %5, %20
  %11 = phi %"struct.v8::internal::torque::TorqueMessage"* [ %12, %20 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %11, i64 -1
  %13 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %17, %10
  %21 = icmp eq %"struct.v8::internal::torque::TorqueMessage"* %12, %3
  br i1 %21, label %22, label %10

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.143"* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %5
  %26 = phi i8* [ %24, %22 ], [ %6, %5 ]
  store %"struct.v8::internal::torque::TorqueMessage"* %3, %"struct.v8::internal::torque::TorqueMessage"** %7, align 8
  tail call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %1, %25
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque13TorqueMessageD2Ev(%"struct.v8::internal::torque::TorqueMessage"*) unnamed_addr #7 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = bitcast %"struct.v8::internal::torque::TorqueMessage"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.v8::internal::torque::TorqueMessage", %"struct.v8::internal::torque::TorqueMessage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #15
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: inlinehint noreturn ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__throw_length_errorEPKc(i8*) local_unnamed_addr #8 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = tail call i8* @__cxa_allocate_exception(i64 16) #16
  %3 = bitcast i8* %2 to %"class.std::length_error"*
  invoke void @_ZNSt12length_errorC2EPKc(%"class.std::length_error"* %3, i8* %0)
          to label %4 unwind label %5

4:                                                ; preds = %1
  tail call void @__cxa_throw(i8* %2, i8* bitcast (i8** @_ZTISt12length_error to i8*), i8* bitcast (void (%"class.std::length_error"*)* @_ZNSt12length_errorD1Ev to i8*)) #17
  unreachable

5:                                                ; preds = %1
  %6 = landingpad { i8*, i32 }
          cleanup
  tail call void @__cxa_free_exception(i8* %2) #16
  resume { i8*, i32 } %6
}

declare i8* @__cxa_allocate_exception(i64) local_unnamed_addr

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt12length_errorC2EPKc(%"class.std::length_error"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::length_error", %"class.std::length_error"* %0, i64 0, i32 0
  tail call void @_ZNSt11logic_errorC2EPKc(%"class.std::logic_error"* %3, i8* %1)
  %4 = getelementptr inbounds %"class.std::length_error", %"class.std::length_error"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt12length_error, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @__cxa_free_exception(i8*) local_unnamed_addr

; Function Attrs: nounwind
declare void @_ZNSt12length_errorD1Ev(%"class.std::length_error"*) unnamed_addr #9

declare void @__cxa_throw(i8*, i8*, i8*) local_unnamed_addr

declare void @_ZNSt11logic_errorC2EPKc(%"class.std::logic_error"*, i8*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !11
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1)
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !11
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !11
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29)
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %251, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.8, i64 0, i64 0)) #17
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #18
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !12

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %259, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !11
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %259, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %245
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %249, %245 ]
  %81 = phi i64 [ %71, %77 ], [ %247, %245 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %246, %245 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %245, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %191, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %231, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br i1 %109, label %118, label %159

118:                                              ; preds = %104
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 2
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 3
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = zext i8 %122 to i64
  %128 = select i1 %123, i64 %126, i64 %127
  %129 = icmp eq i64 %114, %128
  br i1 %129, label %142, label %231

130:                                              ; preds = %155
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %157, i64 2
  %132 = bitcast %"struct.std::__1::__hash_node_base"* %131 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %157, i64 3
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = zext i8 %134 to i64
  %140 = select i1 %135, i64 %138, i64 %139
  %141 = icmp eq i64 %114, %140
  br i1 %141, label %142, label %231

142:                                              ; preds = %118, %130
  %143 = phi i1 [ %135, %130 ], [ %123, %118 ]
  %144 = phi %"struct.std::__1::__hash_node_base"* [ %131, %130 ], [ %119, %118 ]
  %145 = phi %"struct.std::__1::__hash_node_base"* [ %146, %130 ], [ %80, %118 ]
  %146 = phi %"struct.std::__1::__hash_node_base"* [ %157, %130 ], [ %102, %118 ]
  br i1 %117, label %155, label %147

147:                                              ; preds = %142
  %148 = bitcast %"struct.std::__1::__hash_node_base"* %144 to i8**
  %149 = load i8*, i8** %148, align 8
  %150 = bitcast %"struct.std::__1::__hash_node_base"* %144 to i8*
  %151 = select i1 %143, i8* %149, i8* %150
  %152 = load i8*, i8** %115, align 8
  %153 = tail call i32 @bcmp(i8* %152, i8* %151, i64 %114) #16
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %231

155:                                              ; preds = %147, %142
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %146, i64 0, i32 0
  %157 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %156, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base"* %157, null
  br i1 %158, label %231, label %130

159:                                              ; preds = %104
  br i1 %117, label %160, label %172

160:                                              ; preds = %159
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 2
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  %166 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 3
  %167 = bitcast %"struct.std::__1::__hash_node_base"* %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = zext i8 %164 to i64
  %170 = select i1 %165, i64 %168, i64 %169
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %186, label %231

172:                                              ; preds = %159
  %173 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  br label %192

174:                                              ; preds = %186
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %189, i64 2
  %176 = bitcast %"struct.std::__1::__hash_node_base"* %175 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %189, i64 3
  %181 = bitcast %"struct.std::__1::__hash_node_base"* %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = zext i8 %178 to i64
  %184 = select i1 %179, i64 %182, i64 %183
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %231

186:                                              ; preds = %160, %174
  %187 = phi %"struct.std::__1::__hash_node_base"* [ %189, %174 ], [ %102, %160 ]
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %187, i64 0, i32 0
  %189 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %188, align 8
  %190 = icmp eq %"struct.std::__1::__hash_node_base"* %189, null
  br i1 %190, label %231, label %174

191:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %245

192:                                              ; preds = %172, %227
  %193 = phi %"struct.std::__1::__hash_node_base"* [ %229, %227 ], [ %102, %172 ]
  %194 = phi %"struct.std::__1::__hash_node_base"* [ %193, %227 ], [ %80, %172 ]
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %193, i64 2
  %196 = bitcast %"struct.std::__1::__hash_node_base"* %195 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  %200 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %193, i64 3
  %201 = bitcast %"struct.std::__1::__hash_node_base"* %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = zext i8 %198 to i64
  %204 = select i1 %199, i64 %202, i64 %203
  %205 = icmp eq i64 %114, %204
  br i1 %205, label %206, label %231

206:                                              ; preds = %192
  %207 = load i64, i64* %173, align 8
  %208 = bitcast %"struct.std::__1::__hash_node_base"* %195 to i8**
  %209 = load i8*, i8** %208, align 8
  %210 = bitcast %"struct.std::__1::__hash_node_base"* %195 to i8*
  %211 = select i1 %199, i8* %209, i8* %210
  %212 = trunc i64 %207 to i8
  %213 = load i8, i8* %211, align 1
  %214 = icmp eq i8 %213, %212
  br i1 %214, label %215, label %231

215:                                              ; preds = %206, %222
  %216 = phi i64 [ %219, %222 ], [ %113, %206 ]
  %217 = phi i8* [ %220, %222 ], [ %116, %206 ]
  %218 = phi i8* [ %223, %222 ], [ %211, %206 ]
  %219 = add i64 %216, -1
  %220 = getelementptr inbounds i8, i8* %217, i64 1
  %221 = icmp eq i64 %219, 0
  br i1 %221, label %227, label %222

222:                                              ; preds = %215
  %223 = getelementptr inbounds i8, i8* %218, i64 1
  %224 = load i8, i8* %220, align 1
  %225 = load i8, i8* %223, align 1
  %226 = icmp eq i8 %224, %225
  br i1 %226, label %215, label %231

227:                                              ; preds = %215
  %228 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %193, i64 0, i32 0
  %229 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %228, align 8
  %230 = icmp eq %"struct.std::__1::__hash_node_base"* %229, null
  br i1 %230, label %231, label %192

231:                                              ; preds = %227, %192, %206, %174, %186, %130, %155, %147, %222, %160, %118, %100
  %232 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %80, %118 ], [ %80, %160 ], [ %194, %222 ], [ %145, %147 ], [ %146, %155 ], [ %146, %130 ], [ %187, %186 ], [ %187, %174 ], [ %193, %227 ], [ %194, %192 ], [ %194, %206 ]
  %233 = bitcast %"struct.std::__1::__hash_node_base"* %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %234, i64* %235, align 8
  %236 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %237 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %236, i64 %93
  %238 = bitcast %"struct.std::__1::__hash_node_base"** %237 to i64**
  %239 = load i64*, i64** %238, align 8
  %240 = load i64, i64* %239, align 8
  store i64 %240, i64* %233, align 8
  %241 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %242 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %241, i64 %93
  %243 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %242, align 8
  %244 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %243, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %244, align 8
  br label %245

245:                                              ; preds = %92, %231, %191
  %246 = phi %"struct.std::__1::__hash_node_base"* [ %80, %191 ], [ %82, %231 ], [ %80, %92 ]
  %247 = phi i64 [ %93, %191 ], [ %81, %231 ], [ %81, %92 ]
  %248 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %246, i64 0, i32 0
  %249 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %248, align 8
  %250 = icmp eq %"struct.std::__1::__hash_node_base"* %249, null
  br i1 %250, label %259, label %79

251:                                              ; preds = %2
  %252 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %253 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %252, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %252, align 8
  %254 = icmp eq %"struct.std::__1::__hash_node_base"** %253, null
  br i1 %254, label %257, label %255

255:                                              ; preds = %251
  %256 = bitcast %"struct.std::__1::__hash_node_base"** %253 to i8*
  tail call void @_ZdlPv(i8* %256) #15
  br label %257

257:                                              ; preds = %251, %255
  %258 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %258, align 8
  br label %259

259:                                              ; preds = %245, %70, %35, %257
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.151"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #16
  %20 = invoke i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %17, i64 %18)
          to label %24 unwind label %21

21:                                               ; preds = %5
  %22 = landingpad { i8*, i32 }
          catch i8* null
  %23 = extractvalue { i8*, i32 } %22, 0
  call void @__clang_call_terminate(i8* %23) #19
  unreachable

24:                                               ; preds = %5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #16
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %167, label %28

28:                                               ; preds = %24
  %29 = call i64 @llvm.ctpop.i64(i64 %26) #16, !range !11
  %30 = icmp ugt i64 %29, 1
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = add i64 %26, -1
  %33 = and i64 %32, %20
  br label %38

34:                                               ; preds = %28
  %35 = icmp ult i64 %20, %26
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = urem i64 %20, %26
  br label %38

38:                                               ; preds = %31, %34, %36
  %39 = phi i64 [ %33, %31 ], [ %37, %36 ], [ %20, %34 ]
  %40 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, i64 %39
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %167, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base"* %47, null
  br i1 %48, label %167, label %49

49:                                               ; preds = %45
  %50 = add i64 %26, -1
  %51 = load i8, i8* %8, align 1
  %52 = icmp slt i8 %51, 0
  %53 = load i64, i64* %13, align 8
  %54 = zext i8 %51 to i64
  %55 = select i1 %52, i64 %53, i64 %54
  %56 = load i8*, i8** %11, align 8
  %57 = select i1 %52, i8* %56, i8* %15
  %58 = icmp eq i64 %55, 0
  br i1 %30, label %59, label %115

59:                                               ; preds = %49, %111
  %60 = phi %"struct.std::__1::__hash_node_base"* [ %113, %111 ], [ %47, %49 ]
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %60, i64 1
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %20
  br i1 %64, label %72, label %65

65:                                               ; preds = %59
  %66 = icmp ult i64 %63, %26
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %63, %26
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %68, %67 ], [ %63, %65 ]
  %71 = icmp eq i64 %70, %39
  br i1 %71, label %72, label %167

72:                                               ; preds = %69, %59
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %60, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %60, i64 3
  %79 = bitcast %"struct.std::__1::__hash_node_base"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = zext i8 %76 to i64
  %82 = select i1 %77, i64 %80, i64 %81
  %83 = icmp eq i64 %82, %55
  br i1 %83, label %84, label %111

84:                                               ; preds = %72
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %73 to i8**
  %86 = load i8*, i8** %85, align 8
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %73 to i8*
  %88 = select i1 %77, i8* %86, i8* %87
  br i1 %77, label %107, label %89

89:                                               ; preds = %84
  br i1 %58, label %281, label %90

90:                                               ; preds = %89
  %91 = ptrtoint i8* %86 to i64
  %92 = trunc i64 %91 to i8
  %93 = load i8, i8* %57, align 1
  %94 = icmp eq i8 %93, %92
  br i1 %94, label %95, label %111

95:                                               ; preds = %90, %102
  %96 = phi i64 [ %99, %102 ], [ %81, %90 ]
  %97 = phi i8* [ %100, %102 ], [ %87, %90 ]
  %98 = phi i8* [ %103, %102 ], [ %57, %90 ]
  %99 = add i64 %96, -1
  %100 = getelementptr inbounds i8, i8* %97, i64 1
  %101 = icmp eq i64 %99, 0
  br i1 %101, label %281, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds i8, i8* %98, i64 1
  %104 = load i8, i8* %100, align 1
  %105 = load i8, i8* %103, align 1
  %106 = icmp eq i8 %104, %105
  br i1 %106, label %95, label %111

107:                                              ; preds = %84
  br i1 %58, label %281, label %108

108:                                              ; preds = %107
  %109 = call i32 @bcmp(i8* %88, i8* %57, i64 %55) #16
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %281, label %111

111:                                              ; preds = %102, %72, %90, %108
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %60, i64 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base"* %113, null
  br i1 %114, label %167, label %59

115:                                              ; preds = %49, %151
  %116 = phi %"struct.std::__1::__hash_node_base"* [ %153, %151 ], [ %47, %49 ]
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %116, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = icmp eq i64 %119, %20
  %121 = and i64 %119, %50
  %122 = icmp eq i64 %121, %39
  %123 = or i1 %120, %122
  br i1 %123, label %124, label %167

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %116, i64 2
  %126 = bitcast %"struct.std::__1::__hash_node_base"* %125 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %116, i64 3
  %131 = bitcast %"struct.std::__1::__hash_node_base"* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = zext i8 %128 to i64
  %134 = select i1 %129, i64 %132, i64 %133
  %135 = icmp eq i64 %134, %55
  br i1 %135, label %136, label %151

136:                                              ; preds = %124
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %125 to i8**
  %138 = load i8*, i8** %137, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %125 to i8*
  %140 = select i1 %129, i8* %138, i8* %139
  br i1 %129, label %147, label %141

141:                                              ; preds = %136
  br i1 %58, label %281, label %142

142:                                              ; preds = %141
  %143 = ptrtoint i8* %138 to i64
  %144 = trunc i64 %143 to i8
  %145 = load i8, i8* %57, align 1
  %146 = icmp eq i8 %145, %144
  br i1 %146, label %155, label %151

147:                                              ; preds = %136
  br i1 %58, label %281, label %148

148:                                              ; preds = %147
  %149 = call i32 @bcmp(i8* %140, i8* %57, i64 %55) #16
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %281, label %151

151:                                              ; preds = %162, %142, %124, %148
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %116, i64 0, i32 0
  %153 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %152, align 8
  %154 = icmp eq %"struct.std::__1::__hash_node_base"* %153, null
  br i1 %154, label %167, label %115

155:                                              ; preds = %142, %162
  %156 = phi i64 [ %159, %162 ], [ %133, %142 ]
  %157 = phi i8* [ %160, %162 ], [ %139, %142 ]
  %158 = phi i8* [ %163, %162 ], [ %57, %142 ]
  %159 = add i64 %156, -1
  %160 = getelementptr inbounds i8, i8* %157, i64 1
  %161 = icmp eq i64 %159, 0
  br i1 %161, label %281, label %162

162:                                              ; preds = %155
  %163 = getelementptr inbounds i8, i8* %158, i64 1
  %164 = load i8, i8* %160, align 1
  %165 = load i8, i8* %163, align 1
  %166 = icmp eq i8 %164, %165
  br i1 %166, label %155, label %151

167:                                              ; preds = %115, %151, %69, %111, %45, %38, %24
  %168 = phi i64 [ %39, %38 ], [ undef, %24 ], [ %39, %45 ], [ %39, %111 ], [ %39, %69 ], [ %39, %151 ], [ %39, %115 ]
  %169 = call i8* @_Znwm(i64 48) #18, !noalias !13
  %170 = getelementptr inbounds i8, i8* %169, i64 16
  %171 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %172 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %171, align 8, !noalias !13
  %173 = bitcast %"class.std::__1::basic_string"* %172 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = load i8, i8* %174, align 1, !noalias !13
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %179, label %177

177:                                              ; preds = %167
  %178 = bitcast %"class.std::__1::basic_string"* %172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* align 8 %178, i64 24, i1 false), !noalias !13
  br label %187

179:                                              ; preds = %167
  %180 = bitcast i8* %170 to %"class.std::__1::basic_string"*
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load i8*, i8** %181, align 8, !noalias !13
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %184 = load i64, i64* %183, align 8, !noalias !13
  invoke void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %180, i8* %182, i64 %184)
          to label %187 unwind label %185, !noalias !13

185:                                              ; preds = %179
  %186 = landingpad { i8*, i32 }
          cleanup
  call void @_ZdlPv(i8* nonnull %169) #15, !noalias !13
  resume { i8*, i32 } %186

187:                                              ; preds = %177, %179
  %188 = getelementptr inbounds i8, i8* %169, i64 40
  %189 = bitcast i8* %188 to i64*
  store i64 0, i64* %189, align 8, !noalias !13
  %190 = getelementptr inbounds i8, i8* %169, i64 8
  %191 = bitcast i8* %190 to i64*
  store i64 %20, i64* %191, align 8, !noalias !13
  %192 = bitcast i8* %169 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %192, align 8, !noalias !13
  %193 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = add i64 %194, 1
  %196 = uitofp i64 %195 to float
  %197 = uitofp i64 %26 to float
  %198 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %199 = load float, float* %198, align 4
  %200 = fmul float %199, %197
  %201 = fcmp olt float %200, %196
  %202 = or i1 %27, %201
  br i1 %202, label %203, label %236

203:                                              ; preds = %187
  %204 = shl i64 %26, 1
  %205 = icmp ult i64 %26, 3
  %206 = call i64 @llvm.ctpop.i64(i64 %26) #16, !range !11
  %207 = icmp ugt i64 %206, 1
  %208 = or i1 %205, %207
  %209 = zext i1 %208 to i64
  %210 = or i64 %204, %209
  %211 = fdiv float %196, %199
  %212 = call float @llvm.ceil.f32(float %211) #16
  %213 = fptoui float %212 to i64
  %214 = icmp ult i64 %210, %213
  %215 = select i1 %214, i64 %213, i64 %210
  invoke void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %215)
          to label %216 unwind label %227

216:                                              ; preds = %203
  %217 = load i64, i64* %25, align 8
  %218 = call i64 @llvm.ctpop.i64(i64 %217) #16, !range !11
  %219 = icmp ugt i64 %218, 1
  br i1 %219, label %223, label %220

220:                                              ; preds = %216
  %221 = add i64 %217, -1
  %222 = and i64 %221, %20
  br label %236

223:                                              ; preds = %216
  %224 = icmp ult i64 %20, %217
  br i1 %224, label %236, label %225

225:                                              ; preds = %223
  %226 = urem i64 %20, %217
  br label %236

227:                                              ; preds = %203
  %228 = landingpad { i8*, i32 }
          cleanup
  %229 = getelementptr inbounds i8, i8* %169, i64 39
  %230 = load i8, i8* %229, align 1
  %231 = icmp slt i8 %230, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %227
  %233 = bitcast i8* %170 to i8**
  %234 = load i8*, i8** %233, align 8
  call void @_ZdlPv(i8* %234) #15
  br label %235

235:                                              ; preds = %227, %232
  call void @_ZdlPv(i8* nonnull %169) #15
  resume { i8*, i32 } %228

236:                                              ; preds = %225, %223, %220, %187
  %237 = phi i64 [ %168, %187 ], [ %222, %220 ], [ %226, %225 ], [ %20, %223 ]
  %238 = phi i64 [ %26, %187 ], [ %217, %220 ], [ %217, %225 ], [ %217, %223 ]
  %239 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %240 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %239, align 8
  %241 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %240, i64 %237
  %242 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %241, align 8
  %243 = icmp eq %"struct.std::__1::__hash_node_base"* %242, null
  br i1 %243, label %244, label %270

244:                                              ; preds = %236
  %245 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %246 = bitcast %"struct.std::__1::__hash_node_base"* %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast i8* %169 to i64*
  store i64 %247, i64* %248, align 8
  %249 = bitcast %"struct.std::__1::__hash_node_base"* %245 to i8**
  store i8* %169, i8** %249, align 8
  store %"struct.std::__1::__hash_node_base"* %245, %"struct.std::__1::__hash_node_base"** %241, align 8
  %250 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %192, align 8
  %251 = icmp eq %"struct.std::__1::__hash_node_base"* %250, null
  br i1 %251, label %277, label %252

252:                                              ; preds = %244
  %253 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %250, i64 1
  %254 = bitcast %"struct.std::__1::__hash_node_base"* %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = call i64 @llvm.ctpop.i64(i64 %238) #16, !range !11
  %257 = icmp ugt i64 %256, 1
  br i1 %257, label %261, label %258

258:                                              ; preds = %252
  %259 = add i64 %238, -1
  %260 = and i64 %255, %259
  br label %265

261:                                              ; preds = %252
  %262 = icmp ult i64 %255, %238
  br i1 %262, label %265, label %263

263:                                              ; preds = %261
  %264 = urem i64 %255, %238
  br label %265

265:                                              ; preds = %258, %261, %263
  %266 = phi i64 [ %260, %258 ], [ %264, %263 ], [ %255, %261 ]
  %267 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %239, align 8
  %268 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %267, i64 %266
  %269 = bitcast %"struct.std::__1::__hash_node_base"** %268 to i8**
  br label %275

270:                                              ; preds = %236
  %271 = bitcast %"struct.std::__1::__hash_node_base"* %242 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = bitcast i8* %169 to i64*
  store i64 %272, i64* %273, align 8
  %274 = bitcast %"struct.std::__1::__hash_node_base"* %242 to i8**
  br label %275

275:                                              ; preds = %265, %270
  %276 = phi i8** [ %274, %270 ], [ %269, %265 ]
  store i8* %169, i8** %276, align 8
  br label %277

277:                                              ; preds = %275, %244
  %278 = bitcast i8* %169 to %"struct.std::__1::__hash_node_base"*
  %279 = load i64, i64* %193, align 8
  %280 = add i64 %279, 1
  store i64 %280, i64* %193, align 8
  br label %281

281:                                              ; preds = %141, %147, %148, %155, %108, %107, %89, %95, %277
  %282 = phi i8 [ 1, %277 ], [ 0, %95 ], [ 0, %89 ], [ 0, %107 ], [ 0, %108 ], [ 0, %155 ], [ 0, %148 ], [ 0, %147 ], [ 0, %141 ]
  %283 = phi %"struct.std::__1::__hash_node_base"* [ %278, %277 ], [ %60, %95 ], [ %60, %89 ], [ %60, %107 ], [ %60, %108 ], [ %116, %155 ], [ %116, %148 ], [ %116, %147 ], [ %116, %141 ]
  %284 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %283, 0
  %285 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %284, i8 %282, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %285
}

; Function Attrs: inlinehint ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #13 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %120

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %79

7:                                                ; preds = %5
  %8 = icmp ugt i64 %2, 8
  br i1 %8, label %9, label %33

9:                                                ; preds = %7
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = getelementptr inbounds i8, i8* %1, i64 %2
  %13 = getelementptr inbounds i8, i8* %12, i64 -8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = add i64 %15, %2
  %17 = and i64 %2, 4294967295
  %18 = lshr i64 %16, %17
  %19 = sub nuw nsw i64 64, %2
  %20 = and i64 %19, 4294967295
  %21 = shl i64 %16, %20
  %22 = or i64 %21, %18
  %23 = xor i64 %22, %11
  %24 = mul i64 %23, -7070675565921424023
  %25 = lshr i64 %24, 47
  %26 = xor i64 %24, %22
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, -7070675565921424023
  %29 = lshr i64 %28, 47
  %30 = xor i64 %29, %28
  %31 = mul i64 %30, -7070675565921424023
  %32 = xor i64 %31, %15
  br label %399

33:                                               ; preds = %7
  %34 = icmp ugt i64 %2, 3
  br i1 %34, label %35, label %55

35:                                               ; preds = %33
  %36 = bitcast i8* %1 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = getelementptr inbounds i8, i8* %1, i64 %2
  %39 = getelementptr inbounds i8, i8* %38, i64 -4
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 1
  %42 = shl i32 %37, 3
  %43 = zext i32 %42 to i64
  %44 = add nuw nsw i64 %43, %2
  %45 = zext i32 %41 to i64
  %46 = xor i64 %44, %45
  %47 = mul i64 %46, -7070675565921424023
  %48 = lshr i64 %47, 47
  %49 = xor i64 %47, %45
  %50 = xor i64 %49, %48
  %51 = mul i64 %50, -7070675565921424023
  %52 = lshr i64 %51, 47
  %53 = xor i64 %52, %51
  %54 = mul i64 %53, -7070675565921424023
  br label %399

55:                                               ; preds = %33
  %56 = icmp eq i64 %2, 0
  br i1 %56, label %399, label %57

57:                                               ; preds = %55
  %58 = load i8, i8* %1, align 1
  %59 = lshr i64 %2, 1
  %60 = getelementptr inbounds i8, i8* %1, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = add nsw i64 %2, -1
  %63 = getelementptr inbounds i8, i8* %1, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %58 to i64
  %66 = zext i8 %61 to i64
  %67 = shl nuw nsw i64 %66, 8
  %68 = or i64 %67, %65
  %69 = zext i8 %64 to i64
  %70 = shl nuw nsw i64 %69, 2
  %71 = add nuw nsw i64 %70, %2
  %72 = mul i64 %68, -7286425919675154353
  %73 = and i64 %71, 4294967295
  %74 = mul i64 %73, -3942382747735136937
  %75 = xor i64 %74, %72
  %76 = lshr i64 %75, 47
  %77 = xor i64 %76, %75
  %78 = mul i64 %77, -7286425919675154353
  br label %399

79:                                               ; preds = %5
  %80 = bitcast i8* %1 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = mul i64 %81, -5435081209227447693
  %83 = getelementptr inbounds i8, i8* %1, i64 8
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 1
  %86 = getelementptr inbounds i8, i8* %1, i64 %2
  %87 = getelementptr inbounds i8, i8* %86, i64 -8
  %88 = bitcast i8* %87 to i64*
  %89 = load i64, i64* %88, align 1
  %90 = mul i64 %89, -7286425919675154353
  %91 = getelementptr inbounds i8, i8* %86, i64 -16
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %92, align 1
  %94 = mul i64 %93, -4348849565147123417
  %95 = sub i64 %82, %85
  %96 = lshr i64 %95, 43
  %97 = shl i64 %95, 21
  %98 = or i64 %97, %96
  %99 = lshr i64 %90, 30
  %100 = mul i64 %89, -4737503975807385600
  %101 = or i64 %99, %100
  %102 = add i64 %94, %98
  %103 = add i64 %102, %101
  %104 = xor i64 %85, -3942382747735136937
  %105 = lshr i64 %104, 20
  %106 = shl i64 %104, 44
  %107 = or i64 %106, %105
  %108 = add i64 %82, %2
  %109 = sub i64 %108, %90
  %110 = add i64 %109, %107
  %111 = xor i64 %103, %110
  %112 = mul i64 %111, -7070675565921424023
  %113 = lshr i64 %112, 47
  %114 = xor i64 %112, %110
  %115 = xor i64 %114, %113
  %116 = mul i64 %115, -7070675565921424023
  %117 = lshr i64 %116, 47
  %118 = xor i64 %117, %116
  %119 = mul i64 %118, -7070675565921424023
  br label %399

120:                                              ; preds = %3
  %121 = icmp ult i64 %2, 65
  br i1 %121, label %122, label %202

122:                                              ; preds = %120
  %123 = getelementptr inbounds i8, i8* %1, i64 24
  %124 = bitcast i8* %123 to i64*
  %125 = load i64, i64* %124, align 1
  %126 = bitcast i8* %1 to i64*
  %127 = load i64, i64* %126, align 1
  %128 = getelementptr inbounds i8, i8* %1, i64 %2
  %129 = getelementptr inbounds i8, i8* %128, i64 -16
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 1
  %132 = add i64 %131, %2
  %133 = mul i64 %132, -4348849565147123417
  %134 = add i64 %133, %127
  %135 = add i64 %134, %125
  %136 = lshr i64 %135, 52
  %137 = shl i64 %135, 12
  %138 = or i64 %137, %136
  %139 = lshr i64 %134, 37
  %140 = shl i64 %134, 27
  %141 = or i64 %140, %139
  %142 = getelementptr inbounds i8, i8* %1, i64 8
  %143 = bitcast i8* %142 to i64*
  %144 = load i64, i64* %143, align 1
  %145 = add i64 %134, %144
  %146 = lshr i64 %145, 7
  %147 = shl i64 %145, 57
  %148 = or i64 %147, %146
  %149 = getelementptr inbounds i8, i8* %1, i64 16
  %150 = bitcast i8* %149 to i64*
  %151 = load i64, i64* %150, align 1
  %152 = add i64 %145, %151
  %153 = lshr i64 %152, 31
  %154 = shl i64 %152, 33
  %155 = or i64 %154, %153
  %156 = add i64 %148, %141
  %157 = add i64 %156, %138
  %158 = add i64 %157, %155
  %159 = getelementptr inbounds i8, i8* %128, i64 -32
  %160 = bitcast i8* %159 to i64*
  %161 = load i64, i64* %160, align 1
  %162 = add i64 %161, %151
  %163 = getelementptr inbounds i8, i8* %128, i64 -8
  %164 = bitcast i8* %163 to i64*
  %165 = load i64, i64* %164, align 1
  %166 = add i64 %165, %125
  %167 = add i64 %166, %162
  %168 = lshr i64 %167, 52
  %169 = shl i64 %167, 12
  %170 = or i64 %169, %168
  %171 = lshr i64 %162, 37
  %172 = shl i64 %162, 27
  %173 = or i64 %172, %171
  %174 = getelementptr inbounds i8, i8* %128, i64 -24
  %175 = bitcast i8* %174 to i64*
  %176 = load i64, i64* %175, align 1
  %177 = add i64 %176, %162
  %178 = lshr i64 %177, 7
  %179 = shl i64 %177, 57
  %180 = or i64 %179, %178
  %181 = add i64 %177, %131
  %182 = add i64 %181, %166
  %183 = lshr i64 %181, 31
  %184 = shl i64 %181, 33
  %185 = or i64 %184, %183
  %186 = add i64 %152, %125
  %187 = add i64 %186, %173
  %188 = add i64 %187, %180
  %189 = add i64 %188, %170
  %190 = add i64 %189, %185
  %191 = mul i64 %190, -7286425919675154353
  %192 = add i64 %182, %158
  %193 = mul i64 %192, -4348849565147123417
  %194 = add i64 %191, %193
  %195 = lshr i64 %194, 47
  %196 = xor i64 %195, %194
  %197 = mul i64 %196, -4348849565147123417
  %198 = add i64 %197, %158
  %199 = lshr i64 %198, 47
  %200 = xor i64 %199, %198
  %201 = mul i64 %200, -7286425919675154353
  br label %399

202:                                              ; preds = %120
  %203 = getelementptr inbounds i8, i8* %1, i64 %2
  %204 = getelementptr inbounds i8, i8* %203, i64 -40
  %205 = bitcast i8* %204 to i64*
  %206 = load i64, i64* %205, align 1
  %207 = getelementptr inbounds i8, i8* %203, i64 -16
  %208 = bitcast i8* %207 to i64*
  %209 = load i64, i64* %208, align 1
  %210 = getelementptr inbounds i8, i8* %203, i64 -56
  %211 = bitcast i8* %210 to i64*
  %212 = load i64, i64* %211, align 1
  %213 = add i64 %212, %209
  %214 = getelementptr inbounds i8, i8* %203, i64 -48
  %215 = bitcast i8* %214 to i64*
  %216 = load i64, i64* %215, align 1
  %217 = add i64 %216, %2
  %218 = getelementptr inbounds i8, i8* %203, i64 -24
  %219 = bitcast i8* %218 to i64*
  %220 = load i64, i64* %219, align 1
  %221 = xor i64 %220, %217
  %222 = mul i64 %221, -7070675565921424023
  %223 = lshr i64 %222, 47
  %224 = xor i64 %222, %220
  %225 = xor i64 %224, %223
  %226 = mul i64 %225, -7070675565921424023
  %227 = lshr i64 %226, 47
  %228 = xor i64 %227, %226
  %229 = mul i64 %228, -7070675565921424023
  %230 = getelementptr inbounds i8, i8* %203, i64 -64
  %231 = bitcast i8* %230 to i64*
  %232 = load i64, i64* %231, align 1
  %233 = add i64 %232, %2
  %234 = add i64 %206, %233
  %235 = add i64 %234, %229
  %236 = lshr i64 %235, 21
  %237 = shl i64 %235, 43
  %238 = or i64 %237, %236
  %239 = add i64 %233, %212
  %240 = add i64 %239, %216
  %241 = lshr i64 %240, 44
  %242 = shl i64 %240, 20
  %243 = or i64 %242, %241
  %244 = add i64 %240, %206
  %245 = add i64 %243, %233
  %246 = add i64 %245, %238
  %247 = getelementptr inbounds i8, i8* %203, i64 -32
  %248 = add i64 %213, -5435081209227447693
  %249 = bitcast i8* %247 to i64*
  %250 = load i64, i64* %249, align 1
  %251 = getelementptr inbounds i8, i8* %247, i64 24
  %252 = bitcast i8* %251 to i64*
  %253 = load i64, i64* %252, align 1
  %254 = add i64 %248, %250
  %255 = add i64 %254, %206
  %256 = add i64 %255, %253
  %257 = lshr i64 %256, 21
  %258 = shl i64 %256, 43
  %259 = or i64 %258, %257
  %260 = add i64 %254, %220
  %261 = add i64 %260, %209
  %262 = lshr i64 %261, 44
  %263 = shl i64 %261, 20
  %264 = or i64 %263, %262
  %265 = add i64 %261, %253
  %266 = add i64 %264, %254
  %267 = add i64 %266, %259
  %268 = mul i64 %206, -5435081209227447693
  %269 = bitcast i8* %1 to i64*
  %270 = load i64, i64* %269, align 1
  %271 = add i64 %270, %268
  %272 = add i64 %2, -1
  %273 = and i64 %272, -64
  br label %274

274:                                              ; preds = %362, %202
  %275 = phi i64 [ %270, %202 ], [ %364, %362 ]
  %276 = phi i64 [ %267, %202 ], [ %358, %362 ]
  %277 = phi i64 [ %265, %202 ], [ %356, %362 ]
  %278 = phi i64 [ %244, %202 ], [ %334, %362 ]
  %279 = phi i64 [ %246, %202 ], [ %336, %362 ]
  %280 = phi i64 [ %229, %202 ], [ %304, %362 ]
  %281 = phi i64 [ %271, %202 ], [ %314, %362 ]
  %282 = phi i64 [ %273, %202 ], [ %360, %362 ]
  %283 = phi i8* [ %1, %202 ], [ %359, %362 ]
  %284 = phi i64 [ %213, %202 ], [ %309, %362 ]
  %285 = getelementptr inbounds i8, i8* %283, i64 8
  %286 = bitcast i8* %285 to i64*
  %287 = load i64, i64* %286, align 1
  %288 = add i64 %281, %278
  %289 = add i64 %288, %284
  %290 = add i64 %289, %287
  %291 = lshr i64 %290, 37
  %292 = shl i64 %290, 27
  %293 = or i64 %292, %291
  %294 = mul i64 %293, -5435081209227447693
  %295 = add i64 %284, %279
  %296 = getelementptr inbounds i8, i8* %283, i64 48
  %297 = bitcast i8* %296 to i64*
  %298 = load i64, i64* %297, align 1
  %299 = add i64 %295, %298
  %300 = lshr i64 %299, 42
  %301 = shl i64 %299, 22
  %302 = or i64 %301, %300
  %303 = mul i64 %302, -5435081209227447693
  %304 = xor i64 %294, %276
  %305 = getelementptr inbounds i8, i8* %283, i64 40
  %306 = bitcast i8* %305 to i64*
  %307 = load i64, i64* %306, align 1
  %308 = add i64 %307, %278
  %309 = add i64 %308, %303
  %310 = add i64 %280, %277
  %311 = lshr i64 %310, 33
  %312 = shl i64 %310, 31
  %313 = or i64 %312, %311
  %314 = mul i64 %313, -5435081209227447693
  %315 = mul i64 %279, -5435081209227447693
  %316 = getelementptr inbounds i8, i8* %283, i64 16
  %317 = bitcast i8* %316 to i64*
  %318 = load i64, i64* %317, align 1
  %319 = getelementptr inbounds i8, i8* %283, i64 24
  %320 = bitcast i8* %319 to i64*
  %321 = load i64, i64* %320, align 1
  %322 = add i64 %275, %315
  %323 = add i64 %322, %277
  %324 = add i64 %323, %321
  %325 = add i64 %324, %304
  %326 = lshr i64 %325, 21
  %327 = shl i64 %325, 43
  %328 = or i64 %327, %326
  %329 = add i64 %322, %287
  %330 = add i64 %329, %318
  %331 = lshr i64 %330, 44
  %332 = shl i64 %330, 20
  %333 = or i64 %332, %331
  %334 = add i64 %330, %321
  %335 = add i64 %333, %322
  %336 = add i64 %335, %328
  %337 = getelementptr inbounds i8, i8* %283, i64 32
  %338 = add i64 %314, %276
  %339 = add i64 %309, %318
  %340 = bitcast i8* %337 to i64*
  %341 = load i64, i64* %340, align 1
  %342 = getelementptr inbounds i8, i8* %283, i64 56
  %343 = bitcast i8* %342 to i64*
  %344 = load i64, i64* %343, align 1
  %345 = add i64 %338, %341
  %346 = add i64 %339, %345
  %347 = add i64 %346, %344
  %348 = lshr i64 %347, 21
  %349 = shl i64 %347, 43
  %350 = or i64 %349, %348
  %351 = add i64 %345, %307
  %352 = add i64 %351, %298
  %353 = lshr i64 %352, 44
  %354 = shl i64 %352, 20
  %355 = or i64 %354, %353
  %356 = add i64 %352, %344
  %357 = add i64 %355, %345
  %358 = add i64 %357, %350
  %359 = getelementptr inbounds i8, i8* %283, i64 64
  %360 = add i64 %282, -64
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %365, label %362

362:                                              ; preds = %274
  %363 = bitcast i8* %359 to i64*
  %364 = load i64, i64* %363, align 1
  br label %274

365:                                              ; preds = %274
  %366 = xor i64 %356, %334
  %367 = mul i64 %366, -7070675565921424023
  %368 = lshr i64 %367, 47
  %369 = xor i64 %367, %356
  %370 = xor i64 %369, %368
  %371 = mul i64 %370, -7070675565921424023
  %372 = lshr i64 %371, 47
  %373 = xor i64 %372, %371
  %374 = mul i64 %373, -7070675565921424023
  %375 = lshr i64 %309, 47
  %376 = xor i64 %375, %309
  %377 = mul i64 %376, -5435081209227447693
  %378 = add i64 %377, %304
  %379 = add i64 %378, %374
  %380 = xor i64 %358, %336
  %381 = mul i64 %380, -7070675565921424023
  %382 = lshr i64 %381, 47
  %383 = xor i64 %381, %358
  %384 = xor i64 %383, %382
  %385 = mul i64 %384, -7070675565921424023
  %386 = lshr i64 %385, 47
  %387 = xor i64 %386, %385
  %388 = mul i64 %387, -7070675565921424023
  %389 = add i64 %388, %314
  %390 = xor i64 %389, %379
  %391 = mul i64 %390, -7070675565921424023
  %392 = lshr i64 %391, 47
  %393 = xor i64 %391, %389
  %394 = xor i64 %393, %392
  %395 = mul i64 %394, -7070675565921424023
  %396 = lshr i64 %395, 47
  %397 = xor i64 %396, %395
  %398 = mul i64 %397, -7070675565921424023
  br label %399

399:                                              ; preds = %57, %55, %35, %9, %365, %122, %79
  %400 = phi i64 [ %119, %79 ], [ %201, %122 ], [ %398, %365 ], [ %32, %9 ], [ %54, %35 ], [ %78, %57 ], [ -7286425919675154353, %55 ]
  ret i64 %400
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #16
  %17 = invoke i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15)
          to label %21 unwind label %18

18:                                               ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #19
  unreachable

21:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #16
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %164, label %25

25:                                               ; preds = %21
  %26 = call i64 @llvm.ctpop.i64(i64 %23) #16, !range !11
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %23, -1
  %30 = and i64 %29, %17
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %17, %23
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %17, %23
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %17, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %164, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %164, label %46

46:                                               ; preds = %42
  %47 = add i64 %23, -1
  %48 = load i8, i8* %5, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i64, i64* %10, align 8
  %51 = zext i8 %48 to i64
  %52 = select i1 %49, i64 %50, i64 %51
  %53 = load i8*, i8** %8, align 8
  %54 = select i1 %49, i8* %53, i8* %12
  %55 = icmp eq i64 %52, 0
  br i1 %27, label %56, label %112

56:                                               ; preds = %46, %108
  %57 = phi %"struct.std::__1::__hash_node_base"* [ %110, %108 ], [ %44, %46 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %17
  br i1 %61, label %69, label %62

62:                                               ; preds = %56
  %63 = icmp ult i64 %60, %23
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %60, %23
  br label %66

66:                                               ; preds = %64, %62
  %67 = phi i64 [ %65, %64 ], [ %60, %62 ]
  %68 = icmp eq i64 %67, %36
  br i1 %68, label %108, label %164

69:                                               ; preds = %56
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = icmp eq i64 %79, %52
  br i1 %80, label %81, label %108

81:                                               ; preds = %69
  %82 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8*
  %85 = select i1 %74, i8* %83, i8* %84
  br i1 %74, label %104, label %86

86:                                               ; preds = %81
  br i1 %55, label %164, label %87

87:                                               ; preds = %86
  %88 = ptrtoint i8* %83 to i64
  %89 = trunc i64 %88 to i8
  %90 = load i8, i8* %54, align 1
  %91 = icmp eq i8 %90, %89
  br i1 %91, label %92, label %108

92:                                               ; preds = %87, %99
  %93 = phi i64 [ %96, %99 ], [ %78, %87 ]
  %94 = phi i8* [ %97, %99 ], [ %84, %87 ]
  %95 = phi i8* [ %100, %99 ], [ %54, %87 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %164, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %108

104:                                              ; preds = %81
  br i1 %55, label %164, label %105

105:                                              ; preds = %104
  %106 = call i32 @bcmp(i8* %85, i8* %54, i64 %52) #16
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %164, label %108

108:                                              ; preds = %99, %105, %87, %69, %66
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %109, align 8
  %111 = icmp eq %"struct.std::__1::__hash_node_base"* %110, null
  br i1 %111, label %164, label %56

112:                                              ; preds = %46, %160
  %113 = phi %"struct.std::__1::__hash_node_base"* [ %162, %160 ], [ %44, %46 ]
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %113, i64 1
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %116, %17
  br i1 %117, label %121, label %118

118:                                              ; preds = %112
  %119 = and i64 %116, %47
  %120 = icmp eq i64 %119, %36
  br i1 %120, label %160, label %164

121:                                              ; preds = %112
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %113, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %113, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %131, %52
  br i1 %132, label %133, label %160

133:                                              ; preds = %121
  %134 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8**
  %135 = load i8*, i8** %134, align 8
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8*
  %137 = select i1 %126, i8* %135, i8* %136
  br i1 %126, label %144, label %138

138:                                              ; preds = %133
  br i1 %55, label %164, label %139

139:                                              ; preds = %138
  %140 = ptrtoint i8* %135 to i64
  %141 = trunc i64 %140 to i8
  %142 = load i8, i8* %54, align 1
  %143 = icmp eq i8 %142, %141
  br i1 %143, label %145, label %160

144:                                              ; preds = %133
  br i1 %55, label %164, label %157

145:                                              ; preds = %139, %152
  %146 = phi i64 [ %149, %152 ], [ %130, %139 ]
  %147 = phi i8* [ %150, %152 ], [ %136, %139 ]
  %148 = phi i8* [ %153, %152 ], [ %54, %139 ]
  %149 = add i64 %146, -1
  %150 = getelementptr inbounds i8, i8* %147, i64 1
  %151 = icmp eq i64 %149, 0
  br i1 %151, label %164, label %152

152:                                              ; preds = %145
  %153 = getelementptr inbounds i8, i8* %148, i64 1
  %154 = load i8, i8* %150, align 1
  %155 = load i8, i8* %153, align 1
  %156 = icmp eq i8 %154, %155
  br i1 %156, label %145, label %160

157:                                              ; preds = %144
  %158 = call i32 @bcmp(i8* %137, i8* %54, i64 %52) #16
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %164, label %160

160:                                              ; preds = %152, %139, %121, %118, %157
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %113, i64 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %161, align 8
  %163 = icmp eq %"struct.std::__1::__hash_node_base"* %162, null
  br i1 %163, label %164, label %112

164:                                              ; preds = %157, %160, %118, %144, %138, %145, %105, %108, %66, %104, %86, %92, %42, %21, %35
  %165 = phi %"struct.std::__1::__hash_node_base"* [ null, %35 ], [ null, %21 ], [ null, %42 ], [ %57, %92 ], [ %57, %105 ], [ null, %108 ], [ null, %66 ], [ %57, %104 ], [ %57, %86 ], [ %113, %145 ], [ %113, %157 ], [ null, %160 ], [ null, %118 ], [ %113, %144 ], [ %113, %138 ]
  ret %"struct.std::__1::__hash_node_base"* %165
}

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal6torque8ToStringIJRA93_KcEEENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEDpOT_(%"class.std::__1::basic_string"* noalias sret, [93 x i8]* dereferenceable(93)) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__1::basic_stringstream", align 8
  %4 = bitcast %"class.std::__1::basic_stringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %4) #16
  call void @_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej(%"class.std::__1::basic_stringstream"* nonnull %3, i32 24)
  %5 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_ostream.base"* %5 to %"class.std::__1::basic_ostream"*
  %7 = getelementptr inbounds [93 x i8], [93 x i8]* %1, i64 0, i64 0
  %8 = call i64 @strlen(i8* %7) #16
  %9 = invoke dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %6, i8* %7, i64 %8)
          to label %10 unwind label %38

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1
  invoke void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %11)
          to label %12 unwind label %40

12:                                               ; preds = %10
  %13 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_stringstream"* %3 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %16 = inttoptr i64 %13 to i8*
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %4, i64 %19
  %21 = bitcast i8* %20 to i64*
  store i64 %15, i64* %21, align 8
  %22 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %23 = bitcast %"class.std::__1::basic_ostream.base"* %5 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %12
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #15
  br label %33

33:                                               ; preds = %12, %30
  %34 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %34) #16
  %35 = bitcast %"class.std::__1::basic_stringstream"* %3 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %35, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #16
  %36 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2
  %37 = bitcast %"class.std::__1::basic_ios.base"* %36 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %37) #16
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %4) #16
  ret void

38:                                               ; preds = %2
  %39 = landingpad { i8*, i32 }
          cleanup
  br label %42

40:                                               ; preds = %10
  %41 = landingpad { i8*, i32 }
          cleanup
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi { i8*, i32 } [ %41, %40 ], [ %39, %38 ]
  %44 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %45 = bitcast %"class.std::__1::basic_stringstream"* %3 to i64*
  store i64 %44, i64* %45, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %47 = inttoptr i64 %44 to i8*
  %48 = getelementptr i8, i8* %47, i64 -24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %4, i64 %50
  %52 = bitcast i8* %51 to i64*
  store i64 %46, i64* %52, align 8
  %53 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %54 = bitcast %"class.std::__1::basic_ostream.base"* %5 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1
  %56 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %55, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 1
  %58 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %42
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #15
  br label %65

65:                                               ; preds = %42, %62
  %66 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %55, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %66) #16
  %67 = bitcast %"class.std::__1::basic_stringstream"* %3 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %67, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #16
  %68 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2
  %69 = bitcast %"class.std::__1::basic_ios.base"* %68 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %69) #16
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %4) #16
  resume { i8*, i32 } %43
}

declare void @_ZN2v88internal6torque14MessageBuilderC1ERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_13TorqueMessage4KindE(%"class.v8::internal::torque::MessageBuilder"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #3

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej(%"class.std::__1::basic_stringstream"*, i32) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  %5 = getelementptr inbounds %"class.std::__1::basic_ios.base", %"class.std::__1::basic_ios.base"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = bitcast %"class.std::__1::basic_stringstream"* %0 to %"class.std::__1::basic_iostream"*
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1
  %9 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %10 = bitcast %"class.std::__1::basic_stringstream"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8**
  %13 = inttoptr i64 %9 to i8*
  %14 = getelementptr i8, i8* %13, i64 -24
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 %16
  %19 = bitcast i8* %18 to i64*
  store i64 %11, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %20, align 8
  %21 = load i8*, i8** %12, align 8
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %17, i64 %24
  %26 = bitcast i8* %25 to %"class.std::__1::ios_base"*
  %27 = bitcast %"class.std::__1::basic_stringbuf"* %8 to i8*
  invoke void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %26, i8* %27)
          to label %28 unwind label %59

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %8, i64 0, i32 0
  %31 = getelementptr inbounds i8, i8* %25, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %25, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1
  %36 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %37 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %39 = inttoptr i64 %36 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %42
  %45 = bitcast i8* %44 to i64*
  store i64 %38, i64* %45, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %46, i64* %10, align 8
  %47 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %17, i64 %51
  %53 = bitcast i8* %52 to i64*
  store i64 %47, i64* %53, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %6, align 8
  invoke void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %30)
          to label %54 unwind label %63

54:                                               ; preds = %28
  %55 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 1
  %57 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 3
  %58 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 32, i1 false)
  store i32 %1, i32* %57, align 8
  ret void

59:                                               ; preds = %2
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  %62 = extractvalue { i8*, i32 } %60, 1
  br label %67

63:                                               ; preds = %28
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = extractvalue { i8*, i32 } %64, 0
  %66 = extractvalue { i8*, i32 } %64, 1
  tail call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* %7, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #16
  br label %67

67:                                               ; preds = %63, %59
  %68 = phi i8* [ %65, %63 ], [ %61, %59 ]
  %69 = phi i32 [ %66, %63 ], [ %62, %59 ]
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %4) #16
  %70 = insertvalue { i8*, i32 } undef, i8* %68, 0
  %71 = insertvalue { i8*, i32 } %70, i32 %69, 1
  resume { i8*, i32 } %71
}

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #9

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #3

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

; Function Attrs: ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  invoke void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0)
          to label %7 unwind label %65

7:                                                ; preds = %3
  %8 = load i8, i8* %6, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %74, label %10

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr i8, i8* %12, i64 -24
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = getelementptr inbounds i8, i8* %17, i64 40
  %19 = bitcast i8* %18 to %"class.std::__1::basic_streambuf"**
  %20 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %19, align 8
  %21 = bitcast i8* %17 to %"class.std::__1::ios_base"*
  %22 = getelementptr inbounds i8, i8* %17, i64 8
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds i8, i8* %1, i64 %2
  %26 = getelementptr inbounds i8, i8* %17, i64 144
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %30, label %45

30:                                               ; preds = %10
  %31 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  invoke void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %21)
          to label %32 unwind label %72

32:                                               ; preds = %30
  %33 = invoke %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE)
          to label %34 unwind label %41

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::locale::facet"* %33 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %33 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = invoke signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32)
          to label %43 unwind label %41

41:                                               ; preds = %34, %32
  %42 = landingpad { i8*, i32 }
          catch i8* null
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  br label %75

43:                                               ; preds = %34
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  %44 = sext i8 %40 to i32
  store i32 %44, i32* %27, align 8
  br label %45

45:                                               ; preds = %43, %10
  %46 = phi i32 [ %44, %43 ], [ %28, %10 ]
  %47 = trunc i32 %46 to i8
  %48 = and i32 %24, 176
  %49 = icmp eq i32 %48, 32
  %50 = select i1 %49, i8* %25, i8* %1
  %51 = invoke %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %20, i8* %1, i8* %50, i8* %25, %"class.std::__1::ios_base"* dereferenceable(136) %21, i8 signext %47)
          to label %52 unwind label %72

52:                                               ; preds = %45
  %53 = icmp eq %"class.std::__1::basic_streambuf"* %51, null
  br i1 %53, label %54, label %74

54:                                               ; preds = %52
  %55 = load i8*, i8** %11, align 8
  %56 = getelementptr i8, i8* %55, i64 -24
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds i8, i8* %16, i64 %58
  %60 = bitcast i8* %59 to %"class.std::__1::ios_base"*
  %61 = getelementptr inbounds i8, i8* %59, i64 32
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 8
  %64 = or i32 %63, 5
  invoke void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %60, i32 %64)
          to label %74 unwind label %70

65:                                               ; preds = %3
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  %68 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %69 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  br label %78

70:                                               ; preds = %54
  %71 = landingpad { i8*, i32 }
          catch i8* null
  br label %75

72:                                               ; preds = %30, %45
  %73 = landingpad { i8*, i32 }
          catch i8* null
  br label %75

74:                                               ; preds = %7, %54, %52
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  br label %90

75:                                               ; preds = %72, %41, %70
  %76 = phi { i8*, i32 } [ %71, %70 ], [ %73, %72 ], [ %42, %41 ]
  %77 = extractvalue { i8*, i32 } %76, 0
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #16
  br label %78

78:                                               ; preds = %75, %65
  %79 = phi i8* [ %16, %75 ], [ %69, %65 ]
  %80 = phi i8** [ %11, %75 ], [ %68, %65 ]
  %81 = phi i8* [ %77, %75 ], [ %67, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  %82 = call i8* @__cxa_begin_catch(i8* %81) #16
  %83 = load i8*, i8** %80, align 8
  %84 = getelementptr i8, i8* %83, i64 -24
  %85 = bitcast i8* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds i8, i8* %79, i64 %86
  %88 = bitcast i8* %87 to %"class.std::__1::ios_base"*
  invoke void @_ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv(%"class.std::__1::ios_base"* %88)
          to label %89 unwind label %91

89:                                               ; preds = %78
  call void @__cxa_end_catch()
  br label %90

90:                                               ; preds = %89, %74
  ret %"class.std::__1::basic_ostream"* %0

91:                                               ; preds = %78
  %92 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %93 unwind label %94

93:                                               ; preds = %91
  resume { i8*, i32 } %92

94:                                               ; preds = %91
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  call void @__clang_call_terminate(i8* %96) #19
  unreachable
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %86, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19)
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %86

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %75

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #18
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #16
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = invoke i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17)
          to label %61 unwind label %68

61:                                               ; preds = %46
  %62 = icmp eq i64 %60, %17
  %63 = load i8, i8* %50, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %66) #15
  br label %67

67:                                               ; preds = %61, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  br i1 %62, label %75, label %86

68:                                               ; preds = %46
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = load i8, i8* %50, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %73) #15
  br label %74

74:                                               ; preds = %68, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  resume { i8*, i32 } %69

75:                                               ; preds = %67, %28
  %76 = sub i64 %10, %18
  %77 = icmp sgt i64 %76, 0
  br i1 %77, label %78, label %85

78:                                               ; preds = %75
  %79 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %80 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %79, align 8
  %81 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %80, i64 12
  %82 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %81, align 8
  %83 = call i64 %82(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %76)
  %84 = icmp eq i64 %83, %76
  br i1 %84, label %85, label %86

85:                                               ; preds = %78, %75
  store i64 0, i64* %13, align 8
  br label %86

86:                                               ; preds = %85, %67, %21, %78, %6
  %87 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %85 ], [ null, %67 ], [ null, %21 ], [ null, %78 ]
  ret %"class.std::__1::basic_streambuf"* %87
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #9

declare void @_ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv(%"class.std::__1::ios_base"*) local_unnamed_addr #3

declare void @__cxa_end_catch() local_unnamed_addr

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #9

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #12

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint noreturn ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { inlinehint ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind }
attributes #17 = { noreturn }
attributes #18 = { builtin }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN2v88internal6torqueL7MessageIJRA93_KcEEENS1_14MessageBuilderENS1_13TorqueMessage4KindEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZN2v88internal6torqueL7MessageIJRA93_KcEEENS1_14MessageBuilderENS1_13TorqueMessage4KindEDpOT_"}
!9 = distinct !{!9, !10, !"_ZN2v88internal6torque5ErrorIJRA93_KcEEENS1_14MessageBuilderEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZN2v88internal6torque5ErrorIJRA93_KcEEENS1_14MessageBuilderEDpOT_"}
!11 = !{i64 0, i64 65}
!12 = distinct !{!12, !5}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEmEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISV_EEEEEEmOT_DpOT0_"}
